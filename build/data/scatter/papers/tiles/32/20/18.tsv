id	title	keywords	abstract	entities	authors	year	journal	doi	fos	area	x	y	ix
7a3cc0ba66c702f10dcd11aa12ea8c6f9274cbc9	linear programming heuristics for the graph isomorphism problem		An isomorphism between two graphs is a bijection between their vertices that preserves the edges. We consider the problem of determining whether two finite undirected weighted graphs are isomorphic, and finding an isomorphism relating them if the answer is positive. In this paper we introduce effective probabilistic linear programming (LP) heuristics to solve the graph isomorphism problem. We motivate our heuristics by showing guarantees under some conditions, and present numerical experiments that show effectiveness of these heuristics in the general case. 1 Graph isomorphism problem 1.1 Problem statement Consider two weighted undirected graphs, each with n vertices labeled 1, . . . , n, described by their adjacency matrices A, Ã ∈ Rn×n, where Aij is the weight on the edge in the first graph between vertices i and j, and zero if there is no edge between vertices i and j (and similarly for Ã). Since the graphs are undirected, the adjacency matrices are symmetric. The two graphs are isomorphic if there is a permutation of the vertices of the first graph that makes the first graph the same as the second. This occurs if and only if there is a permutation matrix P ∈ Rn×n (i.e., a matrix with exactly one entry in each row and column that is one, with the other zero) that satisfies PAP T = Ã. We will say that the permutation matrix P transforms A to Ã if PAP T = Ã, or equivalently, PA = ÃP . The graph isomorphism problem (GIP) is to determine whether such a permutation matrix exists, and to find one if so. GIP can be formulated as the (feasibility) optimization problem find P subject to PA = ÃP P1 = 1, P 1 = 1 Pij ∈ {0, 1}, i, j = 1, . . . , n, (1) with variable P ∈ Rn×n, where 1 is the vector with all entries one. The data for this problem are the adjacency matrices of the two graphs, A and Ã. The constraints on the last two lines	adjacency matrix;experiment;graph (discrete mathematics);graph isomorphism problem;heuristic (computer science);linear programming;mathematical optimization;numerical analysis;optimization problem;password authentication protocol;vertex (geometry)	Reza Takapoui;Stephen P. Boyd	2016	CoRR		mathematical optimization;combinatorics;discrete mathematics;graph property;graph canonization;subgraph isomorphism problem;mathematics;graph isomorphism;isomorphism;induced subgraph isomorphism problem;maximum common subgraph isomorphism problem;graph homomorphism	Theory	25.678965704883595	24.16892916778513	121194
1eeb85014348bd1d52c7dfdb71c93e73af180ba1	low distortion embeddings for edit distance	metric space;edit distance;communication complexity;efficient implementation;low distortion embeddings;nearest neighbor search;metric spaces	We show that 0,1<sup>d</sup> endowed with edit distance embeds into <i>l</i><inf>1</inf> with distortion 2<sup>O</sup>(√log <i>d</i>log log <i>d</i>). We further show efficient implementations of the embedding that yield solutions to various computational problems involving edit distance. These include sketching, communication complexity, nearest neighbor search. For all these problems, we improve upon previous bounds.	communication complexity;computational problem;distortion;edit distance;nearest neighbor search	Rafail Ostrovsky;Yuval Rabani	2005		10.1145/1060590.1060623	combinatorics;discrete mathematics;topology;edit distance;metric space;mathematics;nearest neighbor search;jaro–winkler distance	Theory	27.7137074063789	21.05847432665619	121614
50d016f17534e4b99c454c9ead24b4bc98cac71f	a framework for eth-tight algorithms and lower bounds in geometric intersection graphs		We give an algorithmic and lower-bound framework that facilitates the construction of subexponential algorithms and matching conditional complexity bounds. It can be applied to a wide range of geometric intersection graphs (intersections of similarly sized fat objects), yielding algorithms with running time 2<sup><i>O</i>(<i>n</i><sup>1−1/<i>d</i></sup>)</sup> for any fixed dimension <i>d</i>≥ 2 for many well known graph problems, including Independent Set, <i>r</i>-Dominating Set for constant <i>r</i>, and Steiner Tree. For most problems, we get improved running times compared to prior work; in some cases, we give the first known subexponential algorithm in geometric intersection graphs. Additionally, most of the obtained algorithms work on the graph itself, i.e., do not require any geometric information. Our algorithmic framework is based on a weighted separator theorem and various treewidth techniques.   The lower-bound framework is based on a constructive embedding of graphs into <i>d</i>-dimensional grids, and it allows us to derive matching 2<sup>Ω(<i>n</i><sup>1−1/<i>d</i></sup>)</sup> lower bounds under the Exponential Time Hypothesis even in the much more restricted class of <i>d</i>-dimensional induced grid graphs.	algorithm;approximation algorithm;conjunctive normal form;connected dominating set;cyclomatic complexity;exptime;exponential time hypothesis;fat object;feedback vertex set;graph (discrete mathematics);hamiltonian path;incidence matrix;independent set (graph theory);kolmogorov complexity;steiner tree problem;time complexity;treewidth;vertex (graph theory);vertex cover	Mark de Berg;Hans L. Bodlaender;Sándor Kisfaludi-Bak;Dániel Marx;Tom C. van der Zanden	2018		10.1145/3188745.3188854	grid;combinatorics;discrete mathematics;mathematics;independent set;exponential time hypothesis;dominating set;treewidth;algorithm;steiner tree problem;embedding;graph	Theory	25.748333393844824	21.75092180235273	122038
158b51fa243e41f8377415b6d55cbb1a05221c55	clustering on k-edge-colored graphs	approximation algorithms;coloring;clustering	We study theMax k-colored clustering problem, where, given an edge-colored graph with k colors, we seek to color the vertices of the graph so as to find a clustering of the vertices maximizing the number (or the weight) of matched edges, i.e. the edges having the same color as their extremities. We show that the cardinality problem is NP-hard even for edge-colored bipartite graphs with a chromatic degree equal to two and k ≥ 3. Our main result is a constant approximation algorithm for the weighted version of the Max k-colored clustering problem which is based on a rounding of a natural linear programming relaxation. For graphs with chromatic degree equal to two, we improve this ratio by exploiting the relation of our problem with the Max 2-and problem. We also present a reduction to the maximum-weight independent set (IS) problem in bipartite graphs which leads to a polynomial time algorithm for the case of two colors.	approximation algorithm;cluster analysis;color;graph coloring;independent set (graph theory);linear programming relaxation;matching (graph theory);np-hardness;p (complexity);rounding;vertex (geometry)	Eric Angel;Evripidis Bampis;Alexander V. Kononov;Dimitris Paparas;Emmanouil Pountourakis;Vassilis Zissimopoulos	2016	Discrete Applied Mathematics	10.1016/j.dam.2016.04.017	1-planar graph;correlation clustering;mathematical optimization;brooks' theorem;combinatorics;discrete mathematics;independent set;bipartite graph;longest path problem;hopcroft–karp algorithm;metric dimension;edge coloring;graph coloring;mathematics;cluster analysis;chordal graph;approximation algorithm;matching	Theory	24.79589347060325	20.79002821844233	122197
1b7a4e194b66ab2f8134f84c9649a0b6fe140cdc	an exact algorithm for the discrete chromatic art gallery problem		Recently introduced in [1], the Chromatic Art Gallery Problem (CAGP) is related to the well known Art Gallery Problem to the extent that given a polygon P, a set of guards within P that satisfies a particular property is sought. Define a proper coloring of a guard set that covers the polygon as a color assignment in which any two guards receive different colors whenever their visibility regions intersect. The CAGP aims to find among the sets of guards that cover P one that admits a proper coloring of smallest cardinality. In this paper, we present an Integer Programming formulation for a discrete version of the CAGP and introduce techniques that allow us to attain proven optimal solutions for a variety of instances of the problem. Experiments were conducted considering vertex guards, but the method clearly works for any discrete set of guard candidates that guarantee full polygon coverage. Having been absent from the literature so far, experimental results are also discussed showing that this approach is of practical value.	art gallery problem;exact algorithm	Maurício J. O. Zambon;Pedro Jussieu de Rezende;Cid C. de Souza	2014		10.1007/978-3-319-07959-2_6	mathematical optimization;combinatorics;discrete mathematics;visibility polygon;mathematics;art gallery problem;algorithm	Vision	25.22364884364291	21.69132276906219	122298
59169e22f08cd1230bd73c50c7baca30b38f926b	game total domination for cycles and paths	domination game;path;total domination number;cycle	In this paper, we continue the study of the recently introduced total domination game in graphs. A vertex u in a graph G totally dominates a vertex v if u is adjacent to v in G. A total dominating set of G is a set S of vertices of G such that every vertex of G is totally dominated by a vertex in S. The total domination game played on G consists of two players, named Dominator and Staller, who alternately take turns choosing vertices of G such that each chosen vertex totally dominates at least one vertex not totally dominated by the vertices previously chosen. Dominator’s goal is to totally dominate the graph as fast as possible, and Staller wishes to delay the process as much as possible. The game total domination number, γtg(G), of G is the number of vertices chosen when Dominator starts the game and both players play optimally. The Staller-start game total domination number, γ ′ tg(G), of G is the number of vertices chosenwhen Staller starts the gameandboth players play optimally. In this paper we determine γtg(G) and γ ′ tg(G) when G is a cycle or a path. In particular, we show that for a cycle Cn on n ≥ 3 vertices, γtg(Cn) = ⌊ 2n+1 3 ⌋ − 1 when n ≡ 4 (mod 6) and γtg(Cn) = ⌊ 2n+1 3 ⌋ otherwise. Further, γ ′ tg(Cn) = ⌊ 2n 3 ⌋ − 1 when n ≡ 2 (mod 6) and γ ′ tg(Cn) = ⌊ 2n 3 ⌋ otherwise. For a path Pn on n ≥ 3 vertices, we show that γ ′ tg(Pn) = ⌈ 2n 3 ⌉. Further, γtg(Pn) = ⌊ 2n 3 ⌋ when n ≡ 5 (mod 6) and ⌈ 2n 3 ⌉ otherwise. © 2016 Elsevier B.V. All rights reserved.	carrier-to-noise ratio;cycle (graph theory);dominating set;dominator (graph theory);vertex (geometry);vertex (graph theory)	Paul Dorbec;Michael A. Henning	2016	Discrete Applied Mathematics	10.1016/j.dam.2016.03.014	combinatorics;discrete mathematics;mathematics;path	Theory	28.826564413789168	24.545293645172134	122808
c0dba74e9b154242ae858d1c512b81925139258a	randomized graph data-structures for approximate shortest paths		Amphibious vehicle with lateral auxiliary floating elements which are of rigid construction and pivotable about joints at the upper lateral edge of the floating body of the vehicle and are linked on only at their two ends and equipped there with spacing members relative to the joints, which when the lateral floating elements are tilted upwardly provide a space over the deck of the main floating body which they cover which is of the extent thereof in horizontal direction and of a height determined by the spacing elements.	graph (abstract data type);randomized algorithm;shortest path problem	Surender Baswana;Sandeep Sen	2004		10.1201/9781420035179.ch38	euclidean shortest path;geometry;line graph;shortest path faster algorithm;distance;path (graph theory);butterfly graph;geology;block graph;deck	Theory	30.746323508497024	24.522447602666688	123660
77a835b889f3dc19221b030a7b91d7d403a0e6a0	on the intersection graph of the disks with diameters the sides of a convex n-gon		Given a convex n-gon, we can draw n disks (called side disks) where each disk has a different side of the polygon as diameter and the midpoint of the side as its center. The intersection graph of such disks is the undirected graph with vertices the n disks and two disks are adjacent if and only if they have a point in common. Such a graph was introduced by Huemer and Pérez-Lantero in 2016, proved to be planar and Hamiltonian. In this paper we study further combinatorial properties of this graph. We prove that the treewidth is at most 3, by showing an O(n)-time algorithm that builds a tree decomposition of width at most 3, given the polygon as input. This implies that we can construct the intersection graph of the side disks in O(n) time. We further study the independence number of this graph, which is the maximum number of pairwise disjoint disks. The planarity condition implies that for every convex n-gon we can select at least dn/4e pairwise disjoint disks, and we prove that for every n ≥ 3 there exist convex n-gons in which we cannot select more than this number. Finally, we show that our class of graphs includes all outerplanar Hamiltonian graphs except the cycle of length four, and that it is a proper subclass of the planar Hamiltonian graphs.	algorithm;convex function;disk storage;existential quantification;gon;graph (discrete mathematics);hamiltonian (quantum mechanics);independent set (graph theory);planar (computer graphics);planar graph;tree decomposition;treewidth	Luis H. Herrera;Pablo Pérez-Lantero	2014	CoRR		intersection graph;polyhedral graph;intersection number (graph theory);combinatorics;circle graph;unit disk graph;distance-hereditary graph;mathematics;string graph;topology;convex polygon	Theory	30.818986826875445	24.817777348348795	123958
d9ccbb06b5546c2c2c5fdbbce5b2dc0cbe6bdc7b	algorithms for packing two circles in a convex polygon	convex polygon	We consider algorithms for packing two circles in a given n-vertex convex polygon. The first algorithm outputs a pair of equal non-overlapping circles of maximum radius and has running time O(n). The second algorithm outputs a pair of non-overlapping circles whose sum of radii is maximum and has running time O(n 2).	algorithm;set packing	Prosenjit Bose;Jurek Czyzowicz;Evangelos Kranakis;Anil Maheshwari	1998		10.1007/978-3-540-46515-7_8	internal and external angle;krein–milman theorem;complex polygon;simple polygon;rectilinear polygon;convex hull;star-shaped polygon;polygon;equiangular polygon;affine-regular polygon;regular polygon;convex set;monotone polygon;midpoint polygon;polygon covering;polygon triangulation;pick's theorem;biggest little polygon;equilateral polygon	HCI	29.91677931231035	19.20472402378968	123974
233eac93a39f39a88d281f6eb304552662465701	graph sharing games: complexity and connectivity	k	We study the following combinatorial game played by two players, Alice and Bob, which generalizes the Pizza game considered by Brown, Winkler and others. Given a connected graph G with nonnegative weights assigned to its vertices, the players alternately take one vertex of G in each turn. The first turn is Alice’s. The vertices are to be taken according to one (or both) of the following two rules: (T) the subgraph of G induced by the taken vertices is connected during the whole game, (R) the subgraph of G induced by the remaining vertices is connected during the whole game. We show that if rules (T) and/or (R) are required then for every ε > 0 and for every k ≥ 1 there is a k-connected graph G for which Bob has a strategy to obtain (1− ε) of the total weight of the vertices. This contrasts with the original Pizza game played on a cycle, where Alice is known to have a strategy to obtain 4/9 of the total weight. We show that the problem of deciding whether Alice has a winning strategy (i.e., a strategy to obtain more than half of the total weight) is PSPACE-complete if condition (R) or both conditions (T) and (R) are required. We also consider a game played on connected graphs (without weights) where the first player who violates condition (T) or (R) loses the game. We show that deciding who has the winning strategy is PSPACE-complete. ∗The research was supported by the project CE-ITI (GACR P2020/12/G061) of the Czech Science Foundation and by the grant SVV-2010-261313 (Discrete Methods and Algorithms). Viola Mészáros was also partially supported by OTKA Grant K76099 and by the grant no. MSM0021620838 of the Ministry of Education of the Czech Republic. Josef Cibulka and Rudolf Stolař were also supported by the Czech Science Foundation under the contract no. 201/09/H057. Rudolf Stolař was also supported by the Grant Agency of the Charles University, GAUK project number 66010.	algorithm;alice and bob;complexity;connectivity (graph theory);information trust institute;josef čapek;k-vertex-connected graph;pspace-complete;rudolf berghammer;vertex (geometry);viola–jones object detection framework	Josef Cibulka;Jan Kyncl;Viola Mészáros;Rudolf Stolar;Pavel Valtr	2013	Theor. Comput. Sci.	10.1016/j.tcs.2012.12.029	combinatorics;discrete mathematics;connected component;game tree;mathematics;k-vertex-connected graph;algorithm	Theory	27.966659920285338	24.273737423257522	124555
d1319651273544067816f4f7156fe5a94c64ffc0	determining the l(2, 1)l(2, 1)-span in polynomial space	l 2 1;1 labeling;polynomial space;channel assignment problem;exact algorithm;l 2;red black graph	A k-L(2, 1)-labeling of a graph is a function from its vertex set into the set {0, . . . , k}, such that the labels assigned to adjacent vertices differ by at least 2, and labels assigned to vertices of distance 2 are different. It is known that finding the smallest k admitting the existence of a k-L(2, 1)labeling of any given graph is NP-Complete. In this paper we present an algorithm for this problem, which works in time O((9 + ǫ)n) and polynomial memory, where ǫ is an arbitrarily small positive constant. This is the first exact algorithm for L(2, 1)-labeling problem with time complexity O(cn) for some constant c and polynomial space complexity.	dspace;exact algorithm;karp's 21 np-complete problems;neighbourhood (graph theory);pspace;polynomial;time complexity;vertex (graph theory)	Konstanty Junosza-Szaniawski;Jan Kratochvíl;Mathieu Liedloff;Pawel Rzazewski	2013	Discrete Applied Mathematics	10.1016/j.dam.2013.03.027	graph power;integral graph;mathematical optimization;factor-critical graph;combinatorics;discrete mathematics;independent set;graph bandwidth;level structure;graph center;pspace;graph labeling;degree;metric k-center;distance-regular graph;hypercube graph;cycle graph;vertex;path graph;mathematics;tutte polynomial;wheel graph;complement graph;neighbourhood;algorithm;strength of a graph	Theory	25.17990002637698	24.40834903499388	125166
052af7a1de2b2c9b17d3453463a47668cf43a055	an extension of a balanced flow in a network	max flow min cut;graph theory;balanced flow	We say x is an element of a network N , if x is an edge or a vertex of N . We consider a flow network N in which capacities and distribution parameters are given on the elements in N . A d-balanced flow is defined as a flow such that the flow value at each element x is not more than d(x) ·f , where f is the total amount of the flow and d(x) is the given distribution parameter of x. We give a max-flow min-cut theorem for this d-balanced flow. Then we show a method for evaluating the maximum value of d-balanced flow between a pair of vertices. The algorithm gives the maximum value of d-balanced flow s to t in N with at most 2|X | evaluations of maximum flow in a network, where X is the element set of N .	algorithm;flow network;max-flow min-cut theorem;maxima and minima;maximum flow problem;minimum cut;vertex (graph theory)	Wataru Kishimoto	2013	Electronic Notes in Discrete Mathematics	10.1016/j.endm.2013.05.082	mathematical optimization;combinatorics;discrete mathematics;mathematics	Theory	26.214508413825712	21.292816241398103	125814
804372aa28703fe034791d4c38c7d5e3c6bc67dd	proving np-completeness using bounded tiling	proving np-completeness;bounded tiling		np-completeness	Bogdan S. Chlebus	1987	Elektronische Informationsverarbeitung und Kybernetik		arrangement of lines;combinatorics;discrete mathematics	Logic	30.013016628802845	23.718919838706455	126225
498a1a8d991f7ad0f30dd61428a270ba091f3843	determining contractibility of curves	computational geometry;time use;linear programming;combinatorial optimization;randomized incremental algorithms	In this paper we will present an algorithm to’ determine whether a curve on a triangulated 2-manifold is contractible ( or O-homotopic) or not, that is whether it can be contracted to a point or not. The algorithm will work in O ( g2k + gn) time, using O ( g2k + gn) storage, where g is the genus of the surface, n the number of triangles of the surfaces, and k the number of edges of the curve. We will also give an algorithm which constructs the contraction if the curve is O-homotopic. This algorithm runs in O ( g2kn) time and storage. The algorithm can obviously be applied to determine whether two curves are homotopic, and if so, to construct the homotopy.	algorithm;genus (mathematics)	Haijo Schipper	1992		10.1145/142675.142749	mathematical optimization;combinatorics;discrete mathematics;computational geometry;combinatorial optimization;linear programming;mathematics	Theory	30.613430145529072	19.61631272301974	126252
c78fbd398e57ff15dfcf7cce598b333f08bbec0e	perturbation resilient clustering for k-center and related problems via lp relaxations		We consider clustering in the perturbation resilience model that has been studied since the work of Bilu and Linial [16] and Awasthi, Blum and Sheffet [7]. A clustering instance I is said to be α-perturbation resilient if the optimal solution does not change when the pairwise distances are modified by a factor of α and the perturbed distances satisfy the metric property — this is the metric perturbation resilience property introduced in [3] and a weaker requirement than prior models. We make two high-level contributions. • We show that the natural LP relaxation of k-center and asymmetric k-center is integral for 2-perturbation resilient instances. We belive that demonstrating the goodness of standard LP relaxations complements existing results [11, 3] that are based on new algorithms designed for the perturbation model. • We define a simple new model of perturbation resilience for clustering with outliers. Using this model we show that the unified MST and dynamic programming based algorithm proposed in [3] exactly solves the clustering with outliers problem for sevearl common center based objectives (like k-center, k-means, k-median) when the instances is 2-perturbation resilient. We further show that a natural LP relxation is integral for 2-perturbation resilient instances of k-center with outliers. ∗Department of Computer Science, University of Illinois, Urbana-Champaign, IL 61801. Email: {chekuri, sgupta49}@illinois.edu. Work on this paper supported in part by NSF grants CCF-1319376 and CCF-1526799. 1 ar X iv :1 80 6. 04 20 2v 1 [ cs .D S] 1 1 Ju n 20 18	algorithm;blum axioms;cluster analysis;dynamic programming;high- and low-level;k-means clustering;lagrangian relaxation;linear programming relaxation;metric k-center;perturbation theory;theory of computation	Chandra Chekuri;Shalmoli Gupta	2018		10.4230/LIPIcs.APPROX-RANDOM.2018.9	discrete mathematics;cluster analysis;linear programming relaxation;outlier;dynamic programming;mathematics;pairwise comparison;perturbation (astronomy)	Theory	25.095824793629937	18.808908398725812	126488
90ef7b539af4fb29a8d9c75cf6ed753a1e663711	computing opaque interior barriers à la shermer	004;opaque barrier approximation algorithm isoperimetric inequality	The problem of finding a collection of curves of minimum total length that meet all the lines intersecting a given polygon was initiated by#R##N#Mazurkiewicz in 1916. Such a collection forms an opaque barrier for the polygon. In 1991 Shermer proposed an exponential-time algorithm that computes an interior-restricted barrier made of segments for any given convex n-gon. He conjectured that the barrier found by his algorithm is optimal, however this was refuted recently by Provan et al. Here we give a Shermer like algorithm that computes an interior polygonal barrier whose length is at most 1.7168 times the optimal and that runs in O(n) time. As a byproduct, we also deduce upper and lower bounds on the approximation ratio of Shermer's algorithm.	linear algebra	Adrian Dumitrescu;Minghui Jiang;Csaba D. Tóth	2014		10.4230/LIPIcs.APPROX-RANDOM.2014.128	mathematical optimization;combinatorics;mathematics;geometry	Crypto	30.68003682292726	19.584446224397933	127184
0ddc35569e00ea3b6242760e556f56397a5d9c07	graph drawing by classical multidimensional scaling: new perspectives	inproceedings	With shortest-path distances as input, classical multidimensional scaling can be regarded as a spectral graph drawing algorithm, and recent approximation techniques make it scale to very large graphs. In comparison with other methods, however, it is considered inflexible and prone to degenerate layouts for some classes of graphs. We want to challenge this belief by demonstrating that the method can be flexibly adapted to provide focus+context layouts. Moreover, we propose an alternative instantiation that appears to be more suitable for graph drawing and prevents certain degeneracies.	algorithm;approximation;degenerate energy levels;graph drawing;image scaling;multidimensional scaling;shortest path problem;universal instantiation	Mirza Klimenta;Ulrik Brandes	2012		10.1007/978-3-642-36763-2_6	combinatorics;discrete mathematics;computer science;theoretical computer science;force-directed graph drawing;mathematics;algorithm	ML	30.19839705317075	23.56309127772212	127647
05c7aa5a97ba166cb69612972495463fd832f380	minimum many to many matchings for computing the distance between two sequences	dynamic programming;many to many matching;music theory;bipartite graph	Motivated by a problem in music theory of measuring the distance between chords and scales we consider algorithms for obtaining a minimum-weight many-to-many matching between two sets of points on the real line. Given sets A and B, we want to find the best rigid translation of B and a many-to-many matching that minimizes the sum of the squares of the distances between matched points. We provide a discrete algorithm that solves this continuous optimization problem, and discuss other related matters.	algorithm;best, worst and average case;computation;computational geometry;continuous optimization;digraphs and trigraphs;godfried toussaint;iteration;iterative method;linear algebra;many-to-many;matching (graph theory);mathematical optimization;np-hardness;optimization problem;procedural generation;time complexity;unified model;weatherstar	David Rappaport;Godfried T. Toussaint;Mustafa Mohamad	2011	Graphs and Combinatorics	10.1007/s00373-014-1467-4	mathematical optimization;combinatorics;discrete mathematics;bipartite graph;3-dimensional matching;dynamic programming;music theory;mathematics	ML	26.65929011878465	19.238925160092222	127714
b970c981f06c5c4fa7f5327a9fc6d1bf3087173f	long non-crossing configurations in the plane	total length;spanning tree;hamiltonian path	We study some geometric maximization problems in theEuclidean plane under the non-crossing constraint. Given a setV of2n points in general position in theplane, we investigate the following geometric configurations usingstraight-line segments and the Euclidean norm: (i) longest non-crossingmatching, (ii) longest non-crossing hamiltonian path, (iii) longestnon-crossing spanning tree. We propose simple and efficient algorithmsto approximate these structures within a constant factor of optimality.Somewhat surprisingly, we also show that our bounds are within aconstant factor of optimality even without the non-crossing constraint.For instance, we give an algorithm to compute a non-crossing matchingwhose total length is at least 2/π of the longest (possiblycrossing) matching, and show that the ratio 2/π between thenon-crossing and crossing matching is the best possible. Perhaps due totheir utter simplicity, our methods also seem more general and amenableto applications in other similar contexts.	approximation algorithm;expectation–maximization algorithm;file spanning;hamiltonian path;longest increasing subsequence;spanning tree	Noga Alon;Sridhar Rajagopalan;Subhash Suri	1993		10.1145/160985.161145	hamiltonian path;mathematical optimization;combinatorics;spanning tree;mathematics;geometry	Theory	28.65474742606088	20.421792318030054	127737
0e5ffcfc7e0c49d9bca55a5a8ad2b503f92470f8	drawing recurrent hierarchies		Directed graphs are generally drawn as level drawings using the hierarchical approach. Such drawings are constructed by a framework of algorithms which operates in four phases: cycle removal, leveling, crossing reduction, and coordinate assignment. However, there are situations where cycles should be displayed as such, e. g., distinguished cycles in the biosciences and scheduling processes repeating in a daily or weekly turn. In their seminal paper on hierarchical drawings Sugiyama et al. [31] also introduced recurrent hierarchies. This concept supports the drawing of cycles and their unidirectional display. However, it had not been investigated. In this paper we complete the cyclic approach and investigate the coordinate assignment phase. The leveling and the crossing reduction for recurrent hierarchies have been studied in the companion papers [3, 4]. We provide an algorithm which runs in linear time and constructs an intermediate drawing with at most two bends per edge and aligned edge segments in an area of quadratic width times the preset number of levels height. This area bound is optimal for such drawings. Our approach needs new techniques for solving cyclic dependencies, such as skewing edges and cutting components. The drawings can be transformed into 2D drawings displaying all cycles counterclockwise around a center and into 3D drawings winding the cycles around a cylinder. Submitted: October 2010 Reviewed: March 2011 Revised: May 2011 Accepted: December 2011 Final: January 2012 Published: January 2012 Article type: Regular paper Communicated by: M. Kaufmann Supported in part by the Deutsche Forschungsgemeinschaft (DFG), grant Br835/15-1. E-mail addresses: bachmaier@fim.uni-passau.de (Christian Bachmaier) brandenb@informatik.uni-passau.de (Franz J. Brandenburg) brunner@fim.uni-passau.de (Wolfgang Brunner) fueloep@cipsoft.com (Raymund Fülöp) 152 Bachmaier et al. Drawing Recurrent Hierarchies	algorithm;cycle (graph theory);cylinder-head-sector;data compaction;extensibility;franz lisp;german research centre for artificial intelligence;graph drawing;procedural generation;quadratic function;recurrent neural network;scheduling (computing);slope number;time complexity;vtk;vertex (geometry)	Christian Bachmaier;Franz-Josef Brandenburg;Wolfgang Brunner;Raymund Fülöp	2012	J. Graph Algorithms Appl.		combinatorics;mathematics;algorithm	AI	27.65763551568646	22.75865787582356	127970
2e6de552d1ec4e9f065b6f763391239d5d7b9aff	induced embeddings into hamming graphs		Let d be a positive integer. Can a given graph G be realized in R so that vertices are mapped to distinct points, two vertices being adjacent if and only if the corresponding points lie on a common line that is parallel to some axis? Graphs admitting such realizations have been studied in the literature for decades under different names. Peterson asked in [Discrete Appl. Math., 2003] about the complexity of the recognition problem. While the two-dimensional case corresponds to the class of line graphs of bipartite graphs and is well-understood, the complexity question has remained open for all higher dimensions. In this paper, we answer this question. We establish the NP-completeness of the recognition problem for any fixed dimension, even in the class of bipartite graphs. To do this, we strengthen a characterization of induced subgraphs of 3-dimensional Hamming graphs due to Klavžar and Peterin. We complement the hardness result by showing that for some important classes of perfect graphs – including chordal graphs and distance-hereditary graphs – the minimum dimension of the Euclidean space in which the graph can be realized, or the impossibility of doing so, can be determined in linear time. 1998 ACM Subject Classification G.2.2 Graph Theory, F.2.2 Nonnumerical Algorithms and Problems	apache axis;graph theory;line graph;np-completeness;peterson's algorithm;time complexity;vertex (geometry);window function	Martin Milanic;Peter Mursic;Marcelo Mydlarz	2017		10.4230/LIPIcs.MFCS.2017.28	computer science;combinatorics;discrete mathematics;hamming graph	Theory	26.849011232460633	24.76240275919463	128521
9ea32a2bdcbdd60fb365745f16c74bc9df8d7306	indecomposable coverings with concave polygons	plane;multiple coverings;sensor network;sensor networks	We show that for any concave polygon that has no parallel sides and for any k, there is a k-fold covering of some point set by the translates of this polygon that cannot be decomposed into two coverings. Moreover, we give a complete classification of open polygons with this property. We also construct for any polytope (having dimension at least three) and for any k, a k-fold covering of the space by its translates that cannot be decomposed into two coverings.	concave function	Dömötör Pálvölgyi	2010	Discrete & Computational Geometry	10.1007/s00454-009-9194-y	combinatorics;wireless sensor network;topology;mathematics;geometry;polygon covering	Theory	31.480503842573526	23.950681794999706	128598
337ce53b37b13ba8bd1b07df12eda2407f06522c	computing the set of all distant horizons of a terrain	piecewise linear;horizons;randomized algorithm;orthographic views	We study the problem of computing the set of all distant horizons of a terrain, represented as either: the set of all edges that appear in the set of all distant horizons; the connected sets in the union of all points that appear in the set of all distant horizons (the set of edge fragments); or a search structure to efficiently calculate the edge fragments or edges on a distant horizon from a particular viewing direction. We describe a randomized algorithm that can be used to solve all three forms of the problem with an expected run time of O(n ) for any > 0 where n is the number of edges in the piecewise linear terrain. We show that solving either of the first two versions of the problem is 3SUM hard, and we also construct a terrain with a single local maxima and a quadratic number of edge fragments in the set of all distant horizons, showing that our solution to the second version of the problem is essentially optimal.	3sum;maxima and minima;piecewise linear continuation;randomized algorithm;run time (program lifecycle phase);viewing cone	William S. Evans;Daniel W. Archambault;David G. Kirkpatrick	2004		10.1142/S0218195905001841	mathematical optimization;combinatorics;piecewise linear function;mathematics;geometry;orthographic projection;randomized algorithm	Theory	31.356364059279127	18.7916693691285	129838
0f76b9ddfea8698a0073e1b185fdb599f6fc43bc	size competitive meshing without large angles	line graph;competitive ratio	We present a new meshing algorithm for the plane, Overlay Stitch Meshing (OSM), that accepts as input an arbitrary Planar Straight Line Graph and produces a triangulation with all angles smaller than 170◦. The output triangulation has size that is competitive with any optimal size mesh having bounded largest angle. The competitive ratio is O(log(L/s)) where L and s are respectively the largest and smallest features in the input. OSM runs in O(n log(L/s) + m) time/work where n is the input size and m is the output size. The algorithm first uses Sparse Voronoi Refinement to compute a quality mesh of the input points alone. This triangulation is then combined with the input edges to give the final mesh.	asymptotically optimal algorithm;best, worst and average case;competitive analysis (online algorithm);image stitching;information;line graph;mesh networking;openstreetmap;planar straight-line graph;sparse;steiner tree problem;surround sound;unstructured grid	Gary L. Miller;Todd Phillips;Don Sheehy	2007		10.1007/978-3-540-73420-8_57	competitive analysis;combinatorics;computer science;mathematics;geometry;line graph	Theory	29.535794588034946	20.686751103149643	130860
341d44053b6dd1ebdebf92c8b103b9edc00f2278	adaptive point location in planar convex subdivisions		We present a planar point location structure for a convex subdivision S. Given a query sequence of length m, the total running time is O(OPT + m log log n + n), where n is the number of vertices in S and OPT is the minimum time required by any linear decision tree for answering planar point location queries in S to process the same query sequence. The running time includes the preprocessing time. Therefore, for m ≥ n, our running time is only worse than the best possible bound by O(log log n) per query, which is much smaller than the O(log n) query time offered by a worst-case optimal planar point location structure.	best, worst and average case;decision tree model;point location;preprocessor;subdivision surface;time complexity	Siu-Wing Cheng;Man-Kit Lau	2017	Int. J. Comput. Geometry Appl.	10.1142/S0218195917600019	convex combination;convex set	Theory	29.92419265930554	18.82180924820109	131556
f3895b47baebb982a127d123d8ed669f988b071a	when does a random graph have constant cop number?		In this paper, we study the vertex pursuit game of Cops and Robbers where cops try to capture a robber loose on the vertices of a graph. The minimum number of cops required to win on a given graph G is the cop number of G. We present asymptotic results for the game of Cops and Robbers played on a random graph G(n, p) focusing on the case when the cop number does not grow with the size of a graph. A few open problems are discussed.	graph coloring;pursuit-evasion;random graph	Pawel Pralat	2010	Australasian J. Combinatorics			Theory	28.757442243871058	24.229020178706097	131895
58e91bf6d3e79843a4e5cbdd1b5204be02ac9e19	counting simple polygonizations of planar point sets		Given a finite planar point set, we consider all possible spanning cycles whose straight line realizations are crossing-free – such cycles are also called simple polygonizations – and we are interested in the number of such simple polygonizations a set of N points can have. While the minumum number over all point configurations is easy to obtain – this is 1 for points in convex position –, the maximum seems to be more involved. M. Newborn and W.O.J. Moser were the first to ask the question around 1980 and they gave first evidence that this number has to be significantly less than the overall number (N − 1)!/2 of all spanning cycles. In 2000 A. Garcia, M. Noy and J. Tejel describe points sets that have as many as Ω(4.65) simple polygonizations, no improvement on this end has been reported since then. Despite of several improvements on the upper bound over the years, the currently best upper bound of O(54.6) (recent joint work with A. Sheffer and M. Sharir) leaves obviously a big gap to be closed. We report on the history of the problem and show how it connects to counting triangulations and crossing-free perfect matchings, and how Kasteleyn’s algebraic method for counting perfect matchings in planar graphs enters the picture. Basicially nothing is known for related algorithmic questions (determining the number of simple polygonizations for a given point set, enumerating all simple polygonizations).	file spanning;moser spindle;planar graph	Emo Welzl	2011			combinatorics;discrete mathematics;line (geometry);algebraic number;computer science;nothing;planar graph;upper and lower bounds;planar;convex position	Theory	31.259980395731397	20.988342783722988	132356
11aaefb91614548332be3dc1f9715e72ca6aa0f8	a nonlinear approach to dimension reduction	information spreading;randomized algorithms;dimension reduction;computational geometry;distributed computing;doubling dimension;functional analysis;snowflake embedding;leader election;weak conductance;data structure;nonlinear embedding	The <i>l</i><sub>2</sub> flattening lemma of Johnson and Lindenstrauss [JL84] is a powerful tool for dimension reduction. It has been conjectured that the target dimension bounds can be refined and bounded in terms of the intrinsic dimensionality of the data set (for example, the doubling dimension). One such problem was proposed by Lang and Plaut [LP01] (see also [GKL03, Mat02, ABN08, CGT10]), and is still open. We prove another result in this line of work:  <i>The snowflake metric d</i><sup>1/2</sup> <i>of a doubling set S ⊂ l</i><sub>2</sub> <i>can be embedded with arbitrarily low distortion into l</i><sup><i>D</i></sup><sub>2</sub>, <i>for dimension D that depends solely on the doubling constant of the metric</i>.  In fact, the target dimension is polylogarithmic in the doubling constant. Our techniques are robust and extend to the more difficult spaces <i>l</i><sub>1</sub> and <i>l</i><sub>∞</sub>, although the dimension bounds here are quantitatively inferior than those for <i>l</i><sub>2</sub>.	dimensionality reduction;distortion;embedded system;period-doubling bifurcation;polylogarithmic function;robustness (computer science)	Lee-Ad Gottlieb;Robert Krauthgamer	2011	Discrete & Computational Geometry	10.1007/s00454-015-9707-9	inductive dimension;functional analysis;sufficient dimension reduction;correlation dimension;combinatorics;dimension function;discrete mathematics;dimension theory;topology;data structure;effective dimension;computational geometry;computer science;hausdorff dimension;packing dimension;leader election;mathematics;geometry;randomized algorithm;complex dimension;minkowski–bouligand dimension;equilateral dimension;dimensionality reduction	Theory	27.69166961088849	21.42434875157129	132650
ba02ffac3baa00e5d6aa21282eb9f1f2950f8b12	layout area of the hypercube		In this paper we study the square grid area required for laying out H l , the Boolean hypercube of N = 2 l vertices. It is shown that this area is 4 9 N 2 + o(N 2). We describe a layout which occupies this much area and prove that no layout of less area exists.	square tiling	Shimon Even;Roni Kupershtok	2003	Journal of Interconnection Networks	10.1142/S0219265903000945	combinatorics;computer science;theoretical computer science	EDA	30.687218640293477	23.434337641400834	133307
8feadfd2d2d93e44017245912bb891e924fe0394	euclidean movement minimization	approximation algorithms;np hardness;movement minimization	We consider a class of optimization problems called movement minimization on euclidean plane. Given a set of nodes on the plane, the aim is to achieve some specific property by minimum movement of the nodes. We consider two specific properties, namely the connectivity (Con) and realization of a given topology (Topol). By minimum movement, we mean either the sum of all movements (Sum) or the maximum movement (Max). We obtain several approximation algorithms and some hardness results for these four problems. We obtain an O(m)-factor approximation for ConMax and ConSum and an O( √ m/OPT )-factor approximation for ConMax. We also extend some known result on graphical grounds in [1, 2] and obtain inapproximability results on the geometrical grounds. For the Topol problem (where the final decoration of the nodes must correspond to a given configuration), we find it much simpler and provide FPTAS for both Max and Sum versions.	approximation algorithm;connectivity (graph theory);hardness of approximation;mathematical optimization;name mangling;network topology;optimization problem;polynomial-time approximation scheme	MohammadAmin Fazli;Mohammad Ali Safari;Nima Anari;Pooya Jalaly Khalilabadi;Mohammad Ghodsi	2011	J. Comb. Optim.	10.1007/s10878-015-9842-5	mathematical optimization;combinatorics;computer science;mathematics;approximation algorithm;algorithm	Theory	27.243120510053622	20.408577408898097	133383
317790b5d1c734ba74cd279cfc488232c346c613	algorithms for drawing media	p 540 planar;p 600 700 orthogonal;computational geometry;p 780 symmetric;state transition graph;data structure;planar graph	We describe algorithms for drawing media, systems of states, tokens and actions that have state transition graphs in the form of partial cubes. Our algorithms are based on two principles: embedding the state transition graph in a low-dimensional integer lattice and projecting the lattice onto the plane, or drawing the medium as a planar graph with centrally symmetric faces.	algorithm;olap cube;partial cube;planar graph;state diagram;state transition table	David Eppstein	2004		10.1007/978-3-540-31843-9_19	outerplanar graph;lattice graph;combinatorics;geometric graph theory;discrete mathematics;polyhedral graph;graph embedding;topology;graph bandwidth;data structure;null graph;slope number;computational geometry;computer science;force-directed graph drawing;forbidden graph characterization;planar straight-line graph;symmetric graph;mathematics;voltage graph;geometry;programming language;butterfly graph;crossing number;graph minor;book embedding;line graph;coxeter graph;planar graph	ML	30.753897329218688	23.286086283250715	133773
74a1dcd1307f5bf91ceb412069cecd20c302b79c	linear matroid intersection is in quasi-nc		Given two matroids on the same ground set, the matroid intersection problem asks to find a common independent set of maximum size. We show that the linear matroid intersection problem is in quasi-NC<sup>2</sup>. That is, it has uniform circuits of quasi-polynomial size <i>n</i><sup><i>O</i>(log<i>n</i>)</sup>, and <i>O</i>(log<sup>2</sup> <i>n</i>) depth. This generalizes the similar result for the bipartite perfect matching problem. We do this by an almost complete derandomization of the Isolation lemma for matroid intersection.  Our result also implies a blackbox singularity test for symbolic matrices of the form <i>A</i><sub>0</sub>+<i>A</i><sub>1</sub> <i>z</i><sub>1</sub> +<i>A</i><sub>2</sub> <i>z</i><sub>2</sub>+ â¯+<i>A</i><sub><i>m</i></sub> <i>z</i><sub><i>m</i></sub>, where <i>A</i><sub>0</sub> is an arbitrary matrix and the matrices <i>A</i><sub>1</sub>,<i>A</i><sub>2</sub>,â¦,<i>A</i><sub><i>m</i></sub> are of rank 1 over some field.	independent set (graph theory);matching (graph theory);matroid intersection;matroid rank;matroid representation;polynomial;quasi-polynomial;randomized algorithm;resource bounded measure	Rohit Gurjar;Thomas Thierauf	2016	Electronic Colloquium on Computational Complexity (ECCC)	10.1145/3055399.3055440	combinatorics;discrete mathematics;oriented matroid;weighted matroid;matroid partitioning;matching (graph theory);matroid intersection;matroid;bipartite graph;mathematics;graphic matroid	Theory	31.237908104196798	25.072167170593787	134525
6d4ff02933c54e8373fcbb321de679dc746710f0	low congestion online routing and an improved mistake bound for online prediction of graph labeling	vector space;discrete mathematics;science learning;graph laplacian;data structure	In this paper, we show a connection between a certain online low-congestion routing problem and an online prediction of graph labeling. More specifically, we prove that if there exists a routing scheme that guarantees a congestion of α on any edge, there exists an online prediction algorithm with mistake bound α times the cut size, which is the size of the cut induced by the label partitioning of graph vertices. With previous known bound of O(log n) for α for the routing problem on trees with n vertices, we obtain an improved prediction algorithm for graphs with high effective resistance. In contrast to previous approaches that move the graph problem into problems in vector space using graph Laplacian and rely on the analysis of the perceptron algorithm, our proof are purely combinatorial. Further more, our approach directly generalizes to the case where labels are not binary.	algorithm;cut (graph theory);graph labeling;laplacian matrix;network congestion;perceptron;routing	Jittat Fakcharoenphol;Boonserm Kijsirikul	2008	CoRR		graph power;mathematical optimization;factor-critical graph;combinatorics;discrete mathematics;independent set;directed graph;graph bandwidth;edge-graceful labeling;level structure;laplacian matrix;data structure;null graph;vector space;graph labeling;distance-regular graph;simplex graph;machine learning;cubic graph;mathematics;voltage graph;distance-hereditary graph;circle graph;programming language;quartic graph;complement graph;line graph;algorithm;strength of a graph	Theory	25.419288634103037	22.93746509958828	134808
3518664445ec65a21eee63816360dcca1f11986d	a framework for 1-d compaction with forbidden region avoidance	1-d compaction;compaction;visibility graphs;forbidden regions;region avoidance;vlsi layouts;analysis of algorithms	"""In this paper we consider the I-dimensional compaction problem when the layout area contains forbidden regions and the layout components are allowed to move across these regions. Assume we are given a feasible layout containing k forbidden regions and n layout components, where the i-th layout component is a rectilinear polygon consisting of Vi vertical edges, v = L~l Vi· We present an algorithm that determines the positions of the layout components resulting in minimum area in O((J' log (J' + (J'n log n) time with an 0((v + k) log k+ (v + (J') log v) preprocessing time. The quantity (J' measures the interaction between the layout components and the forbidden regions, (J' ~ vk. We also describe variants ofthis algorithms that make the running time more problem-dependent and consider forbidden regions of special structure. Our algorithms make use of an elegant characterization of a layout of minimum area. """"Research supported in part by ONR under contracts N00014-84-K-0502 and N00014-86K-0689, and by NSF under Grant MIP-87-15652. tResearch supported in part by NSF under Grant MIP-87-15652 and ONR under contract N00014-84-K-0502."""	algorithm;data compaction;emoticon;ibm notes;preprocessor;regular grid;time complexity	Susanne E. Hambrusch;Hung-Yi Tu	1991	Comput. Geom.	10.1016/0925-7721(92)90002-A	compaction;mathematical optimization;combinatorics;analysis of algorithms;mathematics;algorithm	Theory	29.137554197050488	20.965330712576183	134932
62a1ed3f4b26c12e72693e0ace280f3267dba492	two-dimensional range diameter queries	two-dimensional range diameter query;linear time;range diameter problem;constant query time;data structure;latter problem;support range diameter query;axis-parallel rectangular range;range diameter query;set intersection problem;known data structure	Given a set of n points in the plane, range diameter queries ask for the furthest pair of points in a given axis-parallel rectangular range. We provide evidence for the hardness of designing space-efficient data structures that support range diameter queries by giving a reduction from the set intersection problem. The difficulty of the latter problem is widely acknowledged and is conjectured to require nearly quadratic space in order to obtain constant query time, which is matched by known data structures for both problems, up to polylogarithmic factors. We strengthen the evidence by giving a lower bound for an important subproblem arising in solutions to the range diameter problem: computing the diameter of two convex polygons, that are separated by a vertical line and are preprocessed independently, requires almost linear time in the number of vertices of the smaller polygon, no matter how much space is used. We also show that range diameter queries can be answered much more efficiently for the case of points in convex position by describing a data structure of size O(n logn) that supports queries in O(logn) time.	apache axis;data structure;polylogarithmic function;range tree;time complexity;vertical bar	Pooya Davoodi;Michiel H. M. Smid;Freek van Walderveen	2012		10.1007/978-3-642-29344-3_19	mathematical optimization;combinatorics;discrete mathematics;mathematics	Theory	30.444462670210687	18.83189429461861	134956
a3856dbe133eb2d6ed1d0d5bfa2fcfbfc4c736c8	parameterized algorithms for the 2-clustering problem with minimum sum and minimum sum of squares objective functions	cluster graph;kernelization;clustering;parameterized algorithm;graph modification	In the Min-Sum 2-Clustering problem, we are given a graph and a parameter k, and the goal is to determine if there exists a 2-partition of the vertex set such that the total conflict number is at most k, where the conflict number of a vertex is the number of its non-neighbors in the same cluster and neighbors in the different cluster. The problem is equivalent to 2-Cluster Editing and 2-Correlation Clustering with an additional multiplicative factor two in the cost function. In this paper we show an algorithm for Min-Sum 2-Clustering with time complexity O(n⋅2.619 r/(1−4r/n)+n 3), where n is the number of vertices and r=k/n. Particularly, the time complexity is O ∗(2.619 k/n ) for k∈o(n 2) and polynomial for k∈O(nlogn), which implies that the problem can be solved in subexponential time for k∈o(n 2). We also design a parameterized algorithm for a variant in which the cost is the sum of the squared conflict-numbers. For k∈o(n 3), the algorithm runs in subexponential O(n 3⋅5.171 θ ) time, where $\theta=\sqrt{k/n}$ .	algorithm;coefficient;loss function;maxima and minima;polynomial;time complexity	Bang Ye Wu;Li-Hsuan Chen	2014	Algorithmica	10.1007/s00453-014-9874-8	mathematical optimization;combinatorics;discrete mathematics;computer science;mathematics;cluster analysis;kernelization;algorithm	Theory	24.965203675788615	19.838508801340186	135993
a623af703708d6ffbfede9fbe3e994015470142f	efficient algorithms for minimum range cut problems	graph theory;teoria grafo;complexite calcul;efficient algorithm;coupe graphe;weighting;ponderacion;theorie graphe;algorithme;minimo;algorithm;corte grafo;complejidad computacion;computational complexity;minimum;graph cut;ponderation;algoritmo	Let G = (V, E) be an undirected graph with n vertices and m edges such that a real-valued weight, denoted by w(e), is associated with each edge e. This paper studies what we call the minimum range cut problem that asks to find a cut in G such that the range of all edge weights in the cut is minimum. Here, the range of a cut C is defined to be the maximum difference among weights of edges in the cut, i.e., maxeϵcw(e) - mineϵcw(e). This paper proposes an O(m + n log n) algorithm for the minimum range cut problem. It is also shown that this running time is optimal. We also study two variants of this problem. One is the minimum range target cut problem. Given a prespecified value called a target, this problem asks to find a cut with minimum range among all cuts such that the target value is between the minimum and maximum of weights of edges in the cut. The second is the minimum range s – t cut problem that asks to find an s – t cut with minimum range. This paper proposes O(m + n log n) algorithms for these problems. For the second problem, we show that an ancestor tree of O(n) space recently developed by Cheng and Hu effectively represents all pairs minimum range cuts, which can be constructed in O(n2) time, and enables us to answer any minimum range s – t cut query in O(1) time [resp., in O(n) time] if we want to obtain only the range value of the cut (resp., the bipartition of vertices induced by the cut). © 1994 by John Wiley u0026 Sons, Inc.	algorithm	Naoki Katoh;Kazuo Iwano	1994	Networks	10.1002/net.3230240705	mathematical optimization;maximum cut;combinatorics;cut;graph theory;weighting;mathematics;computational complexity theory;algorithm	Theory	24.81856466486187	21.116168696257514	136051
9f6c395455ffdccb5325a2969ea31ad01eb19785	visibility drawings of plane 3-trees with minimum area		A visibility drawing of a plane graph G is a drawing of G where each vertex is drawn as a horizontal line segment and each edge is drawn as a vertical line segment such that the line segments use only grid points as their endpoints. The area of a visibility drawing is the area of the smallest rectangle on the grid which encloses the drawing. A minimum-area visibility drawing of a plane graph G is a visibility drawing of G where the area is the minimum among all possible visibility drawings of G. The area minimization for grid visibility representation of planar graphs is NP-hard. However, the problem can be solved for a fixed planar embedding of a hierarchically planar graph in quadratic time. In this paper, we give a polynomial-time algorithm to obtain minimum-area visibility drawings of plane 3-trees.	algorithm;graph drawing;planar graph;time complexity;vertical bar	Rahnuma Islam Nishat;Debajyoti Mondal;Md. Saidur Rahman	2011	Mathematics in Computer Science	10.1007/s11786-011-0078-1	visibility graph;combinatorics;visibility polygon;slope number;dominance drawing;mathematics;geometry	Theory	30.03259348238151	21.26978899656538	136468
a498d9d2377cfdb4e43a07aadc98cad683805c6b	a convex hull algorithm for discs, and applications	convex hull;minimum spanning circle;transversals;discs;convex hull algorithm;voronoi diagram	Rappaport D., A convex hull algorithm for discs, and applications, Computational Geometry: Theory and Applications 1 (1992) 171-187. We show that the convex hull of a set of discs can be determined in @(n log n) time. The algorithm is straightforward and simple to implement. We then show that the convex hull can be used to efficiently solve various problems for a set of discs. This includes O(n log n) algorithms for computing the diameter and the minimum spanning circle, computing the furthest site Voronoi diagram, computing the stabbing region, and establishing the region of intersection of the discs.	algorithm;computation;computational geometry;convex hull;file spanning;voronoi diagram	David Rappaport	1991	Comput. Geom.	10.1016/0925-7721(92)90015-K	internal and external angle;convex analysis;subderivative;mathematical optimization;combinatorics;krein–milman theorem;convex polytope;complex polygon;convex combination;orthogonal convex hull;voronoi diagram;convex body;visibility polygon;simple polygon;rectilinear polygon;hourglass;euclidean shortest path;convex hull;transversal;star-shaped polygon;mathematics;geometry;convex set;monotone polygon;convex curve;polygon covering;proper convex function;curve orientation;eaves	Theory	31.251701980185473	19.13314155958738	137191
124796030a5ccceee367a5eacb9025fa31bc8bf1	the average complexity of a coin-weighing problem	connected component;graph;martingale	Given a set of n coins, some of them weighing H, the others weighing h, h < H, we prove that to determine the set of heavy coins, an optimal algorithm requires an average of 1+ρ 1+ρ+ρ n + O(1) comparisons, using a beam balance, in which ρ denotes the ratio of the probabilities of being light and heavy. A simple quasi-optimal algorithm is described. Similar results are derived for the majority problem.	algorithm;euler–bernoulli beam theory;majority problem (cellular automaton)	Laurent Alonso;Philippe Chassaing;René Schott	1996	Random Struct. Algorithms	10.1002/(SICI)1098-2418(199608/09)9:1/2%3C1::AID-RSA1%3E3.0.CO;2-0	mathematical optimization;combinatorics;discrete mathematics;connected component;martingale;mathematics;graph;statistics	Theory	28.9498579053516	23.626126994025903	139645
ceacd0834e947838e74cbf8b455231929c5d4e8d	efficient approximation of convex polygons	approximation algorithms;convex polygon	We present algorithms for the approximation of a convex n-gon by a convex k-gon (k<n) which inscribes or circumscribes the original polygon. Our algorithms run in O(n+(n-k) log n) time and are easy to implement. Their accuracy, in the sense of area-difference, is analyzed and shown to be of the best order possible for a general algorithm. In particular, this analysis settles a question raised by O'Rourke on the performance of the approximation algorithm of Dori and Ben-Bassat.	approximation	Mario A. López;Shlomo Reisner	2000	Int. J. Comput. Geometry Appl.	10.1142/S0218195900000267	convex analysis;subderivative;mathematical optimization;combinatorics;discrete mathematics;convex optimization;krein–milman theorem;convex polytope;convex combination;orthogonal convex hull;linear matrix inequality;convex hull;absolutely convex set;star-shaped polygon;mathematics;convex set;logarithmically convex function;polygon covering;approximation algorithm;proper convex function	Theory	29.151238340385955	18.73919095859565	139720
42069f6fcd2292b53df381d81ffb1c303267088d	flip distance between triangulations of a simple polygon is np-complete	simple polygon;flip distance;triangulations;68u05	Most of my work is in the field of computational geometry, where I explore how additional structure in the inputs can be exploited to find faster algorithms for classical problems, like Delaunay triangulation and convex hull computation. Such additional structure may come in the form of bounded precision, information about the likely location of the input points, or the fact that the input points are sampled from a low-entropy distribution or come from a relatively small set of candidates. In earlier work, I considered triangulations, and helped settle the complexity status of the notorious minimum weight triangulation problem by showing that it is NPhard.	algorithm;computation;computational geometry;convex hull;delaunay triangulation;minimum-weight triangulation;np-completeness	Oswin Aichholzer;Wolfgang Mulzer;Alexander Pilz	2015	Discrete & Computational Geometry	10.1007/s00454-015-9709-7	combinatorics;topology;simple polygon;mathematics;geometry;polygon covering;polygon triangulation	Theory	30.08631078550759	18.85329519583754	139803
0a0976a0a7c71a0520ce4562635f34a270848391	fast, minimum storage ray-triangle intersection	minimum storage ray-triangle intersection	Abstract We present a clean algorithm for determining whether a ray intersects a triangle. The algorithm translates the origin of the ray and then changes the base to yield a vector (t u v) T , where t is the distance to the plane in which the triangle lies and (u, v) represents the coordinates inside the triangle. One advantage of this method is that the plane equation need not be computed on the fly nor be stored, which can amount to significant memory savings for triangle meshes. As we found our method to be comparable in speed to previous methods, we believe it is the fastest ray-triangle intersection routine for triangles that do not have precomputed plane equations.		Tomas Akenine-Möller;Ben Trumbore	1997	J. Graphics, GPU, & Game Tools	10.1080/10867651.1997.10487468	sum of angles of a triangle;mathematical optimization;combinatorics;triangle inequality;altitude;mathematics;geometry	HPC	31.24798837372402	18.883649357946506	140224
f345c89b5f6bfd28dbefb217067e08ae7e1483db	connectivity preserving iterative compaction and finding 2 disjoint rooted paths in linear time		In this paper we show how to combine two algorithmic techniques to obtain linear time algorithms for various optimization problems on graphs, and present a subroutine which will be useful in doing so. The first technique is iterative shrinking. In the first phase of an iterative shrinking algorithm, we construct a sequence of graphs of decreasing size G1, . . . , Gl where G1 is the initial input, Gl is a graph on which the problem is easy(often because it is small), and Gi is obtained from Gi+1 via some shrinking algorithm. In the second phase we work through the sequence in reverse, repeatedly constructing a solution for a graph from the solution for its successor. In an iterative compaction algorithm, we insist that the shrinking algorithm is actually a compaction algorithm, i.e. for some constant δ > 0, for every consecutive pair, Gi, Gi+1 of the sequence we have |V (Gi+1)|+ |E(Gi+1| ≤ (1− δ)(|V (Gi)|+ |E(Gi)|). Another approach to solving optimization problems is to exploit the structural properties implied by the connectivity of the input graph. Thus, both isomorphism testing and planar embedding are easier for 3-connected planar graphs because these graphs have a unique embedding. This approach can be used on graphs which are not highly connected by decomposing an input graph into its highly connected pieces, solving subproblems on these specially structured pieces and then combining their solutions. This usually involves building, explicitly or implicitly, a tree decomposition of bounded adhesion and working with the pieces into which it splits the input. We combine these two techniques by developing compaction algorithms which when applied to the highly connected pieces preserve their connectivity properties. The structural properties this connectivity implies can be helpful both in finding further compactions in later iterations and when we are manipulating solutions in the second phase of an iterative compaction algorithm which uses such a compaction	algorithm;data compaction;iteration;mathematical optimization;planar graph;subroutine;time complexity;tree decomposition	Ken-ichi Kawarabayashi;Zhentao Li;Bruce A. Reed	2015	CoRR		mathematical optimization;combinatorics;discrete mathematics;mathematics;algorithm	Theory	29.12693957980222	22.220773011727648	140552
f76bd0d11138651ee3ccea3fb3e038b173d92fc0	deterministic o(1)-approximation algorithms to 1-center clustering with outliers		The 1-center clustering with outliers problem asks about identifying a prototypical robust statistic that approximates the location of a cluster of points. Given some constant 0 < α < 1 and n points such that αn of them are in some (unknown) ball of radius r, the goal is to compute a ball of radius O(r) that also contains αn points. This problem can be formulated with the points in a normed vector space such as R or in a general metric space. The problem has a simple randomized solution: a randomly selected point is a correct solution with constant probability, and its correctness can be verified in linear time. However, the deterministic complexity of this problem was not known. In this paper, for any lp vector space, we show an O(nd)time solution with a ball of radius O(r) for a fixed α > 1 2 , and for any normed vector space, we show an O(nd)-time solution with a ball of radius O(r) when α > 1 2 as well as an O(nd log(n))-time solution with a ball of radius O(r) for all α > 0, k ∈ N, where log(n) represents the kth iterated logarithm, assuming distance computation and vector space operations take O(d) time. For an arbitrary metric space, we show for any C ∈ N an O(n )-time solution that finds a ball of radius 2Cr, assuming distance computation between any pair of points takes O(1)-time. Moreover, this algorithm is optimal for general metric spaces, as we show that for any fixed α,C, there is no o(n)-query and thus no o(n)-time solution that deterministically finds a ball of radius 2Cr.	1-center problem;cluster analysis;computation;correctness (computer science);deterministic algorithm;discrete logarithm;iteration;randomized algorithm;randomness;time complexity	Shyam Narayanan	2018		10.4230/LIPIcs.APPROX-RANDOM.2018.21	normed vector space;mathematical analysis;time complexity;combinatorics;cluster analysis;vector space;metric space;statistic;approximation algorithm;mathematics;iterated logarithm	Theory	28.654714750926118	18.421780368933224	140731
3e15a50e8dc2562aa8099dec84819ea4cf56bad5	optimal binary space partitions in the plane	recursive partitioning;binary space partition	An optimal bsp for a set S of disjoint line segments in the plane is a bsp for S that produces the minimum number of cuts. We study optimal bsps for three classes of bsps, which differ in the splitting lines that can be used when partitioning a set of fragments in the recursive partitioning process: free bsps can use any splitting line, restricted bsps can only use splitting lines through pairs of fragment endpoints, and auto-partitions can only use splitting lines containing a fragment. We obtain the two following results: – It is np-hard to decide whether a given set of segments admits an auto-partition that does not make any cuts. – An optimal restricted bsp makes at most 2 times as many cuts as an optimal free bsp for the same set of segments.	np-hardness;recursion	Mark de Berg;Amirali Khosravi	2010		10.1007/978-3-642-14031-0_25	mathematical optimization;combinatorics;discrete mathematics;computer science;mathematics;recursive partitioning	Theory	25.809380181383546	24.264136722224666	140743
3ce2946796c9f1977b0eedb600390bfd3488dd7e	partial matching of planar polylines under similarity transformations	randomized algorithms;image processing;approximation algorithms;least median of squares regression;robust estimation;line fitting;similarity transformation;shape;pattern recognition;algorithms;cumulant;line arrangements;mathematics computers information science management law miscellaneous	"""Given two planar polylines T and P with n and m edges, respectively, we present an O(mn) time, O(mn) space algorithm to nd portions of the \text"""" T which are similar in shape to the \pattern"""" P . In the common case of a simple pattern, such as a line segment or corner, m = O(1) and our algorithm requires O(n) time and O(n) space. We use the well-known arclength versus cumulative turning angle graph to judge how well a scaled, rotated, and translated version of the pattern matches a piece of the text. Our match scoring function balances the length of a match against the mean squared error in the match; given two matches with the same mean squared error (length), the longer (lower mean squared error) match will have a higher score. The match score is a function of the pattern scale, orientation, and position within the text, and our algorithm seeks to nd local maxima of the scoring function. An analytic formula for the highest scoring pattern orientation in terms of scale and position leaves us with a search problem in scale-position space. This space is divided by a set of lines into combinatorially distinct regions in each of which we have an analytic formula for the scoring function. Our algorithm discovers local maxima of the scoring function by performing a topological line sweep over this scale-position space line arrangement."""	algorithm;maxima and minima;mean squared error;pattern matching;position and momentum space;score bug;scoring functions for docking;search problem;whole earth 'lectronic link	Scott D. Cohen;Leonidas J. Guibas	1997			matrix similarity;mathematical optimization;combinatorics;image processing;shape;computer science;machine learning;mathematics;geometry;randomized algorithm;approximation algorithm;algorithm;statistics;cumulant	Theory	30.902177763682776	18.271827211993998	140786
1e8677a6c0f5600e435c88f19800cc429697e705	finding minimal spanning trees in a euclidean coordinate space	multidimensional search trees;k-d tree.;key-words: minimal spanning trees. euclidean distance. graph theory. closest point problem;minimal spanning tree;euclidean distance;graph theory;normal distribution;euclidean space;k d tree	The minimal spanning tree problem of a point set in ak-dimensional Euclidean space is considered and a new version of the multifragmentMST-algorithm of Bentley and Friedman is given. The minimal spanning tree is found by repeatedly joining the minimal subtree with the closest subtree. Ak-d tree is used for choosing the connecting edges. Computation time of the algorithm depends on the configuration of the point set: for normally distributed random points the algorithm is very fast. Two extreme cases demandingO(n logn) andO(n2) operations,n being the cardinality of the point set, are also given.	file spanning	Olli Nevalainen;Jarmo Ernvall;Jyrki Katajainen	1981	BIT		normal distribution;euclidean minimum spanning tree;combinatorics;discrete mathematics;kruskal's algorithm;topology;minimum degree spanning tree;spanning tree;graph theory;euclidean space;minimum spanning tree;range tree;k-d tree;euclidean distance;k-ary tree;connected dominating set;k-minimum spanning tree;mathematics;euclidean distance matrix;distributed minimum spanning tree;shortest-path tree	Theory	29.151744931202348	19.13736389021811	141116
4e7cb2af242380910c8828cc3369d64530cadbbb	coresets for $k$-means and $k$-median clustering and their applications		In this paper, we show the existence of small coresets for the problems of computing k-median and k-means clustering for points in low dimension. In other words, we show that given a point set P in <, one can compute a weighted set S ⊆ P , of size O(kε−d log n), such that one can compute the k-median/means clustering on S instead of on P , and get an (1+ε)-approximation. As a result, we improve the fastest known algorithms for (1 + ε)-approximate k-means and k-median. Our algorithms have linear running time for a fixed k and ε. In addition, we can maintain the (1 + ε)-approximate k-median or k-means clustering of a stream when points are being only inserted, using polylogarithmic space and update time.	algorithm;cluster analysis;computer cluster;coreset;fastest;k-means clustering;polylogarithmic function;time complexity	Sariel Har-Peled;Soham Mazumdar	2003	CoRR			Theory	26.142344059622165	18.316158289099317	141440
0b5c1976ab3429fddf8cf487a9a8112c8b6f3f12	complexity and approximability of certain bicriteria location problems	location problem;computer graphics;weighting functions;informing science;set theory;computer calculations;distance metric;pattern recognition;algorithms;99 mathematics computers information science management law miscellaneous;mapping;weight function;budget constraint;information theory;distance;mathematics computers information science management law miscellaneous	We investigate the complexity and approximability of some location problems when two distance values are speciied for each pair of potential sites. These problems involve the selection of a speciied number of facilities (i.e. a placement of a speciied size) to minimize a function of one distance metric subject to a budget constraint on the other distance metric. Such problems arise in several application areas including statistical clustering, pattern recognition and load{balancing in distributed systems. We show that, in general, obtaining placements that are near-optimal with respect to the rst distance metric is NP{ hard even when we allow the budget constraint on the second distance metric to be violated by a constant factor. However, when both the distance metrics satisfy the triangle inequality, we present approximation algorithms that produce placements which are near-optimal with respect to the rst distance metric while violating the budget constraint only by a small constant factor. We also present polynomial algorithms for these problems when the underlying graph is a tree.	approximation algorithm;cluster analysis;complexity;directed graph;distributed computing;pattern recognition;polynomial;social inequality	Sven Oliver Krumke;Hartmut Noltemeier;S. S. Ravi;Madhav V. Marathe	1995		10.1007/3-540-60618-1_67	mathematical optimization;budget constraint;combinatorics;discrete mathematics;weight function;distance matrix;metric;information theory;metric k-center;computer science;intrinsic metric;mathematics;computer graphics;distance;algorithm;set theory	Theory	25.413128909001863	19.589399069909053	141990
fce9696a31a98beff46a3df4388069de65fe9a36	active graph matching based on pairwise probabilities between nodes	active graph matching;interactive graph matching;machine learning;expected model change;least confident;maximum entropy	We propose a method to perform active graph matching in which the active learner queries one of the nodes of the first graph and the oracle feedback is the corresponding node of the other graph. The method uses any graph matching algorithm that iteratively updates a probability matrix between nodes (Graduated Assignment, Expectation Maximisation or Probabilistic Relaxation). The oracle's feedback is used to update the costs between nodes and arcs of both graphs. We present and validate four different active strategies based on the probability matrix between nodes. It is not needed to modify the code of the graph-matching algorithms, since our method simply needs to read the probability matrix and to update the costs between nodes and arcs. Practical validation shows that with few oracle's feedbacks, the algorithm finds the labelling that the user considers optimal because imposing few labellings the other ones are corrected automatically.	matching (graph theory)	Xavier Cortés;Francesc Serratosa;Albert Solé-Ribalta	2012		10.1007/978-3-642-34166-3_11	graph power;factor-critical graph;combinatorics;graph bandwidth;null graph;graph property;regular graph;clique-width;theoretical computer science;simplex graph;machine learning;clustering coefficient;mathematics;voltage graph;graph;random geometric graph;complement graph;graph database;strength of a graph;adjacency matrix;ordered graph	Vision	25.78199851106426	23.085394389691754	142535
29769d386ed974098d20e82a2ed8a68b2937beed	on the randomized complexity of monotone graph properties		The yarn pieces to be joined are stretched between the two pairs of suction tubes (28, 29; 30, 31) and untwisted by being wound about spindles (20, 21). Hot compressed air fed along the surface of two blocks (32, 33) adjacent to the untwisted yarn portions remove free fibers and distribute the fiber tufts in the base of a channel formed in said blocks (32, 33). Said tufts are retained in the base of the channel by an electrostatic field formed with the aid of conductors (46) and the generator (GE). The blocks are then rotated about the rotation shafts (4, 5) until the channel edges are in contact with each other. Air is fed perpendicularly to the plane containing the fiber tufts in proximity to their respective ends in order to cause the fibers of the two tufts to interpenetrate, the spindles (20, 21) then being driven in the reverse direction in order to twist the fiber tufts and to disengage the yarn.	graph property;randomized algorithm;monotone	Hans Dietmar Gröger	1992	Acta Cybern.		factor-critical graph;combinatorics;discrete mathematics;graph bandwidth;graph property;clique-width;theoretical computer science;simplex graph	Theory	31.349373003091006	25.10128305312753	143415
64ddfd2a145c91bea47319bb8434924ce2094e48	fault tolerant additive and (μ, α)-spanners	spanners;fault tolerance;additive spanners;graph algorithms	Graph spanners are sparse subgraphs that preserve the distances of the original graph up to some approximation ratio (the spanner's stretch). A number of algorithms are known for constructing sparse spanners with small multiplicative or additive stretch. Recently, algorithms were introduced for constructing fault-tolerant multiplicative spanners of general graphs. This paper addresses the analogous problem of constructing fault tolerant additive and ( µ , α ) -spanners for general graphs, and presents a number of (deterministic and randomized) construction algorithms for such spanners.	utility functions on indivisible goods	Gilad Braunschvig;Shiri Chechik;David Peleg;Adam Sealfon	2015	Theor. Comput. Sci.	10.1016/j.tcs.2015.02.036	fault tolerance;combinatorics;discrete mathematics;computer science;mathematics;distributed computing	ECom	25.94968201350461	22.762235337349196	143505
35d949502bda8b0774d36ebc34a79bae843b2a22	minimum dilation stars	quasiconvex programming;computational geometry;euclidean graphs;stretch factor;dilation;facility location	The dilation of a Euclidean graph is defined as the ratio of distance in the graph divided by distance in Rd. In this paper we consider the problem of positioning the root of a star such that the dilation of the resulting star is minimal. We present a deterministic O(n log n)-time algorithm for evaluating the dilation of a given star; a randomized O(n log n) expected-time algorithm for finding an optimal center in Rd; and for the case d = 2, a randomized O(n2α(n) log2n) expected-time algorithm for finding an optimal center among the input points.	a* search algorithm;dilation (morphology);geometric graph theory;randomized algorithm	David Eppstein;Kevin A. Wortman	2005	Comput. Geom.	10.1145/1064092.1064142	mathematical optimization;combinatorics;computational geometry;facility location problem;mathematics;geometry;dilation	Theory	29.67899002271982	19.67143860146307	144131
1b7cf413777b09c364bbeb61902456032dce3ee2	on rigid matrices and subspace polynomials		We introduce a class of polynomials, which we call subspace polynomials and show that the problem of explicitly constructing a rigid matrix can be reduced to the problem of explicitly constructing a small hitting set for this class. We prove that small-bias sets are hitting sets for the class of subspace polynomials, though their size is larger than desired. Furthermore, we give two alternative proofs for the fact that small-bias sets induce rigid matrices. Finally, we construct rigid matrices from unbalanced expanders, with essentially the same size as the construction via small-bias sets. ∗Sackler School of Mathematics and Blavatnik School of Computer Science, Tel Aviv University, Tel Aviv 69978, Israel. Email: nogaa@tau.ac.il. Research supported in part by an ERC Advanced grant, by a USA-Israeli BSF grant and by the Israeli I-Core program. †Department of Computer Science and Applied Mathematics, Weizmann Institute of Science, Rehovot 76100, Israel. Email: gil.cohen@weizmann.ac.il. Research supported by Israel Science Foundation (ISF) grant.	bean scripting framework;computer science;email;polynomial ring;set cover problem;small-bias sample space;unbalanced circuit	Noga Alon;Gil Cohen	2012	Electronic Colloquium on Computational Complexity (ECCC)		mathematics;combinatorics;discrete mathematics;mathematical proof;polynomial;matrix (mathematics);subspace topology	Theory	27.648046980254104	23.436438491517336	144139
97241d287644f94c5f7e44d7ca0bc3874053a3d3	clustered planarity: small clusters in cycles and eulerian graphs	eulerian graph;planar graph	We present several polynomial-time algorithms for c-planarity testing for cluster hierarchy C containing clusters of size at most three. The main result is an O(|C| + n)-time algorithm for clusters of size at most three on a cycle. The result is then generalized to a special class of Eulerian graphs, namely graphs obtained from a 3-connected planar graph of fixed size k by multiplying and then subdividing edges. An O(3 · k · n)-time algorithm is presented. We further give an O(|C| + n)-time algorithm for general 3-connected planar graphs. Submitted: December 2007 Reviewed: November 2008 Revised: February 2009 Accepted: August 2009 Final: September 2009 Published: November 2009 Article type: Regular paper Communicated by: S.-H. Hong and T. Nishizeki An extended abstract of this paper appeared in proceedings of Graph Drawing 2007. [14] Department of Applied Mathematics is supported by project 1M0021620838 of the Czech Ministry of Education. Institute for Theoretical Computer Science is supported by grant 1M0545 of the Czech Ministry of Education. The 4th author was supported by the grant GAUK 154907. The 5th author and the 6th author were supported by grant 201/05/H014 of the Czech Science Foundation. The 5th author was also partially supported by the ERASMUS program and by the DFG, project NI 369/4 (PIAF), while visiting Friedrich-Schiller-Universität Jena, Germany (October 2008–	clustered planarity;connectivity (graph theory);directed graph;eulerian path;genetic algorithm;graph drawing;planarity testing;polynomial;theoretical computer science;time complexity	Eva Jelínková;Jan Kára;Jan Kratochvíl;Martin Pergel;Ondrej Suchý;Tomás Vyskocil	2009	J. Graph Algorithms Appl.		1-planar graph;cycle space;outerplanar graph;combinatorics;discrete mathematics;polyhedral graph;topology;planarity testing;graph labeling;pancyclic graph;route inspection problem;cubic graph;graph coloring;mathematics;voltage graph;tutte polynomial;butterfly graph;cycle basis;graph minor;book embedding;line graph;coxeter graph;planar graph;eulerian path	Theory	27.182855426183924	23.164823065149115	145113
a3c8fa5e8319ab82889c1c3027ff6a3a9c3348aa	efficient algorithms for solving diagonal visibility problems in a simple polygon	efficient algorithm;guard diagonal;polygon;weak visibility;visibility	A diagonal guard is a guard capable of moving along an edge or an internal diagonal in a polygon. A polygon which can be guarded by a diagonal guard is called diagonal-visible. We consider the following three problems concerning the diagonal visibility in a polygon P. First, determine whether or not a guard diagonal exists in P, i.e., P is diagonal-visible. Second, compute all guard diagonals of P. Third, given a query diagonal, determine whether or not it is a guard diagonal. For these problems, we construct a data structure for keeping all guard diagonals in O(n log n) time and O(n) space. Using this data structure, we show that these problems can be solved in O(n log n), O(n log n+k), and O(1) time, respectively, where k is the number of guard diagonals.	algorithm;visibility (geometry)	S. H. Kim;Sung Yong Shin;Kyung-Yong Chwa	1995	Int. J. Comput. Geometry Appl.	10.1142/S021819599500026X	space diagonal;combinatorics;diagonal;discrete mathematics;visibility polygon;visibility;polygon;face diagonal;mathematics;geometry	Theory	31.20176666703813	19.156923877578727	145612
550cbe655de8d139a4fd36bc8ae7cad31370faab	approximation algorithms for min-sum k-clustering and balanced k-median	approximation;min-sum k-clustering;balanced k-median;hierarchically separated trees;doubling metrics	We consider two closely related fundamental clustering problems in this paper. In Min-Sum k -Clustering, one is given n points in a metric space and has to partition them into k clusters while minimizing the sum of pairwise distances between points in the same cluster. In the Balanced k -Median problem, the instance is the same and the objective is to obtain a partitioning into k clusters \(C_1,\ldots ,C_k\), where each cluster \(C_i\) is centered at a point \(c_i\), while minimizing the total assignment cost of the points in the metric; the cost of assigning a point j to a cluster \(C_i\) is equal to \(|C_i|\) times the distance between j and \(c_i\) in the metric. In this article, we present an \(O(\log n)\)-approximation for both these problems. This is an improvement over the \(O(\epsilon ^{-1}\log ^{1 + \epsilon } n)\)-approximation (for any constant \(\epsilon > 0\)) obtained by Bartal, Charikar, and Raz [STOC ’01]. We also obtain a quasi-PTAS for Balanced k-Median in metrics with constant doubling dimension. As in the work of Bartal et al., our approximation for general metrics uses embeddings into tree metrics. The main technical contribution in this paper is an O(1)-approximation for Balanced k-Median in hierarchically separated trees (HSTs). Our improvement comes from a more direct dynamic programming approach that heavily exploits the properties of standard HSTs. In this way, we avoid the reduction to special types of HSTs that were considered by Bartal et al., thereby avoiding an additional \(O(\epsilon ^{-1} \log ^\epsilon n)\) loss.	approximation algorithm	Babak Behsaz;Zachary Friggstad;Mohammad R. Salavatipour;Rohit Sivakumar	2015		10.1007/978-3-662-47672-7_10	approximation algorithm	Theory	25.734200717183384	18.52751944097622	145961
1395696aec1d1638cfffaac10190fed6f784c7e9	algorithms for solving rubik's cubes	optimal solution;asymptotic optimality;computational geometry;group theory;diameter;upper bound;configuration space;combinatorial puzzles;computational complexity;god s number;combinatorial optimization;data structure;lower bound	The Rubik’s Cube is perhaps the world’s most famous and iconic puzzle, well-known to have a rich underlying mathematical structure (group theory). In this paper, we show that the Rubik’s Cube also has a rich underlying algorithmic structure. Specifically, we show that the n×n×n Rubik’s Cube, as well as the n×n×1 variant, has a “God’s Number” (diameter of the configuration space) of Θ(n/ logn). The upper bound comes from effectively parallelizing standard Θ(n) solution algorithms, while the lower bound follows from a counting argument. The upper bound gives an asymptotically optimal algorithm for solving a general Rubik’s Cube in the worst case. Given a specific starting state, we show how to find the shortest solution in an n×O(1)×O(1) Rubik’s Cube. Finally, we show that finding this optimal solution becomes NPhard in an n×n×1 Rubik’s Cube when the positions and colors of some cubies are ignored (not used in determining whether the cube is solved).	asymptotically optimal algorithm;best, worst and average case;color;cube;cubes;mathematical structure;parallel computing	Erik D. Demaine;Martin L. Demaine;Sarah Eisenstat;Anna Lubiw;Andrew Winslow	2011		10.1007/978-3-642-23719-5_58	rubik's cube group;mathematical optimization;combinatorics;discrete mathematics;data structure;cube root;computational geometry;combinatorial optimization;cube;god's algorithm;klee–minty cube;mathematics;geometry;upper and lower bounds;group theory;algorithm	Theory	27.49525360521749	19.689354699128998	146283
6e3ff45619783578ae8ff959da0438eae721686e	online balanced graph avoidance games	random graph;complete graph	We introduce and study online balanced coloring games on the random graph process. The game is played by a player we call Painter. Edges of the complete graph with n vertices are introduced two at the time, in a random order. For each pair of edges, Painter immediately and irrevocably chooses one of the two possibilities to color one of them red and the other one blue. His goal is to avoid creating a monochromatic copy of a small fixed graph F for as long as possible. We show that the duration of the game is determined by a threshold function mH = mH(n) for certain graph-theoretic structures, e.g., cycles. That is, for every graph H in this family, Painter will asymptotically almost surely (a.a.s.) lose the game after m = ω(mH) edge pairs in the process. On the other hand, there exists an essentially optimal strategy: if the game lasts for m = o(mH) moves, Painter can a.a.s. successfully avoid monochromatic copies of H. Our attempt is to determine the threshold function for several classes of graphs.	clique (graph theory);color;cycle (graph theory);graph coloring;graph theory;monochrome;rado graph;random graph	Martin Marciniszyn;Dieter Mitsche;Milos Stojakovic	2007	Eur. J. Comb.	10.1016/j.ejc.2007.04.004	graph power;random regular graph;random graph;factor-critical graph;combinatorics;null graph;regular graph;simplex graph;edge coloring;cycle graph;graph coloring;graph factorization;mathematics;voltage graph;windmill graph;butterfly graph;graph minor;complete graph;complement graph;semi-symmetric graph;line graph;algorithm;string graph;strength of a graph	Theory	28.865251453968153	24.603289245202248	146388
858153d8510972640a88bca6906431c3d021d7bd	the queue-number of posets of bounded width or height		Heath and Pemmaraju [9] conjectured that the queuenumber of a poset is bounded by its width and if the poset is planar then also by its height. We show that there are planar posets whose queue-number is larger than their height, refuting the second conjecture. On the other hand, we show that any poset of width 2 has queue-number at most 2, thus confirming the first conjecture in the first non-trivial case. Moreover, we improve the previously best known bounds and show that planar posets of width w have queue-number at most 3w − 2 while any planar poset with 0 and 1 has queue-number at most its width.	large;width	Kolja B. Knauer;Piotr Micek;Torsten Ueckerdt	2018		10.1007/978-3-030-04414-5_14	conjecture;combinatorics;partially ordered set;bounded function;mathematics;queue number	Theory	31.01538951607645	24.789580262753628	146983
029eecb599999545a880655752b1087437219f85	exploring and triangulating a region by a swarm of robots	natural graph optimization problem;communication graph;different offline version;decision problem;competitive ratio;offline version;maximum area triangulation problem;polynomial-time approximation scheme;offline problem;triangulated cover	We consider online and offline problems related to exploring and surveying a region by a swarm of robots with limited communication range. The minimum relay triangulation problem (MRTP) asks for placing a minimum number of robots, such that their communication graph is a triangulated cover of the region. The maximum area triangulation problem (MATP) aims at finding a placement of n robots such that their communication graph contains a root and forms a triangulated cover of a maximum possible amount of area. Both problems are geometric versions of natural graph optimization problems. The offline version of both problems share a decision problem, which we prove to be NP-hard. For the online version of the MRTP, we give a lower bound of 6/5 for the competitive ratio, and a strategy that achieves a ratio of 3; for different offline versions, we describe polynomial-time approximation schemes. For the MATP we show that no competitive ratio exists for the online problem, and give polynomial-time approximation schemes for offline versions.	competitive analysis (online algorithm);decision problem;mathematical optimization;np-hardness;online algorithm;online and offline;polynomial;polynomial-time approximation scheme;relay;robot;swarm robotics;time complexity;triangulation (geometry);web strategy	Sándor P. Fekete;Tom Kamphans;Alexander Kröller;Joseph S. B. Mitchell;Christiane Schmidt	2011		10.1007/978-3-642-22935-0_18	mathematical optimization;combinatorics;simulation;mathematics	Theory	27.426334870342544	18.90883156986365	147353
dad0a007bc5a999bb18a796b045201d4f0cca495	interval-like graphs and digraphs		We unify several seemingly different graph and digraph classes under one umbrella. These classes are all, broadly speaking, different generalizations of interval graphs, and include, in addition to interval graphs, adjusted interval digraphs, threshold graphs, complements of threshold tolerance graphs (known as ‘co-TT’ graphs), bipartite interval containment graphs, bipartite co-circular arc graphs, and two-directional orthogonal ray graphs. (The last three classes coincide, but have been investigated in different contexts.) This common view is made possible by introducing reflexive relationships (loops) into the analysis. We also show that all the above classes are united by a common ordering characterization, the existence of a min ordering. We propose a common generalization of all these graph and digraph classes, namely signed-interval digraphs, and show that they are precisely the digraphs that are characterized by the existence of a min ordering. We also offer an alternative geometric characterization of these digraphs. For most of the above graph and digraph classes, we show that they are exactly those signed-interval digraphs that satisfy a suitable natural restriction on the digraph, like having a loop on every vertex, or having a symmetric edge-set, or being bipartite. For instance, co-TT graphs are precisely those signed-interval digraphs that have each edge symmetric. We also offer some discussion of future work on recognition algorithms and characterizations. 2012 ACM Subject Classification Mathematics of computing→ Combinatoric problems, Mathematics of computing → Graph theory	algorithm;control flow;directed graph;graph theory;interval arithmetic;maxima and minima	Pavol Hell;Jing Huang;Ross M. McConnell;Arash Rafiey	2018		10.4230/LIPIcs.MFCS.2018.68	discrete mathematics;mathematics;combinatorics;bipartite graph;arc (geometry);graph;generalization	Theory	27.245631376762738	25.16223202311801	148039
8b028fc08593ccdfc2ba8555e99a7665b19c9a1f	improved bandwidth approximation for trees	cylindricity;linear arrangement;minimum cyclinder;metrology;zone cylinder;roundness	A linear arrangement of an n-vertex graph G = (V, E) is a one-one mapping f of the vertex set V onto the set In] = {0, 1 , . . . , n 1}. The bandwidth of this linear arrangement is the maximum distance between the images of the endpoints of any edge in E(G). When the input graph G is a tree, the best known approximation algorithm for the minimum bandwidth linear arrangement (which is based on the principle of volume respecting embeddings) outputs a linear arrangement which has bandwidth within O(log 3 n) of the optimal bandwidth. In this paper, we present a simple randomized O(log 2 n lov~-n)-approximation algorithm for bandwidth minimization on trees.	approximation algorithm;graph bandwidth;randomized algorithm;vertex (graph theory)	Anupam Gupta	2000			mathematical optimization;roundness;mathematics;metrology	Theory	29.11385106223873	20.285923386856958	148217
195738d50da6893510e7224588397f1ec822618c	polynomial-time approximation schemes for circle packing problems		We consider the problem of packing a set of circles into a minimum number of unit square bins. We give an asymptotic approximation scheme (APTAS) when we have resource augmentation in one dimension, that is, we may use bins of height 1 + γ, for some small γ u003e 0. As a corollary, we also obtain an APTAS for the circle strip packing problem, whose objective is to pack a set of circles into a strip of unit width and minimum height. These are the first approximation schemes for these problems. Our algorithm is based on novel ideas of iteratively separating small and large items, and may be extended to more general packing problems. For example, we also obtain APTAS’s for the corresponding problems of packing d-dimensional spheres under the L p -norm.	approximation;polynomial;set packing;time complexity	Flávio Keidi Miyazawa;Lehilton L. C. Pedrosa;Rafael Crivellari Saliba Schouery;Maxim Sviridenko;Yoshiko Wakabayashi	2014		10.1007/978-3-662-44777-2_59	mathematical optimization;combinatorics;mathematics;geometry	Theory	29.086410833865244	18.77706660372811	148533
0dca149a33889f36726c4d8b84cc367c11475942	finding the maximal empty disk containing a query point	efficient algorithm;computational geometry;data structures;algorithms;maximal empty disk;data structure	Let P be a set of n points in the plane. We present an efficient algorithm for preprocessing P, so that, for a given query point q, we can quickly report the largest disk that contains q but its interior is disjoint from P. The storage required by the data structure is O(n log n), the preprocessing cost is O(n log2n), and a query takes O(log2n) time.	algorithm;data structure;maximal set;preprocessor	Haim Kaplan;Micha Sharir	2012		10.1145/2261250.2261292	mathematical optimization;combinatorics;data structure;theoretical computer science;mathematics;programming language	Theory	30.5560052856966	18.805178569630918	149232
63d43c17de9214c14038301688890cbe784b3bff	on generalized planar skyline and convex hull range queries		We present output sensitive techniques for the generalized reporting versions of the planar range maxima problem and the planar range convex hull problem. Our solutions are in the pointer machine model, for orthogonal range queries on a static point set. We solve the planar range maxima problem for two-sided, three-sided and four-sided queries. We achieve a query time of O(log n+c) using O(n) space for the two-sided case, where n denotes the number of stored points and c the number of colors reported. For the three-sided case, we achieve query time O(log n + c log n) using O(n) space while for four-sided queries we answer queries in O(log n+ c log n) using O(n log n) space. For the planar range convex hull problem, we provide a solution that answers queries in O(log n+ c log n) time, using O(n log n) space.	color;convex hull;maxima;pointer machine;range query (data structures);range searching	Nadeem Moidu;Jatin Agarwal;Sankalp Khare;Kishore Kothapalli;K. Srinathan	2014		10.1007/978-3-319-04657-0_6	mathematical optimization;combinatorics;discrete mathematics;mathematics	Theory	30.34963611756515	18.65940929629368	149296
0710b3703d19a34f3737a2c77541e821aaf7dbb2	triangulating simplicial point sets in space	interior point;extreme point;time use	A set <italic>P</italic> of points in <italic>R<supscrpt>d</supscrpt></italic> is called simplicial if it has dimension <italic>d</italic> and contains exactly <italic>d</italic> + 1 extreme points. We show that when <italic>P</italic> contains <italic>n</italic> interior points, there is always one point, called a splitter, that partitions <italic>P</italic> into <italic>d</italic> + 1 simplices, none of which contain more than <italic>dn</italic> /(<italic>d</italic> + 1) points. A splitter can be found in <italic>&Ogr;</italic> (<italic>d</italic><supscrpt>4</supscrpt><italic>n</italic>) time. Using this result, we give a <italic>&Ogr;</italic> (<italic>d</italic><supscrpt>4</supscrpt><italic>n</italic> log<subscrpt>1+1/<italic>d</italic></subscrpt> <italic>n</italic>) algorithm for triangulating simplicial point sets that are in general position. In <italic>R</italic><supscrpt>3</supscrpt> we give an <italic>&Ogr;</italic> (<italic>n</italic> log<italic>n</italic> + <italic>k</italic>) algorithm for triangulating arbitrary point sets, where <italic>k</italic> is the number of simplices produced. We exhibit sets of 2<italic>n</italic> + 1 points in <italic>R</italic><supscrpt>3</supscrpt> for which the number of simplices produced may vary between (<italic>n</italic> -1)<supscrpt>2</supscrpt> + 1 and 2<italic>n</italic> -2. We also exhibit point sets for which every triangulation contains a quadratic number of simplices.	algorithm;lumpers and splitters	David Avis;Hossam A. ElGindy	1986		10.1145/10515.10530	extreme point;combinatorics;discrete mathematics;topology;interior point method;mathematics	Theory	31.819089240254936	20.511206151346087	150172
a71e10b56c2ec1f3165101e1def1ab8d572fb0f6	on multiplicatively weighted voronoi diagrams for lines in the plane	lower envelope;certain structural property;multiplicatively weighted voronoi diagram;general purpose machinery;set l;three-dimensional space;derive complexity bound;n line;unweighted voronoi diagram;n2 log n	We describe a method based on the wavefront propagation, which computes a multiplicatively weighted Voronoi diagram for a set L of n lines in the plane in O(n2 log n) time and O(n2) space. In the process, we derive complexity bounds and certain structural properties of such diagrams. An advantage of our approach over the general purpose machinery, which requires computation of the lower envelope of a set of halfplanes in three-dimensional space, lies in its relative simplicity. Besides, we point out that the unweighted Voronoi diagram for n lines in the plane has a simple structure, and can be obtained in optimal θ(n2) time and space.	voronoi diagram	Kira Vyatkina;Gill Barequet	2011	Trans. Computational Science	10.1007/978-3-642-22619-9_3	combinatorics;discrete mathematics;weighted voronoi diagram;power diagram;voronoi diagram;centroidal voronoi tessellation;mathematics;geometry	Theory	31.35257490974037	20.39209472428283	150427
995e8e1b3a98ab0ffb7e7e904a7c39404f65d9c3	range counting with distinct constraints		In this paper we consider a special case of orthogonal point counting queries, called queries with distinct constraints. A d-dimensional orthogonal query range Q = [b1, b2]× [b3, b4]× . . .× [b2d−1, b2d] is a range with r distinct constraints if there are r distinct values among b1, b2, . . ., b2d. We describe a data structure that supports orthogonal range counting queries with r distinct constraints. We show that the space and query time complexity of such queries depend only on the number of distinct constraints r even if r is much smaller than d. An application of queries with r distinct constraints to persistent range counting is also considered.	counting problem (complexity);data structure;range searching;time complexity	J. Ian Munro;Yakov Nekrich;Sharma V. Thankachan	2015			combinatorics;time complexity;discrete mathematics;special case;data structure;mathematics	DB	30.49822300353737	18.55119939241097	150593
12e990bf85f60258c02caab6b0c97525bda844ff	the design and implementation of planar maps in cgal	algorithme rapide;algorithm performance;algorithm complexity;geometria combinatoria;complejidad algoritmo;computational geometry;complexite algorithme;design and implementation;resultado algoritmo;combinatorial geometry;informatique theorique;fast algorithm;estructura datos;performance algorithme;structure donnee;geometrie combinatoire;data structure;algoritmo rapido;computer theory;informatica teorica	Planar maps are fundamental structures in computational geometry. They are used to represent the subdivision of the plane into regions and have numerous applications. We describe the planar map package of Cgal|a Computational Geometry Algorithms Library. We discuss problems that arose in the design and implementation of the package and report the solutions we have found for them. In particular we introduce the two main classes of the design|planar maps and topological maps that enable the convenient separation between geometry and topology. We also describe the geometric traits which make our package exible by enabling to use it with any family of curves as long as the user supplies a small set of operations for the family. Finally, we present the algorithms we implemented for point location in the map, together with experimental results that compare their performance.	algorithm;cgal;computation;computational geometry;map;planar graph;point location;subdivision surface	Eyal Flato;Dan Halperin;Iddo Hanniel;Oren Nechushtan	1999		10.1007/3-540-48318-7_14	data structure;computational geometry;computer science;artificial intelligence;planar straight-line graph;geometry;programming language;algorithm	Theory	31.42327877020852	18.27417788164513	151268
dd3a1a2fc9d77a5c5beb66bcbdce649b9af72398	approximation of diameters: randomization doesn't help	optimisation;best approximation;deterministic algorithms optimisation computational geometry polynomial approximation;computational geometry;polynomial time algorithm;deterministic algorithms;convex body;deterministic polynomial time approximations diameters approximation deterministic polynomial time algorithm euclidean n space lower bounds upper bounds polynomial time algorithm euclidean spaces;euclidean space;upper and lower bounds;polynomials concurrent computing computer science mathematics approximation algorithms tellurium cyclic redundancy check;lp space;polynomial approximation	We describe a deterministic polynomial-time algorithm which, for a convex body K in Euclideann-space, finds upper and lower bounds onK ’s diameter which differ by a factor ofO( p n= logn). We show that this is, within a constant factor, the best approximation to the diameter that a polynomial-time algorithm can produce even if randomization is allowed. We also show that the above results hold for other quantities similar to the diameter namely, inradius, circumradius, width, and maximization of the norm over K. In addition to these results for Euclidean spaces, we give tight results for the error of deterministic polynomial-time approximations of radii and norm-maxima for convex bodies in finite-dimensional lp spaces.	approximation;expectation–maximization algorithm;maxima;polynomial;time complexity	Andreas Brieden;Peter Gritzmann;Ravi Kannan;Victor Klee;László Lovász;Miklós Simonovits	1998		10.1109/SFCS.1998.743451	mathematical optimization;combinatorics;discrete mathematics;convex body;computational geometry;euclidean space;euclidean shortest path;mathematics;upper and lower bounds;polynomial remainder theorem;nondeterministic algorithm;lp space;approximation algorithm	Theory	28.77214925701522	19.239459040446924	152409
58bc33cbe181de8e42a4b18f6017c8d77d1ef7d4	shortest path amidst disc obstacles is computable	shortest path;real ram model;exact geometric computation;computational geometry;combinatorial problems;upper bound;number theory;obstacle avoidance;robust numerical algorithms;disc obstacles;numerical algorithm;model of computation;guaranteed precision computation;exponential complexity	"""An open question in Exact Geometric Computation is whether there re transcendental computations that can be made """"geometrically exact"""".Perhaps the simplest such problem in computational geometry is that of computing the shortest obstacle-avoiding path between two points p, q in the plane, where the obstacles re collection of n discs.This problem can be solved in O (n 2 log n)time in the Real RAM model, but nothing was known about its computability in the standard (Turing) model of computation. We first show the Turing-computability of this problem,provided the radii of the discs are rationally related. We make the usual assumption that the numerical input data are real algebraic numbers. By appealing to effective bounds from transcendental number theory, we further show single-exponential time upper bound when the input numbers are rational.Our result ppears to be the first example of non-algebraic combinatorial problem which is shown computable. It is also rare example of transcendental number theory yielding positive computational results."""	computability;computable function;computational geometry;linear algebra;model of computation;numerical analysis;random-access memory;real ram;shortest path problem;time complexity;turing	Ee-Chien Chang;Sung Woo Choi;DoYong Kwon;Hyungju Park;Chee-Keng Yap	2005		10.1145/1064092.1064112	model of computation;mathematical optimization;combinatorics;number theory;discrete mathematics;computational geometry;euclidean shortest path;mathematics;geometry;obstacle avoidance;upper and lower bounds;shortest path problem;algorithm	Theory	28.26449822671798	18.788882005082822	152645
a09ccbbbbc129f2a10812a882a763f034781ff9b	complexity of the bisection method	iterative method;prueba;complexite;plane;complejidad;plan;systematique;complexity;mediane;maillage;median;similitude;metodo iterativo;upper bound;preuve;triangle;celdarada;sistematica;triangulacion;methode iterative;informatique theorique;plano;similarity;taxonomy;bisection method;grid pattern;mediana;triangulation;similitud;borne superieure;proof;cota superior;computer theory;informatica teorica;longest edge bisection	The bisection method is the consecutive bisection of a triangle by the median of the longest side. In this paper we prove a subexponential asymptotic upper bound for the number of similarity classes of triangles generated on a mesh obtained by iterative bisection, which previously was known only to be finite. The relevant parameter is γ /σ , where γ is the biggest and σ is the smallest angle of the triangle. We get this result by introducing a taxonomy of triangles that precisely captures the behaviour of the bisection method. We also prove that the number of directions on the plane given by the sides of the triangles generated is finite. Additionally, we give purely geometrical and intuitive proofs of classical results for the bisection method.	algorithm;bisection method;complexity;iteration;iterative method;mary tsingou;taxonomy (general)	Claudio Gutiérrez;Flavio Gutierrez;María Cecilia Rivara	2007	Theor. Comput. Sci.	10.1016/j.tcs.2007.03.004	bisection method;combinatorics;complexity;similarity;triangulation;similitude;plane;calculus;proof;mathematics;geometry;iterative method;upper and lower bounds;plan;median;algorithm;taxonomy	Theory	31.60460805098189	22.261682331104787	152849
0bc9d57b296d5729ce42d4a4f50ea51143d62653	minimum membership hitting sets of axis parallel segments		The Minimum Membership Set Cover (MMSC) problem is a well studied variant among set covering problems. We study the dual of MMSC problem which we refer to as Minimum Membership Hitting Set (MMHS) problem. Exact Hitting Set (EHS) problem is a special case of MMHS problem. In this paper, we show that EHS problem for hypergraphs induced by horizontal axis parallel segments intersected by vertical axis parallel segments is (mathsf {NP})-complete. Our reduction shows that finding a hitting set in which the number of times any set is hit is minimized does not admit a (2-epsilon ) approximation. In the case when the horizontal segments are intersected by vertical lines (instead of vertical segments), we give an algorithm to optimally solve the MMHS problem in polynomial time. Clearly, this algorithm solves the EHS problem as well. Yet, we present a combinatorial algorithm for the special case of EHS problem for horizontal segments intersected by vertical lines because it provides interesting pointers to forbidden structures of intervals that have exact hitting sets. We also present partial results on such forbidden structures.	optic axis of a crystal	N. S. Narayanaswamy;S. M. Dhannya;C. Ramya	2018		10.1007/978-3-319-94776-1_53	combinatorics;discrete mathematics;pointer (computer programming);time complexity;constraint graph;covering problems;special case;computer science;set cover problem	Robotics	29.056359118409897	21.059231356056916	153283
2efe99cb1afc6922c00d7ac62d9fb8100049a91d	linear-time recognition of map graphs with outerplanar witness		Abstract Map graphs generalize planar graphs and were introduced by Chen et al. (STOC 1998, J. ACM, 2002). They showed that the problem of recognizing map graphs is in  NP by proving the existence of a planar witness graph W . Shortly after, Thorup (FOCS 1998) published a polynomial-time recognition algorithm for map graphs. However, the run time of this algorithm is estimated to be Ω ( n 120 ) for n -vertex graphs, and a full description of its details remains unpublished. We give a new and purely combinatorial algorithm that decides whether a graph G is a map graph having an outerplanar witness W . This is a step towards a first combinatorial recognition algorithm for general map graphs. The algorithm runs in time and space O ( n + m ) . In contrast to Thorup’s approach, it computes the witness graph W in the affirmative case.	outerplanar graph;time complexity	Matthias Mnich;Ignaz Rutter;Jens M. Schmidt	2018	Discrete Optimization	10.1016/j.disopt.2017.12.002	1-planar graph;outerplanar graph;block graph;pathwidth;combinatorics;discrete mathematics;universal graph;graph product;dense graph;clique problem;hopcroft–karp algorithm;pancyclic graph;metric dimension;graph coloring;mathematics;maximal independent set;modular decomposition;treewidth;partial k-tree;chordal graph;indifference graph;book embedding;algorithm;planar graph	Vision	26.19333597644632	24.196991104142104	153638
70a07b445dc58e845081eb668e36ceeb1c745464	computing constrained shortest segments: butterfly wingspans in logarithmic time	binary search on convex polygons;shortest transversal	We give a logarithmic-time algorithm to compute the shortest segment joining two convex n-gons A and B while avoiding another convex n-gon C. Our algorithm uses a tentative prune-and-search technique on standard representations of the polygons as arrays or balanced binary search trees.	time complexity	David G. Kirkpatrick;Jack Snoeyink	1993	Int. J. Comput. Geometry Appl.	10.1142/S0218195999000054	mathematical optimization;combinatorics;convex combination;mathematics;geometry;convex set;k shortest path routing	Theory	29.965727674702826	19.42284462307965	153885
3e95df18e617ae38572941853248ecc9874fb8fe	efficient algorithms for identifying all maximal isothetic empty rectangles in vlsi layout design	efficient algorithm;computational geometry;upper bound;space complexity;geometric algorithm;vlsi layout	In this paper, we consider the following problem of computational geometry which has direct applications to VLSI layout design : given a set of n isothetic solid rectangles on a rectangular floor, identify all maximal-empty-rectangles (MER's). A tighter upper bound on the number of MER's is derived. A new algorithm based on interval trees for identifying all MER's is then presented which runs in O(nlogn+R) time in the worst case and in O(nlogn) time in the average case, where R denotes the number of MER's. The space complexity of the algorithm is O(n). Finally, we explore the problem of recognizing the maximum (area)emptyrectangle without explicitly generating all MER's. Our analysis shows that, on an average, around 70% of MER's need notbe examined in order to locate the maximum. The proposed algorithm can readily be tailored to solve the MER problem in an ensemble of points as well as within an isothetic polygon.	algorithm;best, worst and average case;computation;computational geometry;dspace;interval arithmetic;maximal pair;maximal set;mer;very-large-scale integration	Subhas C. Nandy;Bhargab B. Bhattacharya;Sibabrata Ray	1990		10.1007/3-540-53487-3_50	mathematical optimization;combinatorics;discrete mathematics;computational geometry;mathematics;dspace;upper and lower bounds;algorithm	Theory	30.04183557231164	19.568895477279927	154130
b1811d480d806ff7cf5db21ef1bf3c2fa15ad7b5	polygonal approximation of closed contours	state space;polygonal approximation;exhaustive search	Optimal approximation of closed curves differs from the case of open curve in the sense that the location of the starting point must also be determined. Straightforward exhaustive search would take N times more time than the corresponding algorithm for open curve. We propose to approximate a cyclically extended contour of double size, and to select the best possible starting point by analyzing the state space. This takes only twice of the time required by the algorithm for open curve.	approximation algorithm;brute-force search;dynamic programming;iterative method;search algorithm;state space;time complexity	Alexander Kolesnikov;Pasi Fränti	2003		10.1007/3-540-45103-X_103	mathematical optimization;combinatorics;computer science;state space;polygonal chain;brute-force search;mathematics;geometry	Vision	30.01952452244935	18.307147075703924	154151
758e3d45761ee95b2b456737890d1ca5d03c6b43	identifying consensus of trees through alignment	maximum degree;labeled tree;dynamic programming algorithm;satisfiability;rna structure	In this paper we present a dynamic programming algorithm for identifying the similar consensus (SC) (or the largest approximately common substructures) of two ordered labeled trees based on the alignment distance. We consider a substructure of a tree T to be a connected subgraph of T. Given two trees T1, T2 and an integer d, the SC problem is to ®nd a substructure U1 of T1 and a substructure U2 of T2 such that U1 is within distance d of U2 and where there does not exist any other substructure V1 of T1 and V2 of T2 such that V1 and V2 satisfy the distance constraint and the sum of the sizes of V1 and V2 is greater than the sum of the sizes of U1 and U2. The proposed algorithm solves the SC problem in time Od2 jT1j jT2j G1  G2, where jTij, i  1; 2, is the size of tree Ti and Gi is the maximum degree of Ti. This is as fast as the best known algorithm for aligning two ordered labeled trees when the distance allowed in the common substructures is a constant independent of the input trees. To demonstrate the utility of our algorithm, we discuss its application to characterizing the conformation space of RNA sequences pertaining to the poliovirus, human rhinovirus and coxsackievirus, where the RNA structures are represented by ordered labeled trees. Ó 2000 Elsevier Science Inc. All rights reserved. Information Sciences 126 (2000) 165±189 www.elsevier.com/locate/ins * Corresponding author. E-mail addresses: jason@cis.njit.edu (J.T.L. Wang), kzhang@csd.uwo.ca (K. Zhang). 0020-0255/00/$ see front matter Ó 2000 Elsevier Science Inc. All rights reserved. PII: S 0 0 2 0 0 2 5 5 ( 0 0 ) 0 0 0 1 4 1	algorithm;dynamic programming;personally identifiable information	Jason Tsong-Li Wang;Kaizhong Zhang	2000	Inf. Sci.	10.1016/S0020-0255(00)00014-1	nucleic acid structure;mathematical optimization;combinatorics;discrete mathematics;computer science;dynamic programming;mathematics;algorithm;shortest-path tree;satisfiability	ML	25.457160396142196	23.700666545866362	154548
4013665f8a508210f9da7577ecc821ed0549ffaa	vertex insertion approximates the crossing number of apex graphs	crossing minimization;apex graph;crossing number	We prove that the crossing number of an apex graph, i.e. a graph G from which only one vertex v has to be removed to make it planar, can be approximated up to a factor of ∆(G−v)·d(v)/2 by solving the vertex inserting problem, i.e. inserting a vertex plus incident edges into an optimally chosen planar embedding of a planar graph. Since the latter problem can be solved in polynomial time, this establishes the first polynomial fixed-factor approximation algorithm for the crossing number problem of apex graphs with bounded degree. Furthermore, we extend this result by showing that the optimal solution for inserting multiple edges or vertices into a planar graph also approximates the crossing number of the resulting graph.	apex (geometry);apex graph;approximation algorithm;crossing number (graph theory);multiple edges;p (complexity);planar graph;polynomial;time complexity	Markus Chimani;Petr Hlinený;Petra Mutzel	2012	Eur. J. Comb.	10.1016/j.ejc.2011.09.009	1-planar graph;loop;outerplanar graph;graph power;apex graph;combinatorics;graph embedding;topology;multiple edges;feedback vertex set;wagner graph;degree;cycle graph;planar straight-line graph;vertex;mathematics;geometry;butterfly graph;crossing number;graph minor;book embedding;neighbourhood;coxeter graph;planar graph	Theory	25.897451097346377	22.504134871883085	154563
aacf89563ee68aa6d165d5b119b5cded00d99764	connected component and simple polygon intersection searching	space use;connected component;data structure	Efficient data structures are given for the following two query problems: (i) preprocess a setP of simple polygons with a total ofn edges, so that all polygons ofP intersected by a query segment can be reported efficiently, and (ii) preprocess a setS ofn segments, so that the connected components of the arrangement ofS intersected by a query segment can be reported quickly. In these problems we do not want to return the polygons or connected components explicitly (i.e., we do not wish to report the segments defining the polygon, or the segments lying in the connected components). Instead, we assume that the polygons (or connected components) are labeled and we just want to report their labels. We present data structures of sizeO(n 1+ε) that can answer a query in timeO(n 1+ε+k), wherek is the output size. If the edges ofP (or the segments inS) are orthogonal, the query time can be improved toO(logn+k) usingO(n logn) space. We also present data structures that can maintain the connected components as we insert new segments. For arbitrary segments the amortized update and query time areO(n 1/2+ε) andO(n 1/2+ε+k), respectively, and the space used by the data structure isO(n 1+ε. If we allowO(n 4/3+ε space, the amortized update and query time can be improved toO(n 1/3+ε andO(n 1/3+ε+k, respectively. For orthogonal segments the amortized update and query time areO(log2 n) andO(log2 n+klogn), and the space used by the data structure isO (n logn). Some other related results are also mentioned.	amortized analysis;connected component (graph theory);data structure;preprocessor	Pankaj K. Agarwal;Marc J. van Kreveld	1996	Algorithmica	10.1007/BF01940884	locally connected space;combinatorics;connected component;topology;data structure;simple polygon;computer science;mathematics;geometry;polygon covering;pick's theorem;giant component	Theory	30.629305647418064	19.028707589273118	154663
a1ac9b90a3426b397095ed7b3f0abf64ea686a2c	a complete approximation algorithm for shortest bounded-curvature paths	shortest path;approximate algorithm;upper bound;motion planning;polynomial time approximation scheme	We address the problem of finding a polynomial-time approximation scheme for shortest bounded-curvature paths in the presence of obstacles. Given an arbitrary environment $\mathcal{E}$ consisting of polygonal obstacles, two feasible configurations, a length l, and an approximation factor e, our algorithm either (i) verifies that every feasible bounded-curvature path joining the two configurations is longer than l or (ii) constructs such a path Π whose length is at most (1 + e) times the length of the shortest such path. The run time of our algorithm is polynomial in n (the total number of obstacle vertices and edges in $\mathcal{E}$), m (the bit precision of the input), e -1, and l.#R##N##R##N#For general polygonal environments, there is no known upper bound on the length, or description, of a shortest feasible bounded-curvature path as a function of n and m. Furthermore, even if the length and description of a shortest path are known to be linear in n and m, finding such a path is known to be NP-hard [14].#R##N##R##N#Previous results construct (1 + e) approximations to the shortest e-robust bounded-curvature path [11,3] in time that is polynomial in n and e -1. (Intuitively, a path is e-robust if it remains feasible when simultaneously twisted by some small amount at each of its environment contacts.) Unfortunately, e-robust solutions do not exist for all problem instances that admit bounded-curvature paths. Furthermore, even if a e-robust path exists, the shortest bounded-curvature path may be arbitrarily shorter than the shortest e-robust path. In effect, these earlier results confound two distinct sources of problem difficulty, measured by e -1 and l. Our result is not only more general, but it also clarifies the critical factors contributing to the complexity of bounded-curvature motion planning.	approximation algorithm	Jonathan Backer;David G. Kirkpatrick	2008		10.1007/978-3-540-92182-0_56	mathematical optimization;combinatorics;discrete mathematics;canadian traveller problem;polynomial-time approximation scheme;widest path problem;fast path;constrained shortest path first;longest path problem;average path length;computer science;pathfinding;euclidean shortest path;yen's algorithm;mathematics;motion planning;upper and lower bounds;shortest path problem;distance;k shortest path routing;shortest path faster algorithm;algorithm	Theory	29.780205375111883	19.420097034280325	155917
8cc62d275160f9e2b3dabfc24347718a9dbfbd04	an approximation algorithm for minimum convex cover with logarithmic performance guarantee	dynamic programming;performance guarantee;programacion dinamica;approximate algorithm;temps polynomial;geometrie algorithmique;polygone convexe;dynamic programming algorithm;computational geometry;polygone;problema np duro;dynamic program;algorithme;polygon;polynomial time algorithm;algorithm;np hard problem;aproximacion polinomial;probleme recouvrement;problema recubrimiento;probleme np difficile;approximation polynomiale;programmation dynamique;polynomial time;poligono;geometria computacional;covering problem;convex polygon;polynomial approximation;algoritmo;tiempo polinomial	"""The problem Minimum Convex Cover of covering a given polygon with a minimum number of (possibly overlapping) convex polygons is known to be NP-hard, even for polygons without holes [3]. We propose a polynomial-time approximation algorithm for this problem for polygons with or without holes that achieves an approximation ratio of O(log n), where n is the number of vertices in the input polygon. To obtain this result, we first show that an optimum solution of a restricted version of this problem, where the vertices of the convex polygons may only lie on a certain grid, contains at most three times as many convex polygons as the optimum solution of the unrestricted problem. As a second step, we use dynamic programming to obtain a convex polygon which is maximum with respect to the number of """"basic triangles"""" that are not yet covered by another convex polygon.We obtain a solution that is at most a logarithmic factor off the optimum by iteratively applying our dynamic programming algorithm. Furthermore, we show that Minimum Convex Cover is APX-hard, i.e., there exists a constant δ > 0 such that no polynomial-time algorithm can achieve an approximation ratio of 1 + δ. We obtain this result by analyzing and slightly modifying an already existing reduction [3]."""	approximation algorithm	Stephan Eidenbenz;Peter Widmayer	2001		10.1007/3-540-44676-1_28	internal and external angle;convex analysis;subderivative;support function;mathematical optimization;combinatorics;convex optimization;krein–milman theorem;convex polytope;point in polygon;convex combination;orthogonal convex hull;mixed volume;linear matrix inequality;computational geometry;computer science;convex hull;dynamic programming;absolutely convex set;star-shaped polygon;polygon;mathematics;geometry;convex set;logarithmically convex function;polygon covering;algorithm;proper convex function	Robotics	28.577176471311553	18.43533586044873	156193
948a2ccee0158e6bba1845b275828ff1f8b8d5e6	geometric path problems with violations	rectilinear polygons;shortest path;geometry;graph;violations;simple polygons	In this paper, we study variants of the classical geometric shortest path problem inside a simple polygon, where we allow a part of the path to go outside the polygon. Let P be a simple polygon consisting of n vertices and let s, t be a pair of points in P. Let $$\text{ int }(P)$$ int(P) represent the interior of P and let $$\overline{P}$$ P¯ represent the exterior of P, i.e. $$\text{ int }(P)=P{\setminus }\partial (P)$$ int(P)=P\∂(P) and $$\overline{P}=\mathbb {R}^2{\setminus }\text{ int }(P)$$ P¯=R2\int(P) . For an integer $$k\ge 0$$ k≥0 , we define a k-violation path from s to t to be a path connecting s and t such that its intersection with $$\overline{P}$$ P¯ consists of at most k segments. There is no restriction in terms of the number of segments of the path within P. The objective is to compute a path of minimum Euclidean length among all possible $$({\le } k)$$ (≤k) -violation paths from s to t. In this paper, we study this problem for $$k=1$$ k=1 and propose an algorithm that computes the shortest one-violation path in $$O(n^3)$$ O(n3) time. We show that for rectilinear polygons, the minimum length rectilinear one-violation path can be computed in $$O(n\log n)$$ O(nlogn) time. We extend the concept of one-violation path to a one-stretch violation path. In this case, the path between s and t is composed of (a) a path in P from s to a vertex u of P, (b) a path in $$\overline{P}$$ P¯ between u and a vertex v of P, and (c) a path in P between v and t. We show that a minimum length one-stretch violation path can be computed in $$O(n\log n\log \log n)$$ O(nlognloglogn) time. Next, we introduce one- and two-violation monotone rectilinear path problems among a set of n disjoint axis-parallel rectangular objects. Let s, t be two points in $$\mathbb {R}^2$$ R2 that are not in the interior of any of the objects. In the case of one-violation monotone path problem, the desired rectilinear path from s to t consists of horizontal edges that are directed towards the right and vertical edges that are directed upwards, except for at most one edge. Similarly, in the case of a two-violation monotone path problem, all horizontal edges are directed towards the right except at most one and all vertical edges are directed upwards except at most one. Our algorithms for both of these problems run in $$O(n\log n)$$ O(nlogn) time.	algorithm;cubic function;data structure;emoticon;euclidean distance;kaplan–meier estimator;optic axis of a crystal;regular grid;shortest path problem;time complexity;monotone	Anil Maheshwari;Subhas C. Nandy;Drimit Pattanayak;Sasanka Roy;Michiel H. M. Smid	2016	Algorithmica	10.1007/s00453-016-0263-3	mathematical optimization;combinatorics;discrete mathematics;mathematics;geometry;graph;shortest path problem	Theory	30.209423394148548	21.957644529053606	156516
5df37cc30da9b80e0cdb3ca69af0361582a47a2f	deciding the existence of perfect entangled strategies for nonlocal games		First, we consider the problem of deciding whether a nonlocal game admits a perfect finite dimensional entangled strategy that uses projective measurements on a maximally entangled shared state. Via a polynomial-time Karp reduction, we show that independent set games are the hardest instances of this problem. Secondly, we show that if every independent set game whose entangled value is equal to one admits a perfect entangled strategy, then the same holds for all symmetric synchronous games. Finally, we identify combinatorial lower bounds on the classical and entangled values of synchronous games in terms of variants of the independence number of appropriate graphs. Our results suggest that independent set games might be representative of all nonlocal games when dealing with questions concerning perfect entangled strategies.	independent set (graph theory);karp's 21 np-complete problems;measurement in quantum mechanics;polynomial-time reduction;quantum entanglement;quantum nonlocality;time complexity	Laura Mancinska;David E. Roberson;Antonios Varvitsiotis	2016	Chicago J. Theor. Comput. Sci.		combinatorial game theory;combinatorics;discrete mathematics;quantum pseudo-telepathy;mathematics	Theory	27.480906630310876	24.31373091708552	156582
421e529851d7321bbec017a9afa59bd89bc0305e	local routing in convex subdivisions		In various wireless networking settings, node locations determine a network’s topology, allowing the network to be modelled by a geometric graph drawn in the plane. Without any additional information, local geometric routing algorithms can guarantee delivery to the target node only in restricted classes of geometric graphs, such as triangulations. In order to guarantee delivery on more general classes of geometric graphs (e.g., convex subdivisions or planar subdivisions), previous local geometric routing algorithms required Θ(logn) state bits to be stored and passed with the message. We present the first local geometric routing algorithm using only one state bit to guarantee delivery on convex subdivisions and the first local geometric memoryless routing algorithm that guarantees delivery on edge-augmented monotone subdivisions (including all convex subdivisions) when the algorithm has knowledge of the incoming port (the preceding node on the route).	algorithm;geometric graph theory;routing;monotone	Prosenjit Bose;Stephane Durocher;Debajyoti Mondal;Maxime Peabody;Matthew Skala;Mohammad Abdul Wahid	2015		10.1007/978-3-662-46078-8_12	combinatorics;computer science;discrete mathematics;monotone polygon;wireless network;regular polygon;subdivision;spatial network;graph;planar	Theory	27.930743627469525	20.61264897290933	156809
bb43bb95871069ed9f0d9312bc82b5e06c5824a2	art gallery problems for convex nested polygons	convex polygons;computational geometry;art gallery problems;computer science;art gallery problem	In this article, we study a class of Art Gallery problems that are defined on a pair of convex nested polygons. Polynomial time algorithms are presented for all these problems, by reducing them to the Circle Covering problem, or by relating them to the Minimal Nested Polygon problem. Then it is shown that these problems can also be solved in polynomial time by formulating them as Integer Programs with the Circular Ones property. Finally the paper discusses how these algorithms can be efficiently implemented in parallel.	art gallery problem	Joy Bhadury;V. Chandru;A. Maheshwari;Ramaswamy Chandrasekaran	1997	INFORMS Journal on Computing	10.1287/ijoc.9.1.100	mathematical optimization;combinatorics;computational geometry;mathematics;geometry;art gallery problem	Theory	28.306772737092228	19.216923540436724	158256
2420081f286c48c8e33890310e41e2c5c1319b7e	minimum convex container of two convex polytopes under translations		Given two convex d-polytopes P and Q in R for d ≥ 3, we study the problem of bundling P and Q in a smallest convex container. More precisely, our problem asks to find a minimum convex set containing P and Q that are in contact under translations. For dimension d = 3, we present the first exact algorithm that runs in O(n) time, where n denotes the number of vertices of P and Q. Our approach easily extends to any higher dimension d > 3, resulting in the first exact algorithm.	convex set;exact algorithm;product bundling	Hee-Kap Ahn;Sang Won Bae;Otfried Cheong;Dongwoo Park;Chan-Su Shin	2014	Comput. Geom.	10.1016/j.comgeo.2018.02.004	convex analysis;subderivative;support function;mathematical optimization;combinatorics;discrete mathematics;convex optimization;convex polytope;convex combination;orthogonal convex hull;mixed volume;convex body;linear matrix inequality;convex hull;absolutely convex set;mathematics;geometry;convex set;convex curve;logarithmically convex function;effective domain;proper convex function	Theory	27.107110079500412	19.229526119530558	158597
11c40fd760247a27c0d0d9279dc6e81edeccc187	a unified approach to dynamic point location, ray shooting, and shortest paths in planar maps	camino mas corto;maps;shortest path;decomposition;dynamic algorithm;geometrie algorithmique;point location;computational geometry;plus court chemin;localisation point;68p10;carte;trapezoid method;algorithme dynamique;data structures;rayon interrogation;68p05;68q25;structure donnee;carte planaire connexe;68u05;methode trapezoide;ray shooting;query ray	2, 6, 8, 14, 15, 21, 25, 26, 291. We describe a new technique for dynamically maintaining the trapezoidal decomposition of a connected planar map M with 7~ vertices, and apply it to the development of a unified dynamic data structure that supports point-location, ray-shooting, and shortest-path queries in M. The space requirement is O(nlog n). Point-location queries take time O(log 7~). Ray-shooting and shortest-path queries take time O(log3 TZ) (plus O(k) time if the k edges of the shortest path are reported in addition to its length). Updates consist of insertions and deletions of vertices and edges, and take O(log3 n) time (amortized for vertex updates).	amortized analysis;data structure;dynamic data;planar graph;point location;ray casting;shortest path problem;vertex (geometry);vertex (graph theory)	Yi-Jen Chiang;Franco P. Preparata;Roberto Tamassia	1993	SIAM J. Comput.	10.1137/S0097539792224516	trapezoidal rule;combinatorics;data structure;dynamic problem;computational geometry;computer science;point location;mathematics;geometry;shortest path problem;decomposition;algorithm	Theory	30.780364014400927	18.352953502658863	158662
0f229307f172a43b93e0741cc3e59d8e86d1c9f1	non-overlapping local alignments (weighted independent sets of axis parallel rectangles)	independent set;local alignment	We consider the following problem motivated by an application in computational molecular biology. We are given a set of weighted axis-parallel rectangles such that for any pair of rectangles and either axis, the projection of one rectangle does not enclose that of the other. De ne a pair to be independent if their projections in both axes are disjoint. The problem is to nd a maximum-weight independent subset of rectangles. We show that the problem is NP-hard even in the uniform case when all the weights are the same. We analyze the performance of a natural local-improvement heuristic for the general problem and prove a performance ratio of 3.25. We extend the heuristic to the problem of nding a maximum-weight independent set in (d+1)-claw free graphs, and show a tight performance ratio of d 1+ 1 d . A performance ratio of d 2 was known for the heuristic when applied to the uniform case. Our contributions are proving the hardness of the problem and providing a tight analysis of the local-improvement algorithm for the general weighted case.	algorithm;computation;heuristic;independent set (graph theory);np-hardness;optic axis of a crystal	Vineet Bafna;Babu O. Narayanan;R. Ravi	1995		10.1007/3-540-60220-8_89	mathematical optimization;combinatorics;discrete mathematics;independent set;computer science;smith–waterman algorithm;mathematics	Theory	28.941049567780922	20.31696263763395	159510
8ca03b3eab9daaa0a67b7aca0c44f9d6ad86eaea	separating and shattering long line segments	bsp tree;computational geometry	A line l is called a separator for a set S of objects in the plane if l avoids all the objects and partitions S into two non-empty subsets, lying on both sides of l. A set L of lines is said to shatter S if each line of L is a separator for S, and every two objects of S are separated by at least one line of L. We give a simple randomized algorithm to construct the set of all separators for a given set S of n line segments in expected time O(n log n), provided the ratio between the diameter of S and the length of the shortest line segment is bounded by a constant. We also give a randomized algorithm to determine a set of lines shattering S, whose expected running time is O(n logn), improving (for this setting) the (deterministic) O(n 2 log n) time algorithm of Freimer, Mitchell and Piatko.	average-case complexity;randomized algorithm;shattered set;time complexity	Alon Efrat;Otfried Cheong	1996		10.1007/BFb0009479	binary space partitioning;combinatorics;discrete mathematics;topology;computational geometry;computer science;mathematics	Theory	30.60169724497327	20.163308693190224	160724
2b0d7202c264011ac35c869e67848b64438ce486	on realistic terrains	shortest path;realistic input model;efficient algorithm;polyhedral terrain;low density;visibility maps;voronoi diagram	We study worst-case complexities of visibility and distance structures on terrains under realistic assumptions on edge length ratios and the angles of the triangles, and a more general low-density assumption. We show that the visibility map of a point for a realistic terrain with n triangles has complexity Θ(n √ n). We also prove that the shortest path between two points p and q on a realistic terrain passes through Θ( √ n) triangles, and that the bisector of p and q has complexity O(n √ n). We use these results to show that the shortest path map for any point on a realistic terrain has complexity Θ(n √ n), and that the Voronoi diagram for any set of m points on a realistic terrain has complexity Ω(n + m √	best, worst and average case;edge enhancement;shortest path problem;voronoi diagram	Esther Moet;Marc J. van Kreveld;A. Frank van der Stappen	2008	Comput. Geom.	10.1016/j.comgeo.2007.10.008	mathematical optimization;combinatorics;voronoi diagram;mathematics;geometry;shortest path problem	Theory	30.21113987071994	20.900946957979308	161201
86502b524745f1db0697859859e4cc0ee4290f47	small-size relative (p, ε)-approximations for well-behaved range spaces	lovasz local lemma;well behaved range spaces;relative approximations	"""We present improved upper bounds for the size of relative (p,ε)-approximation for range spaces with the following property: For any (finite) range space projected onto (that is, restricted to) a ground set of size n and for any parameter 1 ≤ k ≤ n, the number of ranges of size at most k is only nearly-linear in n and polynomial in k. Such range spaces are called """"well behaved"""". Our bound is an improvement over the bound O(log(1/p)/ε2 p) introduced by Li et. al. [17] for the general case (where this bound has been shown to be tight in the worst case), when p l ε. We also show that such small size relative (p,ε)-approximations can be constructed in expected polynomial time.  Our bound also has an interesting interpretation in the context of """"p-nets"""": As observed by Har-Peled and Sharir [13], p-nets are special cases of relative (p,ε)-approximations. Specifically, when ε is a constant smaller than 1, the analysis in [13, 17] implies that there are p-nets of size O(log{(1/p)}/p) that are also relative approximations. In this context our construction significantly improves this bound for well-behaved range spaces. Despite the progress in the theory of p-nets and the existence of improved bounds corresponding to the cases that we study, these bounds do not necessarily guarantee a bounded relative error.  Lastly, we present several geometric scenarios of well-behaved range spaces, and show the resulting bound for each of these cases obtained as a consequence of our analysis. In particular, when ε is a constant smaller than 1, our bound for points and axis-parallel boxes in two and three dimensions, as well as points and """"fat"""" triangles in the plane, matches the optimal bound for p-nets introduced in [3, 25]."""	approximation error;best, worst and average case;optic axis of a crystal;polynomial;time complexity	Esther Ezra	2013		10.1145/2462356.2462363	combinatorics;mathematical analysis;discrete mathematics;lovász local lemma;mathematics;geometry	Theory	31.187833624711853	21.85832537902505	161304
39fb86c8ca371275f5c850cd433f7f98d5708cd5	optimal detection of intersections between convex polyhedra		For a polyhedron P in R, denote by |P | its combinatorial complexity, i.e., the number of faces of all dimensions of the polyhedra. In this paper, we revisit the classic problem of preprocessing polyhedra independently so that given two preprocessed polyhedra P and Q in R, each translated and rotated, their intersection can be tested rapidly. For d = 3 we show how to perform such a test in O(log |P | + log |Q|) time after linear preprocessing time and space. This running time is the best possible and improves upon the last best known query time of O(log |P | log |Q|) by Dobkin and Kirkpatrick (1990). We then generalize our method to any constant dimension d, achieving the same optimal O(log |P | + log |Q|) query time using a representation of size O(|P |bd/2c+ε) for any ε > 0 arbitrarily small. This answers an even older question posed by Dobkin and Kirkpatrick 30 years ago. In addition, we provide an alternative O(log |P |+ log |Q|) algorithm to test the intersection of two convex polygons P and Q in the plane.	algorithm;david p. dobkin;polyhedron;preprocessor;time complexity	Luis Barba;Stefan Langerman	2015		10.1137/1.9781611973730.109	combinatorics;discrete mathematics;mathematics;geometry	Theory	30.043566045555387	18.84155261740636	161741
1cf30a77eaa3a87df8e68807790b60bf7fbeb458	minimum degree games for graphs	minimum degree	Given δ and n, a minimum degree game starts with n disconnected nodes. Two players alternate, each adding a new edge in turn, until the resulting graph has minimum degree at least δ. In the achievement game, the last player to move is the winner; in the avoidance game, the last to play is the loser. We determine a winning strategy for the avoidance game for every δ and n. The achievement game is much harder to analyze. We determine a winning strategy for δ ≤ 3 and every n. For arbitrary δ the form of a winning strategy is conjectured, but we have only proved it when n − δ is odd.	degree (graph theory);graph (discrete mathematics)	Daniel M. Gordon;Robert W. Robinson;Frank Harary	1994	Discrete Mathematics	10.1016/0012-365X(94)90109-0	combinatorics;example of a game without a value;game tree;information set;repeated game;mathematics;sequential game	Theory	28.70776985297502	24.467819490985644	162479
52d8f71e61a013006d6e0e17b83fd956436f7659	space-query-time tradeoff for computing the visibility polygon	space query time tradeoff;1 r cutting;visibility polygon;time use;logarithmic query time	In this paper, we consider the problem of computing the visibility polygon (VP) of a query point q (or VP(q)) in a scene consisting of some obstacles with total complexity of n. We show that the combinatorial representation of VP(q) can be computed in logarithmic time by preprocessing the scene in O(n log n) time and using O(n) space. We can also report the actual VP(q) in additional O(|VP(q)|) time. As a main result of this paper, we will prove that we can have a tradeoff between the query time and the preprocessing time/space. In other words, we will show that using O(m) space, we can obtain O(n log( √ m/n)/ √ m) query time, where m is a parameter satisfying n ≤ m ≤ n. For example, when m = n, the query time of our algorithm is O( √ n log √ n), that improves the query time of the only available algorithm with this memory usage in [26], which degrades to O(n log n) in the worst case. An elegant feature of our algorithm that makes it useful in many applications is that it can determine the properties of the VP without actually computing it.	algorithm;angularjs;kolmogorov complexity;preprocessor;sorting;space–time tradeoff;time complexity;visibility polygon	Mostafa Nouri;Mohammad Ghodsi	2009		10.1007/978-3-642-02270-8_14	mathematical optimization;combinatorics;theoretical computer science;mathematics	Theory	30.007191662140674	18.730114437244	162572
711ff0382c2e9aa04bf47dbd595ac345d37d2679	enhancing partition crossover with articulation points analysis		Partition Crossover is a recombination operator for pseudo-Boolean optimization with the ability to explore an exponential number of solutions in linear or square time. It decomposes the objective function as a sum of subfunctions, each one depending on a different set of variables. The decomposition makes it possible to select the best parent for each subfunction independently and the operator provides the best out of 2q solutions, where q is the number of sub-functions in the decomposition. These subfunctions are defined over the connected components of the recombination graph: a subgraph of the objective function variable interaction graph containing only the differing variables in the two parents. In this paper, we advance further and propose a new way to increase the number of linearly independent subfunctions by analyzing the articulation points of the recombination graph. These points correspond to variables that, once flipped, increase the number of connected components. The presence of a connected component with an articulation point increases the number of explored solutions by a factor of, at least, 4. We evaluate the new operator using Iterated Local Search combined with Partition Crossover to solve NK Landscapes and MAX-SAT.		Francisco Chicano;Gabriela Ochoa;L. Darrell Whitley;Renato Tinós	2018		10.1145/3205455.3205561	mathematical optimization;operator (computer programming);partition (number theory);linear independence;computer science;crossover;iterated local search;connected component;exponential function;graph	ML	25.448316811842695	19.017606479127426	162868
1345985f248d012539ade6b0b463c03f6ae7e844	point-set embeddings of plane 3-trees - (extended abstract)	point set embedding;plane 3 tree;lower bound	A straight-line drawing of a plane graph G is a planar drawing of G, where each vertex is drawn as a point and each edge is drawn as a straight-line segment. Given a set S of n points on the Euclidean plane, a point-set embedding of a plane graph G with n vertices on S is a straight-line drawing of G, where each vertex of G is mapped to a distinct point of S. The problem of deciding if G admits a point-set embedding on S is NP-complete in general and even when G is 2-connected and 2-outerplanar. In this paper we give an O(n log n) time algorithm to decide whether a plane 3-tree admits a point-set embedding on a given set of points or not, and find an embedding if it exists. We prove an Ω(n log n) lower bound on the time complexity for finding a pointset embedding of a plane 3-tree. Moreover, we consider a variant of the problem where we are given a plane 3-tree G with n vertices and a set S of k > n points, and give a polynomial time algorithm to find a point-set embedding of G on S if it exists.	line drawing algorithm;planar graph;polynomial;time complexity;upward planar drawing;vertex (geometry)	Rahnuma Islam Nishat;Debajyoti Mondal;Md. Saidur Rahman	2010		10.1007/978-3-642-18469-7_29	combinatorics;discrete mathematics;graph embedding;topology;planar straight-line graph;mathematics;upper and lower bounds	Theory	30.490460009938094	21.074653067916604	163393
2c69c986c9514daf70aebb1bd2f0cc1514961500	unions of fat convex polytopes have short skeletons	convex polytope;convex polytopes;combinatorial complexity;skeleton of union	The skeleton of a polyhedral set is the union of its edges and vertices. Let P be a set of fat, convex polytopes in three dimensions with n vertices in total, and let fmax be the maximum complexity of any face of a polytope in P. We prove that the total length of the skeleton of the union of the polytopes in P is at most O(α(n) · log∗ n · log fmax) times the sum of the skeleton lengths of the individual polytopes.	cross section (geometry);polyhedron;vertex (geometry)	Boris Aronov;Mark de Berg	2012	Discrete & Computational Geometry	10.1007/s00454-012-9422-8	face;polytope;combinatorics;discrete mathematics;convex polytope;topology;polyhedral combinatorics;mathematics;geometry;regular polytope	Theory	31.822444293321688	20.874346219970658	163692
ee098a48e83e01c4b5ad84937e0c7dc5911794f4	on measuring areas of polygons		(Abstract) The measurement of areas and volumes of sets is a fundamental problem in mathematics and Computational Geometry. It is generally accepted that one of the motivations that fueled the development of geometry in early civilizations was the need to measure land for taxation purposes 1]. It is straightforward to see that calculating areas of polygons in the plane, and that volumes of polyherdra in R 3 can be done in linear time. In this paper we study the following problem: Suppose that we split a simple polygon P into two subpolygons Q 1 and Q 2 by cutting it along a line segment joining two m utually visible points p and q on its boundary, see Figure 1. How quickly can we measure the areas of Q and R? It is easy to see that this problem can be solved optimally i n linear time. Our main objective here, is to study how to speed up the measurement of the areas of Q 1 and Q 2 by using some preprocessing. We prove that after a linear amount of preprocessing the problems listed be-Q 2 Q 1 p q Figure 1: Cutting P along the line segment joining p to q. low can be solved as follows: 1. Measuring the areas of the sections obtained by cutting a convex polygon along a line segment joining two v ertices. This can be done in constant time. 2. Measuring the areas of the sections into which an arbitrary line splits a convex polygon. Solvable in O(lnn) time.	computation;computational geometry;decision problem;preprocessor;time complexity	Jurek Czyzowicz;F. Contreras-Alcalá;Jorge Urrutia	1998			discrete mathematics;combinatorics;polygon;computer science	Theory	31.064063043384884	18.963134077823597	164591
edac414815c6fb829d74951abafb6447d01068b2	on the number of views of translates of a cube and related problems	fat objects;aspect graphs;perspective views;polyhedral terrains;aspect graph;visibility;arrangements;combinatorial geometry;envelopes;upper and lower bounds;orthographic views	It is known that a general polyhedral scene of complexity n has at most O(n6) combinatorially different orthographic views and at most O (n9) combinatorially different perspective views, and that these bounds are in the worst case. In this paper we show that, for the special case of scenes consisting of a collection of n tra slates of a cube, these bounds improve to O (n4+ε) and O(n6+ε), for any ε > 0, respectively. In addition, we prese constructions inducing (n4) combinatorially different orthographic views and (n6) combinatorially different perspective views, thus showing that these bounds are nearly tight in the worst case. Finally, we show extend the upper and lower bounds to several classes of related scenes.  2003 Published by Elsevier B.V.	best, worst and average case;calculus of constructions;orthographic projection;polyhedron	Boris Aronov;Robert Schiffenbauer;Micha Sharir	2004	Comput. Geom.	10.1016/j.comgeo.2003.10.001	discrete geometry;combinatorics;discrete mathematics;visibility;mathematics;geometry;orthographic projection;upper and lower bounds	Theory	31.86904910997655	22.08183927140612	165064
6f8a7ab23bf810669f01b733d7b5452f724f4a3c	convex partial transversals of planar regions		We consider the problem of testing, for a given set of planar regions R and an integer k, whether there exists a convex shape whose boundary intersects at least k regions of R. We provide a polynomial time algorithm for the case where the regions are disjoint line segments with a constant number of orientations. On the other hand, we show that the problem is NP-hard when the regions are intersecting axis-aligned rectangles or 3-oriented line segments. For several natural intermediate classes of shapes (arbitrary disjoint segments, intersecting 2-oriented segments) the problem remains open. 2012 ACM Subject Classification Theory of computation → Computational Geometry	algorithm;apache axis;computational geometry;np-hardness;p (complexity);polynomial;theory of computation	Vahideh Keikha;Mees van de Kerkhof;Marc J. van Kreveld;Irina Kostitsyna;Maarten Löffler;Frank Staals;Jérôme Urhausen;Jordi L. Vermeulen;Lionov Wiratma	2018	CoRR	10.4230/LIPIcs.ISAAC.2018.187	mathematics;combinatorics;discrete mathematics;computational geometry;regular polygon;existential quantification;line segment;planar;integer;transversal (geometry);disjoint sets	Theory	31.758593027238174	20.3911368963999	165669
d091ff50bce451ae4b83efdc3c2307daf90cccf2	minimum 0-extensions of graph metrics	distance function;finite metric;connected graph;multi commodity flow;metric extension;polynomial time;linear programming relaxation;multiterminal cut;isometric embedding;minimum cut	LetH=(T,U) be a connected graph,V?Ta set, andca non-negative function on the unordered pairs of elements ofV. In theminimum0-extension problem(*), one is asked to minimize the inner productcmover all metricsmonVsuch that (i)mcoincides with the distance function ofHwithinT; and (ii) eachv?Vis at zero distance from somes?T, i.e.m(v,s)=0. This problem is known to be NP-hard ifH=K3(as being equivalent to the minimum 3-terminal cut problem), while it is polynomially solvable ifH=K2(the minimum cut problem) orH=K2,r(the minimum (2,r)-metric problem). We study problem (*) for all fixedH. More precisely, we consider the linear programming relaxation (**) of (*) that is obtained by dropping condition (ii) above, and callHminimizableif the minima in (*) and (**) coincide for allVandc. Note that for such anHproblem (*) is solvable in strongly polynomial time. Our main theorem asserts thatHis minimizable if and only ifHis bipartite, has no isometric circuit with six or more nodes, and is orientable in the sense thatHcan be oriented so that nonadjacent edges of any 4-circuit are oppositely directed along this circuit. The proof is based on a combinatorial and topological study of tight and extreme extensions of graph metrics. Based on the idea of the proof of the NP-hardness for the minimum 3-terminal cut problem in 4, we then show that the minimum 0-extension problem is strongly NP-hard for many non-minimizable graphsH. Other results are also presented.		Alexander V. Karzanov	1998	Eur. J. Comb.	10.1006/eujc.1997.0154	time complexity;maximum cut;combinatorics;discrete mathematics;topology;minimum cut;cut;metric;linear programming relaxation;connectivity;mathematics;geometry;closure problem;minimum k-cut;algebra	Theory	26.38971338492999	21.500861769739508	166409
28e88be4db6082e8b5a7ff009e0f14f1d3fab725	improved pseudo-polynomial-time approximation for strip packing		We study the strip packing problem, a classical packing problem which generalizes both bin packing and makespan minimization. Here we are given a set of axis-parallel rectangles in the two-dimensional plane and the goal is to pack them in a vertical strip of fixed width such that the height of the obtained packing is minimized. The packing must be non-overlapping and the rectangles cannot be rotated. A reduction from the partition problem shows that no approximation better than 3/2 is possible for strip packing in polynomial time (assuming P6=NP). Nadiradze and Wiese [SODA16] overcame this barrier by presenting a ( 5 + ǫ)-approximation algorithm in pseudo-polynomial-time (PPT). As the problem is strongly NP-hard, it does not admit an exact PPT algorithm. In this paper we make further progress on the PPT approximability of strip packing, by presenting a ( 3 +ǫ)-approximation algorithm. Our result is based on a non-trivial repacking of some rectangles in the empty space left by the construction by Nadiradze and Wiese, and in some sense pushes their approach to its limit. Our PPT algorithm can be adapted to the case where we are allowed to rotate the rectangles by 90◦, achieving the same approximation factor and breaking the polynomial-time approximation barrier of 3/2 for the case with rotations as well.	apache axis;approximation algorithm;bin packing problem;convex optimization;hardness of approximation;makespan;np-hardness;partition problem;peres–horodecki criterion;polynomial;pseudo-polynomial time;set packing;spectrum reallocation;strong np-completeness;tab stop;time complexity	Waldo Gálvez;Fabrizio Grandoni;Salvatore Ingala;Arindam Khan	2016		10.4230/LIPIcs.FSTTCS.2016.9	square packing in a square;time complexity;combinatorics;set packing;pseudo-polynomial time;mathematics;circle packing;packing problems;mathematical optimization;bin packing problem;partition problem	Theory	28.938320002423048	19.25507398933103	166430
f5f7d172e6fa9fa1cd0bde54e75ba3e0efa7698a	improved computation of plane steiner minimal trees	computer program;total length;steiner minimal tree	ASteiner Minimal Tree (SMT) for a given setA = {a 1,...,a n } in the plane is a tree which interconnects these points and whose total length, i.e., the sum of lengths of the branches, is minimum. To achieve the minimum, the tree may contain other points (Steiner points) besidesa 1,...,a n . Various improvements are presented to an earlier computer program of the authors for plane SMTs. These changes have radically reduced machine times. The existing program was limited in application to aboutn = 30, while the innovations have facilitated solution of many randomly generated 100-point problems in reasonable processing times.	computation;computer program;electrical connection;procedural generation;steiner tree problem;tree (data structure)	Ernest J. Cockayne;Denton E. Hewgill	1992	Algorithmica	10.1007/BF01758759	combinatorics;discrete mathematics;steiner tree problem;range tree;mathematics;algorithm	Theory	30.006805506022587	22.058398308531093	166638
5016b6110c05d5a1edd1c693e90dd854e18d28c5	algorithms for stable and perturbation-resilient problems		We study the notion of stability and perturbation resilience introduced by Bilu and Linial (2010) and Awasthi, Blum, and Sheffet (2012). A combinatorial optimization problem is Î±-stable or Î±-perturbation-resilient if the optimal solution does not change when we perturb all parameters of the problem by a factor of at most Î±. In this paper, we give improved algorithms for stable instances of various clustering and combinatorial optimization problems. We also prove several hardness results.  We first give an exact algorithm for 2-perturbation resilient instances of clustering problems with natural center-based objectives. The class of clustering problems with natural center-based objectives includes such problems as k-means, k-median, and k-center. Our result improves upon the result of Balcan and Liang (2016), who gave an algorithm for clustering 1+â2â2.41 perturbation-resilient instances. Our result is tight in the sense that no polynomial-time algorithm can solve (2âÎµ)-perturbation resilient instances of k-center unless NP = RP, as was shown by Balcan, Haghtalab, and White (2016).  We then give an exact algorithm for (2â2/k)-stable instances of Minimum Multiway Cut with k terminals, improving the previous result of Makarychev, Makarychev, and Vijayaraghavan (2014), who gave an algorithm for 4-stable instances. We also give an algorithm for (2â2/k+Î´)-weakly stable instances of Minimum Multiway Cut.  Finally, we show that there are no robust polynomial-time algorithms for n1âÎµ-stable instances of Set Cover, Minimum Vertex Cover, and Min 2-Horn Deletion (unless P = NP).	blum axioms;cluster analysis;combinatorial optimization;exact algorithm;k-means clustering;mathematical optimization;metric k-center;np (complexity);optimization problem;p versus np problem;perturbation theory;polynomial;rp (complexity);time complexity;vertex cover	Haris Angelidakis;Konstantin Makarychev;Yury Makarychev	2017		10.1145/3055399.3055487	combinatorics;discrete mathematics;cluster analysis;set cover problem;k-means clustering;vertex cover;algorithm;polynomial;combinatorial optimization;exact algorithm;mathematical optimization;perturbation (astronomy);mathematics	Theory	24.953290252334014	18.669266360527647	166656
617e1138e24196b44d3fcf9541fcfa4329d08e96	tighter estimates for epsilon-nets for disks		The geometric hitting set problem is one of the basic geometric combinatorial optimization problems: given a set P of points, and a set D of geometric objects in the plane, the goal is to compute a smallsized subset of P that hits all objects in D. In 1994, Bronniman and Goodrich [5] made an important connection of this problem to the size of fundamental combinatorial structures called -nets, showing that small-sized -nets imply approximation algorithms with correspondingly small approximation ratios. Very recently, Agarwal-Pan [2] showed that their scheme can be implemented in near-linear time for disks in the plane. Altogether this gives O(1)-factor approximation algorithms in Õ(n) time for hitting sets for disks in the plane. This constant factor depends on the sizes of -nets for disks; unfortunately, the current state-of-theart bounds are large – at least 24/ and most likely larger than 40/ . Thus the approximation factor of the Agarwal-Pan algorithm ends up being more than 40. The best lower-bound is 2/ , which follows from the Pach-Woeginger construction [26] for halfspaces in two dimensions. Thus there is a large gap between the best-known upper and lower bounds. Besides being of independent interest, finding precise bounds is important since this immediately implies an improved linear-time algorithm for the hitting-set problem. The main goal of this paper is to improve the upper-bound to 13.4/ for disks in the plane. The proof is constructive, giving a simple algorithm that uses only Delaunay triangulations. We have implemented the algorithm, which is available as a public open-source module. Experimental results show that the sizes of -nets for a variety of data-sets is lower, around 9/ .	approximation algorithm;combinatorial optimization;delaunay triangulation;dynamic range;floppy disk;mathematical optimization;open-source software;provable security;set cover problem;time complexity;vertex cover	Norbert Bus;Shashwat Garg;Nabil H. Mustafa;Saurabh Ray	2015	CoRR		mathematical optimization;combinatorics;discrete mathematics;mathematics;geometry	Theory	25.27914981513385	19.710395280264507	166695
c55d7d58c7f4317cef8753efd85f137de3608458	$β$-skeletons for a set of line segments in $r^2$		We generalize β-skeletons, well-known neighborhood graphs for point sets, to sets of line segments and present algorithms for computing such skeletons, both circle and lens-based, for the entire range of β values. In particular, for β ≥ 1 the β-skeleton for a set S on n segments in the Euclidean plane can be constructed in O(nα(n) log n) time and the construction relies on the Delaunay triangulation for S. When 0 ≤ β ≤ 1, the β-skeleton can be constructed in a O(n) time. In a special case of β = 1, which is a generalization of Gabriel Graph, the construction can be carried out in a O(n log n) time. Additionally, we show that inclusions between Gabriel Graph (β = 1), Relative Neighborhood Graph (β = 2), and the Delaunay triangulation known to hold for sets of points, generalize to those graphs constructed for sets of segments.	algorithm;beta skeleton;delaunay triangulation;rainbows end;time complexity;voronoi diagram	Miroslaw Kowaluk;Gabriela Majewska	2015		10.1007/978-3-319-22177-9_6	combinatorics;topology;mathematics;geometry	Theory	30.866183453935523	19.85369441880962	167646
ae9b52384b0cfd97199069972482e8d5ca27151d	linear algorithms on recursive representations of trees		A recursive labeling of a tree T with M vertices is any assignment of the labels 1, 2,…, M to the vertices of T which has the property that every vertex, except the vertex labeled ‘1’ is adjacent to exactly one vertex with a smaller label. A corresponding recursive representation of T is the array C(2), C(3),…, C(M), where C(i) is the unique vertex adjacent to i having a smaller label. In this paper we discuss the feasibility, advantages and relative efficiency of using this representation to design algorithms on trees.	algorithm;recursion (computer science)	Sandra Mitchell Hedetniemi;Ernest J. Cockayne;Stephen T. Hedetniemi	1979	J. Comput. Syst. Sci.	10.1016/0022-0000(79)90053-9	combinatorics;discrete mathematics;topology;vertex;mathematics;neighbourhood	Theory	25.995504369099045	24.629509806539097	167876
fe7d36f21fc977a8a7d8ce1f17c750bb3f577ab1	densely embedded graphs	embedding;plongement dense;graph girth;largeur face;embedded graph;grafo;triangulacion;graph;graphe;plongement;superficie;surface;graphe dual;triangulation;calibre graphe;inmersion;graphe polygonal	Abstract   Let  G  be a graph embedded in a surface  S . The  face-width  of the embedding is the minimum size |  C ⋔ G  | over all noncontractible cycles  C  in  S . The face-width measures how densely a graph is embedded in a surface, equivalently, how well an embedded graph represents a surface. In this paper we present a construction of densely embedded graphs with a variety of interesting properties. The first application is the construction of embeddings where both the primal and the dual graph have large girth. A second application is the construction of a graph with embeddings on two different surfaces, each embedding of large face-width. These embeddings are counterexamples to a conjecture by Robertson and Vitray. In the third application we examine the number of triangles needed to triangulate a surface  S  such that every noncontractible cycle is of length at least  k . Surprisingly, for large  g  the number is approximately 4 g , regardless of  k . The fourth application is the construction of trivalent polygonal graphs. We close with some observations and directions for further research.	embedded system	Dan Archdeacon	1992	J. Comb. Theory, Ser. B	10.1016/0095-8956(92)90064-5	lattice graph;graph power;pathwidth;topological graph theory;combinatorics;discrete mathematics;universal graph;graph embedding;dual graph;topology;triangulation;graph toughness;forbidden graph characterization;toroidal graph;embedding;symmetric graph;graph factorization;mathematics;graph;surface;vertex-transitive graph;graph minor;complement graph;book embedding;line graph;string graph;coxeter graph;planar graph	Theory	31.68906018340449	24.814442738517705	167953
5e2f84cf109b995b86467caa6ff65495bfa1e0a5	leveling the grid	inproceedings	Motivated by an application in image processing, we introduce the grid-leveling problem. It turns out to be the dual of a minimum cost flow problem for an apex graph with a grid graph as its basis. We present an O(n) algorithm for this problem. The optimum solution recovers missing DC coefficients from image and video coding by Discrete Cosine Transform used in popular standards like JPEG and MPEG. Generally, we prove that there is an O(n) min-cost flow algorithm for networks that, after removing one node, are planar, have bounded degrees, and have bounded capacities. The costs may be arbitrary.	algorithm;apex (geometry);apex graph;coefficient;data compression;discrete cosine transform;flow network;image processing;jpeg;lattice graph;maxima and minima;maximum flow problem;minimum-cost flow problem;moving picture experts group	Sabine Cornelsen;Andreas Karrenbauer;Shujun Li	2012		10.1137/1.9781611972924.4	mathematical optimization;combinatorics;discrete mathematics;computer science;theoretical computer science;mathematics;geometry;algorithm	Theory	26.839035630884734	21.37476501827061	168534
717bfb9c3a8ce2e29560a55589b160d4b41dd6f5	multicuts in planar and bounded-genus graphs with bounded number of terminals	algorithm;graph;computational topology;multicut;planar graph;surface;embedding	Given an undirected, edge-weighted graph G together with pairs of vertices, called pairs of terminals, the minimum multicut problem asks for a minimum-weight set of edges such that, after deleting these edges, the two terminals of each pair belong to different connected components of the graph. Relying on topological techniques, we provide a polynomial-time algorithm for this problem in the case where G is embedded on a fixed surface of genus g (e.g., when G is planar) and has a fixed number t of terminals. The running time is a polynomial of degree  $$O\big (\sqrt{g^2+gt}\big )$$ O ( g 2 + g t ) in the input size. In the planar case, our result corrects an error in an extended abstract by Bentz (Int. Workshop on Parameterized and Exact Computation, 109–119, 2012). The minimum multicut problem is also a generalization of the multiway cut problem, a.k.a. multiterminal cut problem; even for this special case, no dedicated algorithm was known for graphs embedded on surfaces.	algorithm;computation;connected component (graph theory);embedded system;graph (discrete mathematics);information;multiseat configuration;planar (computer graphics);polynomial;time complexity	Éric Colin de Verdière	2016	Algorithmica	10.1007/s00453-016-0258-0	mathematical optimization;combinatorics;discrete mathematics;mathematics	Theory	27.40479133080736	23.79045419664805	168591
b0dd0f900eee11640b7973e25e2a3816e3076be4	efficient decomposition of polygons into l-shapes with application to vlsi layouts	rectilinear polygons;objective function;partition;vlsi layout;rectangle;corner stitching;l shapes;data structure	We present two practical algorithms for partitioning circuit components represented by rectilinear polygons so that they can be stored using the L-shaped corner stitching data structure; that is, our algorithms decompose a simple polygon into a set of nonoverlapping L-shapes and rectangles by using horizontal cuts only. The more general of our algorithms computes and optimal configuration for a wide variety of optimization functions, whereas the other computes a minimum configuration of rectangles and L-shapes. Both algorithms run in <italic>O</italic>(<italic>n</italic> + <italic>h</italic> log <italic>h</italic> time, where <italic>n</italic> is the number of vertices in the polygon and <italic>h</italic> is the number of H-pairs. Because for VLSI data <italic>h</italic> is small, in practice these algorithms are linear in <italic>n</italic>. Experimental results on actual VLSI data compare our algorithms and demonstrate the gains in performance for corner stitching (as measured by different objective functions) obtained by using them instead of more traditional rectangular partitioning algorithms.	algorithm;data structure;image stitching;mathematical optimization;regular grid;vertex (graph theory);very-large-scale integration	Mario A. López;Dinesh P. Mehta	1996	ACM Trans. Design Autom. Electr. Syst.	10.1145/234860.234865	partition;mathematical optimization;combinatorics;data structure;rectilinear polygon;computer science;mathematics;programming language	Graphics	29.532159545209762	20.466858464950135	168960
26731667824c097ccaf4e6db2110936aae839865	from points to nodes: inverse graph embedding through a lagrangian formulation	deterministic annealing;graph based methods;inverse embedding;lagrangian formulation	In this paper, we introduce a novel concept: Inverse Embedding. We formulate inverse embedding in the following terms: given a set of multi-dimensional points coming directly or indirectly from a given spectral embedding, find the mininal complexity graph (following a MDL criterion) which satisfies the embedding constraints. This means that when the inferred graph is embedded it must provide the same distribution of squared distances between the original multi-dimensional vectors. We pose the problem in terms of a Lagrangian and find that a fraction of the multipliers (the smaller ones) resulting from the deterministic annealing process provide the positions of the edges of the unknown graph. We proof the convergence of the algorithm through an analysis of the dynamics of the deterministic annealing process and test the method with some significant sample graphs.	graph embedding	Francisco Escolano;Edwin R. Hancock	2011		10.1007/978-3-642-23672-3_24	topological graph theory;mathematical optimization;combinatorics;discrete mathematics;graph embedding;null graph;clique-width;planar straight-line graph;mathematics;voltage graph;distance-hereditary graph;complement graph;book embedding;strength of a graph;planar graph	HCI	26.819525224518774	20.447872525894113	169052
306dd5b7c208f5484c46410a760e2b331f35f643	i/o efficient path traversal in well-shaped tetrahedral meshes	data structure;memory model;linear space	We present a data structure which represents a wellshaped convex tetrahedral mesh, M, in linear space such that path traversals visiting a sequence of K tetrahedra require O (K/ lgB) I/O operations in the external memory model. As applications of our structure we show how to efficiently perform axis parallel box queries and how to report the intersection of M with an arbitrarily oriented plane.	data structure;directory traversal attack;input/output;optic axis of a crystal;tree traversal	Craig Dillabaugh	2010			discrete mathematics;auxiliary memory;memory model;combinatorics;linear space;tree traversal;input/output;data structure;tetrahedron;polygon mesh;mathematics	DB	31.246685745779182	18.772114881935714	169469
14c755f31a355ee6f5477dcae09304e0546b1071	on minimum area planar upward drawings of directed trees and other families of directed acyclic graphs	directed acyclic graph;graph drawing;trees;minimum area	It has been shown that there exist planar digraphs that require exponential area in every upward straight-line planar drawing. On the other hand, upward poly-line planar drawings of planar graphs can be realized in Θ(n2) area. In this paper we consider families of DAGs that naturally arise in practice, like DAGs whose underlying graph is a tree (directed trees), is a bipartite graph (directed bipartite graphs), or is an outerplanar graph (directed outerplanar graphs). Concerning directed trees, we show that optimal Θ(n log n) area upward straight-line/poly-line planar drawings can be constructed. However, we prove that if the order of the neighbors of each node is assigned, then exponential area is required for straight-line upward drawings and quadratic area is required for poly-line upward drawings, results surprisingly and sharply contrasting with the area bounds for planar upward drawings of undirected trees. After having established tight bounds on the area requirements of planar upward drawings of several families of directed trees, we show how the results obtained for trees can be exploited to determine asymptotic optimal values for the area occupation of planar upward drawings of directed bipartite graphs and directed outerplanar graphs.	directed acyclic graph	Fabrizio Frati	2008	Int. J. Comput. Geometry Appl.	10.1142/S021819590800260X	outerplanar graph;pathwidth;combinatorics;discrete mathematics;pancyclic graph;planar straight-line graph;mathematics;distributed computing;graph drawing;directed acyclic graph;book embedding;algorithm;planar graph	Theory	29.77053783361082	24.35508446470655	170082
53b5745b75f961f3e4aa60d9a23a54fcb100ee39	a new algorithm for finding faces in wireframes	wireframe;line drawing interpretation;face identification;context dependent;visual perception	The problemof identifying the topology implied bywireframe drawings of polyhedral objects requires the identification of face loops, loops of edges which correspond to a face in the object the drawing portrays. In this paper, we survey the advantages and limitations of known approaches, and present and discuss test results which illustrate the successes and failures of a currently popular approach based on Dijkstra’s Algorithm.We conclude that the root cause ofmany failure cases is that the underlying algorithmassumes that the cost of traversing an edge is fixed. We propose a new polynomial-order algorithm for finding faces in wireframes. This algorithm could be adapted to any graph-theoretical least-cost circuit problemwhere the cost of traversing an edge is not fixed but context-dependent. © 2010 Published by Elsevier Ltd	context-sensitive language;cycle detection;dijkstra's algorithm;emoticon;graph theory;langton's loops;polyhedron;polynomial;website wireframe	P. A. C. Varley;Pedro Company	2010	Computer-Aided Design	10.1016/j.cad.2009.11.008	computer vision;wire-frame model;visual perception;computer science;artificial intelligence;context-dependent memory;engineering drawing	EDA	29.80486299429839	22.626454408474565	170936
a3a252015a5f78360babb504b8492a13a81e1b42	manhattonian proximity in a simple polygon	computational geometry;simple polygon;voronoi diagram	Let P be a simple planar polygon. We present a linear time algorithm for constructing the bounded Voronoi diagram of P in the Manhattan metric, where each point z in P belongs to the region of the closest vertex of P that is visible from z. Among other consequences, the minimum spanning tree of the vertices in the Manhattan metric that is contained in P can be computed within optimal linear time. The same results hold for the L∞-metric.α		Rolf Klein;Andrzej Lingas	1995	Int. J. Comput. Geometry Appl.	10.1142/S0218195995000052	internal and external angle;combinatorics;vertex angle;power diagram;complex polygon;topology;voronoi diagram;visibility polygon;simple polygon;computational geometry;rectilinear polygon;star-shaped polygon;polygon;mathematics;equiangular polygon;geometry;affine-regular polygon;monotone polygon;midpoint polygon;polygon covering;polygon triangulation;pick's theorem;biggest little polygon;equilateral polygon	Theory	31.575265443414867	20.719654285557947	171086
23d90fcc17db211f41b345fe3a0260da0d4964e6	computing beta -drawings of 2-outerplane graphs in linear time	β drawing;graph drawing;2 outerplane graph;linear time algorithm;satisfiability;line drawings;slicing path;proximity drawing;linear time;proximity graph;geometric constraints;good slicing path;plane graph	"""A straight-line drawing of a plane graph G is a drawing of G where each vertex is drawn as a point and each edge is drawn as a straight-line segment without edge crossings. A proximity drawing Γ of a plane graph G is a straight-line drawing of G with the additional geometric constraint that two vertices of G are adjacent if and only if no other vertex of G is drawn in Γ within a """"proximity region"""" of these two vertices in Γ. Depending upon how the proximity region is defined, a given plane graph G may or may not admit a proximity drawing. In one class of proximity drawings, known as β-drawings, the proximity region is defined in terms of a parameter β, where β Ɛ [0, ∞). A plane graph G is β-drawable if G admits a β-drawing. A sufficient condition for a biconnected 2-outerplane graph G to have a β-drawing is known. However, the known algorithm for testing the sufficient condition takes time O(n2). In this paper, we give a linear-time algorithm to test whether a biconnected 2-outerplane graph G satisfies the known sufficient condition or not. This consequently leads to a linear algorithm for β-drawing of a wide subclass of biconnected 2-outerplane graphs."""	time complexity	Md. Abul Hassan Samee;Mohammad Tanvir Irfan;Md. Saidur Rahman	2008		10.1007/978-3-540-77891-2_8	outerplanar graph;block graph;lattice graph;time complexity;graph power;combinatorics;geometric graph theory;discrete mathematics;topological graph;graph bandwidth;slope number;dominance drawing;degree;computer science;simplex graph;force-directed graph drawing;graph factorization;mathematics;voltage graph;biconnected graph;graph drawing;crossing number;complement graph;line graph;algorithm;string graph;planar graph;satisfiability	Theory	31.137959632090624	23.193205046787785	171322
4c444a92a7e4bc09356f48d894524090ebcd06bd	implicitly searching convolutions and computing depth of collision	efficient algorithm;computer vision	Given two intersecting polyhedra P, Q and a direction d, find the smallest translation of Q along d that renders the interiors of P and Q disjoint. The same question can also be asked without specifying the direction, in which case the minimum translation over all directions is sought. These are fundamental problems that arise in robotics and computer vision. We develop techniques for implicitly building and searching convolutions and apply them to derive efficient algorithms for these problems.	convolution	David P. Dobkin;John Hershberger;David G. Kirkpatrick;Subhash Suri	1990		10.1007/3-540-52921-7_66	computer vision;mathematical optimization;computer science;theoretical computer science	Theory	31.47726969382264	18.448180026049457	171760
2cb034ce54328a1305074c5b7e93138c17943b23	an efficient dijkstra-like labeling method for computing shortest odd/even paths		Abstract   We show how the problem of determining shortest paths of even or odd length between two specified vertices in a graph G = (V, E) can be reduced to the problem of finding a shortest alternating path with respect to a specific matching in a related graph H. This problem can be solved by a Dijkstra-like labeling procedure of complexity O(|V| 2 ) respectively O(|E|log|V|). Interpreting this procedure appropriately the method can then be applied directly on the given graph G.	dijkstra's algorithm	Ulrich Derigs	1985	Inf. Process. Lett.	10.1016/0020-0190(85)90094-8	graph power;mathematical optimization;factor-critical graph;combinatorics;discrete mathematics;canadian traveller problem;graph bandwidth;edge-graceful labeling;floyd–warshall algorithm;graph labeling;median graph;distance-regular graph;path graph;mathematics;path;shortest path problem;graph homomorphism;distance;complement graph;k shortest path routing	DB	25.1836684624109	23.76939638668142	171821
0a62927108969bf3c1216e8a12458861c4d4e205	computing the fréchet distance between polygons with holes		We study the problem of computing the Fréchet distance between subsets of Euclidean space. Even though the problem has been studied extensively for 1-dimensional curves, very little is known for d-dimensional spaces, for any d ≥ 2. For general polygons in R, it has been shown to be NP-hard, and the best known polynomial-time algorithm works only for polygons with at most a single puncture [Buchin et al., 2010]. Generalizing [Buchin et al., 2008] we give a polynomial-time algorithm for the case of arbitrary polygons with a constant number of punctures. Moreover, we show that approximating the Fréchet distance between polyhedral domains in R to within a factor of n log logn is NP-hard.	approximation algorithm;fréchet distance;np-hardness;polyhedron;time complexity	Amir Nayyeri;Anastasios Sidiropoulos	2015		10.1007/978-3-662-47672-7_81	smoothing group;combinatorics;topology;geometry	Theory	29.666187018461315	18.814676258089776	171964
3e0d7a31ab7368ac7e7bc78164c19b42b9c017e8	a local algorithm for finding dense subgraphs	maximum degree;local algorithm;high density;local algorithms;spectral graph theory;bipartite graph;dense subgraphs	We describe a local algorithm for finding subgraphs with high density, according to a measure of density introduced by Kannan and Vinay [1999]. The algorithm takes as input a bipartite graph <i>G</i>, a starting vertex <i>v</i>, and a parameter <i>k</i>, and outputs an induced subgraph of <i>G</i>. It is local in the sense that it does not examine the entire input graph; instead, it adaptively explores a region of the graph near the starting vertex. The running time of the algorithm is bounded by <i>O</i>(Δ <i>k</i><sup>2</sup>), which depends on the maximum degree Δ, but is otherwise independent of the graph. We prove the following approximation guarantee: for any subgraph <i>S</i> with <i>k′</i> vertices and density θ, there exists a set <i>S</i>′ ⊆ <i>S</i> for which the algorithm outputs a subgraph with density Ω(θ/log Δ) whenever <i>v</i> ∈ <i>S</i>′ and <i>k</i> ≥ <i>k</i>′. We prove that <i>S</i>′ contains at least half of the edges in <i>S</i>.	approximation;degree (graph theory);induced subgraph;local algorithm;time complexity	Reid Andersen	2008		10.1145/1824777.1824780	degeneracy;claw-free graph;graph power;edge-transitive graph;k-edge-connected graph;factor-critical graph;combinatorics;discrete mathematics;topology;bipartite graph;degree;regular graph;simplex graph;forbidden graph characterization;cycle graph;vertex;graph factorization;mathematics;distance-hereditary graph;blossom algorithm;butterfly graph;spectral graph theory;line graph;neighbourhood;matching	Theory	27.24430471631799	22.766130985446484	173038
36990a253e8bb78db38f6c83a0ca0ce1fb899624	critical placements of a square or circle amidst trajectories for junction detection		Motivated by automated junction recognition in tracking data, we study a problem of placing a square or disc of fixed size in an arrangement of lines or line segments in the plane. We let distances among the intersection points of the lines and line segments with the square or circle define a clustering, and study the complexity of critical placements for this clustering. Here critical means that arbitrarily small movements of the placement change the clustering. A parameter ε defines the granularity of the clustering. Without any assumptions on ε, the critical placements have a trivial O(n) upper bound. When the square or circle has unit size and 0 < ε < 1 is given, we show a refined O(n/ε) bound, which is tight in the worst case. We use our combinatorial bounds to design efficient algorithms to compute junctions. As a proof of concept for our algorithms we have a prototype implementation that showcases their application in a basic visualization of a set of n trajectories and their k most important junctions.	algorithm;best, worst and average case;cluster analysis;embedded system;expect;experiment;linear function;prototype;time complexity	Ingo van Duijn;Irina Kostitsyna;Marc J. van Kreveld;Maarten Löffler	2016			combinatorics;discrete mathematics;mathematics;geometry	Theory	31.108777010516377	20.98089749425017	173359
1b7b0651f2bf0d40c79a758dcf4d633202869f15	constant thresholds can make target set selection tractable	constant threshold;activation round;meaningful special case;target set selection tractable;target set vertex;spread of influence;kernelization;target set selection;minimum number;fixed-parameter algorithm;dynamic process;hardness result;target set;parameterized complexity;corresponding fixed-parameter tractability;dynamics in social networks	Target Set Selection, which is a prominent NP-hard problem occurring in social network analysis and distributed computing, is notoriously hard both in terms of achieving useful polynomial-time approximation as well as fixed-parameter algorithms. Given an undirected graph, the task is to select a minimum number of vertices into a “target set” such that all other vertices will become active in the course of a dynamic process (which may go through several activation rounds). A vertex, equipped with a threshold value t, becomes active once at least t of its neighbors are active; initially, only the target set vertices are active. We contribute further insights into the existence of islands of tractability for Target Set Selection by spotting new parameterizations characterizing some sparse graphs as well as some “cliquish” graphs and developing corresponding fixed-parameter tractability and (parameterized) hardness results. In particular, we demonstrate that upper-bounding the thresholds by a constant may significantly alleviate the search for efficiently solvable, but still meaningful special cases of Target Set Selection.	algorithm;approximation;cobham's thesis;decision problem;distributed computing;graph (discrete mathematics);np-hardness;parameterized complexity;polynomial;social network analysis;sparse matrix;time complexity;vertex (geometry);vertex (graph theory)	Morgan Chopin;André Nichterlein;Rolf Niedermeier;Mathias Weller	2013	Theory of Computing Systems	10.1007/s00224-013-9499-3	mathematical optimization;combinatorics;discrete mathematics;mathematics	ML	25.222918374951046	21.622783727541755	173748
7461de80d92be734160cbde00b5319a2696a33dc	unions of onions: preprocessing imprecise points for fast onion layer decomposition	imprecise point;n pairwise disjoint unit;onion decomposition;disjoint onion decomposition;fast onion layer decomposition;fast algorithm;n logn;recursive space decomposition;linear size;convex layer;data structure;n logk	Let D be a set of n pairwise disjoint unit disks in the plane. 8 We describe how to build a data structure for D so that for any point 9 set P containing exactly one point from each disk, we can quickly find 10 the onion decomposition (convex layers) of P . 11 Our data structure can be built in O(n logn) time and has linear size. 12 Given P , we can find its onion decomposition in O(n log k) time, where 13 k is the number of layers. We also provide a matching lower bound. 14 Our solution is based on a recursive space decomposition, combined with 15 a fast algorithm to compute the union of two disjoint onion decomposi16 tions. 17	algorithm;convex set;data structure;preprocessor;recursion	Maarten Löffler;Wolfgang Mulzer	2013		10.1007/978-3-642-40104-6_42	mathematical optimization;combinatorics;discrete mathematics;mathematics	Theory	30.567357570447967	19.007246261948293	175192
759998d1672ac5433952b2923b6318d4531f4deb	planar orthogonal and polyline drawing algorithms		University of California, Irvine 7.	algorithm;angularjs;bend minimization;mixed model;pollack's rule;vertex (geometry)	Christian A. Duncan;Michael T. Goodrich	2013			combinatorics;discrete mathematics;computer science;planar	HCI	31.797819368523946	21.70391836841541	175976
2e7505e0e73e6267bc2b480e7155dd2aba13d5ac	minimal forcing sets for 1d origami		This paper addresses the problem of finding minimum forcing sets in origami. The origami material folds flat along straight lines called creases that can be labeled as mountains or valleys. A forcing set is a subset of creases that force all the other creases to fold according to their labels. The result is a flat folding of the origami material. In this paper we develop a linear time algorithm that finds minimum forcing sets in one dimensional origami.	algorithm;time complexity	Mirela Damian;Erik D. Demaine;Muriel Dulieu;Robin Y. Flatland;Hella Hoffman;Thomas C. Hull;Jayson Lynch;Suneeta Ramaswami	2015	CoRR		combinatorics;discrete mathematics;topology;mathematics	Theory	31.751166206942326	25.03961353722795	176330
55c3ddadca851aed1d00193957a2c3d7b92258c1	analytic formulas for full steiner trees	minimal spanning tree;steiner tree;steiner minimal tree	It was conjectured by Gilbert and Pollak [6] that, for any finite set of points in the Euclidean plane, the ratio of the length of a Steiner minimal tree to the length of a minimal spanning tree is at least % MathType!MTEF!2!1!+-% feaafiart1ev1aaatCvAUfeBSjuyZL2yd9gzLbvyNv2CaerbuLwBLn% hiov2DGi1BTfMBaeXatLxBI9gBaerbd9wDYLwzYbItLDharqqtubsr% 4rNCHbGeaGqiVu0Je9sqqrpepC0xbbL8F4rqqrFfpeea0xe9Lq-Jc9% vqaqpepm0xbba9pwe9Q8fs0-yqaqpepae9pg0FirpepeKkFr0xfr-x% fr-xb9adbaqaaeGaciGaaiaabeqaamaabaabaaGcbaWaaOaaaeaaca% aIZaaaleqaaOGaai4laiaaikdaaaa!383E! $$\sqrt 3 /2$$ . To date, this has been proved only for at most five points. In this paper, some analytic formulas for the length of full Steiner trees are considered. These provide an alternative proof of the conjecture for quadrilaterals, and the foundation for a possible approach for more complicated polygons.	steiner tree problem	R. S. Booth	1991	Discrete & Computational Geometry	10.1007/BF02574675	combinatorics;discrete mathematics;topology;spanning tree;steiner tree problem;minimum spanning tree;k-ary tree;k-minimum spanning tree;mathematics	Theory	30.629248217677954	21.67329241518187	177090
50f27423a6a2d3eeed686fdfb8c72acd79a72582	efficient solutions for finding vitality with respect to shortest paths	graph theory;o mα m n time algorithm connected weighted undirected graph source node sink node replacement shortest path most vital edge problem mve most vital node problem mvn linear graph;computational complexity;vickrey pricing most vital edge most vital node replacement shortest path;graph theory computational complexity;equations mathematical model time complexity labeling lead pricing	Let G = (V, E) be a connected, weighted, undirected graph such that |V| = n and |E| = m. Given a shortest path Pg(s, t) between a source node s and a sink node t in the graph G, computing the shortest path between source and sink without using a particular edge (or a particular node) in Pg(s, t) is called Replacement Shortest Path for that edge (or node). The Most Vital Edge (MVE) problem is to find an edge in Pg(s, t) whose removal results in the longest replacement shortest path. And the Most Vital Node (MVN) problem is to find a node in PG(s, t) whose removal results in the longest replacement shortest path. In this paper for the MVE problem we describe an O(m+m'a(m', n')) time algorithm (α represents Inverse Ackermann function) by constructing a smaller graph LG from G which we call Linear Graph, where n' and m' are the number of nodes and edges in LG respectively. Our algorithm will also suggest a replacement shortest path for every edge in Pg(s, t) without any additional time. For the MVN problem, with integer weights, we describe an O(mα(m, n)) time algorithm. Our algorithm will also suggest a replacement shortest path for every node in PG (s, t) without any additional time.	ackermann function;algorithm;best, worst and average case;graph (discrete mathematics);shortest path problem;time complexity;worst-case complexity	Anjeneya Swami Kare;Sanjeev Saxena	2013	2013 Sixth International Conference on Contemporary Computing (IC3)	10.1109/IC3.2013.6612164	mathematical optimization;canadian traveller problem;widest path problem;constrained shortest path first;longest path problem;pathfinding;graph theory;euclidean shortest path;yen's algorithm;path;shortest path problem;computational complexity theory;distance;k shortest path routing;shortest path faster algorithm;shortest-path tree	Theory	24.681205863964973	21.833560161279678	177516
9321fc0b872d132c1e48c76fafc9dc1f6b61e9b5	herugolf and makaro are np-complete		The Herugolf puzzle is played on a rectangular grid of cells (see Fig. 1(a)). Initially, there are circles (balls) and holes (H) on the grid, where an integer is in each circle. The purpose of the puzzle is to move (hit) all balls one or more times, and bring them to a cell with an H in the following rules [1]: (1) One ball must be brought to every hole H. (2) The movement of a ball is shown by an arrow, with the tip of the arrow in the cell where it stops. The arrows cannot cross other balls, holes, or lines of other arrows. (3) A ball moves across as many cells as the number in it in the first move, vertically or horizontally. The next move becomes one shorter; it decreases one by one. (4) The direction of movement may change after a move. When the next movement becomes 0, or the ball stops at an H, the ball cannot move any further. (5) A ball cannot leave the grid (OB), and cannot stop in a grey area (water hazard). Figure 1(a) is the initial configuration of a Herugolf puzzle. In this figure, there are eight balls and eight holes in the 6× 6 cells. From Figs. 1(b)–(f), the reader can understand the basic technique for finding a solution. (b) The bottom right ball ® must be moved 3 cells to the left, since there is a hole H in the blue cell. Then the ball is moved 2 cells to the upper direction, since there is a water hazard in the bottom left cell. (c) There is exactly one ball which can be brought to the hole H in the red cell. On the other hand, there is exactly one hole which the ball in the blue cell can reach. (d) Balls ® and ¬ are moved to holes H in the red and blue cells, respectively. (e) If the ball ­ in the blue cell is brought to the hole H in the red cell, then one of the two balls ­ in the green cells cannot reach any hole. (f) is a solution.	ball project;emoticon;gcu grey area;hit (internet);outside broadcasting;pokémon red;regular grid;stress ball;water model	Chuzo Iwamoto;Masato Haruishi;Tatsuaki Ibusuki	2018		10.4230/LIPIcs.FUN.2018.24	np-complete;discrete mathematics;combinatorics;computer science	ML	29.605534694171848	23.241510352870716	178038
5cffea2d4b2fcaba71f1972202b1af15e71a5590	playing a game to bound the chromatic number		We provide here a new method for proving several known bounds on the chromatic number of a graph in a unified manner. To do so, we view vertices of a graph as players in a strategic game. Each player has the same set of actions, which is a set of colors. In a certain profile, where each vertex has chosen a color, a vertex gets a payoff equal to zero if its color is the same as one of its neighbors. Otherwise, the vertex gets as a payoff the number of vertices that chose the same color as its own color. In a pure Nash equilibrium of such a game, no vertex can improve its payoff by deviating unilaterally. We prove that, if we start with the trivial proper coloring, where each vertex chooses its unique name as a color, then any selfish improvement sequence (i.e., a sequence of steps, where at each step a single vertex changes its color in order to improve its payoff) reaches a pure Nash equilibrium in polynomial time, and that the number of colors used by any pure Nash equilibrium satisfies four known upper bounds on the chromatic number. This implies that there is a polynomial time algorithm for computing a proper coloring of any given graph G where the number of colors used satisfies all these bounds.	algorithm;color;graph coloring;nash equilibrium;p (complexity);polynomial;time complexity;vertex (geometry);vertex (graph theory)	Panagiota N. Panagopoulou;Paul G. Spirakis	2012	The American Mathematical Monthly	10.4169/amer.math.monthly.119.09.771	mathematical analysis;combinatorics;time complexity;chromatic scale;mathematics;chose;vertex (geometry);nash equilibrium;stochastic game;graph	Theory	28.840182442978854	24.59327789735765	178252
b30dce26e47f6b045bb60512e0d6544e2fc49be9	hamilton circuits in hexagonal grid graphs		We look at a variant of the Hamilton circuit problem, where the input is restricted to hexagonal grid graphs. A hexagonal grid graph has a vertex set that is a subset of the grid points of a regular hexagonal tiling of the plane and edges corresponding to hexagon sides. We show that Hamilton circuit in hexagonal grid graphs is NP-complete.	hamiltonian path;lattice graph;np-completeness;tiling window manager;vertex (graph theory)	Kamrul Islam;Henk Meijer;Yurai Núñez Rodríguez;David Rappaport;Henry Xiao	2007			hexagonal tiling;combinatorics;hexagonal number;discrete mathematics;topology;mathematics	HPC	30.735600284040252	23.476509809101014	178552
0e46ef6e6e3bf2fb8e6cdd07335a2563e2695282	maintaining nets and net trees under incremental motion	online algorithm;discrete time;satisfiability;optimal algorithm;data structure;geometric structure;competitive ratio	The problem of maintaining geometric structures for points in motion has been well studied over the years. Much theoretical work to date has been based on the assumption that point motion is continuous and predictable, but in practice, motion is typically presented incrementally in discrete time steps and may not be predictable. We consider the problem of maintaining a data structure for a set of points undergoing such incremental motion. We present a simple online model in which two agents cooperate to maintain the structure. One defines the data structure and provides a collection of certificates, which guarantee the structure’s correctness. The other checks that the motion over time satisfies these certificates and notifies the first agent of any violations. We present efficient online algorithms for maintaining both nets and net trees for a point set undergoing incremental motion in a space of constant dimension. We analyze our algorithms’ efficiencies by bounding their competitive ratios relative to an optimal algorithm. We prove a constant factor competitive ratio for maintaining a slack form of nets, and our competitive ratio for net trees is proportional to the square of	competitive analysis (online algorithm);correctness (computer science);data structure;online algorithm;public key certificate;slack variable	Minkyoung Cho;David M. Mount;Eunhui Park	2009		10.1007/978-3-642-10631-6_114	competitive analysis;online algorithm;mathematical optimization;discrete time and continuous time;combinatorics;discrete mathematics;data structure;computer science;mathematics;geometry;programming language;algorithm;satisfiability	Theory	30.576586063392668	20.385821279275593	179444
cef9cc6758a709a3732f99d57498f5ac121fda8d	contraction decomposition in h-minor-free graphs and algorithmic applications	shortest path;approximate algorithm;decomposition;structuration theory;graph minor;polynomial time;graph contraction;planar graph	We prove that any graph excluding a fixed minor can have its edges partitioned into a desired number k of color classes such that contracting the edges in any one color class results in a graph of treewidth linear in k. This result is a natural finale to research in contraction decomposition, generalizing previous such decompositions for planar and bounded-genus graphs, and solving the main open problem in this area (posed at SODA 2007). Our decomposition can be computed in polynomial time, resulting in a general framework for approximation algorithms, particularly PTASs (with k ∼ 1/ε), and fixed-parameter algorithms, for problems closed under contractions in graphs excluding a fixed minor. For example, our approximation framework gives the first PTAS for TSP in weighted H-minor-free graphs, solving a decade-old open problem of Grohe; and gives another fixed-parameter algorithm for k-cut in H-minor-free graphs, which was an open problem of Downey et al. even for planar graphs.  To obtain our contraction decompositions, we develop new graph structure theory to realize virtual edges in the clique-sum decomposition by actual paths in the graph, enabling the use of the powerful Robertson--Seymour Graph Minor decomposition theorem in the context of edge contractions (without edge deletions). This requires careful construction of paths to avoid blowup in the number of required paths beyond 3. Along the way, we strengthen and simplify contraction decompositions for bounded-genus graphs, so that the partition is determined by a simple radial ball growth independent of handles, starting from a set of vertices instead of just one, as long as this set is tight in a certain sense. We show that this tightness property holds for a constant number of approximately shortest paths in the surface, introducing several new concepts such as dives and rainbows.	approximation algorithm;clique-sum;graph minor;minimum k-cut;ptas reduction;parameterized complexity;planar (computer graphics);planar graph;polynomial;radial (radio);shortest path problem;time complexity;treewidth	Erik D. Demaine;Mohammad Taghi Hajiaghayi;Ken-ichi Kawarabayashi	2011		10.1145/1993636.1993696	1-planar graph;outerplanar graph;time complexity;pathwidth;edge contraction;mathematical optimization;combinatorics;discrete mathematics;cograph;independent set;topology;longest path problem;forbidden graph characterization;graph coloring;mathematics;tree-depth;modular decomposition;shortest path problem;decomposition;treewidth;partial k-tree;graph minor;graph operations;chordal graph;indifference graph;book embedding;line graph;algorithm;planar graph	Theory	25.766602776484785	22.207928262962113	180011
29d1d09bd66997492001752b3564d14b0ac13be6	testing homotopy for paths in the plane	efficient algorithm;homotopy;simple paths;computational topology	In this paper we present an efficient algorithm to test if two given paths are homotopic; that is, whether they wind around obstacles in the plane in the same way. For simple paths specified by n line segments with obstacles described by n points, our algorithm runs in O(n log n) time, which we show is tight. For self-intersecting paths the problem is related to Hopcroft's problem.	algorithm;berg connector;best, worst and average case;marc (archive);range query (data structures)	Sergio Cabello;Yuanxin Liu;Andrea Mantler;Jack Snoeyink	2002		10.1145/513400.513421	mathematical optimization;combinatorics;computational topology;floyd–warshall algorithm;homotopy;mathematics;geometry	Theory	30.974439004975928	18.84871906848147	180395
455a186ae577e0110a89a8f50226310f7e414769	progress in hierarchical clustering & minimum weight triangulation	hierarchical clustering;greedy triangulation;systems engineering;data och systemvetenskap;complete linkage;minimum spanning tree;datavetenskap datalogi;minimum weight triangulation;computer technology	In this thesis we study efficient computational methods for geometrical problems of practical importance and theoretical interest. The problems that we consider are primarily complete linkage clustering, minimum spanning trees, and approximating minimum weight triangulation. Below is a list of the main results proved in the thesis. The complete linkage clustering of  n  points in the plane can be computed in  O(n  log 2   n)  time and linear space. If the points lie in  R d  , the complete linkage clustering can be computed in optimal  O(n  log  n)  time, under the  L  1  and  L oo  -metrics. We also design efficient algorithms for approximating the complete linkage clustering. A minimum spanning tree of  n  points in  R d   can be obtained in optimal  O(T d (n,n))  time, where  T d (n,m)  denotes the time to find a closest bichromatic pair between  n  red points and  m  blue points. The greedy triangulation of  n  points in the plane has length  O(  sqrt (n))  times that of a minimum weight triangulation, and can be computed in linear time, given the Delaunay triangulation. A triangulation of length at most a constant times that of a minimum weight triangulation can be obtained in polynomial time (in fact,  O(n  log  n)  time suffices). If the points are corners of their convex hull, we show that linear time suffices to find a triangulation of length at most 1+ e  times that of a minimum weight triangulation, where  e  is an arbitrarily small positive constant. (Less)	hierarchical clustering;minimum-weight triangulation	Drago Krznaric	1997			euclidean minimum spanning tree;mathematical optimization;minimum-weight triangulation;combinatorics;delaunay triangulation;pitteway triangulation;point set triangulation;mathematics;geometry;bowyer–watson algorithm	Theory	30.797234021112487	20.37030480289378	180516
15a71bdd69e7602359a2f0cbf59df9f012bd8e07	linear kernels for (connected) dominating set on graphs with excluded topological subgraphs	004;parameterized complexity kernelization algorithmic graph minors dominating set connected dominating set	We give the first linear kernels for the Dominating Set and Connected Dominating Set problems on graphs excluding a fixed graph H as a topological minor. In other words, we prove the existence of polynomial time algorithms that, for a given H-topological-minor-free graph G and a positive integer k, output an H-topologicalminor-free graph G′ on O(k) vertices such that G has a (connected) dominating set of size k if and only if G′ has one. Our results extend the known classes of graphs on which the Dominating Set and Connected Dominating Set problems admit linear kernels. Prior to our work, it was known that these problems admit linear kernels on graphs excluding a fixed apex graph H as a minor. Moreover, for Dominating Set, a kernel of size k, where c(H) is a constant depending on the size of H, follows from a more general result on the kernelization of Dominating Set on graphs of bounded degeneracy. Alon and Gutner explicitly asked whether one can obtain a linear kernel for Dominating Set on H-minor-free graphs. We answer this question in the affirmative and in fact prove a more general result. For Connected Dominating Set no polynomial kernel even on H-minor-free graphs was known prior to our work. On the negative side, it is known that Connected Dominating Set on 2-degenerated graphs does not admit a polynomial kernel unless coNP ⊆ NP/poly. Our kernelization algorithm is based on a non-trivial combination of the following ingredients • The structural theorem of Grohe and Marx [STOC 2012] for graphs excluding a fixed graph H as a topological minor; • A novel notion of protrusions, different than the one defined in [FOCS 2009]; • Our results are based on a generic reduction rule that produces an equivalent instance (in case the input graph is H-minor-free) of the problem, with treewidth O( √ k). The application of this rule in a divide-and-conquer fashion, together with the new notion of protrusions, gives us the linear kernels. ∗Preliminary versions of this paper appeared in SODA 2012 and STACS 2013. †University of Bergen, Norway, fomin@ii.uib.no. The research was supported by the European Research Council through ERC Grant Agreement n. 267959. ‡University of Bergen, Norway, daniello@ii.uib.no. The research was supported by the Bergen Research Foundation and the University of Bergen through project “BeHard’. §The Institute of Mathematical Sciences, CIT Campus, Chennai, India, saket@imsc.res.in. The research was supported by the European Research Council through Starting Grant 306992 “Parameterized Approximation’. ¶Department of Mathematics, National and Kapodistrian University of Athens, Athens, Greece, sedthilk@thilikos.info. Co-financed by the E.U. (European Social Fund ESF) and Greek national funds through the Operational Program “Education and Lifelong Learning” of the National Strategic Reference Framework (NSRF) Research Funding Program: “Thales. Investing in knowledge society through the European Social Fund”. ‖AlGCo project-team, CNRS, LIRMM, Montpellier, France ar X iv :1 21 0. 02 57 v3 [ cs .D S] 2 5 O ct 2 01 7 A protrusion in a graph [FOCS 2009] is a subgraph of constant treewidth which is separated from the rest of the graph by at most a constant number of vertices. In our variant of protrusions, instead of stipulating that the subgraph be of constant treewidth, we ask that it contains a constant number of vertices from a solution. We believe that this new take on protrusions would be useful for other graph problems and in different algorithmic settings.	connected dominating set;graph minor	Fedor V. Fomin;Daniel Lokshtanov;Saket Saurabh;Dimitrios M. Thilikos	2013		10.4230/LIPIcs.STACS.2013.92	independent set;bidimensionality;dominating set;computer science;connected dominating set;mathematics;maximal independent set;domatic number	Theory	27.31297742076643	23.378722686966135	181318
598abd5422e032e126e8bdef93e090954ff7b10b	an exponential lower bound for cut sparsifiers in planar graphs	mimicking network;planar graph;sparsifier	Given an edge-weighted graph G with a set $$Q$$ Q of k terminals, a mimicking network is a graph with the same set of terminals that exactly preserves the size of minimum cut between any partition of the terminals. A natural question in the area of graph compression is to provide as small mimicking networks as possible for input graph G being either an arbitrary graph or coming from a specific graph class. We show an exponential lower bound for cut mimicking networks in planar graphs: there are edge-weighted planar graphs with k terminals that require $$2^{k-2}$$ 2k-2 edges in any mimicking network. This nearly matches an upper bound of $$\mathcal {O}(k 2^{2k})$$ O(k22k) of Krauthgamer and Rika (in: Khanna (ed) Proceedings of the twenty-fourth annual ACM-SIAM symposium on discrete algorithms, SODA 2013, New Orleans, 2013) and is in sharp contrast with the upper bounds of $$\mathcal {O}(k^2)$$ O(k2) and $$\mathcal {O}(k^4)$$ O(k4) under the assumption that all terminals lie on a single face (Goranci et al., in: Pruhs and Sohler (eds) 25th Annual European symposium on algorithms (ESA 2017), 2017, arXiv:1702.01136; Krauthgamer and Rika in Refined vertex sparsifiers of planar graphs, 2017, arXiv:1702.05951). As a side result we show a tight example for double-exponential upper bounds given by Hagerup et al. (J Comput Syst Sci 57(3):366–375, 1998), Khan and Raghavendra (Inf Process Lett 114(7):365–371, 2014), and Chambers and Eppstein (J Gr Algorithms Appl 17(3):201–220, 2013).	algorithm;esa;graph (discrete mathematics);minimum cut;planar graph;symposium on discrete algorithms;time complexity	Nikolai Karpov;Marcin Pilipczuk;Anna Zych-Pawlewicz	2018	Algorithmica	10.1007/s00453-018-0504-8	minimum cut;combinatorics;mathematics;partition (number theory);planar graph;vertex (geometry);exponential function;graph;upper and lower bounds	Theory	26.93619222047311	23.176104262546758	181412
55cacfdfaca6cdeb2eec336807a4e66c6586b02f	the homfly-pt polynomial is fixed-parameter tractable		Many polynomial invariants of knots and links, including the Jones and HOMFLY-PT polynomials, are widely used in practice but #P-hard to compute. It was shown by Makowsky in 2001 that computing the Jones polynomial is fixed-parameter tractable in the treewidth of the link diagram, but the parameterised complexity of the more powerful HOMFLY-PT polynomial remained an open problem. Here we show that computing HOMFLY-PT is fixedparameter tractable in the treewidth, and we give the first sub-exponential time algorithm to compute it for arbitrary links.	algorithm;cobham's thesis;diagram;homfly polynomial;jones calculus;jones polynomial;p (complexity);panorama tools;parameterized complexity;sharp-p;theory of computation;time complexity;treewidth	Benjamin A. Burton	2018		10.4230/LIPIcs.SoCG.2018.18	discrete mathematics;open problem;knot (unit);diagram;combinatorics;mathematics;polynomial;treewidth;invariant (mathematics)	Theory	25.878988595466524	24.003766794365035	181422
8fabc4cb9e0d3cac872e51fd9e32c821a6d132bd	greedy triangulation approximates the optimum and can be implemented in linear time in the average case	greedy triangulation;linear time;average case	Let S be a set of n points uniformly distributed in a unit square. We show that the expected value of the ratio between the length of the greedy triangulation of S and the minimum weight triangulation of S is constantly bounded. Our main result is an algorithm for constructing the greedy triangulation of S which runs in linear expected-time.	greedy algorithm;time complexity	Christos Levcopoulos;Andrzej Lingas	1991		10.1007/3-540-54029-6_163	greedy randomized adaptive search procedure;mathematical optimization;minimum-weight triangulation;combinatorics;mathematics;geometry	Theory	28.846609790433828	18.429643487554703	181624
504001197a2927ffa37362abedd803e791204904	improved inapproximability of rainbow coloring		A rainbow q-coloring of a k-uniform hypergraph is a q-coloring of the vertex set such that every hyperedge contains all q colors. We prove that given a rainbow (k − 2⌊ √ k⌋)-colorable k-uniform hypergraph, it is NPhard to find a normal 2-coloring. Previously, this was only known for rainbow ⌊k/2⌋colorable hypergraphs (Guruswami and Lee, SODA 2015). We also study a generalization which we call rainbow (q, p)-coloring, defined as a coloring using q colors such that every hyperedge contains at least p colors. We prove that given a rainbow (k− ⌊ √ kc⌋, k− ⌊3 √ kc⌋)-colorable k uniform hypergraph, it is NP-hard to find a normal c-coloring for any constant c < k/10. The proof of our second result relies on two combinatorial theorems. One of the theorems was proved by Sarkaria (J. Comb. Theory. 1990) using topological methods and the other theorem we prove using a generalized Borsuk-Ulam theorem.	borsuk–ulam theorem;color;graph coloring;hardness of approximation;rainbow coloring	Per Austrin;Amey Bhangale;Aditya Potukuchi	2018	CoRR			Theory	27.422036084934803	24.61082993773319	181842
b7219e83639c236fff7f5444f1a7a88f59167768	the focus of attention problem revisited	optimal solution;polynomial time algorithm;focus of attention;target tracking	The Focus of Attention (FOA) Problem is, given a set of targets and a set of sensors in the plane, to track the targets with ‘maximum possible accuracy’. The accuracy is measured in terms of the angle subtended by the sensor pairs at the assigned targets. In this paper, we consider a scenario in which we are given n targets on a line l and 2n sensors on a line m such that l || m and the objective is to assign sensor-pairs to the targets such that the minimum angle subtended at the targets is maximized. We give a polynomial time algorithm for a restricted version of this problem and also study some properties of the optimal solution. To our knowledge, no deterministic and exact polynomial time algorithm is known for any non-trivial version of the FOA problem when the accuracy is measured in terms of the angles subtended by the sensor pairs.	algorithm;max;p (complexity);sensor	Manjish Pal	2008			mathematical optimization;combinatorics;mathematics;geometry	Theory	27.394225131508357	18.86666877661787	182302
e7e885bdb47ab0118d34dbd9b2ce58a9d7f1bdf7	on the number of triangulations every planar point set must have	lower bound	 We show that the number of straight line triangulations exhibited by anyset of n points in general position in the plane is bounded from below by45 + &quot;)n) for some &quot; &gt; 0. To the knowledge of the authors this is therst non-trivial lower bound.1  		Oswin Aichholzer;Ferran Hurtado;Marc Noy	2001			combinatorics;discrete mathematics;jump-and-walk algorithm;upper and lower bounds;computer science;planar	Theory	31.513619511366578	20.905633042477326	182433
e404d54574a092a3354916bd3a10979854b46b4e	approximating watchman routes	algorithms;design;graph algorithms;path and circuit problems;theory	Given a connected polygonal domain P , the watchman route problem is to compute a shortest path or tour for a mobile guard (the “watchman”) that is required to see every point of P . While the watchman route problem is polynomially solvable in simple polygons, it is known to be NP-hard in polygons with holes. We present the first polynomial-time approximation algorithm for the watchman route problem in polygonal domains. Our algorithm has an approximation factor O(log n). Further, we prove that the problem cannot be approximated in polynomial time to within a factor of c log n, for a constant c > 0, assuming that P 6=NP.	approximation algorithm;decision problem;np-hardness;polynomial;shortest path problem;sony watchman;time complexity;watchman route problem	Joseph S. B. Mitchell	2013		10.1137/1.9781611973105.60	mathematical optimization;combinatorics;discrete mathematics;mathematics	Theory	26.8470981571152	19.589520231358488	183225
b6ca0397da31a04209cc39c8e280c2efac06e5d3	implicitly representing arrangements of lines or segments	random sampling;spanning tree;convex hull;data structure	An <italic>arrangement</italic> of <italic>n</italic> lines (or line segments) in the plane is the partition of the plane defined by these objects. Such an arrangement consists of <italic>&Ogr;</italic>(<italic>n</italic><supscrpt>2</supscrpt>) regions, called <italic>faces</italic>. In this paper we study the problem of calculating and storing arrangements <italic>implicitly</italic>, using subquadratic space and preprocessing, so that, given any query point <italic>p</italic>, we can calculate efficiently the face containing <italic>p</italic>. First, we consider the case of lines and show that with Λ(<italic>n</italic>) space<supscrpt>1</supscrpt> and Λ(<italic>n</italic><supscrpt>3/2</supscrpt>) preprocessing time, we can answer face queries in Λ(√<italic>n</italic>) + <italic>&Ogr;</italic>(<italic>K</italic>) time, where <italic>K</italic> is the output size. (The query time is achieved with high probability.) In the process, we solve three interesting subproblems: 1) given a set of <italic>n</italic> points, find a straight-edge spanning tree of these points such that any line intersects only a few edges of the tree, 2) given a simple polygonal path Γ, form a data structure from which we can find the convex hull of any subpath of Γ quickly, and 3) given a set of points, organize them so that the convex hull of their subset lying above a query line can be found quickly. Second, using random sampling, we give a trade-off between increasing space and decreasing query time. Third, we extend our structure to report faces in an arrangement of line segments in Λ(<italic>n</italic><supscrpt>1/3</supscrpt>) time, given Λ(<italic>n</italic><supscrpt>4/3</supscrpt>) space and Λ(<italic>n</italic><supscrpt>5/3</supscrpt>) preprocessing time.  Lastly, we note that our techniques allow us to compute <italic>m</italic> faces in an arrangement of <italic>n</italic> lines in time Λ(<italic>m</italic><supscrpt>2/3</supscrpt><italic>n</italic><supscrpt>2/3</supscrpt> + <italic>n</italic>), which is nearly optimal.	convex hull;data structure;file spanning;monte carlo method;preprocessor;sampling (signal processing);spanning tree;universal quantification;with high probability	Herbert Edelsbrunner;Leonidas J. Guibas;John Hershberger;Raimund Seidel;Micha Sharir;Jack Snoeyink;Emo Welzl	1988		10.1145/73393.73400	sampling;mathematical optimization;combinatorics;discrete mathematics;data structure;spanning tree;convex hull;mathematics;geometry	Theory	30.61436567380353	18.747195003996616	183258
81152dbbc4a902733afbfc47464e9bd63a38a57d	the parameterized complexity of happy colorings		Consider a graph G = (V, E) and a coloring c of vertices with colors from [l]. A vertex v is said to be happy with respect to c if c(v) = c(u) for all neighbors u of v. Further, an edge (u, v) is happy if c(u) = c(v). Given a partial coloring c of V, the Maximum Happy Vertex (Edge) problem asks for a total coloring of V extending c to all vertices of V that maximises the number of happy vertices (edges). Both problems are known to be NP-hard in general even when l = 3, and is polynomially solvable when l = 2. In [IWOCA 2016] it was shown that both problems are polynomially solvable on trees, and for arbitrary k, it was shown that MHE is NP-hard on planar graphs and is FPT parameterized by the number of precolored vertices and branchwidth. We continue the study of this problem from a parameterized prespective. Our focus is on both structural and standard parameterizations. To begin with, we establish that the problems are FPT when parameterized by the treewidth and the number of colors used in the precoloring, which is a potential improvement over the total number of precolored vertices. Further, we show that both the vertex and edge variants of the problem is FPT when parameterized by vertex cover and distance-to-clique parameters. We also show that the problem of maximizing the number of happy edges is FPT when parameterized by the standard parameter, the number of happy edges. We show that the maximum happy vertex (edge) problem is NP-hard on split graphs and bipartite graphs and polynomially solvable on cographs.	branch-decomposition;cograph;color;decision problem;emoticon;graph (discrete mathematics);graph coloring;graph operations;np-hardness;parameterized complexity;planar graph;polynomial;total coloring;treewidth;vertex (geometry);vertex (graph theory);vertex cover	Neeldhara Misra;I. Vinod Reddy	2017		10.1007/978-3-319-78825-8_12	planar graph;topology;parameterized complexity;vertex (geometry);mathematics;graph;total coloring	Theory	24.76908243355106	22.67631974090186	183510
d66362fb50f7c1fe0e3753c0f3ae842ffb5f87ad	on optimal weighted balanced clusterings: gravity bodies and power diagrams	power diagram;gravity polytope;constrained clustering;weighted clustering;91c20;clustering;90c27;gravity body;68u05;68q32;68h30	We study weighted clustering problems in Minkowski spaces under balancing constraints with a view towards separation properties. First, we introduce the gravity polytopes and more general gravity bodies that encode all feasible clusterings and indicate how they can be utilized to develop efficient approximation algorithms for quite general, hard to compute objective functions. Then we show that their extreme points correspond to strongly feasible power diagrams, certain specific cell complexes, whose defining polyhedra contain the clusters, respectively. Further, we characterize strongly feasible centroidal power diagrams in terms of the local optima of some ellipsoidal function over the gravity polytope. The global optima can also be characterized in terms of the separation properties of the corresponding clusterings.		Andreas Brieden;Peter Gritzmann	2012	SIAM J. Discrete Math.	10.1137/110832707	constrained clustering;mathematical optimization;combinatorics;discrete mathematics;power diagram;mathematics;geometry;cluster analysis	Theory	26.739834771912044	20.242165268032085	184147
ae5899967ebc7a7d4bba4c17918eabcbefd26c0d	dual parameterization of weighted coloring		Given a graph G, a proper k-coloring of G is a partition c = (Si)i∈[1,k] of V (G) into k stable sets S1, . . . , Sk. Given a weight function w : V (G) → R+, the weight of a color Si is defined as w(i) = maxv∈Si w(v) and the weight of a coloring c as w(c) = ∑k i=1 w(i). Guan and Zhu [Inf. Process. Lett., 1997] defined the weighted chromatic number of a pair (G,w), denoted by σ(G,w), as the minimum weight of a proper coloring of G. The problem of determining σ(G,w) has received considerable attention during the last years, and has been proved to be notoriously hard: for instance, it is NP-hard on split graphs, unsolvable on n-vertex trees in time no(log n) unless the ETH fails, and W[1]-hard on forests parameterized by the size of a largest tree. In this article we provide some positive results for the problem, by considering its so-called dual parameterization: given a vertex-weighted graph (G,w) and an integer k, the question is whether σ(G,w) ≤ ∑ v∈V (G) w(v) − k. We prove that this problem is FPT by providing an algorithm running in time 9 · nO(1), and it is easy to see that no algorithm in time 2o(k) · nO(1) exists under the ETH. On the other hand, we present a kernel with at most (2k−1 + 1)(k − 1) vertices, and we rule out the existence of polynomial kernels unless NP ⊆ coNP/poly, even on split graphs with only two different weights. Finally, we identify some classes of graphs on which the problem admits a polynomial kernel, in particular interval graphs and subclasses of split graphs, and in the latter case we present lower bounds on the degrees of the polynomials. 1998 ACM Subject Classification F.2.2 Nonnumerical Algorithms and Problems, G.2.2 Graph Theory.		Júlio Araújo;Victor A. Campos;Carlos Vinícius G. C. Lima;Vinícius Fernandes dos Santos;Ignasi Sau;Ana Silva	2018	CoRR		combinatorics;kernel (linear algebra);weight function;minimum weight;vertex (geometry);partition (number theory);binary logarithm;mathematics;polynomial;integer	Theory	26.312134409581187	24.190870763293912	184567
cc1bff778e45534ad6617b2ed5635670c02fc820	covering paths for planar point sets	covering path;covering tree;noncrossing graph	Given n points in the plane, a covering path is a polygonal path that visits all the points. If no three points are collinear, every covering path requires at least n/2 segments, and n−1 straight line segments obviously suffice even if the covering path is required to be noncrossing. We show that every set of n points in the plane admits a (possibly self-crossing) covering path consisting of n/2+O(n/logn) straight line segments. If the path is required to be noncrossing, we prove that (1−e)n straight line segments suffice for a small constant e>0, and we exhibit n-element point sets that require at least 5n/9−O(1) segments in every such path. Further, the analogous question for noncrossing covering trees is considered and similar bounds are obtained. Finally, it is shown that computing a noncrossing covering path for n points in the plane requires Ω(nlogn) time in the worst case.		Adrian Dumitrescu;Dániel Gerbner;Balázs Keszegh;Csaba D. Tóth	2014	Discrete & Computational Geometry	10.1007/s00454-013-9563-4	combinatorics;discrete mathematics;topology;mathematics	Theory	30.7911988460199	20.936767833137733	184683
c07ae3e007fda1985ad278813b17c2104eeccb67	two algorithms for connected r-hop k-dominating set	connected dominating set;independent set;journal;wireless sensor network;dominating set;greedy algorithm	A vertex set D of a connected graph G is a (k, r)-connected dominating set ((k, r)-CDS) if every vertex in V(G)\D is at most r-hops away from at least k vertices in D. Finding a minimum (k, r)-CDS has wireless sensor network as its background. In this paper, we give two approximation algorithms to compute a minimum (k, r)-CDS, which improves previous works in regard of performance ratio.	algorithm;dominating set;hop	Zhao Zhang;Qinghai Liu;Deying Li	2009	Discrete Math., Alg. and Appl.	10.1142/S1793830909000361	combinatorics;greedy algorithm;discrete mathematics;wireless sensor network;independent set;dominating set;metric k-center;vertex;connected dominating set;mathematics;distributed computing;maximal independent set	Theory	25.054954012770217	21.22711687645186	184850
443506966dadca1cfad65b9717ccaaa422af8c8f	simultaneous drawing of planar graphs with right-angle crossings and few bends	p 540 planar;g 420 crossings;g 070 area edge length;g 210 bends;g 490 embeddings;p 999 others	Given two planar graphs that are defined on the same set of vertices, a RAC simultaneous drawing is a drawing of the two graphs where each graph is drawn planar, no two edges overlap, and edges of one graph can cross edges of the other graph only at right angles. In the geometric version of the problem, vertices are drawn as points and edges as straight-line segments. It is known, however, that even pairs of very simple classes of planar graphs (such as wheels and matchings) do not always admit a geometric RAC simultaneous drawing. In order to enlarge the class of graphs that admit RAC simultaneous drawings, we allow edges to have bends. We prove that any pair of planar graphs admits a RAC simultaneous drawing with at most six bends per edge. For more restricted classes of planar graphs (e.g., matchings, paths, cycles, outerplanar graphs, and subhamiltonian graphs), we significantly reduce the required number of bends per edge. All our drawings use quadratic area.	any-angle path planning;bend minimization;computational complexity theory;cycle (graph theory);matching (graph theory);oracle rac;outerplanar graph;planar graph;rac drawing;subhamiltonian graph;vertex (geometry);vertex (graph theory);wheels	Michael A. Bekos;Thomas C. van Dijk;Philipp Kindermann;Alexander Wolff	2016	J. Graph Algorithms Appl.	10.7155/jgaa.00388	1-planar graph;outerplanar graph;pathwidth;combinatorics;discrete mathematics;independent set;topology;multiple edges;dense graph;dominance drawing;force-directed graph drawing;metric dimension;planar straight-line graph;clique-sum;mathematics;steinitz's theorem;modular decomposition;chordal graph;indifference graph;book embedding;planar graph	Theory	29.831549722849044	22.438897724744386	185016
cb83b4558582e0ab84e16b95a8958e1ea633f235	a note on locating a set of points in a planar subdivision	point location;point set location;computational geometry;computational complexity	In this note we algorithmically show that a set of k points can be located in the planar subdivision induced by a straight-line planar graph with n vertices in time $O(k\log k) + O(n) + O(k\log n)$, given a preprocessing time $O(n\log n)$.	planar straight-line graph;subdivision surface	Franco P. Preparata	1979	SIAM J. Comput.	10.1137/0208043	combinatorics;discrete mathematics;computational geometry;computer science;point location;mathematics;geometry;computational complexity theory;algorithm	Theory	31.525311727493044	19.609223532256053	185102
091f14090e280b612cda5cd078a425ec10807223	implicit o(1) probe search	better bound;elements n;probe search;maximum m;implicit o;constructive solution;constant time;size n;certain encoding problem;n element;domain m	Given a set of <italic>n</italic> elements from the domain 1, …, <italic>m</italic>, we investigate how to arrange them in a table of size <italic>n</italic>, so that searching for an element in the table can be done in constant time. Yao has shown that this cannot be done when the domain is sufficiently large as a function of <italic>n</italic> ([Yao]). [FNSS] have shown that this can be done when the domain is linear in the number of elements. We give a constructive solution when the domain <italic>m</italic> is polynomial in the number of elements <italic>n</italic>, and give a nonconstructive proof for <italic>m</italic> no larger than exponential in poly(<italic>n</italic>). We improve upon [Yao] and give better bounds on the maximum <italic>m</italic> for which implicit <italic>O</italic>(1) probe search can be done. We achieve our results by showing the tight relationship between hashing and certain encoding problems.	cryptographic hash function;data compression;maximal set;michael luby;nati linial;polynomial;schmidt decomposition;time complexity;yao graph	Amos Fiat;Moni Naor	1989		10.1145/73007.73039	mathematical optimization;combinatorics;calculus;mathematics;algorithm	Theory	28.463977985312024	20.002484960029914	185343
051e63d1e0f864bf216aa1f62a05f7a2d09ee5aa	metric extension operators, vertex sparsifiers and lipschitz extendability	functional analysis banach spaces computational complexity;approximation algorithms;linear approximation;banach space;banach spaces;upper bound;polynomial time algorithm;flow sparsifiers;minimum metric extensions;vertex sparsifiers;linear operator;functional analysis;computational complexity;lipschitz extendability;linear operators;algorithmic upper bound;linear metric extension operators;functional analysis vertex sparsifiers lipschitz extendability vertex cut flow sparsifiers polynomial time algorithm algorithmic upper bound linear operators minimum metric extensions linear metric extension operators optimal operators lipschitz extendability banach spaces;extraterrestrial measurements;data structure;approximation algorithms upper bound extraterrestrial measurements linear approximation functional analysis;vertex cut;lower bound;optimal operators	We study vertex cut and flow sparsifiers that were recently introduced by Moitra, and Leighton and Moitra. We improve and generalize their results. We give a new polynomial-time algorithm for constructing $O(\log k / \log \log k)$ cut and flow sparsifiers, matching the best known existential upper bound on the quality of a sparsifier, and improving the previous algorithmic upper bound of $O(\log^2 k / \log \log k)$. We show that flow sparsifiers can be obtained from linear operators approximating minimum metric extensions. We introduce the notion of (linear) metric extension operators, prove that they exist, and give an exact polynomial-time algorithm for finding optimal operators. We then establish a direct connection between flow and cut sparsifiers and Lipschitz extendability of maps in Banach spaces, a notion studied in functional analysis since 1950s. Using this connection, we obtain a lower bound of $\Omega(\sqrt{\log k/\log\log k})$ for flow sparsifiers and a lower bound of $\Omega(\sqrt{\log k}/\log\log k)$ for cut sparsifiers. We show that if a certain open question posed by Ball in 1992 has a positive answer, then there exist $\tilde O(\sqrt{\log k})$ cut sparsifiers. On the other hand, any lower bound on cut sparsifiers better than $\tilde \Omega(\sqrt{\log k})$ would imply a negative answer to this question.	algorithm;existential quantification;extensibility;map;polynomial;time complexity;vertex separator	Konstantin Makarychev;Yury Makarychev	2010	2010 IEEE 51st Annual Symposium on Foundations of Computer Science	10.1109/FOCS.2010.31	functional analysis;mathematical optimization;combinatorics;discrete mathematics;topology;data structure;mathematics;upper and lower bounds;banach space;approximation algorithm;algebra	Theory	26.394531709498654	20.944146069801462	185751
7ad5ecac3d811652d7c0091025b5369050c46636	curve-constrained drawings of planar graphs	book embedding;linear order;point set embedding;graph drawing;embedded graph;np hard problem;curve embedding;linear time;planar graph	Let C be the family of 2D curves described by concave functions, let G be a planar graph, and let L be a linear ordering of the vertices of G. L is a curve embeddingof G if for any given curveΛ ∈ C there exists a plana drawing ofG such that: (i) the vertices are constrained to be on Λ with the same ordering as in L, and (ii) the edges are polylines with at most one bend. Informally speaking, a curve embedding can be regarded as a two-p embedding in which the spine is bent. Although deciding whether a graph has a two-page book embedd NP-hard problem, in this paper it is proven that every planar graph has a curve embedding which can be c in linear time. Applications of the concept of curve embedding to upward drawability and point-set embedd problems are also presented.  2004 Elsevier B.V. All rights reserved.	concave function;directed acyclic graph;graph coloring;planar graph;time complexity;unique user;upward planar drawing;vertex (geometry)	Emilio Di Giacomo;Walter Didimo;Giuseppe Liotta;Stephen K. Wismath	2005	Comput. Geom.	10.1016/j.comgeo.2004.04.002	outerplanar graph;time complexity;graph power;topological graph theory;apex graph;combinatorics;discrete mathematics;polyhedral graph;graph embedding;topology;graph bandwidth;null graph;slope number;forbidden graph characterization;linkless embedding;np-hard;cubic graph;planar straight-line graph;mathematics;geometry;graph drawing;butterfly graph;graph minor;complete graph;complement graph;book embedding;total order;string graph;planar graph	AI	27.25539054565934	24.60902260123894	185974
974f80801ce6dd694fa9ad3feb843dd680a61b07	an efficient algorithm for planar drawing of rna structures with pseudoknots of any type	rna secondary structure;planar drawing;algorithm;visualization;pseudoknot	An RNA pseudoknot is a tertiary structural element in which bases of a loop pair with complementary bases are outside the loop. A drawing of RNA secondary structures is a tree, but a drawing of RNA pseudoknots is a graph that has an inner cycle within a pseudoknot and possibly outer cycles formed between the pseudoknot and other structural elements. Visualizing a large-scale RNA structure with pseudoknots as a planar drawing is challenging because a planar drawing of an RNA structure requires both pseudoknots and an entire structure enclosing the pseudoknots to be embedded into a plane without overlapping or crossing. This paper presents an efficient heuristic algorithm for visualizing a pseudoknotted RNA structure as a planar drawing. The algorithm consists of several parts for finding crossing stems and page mapping the stems, for the layout of stem-loops and pseudoknots, and for overlap detection between structural elements and resolving it. Unlike previous algorithms, our algorithm generates a planar drawing for a large RNA structure with pseudoknots of any type and provides a bracket view of the structure. It generates a compact and aesthetic structure graph for a large pseudoknotted RNA structure in O([Formula: see text]) time, where n is the number of stems of the RNA structure.	base;embedded system;embedding;graph - visual representation;heuristic (computer science);rna;structural element;algorithm;tertiary	Yanga Byun;Kyungsook Han	2016	Journal of bioinformatics and computational biology	10.1142/S0219720016500098	combinatorics;visualization;computer science;bioinformatics;nucleic acid secondary structure;pseudoknot;algorithm	Comp.	29.43146764625991	22.665295857141626	186177
0470570b663520ab4914fe2dbcb211bf30106e25	sketching and clustering metric measure spaces		Two of the most fundamental data analysis tasks are clustering and simplification (sketching) of data. Clustering refers to partitioning a dataset, according to some rule, into sets of smaller size with the aim of extracting important information from the data. Sketching, or simplification of data, refers to approximating the input data with another dataset of much smaller size in such a way that properties of the input dataset are retained by the smaller dataset. In this sense, sketching facilitates understanding of the data. There are many clustering methods for metric spaces (mm spaces) already present in literature, such as k-center clustering, k-median clustering, k-means clustering, etc. A natural method for obtaining a k-sketch of a metric space (mm space) is by viewing the space of all metric spaces (mm space) as a metric under Gromov-Hausdorff (Gromov-Wasserstein) distance, and then determining, under this distance, the k point metric space (mm space) closest to the input metric space (mm space). These two problems of sketching and clustering, a priori, look completely unrelated. However, in this paper, we establish a duality i.e. an equivalence between these notions of sketching and clustering. In particular, we obtain the following results. For metric spaces, we consider the case where the clustering objective is minimizing the maximum cluster diameter. We show that the ratio between the sketching and clustering objectives is constant over compact metric spaces. We extend these results to the setting of metric measure spaces where we prove that the ratio of sketching to clustering objectives is bounded both above and below by some universal constants. In this setting, the clustering objective involves minimizing various notions of the `p-diameters of the clusters. We consider two competing notions of sketching for metric measure spaces, with one of them being more demanding than the other. These notions arise from two different definitions of p-Gromov-Wasserstein distance that have appeared in the literature. We then prove that whereas the gap between these can be arbitrarily large, in the case of doubling metric spaces the resulting sketching objectives are polynomially related. We also identify procedures/maps that transform a solution of the sketching problem to a solution of the clustering problem, and vice-versa. These maps give rise to algorithms for performing these transformations and, by virtue of these algorithms, we are able to obtain an approximation to the k-sketch of a metric measure space (metric space) using known approximation algorithms for the respective clustering objectives. In the end, we show that obtaining a duality between sketching and clustering objectives is non-trivial. This is done by presenting some natural clustering objectives that do not admit any dual sketching objectives. ∗Department of Mathematics, The Ohio State University, memoli@math.osu,edu. †Department of Computer Science, University of Illinois at Chicago, sidiropo@uic.edu. ‡Department of Mathematics, The Ohio State University, singhal.53@osu.edu. ar X iv :1 80 1. 00 55 1v 2 [ cs .C G ] 1 8 O ct 2 01 8	approximation algorithm;cluster analysis;computer science;hausdorff dimension;k-means clustering;level of detail;map;metric k-center;period-doubling bifurcation;regular expression;spaces;text simplification;turing completeness	Facundo Mémoli;Anastasios Sidiropoulos;Kritika Singhal	2018	CoRR		metric (mathematics);combinatorics;discrete mathematics;mathematics;infimum and supremum;cluster analysis;duality (optimization);metric space;k-nearest neighbors algorithm;compact space;optimization problem	Theory	25.619798398278437	18.711734369040062	187168
0496328dda4378d0513f19c551cc9cda441527da	on boundaries of highly visible spaces and applications	navegacion;obstaculo;motion control;three dimensions;geometrie algorithmique;path planning;random sampling;piecewise smooth;computational geometry;robotics;probabilistic approach;planification trajectoire;commande mouvement;upper bound;configuration space;control movimiento;navigation;modelo 2 dimensiones;enfoque probabilista;approche probabiliste;robot motion planning;muestreo aleatorio;modele 2 dimensions;robotica;geometria computacional;total length;robotique;art gallery problem;borne superieure;echantillonnage aleatoire;two dimensional model;obstacle;cota superior;aspect ratio	The purpose of this paper is to investigate the properties of a certain class of highly visible spaces. For a given geometric space with a specified set of disjoint obstacles, each of which is a compact subset of the space, the free space is defined to be the portion of the space not occupied by these obstacles. The space is said to be highly visible if at each point in the free space a viewer can see at least an ǫ fraction of the entire free space. This assumption has been used in the analysis of random sampling of points in the robot’s configuration space for randomized roadmap planning methods (PRMs), as well as the upper bound of the minimum number of guards needed for art gallery problems. Recent empirical studies have suggested that placing points on obstacle boundaries instead of in the interior of the free space improves the performance of the PRMs by better capturing the connectivity of the free space; however, no theoretical bound on the visibility of these randomly picked boundary points as an entirety has been established prior to our work. Further, there is no prior result on the implication of this assumption to the geometry of the space under study. In this paper we show that a set of O( 1 ǫ log 1 ǫ ) randomly sampled points on obstacle boundaries can see, with a high likelihood, at least 1− ǫ fraction of the entire free space. The proof technique is interesting as it exploits a novel randomization argument to prove a lower bound for the expected volume of the free space that these boundary points can see. With the additional assumptions that the space is bounded within a rectangle of constant aspect ratio and that the volume ratio between the free space and the total space is a constant, we also show, by “charging” each obstacle boundary by a certain portion of the space, that for a 2D highly visible space the total length of all obstacle boundaries is O( √ nV/ǫ), if the space contains polygonal obstacles with a total of n boundary edges, or O( √ nV /ǫ), if the space contains n convex obstacles that are piecewise smooth. In both cases, V is the volume of the free space. For the polygonal case, this bound is tight as we can construct a space whose boundary size is Θ( √ nV/ǫ).	disjoint-set data structure;patch (computing);polynomial;randomized algorithm;randomness;sampling (signal processing);spaces	John H. Reif;Zheng Sun	2003		10.1007/978-3-540-45077-1_25	motion control;configuration space;three-dimensional space;sampling;navigation;combinatorics;aspect ratio;topology;computational geometry;mathematics;geometry;motion planning;art gallery problem;upper and lower bounds;robotics	Theory	30.495192055787477	20.882642350275948	187842
59f8621174368e066a6d0c335a1cbbb701abef89	an optimal online algorithm for halfplane intersection	online algorithm;intersection of halfplanes;computational geometry;complexity;computer graphic;binary search;data structure;convex polygon	The intersection ofN halfplanes is a basic problem in computational geometry and computer graphics. The optimal offline algorithm for this problem runs in timeO(N logN). In this paper, an optimal online algorithm which runs also in timeO(N logN) for this problem is presented. The main idea of the algorithm is to give a new definition for the left side of a given line, to assign the order for the points of a convex polygon, and then to use binary search method in an ordered vertex set. The data structure used in the algorithm is no more complex than array.	binary search algorithm;computational geometry;computer graphics;data structure;online algorithm;online and offline;vertex (graph theory)	Wu Jigang;Yongchang Ji;Guoliang Chen	2000	Journal of Computer Science and Technology	10.1007/BF02948817	online algorithm;mathematical optimization;complexity;data structure;computational geometry;computer science;theoretical computer science;programming language;algorithm;line segment intersection;binary search algorithm	Theory	30.990811187025685	18.786152053716883	187897
3541dc6a762cc4b213ec7ca05f29dcbac37a2b59	a simple d 2-sampling based ptas for k-means and other clustering problems	ptas;sampling;k median;k means clustering	Given a set of points $P \subset\mathbb{R}^{d}$ , the k-means clustering problem is to find a set of k centers $C = \{ c_{1},\ldots,c_{k}\}, c_{i} \in\mathbb{R}^{d}$ , such that the objective function ∑ x∈P e(x,C)2, where e(x,C) denotes the Euclidean distance between x and the closest center in C, is minimized. This is one of the most prominent objective functions that has been studied with respect to clustering. D 2-sampling (Arthur and Vassilvitskii, Proceedings of the Eighteenth Annual ACM-SIAM Symposium on Discrete Algorithms, SODA’07, pp. 1027–1035, SIAM, Philadelphia, 2007) is a simple non-uniform sampling technique for choosing points from a set of points. It works as follows: given a set of points $P \subset\mathbb{R}^{d}$ , the first point is chosen uniformly at random from P. Subsequently, a point from P is chosen as the next sample with probability proportional to the square of the distance of this point to the nearest previously sampled point. D 2-sampling has been shown to have nice properties with respect to the k-means clustering problem. Arthur and Vassilvitskii (Proceedings of the Eighteenth Annual ACM-SIAM Symposium on Discrete Algorithms, SODA’07, pp. 1027–1035, SIAM, Philadelphia, 2007) show that k points chosen as centers from P using D 2-sampling give an O(logk) approximation in expectation. Ailon et al. (NIPS, pp. 10–18, 2009) and Aggarwal et al. (Approximation, Randomization, and Combinatorial Optimization. Algorithms and Techniques, pp. 15–28, Springer, Berlin, 2009) extended results of Arthur and Vassilvitskii (Proceedings of the Eighteenth Annual ACM-SIAM Symposium on Discrete Algorithms, SODA’07, pp. 1027–1035, SIAM, Philadelphia, 2007) to show that O(k) points chosen as centers using D 2-sampling give an O(1) approximation to the k-means objective function with high probability. In this paper, we further demonstrate the power of D 2-sampling by giving a simple randomized (1+ϵ)-approximation algorithm that uses the D 2-sampling in its core.	approximation;cluster analysis;combinatorial optimization;computer cluster;euclidean distance;k-means clustering;loss function;nips;nonuniform sampling;optimization problem;ptas reduction;randomized algorithm;sampling (signal processing);springer (tank);symposium on discrete algorithms;with high probability	Ragesh Jaiswal;Amit Kumar;Sandeep Sen	2013	Algorithmica	10.1007/s00453-013-9833-9	sampling;mathematical optimization;combinatorics;computer science;mathematics;geometry;algorithm;statistics;k-means clustering	Theory	25.40306840406428	18.475440633983077	188357
b0236d9c2f9381b757559e5c1ebc597a79f8975a	rank based approach on graphs with structured neighborhood		In this paper, we combine the rank-based approach with the notion of d-neighbor equivalence to obtain efficient algorithms for several connectivity problems such as Connected Dominating Set, Node Weighted Steiner Tree, Maximum Induced Tree, Longest Induced Path, and Feedback Vertex Set. For all these problems, we obtain 2 · n, 2 log(k)) ·n, 2 ) ·n and n time algorithms parameterized respectively by cliquewidth, Q-rank-width, rank-width and maximum induced matching width. Our approach simplifies and unifies the known algorithms for each of the parameters and match asymptotically also the best time complexity for Vertex Cover and Dominating Set.	approximation algorithm;asymptotically optimal algorithm;clique-width;computation;connected dominating set;decision problem;directed graph;exponential time hypothesis;feedback vertex set;graph coloring;hamiltonian path;induced path;matroid;np-completeness;p versus np problem;parameterized complexity;polynomial;steiner tree problem;time complexity;treewidth;turing completeness;vertex cover	Benjamin Bergougnoux;Mamadou Moustapha Kanté	2018	CoRR		discrete mathematics;combinatorics;time complexity;induced path;dominating set;mathematics;vertex cover;parameterized complexity;steiner tree problem;connected dominating set;feedback vertex set	Theory	25.411022565238778	22.867231799791373	188473
1a9e9feef624f6636317ebdb15145d7c1b718494	the number of lines tangent to arbitrary convex polyhedra in 3d	visibilite 3d;geometrie algoritmique;visual events;computational geometry;3d visibility;degeneration;convex polyhedra;connected component;visibility complex;lower bound	We prove that the lines tangent to four possibly intersecting convex polyhedra in ℝ<sup>3</sup> with <i>n</i> edges in total form Θ(<i>n</i><sup>2</sup>) connected components in the worst case. In the generic case, each connected component is a single line, but our result still holds for arbitrary degenerate scenes. More generally, we show that a set of <i>k</i>convex polyhedra with a total of <i>n</i> edges admits, in the worst case, Θ(<i>n</i><sup>2</sup><i>k</i><sup>2</sup>)connected components of (possibly occluded) lines tangent to any four of these polyhedra. We also show a lower bound of Ω(<i>n</i><sup>2</sup><i>k</i><sup>2</sup>) on the number of non-occluded maximal line segments tangent to any four of these <i>k</i> convex polyhedra.	best, worst and average case;connected component (graph theory);maximal set;polyhedron	Hervé Brönnimann;Olivier Devillers;Vida Dujmovic;Hazel Everett;Marc Glisse;Xavier Goaoc;Sylvain Lazard;Hyeon-Suk Na;Sue Whitesides	2004		10.1145/997817.997827	combinatorics;connected component;topology;computational geometry;integer points in convex polyhedra;mathematics;geometry;convex set;upper and lower bounds;convex curve;polyhedron	Theory	31.803319672473265	20.756125829054326	188670
050304862e6d663899dd6ae253f207e996cfff20	locating a backtracking robber on a tree	graph location;metric dimension;graph searching;cops and robbers	Carraher, Choi, Delcourt, Erickson, and West (2012)   [4]   introduced the following version of a robber locating game: At each turn, the cop chooses a vertex of the graph to probe, and receives the distance from the probe to the robber. The cop wins if she can uniquely locate the robber after this probe. Otherwise the robber may stay put or move to any vertex adjacent to his location. We answer some of their conjectures and characterize the trees for which the cop wins.	backtracking	Suzanne M. Seager	2014	Theor. Comput. Sci.	10.1016/j.tcs.2014.04.019	combinatorics;discrete mathematics;metric dimension;mathematics;geometry	ECom	28.701486281810002	22.968871229572166	188730
614a8f53c68ca2dc64fb63915b719d71e79ec9b7	polynomial-time solutions to image segmentation	dynamic programming;image segmentation;image processing;dynamic program;mathematical logic;polynomials;computer vision;discriminant analysis;polynomial time algorithm;polynomial time;pattern recognition;approximation scheme;algorithms;parametric optimization;convex hull;mathematics computers information science management law miscellaneous	Separating an object in an image from its background is a central problem (called segmentation) in pattern recognition and computer vision. In this paper, we study the complexity of the segmentation problem, assuming that the object forms a connected region in an intensity image. We show that the optimization problemof separating a connected region in an n-pixel grid is NP-hard under the interclass variance, a criterion that is used in discriminant analysis. More importantly, we consider the basic case in which the object is separated by two z-monotone curves (i.e,, the object itself is 5cmonotone), and present polynomial-time algorithms for computing exact and approximate optimal segmentation. Our main algorithm for exact optimal segmentation by two t-monotone curves runs in O(n2) time; this algorithm is based on several techniques such as a parametric optimization formulation, a hand-probing algorithm for the convex hull of an unknown point set, and dynamic programming using fast matrix sesrching. Our efficient approximation scheme obtains an capproximate solution in O(c-‘nlogt) time, where E is any fixed constant with 1 > Q > 0, and L is the total sum of the absolute values of brightness levels of the	approximation algorithm;computer vision;convex hull;dynamic programming;image segmentation;linear discriminant analysis;mathematical optimization;pattern recognition;pixel;polynomial;time complexity;monotone	Tetsuo Asano;Danny Ziyi Chen;Naoki Katoh;Takeshi Tokuyama	1996			time complexity;mathematical optimization;combinatorics;mathematical logic;discrete mathematics;image processing;computer science;convex hull;dynamic programming;mathematics;geometry;image segmentation;algorithm;statistics;polynomial	Vision	26.862025388712297	18.564959582495018	188838
3fb95e8177d6853fe1e226546ae8ea1d79d5da23	approximate convex decomposition of polygons	hierarchical;web pages;surface texture;polygon;hierarchical representation;convex decomposition	We propose a strategy to decompose a polygon, containing zero or more holes, into ''approximately convex'' pieces. For many applications, the approximately convex components of this decomposition provide similar benefits as convex components, while the resulting decomposition is significantly smaller and can be computed more efficiently. Moreover, our approximate convex decomposition (ACD) provides a mechanism to focus on key structural features and ignore less significant artifacts such as wrinkles and surface texture. We propose a simple algorithm that computes an ACD of a polygon by iteratively removing (resolving) the most significant non-convex feature (notch). As a by product, it produces an elegant hierarchical representation that provides a series of 'increasingly convex' decompositions. A user specified tolerance determines the degree of concavity that will be allowed in the lowest level of the hierarchy. Our algorithm computes an ACD of a simple polygon with n vertices and r notches in O(nr) time. In contrast, exact convex decomposition is NP-hard or, if the polygon has no holes, takes O(nr^2) time. Models and movies can be found on our web-pages at: http://parasol.tamu.edu/groups/amatogroup/.		Jyh-Ming Lien;Nancy M. Amato	2006	Comput. Geom.	10.1016/j.comgeo.2005.10.005	polygon mesh;convex analysis;surface finish;subderivative;mathematical optimization;combinatorics;convex optimization;krein–milman theorem;convex polytope;complex polygon;convex combination;orthogonal convex hull;linear matrix inequality;convex hull;absolutely convex set;star-shaped polygon;polygon;web page;mathematics;geometry;convex set;monotone polygon;logarithmically convex function;polygon covering;hierarchy;proper convex function;curve orientation	Theory	30.09474540858479	22.510090124997465	189652
66556c01cf41c83e904febc31066cdb8e5d75fb2	the power and limitations of uniform samples in testing properties of figures	004;property testing randomized algorithms being a half plane convexity	We investigate testing of properties of 2-dimensional figures that consist of a black object on a white background. Given a parameter ∈ (0, 1/2), a tester for a specified property has to accept with probability at least 2/3 if the input figure satisfies the property and reject with probability at least 2/3 if it is -far from satisfying the property. In general, property testers can query the color of any point in the input figure. We study the power of testers that get access only to uniform samples from the input figure. We show that for the property of being a half-plane, the uniform testers are as powerful as general testers: they require only O( −1) samples. In contrast, we prove that convexity can be tested with O( −1) queries by testers that can make queries of their choice while uniform testers for this property require Ω( −5/4) samples. Previously, the fastest known tester for convexity needed Θ( −4/3) queries.	adaptive grammar;convex function;convex hull;decision tree model;fastest;property testing;sample complexity;the witness;time complexity;white-box testing	Piotr Berman;Meiram Murzabulatov;Sofya Raskhodnikova	2016		10.4230/LIPIcs.FSTTCS.2016.45	arithmetic;computer science;mathematics;algorithm	Theory	26.043287700215924	19.684688180242134	190288
af5594bec3a11306b4e5234aeacf0e4cb524b365	homothetic polygons and beyond: intersection graphs, recognition, and maximum clique		We study the Clique problem in classes of intersection graphs of convex sets in the plane. The problem is known to be NP-complete in convex-set intersection graphs and straight-line-segment intersection graphs, but solvable in polynomial time in intersection graphs of homothetic triangles. We extend the latter result by showing that for Parts of the results have been presented at the following conferences: ISAAC 2012 [10] and IWCIA 2014 [4]. The work presented at ISAAC 2012 was partially supported by ESF EUROGIGA project GraDR as Czech research grant GAČR GIG/11/E023. The work presented at IWCIA 2014 was supported by NSF grants No 0802964 and No 0802994. Mathematics Department, SUNY Buffalo State College, Buffalo, NY 14222, USA. e-mail: brimkove@buffalostate.edu, terhaajb01@mail.buffalostate.edu Warsaw University of Technology, Faculty of Mathematics and Information Science, Koszykowa 75, 00-662 Warszawa, Poland. e-mail: {k.szaniawski, p.rzazewski}@mini.pw.edu.pl Mathematics Department, University at Buffalo, Buffalo, NY 14260-2900, USA. email: {seankafe,mjszczep}@buffalo.edu Department of Applied Mathematics, Faculty of Mathematics and Physics, Charles University, Malostranské nám. 25, 118 00 Praha 1, Czech Republic. e-mail: honza@kam.mff.cuni.cz Department of Software and Computer Science Education, Faculty of Mathematics and Physics, Charles University, Malostranské nám. 25, 118 00 Praha 1, Czech Republic. e-mail: perm@kam.mff.cuni.cz	buffalo airstation;buffalo network-attached storage series;clique (graph theory);clique problem;convex set;decision problem;email;ibm notes;information science;line segment intersection;np-completeness;polynomial;time complexity	Valentin E. Brimkov;Konstanty Junosza-Szaniawski;Sean Kafer;Jan Kratochvíl;Martin Pergel;Pawel Rzazewski;Matthew Szczepankiewicz;Joshua Terhaar	2014	CoRR		block graph;intersection;split graph;combinatorics;discrete mathematics;topology;longest path problem;clique problem;finite intersection property;clique-sum;trapezoid graph;mathematics;intersection;treewidth;intersection number;chordal graph;indifference graph;intersection graph	Theory	27.121487475532014	23.442089155040314	190422
e6699b40aeb4842bfbde7b14c384ef164e040c6d	distributed property testing for subgraph-freeness revisited		In the subgraph-freeness problem, we are given a constant-size graph H, and wish to determine whether the network contains H as a subgraph or not. The property-testing relaxation of the problem only requires us to distinguish graphs that are H-free from graphs that are -far from H-free, in the sense that an -fraction of their edges must be removed to obtain an H-free graph. Recently, Censor-Hillel et. al. and Fraigniaud et. al. showed that in the property-testing regime it is possible to test H-freeness for any graph H of size 4 in constant time, O(1/ ) rounds, regardless of the network size. However, Fraigniaud et. al. also showed that their techniques for graphs H of size 4 cannot test 5-cycle-freeness in constant time. In this paper we revisit the subgraph-freeness problem and show that 5-cycle-freeness, and indeed H-freeness for many other graphs H comprising more than 4 vertices, can be tested in constant time. We show that Ck-freeness can be tested in O(1/ ) rounds for any cycle Ck, improving on the running time of O(1/ ) of the previous algorithms for triangle-freeness and C4-freeness. In the special case of triangles, we show that triangle-freeness can be solved in O(1) rounds independently of , when is not too small with respect to the number of nodes and edges. We also show that T -freeness for any constant-size tree T can be tested in O(1) rounds, even without the property-testing relaxation. Building on these results, we define a general class of graphs for which we can test subgraph-freeness in O(1/ ) rounds. This class includes all graphs over 5 vertices except the 5-clique, K5. For cliques Ks over s ≥ 3 nodes, we show that Ks-freeness can be tested in O(m 1/2−1/(s−2)/ 1/2+1/(s−2)) rounds, where m is the number of edges in the graph. Finally, we gives two lower bounds, showing that some dependence on is necessary when testing H-freeness for specific subgraphs H.	amd k5;algorithm;censoring (statistics);clique (graph theory);linear programming relaxation;property testing;time complexity;vertex (geometry)	Orr Fischer;Tzlil Gonen;Rotem Oshman	2017	CoRR		discrete mathematics;combinatorics;vertex (geometry);mathematics;property testing;special case;graph	Theory	26.57307215185622	23.048706352044878	190804
dc74b7503df9cf200e5efa92861ea721e84fb7ff	algorithms to measure diversity and clustering in social networks through dot product graphs		Social networks are often analyzed through a graph model of the network. The dot product model assumes that two individuals are connected in the social network if their attributes or opinions are similar. In the model, a d-dimensional vector a represents the extent to which individual v has each of a set of d attributes or opinions. Then two individuals u and v are assumed to be friends, that is, they are connected in the graph model, if and only if a · a ≥ t, for some fixed, positive threshold t. The resulting graph is called a d-dot product graph. We consider two measures for diversity and clustering in social networks by using a d-dot product graph model for the network. Diversity is measured through the size of the largest independent set of the graph, and clustering is measured through the size of the largest clique. We obtain a tight result for the diversity problem, namely that it is polynomialtime solvable for d = 2, but NP-complete for d ≥ 3. We show that the clustering problem is polynomial-time solvable for d = 2. To our knowledge, these results are also the first on the computational complexity of combinatorial optimization problems on dot product graphs. We also consider the situation when two individuals are connected if their preferences are not opposite. This leads to a variant of the standard dot product graph model by taking the threshold t to be zero. We prove in this case that the diversity problem is polynomial-time solvable for any fixed d.	algorithm;clique (graph theory);cluster analysis;combinatorial optimization;computational complexity theory;decision problem;independent set (graph theory);karp's 21 np-complete problems;mathematical optimization;np-completeness;planar graph;polynomial;social network;time complexity	Matthew Richard Johnson;Daniël Paulusma;Erik Jan van Leeuwen	2013		10.1007/978-3-642-45030-3_13	lattice graph;graph power;mathematical optimization;combinatorics;discrete mathematics;null model;graph bandwidth;graph product;null graph;regular graph;simplex graph;forbidden graph characterization;comparability graph;aperiodic graph;clustering coefficient;mathematics;voltage graph;distance-hereditary graph;critical graph;random geometric graph;complement graph;string graph;strength of a graph	Theory	24.7475809753491	20.853241766055923	190831
2b7940977b3c3ad4b2ee011334254254493c4bd1	modelling and solving central cycle problems with integer programming	heuristic;cycle median;cycle centroid;cycle centre;location;connected graph;integer programming;computer experiment;graph;integer program;working paper;facility location	We consider the problem of identifying a central subgraph of a given simple connected graph. The case where the subgraph comprises a discrete set of vertices is well known. However, the concept of eccentricity can be extended to connected subgraphs such as: paths, trees and cycles. Methods have been reported which deal with the requirement that the subgraph is a path or a constrained tree. We extend this work to the case where the subgraph is required to be a cycle. We report on computational experience with integer programming models of the problems of identifying cycle centres, cycle medians and cycle centroids, and also on a heuristic based on the first model. The problems have applications in facilities location, particularly the location of emergency facilities, and service facilities.	computation;connectivity (graph theory);cycle (graph theory);distance (graph theory);facility location problem;heuristic;integer programming;path (graph theory)	Les R. Foulds;John M. Wilson;Tadashi Yamaguchi	2004	Computers & OR	10.1016/S0305-0548(03)00066-2	mathematical optimization;factor-critical graph;combinatorics;discrete mathematics;heuristic;connected component;computer experiment;integer programming;cycle detection;computer science;connectivity;pseudoforest;facility location problem;cycle graph;subgraph isomorphism problem;graph factorization;mathematics;distance-hereditary graph;induced subgraph isomorphism problem;graph;location;cycle basis	Theory	25.384056384479894	20.058114617116054	190850
ea042850121948a98b7461b1430123a94f8f9634	detecting intersections between convex polyhedra		For a polyhedron P in R, denote by |P | its combinatorial complexity, i.e., the number of faces, edges and vertices of the polyhedra. In this paper, we revisit the classic problem of preprocessing polyhedra independently so that given two preprocessed polyhedra P and Q in R, each translated and rotated, their intersection can be tested rapidly. For d = 3 we show how to perform such a test in O(log |P |+log |Q|) time after linear preprocessing time and space. This improves upon the last best known query time of O(log |P | log |Q|) by Dobkin and Kirkpatrick (1990). We then generalize our method to any constant dimension d, achieving the same O(log |P |+ log |Q|) query time using a representation of size O(|P |bd/2c+ε) for any ε > 0 arbitrarily small. This answers an even older question posed by Dobkin and Kirkpatrick 30 years ago. In addition, we provide an alternative O(log |P |+ log |Q|) algorithm to test the intersection of two convex polygons P and Q in the plane.	algorithm;david p. dobkin;polyhedron;preprocessor;sensor	Luis Barba;Stefan Langerman	2013	CoRR		regular polygon;polyhedron;mathematics;topology	Theory	30.117770981861074	18.904980573597705	191961
1ff51f0fc6d94bdef81e2bd032b95d5f45f3e342	finding many optimal paths without growing any optimal path trees	optimal path;time bound;circular string-to-string correction algorithm;single actual optimal path;new technique yield;single-source optimal path tree;circular string-to-string correction;actual optimal path;space complexity;application problem	optimal path;time bound;circular string-to-string correction algorithm;single actual optimal path;new technique yield;single-source optimal path tree;circular string-to-string correction;actual optimal path;space complexity;application problem		Danny Ziyi Chen;Ewa Misiolek	2007		10.1007/978-3-540-73545-8_24	mathematical optimization;combinatorics;discrete mathematics;any-angle path planning;longest path problem;mathematics	Theory	29.732359706361862	18.363001352864785	192360
b6ae1f231c571fc01a71f15ad0251852a0f3daba	matching general polygonal arcs	general polygonal arc	In this paper we present an algorithm for matching two polygonal arcs. We first show how to match two arcs of the same length by decomposition into pairs of equal length line segments. The distance measure used is the sum of the squared distances between corresponding points on the two arcs. We find the best match by calculating analytically the relative position and orientation of the arcs that minimize the distance measure. After analyzing the case of arcs having the same length, we show how to use this result in the algorithm for arc matching, i.e., finding the piece of a long arc that best matches with a short arc. We illustrate its application with an example and suggest how to implement it efficiently. We also discuss simplifications of the algorithm in the case of digital images.	arcs (computing)	Behzad Kamgar-Parsi;Avraham Margalit;Azriel Rosenfeld	1991	CVGIP: Image Understanding	10.1016/1049-9660(91)90030-S	mathematical optimization;combinatorics;mathematics;geometry	Robotics	31.47914383833695	19.7197693925924	192827
5a9586d3685441b74d0e26d42c772ef08a4ccf72	algorithms for drawing plane graphs		Graph drawing addresses the problem of constructing geometric representation of information and finds applications in almost every branch of science and technology. Efficient algorithms are essential for automatic drawings of graphs, and hence a lot of research has been carried out in the last decade by many researchers over the world to develop efficient algorithms for drawing graphs. In this paper we survey the recent algorithmic results on various drawings of plane graphs: straight line drawing, convex drawing, orthogonal drawing, rectangular drawing and boxrectangular drawing. key words: straight line drawing, convex drawing, grid drawing, rectangular drawing, box-rectangular drawing, orthogonal drawing, plane graph	graph drawing;line drawing algorithm;planar graph	Takao Nishizeki;Kazuyuki Miura;Md. Saidur Rahman	2004	IEICE Transactions		combinatorics;computer science;theoretical computer science;graph drawing	ECom	31.44801884329873	22.50442552079958	193271
fa2be470573993a7c8e547b825d2ee453055f130	an o(log1.5n log log n) approximation algorithm for mean isoperimetry and robust k-means		Given a weighted graph G = (V,E), and U ⊆ V , the normalized cut value for U is defined as the sum of the weights of edges exiting U divided by the number of vertices in U . The mean isoperimetry problem for weighted graphs is a generalization of the sparsest cut problem in which, given a parameter k alongside a weighted graph G = (V,E), the objective is to find k disjoint nonempty subsets of V for which the average normalized cut value of the parts is as small as possible. In this paper, we present an O(log n log logn) approximation algorithm for the mean isoperimetry problem. Our approach is based on developing an exact dynamic programming algorithm for this problem on weighted trees. We also show how our algorithm can be utilized to approximately solve a robust version of the k-means clustering problem in R, in which there can be some “outlier” points, lying outside the k parts. For this, the standard k-means objective function is modified to take into account the effect of the outliers by adding some penalty function g for them. We show that for a relatively general class of penalty functions g, this problem admits an O(log n log logn)-approximation algorithm, whose running time is polynomial in n, k, and d	approximation algorithm;cluster analysis;cut (graph theory);dynamic programming;isoperimetric inequality;k-means clustering;loss function;optimization problem;penalty method;polynomial;robustness (computer science);time complexity	Morteza Alimi;Amir Daneshgar;Mohammad-Hadi Foroughmand-Araabi	2018	CoRR			Theory	25.550105274748695	19.185693706782896	193591
9264be8fefa2016bc654ba0edec4bd5e6ec90ac5	the geometric generalized minimum spanning tree problem with grid clustering	maastricht university;dynamic programming algorithm;euclidean distance;digital archive;open access;minimum spanning tree;publication;scientific;institutional repository;polynomial time approximation scheme	This paper is concerned with a special case of the generalized minimum spanning tree problem. The problem is defined on an undirected graph, where the vertex set is partitioned into clusters, and non-negative costs are associated with the edges. The problem is to find a tree of minimum cost containing at least one vertex in each cluster. We consider a geometric case of the problem where the graph is complete, all vertices are situated in the plane, and Euclidean distance defines the edge cost. We prove that the problem is strongly NP-hard even in the case of a special structure of the clustering called grid clustering. We construct an exact exponential time dynamic programming algorithm and, based on this dynamic programming algorithm, we develop a polynomial time approximation scheme for the problem with grid clustering.	algorithm;cluster analysis;dynamic programming;euclidean distance;file spanning;graph (discrete mathematics);minimum spanning tree;np-hardness;polynomial;polynomial-time approximation scheme;situated;strong np-completeness;time complexity;tree (data structure);vertex (graph theory)	Corinne Feremans;Alexander Grigoriev;René Sitters	2006	4OR	10.1007/s10288-006-0012-6	euclidean minimum spanning tree;correlation clustering;mathematical optimization;combinatorics;discrete mathematics;kruskal's algorithm;polynomial-time approximation scheme;widest path problem;vertex cover;minimum degree spanning tree;spanning tree;steiner tree problem;prim's algorithm;minimum spanning tree;edge cover;dynamic programming;publication;euclidean distance;connected dominating set;k-minimum spanning tree;mathematics;reverse-delete algorithm;travelling salesman problem;distributed minimum spanning tree;shortest-path tree;minimum k-cut	Theory	25.06740634992642	19.74536933967606	193925
ed7c1f23b1af7a2c0088720e24e0ef0641a7aeab	the dominating set polytope via facility location		In this paper we present an extended formulation for the dominating set polytope via facility location. We show that with this for- mulation we can describe the dominating set polytope for cacti graphs, though its description in the natural node variables dimension has been only partially obtained. Moreover, the inequalities describing this poly- tope have coefficients in {�1, 0, 1}. This is not the case for the dominating set polytope in the node-variables dimension. It is known from (1 )t hat for any integer p, there exists a facet defining inequality having coeffi- cients in {1,...,p}. We also show a decomposition theorem by means of 1-sums. Again this decomposition is much simpler with the extended formulation than with the node-variables formulation given in (2).	dominating set;facility location problem	Mourad Baïou;Francisco Barahona	2014		10.1007/978-3-319-09174-7_4	mathematical optimization;combinatorics;uniform k 21 polytope;discrete mathematics;birkhoff polytope;mathematics	ECom	26.581966126314555	23.583030920174785	193946
f59d212e2a937f35535c57a8030b6bc83970572a	guarding galleries and terrains	procesamiento informacion;algorithm analysis;approximation algorithm;polygone;polygon;informatique theorique;information processing;algoritmo aproximacion;segment droite;poligono;segmento recta;analyse algorithme;line segment;algorithme approximation;traitement information;analisis algoritmo;computer theory;informatica teorica	Let P be a polygon with n vertices. We say that two points of P see each other if the line segment connecting them lies inside (the closure of) P . In this paper we present efficient approximation algorithms for finding the smallest set G of points of P so that each point of P is seen by at least one point of G, and the points of G are constrained to be belong to the set of vertices of an arbitrarily dense grid. We also present similar algorithms for terrains and polygons with holes.	approximation algorithm;vertex (geometry)	Alon Efrat;Sariel Har-Peled	2002	Inf. Process. Lett.	10.1016/j.ipl.2006.05.014	combinatorics;information processing;polygon;mathematics;geometry;approximation algorithm;algorithm	Theory	31.735946409816233	19.5365302441229	194853
7406ed8dc3d93fb91746e8fdb071f1b9c8ba6f7e	online ramsey games in random graphs	random graph;lower bound	Consider the following one-player game on a graph with n vertices. The edges are presented one by one to the player in a random order. One of r available colors has to be assigned to each edge immediately. The player’s objective is to color as many edges as possible without creating a monochromatic copy of some fixed graph F . We prove a lower bound of n on the typical duration of this game, where β(F, r) is a function that is strictly increasing in r and satisfies limr→∞ β(F, r) = 2−1/m2(F ), where n2−1/m2(F ) is the threshold of the corresponding offline coloring problem.	color;graph (discrete mathematics);graph coloring;monochrome;online and offline;random graph	Martin Marciniszyn;Reto Spöhel;Angelika Steger	2009	Combinatorics, Probability & Computing	10.1017/S0963548308009632	random regular graph;random graph;combinatorics;discrete mathematics;ramsey's theorem;universal graph;graph bandwidth;distance-regular graph;cycle graph;cubic graph;mathematics;voltage graph;upper and lower bounds;bound graph;complement graph;line graph;algorithm	Theory	28.690876148492347	24.702267274529305	194873
f6285702e7c98d9f9ce16b0df76078f01e21e46b	computing the maximum clique in the visibility graph of a simple polygon	dynamic programming;hamiltonian cycle;convex fan;simple polygon;dynamic program;algorithm;maximum clique;convexity;hidden vertex set;visibility graph	In this paper, we present an algorithm for computing the maximum clique in the visibility graph G of a simple polygon P in O(n^2e) time, where n and e are number of vertices and edges of G respectively. We also present an O(ne) time algorithm for computing the maximum hidden vertex set in the visibility graph G of a convex fan P. We assume in both algorithms that the Hamiltonian cycle in G that corresponds to the boundary of P is given as an input along with G.	clique (graph theory);visibility graph	Subir Kumar Ghosh;Thomas C. Shermer;Binay K. Bhattacharya;Partha P. Goswami	2007	J. Discrete Algorithms	10.1016/j.jda.2006.09.004	hamiltonian path;outerplanar graph;block graph;graph power;visibility graph;mathematical optimization;split graph;factor-critical graph;combinatorics;clique graph;discrete mathematics;independent set;graph bandwidth;feedback vertex set;visibility polygon;convexity;perfect graph;simple polygon;degree;simplex graph;dynamic programming;cycle graph;vertex;graph factorization;mathematics;neighbourhood;algorithm;strength of a graph	Theory	25.440828140890552	24.246752307019502	195743
b93e8d2da2ba90620fa81fbc4f1fb314b7fc8f86	on interference among moving sensors and related problems	004;range spaces voronoi diagrams moving points facility location interference minimization	We show that for any set of n points moving along “simple” trajectories (i.e., each coordinate is described with a polynomial of bounded degree) in <d and any parameter 2 ≤ k ≤ n, one can select a fixed non-empty subset of the points of size O(k log k), such that the Voronoi diagram of this subset is “balanced” at any given time (i.e., it contains O(n/k) points per cell). We also show that the bound O(k log k) is near optimal even for the one dimensional case in which points move linearly in time. As applications, we show that one can assign communication radii to the sensors of a network of n moving sensors so that at any given time their interference is O( √ n log n). We also show some results in kinetic approximate range counting and kinetic discrepancy. In order to obtain these results, we extend well-known results from ε-net theory to kinetic environments.		Jean-Lou De Carufel;Matthew J. Katz;Matias Korman;André van Renssen;Marcel Roeloffzen;Shakhar Smorodinsky	2016	JoCG	10.4230/LIPIcs.ESA.2016.34	mathematical optimization;combinatorics;discrete mathematics;computer science;mathematics	Theory	30.368122424097383	18.287719984748282	195812
c9ae322145b97cb294ace0a925e0a2363e66e976	a note on lee and schachter's algorithm for delaunay triangulation	delaunay triangulation;convex hull	Lee and Schachter have presented an algorithm for the Delaunay triangulation of a set of points whose convex hull is a rectangular region. An addendum to that algorithm is presented which gives the Delaunay triangulation of a set of points with an arbitrary convex hull. Timing results are also given.	addendum;algorithm;convex hull;delaunay triangulation	Marvin Shapiro	1981	International Journal of Computer & Information Sciences	10.1007/BF00996138	minimum-weight triangulation;delaunay triangulation;ruppert's algorithm;computer science;pitteway triangulation;convex hull;point set triangulation;constrained delaunay triangulation;chew's second algorithm;alpha shape;surface triangulation;bowyer–watson algorithm	Theory	31.661368222452055	20.26142786829402	195832
4c71fc0918bbceb1a7242836a340ff5d010340b2	shooting permanent rays among disjoint polygons in the plane	convex partition;efficient implementation;binary space partition;dynamic data structure;time use;segment insertion;ray shooting;data structure	We present a data structure for ray shooting-and-insertion in the free space among disjoint polygonal obstacles with a total of $n$ vertices in the plane, where each ray starts at the boundary of some obstacle. The portion of each query ray between the starting point and the first obstacle hit is inserted permanently as a new obstacle. Our data structure uses O(n log n) space and preprocessing time, and it supports m successive ray shooting-and-insertion queries in O(n log2 n + m log m) total time. We present two applications for our data structure: (1) Our data structure supports efficient implementation of auto-partitions in the plane i.e. binary space partitions where each partition is done along the supporting line of an input segment. If n input line segments are fragmented into m pieces by an auto-partition, then it can now be implemented in O(n log2n+m log m) time. This improves the expected runtime of Patersen and Yao's classical randomized auto-partition algorithm for n disjoint line segments to O(n log2 n). (2) If we are given disjoint polygonal obstacles with a total of n vertices in the plane, a permutation of the reflex vertices, and a half-line at each reflex vertex that partitions the reflex angle into two convex angles, then the folklore convex partitioning algorithm draws a ray emanating from each reflex vertex in the prescribed order in the given direction until it hits another obstacle, a previous ray, or infinity. The previously best implementation (with a semi-dynamic ray shooting data structure) requires O(n3/2-ε/2) time using O(n1+ε) space. Our data structure improves the runtime to O(n log2 n).	binary logarithm;data structure;preprocessor;randomized algorithm;ray casting;semiconductor industry;vertex (geometry);yao graph	Mashhood Ishaque;Bettina Speckmann;Csaba D. Tóth	2009		10.1145/1542362.1542372	mathematical optimization;combinatorics;data structure;mathematics;geometry;programming language	Theory	30.8783751505135	18.829992468631023	196920
360159863a649469a0230fb6cea9cc5439c9c897	properties of r-sausages	convex polytope;tree;three dimensional;steiner;euclidean space;minimal;steiner ratio;path topology;steiner minimal tree	This paper is concerned with the Steiner ratio. A number of properties about the structure of the flat sausage andR-Sausage convex polytopes yielding the best Steiner ratio in twoand three-dimensional Euclidean space, and the topology of the Steiner Minimal Tree for the corresponding vertex sets, are presented. 1. Outline The most recent survey of the Steiner problem has been conducted by Cieslik. In his work The Steiner ratio he recounts the history of the problem [1]. Cieslik clarifies that the problem is attributed to Steiner by Courant and Robbins: “A very simple but instructive problem was treated by Jacob Steiner, the famous representative of geometry at the University of Berlin in the early nineteenth century. Three villages A, B, C are to be joined by a system of roads of minimum total length” [2]. The authentic attribution is to Fermat who, in the early 17th century, stated the problem in the following form: given three points, find a fourth point that minimizes the sum of the distances from each of the three points to the fourth. We call this Fermat’s problem or the Steiner problem, depending on whether the set consists of three points or more than three points, respectively. Definition 1. Consider a set of N vertices V = (v1, v2, . . . , vN ) with Cartesian coordinates in Euclidean space Ed . The Steiner Minimal Tree (SMT) problem is to construct a tree T spanning V with possible candidate vertices from another set S (distinct from V ) so as to minimize the overall interconnecting length of T . 588 B. Toppur and J. MacGregor Smith To situate the Steiner problem in the literature related to sciences and engineering, one must also take bearings with respect to the canonical works of Garey and Johnson, and their definitions of computational and algorithmic complexity. The Euclidean SMT (ESMT) problem is not in the class NP [9]. It has also been shown to be NP-hard in the plane [8]. Unless P = NP, which seems an undecidable proposition, Garey and Johnson also showed that no polynomial approximation scheme can exist for either the ESMT or the Rectilinear SMT problem. This they did by creating a discrete version of the ESMT problem which can then be shown to be NP-Complete, by reducing it in polynomial time to the “exact cover by three sets” problem which is known to be NP-Complete. Thus the ESMT problem is at least as hard as the discrete ESMT problem and is therefore as hard to solve, if not harder, as any NP-Complete problem, e.g., the Traveling Salesman Problem. One is therefore forced to consider algorithms that take exponential time or use other constant time approximation schemes. An exact algorithm for optimizing ddimensional, full Steiner topologies was given by Smith [14]. Gilbert and Pollak showed that optimizing a pre-specified Steiner topology is a strictly convex optimization problem [10]. However, even when the topology is specified, numerical optimization techniques encounter difficulties. Both data-set size and computational time have to be taken into account as criteria in evaluating the efficiency of any algorithm. Some background information on the Steiner ratio is provided in Section 2. The progressive construction of the flat sausage is presented in Section 3. The path topology, an important full Steiner tree topology, is defined. We also introduce a representation of the Steiner trees for regular triangulated complexes as permutations in a finite alphabet. Each of the letters is a characterization of a Steiner point in terms of its neighboring points. In Section 4, structural properties of the flat sausage are proven after providing substantial experimental evidence and formulating conjectures. Computational evidence that the flat sausage has the path topology as the optimal SMT topology is presented. This is followed by a non-inductive proof that this is so for a flat sausage: the minimizing direction of the objective function, the length of the SMT is towards the centroid of the triangle, in the case of an equilateral triangle. In the case when two flat sausage elements are combined by conjoining their outermost edge, a similar, though not equilateral, triangle is the focus of attention. After a split operation at this common vertex, the locus of the resulting Steiner point is directly towards the axis of the composite flat sausage, and does not disrupt the topology of the element at parts which are close to this triangle. This process can therefore be repeated ad infinitum to generate the entire semi-group, including the infinite flat sausage. Properties of the ribbon sausage or R-sausage are proven in Section 5, after providing substantial experimental evidence and formulating conjectures. The calculus of variations technique used to prove that the path topology is optimal for flat sausages, is then shown to be valid for the R-sausage too. The last section provides a summary and conclusion. 2. The Steiner Ratio The optimal Steiner ratio is a measure of the improvement of one interconnecting network over another interconnecting network: ρd = infV∈Ed Total length of ESMT (V ) Total length of EMST (V ) . Properties ofR-Sausages 589 In the above formula, ESMT is an acronym for Euclidean Steiner Minimal Tree, and EMST stands for Euclidean Minimum Spanning Tree. Gilbert and Pollack conjectured that this ratio was achieved by the regular simplex in each dimension. 2.1. The Steiner Ratio in Two and Higher Dimensions It was shown by Du and Hwang, confirming the conjecture of Gilbert and Pollak, that ρ2 = √ 3/2 ≈ 0.866 in two dimensions [5]. This is achieved when the vertices are the extreme points of an equilateral triangle. Du and Smith were also able to prove that the higher-order simplexes were not the optimal point configurations [6]. Although more than one exact algorithm exists for computing Minimum Spanning Trees (MSTs), geometric algorithms for the SMT problem in dimensions greater than two have proven extremely difficult. In three dimensions the equilateral tetrahedron is optimal among all possible four point configurations. While the singleton simplex failed to realize the optimal configuration for E3, it eventually leads to the search for the optimal configuration by looking at two tetrahedra as well as by gluing various types and combinations of Platonic solids (cubes, tetrahedra, octahedra, etc.) together. Surprisingly, a breakthrough came when three tetrahedra were configured, where ρ3 dramatically dropped and continued to drop for increasing numbers of tetrahedra. Thus, the Steiner ratio turns out to be asymptotically achieved for an infinite object rather than for a fixed symmetric and geometric polyhedron as was expected [13]. 2.2. Definition of the R-Sausage The d-dimensional point set which Smith and MacGregor Smith call the R-sausage may be generated in the following way [13]: Definition 2. Start with a unit diameter ball in d-space. Successively add unit balls so that the N th ball added is always touching the min(d, N − 1)most recently added balls. This procedure uniquely defines an infinite sequence of interior-disjoint numbered d-balls. The centers of these balls form a countably infinite discrete point set, which is called the R-sausage. A point set consisting of N points of the d-sausage is called the N point R-sausage. The 1-sausage is simply the integers on the real axis. The 2sausage is an infinite version of a lattice of equilateral triangles which we refer to as the “flat sausage” for convenience. The Steiner ratio of this 2-sausage converges to the optimal Steiner ratio in the two dimensions, the same as the simplex. This evidence, albeit computational, gives credence to the supposition that the higher-dimensional Rsausages yield the optimal Steiner ratios in their respective dimensions. A path of tree topologies has been suggested, which may top the R-sausage with respect to the Steiner ratio in dimensions greater than or equal to 80. Coxeter, in 1961, in his textbook on geometry, showed that 28 tetrahedra conjoined, as an R-sausage was aperiodic, about an axis through the centroids of the tetrahedra. However, he makes no reference to Steiner trees in his book [3]. Smith and MacGregor Smith performed an extensive study of the Steiner ratio [13]. Du and Smith computed upper bounds g(d) on ρd for d-sausages. 590 B. Toppur and J. MacGregor Smith d-Sausages are the d-dimensional counterparts of the flat sausage and the R-sausage [6]. The best rigorous lower bound on ρ3 is ≈ 0.6158277481 by Du [4]. Smith and MacGregor Smith have shown that the R-sausage has produced the best known upper bound on the Steiner ratio in three dimensions [13]. Conjecture 1. The set of n-point R-sausages constitute the point configurations that in the limit, as n approaches infinity, minimize the Steiner ratio for different dimensions. Lemma 1. The infinite three-dimensional R-sausage contains within it a triple helix which passes through the fixed vertices that define the R-sausage. These points of the R-sausage are given by a recursive expression in the equation for some â, b̂, ĉ, d̂ ∈ . These coefficients are ( 3 , 2 3 , 2 3 ,−1). Vn = âVn−1 + b̂Vn−2 + ĉVn−3 + d̂Vn−4. (1) Proof. The R-sausage is generated by repeatedly reflecting a tetrahedral point in the facet opposite to it. The reflected point is chosen with respect to the Bucky-ball1 rule which is presented as Definition 2. The coordinates of the centroid C of the triangle Vn−1, Vn−2, Vn−3 is given by 1/3(Vn−1 + Vn−2 + Vn−3). This expression can be derived by solving two pairs of simultaneous equations obtained from any two out of the three medians of the triangle intersecting at the point C . Let r1 and s1 be constants such that r1 + s1 = 1 and C = r1Vn−1 + s1Vn−2. Let r2 and s2 be constants such that r2 + s2 = 1 and C = r2Vn−2 + s2Vn−3. Equating these two expressions for C one gets r1Vn−1 + s1( 2 )(Vn−2 + Vn−3) = C = r2Vn−3 + s2( 2 )(Vn−1 + Vn−2) or 2r1V1 + s1V2 + s1V3 = 2r2V3 + s2V1 + s2V2. Comparing the coefficients of 	analysis of algorithms;apache axis;binary tree;bucky bit;calculus of variations;cartesian closed category;coefficient;complete (complexity);computation;computational complexity theory;convex function;convex optimization;courant–friedrichs–lewy condition;exact algorithm;exact cover;fermat;file spanning;gilbert cell;locus;mathematical induction;mathematical optimization;michael garey;minimum spanning tree;np (complexity);np-completeness;np-hardness;network topology;olap cube;optic axis of a crystal;optimization problem;p versus np problem;pollack's rule;polyhedron;polynomial;polynomial-time approximation scheme;recursion;robbins v. lower merion school district;semiconductor industry;steiner tree problem;time complexity;travelling salesman problem;tree network;tree traversal;waist–hip ratio	Badri Toppur;James MacGregor Smith	2004	Discrete & Computational Geometry	10.1007/s00454-004-2851-2	three-dimensional space;combinatorics;discrete mathematics;convex polytope;topology;steiner tree problem;euclidean space;mathematics;geometry;tree	Theory	30.777443669280164	21.61124737295583	197100
59406b3656c4eeeec20622106ffbaec7e21255fd	minimum r-star cover of class-3 orthogonal polygons		We are interested in the problem of covering simple orthogonal polygons with the minimum number of r-stars; an orthogonal polygon is an r-star if it is orthogonally convex and star-shaped. The problem has been considered by Worman and Keil who described an algorithm running in O(n 17 poly-log n) time where n is the size of the input polygon. In this paper, we consider the above problem on simple class-3 orthogonal polygons, i.e., orthogonal polygons that have dents along at most 3 different orientations. By taking advantage of geometric properties of these polygons, we give an output-sensitive O(n + k log k)-time algorithm where k is the size of a minimum r-star cover; this is the first purely geometric algorithm for this problem. Ideas in this algorithm may be generalized to yield faster algorithms for the problem on general simple orthogonal polygons. For such polygons, our algorithm implies a 2-approximation algorithm.	approximation algorithm	Leonidas Palios;Petros Tzimas	2014		10.1007/978-3-319-19315-1_25	smoothing group	Theory	31.268467056391945	20.293342426882	197229
f4c95a79e002ce237adb2fc5ab28874db3831646	approximability of edge matching puzzles	exact solution;approximate solution;datavetenskap datalogi;polynomial time approximation scheme	Definition An Edge Matching Puzzle (EMP) is a puzzle where the goal is to arrange a given collection of n square-shaped and edge-coloured tiles (of area a each) into a given rectangle of area n · a such that adjacent tiles are coloured identically along their common edge. A B C D Figure: A tile with colours A,B,C and D on its edges.	approximation algorithm;color	Antonios Antoniadis;Andrzej Lingas	2010		10.1007/978-3-642-11266-9_13	mathematical optimization;combinatorics;discrete mathematics;polynomial-time approximation scheme;computer science;god's algorithm;mathematics;algorithm	Theory	29.670501017005783	21.295582530261587	197417
66e1c129b9df7f36ab90a7225512e7b8add50768	directed graphs and rectangular layouts	directed graphs;subgraph directed graph drawing rectangular layouts rectangular dual st graphs planar embeddings;rectangular layouts;computational geometry;discrete mathematics;indexing terms;rectangular dual;rectangular layout;directed graph;graph algorithm;planar embeddings;subgraph;information interfaces and presentation;contact graph;st graphs;directed graph drawing;tree graphs relational databases mathematics graphical user interfaces context modeling displays shearing;directed graphs computational geometry	This paper deals with the problem, arising in practice, of drawing a directed graph as a collection of disjoint, isothetic rectangles, where the rectangles of the nodes of each edge must touch and where the placement of the rectangles respects the ordering of the edges. It provides characterizations for those graphs having the special type of rectangular layout known as a rectangular dual. It then characterizes the st-graphs having rectangular layouts in terms of the existence of certain planar embeddings and the non-existence of a particular subgraph.	directed graph;graph (discrete mathematics)	Adam L. Buchsbaum;Emden R. Gansner;Suresh Venkatasubramanian	2007	2007 6th International Asia-Pacific Symposium on Visualization	10.1109/APVIS.2007.329276	combinatorics;discrete mathematics;theoretical computer science;mathematics	Arch	31.048593905238956	24.106662057480744	197640
106da1de4b06b43220647329887695a6a0830d64	lower bounds for simplicial covers and triangulations of cubes	minimal simplical cover;simplex;higher dimensions;triangulation;lower bound	We show that the size of a minimal simplicial cover of a polytope P is a lower bound for the size of a minimal triangulation of P , including ones with extra vertices. We then use this fact to study minimal triangulations of cubes, and we improve lower bounds for covers and triangulations in dimensions 4 through at least 12 (and possibly more dimensions as well). Important ingredients are an analysis of the number of exterior faces that a simplex in the cube can have of a specified dimension and volume, and a characterization of corner simplices in terms of their exterior faces. Let P be a convex polytope. A (simplicial) cover of P is a collection of simplices such that (i) the vertices of the simplices are vertices of P and (ii) the union of the simplices is P . For example, some covers are triangulations in which simplices meet face-to-face and have disjoint interiors; although in general, cover elements may overlap. Define the covering number C(P ) to be the minimal number of simplices needed for a cover of a polytope P . Although the covering number is of interest in its own right (see [3]), we prove in Theorem 1 that the covering number of P also gives a lower bound for the size of a minimal triangulation of P , including triangulations with extra vertices. We then use the covering number to study the classical problem of determining the size of the minimal triangulation when P is a d-dimensional cube (this is sometimes called the simplexity of the cube). Let I = [0, 1], and let Id denote the d-cube. We define the notion of an exterior face of a cube simplex, develop a counting function for exterior faces of prescribed dimension and volume, and establish a recursive bound in Theorem 2 that yields an absolute bound for the cases of interest in Theorem 3. This bound can be improved still further by analyzing separately the corner simplices of the cube; Theorem 4 characterizes corner simplices in terms of the number of exterior faces they have. We use these results to establish new lower bounds for C(Id), and via Theorem 1, these yield the best known bounds for general triangulations in dimensions up through at least 12 (and possibly more dimensions— see the concluding section). For d = 4 through d = 12 these numbers are: 16, 60, 252, 1143, 5104, 22616, 98183, 520865, 2.9276× 10 In particular, our results show that Mara’s minimal triangulation of the 4-cube [7], using 16 simplices, is also a minimal simplicial cover; furthermore, using extra vertices will not produce any smaller triangulations of the 4-cube. See Theorem 5. A comparison of our bounds with bounds for other kinds of decompositions may be found in Table 1. ∗Research partially supported by a Beckman Research Grant at Harvey Mudd College. ∗∗Research partially supported by NSF Grant DMS-0301129.	computation;cubes;ibm notes;linear programming;olap cube;recursion;rounding;simplexity;solver;vertex cover	Adam Bliss;Francis Edward Su	2005	Discrete & Computational Geometry	10.1007/s00454-004-1128-0	combinatorics;topology;triangulation;mathematics;geometry;upper and lower bounds;simplex	Theory	27.934778102503056	23.15021498900124	197925
5967c6074c472122f6ff58cf4d0c82d0549bf135	kernels of minimum size gossip schemes	minimum size gossip scheme	The main part of gossip schemes are the kernels of their minimal orders. We give a complete characterization of all kernels that may appear in gossip schemes on simple graphs with a minimum number of calls. As consequences we prove several results on gossip schemes, e.g. the minimum number of rounds of a gossip scheme with a minimum number of calls is computed. Moreover, in the new context we give proofs of known results, e.g. the well-known Four-Cycle-Theorem. In the last part, we deal with order theoretic questions for such kernel posets. After describing all p-grid-kernels in terms of permutations and subsets, isomorphism is investigated and they are enumerated. Then we compute the order dimension and the jump number of all possible kernels , and nally, we show how to determine the numbers of their linear extensions.	gossip protocol;kernel (operating system);theory;whole earth 'lectronic link	Roger Labahn	1995	Discrete Mathematics	10.1016/0012-365X(94)00031-D	combinatorics;discrete mathematics;mathematics;algebra	Theory	26.37990714325423	25.247602712872048	198769
35566a347260f84ebaf0e1c329dbe69ea1c58557	optimal algorithms for compact linear layouts		Linear layouts are a simple and natural way to draw a graph: all vertices are placed on a single line and edges are drawn as arcs between the vertices. Despite its simplicity, a linear layout can be a very meaningful visualization if there is a particular order defined on the vertices. Common examples of such ordered - and often also directed - graphs are event sequences and processes. A main drawback of linear layouts are the usually (very) large aspect ratios of the resulting drawings, which prevent users from obtaining a good overview of the whole graph. In this paper we present a novel and versatile algorithm to optimally fold a linear layout of a graph such that it can be drawn nicely in a specified aspect ratio, while still clearly communicating the linearity of the layout. Our algorithm allows vertices to be drawn as blocks or rectangles of specified sizes to incorporate different drawing styles, label sizes, and even recursive structures. For reasonably-sized drawings the folded layout can be computed interactively. We demonstrate the applicability of our algorithm on graphs that represent process trees, a particular type of process model. Our algorithm arguably produces much more readable layouts than existing methods.	algorithm;interactivity;process (computing);process modeling;recursion;vertex (geometry)	Willem Sonke;Kevin Verbeek;Wouter Meulemans;Eric Verbeek;Bettina Speckmann	2018	2018 IEEE Pacific Visualization Symposium (PacificVis)	10.1109/PacificVis.2018.00010	data visualization;visualization;vertex (geometry);recursion;arc (geometry);approximation algorithm;aspect ratio (image);linearity;algorithm;mathematics	Visualization	30.792293688286804	22.66968195401635	198776
3da32e6f7a98e8d8b009d89be41823891cf7765b	on-line ramsey numbers for paths and stars	info info dm computer science cs discrete mathematics cs dm;ramsey number	We study on-line version of size-Ramsey numbers of graphs defined via a game played between Builder and Painter: in one round Builder joins two vertices by an edge and Painter paints it red or blue. The goal of Builder is to force Painter to create a monochromatic copy of a fixed graph H in as few rounds as possible. The minimum number of rounds (assuming both players play perfectly) is the on-line Ramsey number r̃(H) of the graph H . We determine exact values of r̃(H) for a few short paths and obtain a general upper bound r̃(Pn) ≤ 4n − 7. We also study asymmetric version of this parameter when one of the target graphs is a star Sn with n edges. We prove that r̃(Sn, H) ≤ n ·e(H) when H is any tree, cycle or clique.	a* search algorithm;clique (graph theory);cycle (graph theory);monochrome;online and offline;ramsey's theorem	Jaroslaw Grytczuk;Hal A. Kierstead;Pawel Pralat	2008	Discrete Mathematics & Theoretical Computer Science		combinatorics;ramsey's theorem;mathematics;algorithm;algebra	Theory	28.89398867801508	24.598330082128257	199104
f4774e9f01028c823c31ea76b9abc9325f3dec65	monotone edge sequences in line arrangements and applications (extended abstract)	monotone edge sequences;extended abstract;line arrangements	Without Abstract	monotone	Herbert Edelsbrunner;Emo Welzl	1984		10.1007/BFb0030307	mathematical optimization;combinatorics;discrete mathematics;mathematics	Theory	29.872749914850715	23.88699929826102	199491
35a94fada1b4788a2680edf0059b4ff6497085dd	on the mixed domination problem in graphs	tree;algorithm;mixed domination;cactus;np complete	A mixed dominating set of a simple graph G = (V,E) is a subset D ⊆ V ∪E such that every vertex or edge not in D is adjacent or incident to at least one vertex or edge in D. The mixed domination problem is to determine a minimum mixed dominating set of G. This paper studies mixed domination in graphs from an algorithmic point of view. In particular, a linear-time labeling algorithm for the mixed domination problem in cacti is presented. In addition, we fix an incomplete proof of the NP-completeness of the mixed domination problem in split graphs [22]. Finally, we establish a primal-dual algorithm for the mixed domination problem in trees.	diffusing update algorithm;dominating set;graph (discrete mathematics);np-completeness;time complexity	James K. Lan;Gerard J. Chang	2013	Theor. Comput. Sci.	10.1016/j.tcs.2012.11.035	combinatorics;discrete mathematics;np-complete;topology;domination analysis;dominating set;computer science;mathematics;tree;algorithm	Theory	25.024122970367053	24.94223685268035	199898
