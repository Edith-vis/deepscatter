id	title	keywords	abstract	entities	authors	year	journal	doi	fos	area	x	y	ix
0803177ee59d1640dabb7f4a8704e9ddbd470a03	local tree-width, excluded minors, and approximation algorithms	minimum dominating set;vertex cover;approximate algorithm;combinatorial optimization problem;05c85;polynomial time;68w25;polynomial time approximation scheme;maximum independent set	The local tree-width of a graphG = (V, E) is the function ltw : N → N that associates with every∈ N the maximal tree-width of an r-neighborhood in G. Our main graph theoretic result is a decomposition theorem for graphs with excluded minors that essentially says that such graphs can b e decomposed into trees of graphs of bounded local tree-width. As an application of this theorem, we show that a number of com binatorial optimization problems, such as M INIMUM VERTEX COVER, M INIMUM DOMINATING SET, and MAXIMUM INDEPENDENTSET have a polynomial time approximation scheme when restricted to a class of graphs with an excluded minor.	approximation algorithm;dominating set;mathematical optimization;matroid minor;maximal set;polynomial;polynomial-time approximation scheme;spanning tree;theory;time complexity;treewidth;vertex cover	Martin Grohe	2003	Combinatorica	10.1007/s00493-003-0037-9	1-planar graph;time complexity;pathwidth;mathematical optimization;combinatorics;discrete mathematics;robertson–seymour theorem;polynomial-time approximation scheme;independent set;bidimensionality;feedback vertex set;bipartite graph;dominating set;vertex cover;edge cover;mathematics;maximal independent set;partial k-tree;chordal graph;approximation algorithm;algorithm;matching;minimum k-cut	Theory	24.237402978891755	23.942494725067345	159772
7e9852b72b2a99cb16e24e4b41fd164b61effd7c	mathematical formulations for the acyclic partitioning problem		This paper addresses the problem of partitioning the vertex set of a given directed, edge- and vertex-weighted graph into disjoint subsets (i.e., clusters). Clusters are to be determined such that the sum of the vertex weights within the clus- ters satisfies an upper bound and the sum of the edge weights within the clusters is maximized. Additionally, the digraph is enforced to partition into a directed, acyclic graph, i.e., a digraph that contains no directed cycle. This problem is known in the literature as acyclic partitioning problem and is proven to be NP-hard in the strong sense. Real-life applications arise, e.g., at rail-rail transshipment yards and in Very Large Scale Integration (VLSI) design. We propose two model formulations for the acyclic partitioning problem, a compact and an augmented set partitioning model.	directed acyclic graph;partition problem	Jenny Nossack;Erwin Pesch	2013		10.1007/978-3-319-07001-8_45	mathematical optimization;combinatorics;discrete mathematics;feedback arc set;feedback vertex set;acyclic dependencies principle;mathematics;directed acyclic word graph;directed acyclic graph	AI	24.557291638198837	23.149600337793583	160326
054b533daf94be4d686ef383b0609689a98612a8	quantum query complexity of minor-closed graph properties	graph properties;004;lower bounds;graph minors;upper bound;quantum algorithms;quantum walk;05c83;query complexity;68q12;quantum physics;computational complexity;forbidden subgraphs;quatum query complexity quantum algorithms lower bounds graph minors graph properties;quantum query complexity;data structure;lower bound	We study the quantum query complexity of minor-closed graph properties, which include such problems as determining whether an n-vertex graph is planar, is a forest, or does not contain a path of a given length. We show that most minor-closed properties—those that cannot be characterized by a finite set of forbidden subgraphs—have quantum query complexity Θ(n3/2). To establish this, we prove an adversary lower bound using a detailed analysis of the structure of minor-closed properties with respect to forbidden topological minors and forbidden subgraphs. On the other hand, we show that minor-closed properties (and more generally, sparse graph properties) that can be characterized by finitely many forbidden subgraphs can be solved strictly faster, in o(n3/2) queries. Our algorithms are a novel application of the quantum walk search framework and give improved upper bounds for several subgraph-finding problems. 1998 ACM Subject Classification F.2.2 Nonnumerical Algorithms and Problems	adversary (cryptography);algorithm;decision tree model;forbidden graph characterization;forbidden subgraph problem;graph property;quantum walk;sparse graph code;sparse matrix	Andrew M. Childs;Robin Kothari	2011		10.4230/LIPIcs.STACS.2011.661	perfect graph theorem;combinatorics;discrete mathematics;data structure;computer science;theoretical computer science;forbidden graph characterization;mathematics;upper and lower bounds;graph minor;planar graph	Theory	20.69560389334245	22.773080144110782	160337
06bdbad537f533e1e0a5a057f15d6cb4f54a7e77	fully dynamic maximal matching in o(log n) update time	68w40;05c70;matching;05c85;68w20;68w05;dynamic graph algorithm	We present an algorithm for maintaining maximal matching in a graph under addition and deletion of edges. Our algorithm is randomized and it takes expected amortized $O(\log n)$ time for each edge update, where $n$ is the number of vertices in the graph. While there exists a trivial $O(n)$ time algorithm for each edge update, the previous best known result for this problem is due to Ivkovic and Lloyd [Lecture Notes in Comput. Sci. 790, Springer-Verlag, London, 1994, pp. 99--111]. For a graph with $n$ vertices and $m$ edges, they gave an $O( {(n+ m)}^{0.7072})$ update time algorithm which is sublinear only for a sparse graph. For the related problem of maximum matching, Onak and Rubinfeld [Proceedings of STOC'10, Cambridge, MA, 2010, pp. 457--464] designed a randomized algorithm that achieves expected amortized $O(\log^2 n)$ time for each update for maintaining a $c$-approximate maximum matching for some unspecified large constant $c$. In contrast, we can maintain a factor 2 approximate maximum matching in...	matching (graph theory);maximal set	Surender Baswana;Manoj Gupta;Sandeep Sen	2015	SIAM J. Comput.	10.1137/130914140	matching;mathematical optimization;factor-critical graph;combinatorics;mathematics;algorithm;matching	Theory	21.570359189520325	21.197266421571634	161013
666f9e3849defc33bb3111609ff071f32e3ca953	bounds and algorithms for limited packings in graphs		We consider (closed neighbourhood) packings and their generalization in graphs called limited packings. A vertex set X in a graphG is a k-limited packing if for any vertex v ∈ V (G), |N [v] ∩X | ≤ k, where N [v] is the closed neighbourhood of v. The k-limited packing number Lk(G) is the largest size of a k-limited packing in G. Limited packing problems can be considered as secure facility location problems in networks. We develop probabilistic and greedy approaches to limited packings in graphs, providing lower bounds for the k-limited packing number, and randomized and greedy algorithms to find k-limited packings satisfying the bounds. Some upper bounds for Lk(G) are given as well. The problem of finding a maximum size k-limited packing is known to be NP -complete even in split or bipartite graphs.	greedy algorithm;neighbourhood (graph theory);randomized algorithm;set packing;vertex (graph theory)	Andrei V. Gagarin;Vadim E. Zverovich	2014	CoRR		combinatorics;discrete mathematics;mathematics;geometry	Theory	23.87808097877331	20.508178666334338	161409
592c85249846807a555bc7418f7a00d2407b7b0b	computing the clique number of a-perfect graphs in polynomial time	main result;algorithmic result;a-perfect graph;clique number;generalized clique;clique constraint;graph class;stable set polytope;polynomial time;perfect graph	Abstract   A main result of combinatorial optimization is that clique and chromatic number of a perfect graph are computable in polynomial time (Grotschel, Lovasz and Schrijver 1981). This result relies on polyhedral characterizations of perfect graphs involving the stable set polytope of the graph, a linear relaxation defined by clique constraints, and a semi-definite relaxation, the Theta-body of the graph. A natural question is whether the algorithmic results for perfect graphs can be extended to graph classes with similar polyhedral properties.  We consider a superclass of perfect graphs, the  a -perfect graphs, whose stable set polytope is given by constraints associated with generalized cliques. We show that for such graphs the clique number can be computed in polynomial time as well. The result strongly relies upon Fulkersonsʼs antiblocking theory for polyhedra and Lovaszʼs Theta function.	clique (graph theory);time complexity	Arnaud Pêcher;Annegret Wagler	2011	Electronic Notes in Discrete Mathematics	10.1016/j.endm.2011.10.018	strong perfect graph theorem;1-planar graph;claw-free graph;clique;block graph;pathwidth;perfect graph theorem;mathematical optimization;split graph;combinatorics;clique graph;discrete mathematics;cograph;independent set;perfect graph;clique problem;trivially perfect graph;graph coloring;clique-sum;mathematics;treewidth;chordal graph;indifference graph;line graph	Theory	23.219373761224052	24.00328906993945	162216
14cb8c7ba183184ca4bd0d52f433fce90bb64cc6	an experimental analysis of a polynomial compression for the steiner cycle problem		We implement and evaluate a polynomial compression algorithm for the Steiner Cycle problem that was recently developed by Wahlstrom STACS 2013. Steiner Cycle is a generalization of Hamiltonian Cycle and asks, given a graph $$G=V,E$$ and a set of $$k$$terminals$$T\subseteq V$$, whether there is a simple cycle containing $$T$$ as well as an arbitrary number of further vertices of $$G$$. Wahlstrom's compression algorithm takes any such instance and in polynomial time produces an equivalent instance of size polynomial in $$k$$. The algorithm has several distinguishing features that make it interesting as a test subject for evaluating theoretical results on preprocessing: It uses Gaussian elimination on the Tutte matrix of essentially the input graph instead of explicit reduction rules. The output is an instance of an artificial matrix problem, which might not even be in NP, rather than Steiner Cycle.#R##N##R##N#We study to what extend this compression algorithm is useful for actually speeding up the computation for Steiner Cycle. At high level, we find that there is a substantial improvement of using the compression in comparison to outright running a $${\mathcal {O}}2^k\cdot |V|^c$$ algebraic algorithm also due to Wahlstrom. This is despite the fact that, at face value, the creation of somewhat artificial output instances by means of nonstandard tools seems not all that practical. It does benefit, however, from being strongly tied into a careful reorganization of the algebraic algorithm.	polynomial;steiner tree problem	Stefan Fafianie;Stefan Kratsch	2015		10.1007/978-3-319-20086-6_28	mathematical optimization;combinatorics;discrete mathematics;steiner tree problem;mathematics;algorithm	Theory	19.306791219119596	19.427960834775625	162248
fd132a539d4d822e7ff79b7d1bf7f44d1fe060d4	a structural approach to matching problems with preferences	qa75 electronic computers computer science	This thesis is a study of a number of matching problems that se ek to match together pairs or groups of agents subject to the preferences of some or all of the agen ts. We present a number of new algorithmic results for five specific problem domains. Each o f these results is derived with the aid of somestructuralproperties implicitly embedded in the problem. We begin by describing an approximation algorithm for the pr oblem of finding amaximumstable matching for an instance of the stable marriage problem with ties and incomplete lists (MAXSMTI). Our polynomial time approximation algorithm provid es a performance guarantee of 3/2 for the general version of MAX-SMTI, improving upon the prev ious best approximation algorithm, which gave a performance guarantee of 5/3. Next, we study thesex-equal stable marriage problem (SESM). We show that SESM is W [1]-hard, even if the men’s and women’s preference lists are both of len gth at most three. This improves upon the previously known hardness results. We contrast this wit h an exact, low-order exponential time algorithm. This is the first non-trivial exponential time al gorithm known for this problem, or indeed for any hard stable matching problem. Turning our attention to the hospitals / residents problem with couples (HRC), we show that HRC is NP-complete, even if very severe restrictions are placed on the input. By contrast, we give a lineartime algorithm to find a stable matching with couples (or repo t that none exists) when stability is defined in terms of the classical Gale-Shapley concept. Th is result represents the most general polynomial time solvable restriction of HRC that we are awar e of. We then explore thethree dimensional stable matching problem (3DSM), in which we seek to find stable matchings across three sets of agents, rather than tw o (as in the classical case). We show that under two natural definitions of stability, finding a sta ble matching for a 3DSM instance is NP-complete. These hardness results resolve some open ques tions in the literature. Finally, we study thepopular matching problem(POP-M) in the context of matching a set of applicants to a set of posts. We provide a characterization of the s et of popular matchings for an arbitrary POP-M instance in terms of a new structure called the switching graph. We show that this structure can be exploited to yield efficient algorithms for a range of a ssociated problems, extending and improving upon the previously best-known results for this p roblem.	approximation algorithm;decision problem;embedded system;matching (graph theory);max;moving target indication;np-completeness;pattern matching;polynomial;problem domain;stable marriage problem;time complexity	Eric McDermid	2011			mathematical optimization;combinatorics;stable marriage problem;3-dimensional matching;mathematics;stable roommates problem;algorithm	Theory	23.33537129303237	23.80443700912955	162883
a42448590e1e226b287d9609a218821cc49aa089	fixed-parameter algorithms for finding agreement supertrees		We study the agreement supertree approach for combining rooted phylogenetic trees when the input trees do not fully agree on the relative positions of the taxa. We consider two ways to deal with such conflict. The first is to contract a set of edges in the input trees so that the resulting trees have an agreement supertree. We show that this problem is NP-complete and give an FPT algorithm for the problem parameterized by the number of input trees and the number of edges contracted. The second approach is to remove a set of taxa from the input trees so that the resulting trees have an agreement supertree. Guillemot and Berry (2010) gave an FPT algorithm for this problem when the input trees are all binary. We give an FPT algorithm for the more general case where the input trees are allowed to have arbitrary degree.	algorithm;karp's 21 np-complete problems;parameterized complexity;phylogenetic tree;phylogenetics;supertree	David Fernández-Baca;Sylvain Guillemot;Brad Shutters;Sudheer Vakati	2012		10.1007/978-3-642-31265-6_30	combinatorics;discrete mathematics;supertree;mathematics;weight-balanced tree;algorithm	Theory	18.428030229868277	22.10255474817049	163292
1db21b2a4cd85128eb89b009160f0e16f1d34feb	shortest color-spanning intervals	parameterized complexity;computational geometry;color spanning objects;exact algorithms	Given a set of  n  points on a line, where each point has one of  k    colors, and given an integer   s i ≥1       s    i    ≥  1        for each color  i   ,   1≤i≤k     1  ≤  i  ≤  k       , the problem  Shortest Color-Spanning  t  Intervals  (SCSI- t ) aims at finding  t    intervals to cover at least   s i        s    i          points of each color  i   , such that the maximum length of the intervals is minimized. Chen and Misiolek introduced the problem SCSI-1, and presented an algorithm running in   O(n)     O  (  n  )        time if the input points are sorted. Khanteimouri et al. gave an   O(n 2 log⁡n)     O  (    n    2    log  ⁡  n  )        time algorithm for the special case of SCSI-2 with   s i =1       s    i    =  1        for all colors  i   . In this paper, we present an improved algorithm with running time of   O(n 2 )     O  (    n    2    )        for SCSI-2 with arbitrary   s i ≥1       s    i    ≥  1       . We also obtain some interesting results for the general problem SCSI- t . From the negative direction, we show that approximating SCSI- t  within any ratio is NP-hard when  t  is part of the input, is W[2]-hard when  t  is the parameter, and is W[1]-hard with both  t  and  k  as parameters. Moreover, the NP-hardness and the W[2]-hardness with parameter  t    hold even if   s i =1       s    i    =  1        for all  i . From the positive direction, we show that SCSI- t    with   s i =1       s    i    =  1        for all  i  is fixed-parameter tractable with  k    as the parameter, and admits an exact algorithm running in   O(2 k n⋅max⁡{k,log⁡n})     O  (    2    k    n  ⋅  max  ⁡  {  k  ,  log  ⁡  n  }  )        time.	file spanning	Minghui Jiang;Haitao Wang	2016	Theor. Comput. Sci.	10.1016/j.tcs.2015.01.039	parameterized complexity;combinatorics;computational geometry;computer science;mathematics;algorithm	ECom	24.24169037737919	21.406306474143353	163483
18f3b4c853d19bf1ca6e829830234f2a5861c326	counting homomorphisms via hypergraph-based structural restrictions	computer and information science;constraint satisfaction;homomorphism;computational complexity;counting;hypergraph;data och informationsvetenskap	The way in which the graph structure of the constraints influences the computational complexity of counting constraint satisfaction problems (#CSPs) is well understood for constraints of bounded arity. The situation is less clear if there is no bound on the arities. Here we initiate the systematic study of these problems and identify new classes of polynomial time solvable instances based on dynamic programming over tree decompositions, in a way generalizing wellknown approaches to combinatorial optimization problems on bounded treewidth graphs, but basing the decompositions on various hypergraph width measures from the literature on plain CSPs.	combinatorial optimization;computational complexity theory;constraint satisfaction problem;decision problem;dynamic programming;mathematical optimization;polynomial;time complexity;treewidth	Tommy Färnqvist	2012		10.1007/978-3-642-32147-4_34	combinatorics;discrete mathematics;theoretical computer science;mathematics;constraint satisfaction problem	Theory	21.680322843632727	23.09477085898956	163497
1c982d0b70e6d72adba9eb394c38fc43805c7af7	fixed parameter tractable algorithms in combinatorial topology	topology;analysis of algorithms and complexity	To enumerate 3-manifold triangulations with a given property, one typically begins with a set of potential face pairing graphs (also known as dual 1-skeletons), and then attempts to flesh each graph out into full triangulations using an exponential-time enumeration. However, asymptotically most graphs do not result in any 3-manifold triangulation, which leads to significant “wasted time” in topological enumeration algorithms. Here we give a new algorithm to determine whether a given face pairing graph supports any 3-manifold triangulation, and show this to be fixed parameter tractable in the treewidth of the graph. We extend this result to a “meta-theorem” by defining a broad class of properties of triangulations, each with a corresponding fixed parameter tractable existence algorithm. We explicitly implement this algorithm in the most generic setting, and we identify heuristics that in practice are seen to mitigate the large constants that so often occur in parameterised complexity, highlighting the practicality of our techniques.	algorithm;cobham's thesis;delaunay triangulation;enumerated type;heuristic (computer science);parameterized complexity;time complexity;treewidth	Benjamin A. Burton;William Pettersson	2014		10.1007/978-3-319-08783-2_26	mathematical optimization;combinatorics;discrete mathematics;topology;mathematics;geometry	Theory	22.628581602100255	22.79734339120816	163868
f49dbebfa87231ee53e2c9969b4335d33a31eeb8	on the max coloring problem	approximation algorithms;coloring;interval graphs;online algorithms	We consider max coloring on hereditary graph classes. The problem is defined as follows. Given a graphG = (V, E) and positive node weights w : V → (0,∞), the goal is to find a proper node coloring of G whose color classes C1, C2, . . . , Ck minimize k ∑ i=1 maxv∈Ci w(v). We design a general framework which allows to convert approximation algorithms for standard node coloring into algorithms for max coloring. The approximation ratio increases by a multiplicative factor of at most e for deterministic offline algorithms and for randomized online algorithms, and by a multiplicative factor of at most 4 f r deterministic online algorithms. We consider two specific hereditary classes which are interval graphs and perfect graphs. For interval graphs, we study the problem in several online environments. In the List Model, intervals arrive one by one, in some order. In the Time Model, intervals arrive one by one, sorted by their left endpoint. For the List Model we design a deterministic 12-competitive algorithm, and a randomized 3e-competitive algorithm. In addition, we prove a lower bound of 4 on the competitive ratio of any deterministic or randomized algorithm. For the Time Model, we use simplified versions of the algorithm and the lower bound of the List Model, to develop a deterministic 4-competitive algorithm, a randomized e-competitive algorithm, and to design a lower bounds of φ ≈ 1.618 on the deterministic competitive ratio and a lower bound of 3 on the randomized competitive ratio. The former lower bounds hold even for unit intervals. For unit intervals in the List Model, we obtain a deterministic 8ompetitive algorithm, a randomized 2e-competitive algorithm and lower bounds of 2 on the deterministic competitive ratio and 11 6 ≈ 1.8333 on the randomized competitive ratio. Finally, we employ our framework to obtain an offline e-approximation algorithm for max coloring of perfect graphs, improving and simplifying a recent result of Pemmaraju and Raman.	approximation algorithm;coefficient;communication endpoint;competitive analysis (online algorithm);graph coloring;hereditary property;interval arithmetic;online algorithm;online and offline;raman scattering;randomized algorithm	Leah Epstein;Asaf Levin	2012	Theor. Comput. Sci.	10.1016/j.tcs.2012.07.037	randomized algorithms as zero-sum games;competitive analysis;online algorithm;mathematical optimization;combinatorics;discrete mathematics;computer science;complete coloring;mathematics;greedy coloring;approximation algorithm;algorithm	Theory	23.76143834372379	21.62306129460085	163889
32a0821e384e726819155065f7bc26e2d57329e5	sorting permutations by reversals and eulerian cycle decompositions	cycle decomposition;approximate algorithm;linear time algorithm;combinatorial problems;complexity;breakpoint graph;sorting by reversals;eulerian graph;68r10;68q25;05c45;lower bound	We analyze the strong relationship among three combinatorial problems, namely the problem of sorting a permutation by the minimum number of reversals (MIN-SBR), the problem of nding the maximum number of edge-disjoint alternating cycles in a breakpoint graph associated with a given permutation (MAX-ACD), and the problem of partitioning the edge set of a Eulerian graph into the maximum number of cycles (MAX-ECD). We rst illustrate a nice characterization of breakpoint graphs, which leads to a linear time algorithm for their recognition. This characterization is used to prove that MAX-ECD and MAX-ACD are equivalent, showing the latter is NP-hard. We then describe a transformation from MAX-ACD to MIN-SBR, which is therefore shown to be NP-hard as well, answering an outstanding question which has been open for some years. Finally, we derive the worst-case performance of a well known lower bound for MIN-SBR, obtained by solving MAX-ACD, discussing its implications on approximation algorithms for MIN-SBR.	approximation algorithm;best, worst and average case;breakpoint;eulerian path;explanatory combinatorial dictionary;max;sorting;standard business reporting;time complexity	Alberto Caprara	1999	SIAM J. Discrete Math.	10.1137/S089548019731994X	combinatorics;discrete mathematics;complexity;route inspection problem;permutation graph;mathematics;upper and lower bounds;butterfly graph;cycle basis;algorithm;eulerian path	Theory	22.879046082320663	22.361188331319365	164038
c0ce922b34923cef40b246101a61cec71506177a	parameterized complexity of generalized vertex cover problems	recouvrement graphe;cubierta grafo;vertex cover;parameterized complexity;fixed parameter tractable;graph covering;estructura datos;structure donnee;data structure	Important generalizations of the Vertex Cover problem (Connected Vertex Cover, Capacitated Vertex Cover, and Maximum Partial Vertex Cover) have been intensively studied in terms of approximability. However, their parameterized complexity has so far been completely open. We close this gap here by showing that, with the size of the desired vertex cover as parameter, Connected Vertex Cover and Capacitated Vertex Cover are both fixed-parameter tractable while Maximum Partial Vertex Cover is W[1]-hard. This answers two open questions from the literature. The results extend to several closely related problems. Interestingly, although the considered generalized Vertex Cover problems behave very similar in terms of constant-factor approximability, they display a wide range of different characteristics when investigating their parameterized complexities.	approximation algorithm;best, worst and average case;cobham's thesis;exponential backoff;kernelization;parameterized complexity;search tree;time complexity;vertex cover	Jiong Guo;Rolf Niedermeier;Sebastian Wernicke	2005		10.1007/11534273_5	parameterized complexity;mathematical optimization;combinatorics;discrete mathematics;feedback vertex set;data structure;vertex cover;computer science;edge cover;vertex;mathematics;neighbourhood;algorithm	Theory	22.430958909485454	21.887157689192843	164201
d84dbf5167823abc6370c98fad255038a6767e35	a weighted independent even factor algorithm	combinatorial algorithm;independent even factor;matroid intersection;nonbipartite matching;dual integrality	For a digraph D = (V,A) and a partition {S, T} of V , an arc set B ⊆ A is called an ST bibranching if each vertex in T is reachable from S and each vertex in S reaches T in the subgraph (V,B). Bibranchings commonly generalize bipartite edge covers and arborescences. A totally dual integral linear system determining the S-T bibranching polytope is provided by Schrijver, and the shortest S-T bibranching problem, whose objective is to find an S-T bibranching of minimum total arc weight, can be solved in polynomial time by the ellipsoid method or a faster combinatorial algorithm due to Keijsper and Pendavingh. The valuated matroid intersection problem, introduced by Murota, is a weighted generalization of the independent matching problem, including the independent assignment problem and the weighted matroid intersection problem. The valuated matroid intersection problem can be solved efficiently with polynomially many value oracles by extending classical combinatorial algorithms for the weighted matroid intersection problem. In this paper, we show that the shortest S-T bibranching problem is polynomially reducible to the valuated matroid intersection problem. This reduction suggests one answer to why the shortest S-T bibranching problem is tractable, and implies new combinatorial algorithms for the shortest S-T bibranching problem based on the valuated matroid intersection algorithm, where a value oracle corresponds to computing a minimum-weight arborescence.	combinatorial optimization;decision problem;diffusing update algorithm;directed graph;matroid intersection;total dual integrality	Kenjiro Takazawa	2012	Math. Program.	10.1007/s10107-010-0397-z	matroid;mathematical optimization;combinatorics;discrete mathematics;graphic matroid;oriented matroid;mathematics;weighted matroid;matroid partitioning	Theory	23.509092873569966	19.77177882411396	164238
b1e458eb212040afff1d141a25e7b04c3d44567a	resolving rooted triplet inconsistency by dissolving multigraphs	inf 01 informatica	The Minimum Rooted Triplet Inconsistency (MinRTI) problem represents a key computational task in the construction of phylogenetic trees. Inspired by Aho et al’s seminal paper and Bryant’s thesis, we describe an edge-labelled multigraph problem, Minimum Dissolving Graph (MinDG) and show that it is equivalent to MinRTI. We prove that on an n-vertex graph, for every e u003e 0, MinDG is hard to approximate within a factor in (O(2^{log^{1-ensuremath{varepsilon}}n})), even on trees formed by multi-edges. Via a further reduction, this result applies to MinRTI, resolving the open question of whether there is a sub-linear approximation factor for MinRTI. In addition, we provide polynomial-time algorithms that return optimal solutions when the input multigraph is restricted to a multi-edge path or a simple tree.	triplet state	Andrew Chester;Riccardo Dondi;Anthony Wirth	2013		10.1007/978-3-642-38236-9_24	computer science;mathematics;computer security	Vision	22.703632012921087	22.81533135831196	164963
4b5de1af8e27eba4d84fe896e2e37aea49e3904e	new polynomial classes for #2sat established via graph-topological structure		We address the problem of designing efficient procedures for counting models of Boolean formulas and, in this task, we establish new classes of instances where #2SAT is solved in polynomial time. Those instances are recognized by the topological structure of the underlying graph of the instances. We show that, if the depth-search over the constrained graph of a formula generates a tree where the set of fundamental cycles are disjointed (there are not common edges between any pair of fundamental cycles), then #2SAT is tractable. This class of instances do not set restrictions on the number of occurrences of a variable in a Boolean formula. Our proposal can be applied to impact directly in the reduction of the complexity time of the algorithms for other counting problems.	2-satisfiability;algorithm;cobham's thesis;depth-first search;directed acyclic graph;directed graph;graph (discrete mathematics);p-complete;polynomial;programming paradigm;sharp-p-complete;sharp-sat;time complexity;monotone	Guillermo De Ita Luna;Pedro Bello López;Meliza Contreras González	2007	Engineering Letters		combinatorics;discrete mathematics;#sat;mathematics;algorithm	Theory	21.769733286001372	23.620734463445842	165152
0237bf0218f778dd9f0a0daab29a3a8d11e98408	constant factor approximation for capacitated k-center with outliers	004;approximation algorithms k center capacities outliers lp rounding	The k-center problem is a classic facility location problem, where given an edge-weighted graph G = (V,E) one is to find a subset of k vertices S, such that each vertex in V is “close” to some vertex in S. The approximation status of this basic problem is well understood, as a simple 2-approximation algorithm is known to be tight. Consequently different extensions were studied. In the capacitated version of the problem each vertex is assigned a capacity, which is a strict upper bound on the number of clients a facility can serve, when located at this vertex. A constant factor approximation for the capacitated k-center was obtained last year by Cygan, Hajiaghayi and Khuller [FOCS’12], which was recently improved to a 9-approximation by An, Bhaskara and Svensson [arXiv’13]. In a different generalization of the problem some clients (denoted as outliers) may be disregarded. Here we are additionally given an integer p and the goal is to serve exactly p clients, which the algorithm is free to choose. In 2001 Charikar et al. [SODA’01] presented a 3-approximation for the k-center problem with outliers. In this paper we consider a common generalization of the two extensions previously studied separately, i.e. we work with the capacitated k-center with outliers. We present the first constant factor approximation algorithm with approximation ratio of 25 even for the case of non-uniform hard capacities. 1998 ACM Subject Classification F.2.2 Nonnumerical Algorithms and Problems	apx;approximation algorithm;client (computing);facility location problem;graph (discrete mathematics);metric k-center	Marek Cygan;Tomasz Kociumaka	2014		10.4230/LIPIcs.STACS.2014.251	mathematical optimization;combinatorics;discrete mathematics;computer science;mathematics;approximation algorithm	Theory	23.97150130391602	19.194484662962452	165905
e9d701b2c5a2b06bbc6f66b981c2e72e18877716	maximum matchings in general graphs through randomization	graph theory;teoria grafo;algorithm performance;maximization;acoplamiento diagrama;theorie graphe;maximum matching;graph matching;methode algebrique;matrice tutte;aleatorizacion;couplage graphe;resultado algoritmo;algebraic method;performance algorithme;randomisation;metodo algebraico;randomization;maximizacion;maximisation	We present a new randomized algorithm for the maximum matching problem. Unlike conventional matching algorithms which are based on the combinatorial approach of finding “augmenting paths” and “blossoms” in graphs (see [Edl] for definitions), our algorithm is algebraic and works on the Tutte matrix of the given graph. Edmonds [Edl] gave the first polynomial time algorithm (O(n4)) for this problem by giving an ingenious way of dealing with the complex manner in which blossoms get nested. Subsequently more efficient algorithms were obtained. The current best running time is O(m IEI) [MVj, [Va]; this algorithm involves a very precise consideration of blossoms. The advantage of our approach is that it bypasses blossoms completely and therefore results in an algorithm which is conceptually simpler and is considerably easier to program, especially if a subroutine for matrix inversion is avail-	edmonds' algorithm;linear algebra;matching (graph theory);p (complexity);polynomial;randomized algorithm;subroutine;time complexity;tutte matrix	Michael O. Rabin;Vijay V. Vazirani	1989	J. Algorithms	10.1016/0196-6774(89)90005-9	tutte matrix;mathematical optimization;combinatorics;discrete mathematics;graph theory;3-dimensional matching;hopcroft–karp algorithm;mathematics;blossom algorithm;freivalds' algorithm;algorithm;matching	Theory	22.714832194010814	25.179880033548848	166055
10d2633ab2015a64abf95f6559b6a0a7d71505bc	combining two worlds: parameterised approximation for vertex cover	vertex cover;approximate algorithm;nova;research repository;university of newcastle;institutional repository;research online	We explore opportunities for parameterising constant factor approximation algorithms for vertex cover. We provide a simple algorithm that works on any approximation ratio of the form 2l+1 l+1 and has complexity that outperforms an algorithm by Bourgeois et al. derived from a sophisticated exact parameterised algorithm. In particular, for l = 1 (factor 1.5 approximation) our algorithm runs in time O∗(1.09k). Additionally, we present an improved polynomial-time approximation algorithm for graphs of average degree four.	approximation algorithm;edge dominating set;feedback vertex set;polynomial;search tree;time complexity;vertex cover	Ljiljana Brankovic;Henning Fernau	2010		10.1007/978-3-642-17517-6_35	mathematical optimization;combinatorics;vertex cover;computer science;theoretical computer science;mathematics;nova;approximation algorithm;algorithm	Theory	21.57882517894086	21.35329813881254	166230
3d645f657889d024ae61e5cbfa98231358298636	minimum dominating set approximation in graphs of bounded arboricity	minimum dominating set;maximum degree;approximate algorithm;a priori knowledge;linear time;distributed algorithm;random times;planar graph	Since in general it is NP-hard to solve the minimum dominating set problem even approximatively, a lot of work has been dedicated to central and distributed approximation algorithms on restricted graph classes. In this paper, we compromise between generality and efficiency by considering the problem on graphs of small arboricity a. These family includes, but is not limited to, graphs excluding fixed minors, such as planar graphs, graphs of (locally) bounded treewidth, or bounded genus. We give two viable distributed algorithms. Our first algorithm employs a forest decomposition, achieving a factor O(a) approximation in randomized time O(logn). This algorithm can be transformed into a deterministic central routine computing a linear-time constant approximation on a graph of bounded arboricity, without a priori knowledge on a. The second algorithm exhibits an approximation ratio of O(a+log∆), where ∆ is the maximum degree, but in turn is uniform and deterministic, and terminates after O(log∆) rounds. A simple modification offers a trade-off between running time and approximation ratio, that is, for any parameter α ≥ 2, we can obtain an O(a+ α logα∆)-approximation within O(logα∆) rounds.	approximation algorithm;arboricity;computation;distributed algorithm;dominating set;genus (mathematics);graph (discrete mathematics);independent set (graph theory);jukka tapanimäki;maximal independent set;np-hardness;planar graph;randomized algorithm;randomized rounding;time complexity;treewidth	Christoph Lenzen;Roger Wattenhofer	2010		10.1007/978-3-642-15763-9_48	1-planar graph;time complexity;pathwidth;distributed algorithm;mathematical optimization;combinatorics;discrete mathematics;a priori and a posteriori;dominating set;dense graph;computer science;clique problem;mathematics;distributed computing;maximal independent set;planar graph	Theory	22.084682416166565	21.03826627405076	166288
95308f649312a635dcbee4aba08a865875f9d518	the algorithmic theory of treewidth	linear time;graph algorithm;planar graph	Abstract   Treewidth is a graph measure with several applications. In this abstract, it is discussed that many otherwise intractable problems become polynomial or linear time solvable when restricted to graphs of bounded treewidth, and some other algorithmic results that use treewidth (e.g., applied to planar graphs) are discussed.	treewidth	Hans L. Bodlaender	2000	Electronic Notes in Discrete Mathematics	10.1016/S1571-0653(05)80116-7	1-planar graph;implicit graph;outerplanar graph;time complexity;pathwidth;mathematical optimization;apex graph;combinatorics;discrete mathematics;clique-width;forbidden graph characterization;clique-sum;mathematics;distance-hereditary graph;tree-depth;trémaux tree;treewidth;partial k-tree;strong orientation;graph minor;chordal graph;indifference graph;book embedding;planar graph;tree decomposition	Theory	23.256314010272312	24.77708475102985	166362
d03152fbc156f0b87db424cfd89e3f4a50fc5cd3	efficient counting of maximal independent sets in sparse graphs		There are a number of problems that require the counting or the enu- meration of all occurrences of a certain structure within a given data set. We consider one such problem, namely that of counting the number of maximal inde- pendent sets (MISs) in a graph. Along with its complement problem of counting all maximal cliques, this is a well studied problem with applications in several research areas. We present a new efficient algorithm for counting all MISs suitable for sparse graphs. Similar to previous algorithms for this problem, our algorithm is based on branching and exhaustively considering vertices to be either in or out of the current MIS. What is new is that we consider the vertices in a predefined order so that it is likely that the graph will decompose into multiple connected com- ponents. When this happens, we show that it is sufficient to solve the problem for each connected component, thus considerably speeding up the algorithm. We have performed extensive experiments comparing our algorithm with the previ- ous best algorithms for this problem using both real world as well as synthetic input graphs. The results from this show that our algorithm outperforms the other algorithms and that it enables the solution of graphs where other approaches are clearly infeasible. As there is a one-to-one correspondence between the MISs of a graph and the maximal cliques of its complement graph, it follows that our algorithm also solves the problem of counting the number of maximal cliques in a dense graph. To our knowledge, this is the first algorithm that can handle this problem.	maximal set;sparse	Fredrik Manne;Sadia Sharmin	2013		10.1007/978-3-642-38527-8_11	pathwidth;mathematical optimization;combinatorics;discrete mathematics;counting problem;independent set;graph bandwidth;k-tree;clique problem;hopcroft–karp algorithm;trivially perfect graph;clique-sum;mathematics;maximal independent set;modular decomposition;intersection number;complement graph;chordal graph;algorithm;matching	Theory	22.0279602103565	24.46118978986487	166607
3601a75ec133251c8876e9d0b112ad96eb593d43	independence free graphs and vertex connectivity augmentation	graphe non oriente;optimal solution;solution optimale;non directed graph;temps polynomial;aumentacion;metodo minimax;minimax method;augmentation;optimisation combinatoire;graph connectivity;increase;mathematical programming;grafo no orientado;polynomial algorithm;solucion optima;conectividad grafo;methode minimax;polynomial time;combinatorial optimization;connectivite graphe;programmation mathematique;programacion matematica;optimizacion combinatoria;tiempo polinomial	Given an undirected graph G and a positive integer k, thek-vertex-connectivity augmentation problem is to find a smallest set F of new edges for whichG+ F is k-vertex-connected. Polynomial algorithms for this problem have been found only for k≤ 4 and a major open question in graph connectivity is whether this problem is solvable in polynomial time in general. In this paper we develop an algorithm which delivers an optimal solution in polynomial time for every fixedk. In the case when the size of an optimal solution is large compared to k, our algorithm is polynomial for all k. We also derive a min-max formula for the size of a smallest augmenting set in this case. A key step in our proofs is a complete solution of the augmentation problem for a new family of graphs which we call k-independence free graphs. We also prove new splitting off theorems for vertex connectivity.	algorithm;connectivity (graph theory);decision problem;graph (discrete mathematics);k-vertex-connected graph;maxima and minima;polynomial;time complexity	Bill Jackson;Tibor Jordán	2001		10.1007/3-540-45535-3_21	time complexity;mathematical optimization;combinatorics;discrete mathematics;feedback vertex set;vertex cover;combinatorial optimization;computer science;connectivity;edge cover;vertex;mathematics;algorithm	Theory	22.95277460463694	20.392069989614548	166622
48294fb8ea40e9a0ce521f0b3a7caba22c9ab1f2	enumeration and maximum number of minimal connected vertex covers in graphs		Connected Vertex Cover is one of the classical problems of computer science, already mentioned in the monograph of Garey and Johnson [W.H. Freeman & Co., 1979]. Although the optimization and decision variants of finding connected vertex covers of minimum size or weight are well-studied, surprisingly there is no work on the enumeration or maximum number of minimal connected vertex covers of a graph. In this paper we show that the number of minimal connected vertex covers of a graph is at most 1.8668, and these sets can be enumerated in time O(1.8668). For graphs of chordality at most 5, we are able to give a better upper bound, and for chordal graphs and distance-hereditary graphs we are able to give tight bounds on the maximum number of minimal connected vertex covers.	algorithm;clique (graph theory);computer science;connectivity (graph theory);independent set (graph theory);mathematical optimization;maximal set;michael garey;one-to-one (data model);polynomial;time complexity;vertex (geometry);vertex (graph theory);vertex cover	Petr A. Golovach;Pinar Heggernes;Dieter Kratsch	2018	Eur. J. Comb.	10.1016/j.ejc.2017.07.015	vertex separator;combinatorics;discrete mathematics;connected component;topology;feedback vertex set;vertex cover;degree;cycle graph;vertex;mathematics;maximal independent set;modular decomposition;chordal graph;strongly connected component;indifference graph;neighbourhood	Theory	23.86310130423071	21.99530510840391	166881
27e358c66c7418e6d9e3074c5e7c201e4aaefb72	efficient parallel algorithm for optimal dag structure search on parallel computer with torus network		The optimal directed acyclic graph search problem constitutes searching for a DAG with a minimum score, where the score of a DAG is defined on its structure. This problem is known to be NP-hard, and the state-of-the-art algorithm requires exponential time and space. It is thus not feasible to solve large instances using a single processor. Some parallel algorithms have therefore been developed to solve larger instances. A recently proposed parallel algorithm can solve an instance of 33 vertices, and this is the largest solved size reported thus far. In the study presented in this paper, we developed a novel parallel algorithm designed specifically to operate on a parallel computer with a torus network. Our algorithm crucially exploits the torus network structure, thereby obtaining good scalability. Through computational experiments, we confirmed that a run of our proposed method using up to 20,736 cores showed a parallelization efficiency of 0.94 as compared to a 1296-core run. Finally, we successfully computed an optimal DAG structure for an instance of 36 vertices, which is the largest solved size reported in the literature.	directed acyclic graph;parallel algorithm;parallel computing	Hirokazu Honda;Yoshinori Tamada;Reiji Suda	2016		10.1007/978-3-319-49583-5_37	grid network;theoretical computer science;distributed computing;parallel algorithm;cost efficiency	HPC	18.965378515313247	21.20834327081555	167397
be025b4ff9381f402427fe2c0d4bd40720daed33	decision trees of algorithms and a semivaluation to measure their distance	decision tree;time complexity;sorting algorithm;binary tree	Abstract   We use the set    T  n    of binary trees with n leaves to study decision trees of algorithms. The set    T  n    of binary trees with n leaves can be ordered by the so called “imbalance” order, where two trees are related in the order iff the second is less “balanced” than the first. This order forms a lattice. We show that this lattice is nonmodular and extend the imbalance lattice with an algebraic operation. The operation corresponds to the extension of a binary tree with new binary trees at the leafs, which reflects the effect of recursive calls in an algorithm on the decision tree and we will characterize as an illustration the decision tree of the insertion sort algorithm.  We investigate the semivaluations on the binary trees which is related to the running time of the algorithm.	algorithm;decision tree	M. O'Keeffe;Homeira Pajoohesh;Michel P. Schellekens	2006	Electr. Notes Theor. Comput. Sci.	10.1016/j.entcs.2006.04.032	random binary tree;optimal binary search tree;time complexity;red–black tree;combinatorics;discrete mathematics;binary search tree;tree rotation;binary expression tree;geometry of binary search trees;binary tree;computer science;scapegoat tree;range tree;decision tree;sorting algorithm;self-balancing binary search tree;k-d tree;incremental decision tree;k-ary tree;interval tree;mathematics;weight-balanced tree;ternary search tree;threaded binary tree;tree traversal;metric tree;algorithm	Theory	17.59279901964376	24.66363402331604	167829
706dfd4ea7ea255dd44407f614e836ce192712a2	multivariate analysis for computing maxima in high dimensions		We study the problem of computing the Maxima of a set of n d-dimensional points. For dimensions 2 and 3, there are algorithms to solve the problem with order-oblivious instance-optimal running time. However, in higher dimensions there is still room for improvements. We present an algorithm sensitive to the structural entropy of the input set, which improves the running time, for large classes of instances, on the best solution for Maxima to date for d ≥ 4.	algorithm;maxima;time complexity	Jérémy Barbay;Javiel Rojas	2017	CoRR		mathematical optimization;combinatorics;calculus;mathematics	Theory	17.459336893379398	25.22018881114334	168445
6648d63293e31ea7911e80af6fd06b2d4875b499	temporal graph classes: a view through temporal separators		We investigate the computational complexity of separating two distinct vertices s and z by vertex deletion in a temporal graph. In a temporal graph, the vertex set is fixed but the edges have (discrete) time labels. Since the corresponding Temporal (s, z)-Separation problem is NP-hard, it is natural to investigate whether relevant special cases exist that are computationally tractable. To this end, we study restrictions of the underlying (static) graph—there we observe polynomial-time solvability in the case of bounded treewidth—as well as restrictions concerning the “temporal evolution” along the time steps. Systematically studying partially novel concepts in this direction, we identify sharp borders between tractable and intractable cases.	algorithm;bubble sort;cobham's thesis;computational complexity theory;directed graph;graph operations;graph theory;kendall square research;kendall tau distance;np-hardness;parameterized complexity;polynomial;time complexity;treewidth;vertex (graph theory)	Till Fluschnik;Hendrik Molter;Rolf Niedermeier;Philipp Zschoche	2018		10.1007/978-3-030-00256-5_18	discrete mathematics;combinatorics;computational complexity theory;vertex (geometry);mathematics;bounded function;graph	Theory	22.209315671488554	23.601670372107773	168911
ee4f7d291d5db024efbc6b8d1b5d033bba72da9f	graph-based factorization of classical planning problems		In domain-independent planning, dependencies of operators and variables often prevent the effective application of planning techniques that rely on “loosely coupled” problems (like factored planning or partial order reduction). In this paper, we propose a generic approach for factorizing a classical planning problem into an equivalent problem with fewer operator and variable dependencies. Our approach is based on variable factorization, which can be reduced to the well-studied problem of graph factorization. While the state spaces of the original and the factorized problems are isomorphic, the factorization offers the potential to exponentially reduce the complexity of planning techniques like factored planning and partial order reduction.	algorithm;automated planning and scheduling;cartesian closed category;graph factorization;graph isomorphism;loose coupling;partial order reduction;whole earth 'lectronic link	Martin Wehrle;Silvan Sievers;Malte Helmert	2016			isomorphism;discrete mathematics;combinatorics;operator (computer programming);partial order reduction;factorization;graph factorization;mathematics;graph	AI	20.398596532228623	24.38856606972585	169661
4a411eff691f756501bed4c9ed72b3cf714da6bf	crossing number is hard for kernelization	kernelization;parameterized complexity;004;cross composition;tile crossing number;crossing number;polynomial kernel	The graph crossing number problem, cr(G) ≤ k, asks for a drawing of a graph G in the plane with at most k edge crossings. Although this problem is in general notoriously difficult, it is fixedparameter tractable for the parameter k [Grohe]. This suggests a closely related question of whether this problem has a polynomial kernel, meaning whether every instance of cr(G) ≤ k can be in polynomial time reduced to an equivalent instance of size polynomial in k (and independent of |G|). We answer this question in the negative. Along the proof we show that the tile crossing number problem of twisted planar tiles is NP-hard, which has been an open problem for some time, too, and then employ the complexity technique of cross-composition. Our result holds already for the special case of graphs obtained from planar graphs by adding one edge. 1998 ACM Subject Classification F.2.2 Nonnumerical Algorithms and Problems – Geometrical problems and computations, F.1.3 Complexity Measures and Classes – Reducibility and completeness	algorithm;cobham's thesis;computation;crossing number (graph theory);edge dominating set;graph (discrete mathematics);kernelization;np-hardness;planar graph;polynomial kernel;time complexity;twisted	Petr Hlinený;Marek Dernár	2016		10.4230/LIPIcs.SoCG.2016.42	parameterized complexity;combinatorics;discrete mathematics;computer science;mathematics;geometry;kernelization;crossing number;polynomial kernel;algorithm	Theory	23.26361307776249	23.078127794051568	169886
c5b5ab506cc143f22c7b902d9f53d4a017003e21	feedback vertex set on graphs of low cliquewidth	feedback vertex set;dynamic programming algorithm;dynamic program ming	The Feedback Vertex Set problem asks whether a graph contains q vertices meeting all its cycles. This is not a local property, in the sense that we cannot check if q vertices meet all cycles by looking only at their neighbors. Dynamic programming algorithms for problems based on non-local properties are usually more complicated. In this paper, given a graph G of clique-width cw and a cw-expression of G, we solve the Minimum Feedback Vertex Set problem in time O(n22O(cw log cw)). Our algorithm applies dynamic programming on a so-called k-module decomposition of a graph, as defined by Rao [30], which is easily derivable from a k-expression of the graph. The related notion of module-width of a graph is tightly linked to both clique-width and NLC-width, and in this paper we give an alternative equivalent characterization of module-width.	acm transactions on algorithms;algorithmica;approximation algorithm;branch-decomposition;clique-width;cobham's thesis;combinatorica;decision problem;deterministic algorithm;discrete mathematics;dynamic programming;exptime;edge dominating set;face (geometry);feasible region;feedback vertex set;graph (discrete mathematics);journal of computer and system sciences;lecture notes in computer science;linear algebra;mathematical optimization;myhill–nerode theorem;np-hardness;natural language processing;operations research;parameterized complexity;parse tree;partition refinement;planar graph;polynomial;raman scattering;refinement (computing);siam journal on computing;springer (tank);theory of computing;time complexity;treewidth;turing completeness	Binh-Minh Bui-Xuan;Jan Arne Telle;Martin Vatshelle	2009		10.1007/978-3-642-10217-2_14	loop;graph power;mathematical optimization;combinatorics;discrete mathematics;feedback arc set;independent set;feedback vertex set;level structure;bipartite graph;vertex cover;degree;regular graph;cycle graph;cubic graph;vertex;graph factorization;mathematics;biconnected graph;wheel graph;complement graph;neighbourhood;string graph;circulant graph	Theory	23.332698258108042	24.70782997637421	170366
684bb30f98816f33bf9e66878ffe0e2595117f3b	parameterized graph cleaning problems	induced subgraph isomorphism;planar graph	We investigate the Induced Subgraph Isomorphism problem with non-standard parametrization, where the parameter is the difference |V (G)| − |V (H)| with H and G being the smaller and the larger input graph, respectively. Intuitively, we can interpret this problem as “cleaning” the graph G, regarded as a pattern containing extra vertices indicating errors, in order to obtain the graph H representing the original pattern. We show fixed-parameter tractability of the cases where both H and G are planar and H is 3-connected, or H is a tree and G is	algorithm;connectivity (graph theory);graph coloring;graph isomorphism problem;induced subgraph isomorphism problem;np-completeness;parameterized complexity;planar (computer graphics);planar graph;plasma cleaning;polynomial;time complexity;vertex (geometry);vertex (graph theory)	Dániel Marx;Ildikó Schlotter	2008		10.1007/978-3-540-92248-3_26	graph power;edge-transitive graph;factor-critical graph;combinatorics;graph bandwidth;null graph;graph canonization;degree;distance-regular graph;simplex graph;machine learning;subgraph isomorphism problem;graph factorization;distance-hereditary graph;graph isomorphism;graph homomorphism;butterfly graph;graph minor;bound graph;complement graph;line graph;algorithm;string graph	DB	24.291373478219878	24.92609894886039	171488
0209ad0fadb2598db75d04c4a123bcda4aa85f70	dynamic subtrees queries revised: the depth first tour tree		In the dynamic tree problem the goal is the maintenance of an arbitrary n-vertex forest, where the trees are subject to joining and splitting by, respectively, adding and removing edges. Depending on the application, information can be associated to nodes or edges (or both), and queries might require to combine values in path or (sub)trees. In this paper we present a novel data structure, called the Depth First Tour Tree, based on a linearization of a DFS visit of the tree. Despite the simplicity of the approach, similar to the ETTrees (based on a Euler Tour), our data structure is able to answer queries related to both paths and (sub)trees. In particular, focusing on subtree computations, we show how to customize the data structure in order to answer queries for three distinct applications: impact of the removal of an articulation point from a graph, betweenness centrality and closeness centrality of a dynamic tree. 1998 ACM Subject Classification G.2.2 Graph Theory Graph algorithms	algorithm;betweenness centrality;biconnected component;closeness centrality;computation;data structure;euler;eulerian path;graph theory;link/cut tree;tree (data structure)	Gabriele Farina;Luigi Laura	2015		10.1007/978-3-319-29516-9_13	segment tree;combinatorics;discrete mathematics;tree rotation;link/cut tree;theoretical computer science;range tree;2–3 tree;k-ary tree;interval tree;mathematics;tree structure;search tree;tree;euler tour technique;avl tree	Theory	20.193005321491224	23.784232637367253	171580
965cc9066454ec1e73e3056dc74e7f2b5f9d10b7	the complexity of ferromagnetic ising with local fields	partition function;magnetic field;independent set;qa mathematics;external field;qa76 electronic computers computer science computer software;potts model;ising model;approximation scheme;local field;bipartite graph	We consider the complexity of approximating the partition function of the ferromagnetic Ising model with varying interaction energies and local external magnetic fields. Jerrum and Sinclair provided a fully polynomial randomised approximation scheme for the case in which the system is consistent in the sense that the local external fields all favour the same spin. We characterise the complexity of the general problem by showing that it is equivalent in complexity to the problem of approximately counting independent sets in bipartite graphs, thus it is complete in a logically-defined subclass of #P previously studied by Dyer, Goldberg, Greenhill and Jerrum. By contrast, we show that the corresponding computational task for the q-state Potts model with local external magnetic fields and q > 2 is complete for all of #P with respect to approximation-preserving reductions.	approximation;computation;ising model;partition function (mathematics);polynomial;popek and goldberg virtualization requirements;potts model	Leslie Ann Goldberg;Mark Jerrum	2007	Combinatorics, Probability & Computing	10.1017/S096354830600767X	ising model;combinatorics;potts model;discrete mathematics;independent set;bipartite graph;magnetic field;square-lattice ising model;local field;pure mathematics;mathematics;partition function	Theory	20.932861290452777	23.04613317655499	172179
2afbc694bc5340e5c4b46c433878cc0b6046ec5b	review of recombinatorics: the algorithmics of ancestral recombination graphs and explicit phylogenetic networks by dan gusfield		One of the central mathematical abstractions in the study of evolution is the phylogenetic tree. Essentially, this is a rooted tree in which the leaves are bijectively labelled by a set of contemporary species X , and the internal nodes of the tree model the biological events (such as speciation) that caused the root of the tree— representing a hypothetical common ancestor—to diversify into the setX . From a mathematical perspective, the central challenge in phylogenetics is to infer the topology of the tree given only measurements obtained from the speciesX at its leaves, such as DNA sequence data. There are many different optimality criteria for this tree-inference problem, most of them NP-hard, and the literature is vast. In recent years there has been growing attention to the fact that evolution is not always tree-like. In particular, due to “fusing” biological phenomena such as hybridization, recombination and lateral gene transfer, evolution is sometimes better modeled as a rooted, leaf-labelled directed acyclic graph (DAG), where nodes of indegree two or higher are used to model the fusion phenomenon in question. Such DAGs directly generalise phylogenetic trees and are known by various different names in the literature, the two most commonplace being phylogenetic network and Ancestral Recombination Graph (ARG). In this book Gusfield mainly uses the term ARG, and indegree two nodes are called recombination nodes, reflecting the population-genetic origin of his work. Unlike the literature on tree-inference, the literature on ARG-inference is comparatively new and small, and in this book Gusfield gives an overview of some of the main algorithmic results in this area from the last twenty years. The core of the book concerns the problem of inferring an ARG with a minimum number of recombination nodes. More formally, the input is a binary matrixM with n rows andm columns, where the n rows can be viewed as length-m binary strings that label the n leaves of the ARG we are trying to infer. Specifically, we wish to infer an ARG and a labelling of its internal nodes with length-m binary strings, such that (i) per column there is a mutation (i.e. a transition from 0 to 1 or vice-versa) on at most one edge of the ARG and (ii) the sequences labelling recombination nodes are formed by concatenating a prefix of the string labelling one parent, with a suffix of the string labelling the other. An ARG with a minimum number of recombination nodes is called a MinARG, and Rmin(M) is used to denote the minimum value itself. Computing Rmin(M) is, inevitably, NP-hard, and notoriously intractable. The majority of the chapters of this book are devoted to the algorithm engineering challenge of computing (bounds on) Rmin(M) in practice. Remaining chapters discuss related but somewhat different problems (such as the problem of “phasing” genotypes into haplotypes) and biological applications, but computation of Rmin(M) is certainly the dominant theme of this book.	algorithm engineering;algorithmics;column (database);computation;concatenation;crossover (genetic algorithm);directed acyclic graph;directed graph;lateral thinking;np-hardness;phylogenetic network;phylogenetic tree;phylogenetics	Steven Kelk	2016	SIGACT News	10.1145/2902945.2902950	bioinformatics	Theory	17.488791643890305	21.802780064973696	172356
3a22e1cbb6af5a70a7bd8affbe3d3629e66bfc4f	algorithms for euclidean degree bounded spanning tree problems		Given a set of points in the Euclidean plane, the Euclidean δ-minimum spanning tree (δ-MST) problem is the problem of finding a spanning tree with maximum degree no more than δ for the set of points such the sum of the total length of its edges is minimum. Similarly, the Euclidean δminimum bottleneck spanning tree (δ-MBST) problem, is the problem of finding a degree-bounded spanning tree for a set of points in the plane such that the length of the longest edge is minimum. When δ ≤ 4, these two problems may yield disjoint sets of optimal solutions for the same set of points. In this paper, we perform computational experiments to compare the accuracies of a variety of heuristic and approximation algorithms for both these problems. We develop heuristics for these problems and compare them with existing algorithms. We also describe a new type of edge swap algorithm for these problems that outperforms all the algorithms we tested.	approximation algorithm;computation;experiment;file spanning;heuristic (computer science);minimum spanning tree;paging;regular expression	Patrick J. Andersen;Charl J. Ras	2018	CoRR		discrete mathematics;degree (graph theory);combinatorics;approximation algorithm;algorithm;heuristic;heuristics;euclidean geometry;bounded function;mathematics;disjoint sets;spanning tree	Theory	23.47703884830152	19.965312485849445	173028
7edab305c96a1766c76c90093115bbcff16bf439	approximating metrics by tree metrics	tree metrics;approximating metrics	In computer science, when dealing with difficult problems involving graphs and their associated metrics we resort to using two techniques. The first is to solve the problem on a simple subcase, in particular, on tree. The second is to devise an approximation algorithm, often one that is based on divide and conquer. In a 1996 paper [2], Bartal defined a class of tree metrics and devised methods for embedding metrics into such metrics that unified these two approaches for a broad set of problems. In particular, he defined a k hierarchically well separated tree (k-HST) which arises from a rooted weighted tree where the weights decrease by exactly a factor of k with increasing depth in the tree. Notice that such a weighted tree gives rise to a metric on the points in the tree. He further gave a randomized algorithm to embed any finite metric into such a tree metric where each pair in the original metric is at least as far in the tree metric and on expectation the distance between the pair does not stretch by more than an O(log n) factor. He gave numerous applications to designing on-line algorithms using this embedding using on-line algorithms for trees. Approximation algorithms for various problems were quick to follow. 1 Around the same time, Even, Naor, Rao and Schieber [9], utilized a linear programming relaxation for a wide variety of graph problems that essentially computed a metric on the underlying graph. They referred to these metrics as spreading metrics. They unified several previous approximation algorithms using this definition and improved the results using a very clever recursion introduced by Seymour [23] for solving the feedback arc set problem. In particular, they gave O(log n log log n) approximation algorithms for various problems such as minimum linear arrangement, interval graph completion, symmetric multicuts, and others. Their algorithms were based on hierarchically decomposing the metrics produced by the linear programming relaxations. Interestingly, Bartal [3] improved his 1996 result to show that the expected stretch in his tree embedding result could be reduced to O(log n log log n). His arguments are really quite intricate	approximation algorithm;computer science;directed graph;feedback arc set;linear programming relaxation;online and offline;randomized algorithm;recursion	Jittat Fakcharoenphol;Satish Rao;Kunal Talwar	2004	SIGACT News	10.1145/992287.992300	equivalence of metrics	Theory	22.480425332187256	20.772612817424044	173198
4aea356f184c52d6dd5f8fcfd7d82d0ff8603f9c	proving np-hardness for clique-width i: non-approximability of sequential clique-width		Clique-width is a graph parameter, defined by a composition mechanism for vertexlabeled graphs, which measures in a certain sense the complexity of a graph. Hard graph problems (e.g., problems expressible in Monadic Second Order Logic, that includes NPhard problems) can be solved efficiently for graphs of certified small clique-width. It is widely believed that determining the clique-width of a graph is NP-hard; in spite of considerable efforts, no NP-hardness proof has been found so far. In this paper we show a non-approximability result for restricted form of cliquewidth, termed “r-sequential clique-width”, considering only such clique-width constructions where one of any two graphs put together by disjoint union must have r or fewer vertices. In particular, we show that for every positive integer r, the r-sequential cliquewidth cannot be absolutely approximated in polynomial time unless P = NP. We show further that this non-approximability result holds even for graphs of a very particular structure: for graphs obtained from cobipartite graphs by replacing edges with induced paths. In part II of this series of papers we use this strengthened result to show that, unless P = NP, there is no polynomial-time absolute approximation algorithm for (unrestricted) clique-width; this solves a problem that has been open since the introduction of clique-width in the early 1990s.	approximation algorithm;clique-width;graph (discrete mathematics);np-hardness;p versus np problem;polynomial;random graph;time complexity	Michael R. Fellows;Frances A. Rosamond;Udi Rotics;Stefan Szeider	2005	Electronic Colloquium on Computational Complexity (ECCC)		1-planar graph;random regular graph;pathwidth;combinatorics;discrete mathematics;cograph;universal graph;independent set;graph product;longest path problem;dense graph;forbidden graph characterization;comparability graph;lévy family of graphs;graph coloring;clique-sum;mathematics;tree-depth;modular decomposition;treewidth;partial k-tree;chordal graph;indifference graph;algorithm	Theory	22.257453086081036	23.298585570898737	173213
0a5bab94019e94ab374f807b7508f0788c684bd6	distributed symmetry breaking in sampling (optimal distributed randomly coloring with fewer colors)		We examine the problem of almost-uniform sampling proper q-colorings of a graph whose maximum degree is ∆. A famous result, discovered independently by Jerrum [31] and Salas and Sokal [39], is that, assuming q > (2+δ)∆, the Glauber dynamics (a.k.a. single-site dynamics) for this problem has mixing time O(n logn), where n is the number of vertices, and thus provides a nearly linear time sampling algorithm for this problem. A natural question is the extent to which this algorithm can be parallelized. Previous work [15] has shown that a O(∆ log n) time parallelized algorithm is possible, and that Ω(log n) time is necessary. We give a distributed sampling algorithm, which we call the Lazy Local Metropolis Algorithm, that achieves an optimal parallelization of this classic algorithm. It improves its predecessor, the Local Metropolis algorithm of Feng, Sun and Yin [PODC’17], by introducing a step of distributed symmetry breaking that helps the mixing of the distributed sampling algorithm. For sampling almost-uniform proper q-colorings of graphs G on n vertices, we show that the Lazy Local Metropolis algorithm achieves an optimal O(log n) mixing time if either of the following conditions is true for an arbitrary constant δ > 0: • q ≥ (2 + δ)∆, on general graphs with maximum degree ∆; • q ≥ (α∗ + δ)∆, where α∗ ≈ 1.763 satisfies α∗ = e1/α∗ , on graphs with sufficiently large maximum degree ∆ ≥ ∆0(δ) and girth at least 9. Department of Computer Science and Technology, Nanjing University. Email: fengwm@smail.nju.edu.cn. Department of Computer Science, University of New Mexico. Email:hayes@cs.unm.edu. Partially supported by NSF CAREER award CCF-1150281. State Key Laboratory for Novel Software Technology, Nanjing University. Email: yinyt@nju.edu.cn. Supported by the National Science Foundation of China under Grant No. 61672275 and No. 61722207.	computer science;degree (graph theory);email;emoticon;girth (graph theory);glauber;graph coloring;ibm notes;lazy evaluation;metropolis;metropolis–hastings algorithm;parallel computing;randomness;sampling (signal processing);symmetry breaking;time complexity;vertex (geometry)	Weiming Feng;Thomas P. Hayes;Yitong Yin	2018	CoRR		time complexity;combinatorics;degree (graph theory);vertex (geometry);sampling (statistics);symmetry breaking;mathematics;binary logarithm;metropolis–hastings algorithm;graph	Theory	20.446367254988324	22.694307262564532	173582
c6b09543165600d5a570df0b28b7a451fb89d25d	approximating the smallest k-edge connected spanning subgraph by lp-rounding	approximation algorithms;linear program;graph connectivity;network design	The smallest k-ECSS problem is, given a graph along with an integer k, find a spanning subgraph that is k-edge connected and contains the fewest possible number of edges. We examine a natural approximation algorithm based on rounding an LP solution. A tight bound on the approximation ratio is 1 + 3-k for undirected graphs with k u003e 1 odd, 1 + 2-k for undirected graphs with k even, and 1 + 2-k for directed graphs with k arbitrary. Using iterated rounding improves the first upper bound to 1 + 2-k. On the hardness side we show that for some absolute constant c u003e 0, for any integer k ≥ 2 (k ≥ 1), a polynomial-time algorithm approximating the smallest k-ECSS on undirected (directed) multigraphs to within ratio 1 + c-k would imply P = NP. © 2008 Wiley Periodicals, Inc. NETWORKS, 2009	file spanning;lp-type problem;rounding	Harold N. Gabow;Michel X. Goemans;Éva Tardos;David P. Williamson	2009	Networks	10.1002/net.20289	mathematical optimization;combinatorics;discrete mathematics;directed graph;computer science;linear programming;mathematics;approximation algorithm;algorithm	Theory	23.050683745979196	20.511186305414707	173598
842c53bca71d136d0b043e3c690b4505ddbe0b7f	new constructive aspects of the lovasz local lemma	lovasz local lemma;acyclic edge coloring;sampling methods computational complexity graph colouring monte carlo methods polynomials probability;linearity;probability;approximation algorithms;max k sat lovasz local lemma output distribution moser tardos algorithm probabilistic analysis polynomial sized core subset constant factor approximation algorithm santa claus problem monte carlo algorithm acyclic edge coloring nonrepetitive graph coloring ramsey type graph;max k sat;polynomials;constant factor approximation algorithm;santa claus problem;computational complexity;polynomial sized core subset;ramsey type graph;probabilistic analysis;monte carlo algorithm;approximation algorithms probabilistic logic algorithm design and analysis approximation methods polynomials linearity computer science;santa claus problem lovasz local lemma probabilistc method monte carlo algorithm;approximation methods;probabilistc method;computer science;probabilistic logic;sampling methods;nonrepetitive graph coloring;algorithm design and analysis;monte carlo methods;moser tardos algorithm;output distribution;graph colouring	The Lov\'{a}sz Local Lemma (LLL) is a powerful tool that gives sufficient conditions for avoiding all of a given set of ``bad'' events, with positive probability. A series of results have provided algorithms to efficiently construct structures whose existence is non-constructively guaranteed by the LLL, culminating in the recent breakthrough of Moser \& Tardos. We show that the output distribution of the Moser-Tardos algorithm well-approximates the \emph{conditional LLL-distribution} – the distribution obtained by conditioning on all bad events being avoided. We show how a known bound on the probabilities of events in this distribution can be used for further probabilistic analysis and give new constructive and non-constructive results. We also show that when an LLL application provides a small amount of slack, the number of resamplings of the Moser-Tardos algorithm is nearly linear in the number of underlying independent variables (not events!), and can thus be used to give efficient constructions in cases where the underlying proof applies the LLL to super-polynomially many events. Even in cases where finding a bad event that holds is computationally hard, we show that applying the algorithm to avoid a polynomial-sized ``core'' subset of bad events leads to a desired outcome with high probability. We demonstrate this idea on several applications. We give the first constant-factor approximation algorithm for the Santa Claus problem by making an LLL-based proof of Feige constructive. We provide Monte Carlo algorithms for acyclic edge coloring, non-repetitive graph colorings, and Ramsey-type graphs. In all these applications the algorithm falls directly out of the non-constructive LLL-based proof. Our algorithms are very simple, often provide better bounds than previous algorithms, and are in several cases the first efficient algorithms known. As a second type of application we consider settings beyond the critical dependency threshold of the LLL: avoiding all bad events is impossible in these cases. As the first (even non-constructive) result of this kind, we show that by sampling from the LLL-distribution of a selected smaller core, we can avoid a fraction of bad events that is higher than the expectation. MAX $k$-SAT is an example of this.		Bernhard Haeupler;Barna Saha;Aravind Srinivasan	2010		10.1109/FOCS.2010.45	algorithm design;sampling;mathematical optimization;combinatorics;discrete mathematics;probabilistic analysis of algorithms;lovász local lemma;lattice reduction;probability;mathematics;linearity;probabilistic logic;computational complexity theory;approximation algorithm;algorithm;monte carlo algorithm;statistics;polynomial;monte carlo method;algebra	Theory	20.001877731800178	21.681564631626443	174201
e7852ea5740e59319b87b4bd2f1618ee73fe76c5	community structure inspired algorithms for sat and #sat		We introduce h-modularity, a structural parameter of CNF formulas, and present algorithms that render the decision problem SAT and the model counting problem #SAT fixed-parameter tractable when parameterized by h-modularity. The new parameter is defined in terms of a partition of clauses of the given CNF formula into strongly interconnected communities which are sparsely interconnected with each other. Each community forms a hitting formula, whereas the interconnections between communities form a graph of small treewidth. Our algorithms first identify the community structure and then use them for an efficient solution of SAT and #SAT, respectively. We further show that h-modularity is incomparable with known parameters under which SAT or #SAT is fixed-parameter tractable.	algorithm;cobham's thesis;conjunctive normal form;counting problem (complexity);decision problem;graph (discrete mathematics);parameterized complexity;sharp-sat;treewidth	Robert Ganian;Stefan Szeider	2015		10.1007/978-3-319-24318-4_17	combinatorics;discrete mathematics;#sat;mathematics;algorithm	AI	21.756369353390337	23.715528578749062	174224
229e07ae0fa6fd51a18191be858a26a4c6339b6c	on the hardness of eliminating small induced subgraphs by contracting edges		Graph modification problems such as vertex deletion, edge deletion or edge contractions are a fundamental class of optimization problems. Recently, the parameterized complexity of the contractibility problem has been pursued for various specific classes of graphs. Usually, several graph modification questions of the deletion variety can be seen to be FPT if the graph class we want to delete into can be characterized by a finite number of forbidden subgraphs. For example, to check if there exists k vertices/edges whose removal makes the graph C4-free, we could simply branch over all cycles of length four in the given graph, leading to a search tree with O(4) leaves. Somewhat surprisingly, we show that the corresponding question in the context of contractibility is in fact W[2]-hard. An immediate consequence of our reductions is that it is W[2]-hard to determine if at most k edges can be contracted to modify the given graph into a chordal graph. More precisely, we obtain following results: • Cl-free Contraction is W[2]-hard if l ⩾ 4 and FPT if l ⩽ 3. • Pl-free Contraction is W[2]-hard if l ⩾ 5 and FPT if l ⩽ 4, where Pl denotes a path on l vertices. We believe that this opens up an interesting line of work in understanding the complexity of contractibility from the perspective of the graph classes that we are modifying into.	edge contraction;forbidden subgraph problem;graph operations;mathematical optimization;parameterized complexity;search tree;vertex (geometry)	Daniel Lokshtanov;Neeldhara Misra;Saket Saurabh	2013		10.1007/978-3-319-03898-8_21	chordal graph;combinatorics;existential quantification;fundamental class;vertex (geometry);search tree;parameterized complexity;finite set;mathematics;optimization problem	Theory	22.768956596358727	23.137914899534817	174234
13524188160e6779c4578af37650870da6f9a0ab	optimal query complexity for reconstructing hypergraphs	004;adaptive algorithm;query complexity;science learning;information theoretic;query complexity hypergraphs	In this paper we consider the problem of reconstructing a hidden weighted hypergraph of constant rank using additive queries. We prove the following: Let G be a weighted hidden hypergraph of constant rank with n vertices and m hyperedges. For any m there exists a non-adaptive algorithm that finds the edges of the graph and their weights using O (	adaptive algorithm;decision tree model;utility functions on indivisible goods	Nader H. Bshouty;Hanna Mazzawi	2010		10.4230/LIPIcs.STACS.2010.2496	combinatorics;discrete mathematics;theoretical computer science;mathematics	Theory	20.190306928296437	22.187399946370874	174315
52eb4550baaa0cf0e077db4c51d2718d3436f0de	covering problems in edge- and node-weighted graphs		This paper discusses the graph covering problem in which a set of edges in an edgeand nodeweighted graph is chosen to satisfy some covering constraints while minimizing the sum of the weights. In this problem, because of the large integrality gap of a natural linear programming (LP) relaxation, LP rounding algorithms based on the relaxation yield poor performance. Here we propose a stronger LP relaxation for the graph covering problem. The proposed relaxation is applied to designing primal-dual algorithms for two fundamental graph covering problems: the prize-collecting edge dominating set problem and the multicut problem in trees. Our algorithms are an exact polynomial-time algorithm for the former problem, and a 2-approximation algorithm for the latter problem, respectively. These results match the currently known best results for purely edge-weighted graphs.	algorithm;covering problems;edge dominating set;lagrangian relaxation;linear programming relaxation;rounding;time complexity	Takuro Fukunaga	2014		10.1007/978-3-319-08404-6_19	1-planar graph;edge cover;chordal graph	Theory	23.299210525096974	19.971775924464495	175069
448d9cd8a4bd35ca7437e84e7cf10ecf846aea7a	approximate distance oracles with improved query time	algorithms;design;nonnumerical algorithms and problems;approximation;theory;graph theory	Given an undirected graph G with m edges, n vertices, and non-negative edge weights, and given an integer k ≥ 2, we show that a (2k − 1)-approximate distance oracle for G of size O(kn1+1/k) and with O(log k) query time can be constructed in O(min{kmn1/k, √km + kn1+c/√k}) time for some constant c. This improves the O(k) query time of Thorup and Zwick. Furthermore, for any 0 < ε ≤ 1, we give an oracle of size O(kn1+1/k) that answers ((2 + ε)k)-approximate distance queries in O(1/ε) time. At the cost of a k-factor in size, this improves the 128k approximation achieved by the constant query time oracle of Mendel and Naor and approaches the best possible tradeoff between size and stretch, implied by a widely believed girth conjecture of Erd&odblac;s. We can match the O(n1+1/k) size bound of Mendel and Naor for any constant ε > 0 and k = O(log n/log log n).		Christian Wulff-Nilsen	2013		10.1137/1.9781611973105.39	combinatorics;discrete mathematics;theoretical computer science;mathematics	Theory	20.943349325991505	22.178271564666613	175180
a667c59e94e06a599ee50f573123b1a589ed61ef	almost induced matching: linear kernels and parameterized algorithms		The Almost Induced Matching problem asks whether we can delete at most k vertices from a graph such that the remaining graph is an induced matching, i.e., a graph with each vertex of degreeï¾¿1. This paper studies parameterized algorithms for this problem by taking the size of deletion set k as the parameter. By using the techniques of finding maximal 3-path packings and an extended crown decomposition, we obtain the first linear vertex kernel for this problem, improving the previous quadratic kernel. We also present an $$O^*1.7485^k$$-time and polynomial-space algorithm, which is the best known parameterized algorithm for this problem.	algorithm	Mingyu Xiao;Shaowei Kou	2016		10.1007/978-3-662-53536-3_19	mathematical optimization	Theory	23.825564669010866	23.246112052303392	175402
50b8560015692605a8a0653fb91e6820aa4fcd6a	on the min-max 2-cluster editing problem	np hard;approximation algorithm;algorithm	In this paper, we study the problem Min-Max 2-Cluster Editing which asks for a modification of a given graph into two maximal cliques by inserting or deleting edges such that the maximum number k of the editing edges incident to any vertex is minimized. We show the NP-hardness of the problem and present a polynomial-time algorithm when k < n/4, in which n is number of vertices. In addition, we design a 2-approximation algorithm and a branching algorithm for finding an optimal solution. By experiments on random graphs, we show that the exact algorithm is much more efficient than a trivial one.	exact algorithm;experiment;maxima and minima;maximal set;np-hardness;random graph;time complexity	Li-Hsuan Chen;Maw-Shang Chang;Chun-Chieh Wang;Bang Ye Wu	2013	J. Inf. Sci. Eng.		mathematical optimization;suurballe's algorithm;combinatorics;discrete mathematics;multiple edges;ramer–douglas–peucker algorithm;vertex cover;computer science;hopcroft–karp algorithm;np-hard;mathematics;path;approximation algorithm;algorithm;matching	Theory	23.66471707787788	22.212090150970297	176212
fdb7ec1f859b9b7d9ee88952ba5fff505f6b630b	(2 + epsilon)-sat is np-hard	computational complexity;graph theory;(2 + ε)-sat;cnf-formula;cnf-satisfiability problem;np-hard problem;np-hardness;monochromatic edge;uniform hypergraph;constraint satisfaction;complexity dichotomy;discrepancy;polymorphisms;probabilistically checkable proofs;promise problems	"""We prove the following hardness result for anatural promise variant of the classical CNF-satisfiabilityproblem: Given a CNF-formula where each clause has widthw and the guarantee that there exists an assignment satisfyingat least g = [w/2] - 1 literals in each clause, it is NP-hard tofind a satisfying assignment to the formula (that sets at leastone literal to true in each clause). On the other hand, when g = [w/2], it is easy to find a satisfying assignment via simplegeneralizations of the algorithms for 2-SAT. Viewing 2-SAT ∈ P as easiness of SAT when 1-in-2 literals are true in every clause, and NP-hardness of 3-SAT as intractability of SAT when 1-in-3 literals are true, our resultshows, for any fixed ε > 0, the hardness of finding a satisfyingassignment to instances of """"(2 + ε)-SAT"""" where the density ofsatisfied literals in each clause is promised to exceed 1/(2+ε). We also strengthen the results to prove that given a (2k + 1)-uniform hypergraph that can be 2-colored such that each edgehas perfect balance (at most k + 1 vertices of either color), itis NP-hard to find a 2-coloring that avoids a monochromaticedge. In other words, a set system with discrepancy 1 is hard todistinguish from a set system with worst possible discrepancy."""	2-satisfiability;algorithm;boolean algebra;boolean satisfiability problem;color;conjunctive normal form;discrepancy function;graph coloring;literal (mathematical logic);np-hardness;predicate (mathematical logic);weak ai	Per Austrin;Venkatesan Guruswami;Johan Håstad	2014	2014 IEEE 55th Annual Symposium on Foundations of Computer Science	10.1137/15M1006507	labeling theory;combinatorics;discrete mathematics;constraint satisfaction;computer science;mathematics;probabilistic logic;algorithm;polynomial;algebra	Theory	17.62116153830861	18.767282218861304	176524
f6f27675cab52a2f263e9e42314c6ad370f08a96	planar 3-dimensional assignment problems with monge-like cost arrays		Given an n× n× p cost array C we consider the problem p-P3AP which consists in finding p pairwise disjoint permutations φ1, φ2, . . . , φp of {1, . . . , n} such that ∑p k=1 ∑n i=1 ciφk(i)k is minimized. For the case p = n the planar 3-dimensional assignment problem P3AP results. Our main result concerns the p-P3AP on cost arrays C that are layered Monge arrays. In a layered Monge array all n×n matrices that result from fixing the third index k are Monge matrices. We prove that the p-P3AP and the P3AP remain NP-hard for layered Monge arrays. Furthermore, we show that in the layered Monge case there always exists an optimal solution of the p-3PAP which can be represented as matrix with bandwidth ≤ 4p − 3. This structural result allows us to provide a dynamic programming algorithm that solves the p-P3AP in polynomial time on layered Monge arrays when p is fixed.	algorithm;assignment problem;dynamic programming;monge array;np-hardness;time complexity	Ante Custic;Bettina Klinz;Gerhard J. Woeginger	2014	CoRR		mathematical optimization;combinatorics;discrete mathematics;mathematics	Theory	24.602409010401743	22.492022287919912	176821
2294d371811fa7f9ca98a4c6150c0686b871d3e7	graph modification problems (dagstuhl seminar 14071)	004;fixed parameter tractable;graphs;graph classes;algorithms;graphs algorithms graph modification fixed parameter tractable graph classes;graph modification	"""This report documents the program and the outcomes of Dagstuhl Seminar 14071 """"Graph Modification Problems"""". The seminar was held from February 9 to February 14, 2014. This report contains abstracts for presentations about the recent#R##N#developments on algorithms and structural results for graph modification problems, as well as related areas. Furthermore, the report contains a summary of open problems in this area of research."""		Hans L. Bodlaender;Pinar Heggernes;Daniel Lokshtanov	2014	Dagstuhl Reports	10.4230/DagRep.4.2.38	outerplanar graph;block graph;factor-critical graph;combinatorics;discrete mathematics;universal graph;null graph;graph property;clique-width;theoretical computer science;simplex graph;comparability graph;cubic graph;symmetric graph;mathematics;voltage graph;distance-hereditary graph;graph;butterfly graph;vertex-transitive graph;crossing number;complement graph;line graph;coxeter graph	Theory	20.087795031767513	20.36022135979871	177263
4fbd4e3a159abcb007f8cc56a0c8acdfbcedf650	some results on random unsatisfiable k-sat instances and approximation algorithms applied to random structures	approximate algorithm	It is known that random k-Sat instances with at least (2 · ln 2) · n random clauses are unsatisfiable with high probability. This result is simply obtained by showing that the expected number of satisfying assignments tends to 0 when the number of variables n tends to infinity. This proof does not directly provide us with an efficient algorithm certifying the unsatisfiability of a given random formula. Concerning efficient algorithms, it is essentially known that random formulas with n · nk/2 clauses with k literals can be efficiently certified as unsatisfiable. The present paper is the result of trying to lower this bound. We obtain better bounds for some specialized satisfiability problems. These results are based on discrepancy investigations for hypergraphs. Further, we show that random formulas with a linear number of clauses can be efficiently certified as unsatisfiable in the Not-All-Equal-3-Sat sense. A similar result holds for the non-3-colourability of random graphs with a linear number of edges. We obtain these results by direct application of approximation algorithms.	approximation algorithm;best, worst and average case;boolean satisfiability problem;discrepancy function;equation solving;expectation–maximization algorithm;laplacian matrix;low-discrepancy sequence;maximal set;maximum cut;random graph;theory;with high probability	Andreas Goerdt;Tomasz Jurdzinski	2003	Combinatorics, Probability & Computing	10.1017/S0963548303005637	combinatorics;discrete mathematics;mathematics;algorithm	Theory	17.897441540941717	18.710107685918963	177542
279d9c68346c04229e975fa52b0b236dcad39a42	mining posets from linear orders	posets;technical report departmental;data structures;algorithms;partial orders;linear extensions;algorithms and data structure	There has been much research on the combinatorial problem of generating the linear extensions of a given poset. This paper focuses on the reverse of that problem, where the input is a set of linear orders, and the goal is to construct a poset or set of posets that generates the input. Such a problem finds applications in computational neuroscience, systems biology, paleontology, and physical plant engineering. In this paper, several algorithms are presented for efficiently finding a single poset that generates the input set of linear orders. The variation of the problem where a minimum set of posets that cover the input is also explored. It is found that the problem is polynomially solvable for one class of simple posets (kite(2) posets) but NP-complete for a related class (hammock(2,2,2) posets).	approximation algorithm;computational neuroscience;decision problem;ibm notes;np-completeness;physical plant;set cover problem;systems biology;theory;time complexity	Proceso L. Fernandez;Lenwood S. Heath;Naren Ramakrishnan;Michael Tan;John Paul C. Vergara	2013	Discrete Math., Alg. and Appl.	10.1142/S1793830913500304	combinatorics;discrete mathematics;data structure;interval order;mathematics;star product;algorithm;algebra	Theory	17.728886609791218	21.3698835641344	177626
b68403cefdc1c40ea5f9b7d1db8d4cfeb22e24dc	the connectivity of boolean satisfiability: no-constants and quantified variants		For Boolean satisfiability problems, the structure of the solution space is characterized by the solution graph, where the vertices are the solutions, and two solutions are connected iff they differ in exactly one variable. Motivated by research on heuristics and the satisfiability threshold, Gopalan et al. in 2006 studied connectivity properties of the solution graph and related complexity issues for constraint satisfaction problems in Schaefer’s framework [6]. They found dichotomies for the diameter of connected components and for the complexity of the stconnectivity question, and conjectured a trichotomy for the connectivity question that we recently were able to prove. While Gopalan et al. considered CNF(S)-formulas with constants, we here look at two important variants: CNF(S)-formulas without constants, and partially quantified formulas. For the diameter and the stconnectivity question, we prove dichotomies analogous to those of Gopalan et al. in these settings. While we cannot give a complete classification for the connectivity problem yet, we identify fragments where it is in P, where it is coNP-complete, and where it is PSPACE-complete, in analogy to Gopalan et al.’s trichotomy.	boolean satisfiability problem;co-np;connected component (graph theory);constraint satisfaction problem;feasible region;heuristic (computer science);pspace-complete;st-connectivity	Konrad W. Schwerdtfeger	2014	CoRR		combinatorics;discrete mathematics;mathematics;algorithm	AI	22.122259425552816	23.624106062848416	177833
e42da4337878d455bbe4bed646de5ce6d6af0f8a	guest editorial: special issue on parameterized and exact computation, part i		The papers in this issue form the first part of the two parts special issue in the area of parameterized and exact exponential algorithms and complexity. While some of these are selected and extended papers from International Symposium on Parameterized and Exact Computation (IPEC) 2010, the rest were selected from the submissions received for our call for the special issue in the area. The two parts reflect the volume of high quality submissions we received, which in turn reflects the high growth of the area in recent times. The papers in this issue represent the subareas of recent growth in the area including variations of RobertsonSeymour and Courcelle’s theorems, kernelization and structural parameterization. In parameterized (or multivariate) complexity, the aim is to design and analyse algorithms focussing on various parameters in the input—besides the standard input size. In particular, for hard problems, the aim is to confine the combinatorial explosion of the running time of the algorithms to small parameters in the input. Besides giving rise to new and interesting algorithm design techniques and complexity paradigms, the area has been highly successful in domains (like computational biology and artificial intelligence) where small parameters govern practical situations. While most of the initial work in the area considered the size of the solution as the parameter, there has been a lot of work in recent times to consider an ecology of parameters including various ‘structural’ parameters. The size of the vertex cover (which measures how far the graph is from an edgeless graph) and the feedback vertex set (which measures how far the graph is from a forest) are such parameters especially on graph problems. The paper ‘Well Quasi orders in subclasses of bounded treewidth	algorithm design;artificial intelligence;computation;computational biology;display resolution;esa;ecology;feedback vertex set;information;kernelization;standard streams;time complexity;treewidth;vertex cover	Venkatesh Raman;Saket Saurabh	2011	Algorithmica	10.1007/s00453-011-9605-3	computer science;theoretical computer science	Theory	18.751695663978783	20.310872779807426	178074
4c24224997dd74d12fe4bcc434976c04ab92660b	taming the exponential state space of the maximum lifetime sensor cover problem	distributed algorithms;network lifetime;optimisation;theoretical model;equivalence class graph;exponential state space;smart linear time sampling algorithm exponential state space maximum lifetime sensor cover problem wireless sensor networks np complete problem equivalence class graph;greedy algorithms;smart linear time sampling algorithm;wireless sensor network;sleep;state space methods wireless sensor networks distributed algorithms computer science educational institutions sampling methods batteries sleep switches mathematics;sampling technique;monitoring;wireless sensor networks equivalence classes greedy algorithms optimisation;heuristic algorithms;state space;linear time;batteries;greedy algorithm;simulation study;equivalence classes;exponential growth;covering problem;switches;maximum lifetime sensor cover problem;wireless sensor networks;np complete problem	A key problem in Wireless Sensor Networks is that of scheduling sensors into sleep-sense cycles that maximize the lifetime of the network while ensuring coverage of a set of targets. This is a known NP-complete problem, due to the exponential number of possible ways to select a subset of sensors to turn on. Our earlier work had presented a unique model for this problem by introducing a lifetime dependency (LD) graph in which these possible cover sets are nodes and edges represent shared sensors between them. Using the graph properties, we presented a range of effective distributed heuristics. Even though the local subgraphs are practically tractable, their theoretically exponential growth has remained a persistent issue. In this paper, we present a theoretical model for representing this exponential space of possible cover sets that groups related covers together, thereby reducing this exponential space virtually to a linear one. We then present an equivalence class (EC) graph as a model for this reduction. We use these underlying theoretical properties to develop a smart linear time sampling algorithm of this exponential space. To demonstrate the effectiveness of our sampling technique, we employ the sampled localized LD subgraph as input to our previous heuristics. Simulation studies show about twofold speedup while reducing solution quality (network lifetime) only by under 10% when compared to our previous heuristics that operate on the exponential space. We also compare our algorithms to two other state-of-art greedy algorithms and show that ours still manage to achieve improvements of around 8–10% over them.	cobham's thesis;expspace;graph property;greedy algorithm;heuristic (computer science);np-completeness;nyquist–shannon sampling theorem;persistent data structure;sampling (signal processing);scheduling (computing);sensor;simulation;speedup;state space;theory;time complexity;turing completeness	Akshaye Dhawan;Sushil K. Prasad	2009	2009 International Conference on High Performance Computing (HiPC)	10.1109/HIPC.2009.5433213	distributed algorithm;mathematical optimization;greedy algorithm;wireless sensor network;computer science;machine learning;distributed computing;algorithm	EDA	19.617267316595587	22.67954084142852	178721
b274ade58c7c242cc6b7d0e2394b2db6516060f4	sampling subproblems of heterogeneous max-cut problems and approximation algorithms	nonuniform sampling;optimization problem;sampling methods	Recent work in the analysis of randomized approximation algorithms for NP-hard optimization problems has involved approximating the solution to a problem by the solution of a related subproblem of constant size, where the subproblem is constructed by sampling elements of the original problem uniformly at random. In light of interest in problems with a heterogeneous structure, for which uniform sampling might be expected to yield suboptimal results, we investigate the use of nonuniform sampling probabilities. We develop and analyze an algorithm which uses a novel sampling method to obtain improved bounds for approximating the Max-Cut of a graph. In particular, we show that by judicious choice of sampling probabilities one can obtain error bounds that are superior to the ones obtained by uniform sampling, both for unweighted and weighted versions of Max-Cut. Of at least as much interest as the results we derive are the techniques we use. The first technique is a method to compute a compressed approximate decomposition of a matrix as the product Correspondence to: Michael W. Mahoney *A preliminary version of this paper with the same title appeared in the Proceedings of the 22nd Annual International Symposium on Theoretical Aspects of Computer Science, Lecture Notes in Computer Science 3404, pp. 57–68, 2005 [13]. †Supported in part by the NSF. © 2007 Wiley Periodicals, Inc.	approximation algorithm;computational complexity theory;data point;decision problem;directed graph;emoticon;field (computer science);graph theory;ibm notes;john d. wiley;lecture notes in computer science;linear programming;mathematical optimization;maximum cut;np-hardness;nonuniform sampling;ptas reduction;randomized algorithm;sampling (signal processing);social inequality;the matrix	Petros Drineas;Ravi Kannan;Michael W. Mahoney	2008	Random Struct. Algorithms	10.1002/rsa.20196	optimization problem;sampling;mathematical optimization;nonuniform sampling;combinatorics;slice sampling;mathematics;algorithm;statistics	Theory	20.975868864471536	19.918052154430594	179712
5b308b55533e15775da9772737fe95c078f2bc7a	on the complexity of the minimum outer-connected dominating set problem in graphs	dominating set;apx complete;outer connected dominating set;np complete	For a graph G = (V, E), a dominating set is a set D ⊆ V such that every vertex v ∈ V \ D has a neighbor in D. The minimum outer-connected dominating set (Min-Outer-Connected-Dom-Set) problem for a graph G is to find a dominating set D of G such that G[V \ D], the induced subgraph by G on V \ D, is connected and the cardinality of D is minimized. In this paper, we consider the complexity of the Min-Outer-Connected-Dom-Set problem. In particular, we show that the decision version of the Min-Outer-Connected-Dom-Set problem is NPcomplete for split graphs, a well known subclass of chordal graphs. We also consider the approximability of the Min-Outer-Connected-Dom-Set problem. We show that the Min-Outer-Connected-Dom-Set problem cannot be approximated within a factor of (1 − ε) ln |V | for any ε > 0, unless NP⊆DTIME(|V |log log |V |). For sufficiently large values of Δ, we show that for graphs with maximum degree Δ, the Min-Outer-Connected-Dom-Set problem cannot be approximated within a factor of ln Δ−C ln ln Δ for some constant C , unless P=NP. On the positive side, we present a ln(Δ+1)+1-factor approximation algorithm for the Min-Outer-Connected-DomSet problem for general graphs. We show that the Min-Outer-Connected-Dom-Set problem is APX-complete for graphs of maximum degree 4.	apx;approximation algorithm;connected dominating set;decision problem;induced subgraph;maxima and minima;p versus np problem	Dinabandhu Pradhan	2016	J. Comb. Optim.	10.1007/s10878-013-9703-z	combinatorics;discrete mathematics;np-complete;topology;dominating set;mathematics;algorithm	Theory	23.913421624563984	20.526001710673917	179737
437ad06928b5af25813b2843434f031e5c66d925	limits of approximation algorithms: pcps and unique games (dimacs tutorial lecture notes)	approximate algorithm;computational complexity;national science foundation;hardness of approximation;data structure;national security agency	for their thorough and meticulous work. Special thanks to Rebecca Wright and Tami Carpenter at DIMACS but for whose organizational support and help, this workshop would have been impossible. We thank Alantha Newman, a phone conversation with whom sparked the idea of this workshop. We thank the Imdadullah Khan and Aleksandar Nikolov for video recording the lectures. The video recordings of the lectures will be posted at the DIMACS tutorial webpage The theory of NP-completeness is one of the cornerstones of complexity theory in theoretical computer science. Approximation algorithms offer an important strategy for attacking compu-tationally intractable problems, and approximation algorithms with performance guarantees have been designed for a host of important problems such as balanced cut, network design, Euclidean TSP, facility location, and machine scheduling. Many simple and broadly-applicable approximation techniques have emerged for some provably hard problems, while in other cases, inapproximability results demonstrate that achieving a suitably good approximate solution is no easier than finding an optimal one. The celebrated PCP theorem established that several fundamental optimization problems are not only hard to solve exactly but also hard to approximate. This work shows that a broad class of problems is very unlikely to have constant factor approximations, and in effect, establishes a threshold for such problems such that approximation beyond this threshold would imply P= NP. More recently, the unique games conjecture of Khot has emerged as a powerful hypothesis that has served as the basis for a variety of optimal inapproximability results. This tutorial targets graduate students and others who are new to the field. It will aim to give participants a general overview of approximability, introduce them to important results in inapprox-imability, such as the PCP theorem and the unique games conjecture, and illustrate connections with mathematical programming techniques.	aleksandar lazarevic;approximation algorithm;computational complexity theory;hardness of approximation;mathematical optimization;np-completeness;network planning and design;pcp theorem;rollo carpenter;scheduling (computing);theoretical computer science;travelling salesman problem;unique games conjecture;video;web page	Prahladh Harsha;Moses Charikar;Matthew Andrews;Sanjeev Arora;Subhash Khot;Dana Moshkovitz;Lisa Zhang;Ashkan Aazami;Dev Desai;Igor Gorodezky;Geetha Jagannathan;Alexander S. Kulikov;Darakhshan J. Mir;Alantha Newman;Aleksandar Nikolov;David Pritchard;Gwen Spencer	2010	CoRR		united states national security agency;data structure;applied mathematics;computer science;artificial intelligence;mathematics;hardness of approximation;computational complexity theory;algorithm	Theory	17.512120068863045	19.649471158146838	180598
aaa021747b66cdf398539466cc3f90c399c62fcd	algorithmic lower bounds for problems on decomposable graphs	graph theory;np hard problem;polynomial time;graph algorithm;lower bound	The treewidth and cliquewidth of a graph are central notions in graph theory and graph algorithms. Many NP-hard problems become tractable when the treewidth or cliquewidth of the input graph is bounded by a constant. In this talk I will briefly survey the known algorithmic results for graphs of bounded treewidth and cliquewidth, and give an overview of a line of work that explores the limits of tractability of problems on graphs of bounded treewidth or cliquewidth. Specifically, we will consider the following questions: - Which problems are solvable in polynomial time on graphs of bounded treewidth, but require that the degree of the polynomial grows with the treewidth? - Which problems are harder on bounded cliquewidth graphs than on bounded treewidth graphs? - Can the known algorithms for problems on graphs of bounded treewidth and cliquewidth be improved?		Daniel Lokshtanov	2010		10.1007/978-3-642-15155-2_4	1-planar graph;implicit graph;outerplanar graph;time complexity;pathwidth;mathematical optimization;combinatorics;discrete mathematics;clique-width;graph theory;np-hard;clique-sum;mathematics;tree-depth;upper and lower bounds;treewidth;partial k-tree;chordal graph;indifference graph;book embedding;algorithm;planar graph;tree decomposition	Theory	22.265415579805286	22.519251788644393	180733
e1a296c5a3724500bcd3851d40dd46012f7d0349	parameterized algorithms for min-max 2-cluster editing		For a given graph and an integer t, the Min–Max 2-Clustering problem asks if there exists a modification of a given graph into two maximal disjoint cliques by inserting or deleting edges such that the number of the editing edges incident to each vertex is at most t. It has been shown that the problem can be solved in polynomial time for \(t<n/4\), where n is the number of vertices. In this paper, we design parameterized algorithms for different ranges of t. Let \(k=t-n/4\). We show that the problem is polynomial-time solvable when roughly \(k<\sqrt{n/32}\). When \(k\in o(n)\), we design a randomized and a deterministic algorithm with sub-exponential time parameterized complexity, i.e., the problem is in SUBEPT. We also show that the problem can be solved in \(O({2}^{n/r}\cdot n^2)\) time for \(k<n/12\) and in \(O(n^2\cdot 2^{3n/4+k})\) time for \(n/12\le k< n/4\), where \(r=2+\lfloor (n/4-3k-2)/(2k+1) \rfloor \ge 2\).	algorithm;maxima and minima	Li-Hsuan Chen;Bang Ye Wu	2017	J. Comb. Optim.	10.1007/s10878-016-0059-z	mathematical optimization;combinatorics;discrete mathematics;mathematics;algorithm	AI	23.680845749742005	22.207099383364035	180842
11b786256af69cb88545d2dc57cd5851feab1853	on the maximum uniquely restricted matching for bipartite graphs	graph theory;approximate algorithm;bipartite graph	We study the approximability of computing a maximum size uniquely restricted matching in a given bipartite graph. We prove that it is hard to approximate within a factor of O(n 1 3 − ), for any > 0, unless NP=ZPP, and it is APX-complete when restricted to bipartite graphs of degree at most 3. We show that it can be approximated within a factor of 2 when restricted to 3-regular bipartite graphs.	apx;approximation algorithm;zpp (complexity)	Sounaka Mishra	2011	Electronic Notes in Discrete Mathematics	10.1016/j.endm.2011.05.059	1-planar graph;edge-transitive graph;folded cube graph;complete bipartite graph;factor-critical graph;combinatorics;discrete mathematics;cograph;topology;bipartite graph;dense graph;clique-width;graph theory;3-dimensional matching;hopcroft–karp algorithm;pancyclic graph;forbidden graph characterization;factor graph;foster graph;mathematics;blossom algorithm;maximal independent set;biregular graph;line graph;matching	Theory	23.644058007838936	23.497707546074288	180875
36151c7c060e1433ec4860e216485411704f8a34	approximation algorithms for the capacitated minimum spanning tree problem and its variants in network design	network design;spanning trees;approximate algorithm;approximation algorithms;spanning tree;capacitated minimum spanning tree;steiner tree problem;combinatorial optimization;steiner tree;minimum spanning trees	Given an undirected graph <i>G</i> = (<i>V,E</i>) withnonnegative costs on its edges, a root node <i>r</i> <i>V</i>, aset of demands <i>D</i> <i>V</i> with demand <i>v</i> <i>D</i>wishing to route <i>w(v)</i> units of flow (weight) to <i>r</i>,and a positive number <i>k</i>, the <i>Capacitated Minimum SteinerTree</i> (CMStT) problem asks for a minimum Steiner tree, rooted at<i>r</i>, spanning the vertices in <i>D</i> *&lcub;<i>r</i>&rcub;, in which the sum of the vertexweights in every subtree connected to <i>r</i> is at most <i>k</i>.When <i>D</i> &equals; <i>V</i>, this problem is known as the<i>Capacitated Minimum Spanning Tree</i> (CMST) problem. Both CMsTand CMST problems are NP-hard. In this article, we presentapproximation algorithms for these problems and several of theirvariants in network design. Our main results are the following: ---We present a (³ Á<sub><i>ST</i></sub> +2)-approximation algorithm for the CMStT problem, where ³ isthe <i>inverse Steiner ratio</i>, and Á<sub><i>ST</i></sub>is the best achievable approximation ratio for the Steiner treeproblem. Our ratio improves the current best ratio of2Á<sub><i>ST</i></sub> + 2 for this problem. ---In particular, we obtain (³ + 2)-approximation ratio forthe CMST problem, which is an improvement over the current bestratio of 4 for this problem. For points in Euclidean andrectilinear planes, our result translates into ratios of 3.1548 and3.5, respectively. ---For instances in the plane, under the<i>L</i><sub><i>p</i></sub> norm, with the vertices in <i>D</i>having uniform weights, we present a nontrivial(7/5Á<sub><i>ST</i></sub> + 3/2)-approximation algorithm forthe CMStT problem. This translates into a ratio of 2.9 for the CMSTproblem with uniform vertex weights in the<i>L</i><sub><i>p</i></sub>metric plane. Our ratio of 2.9 solvesthe long-standing open problem of obtaining any ratio better than 3for this case. ---For the CMST problem, we show how to obtain a 2-approximationfor graphs in metric spaces with unit vertex weights and <i>k</i> =3,4. ---For the <i>budgeted</i> CMST problem, in which the weights ofthe subtrees connected to <i>r</i> could be up to ± <i>k</i>instead of <i>k</i> (± e 1), we obtain a ratio of ³&plus; 2/±.	approximation algorithm;file spanning;graph (discrete mathematics);minimum spanning tree;np-hardness;network planning and design;steiner tree problem;tree (data structure);vertex (geometry)	Raja Jothi;Balaji Raghavachari	2005	ACM Trans. Algorithms	10.1145/1103963.1103967	euclidean minimum spanning tree;mathematical optimization;combinatorics;discrete mathematics;minimum degree spanning tree;spanning tree;steiner tree problem;combinatorial optimization;computer science;minimum spanning tree;k-minimum spanning tree;mathematics;distributed minimum spanning tree;approximation algorithm;shortest-path tree	Theory	24.158678265596006	19.90267228692442	180890
14f6b6640af73a9d77d885f2194dded323b768d2	budget constrained minimum cost connected medians	location theory;shortest path;network design;distributed database;approximate algorithm;satisfiability;multiple constraints;optical network design;communication cost;weight function;steiner tree problem;performance ratio;lower bound	Several practical instances of network design and location theory problems require the network to satisfy multiple constraints. In this paper, we study a graph-theoretic problem that aims to simultaneously address a network design task an d a location-theoretic constraint. TheBudget Constrained Connected Median Problem is the following: We are given an undirected graphG = (V;E)with two different edge-weight functions (modeling the construction or communication cost) and(modeling the service distance), and a bound B on the total service distance. The goal is to find a subtree T of G with minimum -cost (T ) subject to the constraint that the sum Pv2V nT distd(v; T ) of the service distances of all the remaining nodes v 2 V n T does not exceed the specified budget B. Here, theservice distancedistd(v; T ) denotes the shortest path distance of v to a vertex inT with respect tod. This problem has applications in optical network design and the efficient mai ntenance of distributed databases. We formulate this problem as a bicriteria network design pro blem, and present bicriteria approximation algorithms. We also prove lower bounds on the approximability of the problem which demonstrate that our performance ratios are close to b st possible.	approximation algorithm;distributed database;graph (discrete mathematics);graph theory;network planning and design;shortest path problem;tree (data structure)	Goran Konjevod;Sven Oliver Krumke;Madhav V. Marathe	2004	J. Discrete Algorithms	10.1016/j.jda.2004.04.006	mathematical optimization;network planning and design;combinatorics;weight function;location theory;steiner tree problem;computer science;mathematics;upper and lower bounds;shortest path problem;distributed database;algorithm;shortest-path tree;satisfiability	Theory	23.82960762634292	19.116311992181583	180896
5ab97d5937fae813af54fb51a414b83a4ae39f8d	valid inequalities and lifting procedures for the shortest path problem in digraphs with negative cycles		In this paper, we discuss exact algorithm for the shortest elementary path problem in digraphs containing negative directed cycles. We investigate various classes of valid inequalities for the polytope of \(s-t\) elementary paths in digraphs. The problem of separation of these valid inequalities can be shown to be NP-hard, thus only solvable for small sized problems. To deal with larger problems, lifting techniques are proposed. We provide results of computational experiments to show the efficiency of lifted inequalities in reducing the integrality gap. Indeed, considering a series of difficult test examples, the integrality gap is shown to be \(100\,\%\) closed in about half of the cases within no more than ten rounds of cutting plane generation.	lifting scheme;shortest path problem	Mamane Souley Ibrahim;Nelson Maculan;Michel Minoux	2015	Optimization Letters	10.1007/s11590-014-0747-5	mathematical optimization;combinatorics;discrete mathematics;mathematics	Theory	23.335586070894653	21.580169474702345	181058
5fe1792143c28eeb4d54a621f7aff20f33cfa349	duality for min-max orderings and dichotomy for min cost homomorphisms	interval graph;discrete mathematics;polymorphism;polynomial time;data structure	Min-Max orderings correspond to conservative lattice polymorphisms. Digraphs with Min-Max orderings have polynomial time solvable minimum cost homomorphism problems. They can also be viewed as digraph analogues of proper interval graphs and bigraphs. We give a forbidden structure characterization of digraphs with a Min-Max ordering which implies a polynomial time recognition algorithm. We also similarly characterize digraphs with an extended Min-Max ordering, and we apply this characterization to prove a conjectured form of dichotomy for minimum cost homomorphism problems.	algorithm;bigraph;decision problem;directed graph;maxima and minima;time complexity	Arash Rafiey;Pavol Hell	2009	CoRR		time complexity;polymorphism;combinatorics;discrete mathematics;interval graph;data structure;mathematics;algorithm;algebra	Theory	22.955019148968578	24.18624802275293	181062
3603661ee6e0eb70a3e9f4255456c606d9692356	logarithmic hardness of the directed congestion minimization problem	directed graphs;randomized rounding;approximate algorithm;directed graph;congestion minimization;hardness of approximation	We show that for any constant ε > 0, there is no Ω(log<sup>1-ε</sup>M)-approximation algorithm for the directed congestion minimization problem on networks of size M unless NP ⊆ ZPTIME(n<sup>polylog n</sup>). This bound is almost tight given the O(log M/ log log M)-approximation via randomized rounding due to Raghavan and Thompson.	algorithm;network congestion;randomized rounding	Matthew Andrews;Lisa Zhang	2006		10.1145/1132516.1132592	mathematical optimization;combinatorics;discrete mathematics;directed graph;mathematics;algorithm	Theory	22.489523650017208	20.548727434036874	181277
280c6b65d19e1a7b293d3869faab08b807b1c644	fast constructions of lightweight spanners for general graphs	graph spanners;light spanners;sparse graphs	It is long known that for every <i>weighted</i> undirected <i>n</i>-vertex <i>m</i>-edge graph <i>G</i> = (<i>V</i>, <i>E</i>, ω), and every integer <i>k</i> ⩾ 1, there exists a ((2<i>k</i> − 1) · (1 + ε))-spanner with <i>O</i>(<i>n</i><sup>1 + 1/<i>k</i></sup>) edges and weight <i>O</i>(<i>k</i> · <i>n</i><sup>1/<i>k</i></sup> · ω(<i>MST</i>(<i>G</i>)), for an arbitrarily small constant ε > 0. (Here ω(<i>MST</i>(<i>G</i>)) stands for the weight of the minimum spanning tree of <i>G</i>.) To our knowledge, the only algorithms for constructing sparse and lightweight spanners for general graphs admit high running times. Most notable in this context is the greedy algorithm of Althöfer et al. [1993], analyzed by Chandra et al. [1992], which requires <i>O</i>(<i>m</i> · (<i>n</i><sup>1 + 1/<i>k</i></sup> + <i>n</i> · log <i>n</i>)) time.  In this article, we devise an efficient algorithm for constructing sparse and lightweight spanners. Specifically, our algorithm constructs ((2<i>k</i> − 1) · (1 + ε))-spanners with <i>O</i>(<i>k</i> · <i>n</i><sup>1 + 1/<i>k</i></sup>) edges and weight <i>O</i>(<i>k</i> · <i>n</i><sup>1/<i>k</i></sup>) · ω(<i>MST</i>(<i>G</i>)), where ε > 0 is an arbitrarily small constant. The running time of our algorithm is <i>O</i>(<i>k</i> · <i>m</i> + min {<i>n</i> · log <i>n</i>, <i>m</i> · α(<i>n</i>)}). Moreover, by slightly increasing the running time we can reduce the other parameters. These results address an open problem by Roditty and Zwick [2004].	file spanning;graph (discrete mathematics);greedy algorithm;karloff–zwick algorithm;maxima and minima;minimum spanning tree;sparse matrix;time complexity	Michael Elkin;Shay Solomon	2016	ACM Trans. Algorithms	10.1145/2836167	combinatorics;discrete mathematics;mathematics;geometry	Theory	21.683828564356673	22.032477081427395	182174
5e2446b95359e4932e84253d3d77fb617b7c67f0	improved approximation algorithm for fault-tolerant facility placement		We consider the Fault-Tolerant Facility Placement problem (FTFP ), which is a generalization of the classical Uncapacitated Facility Location problem (UFL). In the FTFP problem we have a set of clients C and a set of facilities F . Each facility i ∈ F can be opened many times. For each opening of facility i we pay fi ≥ 0. Our goal is to connect each client j ∈ C with rj ≥ 1 open facilities in a way that minimizes the total cost of open facilities and established connections. In a series of recent papers FTFP was essentially reduced to FTFL and then to UFL showing it could be approximated with ratio 1.575. In this paper we show that FTFP can actually be approximated even better. We consider approximation ratio as a function of r = minj∈C rj (minimum requirement of a client). With increasing r the approximation ratio of our algorithm λr converges to one. Furthermore, for r > 1 the value of λr is less than 1.463 (hardness of approximation of UFL). We also show a lower bound of 1.278 for the approximability of the FaultTolerant Facility Location problem (FTFL) for arbitrary r. Already for r > 3 we obtain that FTFP can be approximated with ratio 1.275, showing that under standard complexity theoretic assumptions FTFP is strictly better approximable than FTFL. ? Research supported by NCN 2012/07/N/ST6/03068 grant ar X iv :1 31 1. 66 15 v2 [ cs .D S] 1 1 Fe b 20 14	approximation algorithm;facility location problem;fault-tolerant computer system;feature learning;field electron emission;hardness of approximation;theory	Bartosz Rybicki;Jaroslaw Byrka	2014		10.1007/978-3-319-18263-6_6	mathematical optimization;combinatorics;discrete mathematics;mathematics	Theory	23.075017948668798	18.583487895430284	182991
96c7bf992f6602c841b601c95ad1aa662e5b4cb8	approximating bandwidth by mixing layouts of interval graphs	approximate algorithm;circular arc graph;interval graph;polynomial time;performance ratio;chordal graph	We examine the bandwidth problem in circular-arc graphs, chordal graphs with a bounded number of leaves in the clique tree, and k-polygon graphs (fixed k). We show that all of these graph classes admit efficient approximation algorithms which are based on exact or approximate bandwidth layouts of related interval graphs. Specifically, we obtain a bandwidth approximation algorithm for circular-arc graphs that executes in O(n log n) time and has performance ratio 2, which is the best possible performance ratio of any polynomial time bandwidth approximation algorithm for circular-arc graphs. For chordal graphs with at most k leaves in the clique tree, we obtain a performance ratio of 2k in O(k(n+m)) time, and our algorithm for k-polygon graphs has performance ratio 2k2 and runs in time O(n3).	approximation algorithm;graph bandwidth;polynomial;time complexity;tree decomposition	Dieter Kratsch;Lorna Stewart	1999	Electronic Notes in Discrete Mathematics	10.1016/S1571-0653(05)80035-6	1-planar graph;block graph;time complexity;pathwidth;mathematical optimization;split graph;combinatorics;discrete mathematics;cograph;interval graph;independent set;longest path problem;clique problem;hopcroft–karp algorithm;graph coloring;clique-sum;trapezoid graph;mathematics;tree-depth;maximal independent set;modular decomposition;treewidth;partial k-tree;chordal graph;indifference graph;algorithm	Theory	23.594998314571928	22.457657963400678	183082
66b06111e89a15e9dde71ea6a4826b54f780f1e6	towards the randomized k-server conjecture: a primal-dual approach	competitive algorithm;log k;randomized k-server conjecture;competitive factor;model problem;main open problem;k-server problem;competitive paging;competitive paging problem;primal-dual approach;logarithmic competitive algorithm;expert advice;lower bound;motion planning;online algorithm;competitive analysis;computational geometry;satisfiability	"""Recently, Coté et al. [10] proposed an approach for solving the k-server problem on Hierchically Separated Trees (HSTs). In particular, they define a problem on a uniform metric, and show that if an algorithm with a certain refined guarantee exists for it, then one can obtain polylogarithmic (in diameter) competitive factors for the k-server problem on HSTs by solving this problem recursively. By designing such an algorithm for a two point metric, they obtained a logarithmic competitive algorithm for well-separated binary HSTs. Extending their result to uniform metrics on arbitrarily many points would imply a poly-logarithmic competitive algorithm for k-server on general HSTs (and hence general metrics) and is thus of major interest.  Here, we design such an algorithm for any uniform metric, provided the instance satisfies a certain """"convexity"""" property. Even though this does not give a result for k-server, convexity seems to be a very natural property, and we give evidence that instances arising in the Coté et al. [10] reduction from k-server essentially possess this property, suggesting that this might be a promising approach. Already, our setting is general enough to model the finely competitive paging problem proposed by Blum et al. [4], who motivated it as a first step towards achieving a polylog(k) competitive algorithm for k-server. Our result implies an r + O(log k)-competitive algorithm for finely competitive paging, resolving the main open problem of [4].  Our results are based on an extension of the primaldual framework for online algorithms developed by Buchbinder and Naor [7]. The original approach works for problems whose offline version can be expressed as a packing or a covering linear program, possibly with box constraints. The online nature of the problem is modeled by revealing the constraints one by one and the requirement that variables can only be increased over time.  Here, we consider more general types of constraints, where terms can be both positive and negative. Moreover, we allow the variables to both increase and decrease. This versatility allows us to model problems such as predicting with expert advice, which could not be modeled earlier. To show the simplicity and generality of this approach, we give an alternate O(log k)-competitive algorithm for weighted paging with a very simple proof. We also give an alternate primal-dual approach to design regret minimization algorithms for the problem of online prediction with expert advice. Our results suggest the possibility of a more general primal-dual framework for online problems beyond covering and packing LPs."""	blum axioms;convex function;k-server problem;linear programming;online algorithm;online and offline;page replacement algorithm;paging;polylogarithmic function;randomized algorithm;recursion;regret (decision theory);server (computing);set packing	Nikhil Bansal;Niv Buchbinder;Joseph Naor	2010		10.1137/1.9781611973075.5	beal's conjecture;combinatorics;discrete mathematics;mathematics	Theory	24.145598775431235	18.50136428470506	184073
e48b9a30c15227bd07ec4753d44b8d878b547311	finding the exact integrality gap for small traveling salesman problems	traveling salesman problem;hamiltonian cycle;travelling salesman problem;cycle hamiltonien;probleme elimination sous tour;optimisation combinatoire;problema viajante comercio;upper bound;ciclo hamiltoniano;probleme commis voyageur;cycle graphe;cycle graph;combinatorial optimization;grafo completo;complete graph;graphe complet;optimizacion combinatoria;ciclo diagrama	The Symmetric Traveling Salesman Problem (STSP) is to find a minimum weight Hamiltonian cycle in a weighted complete graph on n nodes. One direction which seems promising for finding improved solutions for the STSP is the study of a linear relaxation of this problem called the Subtour Elimination Problem (SEP). A well known conjecture in combinatorial optimization says that the integrality gap of the SEP is 4/3 in the metric case. Currently the best upper bound known for this integrality gap is 3/2.Finding the exact value for the integrality gap for the SEP is difficult even for small values of n due to the exponential size of the data involved. In this paper we describe how we were able to overcome such difficulties and obtain the exact integrality gap for all values of n up to 10. Our results give a verification of the 4/3 conjecture for small values of n, and also give rise to a new stronger form of the conjecture which is dependent on n.	linear programming relaxation	Sylvia C. Boyd;Geneviève Labonté	2002		10.1007/3-540-47867-1_7	mathematical optimization;combinatorics;combinatorial optimization;mathematics;travelling salesman problem;algorithm	Theory	22.59891868653668	19.56892349379641	184303
bd6ad77260d0f17ac0b43b296e772433547541b7	compact representation of graphs of small clique-width	clique-width;navigation oracles;compact representation	The notion of clique-width for graphs offers many research topics and has received considerable attention in the past decade. A graph has clique-width k if it can be represented as an algebraic expression on k labels associated with its vertices. Many computationally hard problems can be solved in polynomial time for graphs of bounded clique-width. Interestingly also, many graph families have bounded clique-width. In this paper, we consider the problem of preprocessing a graph of size n and clique-width k to build space-efficient data structures that support basic graph navigation queries. First, by way of a counting argument, which is of interest in its own right, we prove the space requirement of any representation is $$\varOmega (kn)$$ Ω(kn) . Then we present a navigation oracle which answers adjacency query in constant time and neighborhood queries in constant time per neighbor. This oracle uses O(kn) space (i.e., O(kn) bits). We also present a degree query which reports the degree of each given vertex in $$O(k\log ^*(n))$$ O(klog∗(n)) time using $$O(kn \log ^*(n))$$ O(knlog∗(n)) bits.	clique-width;data structure;linear algebra;preprocessor;time complexity	Shahin Kamali	2017	Algorithmica	10.1007/s00453-017-0365-6	mathematics;oracle;time complexity;combinatorics;discrete mathematics;vertex (geometry);adjacency list;algebraic expression;clique-width;bounded function;data structure	Theory	20.34467023010714	22.8579292626177	184845
14857214e2f2643fb2b889dbd5e050f13617b85b	experimental evaluation of a branch-and-bound algorithm for computing pathwidth and directed pathwidth	graph;vertex separation;pathwidth;branch and bound;directed pathwidth	Path decompositions of graphs are an important ingredient of dynamic programming algorithms for solving efficiently many NP-hard problems. Therefore, computing the pathwidth and associated path decomposition of graphs has both a theoretical and practical interest. In this article, we design a branch-and-bound algorithm that computes the exact pathwidth of graphs and a corresponding path decomposition. Our main contribution consists of several nontrivial techniques to reduce the size of the input graph (preprocessing) and to cut the exploration space during the search phase of the algorithm. We evaluate experimentally our algorithm by comparing it to existing algorithms of the literature. It appears from the simulations that our algorithm offers a significant gain with respect to previous work. In particular, it is able to compute the exact pathwidth of any graph with less than 60 nodes in a reasonable running time (⩽ 10min on a standard laptop). Moreover, our algorithm achieves good performance when used as a heuristic (i.e., when returning best result found within bounded time limit). Our algorithm is not restricted to undirected graphs since it actually computes the directed pathwidth that generalizes the notion of pathwidth to digraphs.	algorithm;algorithmics;branch and bound;computation;directed graph;dynamic programming;emoticon;experiment;graph (discrete mathematics);heuristic;identifier;laptop;linear programming relaxation;pathwidth;performance;preprocessor;randomness;sagemath;simulation;time complexity;treewidth;vertex (graph theory)	David Coudert;Dorian Mazauric;Nicolas Nisse	2016	ACM Journal of Experimental Algorithmics	10.1145/2851494	pathwidth;mathematical optimization;combinatorics;discrete mathematics;graph bandwidth;mathematics;graph;branch and bound	AI	21.67899329147513	21.626146027875514	185052
16365d30539bab44ad9741d9ac3d15ac6b71039d	almost optimal intervention sets for causal discovery	directed acyclic graph;causal discovery;worst case analysis	We conjecture that the worst case number of experiments necessary and sufficient to discover a causal graph uniquely given its observational Markov equivalence class can be specified as a function of the largest clique in the Markov equivalence class. We provide an algorithm that computes intervention sets that we believe are optimal for the above task. The algorithm builds on insights gained from the worst case analysis in Eberhardt et al. (2005) for sequences of experiments when all possible directed acyclic graphs over N variables are considered. A simulation suggests that our conjecture is correct. We also show that a generalization of our conjecture to other classes of possible graph hypotheses cannot be given easily, and in what sense the algorithm is then no longer optimal.	algorithm;bell test experiments;best, worst and average case;causal filter;causal graph;computation;directed acyclic graph;experiment;graph (discrete mathematics);knowledge graph;markov chain;shapley–folkman lemma;simulation;turing completeness	Frederick Eberhardt	2008			combinatorics;discrete mathematics;computer science;mathematics;moral graph;directed acyclic graph	ML	19.429418025343494	23.228664374922225	185619
fd7cb55a161f74dcbd5406d4f86eb3af3b6d9f1d	a space-efficient algorithm for finding strongly connected components	strongly connected components;depth first search;graph algorithms	Tarjan’s algorihm for finding the strongly connected components of a directed graph is widely used and acclaimed. His original algorithm required at most v(2 + 5w) bits of storage, where w is the machine’s word size, whilst Nuutila and Soisalon-Soininen reduced this to v(1 + 4w). Many real world applications routinely operate on very large graphs where the storage requirements of such algorithms is a concern. We present a novel improvement on Tarjan’s algorithm which reduces the space requirements to v(1 + 3w) bits in the worst case. Furthermore, our algorithm has been independently integrated into the widely-used SciPy library for scientific computing.	algorithm;best, worst and average case;computational science;directed graph;graph (discrete mathematics);requirement;scipy;strongly connected component;while	David J. Pearce	2016	Inf. Process. Lett.	10.1016/j.ipl.2015.08.010	combinatorics;tarjan's strongly connected components algorithm;path-based strong component algorithm;breadth-first search;computer science;theoretical computer science;mathematics;distributed computing;strongly connected component;kosaraju's algorithm	HPC	20.18109525764394	22.32809445706413	185676
1834acb268130727690a473767cbd6b95bee804e	exploiting graph structure to cope with hard problems (dagstuhl seminar 11182)	graph classes graph algorithms np completeness width parameters approximation algorithms parameterized complexity;004	This report documents the program and the outcomes of Dagstuhl Seminar 11182 “Exploiting graph structure to cope with hard problems” which has been held in Schloss Dagstuhl – Leibniz Center for Informatics from May 1st, 2011 to May 6th, 2011. During the seminar experts with a common focus on graph algorithms presented various new results in how to attack NP-hard graph problems by using the structure of the input graph. Moreover, in the afternoon of each seminar’s day new problems have been posed and discussed. Seminar 01.–06. May, 2011 – www.dagstuhl.de/11182 1998 ACM Subject Classification G.2.1 Combinatorics, G.2.2 Graph Theory, G.2.3 Applications, F.2.2 Nonnumerical Algorithms and Problems, F.2.3 Tradeoffs among Complexity Measures	algorithm;graph theory;informatics;np-hardness	Andreas Brandstädt;Martin Charles Golumbic;Pinar Heggernes;Ross M. McConnell	2011	Dagstuhl Reports	10.4230/DagRep.1.5.29	combinatorics;clique-width;theoretical computer science;mathematics;graph;algorithm;graph rewriting	Theory	20.20175180490664	20.27956261690874	185815
4648723fd9f21de8d721ad7a27bf720f8bd15be8	approximation algorithms for grooming in optical network design	optical network;approximate algorithm;approximation algorithms;traffic grooming;network topology;cost minimization;pattern matching;optical network design;cycle packing	We study traffic grooming in optical network design, where the goal is to aggregate lowbandwidth traffic streams to utilize efficiently high-bandwidth media such as wavelength channels. More precisely, given traffic demands to be routed in a network, the design problem is to define a collection of light paths such that each demand can follow a sequence of consecutive light paths. Each light path has a unit-wavelength bandwidth, and multiple sub-wavelength demands may share a common light path. Traffic must enter and depart from a light path at its two endpoints only. Most previous work on grooming focused on the ring topology and typically involved only uniform bandwidth demands, whereas we deal with more general settings. Two objectives are considered. One is tominimize the total cost of equipment necessary to support the light paths; the other is simply to minimize the number of light paths. Even for the extremely restricted special case of a line topology and traffic demands that request half wavelength bandwidth,we show that both objectives areAPX-hard to optimize, which means we cannot approximate the optimum arbitrarily closely. On the other extreme of generality, for arbitrary network topologies and traffic demands that request arbitrary amounts of bandwidth, we show a logarithmic approximation for cost minimization and a 2-approximation for minimizing light path counts. Furthermore, we discover that the special case of half-wavelength demands has rich combinatorial properties, closely related to graph problems such as cycle packing and pattern matching problems such as interchange distance in strings. We show how to approximate both objectives up to small constant factors in this case, while similarly improving the approximation and hardness of the interchange distance problem as well. © 2011 Elsevier B.V. All rights reserved.	aggregate data;approximation algorithm;communication endpoint;duality (optimization);graph coloring;hardness of approximation;mathematical optimization;network packet;network planning and design;network topology;occam's razor;optical add-drop multiplexer;pattern matching;ring network;router (computing);routing;set packing	Spyridon Antonakopoulos;Lisa Zhang	2009	IEEE INFOCOM 2009	10.1016/j.tcs.2011.03.034	mathematical optimization;combinatorics;network traffic control;traffic grooming;computer science;pattern matching;mathematics;distributed computing;approximation algorithm;network topology	Theory	22.787063575152835	18.325698805090312	186760
9be76608a7be9c40de6e48bcfded3cd5cfe224c9	on the complexity of hub labeling		Hub Labeling (HL) is a data structure for distance oracles. Hierarchical HL (HHL) is a special type of HL, that received a lot of attention from a practical point of view. However, theoretical questions such as NP-hardness and approximation guarantee for HHL algorithms have been left aside. In this paper we study HL and HHL from the complexity theory point of view. We prove that both HL and HHL are NP-hard, and present upper and lower bounds for the approximation ratios of greedy HHL algorithms used in practice. We also introduce a new variant of the greedy HHL algorithm and a proof that it produces small labels for graphs with small highway dimension.	approximation;computational complexity theory;data structure;ethernet hub;greedy algorithm;horseland;np-hardness;oracle machine	Maxim A. Babenko;Andrew V. Goldberg;Haim Kaplan;Ruslan Savchenko;Mathias Weller	2015	CoRR		mathematical optimization;combinatorics;discrete mathematics;mathematics;algorithm	Theory	22.673982508785272	21.703201638967755	187454
32dfa7372c1fc97ed1eb38a6042cfcaf54a16225	dynamic maintenance of planar digraphs, with applications	planar subdivision;total order;contact chain;text;planar;maintenance;point location;st graph transitive closure;graphs;dynamics;dynamic data structure;transitive closure;st graph;on line algorithm;structural properties	We show that a planarst-graphG admits two total orders on the setV∪E ∪F, whereV, E, andF are respectively the set of vertices, edges, and faces ofG, with ¦V¦ =n. Assuming thatG is to be dynamically modified by means of insertions of edges and expansions of vertices (and their inverses), we exhibit anO(n)-space dynamic data structure for the maintenance of these orders such that an update can be performed in timeO(logn). The discovered structural properties of planarst-graphs provide a unifying theoretical underpinning for several applications, such as dynamic point location in planar monotone subdivisions, dynamic transitive-closure query in planarst-graphs, and dynamic contact-chain query in convex subdivisions. The presented techniques significantly outperform previously known solutions of the same problems.	data structure;directed graph;dynamic data;point location;transitive closure;vertex (geometry);monotone	Roberto Tamassia;Franco P. Preparata	1990	Algorithmica	10.1007/BF01840401	mathematical optimization;dynamics;combinatorics;discrete mathematics;topology;planar;point location;mathematics;geometry;graph;transitive closure;total order;algorithm	Theory	20.216516756414787	23.886516463927116	188202
0e813897e801231824f3e0229590f0bbf0643d7b	approximation of max independent set, min vertex cover and related problems by moderately exponential algorithms	article accepte pour publication ou publie;vertex cover;exponential time algorithms;approximate algorithm;approximation algorithms;independent set;combinatorial problems;minimum vertex cover;exact computation;polynomial time;maximum independent set	Using ideas and results from polynomial approximation and exact computation we design approximation algorithms for several NP-hard combinatorial problems achieving ratios that cannot be achieved in polynomial time (unless a very unlikely complexity conjecture is confirmed) with worst-case complexity much lower (though super-polynomial) than that of an exact computation. We study in particular max independent set, min vertex cover and then we extend results to max clique, max bipartite subgraph and max set packing.	approximation algorithm;best, worst and average case;boolean satisfiability problem;clique (graph theory);clique problem;combinatorial optimization;computation;computational complexity theory;independent set (graph theory);mathematical optimization;maxima and minima;maximum cut;maximum satisfiability problem;np-hardness;pspace;polynomial;search tree;set packing;time complexity;vertex cover;while;worst-case complexity	Nicolas Bourgeois;Bruno Escoffier;Vangelis Th. Paschos	2011	Discrete Applied Mathematics	10.1016/j.dam.2011.07.009	mathematical optimization;combinatorics;discrete mathematics;independent set;apx;feedback vertex set;vertex cover;edge cover;mathematics;hardness of approximation;approximation algorithm;algorithm	Theory	21.451945426077028	20.947177032440557	188266
a5b5ed0718feb01641c754a28e6711f188c076c2	on the approximability of the maximum interval constrained coloring problem	approximate algorithm;mass spectrometry;combinatorial problems;satisfiability;protein structure;experience base	  In the Maximum Interval Constrained Coloring problem, we are given a set of intervals on a line and a k-dimensional requirement vector for each interval, specifying how many vertices of each of k colors should appear in the interval. The objective is to color the vertices of the line with k colors so as to maximize the total weight of intervals for which the requirement is satisfied. This NP\mathcal{NP}-hard combinatorial problem arises in the interpretation of data on protein structure emanating from experiments based on  hydrogen/deuterium exchange and mass spectrometry. For constant k, we give a factor O(Ö{|</font > OPT|</font >})O(\sqrt{|{\textsc{Opt}}|})-approximation algorithm, where Opt is the smallest-cardinality maximum-weight solution. We show further that, even for k = 2, the problem remains APX-hard.    	approximation algorithm	Stefan Canzar;Khaled M. Elbassioni;Amr Elmasry;Rajiv Raman	2010		10.1007/978-3-642-17514-5_15	protein structure;mathematical optimization;combinatorics;discrete mathematics;mass spectrometry;mathematics;satisfiability	Theory	24.563877122794757	19.338688042003017	188414
7aeb1269f6f2e25055cb0ac7ca7a8feb97d076ad	maximum minimal vertex cover parameterized by vertex cover		The parameterized complexity of problems is often studied with respect to the size of their optimal solutions. However, for a maximization problem, the size of the optimal solution can be very large, rendering algorithms parameterized by it inefficient. Therefore, we suggest studying the parameterized complexity of maximization problems with respect to the size of the optimal solutions to their minimization versions. We examine this suggestion by considering the Maximum Minimal Vertex Cover (MMVC) problem, which has applications to wireless ad hoc networks and whose minimization version, Vertex Cover, is one of the most studied problems in the field of parameterized complexity. We first present tight conditional lower bounds for the running time of any algorithm for MMVC or its weighted variant. Next, we develop a parameterized approximation algorithm for MMVC and its weighted variant. The approximation ratio of this algorithm cannot be achieved by polynomial-time algorithms unless P = NP, and its running...	vertex cover	Meirav Zehavi	2015		10.1007/978-3-662-48054-0_49	edge cover;vertex;neighbourhood	Theory	21.27351016437441	19.08133158449775	188829
44611d4e98cc6fed33d48e692d2956d5bf4cd3f3	a search procedure for cyclic subsets		In this paper, a polynomial time algorithm for finding the set of all cyclic subsets in a graph is presented. The concept of cyclic subsets has already been introduced in an earlier paper. The algorithm finds cyclic subsets in a graph G by conjoining “building block” subsets of length three in V(G). We prove the correctness of this algorithm and present an asymptotic time complexity analysis of the algorithm's performance.	algorithm;analysis of algorithms;asymptotic computational complexity;correctness (computer science);polynomial;time complexity	P. Clarke	2014	CoRR		combinatorics;discrete mathematics;mathematics;algorithm	AI	20.86207975748535	24.580304714278526	189505
a494d3d168d1324bd6b59077dfd74b5c8a66909a	efficient algorithms for solving hypergraphic steiner tree relaxations in quasi-bipartite instances		We consider the Steiner tree problem in quasi-bipartite graphs, where no two Steiner vertices are connected by an edge. For this class of instances, we present an efficient algorithm to exactly solve the so called directed component relaxation (DCR), a specific form of hypergraphic LP relaxation that was instrumental in the recent break-through result by Byrka et al. [2]. Our algorithm hinges on an efficiently computable map from extreme points of the bidirected cut relaxation to feasible solutions of (DCR). As a consequence, together with [2] we immediately obtain an efficient 73/60-approximation for quasi-bipartite Steiner tree instances. We also present a particularly simple (BCR)-based random sampling algorithm that achieves a performance guarantee slightly better than 77/60.	algorithm;computable function;lagrangian relaxation;linear programming relaxation;monte carlo method;sampling (signal processing);steiner tree problem	Isaac Chun-Hai Fung;Konstantinos Georgiou;Jochen Könemann;Malcolm Sharpe	2012	CoRR		mathematical optimization;combinatorics;discrete mathematics;steiner tree problem;mathematics	Theory	22.340931239731297	20.57440529740859	189530
4f7ce7bed12e9812f8e68c98e3da9476fedb34b2	computing maximum agreement forests without cluster partitioning is folly		Computing a maximum (acyclic) agreement forest (M(A)AF) of a pair of phylogenetic trees is known to be fixed-parameter tractable; the two main techniques are kernelization and depthbounded search. In theory, kernelization-based algorithms for this problem are not competitive, but they perform remarkably well in practice. We shed light on why this is the case. Our results show that, probably unsurprisingly, the kernel is often much smaller in practice than the theoretical worst case, but not small enough to fully explain the good performance of these algorithms. The key to performance is cluster partitioning, a technique used in almost all fast M(A)AF algorithms. In theory, cluster partitioning does not help: some instances are highly clusterable, others not at all. However, our experiments show that cluster partitioning leads to substantial performance improvements for kernelization-based M(A)AF algorithms. In contrast, kernelizing the individual clusters before solving them using exponential search yields only very modest performance improvements or even hurts performance; for the vast majority of inputs, kernelization leads to no reduction in the maximal cluster size at all. The choice of the algorithm applied to solve individual clusters also significantly impacts performance, even though our limited experiment to evaluate this produced no clear winner; depth-bounded search, exponential search interleaved with kernelization, and an ILP-based algorithm all achieved competitive performance. 1998 ACM Subject Classification F.2.2 Nonnumerical Algorithms and Problems, G.2.2 Graph Theory, G.2.3 Applications	best, worst and average case;cobham's thesis;computer cluster;directed acyclic graph;experiment;exponential search;graph theory;kernelization;maximal set;parameterized complexity;phylogenetic tree;phylogenetics;time complexity	Zhijiang Li;Norbert Zeh	2017		10.4230/LIPIcs.ESA.2017.56	exponential search;computer science;phylogenetic tree;kernel (linear algebra);mathematical optimization;discrete mathematics;kernelization;theoretical computer science;cluster (physics)	Web+IR	20.317768667678543	21.369627749536505	189830
0ba0ff8e7b2992f4a9cd2d25923affe83ceb8125	a 3-approximation for the pathwidth of halin graphs	approximate algorithm;halin graph;linear time;linear width;pathwidth	We prove that the pathwidth of Halin graphs can be 3-approximated in linear time. Our approximation algorithms is based on a combinatorial result about respectful edge orderings of trees. Using this result we prove that the linear width of Halin graph is always at most three times the linear width of its skeleton.	pathwidth	Fedor V. Fomin;Dimitrios M. Thilikos	2006	J. Discrete Algorithms	10.1016/j.jda.2005.06.004	time complexity;pathwidth;mathematical optimization;combinatorics;discrete mathematics;mathematics;halin graph;treewidth	Theory	23.833749755826357	23.965754697592903	190199
f00a3e8303058ef61e81ffbcd7222425f6d979f3	improved distributed algorithms for scc decomposition	scc decomposition;strongly connected component;parallel algorithm;obf technique;parallel and distributed processing;obf;model checking;state space;parallel;experimental evaluation;distributed;distributed algorithm	We study and improve the OBF technique [1], which was used in distributed algorithms for the decomposition of a partitioned graph into its strongly connected components. In particular, we introduce a recursive variant of OBF and experimentally evaluate several different implementations of it that vary in the degree of parallelism. For the evaluation we used synthetic graphs with a few large components and graphs with many small components. We also experimented with graphs that arise as state spaces in real model checking applications. The experimental results are compared with that of other successful SCC decomposition techniques [6,5].	bisimulation;degree of parallelism;directed graph;distributed algorithm;experiment;model checking;open bioinformatics foundation;parallel computing;preprocessor;qr decomposition;recursion;recursion (computer science);recursive set;strongly connected component;synthetic intelligence;vertex (graph theory)	Jiri Barnat;Jakub Chaloupka;Jaco van de Pol	2008	Electr. Notes Theor. Comput. Sci.	10.1016/j.entcs.2008.02.001	model checking;distributed algorithm;computer science;state space;theoretical computer science;parallel;distributed computing;parallel algorithm;programming language;strongly connected component;algorithm	AI	19.45211166357545	22.26238853090031	190945
1643ff921190e59596d8d27f7d3f3131da6f6118	bounded tree-width and csp-related problems	constraint satisfaction;homomorphism;relational structure;computational complexity;polynomial time;datavetenskap datalogi;constraint satisfaction problem;inapproximability;computer science	We study the complexity of structurally restricted homomorphism and constraint satisfaction problems. For every class of relational structures C, let LHOM(C, _) be the problem of deciding whether a structure A ∈ C has a homomorphism to a given arbitrary structure B, when each element in A is only allowed a certain subset of elements of B as its image. We prove, under a certain complexity-theoretic assumption, that this li t homomorphism problemis solvable in polynomial time if and only if all structures in C have bounded tree-width. The result is extended to the connected list homomorphism, edge list homomorphism, minimum cost homomorphism and maximum solution problems. We also show an inapproximability result for the minimum cost homomorphism problem.	adjacency list;computational complexity theory;constraint satisfaction problem;decision problem;hardness of approximation;max;polynomial;time complexity;treewidth	Tommy Färnqvist;Peter Jonsson	2007		10.1007/978-3-540-77120-3_55	homomorphism;time complexity;mathematical optimization;combinatorics;discrete mathematics;constraint satisfaction;computer science;mathematics;induced homomorphism;computational complexity theory;constraint satisfaction problem;algorithm	Theory	23.167551532727458	24.183169471747714	191548
7d043297240660a97003c4f233116782b51429e0	the union of minimal hitting sets: parameterized combinatorial bounds and counting	combinatorial inference;asymptotic optimality;parameterization;counting;algorithms;hypergraph transversal;hypergraph transversals	A k-hitting set in a hypergraph is a set of at most k vertices that intersects all hyperedges. We study the union of all inclusion-minimal k-hitting sets in hypergraphs of rank r (where the rank is the maximum size of hyperedges). We show that this union is relevant for certain combinatorial inference problems and give worst-case bounds on its size, depending on r and k. For r = 2 our result is tight, and for each r ? 3 we have an asymptotically optimal bound and make progress regarding the constant factor. The exact worst-case size for r ? 3 remains an open problem. We also propose an algorithm for counting all k-hitting sets in hypergraphs of rank r. Its asymptotic runtime matches the best one known for the much more special problem of finding one k-hitting set. The results are used for efficient counting of k-hitting sets that contain any particular vertex.		Peter Damaschke;Leonid Molokov	2009	J. Discrete Algorithms	10.1016/j.jda.2009.01.003	parametrization;mathematical optimization;combinatorics;discrete mathematics;mathematics;counting;algorithm	Theory	20.439808818332537	21.727903077670955	191682
c3826a182586b07e9d157349cf1ea45bfb1d168b	better approximation algorithms for technology diffusion		Motivated by cascade effects arising in network technology upgrade processes in the Internet, Goldberg and Liu [SODA, 2013] recently introduced the following natural technology diffusion problem. Given a graph G = (V,E), and thresholds θ(v), for all v ∈ V . A vertex u activates if it is adjacent to a connected component of active nodes of size at least θ(v). The goal is to find a seed set A whose initial activation would trigger a cascade activating the entire graph. Goldberg and Liu presented an algorithm for this problem that returns a seed set of size O(rl log(n)) times that of an optimum seed set, where r is the diameter of the given graph, and l is the number of distinct thresholds used in the instance. We improve upon this result by presenting an O(min{r, l} log(n))-approximation algorithm. Our algorithm is simple and combinatorial, in contrast with the previous approach that is based on randomized rounding applied to the solution of a linear program.	approximation algorithm;connected component (graph theory);dijkstra's algorithm;graph (discrete mathematics);linear programming;random seed;randomized rounding	Jochen Könemann;Sina Sadeghian Sadeghabad;Laura Sanità	2013		10.1007/978-3-642-40450-4_54	mathematical optimization	Theory	22.473927690856627	20.555727184279558	191989
126ea329813b564090a8f2ddc31d3f9df86363eb	a new approximation algorithm for bend minimization in the kandinsky model	optimal solution;approximate algorithm;polynomial time algorithm;g 210 bends;computer experiment;planar graph	The Kandinsky model has been introduced by Fosmeier and Kaufmann in order to deal with planar orthogonal drawings of planar graphs with maximal vertex degree higher than four [7]. No polynomial-time algorithm is known for computing a (region preserving) bend minimal Kandinsky drawing. In this paper we suggest a new 2-approximation algorithm for this problem. Our extensive computational experiments [13] show that the quality of the computed solutions is better than those of its predecessors [6]. E.g., for all instances in the Rome graph benchmark library [4] it computed the optimal solution, and for randomly generated triangulated graphs with up to 800 vertices, the absolute error was less than 2 on average.	approximation algorithm;bend minimization	Wilhelm Barth;Petra Mutzel;Canan Yildiz	2006		10.1007/978-3-540-70904-6_33	mathematical optimization;combinatorics;discrete mathematics;computer experiment;mathematics;planar graph	Theory	24.47336308367712	19.231665389827587	192112
0f45918d059e167134fd48eb6d5dcc386cde0ff4	an fpt 2-approximation for tree-cut decomposition	fixed-parameter tractable algorithm;tree-cut width;approximation algorithm	The tree-cut width of a graph is a graph parameter defined by Wollan (J Combin Theory, Ser B, 110:47–66, 2015) with the help of tree-cut decompositions. In certain cases, tree-cut width appears to be more adequate than treewidth as an invariant that, when bounded, can accelerate the resolution of intractable problems. While designing algorithms for problems with bounded tree-cut width, it is important to have a parametrically tractable way to compute the exact value of this parameter or, at least, some constant approximation of it. In this paper we give a parameterized 2-approximation algorithm for the computation of tree-cut width; for an input n-vertex graph G and an integer w, our algorithm either confirms that the tree-cut width of G is more than w or returns a tree-cut decomposition of G certifying that its tree-cut width is at most 2w, in time $$2^{O(w^2\log w)} \cdot n^2$$ 2 O ( w 2 log w ) · n 2 . Prior to this work, no constructive parameterized algorithms, even approximated ones, existed for computing the tree-cut width of a graph. As a consequence of the Graph Minors series by Robertson and Seymour, only the existence of a decision algorithm was known.	approximation algorithm;cobham's thesis;computation;graph minor;parameterized complexity;resolution (logic);treewidth	Eun Jung Kim;Sang-il Oum;Christophe Paul;Ignasi Sau;Dimitrios M. Thilikos	2016	Algorithmica	10.1007/s00453-016-0245-5	graph power;mathematical optimization;combinatorics;discrete mathematics;branch-decomposition;null graph;distance-regular graph;simplex graph;mathematics;voltage graph;geometry;tree-depth;partial k-tree;graph minor;complement graph;algorithm;string graph;strength of a graph;tree decomposition	Theory	22.619016351681985	23.35562288282902	192308
ac33e024d20c91108a53a178a7ac8515a4e647f4	subexponential algorithms for unique games and related problems	spectral methods;eigenvalues and eigenfunctions;subexponential time approximation algorithm;induced graph;graph theory;subexponential algorithms;max cut;optimisation;multicut;vertex cover;small set expansion;complexity theory;approximation algorithms;sparsest cut;unique games;polynomial;constraint satisfaction problems;eigenvalues;polynomials;graph decompositions;stochastic games computational complexity eigenvalues and eigenfunctions graph theory optimisation polynomial approximation;constraint satisfaction problems approximation algorithms unique games subexponential algorithms spectral methods eigenvalues graph decompositions;stochastic adjacency matrix;computational complexity;np hard problems;games;unique games conjecture states;games approximation algorithms approximation methods eigenvalues and eigenfunctions polynomials graph theory complexity theory;nontrivial approximation ratio;approximation methods;stochastic games;graph decomposition;polynomial approximation;eigenvalues subexponential time approximation algorithm polynomial multicut small set expansion max cut sparsest cut vertex cover unique games conjecture states np hard problems nontrivial approximation ratio graph decomposition stochastic adjacency matrix induced graph	We give a sub exponential time approximation algorithm for the \textsc{Unique Games} problem. The algorithms run in time that is exponential in an arbitrarily small polynomial of the input size, $n^{\epsilon}$. The approximation guarantee depends on~$\epsilon$, but not on the alphabet size or the number of variables. We also obtain a sub exponential algorithms with improved approximations for \textsc{Small-Set Expansion} and \textsc{Multicut}. For \textsc{Max Cut}, \textsc{Sparsest Cut}, and \textsc{Vertex Cover}, we give sub exponential algorithms with improved approximations on some interesting subclasses of instances. Khot's Unique Games Conjecture (UGC) states that it is NP-hard to achieve approximation guarantees such as ours for the \textsc{Unique Games}. While our results stop short of refuting the UGC, they do suggest that \textsc{Unique Games} is significantly easier than NP-hard problems such as \textsc{Max 3Sat}, \textsc{Max 3Lin}, \textsc{Label Cover} and more, that are believed not to have a sub exponential algorithm achieving a non-trivial approximation ratio. The main component in our algorithms is a new result on graph decomposition that may have other applications. Namely we show that for every $\epsilon>0$ and every regular $n$-vertex graph~$G$, by changing at most $\epsilon$ fraction of $G$'s edges, one can break~$G$ into disjoint parts so that the stochastic adjacency matrix of the induced graph on each part has at most $ n^{\epsilon}$ eigenvalues larger than $1-\eta$, where $\eta$ depends polynomially on $\epsilon$.		Sanjeev Arora;Boaz Barak;David Steurer	2010		10.1109/FOCS.2010.59	mathematical optimization;combinatorics;discrete mathematics;graph theory;mathematics;approximation algorithm;algorithm;polynomial	Theory	22.24169601801228	22.615476508535647	192730
318ace3c27e27eed295fa417066631bfc6e04634	an approach for the steiner problem in directed graphs	heuristic method;upper bound;directed graph;lower bound	We present a scheme to solve the Steiner problem in directed graphs using a heuristic method to obtain upper bounds and thek shortest arborescences algorithm to compute lower bounds. We propose to combine these ideas in an enumerative algorithm. Computational results are presented for both thek shortest arborescences algorithm and the heuristic method, including reduction tests for the problem.	directed graph;steiner tree problem	Nelson Maculan;Paulo Souza;Alfredo Candia-Véjar	1991	Annals OR	10.1007/BF02071983	mathematical optimization;combinatorics;discrete mathematics;mathematics;upper and lower bounds	Theory	22.4913017999743	20.37461848118778	193565
0c9bd2e2f7368b6f0df8b7ec1dcb5f4911ab5b7b	proving np-hardness for clique-width ii: non-approximability of clique-width		Clique-width is a graph parameter that measures in a certain sense the complexity of a graph. Hard graph problems (e.g., problems expressible in Monadic Second Order Logic with second-order quantification on vertex sets, that includes NP-hard problems) can be solved efficiently for graphs of certified small clique-width. It is widely believed that determining the clique-width of a graph is NP-hard; in spite of considerable efforts, no NP-hardness proof has been found so far. We give the first hardness proof. We show that the clique-width of a given graph cannot be absolutely approximated in polynomial time unless P = NP. We also show that, given a graph G and an integer k, deciding whether the clique-width of G is at most k is NP-complete. This solves a problem that has been open since the introduction of clique-width in the early 1990s.	approximation algorithm;clique-width;graph (discrete mathematics);hardness of approximation;np-completeness;np-hardness;p versus np problem;polynomial;time complexity	Michael R. Fellows;Frances A. Rosamond;Udi Rotics;Stefan Szeider	2005	Electronic Colloquium on Computational Complexity (ECCC)		graph power;combinatorics;discrete mathematics;graph bandwidth;null graph;graph property;degree;regular graph;clique-width;simplex graph;forbidden graph characterization;aperiodic graph;cubic graph;graph factorization;mathematics;voltage graph;vertex-transitive graph;complement graph;line graph;algorithm;string graph;circulant graph	Theory	22.36852332650402	23.520722674722382	193853
64643e6de1562cf3f780616eb647f872d38bd1ba	fast distributed approximations in planar graphs	distributed algorithm;planar graph	We give deterministic distributed algorithms that given δ > 0 find in a planar graph G, (1 ± δ)-approximations of a maximum independent set, a maximum matching, and a minimum dominating set. The algorithms run in O(log∗ |G|) rounds. In addition, we prove that no faster deterministic approximation is possible and show that if randomization is allowed it is possible to beat the lower bound for deterministic algorithms.	approximation;distributed algorithm;dominating set;independent set (graph theory);matching (graph theory);planar graph	Andrzej Czygrinow;Michal Hanckowiak;Wojciech Wawrzyniak	2008		10.1007/978-3-540-87779-0_6	distributed algorithm;mathematical optimization;combinatorics;discrete mathematics;computer science;planar straight-line graph;mathematics;distributed computing;planar graph	Theory	21.846582120502834	21.693900471262573	194888
0c606781069dd4f607af3faa27acfa80c4123cae	counting and enumerating independent sets with applications to knapsack problems		We introduce methods to count and enumerate all maximal independent, all maximum independent sets, and all independent sets in threshold graphs and k-threshold graphs. Within threshold graphs and k-threshold graphs independent sets correspond to feasible solutions in related knapsack instances. We give several characterizations for knapsack instances and multidimensional knapsack instances which allow an equivalent graph. This allows us to solve special knapsack instances as well as special multidimensional knapsack instances for fixed number of dimensions in polynomial time. We also conclude lower bounds on the number of necessary bins within several bin packing problems.	bin packing problem;clique (graph theory);complement graph;enumerated type;independent set (graph theory);knapsack problem;maximal set;set packing;time complexity;vertex (geometry)	Frank Gurski;Carolin Rehs	2017	CoRR		discrete mathematics;time complexity;combinatorics;continuous knapsack problem;mathematics;knapsack problem;bin packing problem;graph	Theory	23.77197176965913	21.957807929947467	194947
c2d9b39f890ce248be318629a562d3624ca35640	on the expected performance of path compression algorithms	compression algorithm;path compression;spanning tree model;equivalence program;expected running time;set merging	We consider the expected running time of an equivalence algorithmusing the pathcompression rule (but not the weighting rule). An O(n) expected running time is proved for the execution of a random equivalence program in the Spanning Tree Model.	algorithm	Andrew Chi-Chih Yao	1985	SIAM J. Comput.	10.1137/0214010	data compression;mathematical optimization;combinatorics;discrete mathematics;spanning tree;minimum spanning tree;mathematics;statistics	Theory	18.735982025127054	25.15645129504675	195228
4e3bd21eed7ea469d852d2b30d5bd4b52ee5d9f5	polynomial constraint satisfaction problems, graph bisection, and the ising partition function	partition function;optimal solution;discrete optimization;score function;gibbs sampling;efficient algorithm;dynamic programming algorithm;discrete mathematics;constraint satisfaction;polynomial factorization;qa75 electronic computers computer science;exact algorithm;ising model;generating function;tree decomposition;matrix multiplication;constraint satisfaction problem;maximum independent set;exponential time algorithm	We introduce a problem class we call Polynomial Constraint Satisfaction Problems, or PCSP. Where the usual CSPs from computer science and optimization have real-valued score functions, and partition functions from physics have monomials, PCSP has scores that are arbitrary multivariate formal polynomials, or indeed take values in an arbitrary ring.  Although PCSP is much more general than CSP, remarkably, all (exact, exponential-time) algorithms we know of for 2-CSP (where each score depends on at most 2 variables) extend to 2-PCSP, at the expense of just a polynomial factor in running time. Specifically, we extend the reduction-based algorithm of Scott and Sorkin [2007]; the specialization of that approach to sparse random instances, where the algorithm runs in polynomial expected time; dynamic-programming algorithms based on tree decompositions; and the split-and-list matrix-multiplication algorithm of Williams [2004].  This gives the first polynomial-space exact algorithm more efficient than exhaustive enumeration for the well-studied problems of finding a maximum bisection of a graph, and calculating the partition function of an Ising model. It also yields the most efficient algorithm known for certain instances of counting and/or weighted Maximum Independent Set. Furthermore, PCSP solves both optimization and counting versions of a wide range of problems, including all CSPs, and thus enables samplers including uniform sampling of optimal solutions and Gibbs sampling of all solutions.	average-case complexity;computer science;constraint satisfaction problem;cryptographic service provider;dynamic programming;exact algorithm;gibbs sampling;graph partition;independent set (graph theory);ising model;mathematical optimization;monomial;multiplication algorithm;partial template specialization;partition function (mathematics);polynomial;sampling (signal processing);sparse matrix;time complexity;whole earth 'lectronic link	Alex D. Scott;Gregory B. Sorkin	2009	ACM Trans. Algorithms	10.1145/1597036.1597049	ising model;discrete optimization;mathematical optimization;generating function;combinatorics;discrete mathematics;independent set;gibbs sampling;constraint satisfaction;matrix multiplication;dynamic programming;mathematics;factorization of polynomials;score;partition function;constraint satisfaction problem;algorithm;tree decomposition	Theory	18.362662287904698	19.230976008997363	196095
4454e4b818cb14ce3cf8934b5d1f5c96d920220d	top-d rank aggregation in web meta-search engine - (extended abstract)	approximate algorithm;ptas;rank aggregation;kendall τ distance;coherence;np hard	In this paper, we consider the rank aggregation problem for information retrieval over Web making use of a kind of metric, the coherence, which considers both the normalized Kendall-τ distance and the size of overlap between two partial rankings. In general, the top-d coherence aggregation problem is defined as: given collection of partial rankings Π = {τ1, τ2, . . ., τK}, how to find a final ranking π with specific length d, which maximizes the total coherence Φ(π, Π) = Σi=1K Φ(π, τi). The corresponding complexity and algorithmic issues are discussed in this paper. Our main technical contribution is a polynomial time approximation scheme (PTAS) for a restricted top-d coherence aggregation problem.		Qizhi Fang;Han Xiao;Shanfeng Zhu	2010		10.1007/978-3-642-14553-7_6	mathematical optimization;combinatorics;discrete mathematics;mathematics	Theory	20.86044684233034	19.574767703500587	196221
cc9598998fc192da3017106fda712040e693da50	approximation and exact algorithms for special cases of connected f-factors		Given an edge weighted undirected graph (G=(V,E)) with (|V|=n), and a function (f:Vrightarrow mathbb {N}), we consider the problem of finding a connected f-factor in G. In particular, for each constant (c ge 2), we consider the case when (f(v)ge frac{n}{c}), for all v in V. We characterize the set of graphs that have a connected f-factor for (f(v) ge frac{n}{3}), for every v in V, and this gives polynomial time algorithm for the decision version of the problem. Extending the techniques we solve the minimization version. On the class of instances where the edge weights in G form a metric and (f(v) ge frac{n}{c}), c is a fixed value greater than 3, we give a PTAS. For each (c ge 3) and (epsilon u003e 0), our algorithm takes as input a metric weighted undirected graph G and a function (f:Vrightarrow mathbb {N}) such that (f(v) ge frac{n}{c}), for every v in V, and computes a ((1+epsilon ))-approximation to the minimum weighted connected f-factor in polynomial time.	approximation	N. S. Narayanaswamy;C. S. Rahul	2015		10.1007/978-3-319-20297-6_23	approximation algorithm	Theory	23.82247575146155	19.981549756197982	196443
86bf12122d13c1eb664a3502f5d2d50411d7477e	secluded path via shortest path		We provide several new algorithmic results for the secluded path problem, specifically approximation and optimality results for the static algorithm of [3, 5], and an extension (h-Memory) of it based on de Bruijn graphs, when applied to bounded degree graphs and some other special graph classes which can model wireless communication and line-of-sight settings. Our primary result is that h-Memory is a PTAS for degree-∆ unweighted, undirected graphs, providing a ⌈√ ∆+1 h+1 ⌉ -approximation in time O(hn logn); in particular, 0-Memory (i.e., static) provides a √ ∆+ 1-approximation (i.e., = √ ∆+ 1 − 1), tightening the previous analysis of this algorithm, and ∆-Memory is optimal (i.e., = 0), and is faster than the known optimal algorithm for this setting [3]. We also show that 0-Memory and 1-Memory give constant approximations for unit-disk graphs and planar graphs, and that an extension of h-Memory solves many other tessellation graphs. Finally, we prove that the problem is NP-hard on node-weighted graphs of degree 3.	algorithm;approximation;de bruijn graph;graph (discrete mathematics);line-of-sight (missile);np-hardness;ptas reduction;pathfinding;planar graph;shortest path problem	Matthew P. Johnson;Ou Liu;George Rabanca	2014		10.1007/978-3-319-09620-9_10	combinatorics;de bruijn sequence;mathematics;shortest path problem;bounded function;graph	Theory	22.029951167563834	21.947548773940323	196580
09d3c61c0678457ee5dd772550502bb6e9b6e3d7	bidimensional structures: algorithms, combinatorics and logic (dagstuhl seminar 13121)	004;graph minors;parameterized algorithms;treewidth;graph minors treewidth graph algorithms parameterized algorithms;graph algorithms	We provide a report on the Dagstuhl Seminar 13121: Bidimensional Structures: Algorithms, Combinatorics and Logic held at Schloss Dagstuhl in Wadern, Germany between Monday 18 and Friday 22 of March 2013. The report contains the motivation of the seminar, the abstracts of the talks given during the seminar, and the list of open problems. Seminar 18.–22. March, 2013 – www.dagstuhl.de/13121 1998 ACM Subject Classification F.2.2 Nonnumerical Algorithms and Problems, G.2.2 Graph Theory	algorithm;graph theory	Erik D. Demaine;Fedor V. Fomin;Mohammad Taghi Hajiaghayi;Dimitrios M. Thilikos	2013	Dagstuhl Reports	10.4230/DagRep.3.3.51	combinatorics;discrete mathematics;clique-width;mathematics;partial k-tree;algorithm	Theory	20.073985429174353	20.3214886040294	196708
5fcf6caf1257ec494489ceefbe9700d567f292ec	parameterized complexity of coloring problems: treewidth versus vertex cover	vertex cover;parameterized complexity;list coloring;channel assignment	We compare the fixed parameter complexity of various variants of coloring problems (including List Coloring, Precoloring Extension, Equitable Coloring, L ( p ,1) -Labeling and Channel Assignment ) when parameterized by treewidth and by vertex cover number. In most (but not all) cases we conclude that parametrization by the vertex cover number provides a significant drop in the complexity of the problems.	claw-free graph;claw-free permutation;microsoft kin;parameterized complexity;treewidth;vertex cover	Jirí Fiala;Petr A. Golovach;Jan Kratochvíl	2009		10.1007/978-3-642-02017-9_25	parameterized complexity;mathematical optimization;combinatorics;discrete mathematics;fractional coloring;vertex cover;complete coloring;mathematics;list coloring;algorithm	HPC	23.481374575210783	24.574582733075342	198008
3fbaabe0adf80b9dee0e5efce1ab8125eb9bf0a6	an improved approximation ratio for the covering steiner problem	network design;approximate algorithm;covering problem;integer program;steiner tree;set cover	In theCovering Steinerproblem, we are given an undirected graph with edgecosts, and some subsets of vertices called groups, with each group being equipped with a non-negative integer value (called its requirement ); the problem is to find a minimum-cost tree which spans at least the required number of vertices from every group. The Covering Steiner problem is a common generalization of the k-MST and Group Steiner problems; indeed, when all the vertices of the graph lie in one group with a requirement of k, we get thek-MST problem, and when there are multiple groups with unit requirements, we obtain the Group Steiner problem. While many covering problems (e.g., the covering integer programs such as set cover) become easier to approximate as the requirements increase, the Covering Steiner problem ∗A preliminary version of this work appears in the Proc. Foundations of Software Technology & Theoretical Computer Science, 2003. Part of this work was done while the authors were at Lucent Bell Laboratories, 600-700 Mountain Avenue, Murray Hill, NJ 07974-0636, USA. †The research of this author was supported in part by a National Science Foundation CAREER award CCF-0448095, and by an Alfred P. Sloan Fellowship. ‡The research of this author was supported in part by the National Science Foundation under Grant No. 0208005 and ITR Award CNS-0426683. ACM Classification: C.2.0, F.2.2, G.1.6, G.3 AMS Classification: 68W20, 68W25, 90C59	acm computing classification system;approximation algorithm;covering problems;graph (discrete mathematics);linear programming;requirement;set cover problem;steiner tree problem;theoretical computer science;vertex (geometry)	Anupam Gupta;Aravind Srinivasan	2006	Theory of Computing	10.4086/toc.2006.v002a003	mathematical optimization;network planning and design;combinatorics;discrete mathematics;covering problems;steiner tree problem;computer science;mathematics;set cover problem;algorithm	Theory	22.282189047070336	19.134023060375107	198624
f5cb46be19dd9dff98184d454fe3b381648e814e	the complexity of degree anonymization by vertex addition	kernelization;parameterized complexity;degree constrained editing;fixed parameter tractability;np hardness;graph modification	"""Motivated by applications in privacy-preserving data publishing, we study the problem of making an undirected graph k-anonymous by adding few vertices (together with some incident edges). That is, after adding these """"dummy vertices"""", for every vertex degree d appearing in the resulting graph, there shall be at least k vertices with degree d. We explore three variants of vertex addition (justified by real-world considerations) and study their (parameterized) computational complexity. We derive mostly intractability results, even for very restricted cases (including trees and bounded-degree graphs) but also obtain some encouraging fixed-parameter tractability results. Degree anonymization by vertex addition is computationally intractable in general.Posing structural restrictions on the edges connected to the new vertices seems to make the problem even harder.There are some tractable special cases, for example, when the number of new edges is small."""		Robert Bredereck;Vincent Froese;Sepp Hartung;André Nichterlein;Rolf Niedermeier;Nimrod Talmon	2015	Theor. Comput. Sci.	10.1016/j.tcs.2015.07.004	loop;parameterized complexity;mathematical optimization;combinatorics;discrete mathematics;multiple edges;feedback vertex set;level structure;vertex cover;degree;computer science;pseudoforest;frequency partition of a graph;hypercube graph;cycle graph;vertex;path graph;mathematics;path;kernelization;neighbourhood;algorithm	Theory	22.932523967321114	22.53730003806567	198634
ba25fc806d62231523081a36f417b3667ae11f2a	weighted efficient domination in classes of p6-free graphs		In a graph G, an efficient dominating set is a subset D of vertices such that D is an independent set and each vertex outside D has exactly one neighbor in D. The Minimum Weight Efficient Dominating Set (Min-WED) problem asks for an efficient dominating set of total minimum weight in a given vertex-weighted graph; the Maximum Weight Efficient Dominating Set (Max-WED) problem is defined similarly. The Min-WED/Max-WED is known to be NP -complete for P7-free graphs, and is known to be polynomial time solvable for P5-free graphs. However, the computational complexity of the min-WED/max-WED problem is unknown for P6free graphs. In this paper, we show that the Min-WED/Max-WED problem can be solved in polynomial time for two subclasses of P6free graphs, namely for (P6, S1,1,3)-free graphs, and for (P6, bull)-free graphs.	computational complexity theory;decision problem;dominating set;independent set (graph theory);maxima and minima;minimum weight;minimum-weight triangulation;p6 (microarchitecture);time complexity	Andreas Brandstädt;T. Karthick	2015	CoRR			Theory	24.22489462427683	21.82339500331396	198649
100163111dc9a173ade5efd6f8e6b24bc1ad230b	computing maximum non-crossing matching in convex bipartite graphs	large m;algorithms;n vertex;n logn;m edge;convex bipartite graph;convex bipartite graphs;data structures;computing maximum non-crossing matching;previous best algorithm;previous solution;time algorithm;worst case;maximum non-crossing matching;maximum matching	We consider computing a maximum non-crossing matching in convex bipartite graphs. For a convex bipartite graph of  n  vertices and  m  edges, we present an  O  ( n  log n  ) time algorithm for finding a maximum non-crossing matching in the graph. The previous best algorithm for this problem takes  O  ( m  + n  log n  ) time. Since  m  =Θ( n  2) in the worst case, our result improves the previous solution for large  m  .		Danny Ziyi Chen;Xiaomin Liu;Haitao Wang	2012		10.1007/978-3-642-29700-7_10	mathematical optimization;complete bipartite graph;factor-critical graph;combinatorics;discrete mathematics;bipartite graph;3-dimensional matching;hopcroft–karp algorithm;mathematics;blossom algorithm;biregular graph;matching	ML	23.850320407662068	22.34352311885425	198843
6bfb6a5906c0b50ab6f4569258abb9e6ae6bbf45	perfect phylogeny and haplotype assignment	approximate algorithm;maximum likelihood;linear time algorithm;set covering problem;probabilistic model;relative error;exact algorithm;polynomial time;greedy algorithm;entropy;missing data;missing values;covering problem;perfect phylogeny;phasing;haplotypes	This paper is concerned with the reconstruction of perfect phylogenies from binary character data with missing values, and related problems of inferring complete haplotypes from haplotypes or genotypes with missing data. In cases where the problems considered are NP-hard we assume a rich data hypothesis under which they become tractable. Natural probabilistic models are introduced for the generation of character vectors, haplotypes or genotypes with missing data, and it is shown that these models support the rich data hypothesis. The principal results include: A near-linear time algorithm for inferring a perfect phylogeny from binary character data (or haplotype data) with missing values, under the rich data hypothesis; A quadratic-time algorithm for inferring a perfect phylogeny from genotype data with missing values with high probability, under certain distributional assumptions; Demonstration that the problems of maximum-likelihood inference of complete haplotypes from partial haplotypes or partial genotypes can be cast as minimum-entropy disjoint set cover problems; In the case where the haplotypes come from a perfect phylogeny, a representation of the set cover problem as minimum-entropy covering of subtrees of a tree by nodes; An exact algorithm for minimum-entropy subtree covering, and demonstration that it runs in polynomial time when the subtrees have small diameter; Demonstration that a simple greedy approximation algorithm solves the minimum-entropy subtree covering problem with relative error tending to zero when the number of partial haplotypes per complete haplotype is large; An asymptotically consistent method of estimating the frequencies of the complete haplotypes in a perfect phylogeny, under an iid model for the distribution of missing data; Computational results on real data demonstrating the effectiveness of a the greedy algorithm for inferring haplotypes from genotypes with missing data, even in the absence of a perfect phylogeny..	approximation algorithm;approximation error;cobham's thesis;computation;covering problems;exact algorithm;greedy algorithm;missing data;np-hardness;phylogenetic tree;phylogenetics;polynomial;set cover problem;time complexity;tree (data structure);with high probability	Eran Halperin;Richard M. Karp	2004		10.1145/974614.974617	mathematical optimization;combinatorics;missing data;mathematics;statistics	Comp.	18.05918046696979	22.032305793451748	199532
