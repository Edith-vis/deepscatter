id	title	keywords	abstract	entities	authors	year	journal	doi	fos	area	x	y	ix
0bfa6cefb44ca1526a75b2601b3e3e5756bcb3d3	the alternating stock size problem and the gasoline puzzle		Given a set S of integers whose sum is zero, consider the problem of finding a permutation of these integers such that (i) all prefix sums of the ordering are nonnegative and (ii) the maximum value of a prefix sum is minimized. Kellerer et al. call this problem the stock size problem and showed that it can be approximated to within 3/2. They also showed that an approximation ratio of 2 can be achieved via several simple algorithms.  We consider a related problem, which we call the alternating stock size problem, where the numbers of positive and negative integers in the input set S are equal. The problem is the same as that shown earlier, but we are additionally required to alternate the positive and negative numbers in the output ordering. This problem also has several simple 2-approximations. We show that it can be approximated to within 1.79.  Then we show that this problem is closely related to an optimization version of the gasoline puzzle due to Lovász, in which we want to minimize the size of the gas tank necessary to go around the track. We present a 2-approximation for this problem, using a natural linear programming relaxation whose feasible solutions are doubly stochastic matrices. Our novel rounding algorithm is based on a transformation that yields another doubly stochastic matrix with special properties, from which we can extract a suitable permutation.	apx;approximation algorithm;closing (morphology);doubly stochastic model;linear programming relaxation;mathematical optimization;optimization problem;ptas reduction;prefix sum;rounding;stochastic matrix	Alantha Newman;Heiko Röglin;Johanna Seif	2018	ACM Trans. Algorithms	10.1145/3178539	optimization problem;mathematical optimization;partition problem;combinatorics;computer science;cutting stock problem;mathematics;subset sum problem;algorithm	Theory	18.716224085811216	13.63624497493298	176936
ac91430c5f2610f73e7ec5598e2d469358781b22	a factor 1/2 approximation algorithm for two-stage stochastic matching problems	probleme adaptation stochastique;adaptacion;approximate algorithm;approximation algorithms;probleme np complet;approximation algorithm;bipartite matching;programmation stochastique;maximum weight matching;optimisation combinatoire;matching;adaptation;algoritmo aproximacion;problema np completo;algorithme approximation;combinatorial optimization;stochastic programming;programacion estocastica;np complete problem;optimizacion combinatoria	We introduce the two-stage stochastic maximum-weight matching problem and demonstrate that this problem is NP-complete. We give a factor 1 2 approximation algorithm and prove its correctness. We also provide a tight example to show the bound given by the algorithm is exactly 1 2 . Computational results on some two-stage stochastic bipartite matching instances indicate that the performance of the approximation algorithm appears to be substantially better than its worst-case performance. 2004 Elsevier B.V. All rights reserved.	approximation algorithm;best, worst and average case;combinatorial optimization;computation;correctness (computer science);decision problem;linear programming;matching (graph theory);mathematical optimization;minimum-weight triangulation;np-completeness;optimization problem;stochastic gradient descent;stochastic programming	Nan Kong;Andrew J. Schaefer	2006	European Journal of Operational Research	10.1016/j.ejor.2004.10.011	matching;stochastic programming;mathematical optimization;combinatorics;polynomial-time approximation scheme;np-complete;bipartite graph;3-dimensional matching;mathematics;minimax approximation algorithm;approximation algorithm;algorithm;adaptation	Theory	21.359643773637853	13.725934954721028	177567
0a82c4d5f14634509dbb18f7e0b7654fde5b5f74	a new formulation and relaxation of the simple plant location problem	location problem;discrete mathematics;simple plant location problem;operations research;location;relaxation	In this paper a new formulation of the simple plant location problem (SPLP) is given that uses the style of Sharma and Sharma (European Journal of Operational Research, 122(3), 37–48). When the integer restrictions are relaxed, it results in a new relaxation of SPLP that is different from the already well known “strong” and “weak” relaxation of SPLP. It is shown that the bound given by the new relaxation is worse than the bound given by “strong relaxation” of SPLP. However, a numerical example illustrates that the bound given by the new relaxation can at times be better than the bound given by “weak relaxation” (already known) of SPLP. In this paper a new proof [which is different from the one given by Bilde and Krarup (Annals of Discrete Mathematics, 1, 79–97)] is given to establish relative strengths of various relaxations of SPLP.		R. R. K. Sharma;A. Muralidhar	2009	APJOR	10.1142/S0217595909002122	mathematical optimization;combinatorics;relaxation;mathematics;mathematical economics;location	Theory	23.689510357881723	14.867282218590862	177695
e9442e7546715ef2c9a52cc7e4ccb01007218c63	expressing combinatorial optimization problems by linear programs	combinatorial optimization problem;linear program	Abstract   Many combinatorial optimization problems call for the optimization of a linear function over a certain polytope. Typically, these polytopes have an exponential number of facets. We explore the problem of finding small linear programming formulations when one may use any new variables and constraints. We show that expressing the matching and the Traveling Salesman Problem by a symmetric linear program requires exponential size. We relate the minimum size needed by a LP to express a polytope to a combinatorial parameter, point out some connections with communication complexity theory, and examine the vertex packing polytope for some classes of graphs.	combinatorial optimization;linear programming	Mihalis Yannakakis	1991	J. Comput. Syst. Sci.	10.1016/0022-0000(91)90024-Y	optimization problem;mathematical optimization;combinatorics;discrete mathematics;linear bottleneck assignment problem;cross-entropy method;combinatorial optimization;computer science;linear programming;birkhoff polytope;mathematics;vertex enumeration problem;polytope model;quadratic assignment problem	Theory	22.950587164123192	14.95949791532675	178359
48afcbb7064753697c662500761ee3f620598614	strong inequalities for capacitated survivable network design problems	multicommodite;network design;polyedre;desigualdad;inequality;poliedro;inegalite;conception;polyhedron;subestructura;reseau;red;subsystem;survivable network design problem;programacion mixta entera;sous systeme;sous structure;substructure;diseno;programmation partiellement en nombres entiers;mixed integer programming;design;subsistema;network	We present several classes of facet-deening inequalities to strengthen polyhedra arising as subsystems of network design problems with survivability constraints. These problems typically involve assigning capacities to a network with multicommodity demands, such that after a vertex-or edge-deletion at least some prescribed fraction of each demand can be routed.	network planning and design;polyhedron;routing	Daniel Bienstock;Gabriella Muratore	2000	Math. Program.	10.1007/PL00011390	design;combinatorics;integer programming;substructure;inequality;mathematics;geometry;algorithm;polyhedron	Theory	22.528390128033696	12.63212463768103	179063
71c354af4165c6ddfee5402d84cf0484aec5d249	inapproximability results for the inverse shortest paths problem with integer lengths and unique shortest paths	camino mas corto;shortest path;routing protocols;chemin minimal;camino grafo;complexite calcul;graph path;telecommunication network;plus court chemin;longest path;problema np duro;terminal;systeme ouvert;problema inverso;routage reseau;network routing;approximation;inverse shortest paths;shortest path routing;np hard problem;arc length;complejidad computacion;planificacion;inverse problem;longueur arc;probleme np difficile;computational complexity;red telecomunicacion;directed graph;graphe oriente;camino minima;reseau telecommunication;chemin graphe;planning;grafo orientado;protocole routage;planification;open systems;sistema abierto;probleme inverse;longitud de arco;minimal path;shortest path problem	We study the complexity of two Inverse Shortest Paths (ISP) problems with integer arc lengths and the requirement for uniquely determined shortest paths. Given a collection of paths in a directed graph, the task is to find positive integer arc lengths such that the given paths are uniquely determined shortest paths between their respective terminals. The first problem seeks for arc lengths that minimize the length of the longest of the prescribed paths. In the second problem, the length of the longest arc is to be minimized. We show that i t is NP-hard to approximate the minimal longest path length within a factor less than 8/7 or the minimal longest arc length within a factor less than 9/8. This answers the (previously) open question whether these problems are NP-hard or not. We also present a simple algorithm that achieves an O(|V |)-approximation guarantee for both variants. Both ISP problems arise in the planning of telecommunication networks with shortest path routing protocols. Our results imply that i t is NP-hard to decide whether a given path set can be realized with a real shortest path routing protocol such as OSPF, IS-IS, or RIP.	approximation algorithm;directed graph;hardness of approximation;longest path problem;np-hardness;routing;shortest path problem	Andreas Bley	2007	Networks	10.1002/net.20163	private network-to-network interface;mathematical optimization;combinatorics;constrained shortest path first;longest path problem;shortest job next;floyd–warshall algorithm;average path length;computer science;euclidean shortest path;yen's algorithm;mathematics;shortest path problem;k shortest path routing;shortest path faster algorithm;algorithm	Theory	23.02791668317069	17.271232324572942	179231
881fbbf8e6b801f87cc237d2cc43188b11e9fa09	a general approximation method for bicriteria minimization problems		We present a general technique for approximating bicriteria minimization problems with positive-valued, polynomially computable objective functions. Given 0 < ≤ 1 and a polynomial-time α-approximation algorithm for the corresponding weighted sum problem, we show how to obtain a bicriteria (α · (1 + 2 ), α · (1 + 2 ))-approximation algorithm for the budget-constrained problem whose running time is polynomial in the encoding length of the input and linear in 1 . Moreover, we show that our method can be extended to compute an (α · (1 + 2 ), α · (1 + 2 ))-approximate Pareto curve under the same assumptions. Our technique applies to many minimization problems to which most previous algorithms for computing approximate Pareto curves cannot be applied because the corresponding gap problem is NP-hard to solve. For maximization problems, however, we show that approximation results similar to the ones presented here for minimization problems are impossible to obtain in polynomial time unless P = NP.	approximation algorithm;computable function;entropy maximization;np-hardness;p versus np problem;pareto efficiency;polynomial;time complexity;weight function	Pascal Halffmann;Stefan Ruzika;Clemens Thielen;David Willems	2017	Theor. Comput. Sci.	10.1016/j.tcs.2017.07.003	mathematical optimization;combinatorics;calculus;mathematics	Theory	22.668657241715774	14.818176245474833	179341
18d9c6b9748683f811a026dd83c61e6d4386cd38	submodular secretary problems: cardinality, matching, and linear constraints	cs ds;data structures and algorithms;computer science	We study various generalizations of the secretary problem with submodular objective functions. Generally, a set of requests is revealed step-by-step to an algorithm in random order. For each request, one option has to be selected so as to maximize a monotone submodular function while ensuring feasibility. For our results, we assume that we are given an offline algorithm computing an α-approximation for the respective problem. This way, we separate computational limitations from the ones due to the online nature. When only focusing on the online aspect, we can assume α = 1. In the submodular secretary problem, feasibility constraints are cardinality constraints, or equivalently, sets are feasible if and only if they are independent sets of a k-uniform matroid. That is, out of a randomly ordered stream of entities, one has to select a subset of size k. For this problem, we present a 0.31α-competitive algorithm for all k, which asymptotically reaches competitive ratio α/e for large k. In submodular secretary matching, one side of a bipartite graph is revealed online. Upon arrival, each node has to be matched permanently to an offline node or discarded irrevocably. We give a 0.207α-competitive algorithm. This also covers the problem, in which sets of entities are feasible if and only if they are independent with respect to a transversal matroid. In both cases, we improve over previously best known competitive ratios, using a generalization of the algorithm for the classic secretary problem. Furthermore, we give an O(αd− 2 B−1 )-competitive algorithm for submodular function maximization subject to linear packing constraints. Here, d is the column sparsity, that is the maximal number of none-zero entries in a column of the constraint matrix, and B is the minimal capacity of the constraints. Notably, this bound is independent of the total number of constraints. We improve the algorithm to be O(αd− 1 B−1 )-competitive if both d and B are known to the algorithm beforehand. 1998 ACM Subject Classification F.1.2 [Models of Computation] Online Computation	competitive analysis (online algorithm);computation;entity;expectation–maximization algorithm;maximal set;online algorithm;online and offline;randomness;secretary problem;set packing;sparse matrix;submodular set function;uniform matroid;monotone	Thomas Kesselheim;Andreas Tönnis	2017		10.4230/LIPIcs.APPROX-RANDOM.2017.16	mathematical optimization;combinatorics;data structure;computer science;mathematics;programming language;algorithm	Theory	17.754332993757394	15.502012184659241	179650
8ad9e4dfc3147ae16d49a6beda42b6bdd3877c7b	facility location with red-blue demands	approximation algorithms;lp rounding;facility location	Facility location and data placement problems have been widely studied. Consider the following problem. We are given a set of facilities F and a set of clients D in a metric space. There are two types of objects. A client may have demand for each of the object types. A facility can be opened for one or both types depending on its storage capacity; there are no facility opening costs. The goal is to determine the facilities to open for each type while respecting their storage capacity constraints and assign every demand to a facility open for its type. We present a 4-approximation LP-rounding based algorithm for this problem.	facility location problem	Sonika Arora;Neelima Gupta;Samir Khuller;Yogish Sabharwal;Swati Singhal	2014	Oper. Res. Lett.	10.1016/j.orl.2014.08.002	mathematical optimization;simulation;facility information model;facility location problem;mathematics;1-center problem;approximation algorithm	Crypto	20.491312536626943	14.648145655661523	179686
94b13f4d24d89e2d2ec9ed0ceb2a4c41cfe15332	an asymptotic fully polynomial time approximation scheme for bin covering	bin packing problem;approximation asymptotique;bin packing;asymptotic approximation scheme;temps polynomial;bin covering;aproximacion;asymptotic behavior;dual problem;comportement asymptotique;approximation;comportamiento asintotico;programacion lineal;polynomial time;linear programming;emballage optimal;programmation lineaire;linear program;fully polynomial time approximation scheme;asymptotic approximation;covering problem;tiempo polinomial	In the bin covering problem there is a group L=(a1,?,an) of items with sizes s?(ai)?(0,1), and the goal is to find a packing of the items into bins to maximize the number of bins that receive items of total size at least 1. This is a dual problem to the classical bin packing problem. In this paper we present the first asymptotic fully polynomial-time approximation scheme for the problem.	asymptote;bin packing problem;covering problems;duality (optimization);polynomial;polynomial-time approximation scheme;set packing;time complexity	Klaus Jansen;Roberto Solis-Oba	2003	Theor. Comput. Sci.	10.1016/S0304-3975(03)00363-3	mathematical optimization;combinatorics;discrete mathematics;bin packing problem;computer science;linear programming;mathematics;bin	Theory	20.351812538486417	13.458587649072747	181225
ba2bc22f2ce7592afee6b269ae785b25a2b856b4	on the bahncard problem	randomised algorithms;algorithme deterministe;algorithme randomise;combinatorial problem;deterministic algorithms;probleme combinatoire;problema combinatorio;estructura datos;structure donnee;algoritmo optimo;algorithme optimal;optimal algorithm;data structure	In this paper, we generalize the Ski-Rental Problem to the Bahncard Problem which is an online problem of practical relevance for all travelers. The Bahncard is a railway pass of the Deutsche Bundes-bahn (the German railway company) which entitles its holder to a 50% price reduction on nearly all train tickets. It costs 240 DM, and it is valid for 12 months. For the common traveler, the decision at which time to buy a Bahncard is a typical online problem, because she usually does not know when and where to she will travel next. We show that the greedy algorithm applied by most travelers and clerks at ticket ooces is not better in the worst case than the trivial algorithm which never buys a Bahncard. We present two optimal deterministic online algorithms, an optimistic one and and a pessimistic one. We further give a lower bound for random-ized online algorithms and present an algorithm which we conjecture to be optimal; a proof of the conjecture is given for a special case of the problem. It turns out that the optimal competitive ratio only depends on the price reduction factor (50% for the German Bahncard Problem), but does not depend on the price or validity period of a Bahncard.	best, worst and average case;competitive analysis (online algorithm);greedy algorithm;online algorithm;relevance;ski rental problem	Rudolf Fleischer	1998		10.1007/3-540-68535-9_10	data structure;computer science;artificial intelligence;mathematics;mathematical economics;programming language;operations research;algorithm	Theory	17.771318008347997	11.968734158714527	181768
154e4ddf989cba963ce43817e4e9907795c6ba91	some tractable instances of interval data minmax regret problems	camino mas corto;article accepte pour publication ou publie;metodo polinomial;shortest path;optimisation;graphe intervalle;criterio minimax;optimizacion;minimax criterion;interval graph;metodo minimax;grafo intervalo;arbre maximal;minimax method;plus court chemin;fonction perte;funcion perdida;robust optimization;interval data;bipartite perfect matching;arbol maximo;polynomial method;loss function;methode minimax;minimum spanning tree;critere minimax;optimization;spanning tree;methode polynomiale;perfect match	This paper focuses on tractable instances of interval data minmax regret graph problems. More precisely, we provide polynomial and pseudopolynomial algorithms for sets of particular instances of the interval data minmax regret versions of the shortest path, minimum spanning tree and weighted (bipartite) perfect matching problems. These sets are defined using a parameter that measures the distance from well known solvable instances. Tractable cases occur when the parameter is bounded by a constant. Two kinds of parameters are investigated, measuring either the distance from special weight structures or the distance from special graph structures. Keyword Robust optimization; Interval data; Shortest path; Spanning tree; Bipartite perfect matching	algorithm;cobham's thesis;decision problem;file spanning;graph (discrete mathematics);matching (graph theory);mathematical optimization;minimax;minimum spanning tree;pathfinding;polynomial;pseudo-polynomial time;regret (decision theory);robust optimization;shortest path problem	Bruno Escoffier;Jérôme Monnot;Olivier Spanjaard	2008	Oper. Res. Lett.	10.1016/j.orl.2007.12.004	mathematical optimization;combinatorics;discrete mathematics;robust optimization;interval graph;spanning tree;minimum spanning tree;mathematics;shortest path problem;loss function	Theory	23.338873151600886	16.917842369321527	181940
949fed91db704f563935d6d97dae5d68ddf95c11	depth-first branch-and-bound versus local search: a case study	traveling salesman problem;optimal solution;approximate algorithm;local search algorithm;combinatorial optimization problem;anytime algorithm;np hard problem;first order;approximate solution;state space;branch and bound;local search;problem solving	Depth-first branch-and-bound (DFBnB) is a complete algorithm that is typically used to find optimal solutions of difficult combinatorial optimization problems. It can also be adapted to an approximation algorithm and run as an anytime algorithm, which are the subjects of this paper. We compare DFBnB against the Kanellakis-Papadimitriou local search algorithm, the best known approximation algorithm, on the asymmetric Traveling Salesman Problem (ATSP), an important NP-hard problem. Our experimental results show that DFBnB significantly outperforms the local search on large ATSP and various ATSP structures, finding better solutions faster than the local search; and the quality of approximate solutions from a prematurely terminated DFBnB, called truncated DFBnB, is several times better than that from the local search. Introduction and Overview Depth-first branch-and-bound (DFBnB) (Balas & Toth 1985; Papadimitriou & Steiglitz 1982) and local search (Lin & Kernighan 1973; Kanellakis & Papadimitriou 1980; Johnson 1990; Johnson & McGeoch 1997) are the two most applied search methods for solving combinatorial optimization problems, such as planning and scheduling. DFBnB is usually the algorithm for finding optimal solutions of large problems, due to the virtue of its linear-space requirement. Local search, on the other hand, is a method for high-quality approximate solutions, and has been shown to be effective and efficient on many combinatorial optimization problems, such as the symmetric Traveling Salesman Problem (TSP) (Lin & Kernighan 1973; Johnson 1990; Johnson & McGeoch 1997). Besides that DFBnB is an efficient complete algorithm for optimal solutions, it can be used as an approximation algorithm, as suggested in (Ibaraki et al. Copyright c © 2000, American Association for Artificial Intelligence (www.aaai.org). All rights reserved. We use the term approximation algorithm loosely to refer to an algorithm that is able to find a suboptimal solution. Such an algorithm does not provide a quality guarantee under the definition of -approximation algorithm (Papadimitriou 1994). 1983). DFBnB explores a state space in a depth-first order, and finds many suboptimal solutions with increasingly better qualities. These solutions are approximations to the optimal solution if DFBnB is terminated prematurely. Furthermore, DFBnB is also an anytime algorithm. An anytime algorithm (Dean & Boddy 1988) can provide a solution at any time during its execution, and is able to improve the quality of the current best solution with more computation. DFBnB finds better suboptimal solutions with more computation and eventually reaches the optimal solution. In contrast to the importance of anytime problem solving and the effort of developing new anytime algorithms (Hoebel & Zilberstein 1997; Horvitz & Zilberstein 1996), DFBnB has not been studied as an approximation or anytime algorithm so far. We study DFBnB as an approximation and anytime algorithm in this paper. We compare it against the Kanellakis-Papadimitriou local search algorithm on the asymmetric Traveling Salesman Problem (ATSP) (Kanellakis & Papadimitriou 1980). This local search algorithm is an adaptation and extension of the well-known Lin-Kernighan local search algorithm (Lin & Kernighan 1973), and the only local search algorithm for the ATSP which we found in the literature. We choose the ATSP due to the following two reasons. First, the ATSP is an important problem in the NPhard class (Papadimitriou & Steiglitz 1982) and has many practical applications. Many difficult combinatorial optimization problems, such as vehicle routing, workshop scheduling and computer wiring, can be formulated and solved as the ATSP (Lawler et al. 1985). Second, despite its importance, little work has been done on the ATSP, which is disproportional to that on the symmetric TSP (see (Johnson & McGeoch 1997) for an excellent survey and references cited). It will be very helpful if information regarding which algorithm should be used for a particular type of ATSP is available to guide algorithm selection in practice. The paper is structured as follows. We discuss the ATSP, DFBnB, truncated DFBnB and the KanellakisPapadimitriou local search algorithm in Section 2. In Section 3, we describe various ATSP structures used in our experiments. In Section 4, we investigate initial From: AAAI-00 Proceedings. Copyright © 2000, AAAI (www.aaai.org). All rights reserved. tour-construction heuristics. In Section 5, we compare DFBnB with the local search algorithm. We discuss the features of DFBnB and the weakness of the local search algorithm on the ATSP in Section 6. Finally, we conclude and discuss future work in Section 7. The Problem and the algorithms Given n cities, {1, 2, · · · , n}, and a matrix (ci,j) that defines the costs of pairs of cities, the Traveling Salesman Problem (TSP) is to find a minimum-cost tour that visits each city once and returns to the starting city. When the cost matrix is asymmetric, i.e., the cost from city i to city j is not necessarily equal to the cost from j to i, the problem is the asymmetric TSP (ATSP). DFBnB and truncated DFBnB Branch-and-bound (BnB) (Balas & Toth 1985; Papadimitriou & Steiglitz 1982) solves an ATSP as a state-space search and uses the assignment problem as a lower-bound cost function. The assignment problem (AP) (Martello & Toth 1987; Papadimitriou & Steiglitz 1982) is to assign to each city i another city j, with ci,j as the cost of the assignment, such that the total cost of all assignments is minimized. The AP is a relaxation of the ATSP, since the assignments need not form a complete tour. Therefore, the AP cost is a lower bound on the ATSP tour cost. If the AP solution happens to be a complete tour, it is also the solution to the ATSP. The BnB search takes the original ATSP as the root of the state space and repeats the following two steps. First, solve the AP of the current problem. If the AP solution is not a complete tour, decompose it into subproblems by subtour elimination. Specifically, select a subtour from the AP solution, and generate subproblems by excluding some edges from the assignments, so as to eliminate the subtour. There are many subtour-elimination heuristics (Balas & Toth 1985), and we use the Carpaneto-Toth scheme in our experiments (Carpaneto & Toth 1980), which generates no duplicate subproblem. Next, select as the current problem a new subproblem that has been generated but not yet expanded. This process continues until there is no unexpanded problem, or until all unexpanded problems have costs greater than or equal to the cost of the best complete tour found so far. Note that a subproblem is more constrained than its parent problem, therefore the AP cost to the subproblem must be as much as that to the parent. This means that the AP cost function is monotonically nondecreasing with search depth. The AP to the root node can be computed in O(n) time; and the APs to non-root nodes can be computed in O(n) time (Martello & Toth 1987). Depth-first branch-and-bound (DFBnB) is a special BnB that explores nodes or subproblems in a depthfirst order. DFBnB uses an upper bound α on the optimal cost, whose initial value can be infinity or the cost of a tour generated by a polynomial-time heuristic (cf. Section 4). Starting at the root node, DFBnB always selects a recently generated node n to examine next. If the AP solution of n is a complete tour, meaning that n is a leaf node in the search tree, and its cost is less than the current upper bound α, α is revised to the cost of n. If n’s AP solution is not a complete tour and its cost is greater than or equal to α, n is pruned, because node costs are non-decreasing along a path from the root so that no descendent of n will have a cost smaller than n’s cost. Otherwise, n is expanded, generating all its child nodes. To find an optimal goal node quickly, the children n should be searched in an increasing order of their costs. This is called node ordering. We use node ordering in this study. DFBnB can be used as an anytime algorithm. During the depth-first exploration of a state space, DFBnB may encounter many leaf nodes and improve the best solution at hand continuously. Furthermore, DFBnB can be stopped at any time during its execution. This is an extension to the M-Cut strategy suggested in (Ibaraki et al. 1983), which terminates BnB with a fixed amount of computation. We call DFBnB with an early termination truncated DFBnB. Among all possible stopping points, of particular interest is where the first leaf node is reached. When no initial tour is used, this simple, special truncated DFBnB is a greedy search in a search space, which always chooses to explore next the minimum-cost child node of the current state until it reaches a leaf node. When a high-quality initial tour is employed, DFBnB may not necessarily encounter a leaf node before the total allocated computation is exhausted. Without confusion, we call DFBnB that terminates when it reaches a leaf node or consumes all allowed computation truncated DFBnB in the rest of this paper. Kanellakis-Papadimitriou local search Local search is based on a fundamental concept called neighborhood structure. If two TSP tours differ by λ edges, and one can be changed to the other by swapping the different edges, one tour is a λ-change neighbor of the other. A neighborhood structure is established by defining the legitimate changes. Within a neighborhood, a tour is a local optimum if it is the best among its neighbors. Given a neighborhood structure, a local search moves from a tour to a neighboring tour that has a smaller cost until a local optimum is reached. The Kanellakis-Papadimitriou local search algorithm for the ATSP (Kanellakis & Papadimitriou 1980) follows the Lin-Kernighan local search algorithm for the symmetric TSP (Lin & Kernighan 1973), and uses primary changes, which change an odd number of edges in a tour. Figure 1 shows a primary 3-change	algorithm selection;anytime algorithm;approximation algorithm;artificial intelligence;assignment problem;asymmetric multiprocessing;automated planning and scheduling;branch and bound;catherine mcgeoch;combinatorial optimization;computation;depth-first search;experiment;goal node (computer science);greedy algorithm;heuristic (computer science);johnson's algorithm;kernighan–lin algorithm;linear programming relaxation;local interconnect network;local optimum;local search (constraint satisfaction);local search (optimization);loss function;mathematical optimization;np-hardness;optimization problem;paging;polynomial delay;problem solving;scheduling (computing);search algorithm;search tree;state space search;time complexity;travelling salesman problem;tree (data structure);vehicle routing problem;whole earth 'lectronic link;wiring	Weixiong Zhang	2000			mathematical optimization;computer science;local search;hill climbing;machine learning	AI	21.36009895089061	15.635034149812274	182266
ce714a3f05cc0f16503338e7ee762029d71f691a	on the tree conjecture for the network creation game		Selfish Network Creation focuses on modeling real world networks from a game-theoretic point of view. One of the classic models by Fabrikant et al. [PODC’03] is the network creation game, where agents correspond to nodes in a network which buy incident edges for the price of α per edge to minimize their total distance to all other nodes. The model is well-studied but still has intriguing open problems. The most famous conjectures state that the price of anarchy is constant for all α and that for α ≥ n all equilibrium networks are trees. We introduce a novel technique for analyzing stable networks for high edge-price α and employ it to improve on the best known bounds for both conjectures. In particular we show that for α > 4n − 13 all equilibrium networks must be trees, which implies a constant price of anarchy for this range of α. Moreover, we also improve the constant upper bound on the price of anarchy for equilibrium trees. 2012 ACM Subject Classification Theory of computation → Algorithmic game theory, Theory of computation → Quality of equilibria, Theory of computation → Network formation	algorithmic game theory;anarchy;graph coloring;network formation;semantic network;theory of computation	Davide Bilò;Pascal Lenzner	2018		10.4230/LIPIcs.STACS.2018.14	combinatorics;price of stability;mathematical economics;mathematics;conjecture;price of anarchy;upper and lower bounds	Theory	20.07279428486573	18.108124008326335	184268
044119416b615aa13fa7832adc89d38a25e40117	polynomial algorithms for mpsp using parametric linear programming	grafo aciclico;multiprocessor scheduling;tiempo total acabamiento;parametric programming;programmation parametrique;temps total achevement;graphe acyclique;ordonnancement multiprocesseur;acyclic graph;programacion lineal;makespan;programacion parametrica;polynomial algorithm;borne inferieure;linear programming;algorithme polynomial;programmation lineaire;linear program;lower bound;cota inferior	The multiprocessor scheduling problem(MPSP), P|prec,p j  = 1|C max , is known to be NP-complete. The problem is polynomially solvable, however, if the precedence relations are of the intree(outtree) type, P|intree(outtree),p j  = 1|C max , or if the number of processors is two, P2|prec, p j  = 1|C max . In this paper, we introduce a parametric linear program which gives a lower bound for the makespan of MPSP and retrieves the makespans of the two polynomially solvable problems.	linear programming;polynomial	Babak Mougouie	2004		10.1007/978-3-540-25967-1_4	mathematical optimization;combinatorics;discrete mathematics;linear programming;mathematics;upper and lower bounds;multiprocessor scheduling;directed acyclic graph;algorithm	Theory	17.708821918433728	11.350721956457273	184555
675f0fabe418b96cac9cd32c8c26d70ce2f98fe2	on a multiconstrained model for chromatic scheduling	optimisation sous contrainte;constrained optimization;graph theory;chromatic graph;probleme confection horaire;timetabling;teoria grafo;chromatic scheduling;coloration;problema concepcion horario;condition necessaire suffisante;graph coloring;theorie graphe;upper bound;optimizacion con restriccion;constrained programming;graphe chromatique;coloracion;scheduling;existencia de solucion;necessary and sufficient condition;existence of solution;scheduling problem;ordonamiento;network flow;timetabling problem;ordonnancement;condicion necesaria suficiente;existence solution;grafo cromatico	A graph coloring model is described for handling some types of chromatic scheduling problems. Applications in school timetabling for instance as well as in robotics suggest to include additional requirements like sets of feasible colors for each node of the associated graph and upper bounds on the cardinalities of the color classes. Necessary conditions for the existence of solutions are given and cases where these conditions are sufficient will be characterized.	scheduling (computing)	Dominique de Werra	1999	Discrete Applied Mathematics	10.1016/S0166-218X(99)00019-0	mathematical optimization;constrained optimization;combinatorics;flow network;graph theory;graph coloring;mathematics;upper and lower bounds;scheduling;algorithm	Theory	21.379881004907453	12.813776230781034	185004
18a2303e3183ed0b3cf9ec48ad53e741ceb50646	optimal leaf ordering of complete binary trees	journal_article;asymptotic optimality;bit manipulation algorithms;optimization problem;permutations;optimal leaf ordering;binary tree	Ordering a set of items so as to minimize the sum of distances between consecutive elements is a fundamental optimization problem occurring in many settings. While it is NP-hard in general, it becomes polynomially solvable if the set of feasible permutations is restricted to be compatible with a tree of bounded degree. We present a new algorithm for the elementary case of ordering the n leaves of a binary tree with height logn + O(1). Our algorithm requires O(n2 logn) time and O(n) space. While the running time is a log-factor away from being asymptotically optimal, the algorithm is conceptually simple, easy to implement, and highly practical. Its implementation requires little more than a few bit-manipulations.	asymptotically optimal algorithm;binary tree;decision problem;mathematical optimization;np-hardness;optimization problem;time complexity	Ulrik Brandes	2007	J. Discrete Algorithms	10.1016/j.jda.2006.09.003	optimal binary search tree;optimization problem;mathematical optimization;combinatorics;discrete mathematics;binary tree;computer science;mathematics;permutation;algorithm	Theory	20.50721436477939	16.91080571961695	185215
3614327403dbc4ea425615da204f31d98f0e61dc	o((logn)2) time online approximation schemes for bin packing and subset sum problems	bin packing problem;bin packing;subset sum problem;approximate algorithm;satisfiability;approximate solution;approximation scheme	Given a set S = {b1, ..., bn} of integers and an integer s, the subset sum problem is to decide if there is a subset S′ of S such that the sum of elements in S′ is exactly equal to s. We present an online approximation scheme for this problem. It updates in O(log n) time and gives a (1+e)-approximation solution in O((log n+ 1/e2 (log 1/e)O(1)) log n) time. The online approximation for target s is to find a subset of the items that have been received. The bin packing problem is to find the minimum number of bins of size one to pack a list of items a1, ..., an of size in [0, 1]. Let function bp(L) be the minimum number of bins to pack all items in the list L. We present an online approximate algorithm for the function bp(L) in the bin packing problem, where L is the list of the items that have been received. It updates in O(log n) updating time and gives a (1 + e)-approximation solution app(L) for bp(L) in O((log n)2 + (1/e)O(1/e)) time to satisfy app(L) ≤ (1 + e)bp(L) + 1.	approximation;bin packing problem;set packing;subset sum problem	Liang Ding;Bin Fu;Yunhui Fu;Zaixin Lu;Zhiyu Zhao	2010		10.1007/978-3-642-14553-7_24	mathematical optimization;combinatorics;discrete mathematics;mathematics;subset sum problem	Theory	18.161014678441575	14.484998936015542	185334
e5592fb5aae3f725886c0c5e39d3ecc6ca7b99d1	the complexity of minimizing the number of shape matrices subject to minimal beam-on time in multileaf collimator field decomposition with bounded fluence	distribution;heuristique;treatment planning;complexite;leaf sequencing;optimisation;faisceau;nombre entier;forma;combinatorics;temps polynomial;optimizacion;heuristica;fonction repartition;combinatoria;metodo descomposicion;complejidad;combinatoire;methode decomposition;65kxx;optimization method;modulacion;segmentation;complexity;metodo optimizacion;68wxx;49xx;integer;decomposition method;funcion distribucion;radiation therapy optimization;descomposicion matricial;distribution function;planificacion;leafsequencing;matrices;shape;decomposition matricielle;matrix decomposition;informatique theorique;intensity modulation;entero;beams;polynomial time;methode optimisation;planning;optimization;radiation therapy;multileaf collimator;heuristics;planification;algoritmo optimo;matrice;algorithme optimal;forme;optimal algorithm;distribucion;imrt;segmentacion;computer theory;tiempo polinomial;modulation;informatica teorica	The use of multileaf collimators (MLCs) is a modern way to realize intensity modulated fields in radiotherapy. An important step in the treatment planning is the shape matrix decomposition: The desired fluence distribution, given by an integer matrix, has to be decomposed into a small number shape matrices, i.e. (0, 1)−matrices corresponding to the field shapes that can be delivered by the used MLC. The two main objectives are to minimize the total irradiation time and the number of shape matrices. Assuming that the entries of the fluence matrix are bounded by a constant, we prove that a shape matrix decomposition with minimal number of shape matrices under the condition that the total irradiation time is minimal, can be determined in time polynomial in the matrix dimensions. The results of our algorithm are compared with Engel’s [8] heuristic for the reduction of the number of shape matrices.	algorithm;heuristic;modulation;multi-level cell;polynomial;the matrix	Thomas Kalinowski	2009	Discrete Applied Mathematics	10.1016/j.dam.2008.06.027	integer;planning;distribution;time complexity;multileaf collimator;mathematical optimization;radiation therapy;combinatorics;complexity;decomposition method;shape;intensity modulation;heuristics;distribution function;mathematics;geometry;matrix decomposition;segmentation;algorithm;matrix;algebra;modulation;beam	Theory	20.339305180714852	15.965472419538022	185955
09df9569d27e8700c9eed55bf574e5b71980e86a	multi-constrained matroidal knapsack problems	optimisation sous contrainte;constrained optimization;matroid;probleme sac a dos;asymptotic optimality;probleme np complet;aproximacion;combinatorial optimization problem;limit;problema mochila;matroide;approximation;optimizacion con restriccion;knapsack problem;probleme combinatoire;problema combinatorio;lagrangean relaxation;approximate solution;methode lagrange;metodo lagrange;lagrangian method;problema np completo;combinatory problem;knapsach problem;limite;np complete problem	We consider multi-constrained knapsack problems where the sets of elements to be selected are subject to combinatorial constraints of matroidal nature. For this important class of NP-hard combinatorial optimization problems we prove that Lagrangean relaxation techniques not only provide good bounds to the value of the optimum, but also yield approximate solutions, which are asymptotically optimal under mild probabilistic assumptions.	knapsack problem	Paolo M. Camerini;Francesco Maffioli;Carlo Vercellis	1989	Math. Program.	10.1007/BF01589104	matroid;continuous knapsack problem;mathematical optimization;constrained optimization;combinatorics;np-complete;limit;approximation;calculus;mathematics;knapsack problem	Theory	21.43218835774206	13.321245103577917	186447
f9f1f986dd55e7bbd28300ee741371efa7f3529a	facet identification for the symmetric traveling salesman polytope	traveling salesman problem;graph theory;teoria grafo;polyhedral combinatorics;cutting plane;clique graph;metodo reduccion;desigualdad;inequality;travelling salesman problem;facet;coaccion;contrainte;approche heuristique;inegalite;facette;theorie graphe;cutting plane algorithm;traveling salesman;symetrie;symmetry;algorithme;problema viajante comercio;politope;algorithm;probleme combinatoire;problema combinatorio;constraint;probleme commis voyageur;identification;numerical computation;metodo plano secante;faceta;enfoque heuristico;identificacion;methode reduction;combinatory problem;heuristic approach;clique graphe;methode plan secant;simetria;branch and cut;reduction method;large scale problem;cutting plane method;algoritmo;polytope	Several procedures for the identification of facet inducing inequalities for the symmetric traveling salesman polytope are given. An identification procedure accepts as input the support graph of a point which does not belong to the polytope, and returns as output some of the facet inducing inequalities violated by the point. A procedure which always accomplishes this task is calledexact, otherwise it is calledheuristic. We give exact procedures for the subtour elimination and the 2-matching constraints, based on the Gomory—Hu and Padberg—Rao algorithms respectively. Efficient reduction procedures for the input graph are proposed which accelerate these two algorithms substantially. Exact and heuristic shrinking conditions for the input graph are also given that yield efficient procedures for the identification of simple and general comb inequalities and of some elementary clique tree inequalities. These procedures constitute the core of a polytopal cutting plane algorithm that we have devised and programmed to solve a substantial number of large-scale problem instances with sizes up to 2392 nodes to optimality.		Manfred W. Padberg;Giovanni Rinaldi	1990	Math. Program.	10.1007/BF01580861	mathematical optimization;combinatorics;graph theory;mathematics;geometry;travelling salesman problem	Theory	23.341132038861485	12.571924409056654	186530
cb8420cae943690a73bb408f2cb30941ff75070e	on the approximability of two capacitated vehicle routing problems	approximation algorithms;vehicle routing;orienteering	Vehicle routing is an important and active research topic in computer science and operations research. In this paper, we give some approximation results for two well-known capacitated vehicle routing problems.rnrnOur first result concerns the Capacitated Orienteering problem in Euclidean graphs. We are here given an Euclidean graph G, where each node has a profit value and a demand value, starting and end nodes s, t, a length bound D and a capacity bound C. The goal is to find an s-t-path of length at most D that collects maximum profit from nodes whose total demand does not exceed the capacity bound C. We give a PTAS for this problem, extending the corresponding known result given by Chen and Har-Peled [Chen, K., and S. Har-Peled, The Euclidean orienteering problem revisited. SIAM Journal on Computing, 2007] for the uncapacitated version.rnrnOur second result concerns the School Bus problem with regret minimization, where we are given a general metric graph, and the task is to design the routes for a given set of buses of limited capacity to transport a set of children to a school, while minimizing a certain regret threshold. Under the standard hypothesis P≠NP, we show that this problem cannot be approximated.	approximation algorithm;vehicle routing problem	Adrian Bock;Laura Sanità	2013	Electronic Notes in Discrete Mathematics	10.1016/j.endm.2013.05.133	combinatorics;discrete mathematics;orienteering;euclidean geometry;regret;vehicle routing problem;mathematics;mathematical optimization;approximation algorithm;graph	Theory	21.409634419811237	15.383445232080403	187006
781497397d5dfc0a8dda87602be364279b7eebff	the complexity of minimum ratio spanning tree problems	fractional programming;objective function;minimum spanning tree;global optimization;spanning tree;np hard;combinatorial optimization	We examine the complexity of two minimum spanning tree problems with rational objective functions. We show that the Minimum Ratio Spanning Tree problem is NP-hard when the denominator is unrestricted in sign, thereby sharpening a previous complexity result. We then consider an extension of this problem where the objective function is the sum of two linear ratios whose numerators and denominators are strictly positive. This problem is shown to be NP-hard as well. We conclude with some results characterizing sufficient conditions for a globally optimal solution.	spanning tree	Christopher C. Skiscim;Susan W. Palocsay	2004	J. Global Optimization	10.1007/s10898-004-5119-8	fractional programming;euclidean minimum spanning tree;mathematical optimization;combinatorics;discrete mathematics;kruskal's algorithm;minimum degree spanning tree;spanning tree;steiner tree problem;prim's algorithm;combinatorial optimization;minimum spanning tree;gomory–hu tree;np-hard;interval tree;connected dominating set;k-minimum spanning tree;mathematics;reverse-delete algorithm;distributed minimum spanning tree;global optimization	Theory	22.46334143464397	16.686189299976025	187040
42b471c38dd56171d054fbbf68f194d333ca5fbb	a disjunctive cutting plane procedure for general mixed-integer linear programs	mixed integer linear program;disjunctive programming;cutting plane;algorithm analysis;capsula convexa;desigualdad;inequality;programmation disjonctive;inegalite;convexite;branch and cut method;methode branchement et coupe;cutting plane algorithm;convexidad;enveloppe convexe;mixed integer program;programacion lineal;programacion mixta entera;metodo plano secante;linear programming;programmation lineaire;programmation partiellement en nombres entiers;mixed integer programming;analyse algorithme;convexity;methode plan secant;convex hull;lp relaxation;analisis algoritmo;cutting plane method	In this paper we develop a cutting plane algorithm for solving mixed-integer linear programs with general-integer variables. A novel feature of the algorithm is that it generates inequalities at all γ-optimal vertices of the LP-relaxation at each iteration. The cutting planes generated in the procedure are found by considering a natural generalization of the 0-1 disjunction used by Balas, Ceria, and Cornuejols in the context of solving binary mixed-integer linear programs [3, 4].	cutting-plane method;disjunctive normal form;linear programming	Jonathan H. Owen;Sanjay Mehrotra	2001	Math. Program.	10.1007/PL00011407	mathematical optimization;combinatorics;linear programming;mathematics;geometry;cutting-plane method	Theory	23.70702022667792	12.360794940188159	187241
2fe43f4efb2200256c336282218f6ccce58d7c1e	a constant factor approximation algorithm for the storage allocation problem	approximation algorithms;bandwidth allocation;rectangle packing;storage allocation;unsplittable flow	We study the storage allocation problem (SAP) which is a variant of the unsplittable flow problem on paths (UFPP). A SAP instance consists of a path $$P = (V,E)$$ P = ( V , E ) and a set J of tasks. Each edge $$e \in E$$ e ∈ E has a capacity $$c_e$$ c e and each task $$j \in J$$ j ∈ J is associated with a path $$I_j$$ I j in P, a demand $$d_j$$ d j and a weight $$w_j$$ w j . The goal is to find a maximum weight subset $$S \subseteq J$$ S ⊆ J of tasks and a height function $$h:S \rightarrow \mathbb {R}^+$$ h : S → R + such that (i) $$h(j)+d_j \le c_e$$ h ( j ) + d j ≤ c e , for every $$e \in I_j$$ e ∈ I j ; and (ii) if $$j,i \in S$$ j , i ∈ S such that $$I_j \cap I_i \ne \emptyset $$ I j ∩ I i ≠ ∅ and $$h(j) \ge h(i)$$ h ( j ) ≥ h ( i ) , then $$h(j) \ge h(i) + d_i$$ h ( j ) ≥ h ( i ) + d i . SAP can be seen as a rectangle packing problem in which rectangles can be moved vertically, but not horizontally. We present a polynomial time $$(9+\varepsilon )$$ ( 9 + ε ) -approximation algorithm for SAP. Our algorithm is based on a variation of the framework for approximating UFPP by Bonsma et al. [FOCS 2011] and on a $$(4+\varepsilon )$$ ( 4 + ε ) -approximation algorithm for $$\delta $$ δ -small SAP instances (in which $$d_j \le \delta \cdot c_e$$ d j ≤ δ · c e , for every $$e \in I_j$$ e ∈ I j , for a sufficiently small constant $$\delta >0$$ δ > 0 ). In our algorithm for $$\delta $$ δ -small instances, tasks are packed carefully in strips in a UFPP manner, and then a $$(1+\varepsilon )$$ ( 1 + ε ) factor is incurred by a reduction from SAP to UFPP in strips. The strips are stacked to form a SAP solution. Finally, we provide a $$(10+\varepsilon )$$ ( 10 + ε ) -approximation algorithm for SAP on ring networks.	apx;approximation algorithm;flow network;memory management;polynomial;strips;set packing;symposium on foundations of computer science;time complexity	Reuven Bar-Yehuda;Michael Beder;Dror Rawitz	2016	Algorithmica	10.1007/s00453-016-0137-8	mathematical optimization;combinatorics;mathematics;algorithm	Theory	19.054898786630467	15.154070346490693	188679
76f3a29dabc7f31db9aa9c1c56d3c8d5a1887f62	minimum-cost single-source 2-splittable flow	approximate algorithm;maximum flow;analysis of algorithm;directed graph;graph algorithm;budget constraint	Abstract   In the  single-source unsplittable flow  problem, commodities must be routed simultaneously from a common source vertex to certain sinks in a given graph with edge capacities and costs. The demand of each commodity must be routed along a single path so that the total flow through any edge is at most its capacity. Moreover the cost of the solution should not exceed a given budget. An important open question is whether a simultaneous (2,1)-approximation can be achieved for minimizing congestion and cost, i.e., the budget constraint should not be violated. In this note we show that this is possible for the case of 2-splittable flows, i.e., flows where the demand of each commodity is routed along at most two paths.		Stavros G. Kolliopoulos	2004	Electronic Notes in Discrete Mathematics	10.1016/j.endm.2004.03.039	maximum flow problem;mathematical optimization;budget constraint;combinatorics;flow network;directed graph;mathematics;mathematical economics	Theory	22.60224724362785	17.63958757298659	188968
631c6a10ba4a70fd4a14278ca872af39b07f1db8	resolution branch and bound and an application: the maximum weighted stable set problem	utilisation information;networks graphs;uso informacion;mathematics;programacion entera;combinatorics;temps polynomial;information use;branching;algorithms branch and bound;grupo de excelencia;programmation en nombres entiers;upper bound;integer;branch and bound method;integer programming;metodo branch and bound;ciencias basicas y experimentales;ramificacion;matematicas;polynomial time;mathematics combinatorics;stable set;ramification;algorithms;programming integer;methode separation et evaluation;grupo a;borne superieure;branch and bound;programming;cota superior;tiempo polinomial	We propose a new resolution algorithm, called resolution branch and bound (RBB), where a branch-and-bound scheme is empowered by exploiting the information contained in a family of closed subproblems, collected by a full resolution phase. In particular, we use this information to define a new branching rule that seems able to reduce the risk of incurring inappropriate branchings. We apply RBB and the proposed branching rule to the maximum weighted stable set problem, as its features allow us to speed up a time-consuming step in the full resolution phase. To compute upper bounds, we generalize to the weighted case the polynomial time procedure provided by Mannino and Sassano [Mannino, C., A. Sassano. 1994. An exact algorithm for the maximum stable set problem. Computational Optim. Appl.3 243--258] for the unweighted case. Computational results validate the effectiveness of the provided branching rule and the good performance of RBB on many DIMACS benchmarks.	branch and bound	Alessandro Avenali	2007	Operations Research	10.1287/opre.1070.0397	integer;time complexity;programming;mathematical optimization;combinatorics;discrete mathematics;integer programming;branching;mathematics;ramification;upper and lower bounds;branch and bound;algorithm;statistics	ECom	22.642232254699703	12.53006951613172	189519
025f6725892d457dbe9f8de2719da2fd15b9d123	the complexity of near-optimal programmable logic array folding	folding;pla;approximation;programmable logic array;vlsi;np complete;68q25;heuristics	The problem of optimally folding a Programmable Logic Array (PLA) is known to be NP-complete. Motivated by the practical importance of this problem, we address the question of obtaining good, though not necessarily optimal, foldings. Two sets of results are presented. First, we show that three natural variants of the folding problem are equivalent with respect to approximation, in the sense that either they are all efficiently approximable or none of them is efficiently approximable. Next, we show for one of the variants (optimal bipartite folding) that if there is a polynomial time approximation algorithm (heuristic) which, for every PLA, produces a folding that is within a fixed factor of an optimal folding, then for any constant $\varepsilon > 0$, there is a heuristic which, for every PLA, produces a folding that is within a factor of $(1+\varepsilon )$ of the optimal folding. This result strongly suggests that the optimal folding problem is not efficiently approximable for arbitrary PLAs. In a compani...	programmable logic array;programmable logic device	S. S. Ravi;Errol L. Lloyd	1988	SIAM J. Comput.	10.1137/0217045	mathematical optimization;combinatorics;discrete mathematics;np-complete;programmable logic array;computer science;folding;heuristics;approximation;mathematics;very-large-scale integration;algorithm	Theory	21.386150132490744	18.133644550918415	189712
f8b0f62c94bafb2d9a785b3a1e89f32b7fd6a9a0	copy coalescing by graph recoloring	lenguaje programacion;grafo triangular;coloracion grafo;fichero registro;programacion entera;programming language;register allocation;resource allocation;heuristic method;performance;graph coloring;metodo heuristico;programmation en nombres entiers;coloration graphe;programacion lineal;integer programming;graphe triangule;linear programming;ssa form;langage programmation;programmation lineaire;algorithms;register file;fichier registre;asignacion recurso;methode heuristique;allocation ressource;languages;integer linear program;graph colouring;chordal graph	Register allocation is always a trade-off between live-range splitting and coalescing. Live-range splitting generally leads to less spilling at the cost of inserting shuffle code. Coalescing removes shuffle code while potentially raising the register demand and causing spilling.  Recent research showed that the live-range splitting of the SSA form's Æ-functions leads to chordal interference graphs. This improves upon two long-standing inconveniences of graph coloring register allocation: First, chordal graphs are optimally colorable in quadratic time. Second, the number of colors needed to color the graph is equal to the maximal register pressure in the program. However, the inserted shuffle code incurred by the Æ-functions can slow down the program severely. Hence, to make such an approach work in practice, a coalescing technique is needed that removes most of the shuffle code without causing further spilling.  In this paper, we present a coalescing technique designed for, but not limited to, SSA-form register allocation. We exploit that a valid coloring can be easily obtained by an SSA-based register allocator. This initial coloring is then improved by recoloring the interference graph and assigning shuffle-code related nodes the same color. Thereby, we always keep the coloring of the graph valid. Hence, the coalescing is safe, i. e. no spill code will be caused by coalescing.  Comparing to iterated register coalescing, the state of the art in safe coalescing, our method is able to remove 22.5% of the costs and 44.3% of the copies iterated coalescing left over. The best solution possible, found by a colaescer using integer linear programming (ILP), was 35.9% of the costs and 51.9% of the copies iterated coalescing left over. The runtime of programs compiled with our heuristic matches that of the programs compiled with the ILP technique.	color;compiler;graph coloring;heuristic;integer programming;interference (communication);iteration;linear programming;maximal set;register allocation;static single assignment form;time complexity	Sebastian Hack;Gerhard Goos	2008		10.1145/1375581.1375610	integer programming;performance;resource allocation;computer science;linear programming;graph coloring;register allocation;chordal graph;register file;algorithm	PL	22.522972998831182	13.072009264950767	189978
332577694063f587937c4a18c16101731b3e49b9	submodular problems - approximations and algorithms	optimal solution;vertex cover;discrete mathematics;linear constraint;satisfiability;np hard problem;polynomial time;data structure;problem solving	We show that any submodular minimization (SM) problem defined on linear constraint set with constraints having up to two variables per inequality, are 2-approximable in polynomial time. If the constraints are monotone (the two variables appear with opposite sign coefficients) then the problems of submodular minimization or supermodular maximization are polynomial time solvable. The key idea is to link these problems to a submodular s, t-cut problem defined here. This framework includes the problems: SM-vertex cover; SM-2SAT; SM-min satisfiability; SM-edge deletion for clique, SM-node deletion for biclique and others. We also introduce here the submodular closure problem and and show that it is solvable in polynomial time and equivalent to the submodular cut problem. All the results are extendible to multi-set where each element of a set may appear with a multiplicity greater than 1. For all these NP-hard problems 2-approximations are the best possible in the sense that a better approximation factor cannot be achieved in polynomial time unless NP=P. The mechanism creates a relaxed “monotone” problem, solved as a submodular closure problem, the solution to which is mapped to a half integral super-optimal solution to the original problem. That half-integral solution has the persistency property meaning that integer valued variables retain their value in an optimal solution. This permits to delete the integer valued variables, and restrict the search of an optimal solution to the smaller set of remaining variables.	approximation;approximation algorithm;closure problem;coefficient;decision problem;expectation–maximization algorithm;extensibility;mathematical optimization;maxima and minima;np (complexity);np-hardness;node deletion;optimization problem;polynomial;rounding;social inequality;submodular set function;supermodular function;time complexity;vertex cover;monotone	Dorit S. Hochbaum	2010	CoRR		time complexity;mathematical optimization;combinatorics;discrete mathematics;data structure;maximum coverage problem;vertex cover;submodular set function;np-hard;mathematics;co-np-complete;algorithm;satisfiability	Theory	23.145091465251497	15.879712677737698	190349
eea0955b15308e75339630235f89d956ea5645a5	a tight approximation for fully dynamic bin packing without bundling		We consider a variant of the classical Bin Packing Problem, called Fully Dynamic Bin Packing. In this variant, items of a size in (0,1] must be packed in bins of unit size. In each time step, an item either arrives or departs from the packing. An algorithm for this problem must maintain a feasible packing while only repacking a bounded number of items in each time step. We develop an algorithm which repacks only a constant number of items per time step and, unlike previous work, does not rely on bundling of small items which allowed those solutions to move an unbounded number of small items as one. Our algorithm has an asymptotic approximation ratio of roughly 1.3871 which is complemented by a lower bound of Balogh et al. [3], resulting in a tight approximation ratio for this problem. As a direct corollary, we also close the gap to the lower bound of the Relaxed Online Bin Packing Problem in which only insertions of items occur. An extended abstract of this work, merged with [9], will appear in ICALP 2018. This work is partially supported by the German Research Foundation (DFG) within the Collaborative Research Center “On-The-Fly Computing” (SFB 901). ar X iv :1 71 1. 01 23 1v 2 [ cs .D S] 2 4 M ay 2 01 8	approximation algorithm;bin packing problem;blue (queue management algorithm);icalp;set packing;spectrum reallocation	Björn Feldkord;Matthias Feldotto;Sören Riechers	2017	CoRR		corollary;square packing in a square;discrete mathematics;combinatorics;mathematics;mathematical optimization;bounded function;bin packing problem;upper and lower bounds	Theory	17.36139482300159	15.421096649621637	191170
456fe06767aab3f48cf2839ac71155e79b1cfeb7	a faster polynomial algorithm for the constrained maximum flow problem	maximum flow;scaling;computational complexity;minimum cost network flow;network flows	The constrained maximum flow problem is a variant of the classical maximum flow problem in which the flow from a source node to a sink node is maximized in a directed capacitated network with arc costs subject to the constraint that the total cost of flow should be within a budget. It is important to study this problem because it has important applications, such as in logistics, telecommunications and computer networks; and because it is related to variants of classical problems such as the constrained shortest path problem, constrained transportation problem, or constrained assignment problem, all of which have important applications as well. In this research, we present an Oðn2m logðnCÞÞ time cost scaling algorithm and compare its empirical performance against the two existing polynomial combinatorial algorithms for the problem: the capacity scaling and the double scaling algorithms. We show that the cost scaling algorithm is on average 25 times faster than the double scaling algorithm, and 32 times faster than the capacity scaling algorithm. & 2012 Elsevier Ltd. All rights reserved.	algorithm;assignment problem;combinatorial optimization;computation;computer networks (journal);fastest;flow network;image scaling;logistics;mathematical optimization;maximum flow problem;polynomial;shortest path problem;transportation theory (mathematics)	Cenk Çaliskan	2012	Computers & OR	10.1016/j.cor.2012.01.010	out-of-kilter algorithm;maximum flow problem;mathematical optimization;combinatorics;flow network;circulation problem;minimum-cost flow problem;push–relabel maximum flow algorithm;multi-commodity flow problem;scaling;computer science;theoretical computer science;mathematics;computational complexity theory	Theory	22.077800016447007	17.53262120725392	191669
2e1be2ffaa624d3baa5243daec34a58b585decdc	minimal cost set covering using probabilistic methods	optimal solution;probabilistic method;boolean function;digital logic;graph coloring;set covering problem;simulated annealing;traveling salesman;population structure;distributed genetic optimization;genetic algorithm;set cover	In this paper we address the problem of covering a set with elements from given subsets. Additionally, each such given subset has an associated coat, and the objective of the problem is to choose that set of subsets to cover the whole set, that would lead to minimal wat. This problem has got important practical counterpart in obtaining minimal expression of a boolean function in the domain of digital logic design. The probfem ia known to be NP-complete, and hence it ia almost impossible to determine the optimal solution for any large sized problems. The current paper investigates the performance of a couple of probabilistic techniques, namely, simulated annealing and genetic algorithms on the minimal cost set covering problem.	covering problems;genetic algorithm;np-completeness;set cover problem;simulated annealing	Sandip Sen	1993		10.1145/162754.162852	mathematical optimization;combinatorics;discrete mathematics;mathematics	Logic	21.159534539172622	17.30084696587545	192409
6f59a90ae8327d9f062586df69639539eaa3a67c	novel approaches for analyzing biological networks	graph theory;reseau social;teoria grafo;programacion entera;graph clique;theorie graphe;programmation en nombres entiers;social network;integer programming;social networks;n clubs;biological networks;numerical experiment;clique relaxations;clique graphe;integer program;reseau biologique;red social;biological network;n cliques	This paper proposes clique relaxations to identify clusters in biological networks. In particular, the maximum n-clique and maximum n-club problems on an arbitrary graph are introduced and their recognition versions are shown to be NP -complete. In addition, integer programming formulations are proposed and the results of sample numerical experiments performed on biological networks are reported. keywords: n-cliques, n-clubs, clique relaxations, social networks, biological networks	biological network;clique (graph theory);cluster analysis;complex network;experiment;integer programming;linear programming relaxation;numerical analysis;polyhedron;social network analysis;theory	Balabhaskar Balasundaram;Sergiy Butenko;Svyatoslav Trukhanov	2005	J. Comb. Optim.	10.1007/s10878-005-1857-x	biological network;combinatorics;discrete mathematics;integer programming;computer science;graph theory;mathematics;social network	ML	24.488182447956948	16.43799530831305	192763
caca4f5998fc3e7e2adefeae07867e0610011c96	improved approximation for universal facility location	partial hypergraph cover;greedy algorithm;partial set cover;facility location problem;facility location	The Universal Facility Location problem (UniFL) is a generalized formulation which contains several variants of facility location including capacitated facility location (1-CFL) as its special cases. We present a 6 + ε approximation for the UniFL problem, thus improving the 8 + ∈ approximation given by Mahdian and Pal. Our result bridges the existing gap between the UniFL problem and the 1-CFL problem.	approximation;facility location problem	Naveen Garg;Rohit Khandekar;Vinayaka Pandit	2005			mathematical optimization;combinatorics;discrete mathematics;computer science;facility location problem;mathematics;1-center problem	Theory	22.74576634073518	15.483922052510907	193723
1761d73969b01787ce5ab1730c2f6698ffe7b24b	polynomial algorithms for guillotine cutting of a rectangle into small rectangles of two kinds	camino mas corto;bin packing problem;metodo polinomial;altura;shortest path;multiprocessor scheduling;paleta;paletizacion;temps polynomial;multiprocessor;systeme aide decision;mobilier;cutting;temps lineaire;linear time algorithm;palette;plus court chemin;problema relleno;prise de decision;sistema ayuda decision;tiempo lineal;operations research;furniture;grid;polynomial time algorithm;hauteur;systeme incertain;decision support system;pallet;recherche operationnelle;polynomial method;rejilla;scheduling;polynomial algorithm;linear time;polynomial time;grille;probleme remplissage;mobiliario;palettisation;resolubilite;multiprocesador;methode polynomiale;toma decision;sistema incierto;polynomial algorithms;collective decision making;palletization;solvability;uncertain system;investigacion operacional;ordonnancement;height;reglamento;resolubilidad;shortest path problem;tiempo polinomial;multiprocesseur	In this paper the problem of optimally guillotine cutting a rectangle (A, B  ) into small rectangles of two kinds is considered. Rectangles of the first kind (c,ai),i∈I(c,ai),i∈I have the same width, and their heights can be various. Rectangles of the second kind (bj,d),j∈J(bj,d),j∈J have the same height, and their widths can be various. The number of occurrences of each small rectangle in a cutting pattern is not restricted. Similar problems often appear in the furniture industry. This cutting problem is reduced to the shortest path problem in a special rectangular grid, for which a linear time algorithm is suggested. This approach generalizes the approach of [E. Girlich, A.G. Tarnowski, On polynomial solvability of two multiprocessor scheduling problems, Mathematical Methods of Operations Research 50 (1999) 27–51; A.G. Tarnowski, Advanced polynomial time algorithm for guillotine generalized pallet loading problem, in: The International Scientific Collection: Decision Making Under Conditions of Uncertainty (Cutting-Packing Problems), Ufa State Aviation Technical University, 1997, pp. 93–124] and allows us to construct polynomial algorithms for the guillotine cutting problem considered with a fixed number of small rectangles of two kinds.	algorithm;polynomial	M. Z. Arslanov;D. U. Ashigaliev;E. E. Ismail	2008	European Journal of Operational Research	10.1016/j.ejor.2006.12.052	time complexity;mathematical optimization;combinatorics;decision support system;computer science;mathematics;shortest path problem;algorithm	Theory	18.889717737314953	11.508545592304532	193788
41455f31f52dd2b9739abce7e1c32005a788eefa	incremental medians via online bidding	graph theory;metodo polinomial;k median problem;algoritmo aleatorizado;distance function;probleme k median;teoria grafo;distance minimale;approximate algorithm;optimum;temps polynomial;competitividad;on line;en linea;approximation algorithm;competitive algorithms;metric;plan randomise;algorithme deterministe;algorithme randomise;mediane;theorie graphe;median;approche deterministe;theorem proving;minimal distance;optimisation combinatoire;service utilisateur;upper bound;deterministic approach;polynomial time algorithm;refinement method;demonstration theoreme;algorithme competitif;aleatorizacion;deterministic algorithms;plan aleatorizado;minimum distance;polynomial method;randomized design;optimo;enfoque determinista;subasta;algoritmo aproximacion;polynomial time;competitiveness;bidding;randomized algorithm;randomisation;chrobak08online neal e young;metrico;en ligne;mediana;enchere;incremental algorithm;servicio usuario;methode raffinement;demostracion teorema;user service;algorithme approximation;randomization;borne superieure;combinatorial optimization;methode polynomiale;competitivite;problema k medio;metodo afinamiento;metrique;distancia minima;cota superior;competitive ratio;optimizacion combinatoria;tiempo polinomial	In the k-median problem we are given sets of facilities and customers, and distances between them. For a given set F of facilities, the cost of serving a customer u is the minimum distance between u and a facility in F. The goal is to find a set F of k facilities that minimizes the sum, over all customers, of their service costs. Following the work of Mettu and Plaxton, we study the incremental medians problem, where k is not known in advance. An incremental algorithm produces a nested sequence of facility sets F 1⊆F 2⊆⋅⋅⋅⊆F n , where |F k |=k for each k. Such an algorithm is called c -cost-competitive if the cost of each F k is at most c times the optimum k-median cost. We give improved incremental algorithms for the metric version of this problem: an 8-cost-competitive deterministic algorithm, a 2e≈5.44-cost-competitive randomized algorithm, a (24+ε)-cost-competitive, polynomial-time deterministic algorithm, and a 6e+ε≈16.31-cost-competitive, polynomial-time randomized algorithm. We also consider the competitive ratio with respect to size. An algorithm is s -size-competitive if the cost of each F k is at most the minimum cost of any set of k facilities, while the size of F k is at most sk. We show that the optimal size-competitive ratios for this problem, in the deterministic and randomized cases, are 4 and e. For polynomial-time algorithms, we present the first polynomial-time O(log m)-size-approximation algorithm for the offline problem, as well as a polynomial-time O(log m)-size-competitive algorithm for the incremental problem. Our upper bound proofs reduce the incremental medians problem to the following online bidding problem: faced with some unknown threshold T∈ℝ+, an algorithm must submit “bids” b∈ℝ+ until it submits a bid b≥T, paying the sum of all its bids. We present folklore algorithms for online bidding and prove that they are optimally competitive. We extend some of the above results for incremental medians to approximately metric distance functions and to incremental fractional medians. Finally, we consider a restricted version of the incremental medians problem where k is restricted to one of two given values, for which we give a deterministic algorithm with a nearly optimal cost-competitive ratio.	approximation algorithm;competitive analysis (online algorithm);deterministic algorithm;dynamic problem (algorithms);fractional fourier transform;incremental compiler;k-medians clustering;online and offline;polynomial;randomized algorithm;time complexity	Marek Chrobak;Claire Mathieu;John Noga;Neal E. Young	2007	Algorithmica	10.1007/s00453-007-9005-x	mathematical optimization;combinatorics;metric;combinatorial optimization;graph theory;mathematics;geometry;approximation algorithm;algorithm;statistics	Theory	21.114993860735435	14.223647806283296	193840
6d751cd218ac859fcac414c68caebb75b9e6d2ef	mip reformulations of the probabilistic set covering problem	modelizacion;location problem;simplification;probleme localisation;localisation installation;cutting planes;programacion entera;programmation stochastique;condicion estacionaria;forme disjonctive;condition stationnaire;test bed;set covering problem;probabilistic approach;mediane;median;programmation en nombres entiers;random vector;modelisation;distribution function;probleme recouvrement;programacion mixta entera;couverture;problema recubrimiento;stationary distribution;integer programming;computer experiment;mathematical programming;enfoque probabilista;approche probabiliste;disjunctive form;metodo plano secante;90 08;recouvrement ensemble;simplificacion;stationary condition;programmation partiellement en nombres entiers;coaccion capacidad;mixed integer programming;90c15;probabilistic programming;vector aleatorio;contrainte capacite;coverage;forma disyuntiva;mediana;problema localizacion;set covering;methode plan secant;cubierta conjunto;covering problem;capacity constraint;stochastic programming;modeling;programmation mathematique;vecteur aleatoire;set cover;programacion estocastica;programacion matematica;cutting plane method;facility location;cobertura;90c10	In this paper, we address the following probabilistic version (PSC) of the set covering problem: min{cx | P(Ax ≥ ξ) ≥ p, x ∈ {0, 1}N } where A is a 0-1 matrix, ξ is a random 0-1 vector and p ∈ (0, 1] is the threshold probability level. We introduce the concepts of p-inefficiency and polarity cuts. While the former is aimed at deriving an equivalent MIP reformulation of (PSC), the latter is used as a strengthening device to obtain a stronger formulation. Simplifications of the MIP model which result when one of the following conditions hold are briefly discussed: A is a balanced matrix, A has the circular ones property, the components of ξ are pairwise independent, the distribution function of ξ is a stationary distribution or has the disjunctive shattering property. We corroborate our theoretical findings by an extensive computational experiment on a test-bed consisting of almost 10,000 probabilistic instances. This test-bed was created using deterministic instances from the literature and consists of probabilistic variants of the set covering model and capacitated versions of facility location, warehouse location and k-median models. Our computational results show that our procedure is orders of magnitude faster than any of the existing approaches to solve (PSC), and in many cases can reduce hours of computing time to a fraction of a second. Anureet Saxena’s research was supported by the National Science Foundation through grant #DMI-0352885 and by the Office of Naval Research through contract N00014-03-1-0133. Vineet Goyal’s research was supported in part by NSF grant CCF-0430751 and ITR grant CCR-0122581. A. Saxena · V. Goyal Tepper School of Business, Carnegie Mellon University, Pittsburgh, PA 15213, USA e-mail: anureets@andrew.cmu.edu V. Goyal e-mail: vgoyal@andrew.cmu.edu M. A. Lejeune (B) LeBow College of Business, Drexel University, Philadelphia, PA 19104, USA e-mail: mlejeune@drexel.edu	covering problems;disjunctive normal form;email;ibm notes;multi-function printer;set cover problem;stationary process;testbed	Anureet Saxena;Vineet Goyal;Miguel A. Lejeune	2010	Math. Program.	10.1007/s10107-008-0224-y	mathematical optimization;integer programming;calculus;mathematics;set cover problem;algorithm	Theory	21.00100816372559	14.81763257681208	194010
145cc44bd8762efda4a6b3c63ad91464a039587f	the container selection problem	004;approximation algorithms;geometric hitting set;non metric k median;non metric k median geometric hitting set approximation algorithms cloud computing cross platform scheduling;cross platform scheduling;cloud computing	We introduce and study a network resource management problem that is a special case of nonmetric k-median, naturally arising in cross platform scheduling and cloud computing. In the continuous d-dimensional container selection problem, we are given a set C ⊂ R of input points, for some d ≥ 2, and a budget k. An input point p can be assigned to a “container point” c only if c dominates p in every dimension. The assignment cost is then equal to the `1-norm of the container point. The goal is to find k container points in R, such that the total assignment cost for all input points is minimized. The discrete variant of the problem has one key distinction, namely, the container points must be chosen from a given set F of points. For the continuous version, we obtain a polynomial time approximation scheme for any fixed dimension d ≥ 2. On the negative side, we show that the problem is NP-hard for any d ≥ 3. We further show that the discrete version is significantly harder, as it is NP-hard to approximate without violating the budget k in any dimension d ≥ 3. Thus, we focus on obtaining bi-approximation algorithms. For d = 2, the bi-approximation guarantee is (1 + , 3), i.e., for any > 0, our scheme outputs a solution of size 3k and cost at most (1 + ) times the optimum. For fixed d > 2, we present a (1 + , O( 1 log k)) bi-approximation algorithm. 1998 ACM Subject Classification F.2.2 Nonnumerical Algorithms and Problems	approximation algorithm;cloud computing;dominator (graph theory);np-hardness;polynomial;polynomial-time approximation scheme;scheduling (computing);selection algorithm	Viswanath Nagarajan;Kanthi K. Sarpatwar;Baruch Schieber;Hadas Shachnai;Joel L. Wolf	2015		10.4230/LIPIcs.APPROX-RANDOM.2015.416	mathematical optimization;combinatorics;discrete mathematics;mathematics	Theory	19.39410045096681	15.173745197138468	195077
cbdf7e44dc22bede8a811ee5c133f6489d18825d	the structure and complexity of nash equilibria for a selfish routing game	trafic;distribution;algorithmic game theory;latencia;syntax;game theory;probability;structure combinatoire;algorithmique;strategie mixte;maximo;nash equilibrium;loi probabilite;ley probabilidad;complexite calcul;fonction repartition;routing;latence;efficient algorithm;attente;trafico;usuario;routage;teoria juego;utilisateur;maximum;theorie jeu;reseau;nash equilibria;calculo automatico;syntaxe;selfish routing;68wxx;computing;red;algorithme;calcul automatique;algorithm;funcion distribucion;distribution function;complejidad computacion;equilibre;algorithmics;algoritmica;computational complexity;informatique theorique;estrategia mixta;probability distribution;probabilidad;probabilite;traffic;coste;expectation;vinculo;user;latency;equilibrium;equilibrio;sintaxis;distribucion;link;network congestion;expectacion;lien;network;computer theory;mixed strategy;cout;algoritmo;informatica teorica;enrutamiento	In this work, we study the combinatorial structure and the computational complexity of Nash equilibria for a certain game that models selfish routing over a network consisting of m parallel links. We assume a collection of n users, each employing a mixed strategy, which is a probability distribution over links, to control the routing of her own traffic. In a Nash equilibrium, each user selfishly routes her traffic on those links that minimize her expected latency cost, given the network congestion caused by the other users. The social cost of a Nash equilibrium is the expectation, over all random choices of the users, of the maximum, over all links, latency through a link.We embark on a systematic study of several algorithmic problems related to the computation of Nash equilibria for the selfish routing game we consider. In a nutshell, these problems relate to deciding the existence of a pure Nash equilibrium, constructing a Nash equilibrium, constructing the pure Nash equilibria of minimum and maximum social cost, and computing the social cost of a given mixed Nash equilibrium. Our work provides a comprehensive collection of efficient algorithms, hardness results, and structural results for these algorithmic problems. Our results span and contrast a wide range of assumptions on the syntax of the Nash equilibria and on the parameters of the system.	nash equilibrium;routing	Dimitris Fotakis;Spyros C. Kontogiannis;Elias Koutsoupias;Marios Mavronicolas;Paul G. Spirakis	2009	Theor. Comput. Sci.	10.1016/j.tcs.2008.01.004	price of stability;game theory;epsilon-equilibrium;traveler's dilemma;best response;trembling hand perfect equilibrium;coordination game;computer science;subgame;artificial intelligence;non-credible threat;folk theorem;repeated game;mathematics;correlated equilibrium;chicken;risk dominance;normal-form game;mathematical economics;algorithmics;equilibrium selection;solution concept;algorithm;price of anarchy;nash equilibrium	ECom	21.437365693577313	16.52215157865275	195460
e29a9489af2eced14c44e2497058dffef06fca02	phase transitions and backbones of 3-sat and maximum 3-sat	optimisation sous contrainte;probleme satisfiabilite;constrained optimization;satisfiability;constraint satisfaction;boolean satisfiability;constraint optimization problem;optimizacion con restriccion;resolucion problema;decision problem;optimization problem;combinatorial problem;satisfaction contrainte;probleme combinatoire;problema combinatorio;phase transition;problema satisfactibilidad;transition phase;phase transitions;transicion fase;satisfaccion restriccion;satisfiability problem;problem solving;resolution probleme	Many real-world problems involve constraints that cannot be all satisfied. Solving an overconstrained problem then means to find solutions minimizing the number of constraints violated, which is an optimization problem. In this research, we study the behavior of the phase transitions and backbones of constraint optimization problems. We first investigate the relationship between the phase transitions of Boolean satisfiability, or precisely 3-SAT (a well-studied NP-complete decision problem), and the phase transitions of MAX 3-SAT (an NP-hard optimization problem). To bridge the gap between the easy-hard-easy phase transitions of 3-SAT and the easy-hard transitions of MAX 3-SAT, we analyze bounded 3-SAT, in which solutions of bounded quality, e.g., solutions with at most a constant number of constraints violated, are sufficient. We show that phase transitions are persistent in bounded 3-SAT and are similar to that of 3-SAT. We then study backbones of MAX 3-SAT, which are critically constrained variables that have fixed values in all optimal solutions. Our experimental results show that backbones of MAX 3-SAT emerge abruptly and experience sharp transitions from nonexistence when underconstrained to almost complete when overconstrained. More interestingly, the phase transitions of MAX 3-SAT backbones seem to concur with the phase transitions of satisfiability of 3-SAT. The backbone of MAX 3-SAT with size 0.5 approximately collocates with the 0.5 satisfiability of 3-SAT, and the backbone and satisfiability seems to follow a linear correlation near this 0.5-0.5 collocation.	boolean satisfiability problem;collocation;constrained optimization;decision problem;internet backbone;mathematical optimization;max;np-completeness;np-hardness;optimization problem;persistent data structure;resource bounded measure	Weixiong Zhang	2001		10.1007/3-540-45578-7_11	phase transition;mathematical optimization;constrained optimization;combinatorics;computer science;mathematics;boolean satisfiability problem;algorithm	AI	21.158679980828843	17.520749117793912	195767
53ae5435bcae860dd0e769b2c87d28628bd30372	on a parallel machine scheduling problem with equal processing times	parallel machine scheduling;polynomial algorithm;linear programming;linear program	In this paper, we give a polynomial algorithm for problem P | r j , p j = p | f j (C j), where f j is any non-decreasing function such that for any indices i and j, function f i − f j is monotonous, and a polynomial algorithm for problem P | r j , p j = p, D j | max ϕ j (C j), where ϕ j is any non-decreasing function for any j.	algorithm;parallel computing;polynomial;scheduling (computing)	Svetlana A. Kravchenko;Frank Werner	2009	Discrete Applied Mathematics	10.1016/j.dam.2008.09.003	mathematical optimization;computer science;linear programming;theoretical computer science;mathematics;algorithm	Theory	18.18519843501698	11.904593266154766	196161
2fd3d2435791b2b5b73b07bc31c3eec855df40f6	design of capacitated minimum spanning tree with uncertain cost and demand parameters	minimal spanning tree;esau williams heuristic;capacitated minimal spanning tree problem;simulation;fuzzy logic;approximate reasoning;fuzzy algorithm;spanning tree;capacitated minimum spanning tree	The classical Capacitated Minimum Spanning Tree Problem (CMSTP) deals with finding a minimum-cost spanning tree so that the total demand of the vertices in each subtree does not exceed the capacity limitation. In most of the CMSTP models, the edge costs and the demands of the vertices in the network are assumed to be known with certainty. This paper considers the CMSTP model, where the edge costs and/or the demands are only approximately known. A fast approximate reasoning algorithm, which is based on the Esau-Williams savings heuristic and fuzzy logic rules, is proposed. The computational results of the study based on the proposed approach are also reported.	file spanning;minimum spanning tree	Temel Öncan	2007	Inf. Sci.	10.1016/j.ins.2007.02.023	fuzzy logic;segment tree;euclidean minimum spanning tree;mathematical optimization;combinatorics;discrete mathematics;kruskal's algorithm;minimum degree spanning tree;spanning tree;prim's algorithm;computer science;minimum spanning tree;gomory–hu tree;k-ary tree;interval tree;connected dominating set;k-minimum spanning tree;mathematics;reverse-delete algorithm;distributed minimum spanning tree	Theory	23.829938340673447	17.326004258765575	196512
3d212e056211da11f88c5a42efc92fc1799c7184	spatio-temporal games beyond one dimension		Protecting valuable \em targets from an adversary is an ever-important international concern with far-reaching applications in wildlife protection, border protection, counter-terrorism, protection of ships from piracy, etc. As a successful recent approach, \em security games cast these issues as two-player games between a \em defender and an \em attacker. The defender decides on how to allocate the available \em resources to protect targets against the attacker who strives to inflict damage on them. The main question of interest here is equilibrium computation. Our focus in this paper is on \em spatio-temporal security games. However, inspired by the paper of Xu [EC'16], we start with a general model of security games and show that any approximation (of any factor) for the defender's best response (DBR) problem leads to an approximation of the same factor for the actual game. In most applications of security games, the targets are mobile. This leads to a well-studied class of succinct games, namely \em spatio-temporal security games, that is played in space and time. In such games, the defender has to specify a time-dependent patrolling strategy over a spatial domain to protect a set of moving targets. We give a generalized model of prior spatio-temporal security games that is played on a base graph G . That is, the patrols can be placed on the vertices of G and move along its edges over time. This unifies and generalizes prior spatio-temporal models that only consider specific spatial domains such as lines or grids. Graphs can further model many other domains of practical interest such as roads, internal maps of buildings, etc. Finding an optimal defender strategy becomes NP-hard on general graphs. To overcome this, we give an LP relaxation of the DBR problem and devise a rounding technique to obtain an almost optimal integral solution. More precisely, we show that one can achieve a $(1-ε)$-approximation in polynomial time if we allow the defender to use $łceil łn(1/ε)\rceil$ times more patrols. We later show that this result is in some sense the best possible polynomial time algorithm (unless P=NP). Furthermore, we show that by using a novel \em dependent rounding technique, the same LP relaxation gives an optimal solution for specific domains of interest, such as one-dimensional spaces. This result simplifies and improves upon the prior algorithm of Behnezhad et al. ~[EC'17] on several aspects and can be generalized to other graphs of interest such as cycles. Lastly, we note that most prior algorithms for security games assume that the attacker attacks only once and become intractable for a super-constant number of attacks. Our algorithms are fully polynomial in the input size and work for any given number of attacks.	adversary (cryptography);algorithm;approximation;computation;cycle (graph theory);distributed bragg reflector;graph theory;information;lagrangian relaxation;linear programming relaxation;map;np-hardness;p (complexity);p versus np problem;polynomial;rounding;time complexity;vertex (graph theory)	Soheil Behnezhad;Mahsa Derakhshan;Mohammad Taghi Hajiaghayi;Saeed Seddighin	2018		10.1145/3219166.3219228	time complexity;mathematical optimization;adversary;linear programming relaxation;computation;best response;nash equilibrium;polynomial;mathematics;rounding	ECom	19.437931261052178	17.644793478725028	197559
7cef915e48eab96dc3ccd3e3c31ed8ec08e903e2	approximation algorithms for minimum norm and ordered optimization problems		In many optimization problems, a feasible solution induces a multi-dimensional cost vector. For example, in load-balancing a schedule induces a load vector across the machines. In k-clustering, opening k facilities induces an assignment cost vector across the clients. Typically, one seeks a solution which either minimizes the sumor the maxof this vector, and these problems (makespan minimization, kmedian, and k-center) are classic NP-hard problems which have been extensively studied. In this paper we consider the minimum norm optimization problem. Given an arbitrary monotone, symmetric norm, the problem asks to find a solution which minimizes the norm of the induced costvector. These functions are versatile and model a wide range of problems under one umbrella. We give a general framework to tackle the minimum norm problem, and illustrate its efficacy in the unrelated machine load balancing and k-clustering setting. Our concrete results are the following. • We give constant factor approximation algorithms for the minimum norm load balancing problem in unrelated machines, and the minimum norm k-clustering problem. To our knowledge, our results constitute the first constant-factor approximations for such a general suite of objectives. • In load balancing with unrelated machines, we give a 2-approximation for the problem of finding an assignment minimizing the sum of the largest l loads, for any l. We give a (2+ε)-approximation for the so-called ordered load-balancing problem. • For k-clustering, we give a (5 + ε)-approximation for the ordered k-median problem significantly improving the constant factor approximations from Byrka, Sornat, and Spoerhase (STOC 2018) and Chakrabarty and Swamy (ICALP 2018). • Our techniques also imply O(1) approximations to the best simultaneous optimization factor for any instance of the unrelated machine load-balancing and the k-clustering setting. To our knowledge, these are the first positive simultaneous optimization results in these settings. At a technical level, our main insight is connecting minimum-norm optimization to what we call minmax ordered optimization. The main ingredient in solving the min-max ordered optimization is deterministic, oblivious rounding of linear programming relaxations for load-balancing and clustering, and this technique may be of independent interest. Dartmouth College, Email: deeparnab@dartmouth.edu University of Waterloo, Email: cswamy@uwaterloo.edu	approximation algorithm;cluster analysis;combinatorial optimization;email;icalp;k-medians clustering;linear programming;load balancing (computing);makespan;mathematical optimization;maxima and minima;metric k-center;minimax;np-hardness;optimization problem;program optimization;rounding;symposium on theory of computing;monotone	Deeparnab Chakrabarty;Chaitanya Swamy	2018	CoRR			Theory	19.315502120101225	14.744620421751417	198036
