id	title	keywords	abstract	entities	authors	year	journal	doi	fos	area	x	y	ix
be5363ebbc08fe04ae281bcb09cc4a5574362ffe	optimal gossiping in square 2d meshes	parallel and distributed system;algorithme rapide;networks;nudo;gossiping;reseau;68wxx;red;diffusion information;informatique theorique;fast algorithm;information dissemination;network algorithm;algorithms;meshes;noeud;difusion informacion;algoritmo optimo;algorithme optimal;optimal algorithm;communication;comunicacion;article;node;algoritmo rapido;network;computer theory;informatica teorica	Gossiping is the communication problem in which each node has a unique message to be transmitted to every other node. The nodes exchange their message by packets. A solution to the problem is judged by how many rounds of packet sending it requires. In this paper, we consider the version of the problem in which small-size packets each carrying exactly one message are used. The nodes of the target meshes are assumed to be all-port (a node’s incident edges can all be active at the same time); and their edges are either half-duplex or full-duplex, which are also known as the H* model and the F* model, respectively. We study the class of 2D square meshes. Soch and Tvrdik (SIROCCO’97, pp. 253–265; Tech. rep. DC-97-04, Dept. of CS&E, Czech Technical University) have obtained optimal algorithms for the F* model (for square or nonsquare meshes). Lau and Zhang (IEEE Trans. Parallel Distribut. Syst. 13 (4) (2002) 349–358) have obtained fast algorithms for the H* model. We present optimal algorithms for both models, with the interesting property that they route their messages along the same paths and in the same order, i.e. for any edge {u, v}, the i-th message from u to v under either model is the same message. c © 2007 Elsevier B.V. All rights reserved.	algorithm;duplex (telecommunications);network packet;pp (complexity);time complexity	Rui Wang;Francis C. M. Lau	2007	Theor. Comput. Sci.	10.1016/j.tcs.2007.04.032	polygon mesh;gossip;telecommunications;computer science;distributed computing;node;algorithm	Theory	18.883990105293346	31.497618647400838	159910
a3db4970f7731effaf313b29d091e10b7dcfcd6e	parallelism in graph-partitioning	tratamiento paralelo;graphe non oriente;non directed graph;descomposicion grafo;algoritmo busqueda;traitement parallele;algorithme recherche;heuristic method;search algorithm;metodo heuristico;simulated annealing;recuit simule;graph partitioning;particion;methode kernighan lin;grafo no orientado;partition;recocido simulado;methode heuristique;parallel processing;graph decomposition;decomposition graphe	Graph partitioning is an important NP-complete problem with applications in VLSI CAD, processor allocation, and many other areas. The problem is to partition vertices of a graph into two equal-sized sets so that the number of edges joining the sets is minimum. In this paper we show that the Kernighan-Lin heuristic is P-complete and the simulated annealing heuristic is Phard, which suggests that they are both hard to parallelize. We also describe a new parallel heuristic (which we call the Mob heuristic) that on the 32K-processor CM-2 Connection Machine handles graphs with more than two million edges and gives in 9-min partitions that are within 2% of the best ever found.	computer-aided design;connection machine;graph partition;heuristic;kernighan–lin algorithm;p-complete;simulated annealing;vertex (graph theory);very-large-scale integration	John E. Savage;Markus G. Wloka	1991	J. Parallel Distrib. Comput.	10.1016/0743-7315(91)90074-J	partition;parallel processing;mathematical optimization;combinatorics;parallel computing;simulated annealing;computer science;graph partition;mathematics;data parallelism;instruction-level parallelism;implicit parallelism;algorithm;task parallelism;search algorithm	Theory	18.379297702459635	28.30628050280475	160218
222729b5f9aefcec31a1bdb9af8139eee869ad71	parallel algorithms for separable permutations	algoritmo paralelo;complejidad espacio;optimisation;parallel algorithm;combinatorics;algorithm complexity;optimizacion;05c05;combinatoria;complejidad algoritmo;tree traversal;combinatoire;68wxx;algorithme parallele;decision problem;complexite algorithme;informatique theorique;pattern matching;separable permutation;space complexity;optimization;concordance forme;complexite espace;separable permutations;68w10;computer theory;permutation separable;parallel algorithms;informatica teorica	In this paper, it is shown that on the CREW model we can test whether a given permutation of 1,...,n is separable in O(log n) time with n processors. If d is the depth of the optimal (minimum) depth separating tree of a separable permutation, then a separating tree of depth Θ(d) can be constructed on the CREW model in O(log n) time with O(n2) cost or alternatively in O(d log n) time with O(nd) cost. We can test whether the given separable permutation P of 1,..., k has a match in a permutation T of 1,..., n (n ≥ k) in O(d log n) time with O(kn4) cost (the same as that of the serial algorithm). We can also find the number of matches of P in T in O(d log n) time with O(kn6) cost (the same as that of the serial algorithm). Both algorithms are for the CREW model. We also discuss how the space complexity of the existing serial algorithms for the decision problem can be reduced from O(kn3) to O(n3 log k) and of the counting version from O(kn4) to O(n4 log k).	parallel algorithm;separable permutation	V. Yugandhar;Sanjeev Saxena	2005	Discrete Applied Mathematics	10.1016/j.dam.2004.10.004	mathematical optimization;combinatorics;discrete mathematics;mathematics;parallel algorithm;algorithm	Theory	17.53006163300224	27.230034034099813	161593
c2ade72db6f0934b2f413d1e6d789907f02e5c13	randomly colouring graphs with girth five and large maximum degree	maximum degree;coloracion grafo;coloration graphe;glauber dynamics;informatique theorique;graph colouring;computer theory;informatica teorica	We prove that the Glauber dynamics on the k-colourings of a graph G on n vertices with girth 5 and maximum degree ∆ ≥ 1000 log n mixes rapidly if k = q∆ and q > β where β = 1.645... is the root of 2 − (1 − e−1/β)2 − 2βe−1/β = 0.	degree (graph theory);girth (graph theory);glauber;randomness	Lap Chi Lau;Michael Molloy	2006		10.1007/11682462_61	combinatorics;discrete mathematics;degree;mathematics	Theory	23.990129229256425	31.505110105410633	161952
67576c4ed2506ef10bc4b00e6830b2191d163563	on four-connecting a triconnected graph (extended abstract)	graph theory;efficient algorithm;computational geometry;graph theoretic problem;reliable networks;connected graph;parallel algorithms phase change random access memory polynomials tree graphs application software computer network reliability fault tolerance computer networks;computational complexity;triconnected graph;inverse ackermann function;graph theory computational complexity computational geometry;four connecting;inverse ackermann function four connecting triconnected graph graph theoretic problem reliable networks;lower bound	We consider the problem of finding a smallest set of edges whose addition four-connects a triconnected graph. This is a fundamental graph-theoretic problem that has applications in designing reliable networks. We present an O(na(m,n) + m) time sequential algorithm for four-connecting an undirected graph G that is triconnected by adding the smallest number of edges, where n and m are the number of vertices and edges in G, respectively, and cr(m,n) is the inverse Ackermann's function. In deriving our algorithm, we present a new lower bound for the number of edges needed to four-connect a triconnected graph. The form of this lower bound is different from the form of the lower bound known for biconnectivity augmentation and triconnectivity augmentation. Our new lower bound applies for arbitrary k, and gives a tighter lower bound than the one known earlier for the number of edges needed to k-connect a ( k 1)-connected graph. For k = 4, we show that this lower bound is tight by giving an efficient algorithm for finding a set of edges with the required sire whose addition four-connects a triconnected graph.	ackermann function;gnss augmentation;graph (discrete mathematics);graph theory;sequential algorithm	Tsan-sheng Hsu	1992		10.1109/SFCS.1992.267817	spqr tree;graph power;combinatorics;discrete mathematics;directed graph;multiple edges;graph bandwidth;null graph;graph labeling;computational geometry;connectivity;graph theory;theoretical computer science;simplex graph;mixed graph;hypercube graph;cycle graph;cubic graph;mathematics;voltage graph;upper and lower bounds;computational complexity theory;butterfly graph;quartic graph;complement graph;semi-symmetric graph;line graph;algorithm;strength of a graph;coxeter graph	Theory	21.129019291059326	31.054063083446852	162996
c9adbd68987c627ceb551d5566aa10470f2e38d6	an optimal randomized parallel algorithm for the single function coarsest partition problem	algoritmo paralelo;optimisation;pram;partition method;parallel algorithm;optimizacion;time complexity;euler tours;algorithme parallele;aleatorizacion;complexite temps;methode partition;randomized algorithm;randomisation;optimization;metodo particion;complejidad tiempo;randomization;coarsest partition;parallel algorithms	We describe a randomized parallel algorithm to solve the single function coarsest partition problem. The algorithm runs in O(log n) time using O(n) operations with high probability on the Priority CRCW PRAM. The previous best known algorithms run in O(log2 n) time using O(n log2 n) operations on the CREW PRAM and O(log n) time using O(n log log n) operations on the Arbitrary CRCW PRAM. The technique presented can be used to generate the Euler tour of a rooted tree optimally from the parent representation.	parallel algorithm;partition problem;randomized algorithm	Joseph JáJá;Kwan Woo Ryu	1996	Parallel Processing Letters	10.1142/S0129626496000182	mathematical optimization;combinatorics;parallel computing;computer science;mathematics;parallel algorithm;algorithm	HPC	17.910510791301412	28.12001020543597	163058
5101a9a50f7a156ef33100615abac5994d651e99	edge disjoint paths in moderately connected graphs	graphe non oriente;graph theory;approximation asymptotique;teoria grafo;non directed graph;grado grafo;camino grafo;graph path;routing;probleme np complet;approximation algorithm;routage;terminal;theorie graphe;arete disjointe;connected graph;grid;graph connectivity;disjoint edge;grafo no orientado;rejilla;graphe planaire;conectividad grafo;algoritmo aproximacion;chemin graphe;grille;problema np completo;degre graphe;asymptotic approximation;grafo planario;algorithme approximation;arista disyuntiva;connectivite graphe;graphe connexe;planar graph;np complete problem;graph degree;aproximacion asintotica;grafo conexo;enrutamiento	We study the Edge Disjoint Paths (EDP) problem in undirected graphs: Given a graph G with n nodes and a set ${\mathcal T}$ of pairs of terminals, connect as many terminal pairs as possible using paths that are mutually edge disjoint. This leads to a variety of classic NP-complete problems, for which approximability is not well understood. We show a polylogarithmic approximation algorithm for the undirected EDP problem in general graphs with a moderate restriction on graph connectivity; we require the global minimum cut of G to be Ω(log5n). Previously, constant or polylogarithmic approximation algorithms were known for trees with parallel edges, expanders, grids and grid-like graphs, and most recently, even-degree planar graphs. These graphs either have special structure (e.g., they exclude minors) or there are large numbers of short disjoint paths. Our algorithm extends previous techniques in that it applies to graphs with high diameters and asymptotically large minors.		Satish Rao;Shuheng Zhou	2006		10.1007/11786986_19	1-planar graph;block graph;pathwidth;mathematical optimization;combinatorics;discrete mathematics;robertson–seymour theorem;cograph;independent set;topology;computer science;connectivity;graph theory;hopcroft–karp algorithm;pancyclic graph;comparability graph;clique-sum;mathematics;trémaux tree;maximal independent set;modular decomposition;treewidth;partial k-tree;chordal graph;indifference graph;tree;approximation algorithm;algorithm	Theory	21.6512761807015	28.183766071451615	163089
575ca271c8a1c1346b2ffbcc2005e70643e36c63	the spanning tree problem with one quadratic term			minimum spanning tree	Christoph Buchheim;Laura Klein	2013			combinatorics;euclidean minimum spanning tree;discrete mathematics;minimum spanning tree;connected dominating set;computer science;quadratic equation;k-minimum spanning tree;minimum degree spanning tree;spanning tree	Crypto	23.2399772592385	26.45220679866668	163160
e780d2027fa911d65a051ec42e6e8ebf86ac8378	nested graphs	mincut;series-parallel graph;directed acyclic graph	We define a two-terminal directed acyclic graph (st-dag) characterized by a special structure of its mincuts and call it a nested graph. It is proved that every nested graph is series-parallel as well. We show that an st-dag of order n has exactly n− 1 mincuts if and only if it is nested.	directed acyclic graph;graph theory;series-parallel graph	Mark Korenblit;Vadim E. Levit	2006	Electronic Notes in Discrete Mathematics	10.1016/j.endm.2006.06.016		Theory	24.431416760422433	26.266659183332234	163242
845e0446eeffcf9dcfe3b53dfe424262f97fd2bc	finding the k shortest hyperpaths using reoptimization	camino mas corto;metodo caso peor;grafo aciclico;shortest path;hipergrafico;time dependent;reoptimization;complexite calcul;directed hypergraphs;plus court chemin;graphe acyclique;k shortest paths;acyclic graph;complejidad computacion;computational complexity;directed graph;graphe oriente;methode cas pire;k shortest hyperpaths;grafo orientado;hypergraph;network programming;worst case method;shortest path problem;hypergraphe	We present some reoptimization techniques for computing (shortest) hyperpath weights in a directed hypergraph. These techniques are exploited to improve the worst-case computational complexity (as well as the practical performance) of an algorithm finding the K shortest hyperpaths in acyclic hypergraphs.	algorithm;best, worst and average case;central processing unit;computation;computational complexity theory;directed acyclic graph	Lars Relund Nielsen;Daniele Pretolani;Kim Allan Andersen	2006	Oper. Res. Lett.	10.1016/j.orl.2005.04.008	combinatorics;discrete mathematics;computer science;mathematics;shortest path problem;k shortest path routing;algorithm	Theory	19.684579558363716	26.90894350498737	163519
2c559478966ae8ff8b38b7a9252f66c9845fa47d	swapping a failing edge of a shortest paths tree by minimizing the average stretch factor	minimisation;camino mas corto;shortest path;minimization;complejidad espacio;algorithm complexity;tree;time complexity;05c05;complejidad algoritmo;nudo;arbol;plus court chemin;average distance;minimizacion;reseau;space time;espacio tiempo;68wxx;red;moyenne;algorithme;connected graph;algorithm;network survivability;complexite temps;complexite algorithme;informatique theorique;promedio;68r10;edge graph;shortest path tree;chemin plus court;optimality criteria;space complexity;single source shortest path;distancia;arbre;arete graphe;average;noeud;complexite espace;complejidad tiempo;single source shortest paths tree;node;graphe connexe;swap algorithms;espace temps;distance;arista grafico;network;computer theory;algoritmo;grafo conexo;informatica teorica	We consider a two-edge connected, undirected graph G = (V, E), with n nodes and m non-negatively real weighted edges, and a single source shortest paths tree (SPT) T of G rooted at an arbitrary node r . If an edge in T is temporarily removed, it makes sense to reconnect the nodes disconnected from the root by adding a single non-tree edge, called a swap edge, instead of rebuilding a new optimal SPT from scratch. In the past, several optimality criteria have been considered to select a best possible swap edge. In this paper we focus on the most prominent one, that is the minimization of the average distance between the root and the disconnected nodes. To this respect, we present an O(m log2 n) time and O(m) space algorithm to find a best swap edge for every edge of T , thus improving for m = o(n2/ log2 n) the previously known O(n2) time and space complexity algorithm. c © 2007 Elsevier B.V. All rights reserved.	algorithm;binary logarithm;dspace;failure;graph (discrete mathematics);hall-effect thruster;hot swapping;paging;shortest path problem	Aleksej Di Salvo;Guido Proietti	2007	Theor. Comput. Sci.	10.1016/j.tcs.2007.03.046	time complexity;minimisation;combinatorics;computer science;connectivity;space time;mathematics;geometry;tree;dspace;node;shortest path problem;distance;algorithm;shortest-path tree	Theory	21.583699576535377	29.554986176752987	164300
28835b7d1460cc1e4e6c1a948d305acd729d4d8d	output-sensitive listing of bounded-size trees in undirected graphs	n vertex;optimal output-sensitive algorithm;k vertex;output-sensitive listing;undirected graph;combinatorial pattern;bounded-size tree;m edge	Motivated by the discovery of combinatorial patterns in an undirected graph G with n vertices and m edges, we study the problem of listing all the trees with k vertices that are subgraphs of G. We present the first optimal output-sensitive algorithm, i.e. runs in O(sk) time where s is the number of these trees in G, and uses O(m) space.	graph (discrete mathematics)	Rui A. Ferreira;Roberto Grossi;Romeo Rizzi	2011		10.1007/978-3-642-23719-5_24	combinatorics;discrete mathematics;level structure;mathematics;trémaux tree;tree;algorithm	Theory	24.11865015333485	26.63909195464782	164972
231d0b353c2d503a18ef834d2a69b42061690387	the irreducible core of a minimum cost spanning tree game	graph theory;teoria grafo;game theory;game core;arbre maximal;noyau jeu;teoria juego;theorie jeu;reseau;theorie graphe;red;allocation noyau;arbol maximo;core allocation;noyau irreductible;nucleo juego;spanning tree;asignacion nucleo;allocation marginale;network	It is a known result that for a minimum cost spanning tree (mcst) game a Core allocation can be deduced directly from a mcst in the underlying network. To determine this Core allocation one only needs to determine a mcst in the network and it is not necessary to calculate the coalition values of the corresponding mcst game. In this paper we will deduce other Core allocations directly from the network, without determining the corresponding mcst game itself: we use an idea of Bird (cf. [4]) to present two procedures that determine a part of the Core (called the Irreducible Core) from the network.	file spanning;irreducibility;minimum spanning tree	Harry Aarts;Theo S. H. Driessen	1993	ZOR - Meth. & Mod. of OR	10.1007/BF01414212	game theory;combinatorics;spanning tree;artificial intelligence;graph theory;mathematics;mathematical economics	ECom	23.1670552551074	29.33892236082857	165212
0e227a00463630110df43e3c03404a12ba89700b	minimum depth graph embedding	embedding;graph drawing;temps lineaire;linear time algorithm;depth;calculo automatico;tiempo lineal;computing;calcul automatique;connected graph;resolucion problema;graphe planaire;linear time;plongement;profundidad;graph embedding;inmersion;profondeur;grafo planario;graphe connexe;planar graph;problem solving;resolution probleme;grafo conexo	The depth of a planar embedding is a measure of the topological nesting of the biconnected components of the graph. Minimizing the depth of planar embeddings has important practical applications to graph drawing. We give a linear time algorithm for computing a minimum depth embedding of a planar graphs whose biconnected components have a prescribed embedding.	algorithm;biconnected component;biconnected graph;graph drawing;graph embedding;planar graph;time complexity	Maurizio Pizzonia;Roberto Tamassia	2000		10.1007/3-540-45253-2_33	biconnected component;outerplanar graph;spqr tree;block graph;topological graph theory;combinatorics;computing;discrete mathematics;polyhedral graph;graph embedding;topology;computer science;linkless embedding;embedding;planar straight-line graph;mathematics;voltage graph;biconnected graph;graph drawing;butterfly graph;graph minor;book embedding;line graph;algorithm;planar graph	Theory	24.098439367606776	29.640430087882184	166079
5462a2e795be0aba084a8d5bf5f62a818a0f7670	semi-preemptive routing on trees	arbre graphe;objet;pickup and delivery;optimisation;dial a ride;approximate algorithm;combinatorics;optimizacion;tree graph;05c05;routing;combinatoria;color;approximation algorithm;aproximacion;combinatoire;routage;colored arborescences;object;approximation;ciclo;informatique theorique;68r10;transportation;algoritmo aproximacion;68xx;graph algorithm;couleur;optimization;algorithme graphe;algorithme approximation;arbol grafo;cycle;68w25;objeto;stacker crane;computer theory;informatica teorica;enrutamiento	We study a variant of the pickup-and-delivery problem (PDP) in which the objects that have to be transported can be reloaded at most d times, for a given d ∈ N. This problem is known to be polynomially solvable on paths or cycles and NP-complete on trees. We present a (4/3 + ε)-approximation algorithm if the underlying graph is a tree. By using a result of Charikar et al. [M. Charikar, C. Chekuri, A. Goel, S. Guha, S. Plotkin, Approximating a finitemetric by a small number of treemetrics, in: FOCS ’98: Proceedings of the 39thAnnual Symposium on Foundations of Computer Science, IEEE Computer Society, Washington, DC, USA, 1998, pp. 379–388], this can be extended to a O(log n log log n)-approximation for general graphs. © 2008 Elsevier B.V. All rights reserved.	cycle (graph theory);decision problem;dijkstra's algorithm;directed graph;np-completeness;plotkin bound;routing;semiconductor industry;symposium on foundations of computer science	Sven Oliver Krumke;Dirk Räbiger;Rainer Schrader	2008	Discrete Applied Mathematics	10.1016/j.dam.2008.05.016	transport;mathematical optimization;routing;combinatorics;object;approximation;mathematics;tree;approximation algorithm;algorithm	Theory	20.593332384973397	26.16399199548484	166286
c26814f967c8dec5bbd345cb4932a088b1a92cd5	a parallel algorithm for the minimum spanning tree on an simd machine	parallel algorithm;tuple space;transputer;minimum spanning tree;time use;speculative processing;parallel lisp	A parallel algorithm for constructing a minimum spanning tree of a connected, weighted, undirected graph in O(log <italic>m</italic>) time using O(<italic>m + </italic>) processors is presented for an SIMD machine where <italic>m</italic> and <italic>n</italic> denote the number of edges and vertices respectively.	central processing unit;file spanning;graph (discrete mathematics);minimum spanning tree;parallel algorithm;simd	Francis Suraweera;Prabir Bhattacharya	1992		10.1145/131214.131274	euclidean minimum spanning tree;kruskal's algorithm;parallel computing;minimum degree spanning tree;spanning tree;prim's algorithm;computer science;tuple space;theoretical computer science;minimum spanning tree;gomory–hu tree;connected dominating set;k-minimum spanning tree;distributed computing;parallel algorithm;reverse-delete algorithm;distributed minimum spanning tree;shortest-path tree	Theory	17.99519845096824	28.87169340756599	166293
4604b47497f27019bccda6f0715b08ba41a8f351	error compensation in leaf power problems	graph theory;teoria grafo;algorithmique;subgrafo;probleme np complet;correction erreur;np completeness;fixed parameter tractable;graph power leaf power forbidden subgraph characterization;fixed parameter tractability;theorie graphe;connected graph;feuille vegetal;algorithmics;plant leaf;algoritmica;sous graphe;error correction;error compensation;edge graph;pattern recognition;rooted tree;arete graphe;problema np completo;reconnaissance forme;correccion error;subgraph;reconocimiento patron;graph algorithms;graph modification;graphe connexe;arista grafico;np complete problem;hoja vegetal;grafo conexo	"""The k-Leaf Power recognition problem is a particular case of graph power problems: For a given graph it asks whether there exists an unrooted tree—the k-leaf root—with leaves one-to-one labeled by the graph vertices and where the leaves have distance at most k iff their corresponding vertices in the graph are connected by an edge. Here we study """"error correction"""" versions of k-Leaf Power recognition—that is, adding or deleting at most l edges to generate a graph that has a k-leaf root. We provide several NP-completeness results in this context, and we show that the NP-complete Closest 3-Leaf Power problem (the error correction version of 3-Leaf Power) is fixed-parameter tractable with respect to the number of edge modifications or vertex deletions in the given graph. Thus, we provide the seemingly first nontrivial positive algorithmic results in the field of error compensation for leaf power problems with k > 2. To this end, as a result of independent interest, we develop a forbidden subgraph characterization of graphs with 3-leaf roots."""	cobham's thesis;error detection and correction;forbidden graph characterization;graph power;karp's 21 np-complete problems;np-completeness;one-to-one (data model);parameterized complexity	Michael Dom;Jiong Guo;Falk Hüffner;Rolf Niedermeier	2005	Algorithmica	10.1007/s00453-005-1180-z	loop;graph power;mathematical optimization;factor-critical graph;combinatorics;discrete mathematics;np-complete;independent set;graph bandwidth;level structure;null graph;degree;computer science;distance-regular graph;graph theory;forbidden graph characterization;cycle graph;graph factorization;mathematics;voltage graph;distance-hereditary graph;geometry;biconnected graph;butterfly graph;algorithmics;complement graph;line graph;algorithm;string graph;strength of a graph	Theory	22.11364524644856	25.721354607475885	166613
5a723860f94459b61b65c2ccae4aa59b0e409636	multigraph decomposition into stars and into multistars	star graph;decomposition;probleme np complet;metodo descomposicion;condition necessaire suffisante;methode decomposition;multiplicite;npc;decision problem;multigraph;decomposition method;multigrafo;necessary and sufficient condition;multiplicidad;grafo estrella;graphe etoile;completitud;problema np completo;completeness;multigraphe;stars;completude;multiplicity;condicion necesaria suficiente;multigraphs;np complete problem	We study the decomposition of multigraphs with a constant edge multiplicity into copies of a fixed starH =K1,t :We present necessary and sufficient conditions for such a decomposition to exist where t =2 and prove NP-completeness of the corresponding decision problem for any t 3.We also prove NP-completeness when the edge multiplicity function is not restricted either on the input G or on the fixed multistarH. © 2005 Published by Elsevier B.V.	decision problem;multigraph;np-completeness	Miri Priesler;Michael Tarsi	2005	Discrete Mathematics	10.1016/j.disc.2005.03.012	combinatorics;discrete mathematics;np-complete;decomposition method;topology;star;stars;completeness;multigraph;decision problem;mathematics;multiplicity;decomposition	Theory	23.238429783665858	30.176497215554406	166966
508c9e89dbbb9e1973a82856b5d0f1e3d74b7061	polynomial flow-cut gaps and hardness of directed cut problems	directed acyclic graph;multicommodity flow;graph theory;grafo aciclico;directed multicut;cardinal number;teoria grafo;maximum flow;digraph;routing;probleme np complet;sparsest cut;coupe graphe;graph flow;probleme multiflot;interrogation base donnee;routage;digrafo;multicommodity flow problem;interrogacion base datos;graphe acyclique;theorie graphe;acyclic graph;polynomial factorization;flujo grafo;corte grafo;aproximacion polinomial;nombre cardinal;numero cardinal;programacion lineal;flot graphe;graph cut;directed graph;vertex graph;graphe oriente;approximation polynomiale;borne inferieure;linear programming relaxation;linear programming;programmation lineaire;grafo orientado;problema np completo;hardness of approximation;lp relaxation;database query;vertice grafo;probleme direct;lower bound;problema directo;sommet graphe;np complete problem;polynomial approximation;cota inferior;direct problem;problema multiflujo;digraphe;enrutamiento	We study the multicut and the sparsest cut problems in directed graphs. In the multicut problem, we are a given an n-vertex graph G along with k source-sink pairs, and the goal is to find the minimum cardinality subset of edges whose removal separates all source-sink pairs. The sparsest cut problem has the same input, but the goal is to find a subset of edges to delete so as to minimize the ratio of the number of deleted edges to the number of source-sink pairs that are separated by this deletion. The natural linear programming relaxation for multicut corresponds, by LP-duality, to the well-studied maximum (fractional) multicommodity flow problem, while the standard LP-relaxation for sparsest cut corresponds to maximum concurrent flow. Therefore, the integrality gap of the linear programming relaxation for multicut/sparsest cut is also the flow-cut gap: the largest gap, achievable for any graph, between the maximum flow value and the minimum cost solution for the corresponding cut problem.  Our first result is that the flow-cut gap between maximum multicommodity flow and minimum multicut is Ω˜(n1/7) in directed graphs. We show a similar result for the gap between maximum concurrent flow and sparsest cut in directed graphs. These results improve upon a long-standing lower bound of Ω(log n) for both types of flow-cut gaps. We notice that these polynomially large flow-cut gaps are in a sharp contrast to the undirected setting where both these flow-cut gaps are known to be Θ(log n). Our second result is that both directed multicut and sparsest cut are hard to approximate to within a factor of 2Ω(log1−&epsis; n) for any constant &epsis; > 0, unless NP ⊆ ZPP. This improves upon the recent Ω(log n/log log n)-hardness result for these problems. We also show that existence of PCP's for NP with perfect completeness, polynomially small soundness, and constant number of queries would imply a polynomial factor hardness of approximation for both these problems. All our results hold for directed acyclic graphs.	approximation algorithm;cut (graph theory);directed acyclic graph;directed graph;flow network;graph (discrete mathematics);hardness of approximation;linear programming relaxation;maximum flow problem;multi-commodity flow problem;np (complexity);polynomial;whole earth 'lectronic link;zpp (complexity)	Julia Chuzhoy;Sanjeev Khanna	2009	J. ACM	10.1145/1502793.1502795	mathematical optimization;maximum cut;combinatorics;discrete mathematics;directed graph;minimum cut;linear programming;linear programming relaxation;graph theory;mathematics;directed acyclic graph;algorithm	Theory	21.578946052495972	26.076118832611307	167451
184c84647c1bb42504420785d77d1108e024f2ca	graph labellings with variable weights, a survey	assignment;graph theory;asignacion;optimisation;l p q labeling;combinatorics;optimum;03cxx;optimizacion;combinatoria;frequence;combinatoire;distance constrained labeling;assignation;theorie modeles;numero real;etiquetage;frequency assignment;etiquetaje;separation;real number graph labeling;separacion;channel assignment problem;enquete;graphe pondere;frecuencia;grafo pondero;informatique theorique;l p;marcacion grafo;optimo;68r10;distancia;labelling;superficie;area;optimization;q labeling;encuesta;weighted graph;marquage graphe;real number;05c78;nombre reel;frequency;survey;teoria modelos;graph labelling;distance;l p q;computer theory;model theory;informatica teorica	Graph labellings form an important graph theory model for the channel assignment problem. An optimum labelling usually depends on one or more parameters that ensure minimum separations between frequencies assigned to nearby transmitters. The study of spans and of the structure of optimum labellings as functions of such parameters has attracted substantial attention from researchers, leading to the introduction of real number graph labellings and λ-graphs. We survey recent results obtained in this area. The concept of real number graph labellings was introduced a few years ago, and in the sequel, a more general concept of λ-graphs appeared. Though the two concepts are quite new, they are so natural that there are already many results on each. In fact, even some older results fall in this area, but their authors used a different mathematical language to state their achievements. Since many of these results are so recent that they are just appearing in various journals, we would like to offer the reader a single reference for the state of art as well as to draw attention to some older results that fall in this area. Department of Mathematics, University of South Carolina, Columbia, SC 29208 USA. E-mail: griggs@math.sc.edu. Research supported in part by NSF grant DMS–0072187. Department of Applied Mathematics, Faculty of Mathematics and Physics, Charles University, Malostranské náměst́ı 25, 118 00 Prague, Czech Republic. E-mail: kral@kam.mff.cuni.cz. The paper was written while the author was a Fulbright scholar at the School of Mathematics, Georgia Institute of Technology, 686 Cherry St, Atlanta, GA 30332-0160.	assignment problem;columbia (supercomputer);graph labeling;graph theory;ibm notes;software release life cycle;transmitter	Jerrold R. Griggs;Daniel Král	2009	Discrete Applied Mathematics	10.1016/j.dam.2008.08.024	combinatorics;discrete mathematics;graph property;graph theory;frequency;assignment;mathematics;voltage graph;area;distance;complement graph;algorithm;strength of a graph;real number;model theory	Theory	23.85351667984466	29.460874139187982	167791
442d2d3e41a2fcd2b997f09534cfffd71df02603	finding large planar subgraphs and large subgraphs of a given genus	graph drawing;connected graph;facility layout	We consider the MAXIMUM PLANAR SUBGRAPH problem given a graph G, nd a largest planar subgraph of G. This problem has applications in circuit layout, facility layout, and graph drawing. We improve to 4/9 the best known approximation ratio for the MAXIMUM PLANAR SUBGRAPH problem. We also consider a generalization of the previous problem, the MAXIMUM GENUS D SUBGRAPH problem-given a connected graph G, nd a maximum subgraph of G of genus at most D. For the latter problem, we present a simple algorithm whose approximation ratio is 1/4.	approximation algorithm;circuit diagram;connectivity (graph theory);genus (mathematics);graph drawing	Gruia Calinescu;Cristina G. Fernandes	1996		10.1007/3-540-61332-3_148	outerplanar graph;graph power;perfect graph theorem;petersen graph;combinatorics;discrete mathematics;graph embedding;connected component;topology;null graph;connectivity;simplex graph;cubic graph;mathematics;voltage graph;distance-hereditary graph;biconnected graph;graph drawing;butterfly graph;crossing number;graph minor;strongly connected component;book embedding;line graph;algorithm;planar graph;friendship graph	Theory	24.602436035896527	27.56665244711529	167869
86c8cc7ae5d342c5d7832c980a0415aa8676bbc5	a faster parameterized algorithm for set packing	set packing;68w40;procesamiento informacion;algorithm complexity;algorithm analysis;complejidad algoritmo;68wxx;algorithme;analysis of algorithms;algorithm;complexite algorithme;parametrized computation;informatique theorique;parameterized algorithm;information processing;algorithms;68q25;analyse algorithme;garnissage ensemble;traitement information;05b40;calcul parametrise;analisis algoritmo;parameterized computation;computer theory;algoritmo;informatica teorica	We present an efficient parameterized algorithm for the (k, t)-set packing problem, in which we are looking for a collection of k disjoint sets whose union consists of t elements. The complexity of the algorithm is O(2nN log N). For the special case of sets of bounded size, this improves the O((ck)n) algorithm of Jia et al. [2004, J. Algorithms, 50(1)].	algorithm;set packing	Ioannis Koutis	2005	Inf. Process. Lett.	10.1016/j.ipl.2004.12.005	combinatorics;set packing;information processing;computer science;analysis of algorithms;mathematics;algorithm	Theory	17.806737696722433	26.34434828954595	168353
0876046c99d22bd3ddd74cf57e019eaf1132c7d3	experimental studies of symbolic shortest-path algorithms	camino mas corto;metodo caso peor;random graph;shortest path;diagrama binaria decision;diagramme binaire decision;mise a jour;camino grafo;fonction poids;shortest path algorithm;graph path;decision diagram;grafo aleatorio;plus court chemin;graphe aleatoire;fonction caracteristique;actualizacion;grid;graphe pondere;grafo pondero;rejilla;dijkstra s algorithm;estructura datos;funcion peso;characteristic function;chemin graphe;methode cas pire;single source shortest path;grille;structure donnee;weighted graph;weight function;threshold graph;worst case method;data structure;funcion caracteristica;updating;binary decision diagram	Graphs can be represented symbolically by the Ordered Binary Decision Diagram (OBDD) of their characteristic function. To solve problems in such implicitly given graphs, specialized symbolic algorithms are needed which are restricted to the use of functional operations offered by the OBDD data structure. In this paper, two symbolic algorithms for the single-source shortest-path problem with nonnegative positive integral edge weights are presented which represent symbolic versions of Dijkstra’s algorithm and the Bellman-Ford algorithm. They execute O ( N ·log(NB) ) resp. O ( NM ·log(NB) ) OBDD-operations to obtain the shortest paths in a graph with N nodes, M edges, and maximum edge weight B. Despite the larger worst-case bound, the symbolic BellmanFord-approach is expected to behave much better on structured graphs because it is able to handle updates of node distances effectively in parallel. Hence, both algorithms have been studied in experiments on random, grid, and threshold graphs with different weight functions. These studies support the assumption that the Dijkstra-approach behaves efficient w. r. t. space usage, while the Bellman-Ford-approach is dominant w. r. t. runtime.	approximation error;asymptotically optimal algorithm;bellman equation;bellman–ford algorithm;best, worst and average case;binary decision diagram;characteristic function (convex analysis);data structure;dijkstra's algorithm;experiment;parallel computing;shortest path problem;space–time tradeoff	Daniel Sawitzki	2004		10.1007/978-3-540-24838-5_36	combinatorics;discrete mathematics;dijkstra's algorithm;data structure;computer science;artificial intelligence;mathematics;algorithm;statistics	Theory	19.711197187489425	27.85501012431238	169256
544f104348302e088ec691896e1d93e06228085f	a fast bipartite network flow algorithm for selective assembly	graph theory;graphe biparti;teoria grafo;preemptive scheduling;complexite calcul;algorithme glouton;grafo bipartido;bipartite graphs;propriete monge;linear time algorithm;date echeance;selective assembly;theorie graphe;assembly;complejidad computacion;flujo red;computational complexity;loss function;scheduling;fast algorithm;linear time;due date;greedy algorithm;fecha vencimiento;algoritmo gloton;earliest due date;ordonamiento;monge property;montage;network flow;montaje;bipartite graph;flot reseau;ordonnancement	Bipartite network flow problems naturally arise in applications such as selective assembly and preemptive scheduling. This paper presents fast algorithms for these problems that take advantage of special properties of the associated bipartite networks. We show a connection between selective assembly and the Earliest Due Date (EDD) scheduling rule, and we show that EDD can be implemented in linear time when the data are already sorted. Our main result uses a Monge property to get a linear-time algorithm for selective assembly with a monotone convex loss function.	algorithm;flow network;loss function;maximum flow problem;scheduling (computing);single-machine scheduling;time complexity;monotone	Satoru Iwata;Tomomi Matsui;S. Thomas McCormick	1998	Oper. Res. Lett.	10.1016/S0167-6377(98)00017-0	mathematical optimization;combinatorics;bipartite graph;computer science;graph theory;mathematics;algorithm	Theory	20.631032040539083	26.502337955463837	169744
ba8d163975a8147e5325ed944ca792b4402b88dc	some problems on factorizations with constraints in bipartite graphs	graph theory;graphe biparti;problem;teoria grafo;nombre entier;subgrafo;g;grafo bipartido;bord;vertex;fonction;coaccion;contrainte;result;polynomial;probleme;theorie graphe;borde;algorithme;algorithm;integer;factorization;f factor;constraint;particion;factorizacion;edge;sous graphe;polynomial algorithm;factorisation orthogonale;polinomio;entero;vertex graph;68r10;partition;factorisation;resultado;value function;vertice;orthogonal factorization;resultat;problema;subgraph;polynome;bipartite graph;functions;vertice grafo;sommet graphe;algoritmo	Let G = (X; Y; E(G)) be a bipartite graph with vertex set V (G) = X ∪ Y and edge set E(G) and let g and f be two non-negative integer-valued functions de1ned on V (G) such that g(x)6f(x) for each x∈V (G). A (g; f)-factor of G is a spanning subgraph F of G such that g(x)6dF (x)6f(x) for each x∈V (F); a (g; f)-factorization of G is a partition of E(G) into edge-disjoint (g; f)-factors. In this paper it is proved that every bipartite (mg+m−1; mf− m + 1)-graph has (g; f)-factorizations randomly k-orthogonal to any given subgraph with km edges if k6 g(x) for any x∈V (G) and has a (g; f)-factorization k-orthogonal to any given subgraph with km edges if k − 16 g(x) for any x∈V (G) and that every bipartite (mg; mf)-graph has a (g; f)-factorization orthogonal to any given m-star if 06 g(x)6f(x) for any x∈V (G). Furthermore, it is shown that there are polynomial algorithms for 1nding the desired factorizations and the results in this paper are in some sense best possible. ? 2003 Elsevier Science B.V. All rights reserved.	algorithm;file spanning;polynomial;randomness;vertex (graph theory)	Guizhen Liu;Binhai Zhu	2003	Discrete Applied Mathematics	10.1016/S0166-218X(02)00503-6	combinatorics;discrete mathematics;graph theory;mathematics;geometry;factorization;bound graph	Theory	23.84727843604713	30.468746938325484	171920
409f6ddeaf6a1c3a7edf1b1307cab94fce333734	on graphs with polynomially solvable maximum-weight clique problem	graphe non oriente;graph theory;teoria grafo;non directed graph;temps polynomial;grafico no orientado;limit;theorie graphe;graphs;polynomials;algorithme;connected graph;algorithm;coloration graphe;coloracion diagrama;polynomial time;graph coloration;limite;graphe connexe;problem solving;grafico connexo;algoritmo;tiempo polinomial	Abstract : This document gives a new bound on the number of maximal cliques in a graph along with a bound on the length of odd antiholes that the graph can contain. Based on these bounds a family of graphs with polynomially solvable maximum weight clique problem is identified using the edge-bicoloring approach developed in a a recent paper by Balas, Chvatal and Nesetril. (Author)	clique problem;decision problem	Egon Balas;Chang Sung Yu	1989	Networks	10.1002/net.3230190206	clique;block graph;time complexity;mathematical optimization;split graph;combinatorics;clique graph;discrete mathematics;topology;k-tree;clique problem;connectivity;graph theory;limit;clique-sum;mathematics;graph;treewidth;chordal graph;algorithm;polynomial	Vision	21.82014009238144	27.27606195516694	172103
aac0c4e463e6027b96e6243f55c99320797731c7	the minimal number of subtrees of a tree	tree;05c05;bepress selected works;degree sequence;05c85;tree subtrees degree sequence caterpillar 05c85 05c05 05c07;subtrees;05c07;caterpillar	In this note, we consider the trees (caterpillars) that minimize the number of subtrees among trees with a given degree sequence. This is a question naturally related to the extremal structures of some distance based graph invariants. We first confirm the expected fact that the number of subtrees is minimized by some caterpillar. As with other graph invariants, the specific optimal caterpillar is nearly impossible to characterize and depends on the degree sequence. We provide some simple properties of such caterpillars as well as observations that will help finding the optimal caterpillar.	degree (graph theory);graph property;tree (data structure)	Andrew V. Sills;Hua Wang	2015	Graphs and Combinatorics	10.1007/s00373-013-1376-y	combinatorics;discrete mathematics;topology;mathematics;search tree;tree	Theory	24.401863634876914	30.51250327777556	172440
194c5a4c139e12509529d3c6a8b49fb92496a866	the chromatic number of random regular graphs	numero cromatico;statistical mechanics;modelo 3 dimensiones;modele 3 dimensions;approximation algorithm;nombre chromatique;three dimensional model;chromatic number;probabilistic approach;random number;optimisation combinatoire;aleatorizacion;random regular graphs;enfoque probabilista;approche probabiliste;algoritmo aproximacion;randomisation;nombre aleatoire;grafo regular;graphe regulier;algorithme approximation;randomization;combinatorial optimization;numero aleatorio;disordered system;neural network;regular graph;optimizacion combinatoria	Given any integer d ≥ 3, let k be the smallest integer such that d u003c 2k log k. We prove that with high probability the chromatic number of a random d-regular graph is k, k+1, or k+2.	graph coloring;universal quantification;with high probability	Dimitris Achlioptas;Cristopher Moore	2004		10.1007/978-3-540-27821-4_20	randomization;random regular graph;combinatorics;discrete mathematics;star;combinatorial optimization;statistical mechanics;computer science;regular graph;mathematics;approximation algorithm;artificial neural network	Theory	23.48547163158325	31.558536120937557	173520
01e9cc3ac7805e043e1effac588cd5dab9d1480d	a multi-level algorithm for partitioning graphs	circuit placement;graph partitioning;load balancing;parallel computation;circuit placement;graph partitioning;load balancing;parallel computation	The graph partitioning problem is that of dividing the vertices of a graph into sets of specified sizes such that few edges cross between sets. This NP-complete problem arises in many important scientific and engineering problems. Prominent examples include the decomposition of data structures for parallel computation, the placement of circuit elements and the ordering of sparse matrix computations. We present a multilevel algorithm for graph partitioning in which the graph is approximated by a sequence of increasingly smaller graphs. The smallest graph is then partitioned using a spectral method, and this partition is propagated back through the hierarchy of graphs. A variant of the Kernighan-Lin algorithm is applied periodically to refine the partition. The entire algorithm can be implemented to execute in time proportional to the size of the original graph. Experiments indicate that, relative to other advanced methods, the multilevel algorithm produces high quality partitions at low cost.	approximation algorithm;computation;data structure;dijkstra's algorithm;display resolution;experiment;graph partition;kernighan–lin algorithm;np-completeness;parallel computing;partition problem;sparse matrix;spectral method	Bruce Hendrickson;Robert W. Leland	1995	Proceedings of the IEEE/ACM SC95 Conference	10.1109/SUPERC.1995.3	graph power;mathematical optimization;parallel computing;independent set;graph bandwidth;level structure;data structure;null graph;computer science;graph partition;clique-width;load balancing;theoretical computer science;comparability graph;voltage graph;modular decomposition;strength of a graph;adjacency matrix;matching	HPC	20.0568760446857	29.807248163889362	174155
921344413c7b4578f6c6ca9a421ec3f8305b1ace	a polynomial time algorithm for solving clique problems		In this paper, I submit an algorithm that efficiently solves the problems k-clique, maximum clique, and complete enumeration of all maximal cliques for any given graph that I have written in the Java programming language. I will first give a high level overview of how the cliques are calculated using this algorithm and show a more in depth look as to how my algorithm works as well as present the code I have written. I will detail how to use it and how to obtain a copy of it.	algorithm;clique (graph theory);high-level programming language;java;maximal set;p (complexity)	Michael LaPlante	2015	CoRR		clique;mathematical optimization;combinatorics;clique graph;discrete mathematics;k-tree;clique problem;clique-sum;mathematics	PL	24.10052413223777	26.4872195125016	174578
9763ce945a3aad6a7040547a1bf0ff5bdb21db59	bounding the misclassification error in spectral partitioning in the planted partition model	modelizacion;graph theory;metodo caso peor;ruido aleatorio;teoria grafo;grouping;bruit aleatoire;theorie graphe;set partitioning;modelisation;random noise;informatique theorique;partitionnement ensemble;methode cas pire;agrupamiento;particion conjunto;modeling;worst case method;groupage;computer theory;informatica teorica	A partitioning of a set of n items is a grouping of these items into k disjoint, equally sized classes. Any partition can be modeled as a graph. The items become the vertices of the graph and two vertices are connected by an edge if and only if the associated items belong to the same class. In a planted partition model a graph that models a partition is given, which is obscured by random noise, i.e., edges within a class can get removed and edges between classes can get inserted. The task is to reconstruct the planted partition from this graph. We design a spectral partitioning algorithm and analyze how many items it misclassifies in the worst case. The number of classes k is one parameter in the model that allows to control the difficulty of the problem. Our analysis extends the range of k for which any non-trivial quality guarantees can be given.	algorithm;best, worst and average case;graph (discrete mathematics);noise (electronics);space partitioning;vertex (geometry)	Joachim Giesen;Dieter Mitsche	2005		10.1007/11604686_36	combinatorics;discrete mathematics;systems modeling;multiple edges;cut;level structure;graph partition;artificial intelligence;graph theory;frequency partition of a graph;cycle graph;path graph;mathematics;path;domatic number;distance;complement graph;algorithm;strength of a graph;statistics	Theory	24.103326794947893	29.15864411161729	174703
1c677d69ea12b7638522697203958a45635c00ea	construct graph logic		In this paper, author uses set theory to construct a logic model of abstract figure from binary relation. Based on the uniform quantified structure, author gives two logic system for graph traversal and graph coloring respectively, moreover shows a new method of cutting graph. Around this model, there are six algorithms in this paper including exact graph traversal, Algebra calculation of natural number, graph partition and graph coloring.	algorithm;data structure;epr paradox;flow network;graph coloring;graph partition;graph theory;graph traversal;greedy algorithm;set theory;tree traversal;vertex-transitive graph	Yong Tan	2013	CoRR		graph power;edge-transitive graph;factor-critical graph;combinatorics;discrete mathematics;null graph;graph property;clique-width;distance-regular graph;theoretical computer science;simplex graph;cubic graph;graph factorization;mathematics;voltage graph;distance-hereditary graph;graph;butterfly graph;quartic graph;complement graph;line graph;string graph;strength of a graph;coxeter graph	Graphics	22.00257122648933	32.130358389975335	174745
65ceb1195776d4435e86441953ee4c9a73a1a0bb	approximation algorithms for minimum time broadcast	approximate algorithm	This paper deals with the problem of broadcasting in minimum time in the telephone and message-passing models. Approximation algorithms are developed for arbitrary graphs as well as for several restricted graph classes. In particular, an O(vfvT)-additive approximation algorithm is given for broadcasting in general graphs, and an O(log n/ log log n) (multiplicative) ratio approximation is given for broadcasting in the open-path model. This also results in an algorithm for broadcasting on random graphs (in the telephone and message-passing models) that yields an O(log n/ log log n) approximation with high	approximation algorithm;message passing;random graph	Guy Kortsarz;David Peleg	1992		10.1007/BFb0035167	mathematical optimization;mathematics;minimax approximation algorithm;approximation algorithm	Theory	20.30815663363785	25.292546284154678	174884
f3499cb0ec0a282690e58cd0db3c7aced5376967	channel assignment and improper choosability of graphs	modelizacion;graph theory;coloracion grafo;teoria grafo;allocation canal;asignacion canal;theorie graphe;satelite;modelisation;coloration graphe;satellite;informatique theorique;graphe planaire;grafo planario;channel allocation;modeling;planar graph;graph colouring;channel assignment;computer theory;informatica teorica	We model a problem proposed by Alcatel, a satellite building company, using improper colourings of graphs. The relation between improper colourings and maximum average degree is underlined, which contributes to generalise and improve previous known results about improper colourings of planar graphs.	graph coloring;list coloring;planar graph	Frédéric Havet;Jean-Sébastien Sereni	2005		10.1007/11604686_8	combinatorics;graph theory;mathematics;algorithm;satellite	Theory	23.46915042634294	29.686998148438477	175232
82ae511be546eab497d9355587942e4de6d0154a	more results on the complexity of domination problems in graphs	graph theory;dominating codes;np completeness;complexity;hardness;covering radius;polynomial hierarchy;complexity classes	Given a graph G = (V, E) and an integer r ≥ 1, we call 'r-dominating code' any subset C of V such that every vertex in V is at distance at most r from at least one vertex in C. We investigate and locate in the complexity classes of the polynomial hierarchy, several problems linked with domination in graphs, such as, given r and G, the existence of, or search for, optimal r-dominating codes in G, or optimal r-dominating codes in G containing a subset of vertices X ⊂ V .	dominating set	Olivier Hudry;Antoine Lobstein	2017	IJICoT	10.1504/IJICOT.2017.10004701	complexity class;combinatorics;discrete mathematics;complexity;np-complete;ph;topology;computer science;graph theory;structural complexity theory;mathematics;hardness;neighbourhood;algorithm	Theory	24.119543469473275	26.16335566146736	175255
a73466dfa7ca7bd6ba5c0d9b017f33fb4564109c	all roads lead to rome - new search methods for the optimal triangulation problem	cliques in a graph;probabilistic inference;optimal triangulation;triangulation;inference;bayesian networks	Article history: Available online 28 June 2012	av-test;bayesian network;best, worst and average case;best-first search;bron–kerbosch algorithm;clique (graph theory);depth-first search;email;experiment;fax;graph (discrete mathematics);heuristic (computer science);jensen's inequality;local search (optimization);maxima and minima;np-hardness;online and offline;overhead (computing);plain old documentation;postal;randomized algorithm;sampling (signal processing);search algorithm;sparse matrix;time complexity;tree decomposition;treewidth;vertex (graph theory)	Thorsten J. Ottosen;Jirí Vomlel	2012	Int. J. Approx. Reasoning	10.1016/j.ijar.2012.06.006	mathematical optimization;minimum-weight triangulation;combinatorics;triangulation;computer science;machine learning;bayesian network;mathematics	AI	22.433222823332766	25.36763869653263	177222
2f5f4aa9bddc3a1c6c4238e055dadccedf239da9	a simple linear time algorithm for finding a maximum independent set of circular arcs using intervals alone	conjunto independiente;arc cercle;independent set;temps lineaire;linear time algorithm;circular arcs;tiempo lineal;ensemble independant;linear time;circular configuration;configuration circulaire;configuracion circular;maximum independent set	Abstract#R##N##R##N#We exhibit an algorithm for finding a maximum independent set (MIS) for n presorted, unweighted circular arcs in time 0(n). Unlike previous algorithms, this is achieved by means of trivial postprocessing of the output of a straightforward algorithm for finding an MIS for a set of unweighted intervals. © 2002 Wiley Periodicals, Inc.	algorithm;independent set (graph theory);time complexity	Glenn K. Manacher;Terrance A. Mankus	2002	Networks	10.1002/net.10014	mathematical optimization;combinatorics;independent set;computer science;mathematics;algorithm	Theory	22.67007176777446	27.809017063140573	177367
b6fa4964f5ee625fe1236621c770762059d1eb23	parallel shortcutting of rooted trees	arbre graphe;tree graph;coupe graphe;cerradura transitiva;semigrupo;algorithme parallele;corte grafo;fermeture transitive;sensitivity analysis;graph cut;semigroupe;minimum spanning tree;rooted tree;transitive closure;semigroup;arbol grafo;parallel algorithms	First it is shown that for any rooted treeTwithnvertices, and parameterm?n, there is a “shortcutting” setSof at mostmarcs from the transitive closureT* ofTsuch for any (v,w)?T*, there is a dipath inT?Sfromvtowof lengthO(?(m,n)). An equivalent result has been achieved by7, but our proof is algorithmically simpler, and, in particular, it lends itself well to parallelization. More precisely, suppose that weights from a semigroup are assigned to the arcs ofT. Then we can preprocessTin timeO(logn) withO(m/logn) processors on a CREW PRAM such that for any (v,w)?T*, we can find the weight of the path fromvtowinO(?(m,n)) sequential time.2have claimed that such a parallelization is possible for Chazelle's result. This claim is used in the optimal parallel sensitivity analysis for minimum spanning trees by11. However, Alon and Schieber did not give the details of the parallelization. Here we present a full proof, and our algorithms, both the sequential and the parallel versions, are rather simple, hence likely to be of practical relevance.		Mikkel Thorup	1997	J. Algorithms	10.1006/jagm.1996.0829	mathematical optimization;combinatorics;discrete mathematics;cut;minimum spanning tree;mathematics;parallel algorithm;semigroup;transitive closure;sensitivity analysis;tree;algorithm	Theory	19.882843100556823	27.16938671047363	177497
1dea3be6e4e7331406723cd03e348dbeb521a092	an efficient algorithm for estimating rotation distance between two binary trees	efficient algorithm;binary trees;rotation distance;algorithms;avl trees;binary tree	There are a number of ways of measuring the difference in shape between two rooted binary trees with the same number of leaves. Pallo (Computer Journal, 9, 171–175, 1986) introduced a left weight sequence, which is a sequence of positive integers, to characterize the structure of a binary tree. By applying the AVL tree transformation on binary trees, we develop an algorithm for the efficient transformation of the left weight sequences between two binary trees.	algorithm;binary tree	Yen-Ju Chen;Jou-Ming Chang;Yue-Li Wang	2005	Int. J. Comput. Math.	10.1080/00207160500069870	random binary tree;optimal binary search tree;cartesian tree;red–black tree;mathematical optimization;combinatorics;discrete mathematics;binary search tree;tree rotation;binary expression tree;geometry of binary search trees;binary tree;treap;scapegoat tree;self-balancing binary search tree;t-tree;k-d tree;interval tree;mathematics;weight-balanced tree;ternary search tree;threaded binary tree;metric tree;algorithm;avl tree	Theory	24.082031810697412	27.592291806369275	177587
d80c9c19efb9f179cc64202458d4bf9545210ee6	"""finite termination of """"augmenting path"""" algorithms in the presence of irrational problem data"""	metodo caso peor;metodo polinomial;algoritmo busqueda;maximum flow;temps polynomial;algorithme recherche;stable matching;recherche profondeur d abord;real time;search algorithm;probleme terminaison;first depth search;polynomial method;temps reel;polynomial time;methode cas pire;graph algorithm;tiempo real;termination problem;depth first search;busca profundidad primero;breadth first search;methode polynomiale;worst case method;problema terminacion;tiempo polinomial	This paper considers two similar graph algorithms that work by repeatedly increasing “flow” along “augmenting paths”: the Ford-Fulkerson algorithm for the maximum flow problem and the Gale-Shapley algorithm for the stable allocation problem (a many-to-many generalization of the stable matching problem). Both algorithms clearly terminate when given integral input data. For real-valued input data, it was previously known that the Ford-Fulkerson algorithm runs in polynomial time if augmenting paths are chosen via breadth-first search, but that the algorithm might fail to terminate if augmenting paths are chosen in an arbitrary fashion. However, the performance of the Gale-Shapley algorithm on real-valued data was unresolved. Our main result shows that, in contrast to the Ford-Fulkerson algorithm, the Gale-Shapley algorithm always terminates in finite time on real-valued data. Although the Gale-Shapley algorithm may take exponential time in the worst case, it is a popular algorithm in practice due to its simplicity and the fact that it often runs very quickly (even in sublinear time) for many inputs encountered in practice. We also study the Ford-Fulkerson algorithm when augmenting paths are chosen via depth-first search, a common implementation in practice. We prove that, like breadth-first search, depth-first search also leads to finite termination (although not necessarily in polynomial time).	best, worst and average case;breadth-first search;depth-first search;dijkstra's algorithm;flow network;ford–fulkerson algorithm;graph theory;many-to-many;maximum flow problem;stable marriage problem;terminate (software);time complexity	Brian C. Dean;Michel X. Goemans;Nicole Immorlica	2006		10.1007/11841036_26	suurballe's algorithm;combinatorics;breadth-first search;push–relabel maximum flow algorithm;floyd–warshall algorithm;computer science;hopcroft–karp algorithm;calculus;mathematics;dinic's algorithm;nondeterministic algorithm;algorithm;search algorithm	AI	18.862311151877012	26.261546000904453	178618
df6d41ac842f167c9dc291dd870007df96dddbd7	approximation algorithms and complexity results for path problems in trees of rings	arbre graphe;reseau communication;approximate algorithm;algorithm complexity;tree graph;complexite calcul;complejidad algoritmo;problema np duro;anneau;np hard problem;complejidad computacion;complexite algorithme;probleme np difficile;computational complexity;tree structure;ring;arbol grafo;red de comunicacion;communication network;anillo	A tree of rings is a network that is obtained by interconnecting rings in a tree structure such that any two rings share at most one node. A connection request (call) in a tree of rings is given by its two endpoints and, in the case of prespecified paths, a path connecting these two endpoints. We study undirected trees of rings as well as bidirected trees of rings. In both cases, we show that the path packing problem (assigning paths to calls so as to minimize the maximum load) can be solved in polynomial time, that the path coloring problem with prespecified paths can be approximated within a constant factor, and that the maximum (weight) edge-disjoint paths problem is APX-hard and can be approximated within a constant factor (no matter whether the paths are prespecified or can be determined by the algorithms). We also consider fault-tolerance in trees of rings: If a set of calls has been established along edge-disjoint paths and if an arbitrary link fails in every ring of the tree of rings, we show that at least one third of the calls can be recovered if rerouting is allowed. Furthermore, computing the optimal number of calls that can be recovered is shown to be polynomial in undirected trees of rings and APX-hard in bidirected trees of rings.	apx;approximation algorithm;binary tree;fault tolerance;graph (discrete mathematics);graph coloring;path coloring;polynomial;set packing;time complexity;tree structure	Thomas Erlebach	2001		10.1007/3-540-44683-4_31	combinatorics;discrete mathematics;computer science;np-hard;mathematics;distributed computing;tree structure;computational complexity theory;tree;algorithm;ring;telecommunications network	Theory	21.577887089756082	29.698131544792812	178713
c5d57b0f954bea0f74b77d97679f052945d04bc4	the parallel computation of minimum cost paths in graphs by stream contraction	algoritmo paralelo;complexite;parallel algorithm;complejidad;complexity;algebre;acceleration;algorithme parallele;grafo;algebra;graph;graphe;parallel computer;aceleracion	Abstract   We accelerate by a factor of log  n  and with no increase of the processor bound our previous parallel algorithm for path algebra computation in the case of the minimum cost path computation in an  n -vertex graph and, more generally, wherever the path algebra has an order relation defined by its ⊕ operation. The acceleration is obtained by means of a novel technique of stream contraction.	computation;parallel computing	Victor Y. Pan;John H. Reif	1991	Inf. Process. Lett.	10.1016/0020-0190(91)90013-8	acceleration;combinatorics;discrete mathematics;complexity;computer science;theoretical computer science;mathematics;parallel algorithm;graph	DB	18.252818229825724	29.582531552519164	178863
8af60bf84f0f99c5691dd7601621e9b083ebb40f	bipartite graph matching computation on gpu	graph theory;data parallel;graphics hardware;graphic processing unit;bipartite graph	The Bipartite Graph Matching Problem is a well studied topic in Graph Theory. Such matching relates pairs of nodes from two distinct sets by selecting a subset of the graph edges connecting them. Each edge selected has no common node as its end points to any other edge within the subset. When the considered graph has huge sets of nodes and edges the sequential approaches are impractical, specially for applications demanding fast results. In this paper we investigate how to compute such matching on Graphics Processing Units (GPUs) motivated by its increasing processing power made available with decreasing costs. We present a new data-parallel approach for computing bipartite graph matching that is efficiently computed on today’s graphics hardware and apply it to solve the correspondence between 3D samples taken over a time interval.	algorithm;artificial neural network;british machine vision conference;cuda;communication endpoint;computation;data parallelism;download;experiment;graph theory;graphics hardware;graphics processing unit;input/output;l (complexity);real-time transcription;video card;video processing	Cristina Nader Vasconcelos;Bodo Rosenhahn	2009		10.1007/978-3-642-03641-5_4	graph power;edge-transitive graph;folded cube graph;complete bipartite graph;factor-critical graph;combinatorics;discrete mathematics;graph bandwidth;bipartite graph;null graph;computer science;clique-width;graph theory;3-dimensional matching;theoretical computer science;simplex graph;machine learning;foster graph;graph factorization;mathematics;voltage graph;blossom algorithm;graphics hardware;quartic graph;complement graph;line graph;strength of a graph;matching	ML	19.46874050352486	29.7648154032459	179009
1b7aafa58e7ac265673de12fc43be8376331662d	a polynomial time pattern matching algorithm on graph patterns of bounded treewidth			algorithm;pattern matching;polynomial;time complexity;treewidth	Takayoshi Shoudai;Takashi Yamada	2017	IEICE Transactions		combinatorics;factor-critical graph;1-planar graph;discrete mathematics;mathematics;partial k-tree;wagner graph;tree decomposition;voltage graph;distance-hereditary graph;tree-depth	Theory	24.165203751054662	27.05974468365858	179029
7abc8aec9e59fe838b483ea0db066956441929e3	parallel algorithms for shortest path problems in polygons	camino mas corto;algoritmo paralelo;concepcion asistida;shortest path;computer aided design;parallel algorithm;shared memory;geometry;computational geometry;polygone;geometrie;algorithme parallele;algorithme;polygon;algorithm;methode diviser pour gagner;algorritmo;divide and conquer method;chemin plus court;conception assistee;geometria;model of computation;divide and conquer;shortest path problem	Given ann-vertex simple polygon we address the following problems: (i) find the shortest path between two pointss andd insideP, and (ii) compute the shortestpath tree between a single points and each vertex ofP (which implicitly represents all the shortest paths). We show how to solve the first problem inO(logn) time usingO(n) processors, and the more general second problem inO(log2 n) time usingO(n) processors, and the more general second problem inO(log2 n) time usingO(n) processors for any simple polygonP. We assume the CREW RAM shared memory model of computation in which concurrent reads are allowed, but no two processors should attempt to simultaneously write in the same memory location. The algorithms are based on the divide-and-conquer paradigm and are quite different from the known sequential algorithms	central processing unit;memory address;model of computation;parallel algorithm;programming paradigm;random-access memory;sequential algorithm;shared memory;shortest path problem	Hossam A. ElGindy;Michael T. Goodrich	1988	The Visual Computer	10.1007/BF01901194	combinatorics;computational geometry;computer science;theoretical computer science;computer aided design;polygon;mathematics;geometry;shortest path problem;algorithm	Theory	17.56197191395062	28.87599459168581	179083
a4c70868f62475fea26e54b10f7fb43ac4b941da	algorithms of fast search of center, radius and diameter on weighted graphs		Two problems in the search of metric characteristics on weighted undirected graphs with non-negative edge weights are being considered. The first problem: a weighted undirected graph with non-negative edge weight is given. The radius, diameter and at least one center and one pair of peripheral vertices of the graph are to be found. In the second problem we have additionally calculated the distances matrix. For the problems being considered, we proposed fast search algorithms which use only small fraction of graph's vertices for the search of the metric characteristics. The proposed algorithms have been compared to other popular methods of solving problems considered on various inputs.	graph (discrete mathematics);mathematical optimization;peripheral;regular expression;search algorithm;shortest path problem;software release life cycle;sorting algorithm;time complexity;vertex (geometry);vertex (graph theory)	Airat Urakov;Timofey Timeryaev	2012	CoRR		block graph;graph power;folded cube graph;mathematical optimization;resistance distance;combinatorics;discrete mathematics;independent set;graph bandwidth;level structure;graph center;metric k-center;graph theory;pancyclic graph;metric dimension;comparability graph;mathematics;trémaux tree;butterfly graph;random geometric graph;complement graph;indifference graph;line graph;strength of a graph	Theory	23.429758647228827	26.358427271487194	179348
a0663f85e6d15efb1fdf94b8be5171b5bf0100f7	sequential and parallel algorithms for the maximum-weight independent set problem on permutation graphs	algoritmo paralelo;design of algorithms;parallel algorithm;independent set;combinatorial problems;algorithme parallele;resolucion problema;permutation graph;conception algorithme;probleme combinatoire;problema combinatorio;combinatory problem;algorithm design;problem solving;resolution probleme;parallel algorithms	Abstract   We present a sequential and a parallel algorithm to solve the maximum-weight independent set problem on a permutation graph. Our input data is a permutation  π  = [ π  1 ,  π  2 ,…,  π   n  ] and the weights of these vertices. Our sequential algorithm takes  O ( n  log log  n ) time and our parallel algorithm is of  O (log 2  n ) time and   O(  n     3   (  log   n)  )   processors under the CREW PRAM model.	independent set (graph theory);parallel algorithm	Ming-Shing Yu;Lin-Yu Tseng;Shoe-Jane Chang	1993	Inf. Process. Lett.	10.1016/0020-0190(93)90188-F	mathematical optimization;combinatorics;computer science;permutation graph;mathematics;parallel algorithm;cyclic permutation;algorithm	Theory	18.131950601437453	28.072791057247084	180240
8705784587a21f2c0400b4db97bd6fb639521fcc	spectral partitioning with multiple eigenvectors	graph theory;linear order;teoria grafo;relacion orden;coupe graphe;temps lineaire;ordering;tiempo lineal;theorie graphe;eigenvector;algorithme;vector propio;algorithm;corte grafo;relation ordre;graph partitioning;particion;graph cut;linear time;partition;vlsi;vecteur propre;eigenvectors;algoritmo	The gvuph partitioning problem is to divide the vertices of a graph into disjoint clusters to minimize the total cost of the edges cut by the clusters. A spectral partitioning heuristic uses the graph’s eigenvectors to construct a geometric representation of the graph (e.g., linear orderings) which are subsequently partitioned. Our main result shows that when all the eigenvectors are used, graph partitioning reduces to a new vector partitioning problem. This result implies that as many eigenvectors as are practically possible should be used to construct a solution. This philosophy is in contrast to that of the widely used spectral hipartitioning (SB) heuristic (which uses only a single eigenvector) and several previous multi-way partitioning heuristics [S, 11, 17, 27, 381 (which use k eigenvectors to construct k-way partitionings). Our result motivates a simple ordering heuristic that is a multiple-eigenvector extension of SB. This heuristic not only significantly outperforms recursive SB, but can also yield excellent multi-way VLSI circuit partitionings as compared to [l, 111. Our experiments suggest that the vector partitioning perspective opens the door to new and effective partitioning heuristics. The present paper updates and improves a preliminary version of this work [5].	apply;approximation algorithm;binary space partitioning;cluster analysis;code;experiment;graph partition;heuristic (computer science);iteration;iterative method;jason;martine kempf;mathematical optimization;partition problem;pixel;recursion;rumble pak;sandy bridge;speedup;symmetric multiprocessing;very-large-scale integration	Charles J. Alpert;Andrew B. Kahng;So-Zen Yao	1999	Discrete Applied Mathematics	10.1016/S0166-218X(98)00083-3	mathematical optimization;combinatorics;discrete mathematics;eigenvalues and eigenvectors;graph theory;mathematics;algorithm	Theory	20.123873064606094	30.39405443155942	180702
19336e546ceeb6cd7ab6f706e00acc5459308c4c	a push-relabel approximation algorithm for approximating the minimum-degree mst problem and its generalization to matroids	computadora;hipergrafico;maximum degree;matroid;network design;spanning trees;flow;approximate algorithm;maximum flow;optimum;maximo;grado grafo;05bxx;minimum weight spanning tree;approximation algorithms;05c05;ordinateur;probleme chemin;camino hamiltoniano;technology;approximation algorithm;nudo;connaissance;05c65;aproximacion;arbre maximal;problema np duro;conception;oleada;hamiltonian;maximum;conocimiento;reseau;calculo automatico;computer;68wxx;hamiltonien;computing;probleme np;red;matroide;52b40;approximation;calcul automatique;np hard problem;knowledge;theory of computing;estimation erreur;arbol maximo;hamiltonian path problem;probleme np difficile;error estimation;informatique theorique;optimo;68r10;ny;estimacion error;technologie;minimum spanning tree;algoritmo aproximacion;68xx;coste;diseno;chemin hamiltonien;poids minimum;design;degree bounded network design;degre graphe;flot;spanning tree;hypergraph;noeud;push relabel;algorithme approximation;68w25;local search;node;hamiltoniano;minimum degree;graph degree;network;hamiltonian path;hypergraphe;computer theory;cout;tecnologia;informatica teorica	In the minimum-degree minimum spanning tree (MDMST) problem, we are given a graph G, and the goal is to find a minimum spanning tree (MST) T , such that the maximum degree of T is as small as possible. This problem is NP-hard and generalizes the Hamiltonian path problem. We give an algorithm that outputs an MST of degree at most 2∆opt(G)+ o(∆opt(G)), where ∆opt(G) denotes the degree of the optimal tree. This result improves on a previous result of Fischer [5] that finds an MST of degree at most b∆opt(G) + logb n, for any b > 1. The MDMST problem is a special case of the following problem: given a k-ary hypergraph G = (V,E) and weighted matroid M with E as its ground set, find a minimum-cost basis (MCB) T of M such that the degree of T in G is as small as possible. Our algorithm immediately generalizes to this problem, finding an MCB of degree at most k2∆opt(G,M)+O(k √ k∆opt(G,M)). We use the push-relabel framework developed by Goldberg [8] for the maximum-flow problem. To our knowledge, this is the first use of the push-relabel technique in an approximation algorithm for an NP-hard problem. The MDMST problem is closely connected to the bounded-degree minimum spanning tree (BDMST) problem. Given a graph G and degree bound B on its nodes, the BDMST problem is to find a minimum cost spanning tree among the spanning trees with maximum degree B. Previous algorithms for this problem by Könemann and Ravi [13, 14] and by Chaudhuri et al. [2] incur a near-logarithmic additive error in the degree. We give the first BDMST algorithm that approximates both the degree and the cost to within a constant factor of the optimal. These results generalize to the case of non-uniform degree bounds.	approximation algorithm;file spanning;flow network;hamiltonian path problem;maximum flow problem;michael j. fischer;minimum spanning tree;np-hardness;utility functions on indivisible goods;weighted matroid	Kamalika Chaudhuri;Satish Rao;Samantha Riesenfeld;Kunal Talwar	2009	Theor. Comput. Sci.	10.1016/j.tcs.2009.07.029	combinatorics;spanning tree;computer science;calculus;mathematics;approximation algorithm;algorithm	Theory	21.019790978686732	27.018875788204046	180927
ce4a8046fe4b93dbf0e4c16f7fef0e7c56d7f6e5	span-program-based quantum algorithms for graph bipartiteness and connectivity		Span program is a linear-algebraic model of computation which can be used to design quantum algorithms. For any Boolean function there exists a span program that leads to a quantum algorithm with optimal quantum query complexity. In general, finding such span programs is not an easy task. In this work, given a query access to the adjacency matrix of a simple graph G with n vertices, we provide two new span-program-based quantum algorithms: – an algorithm for testing if the graph is bipartite that uses O(n √ n) quantum queries; – an algorithm for testing if the graph is connected that uses O(n √ n) quantum queries.	adjacency matrix;decision tree model;graph (discrete mathematics);model of computation;quantum algorithm	Agnis Arins	2015		10.1007/978-3-319-29817-7_4	graph power;edge-transitive graph;graph energy;factor-critical graph;combinatorics;discrete mathematics;graph bandwidth;distance-regular graph;theoretical computer science;simplex graph;mathematics;voltage graph;graph state;quartic graph;complement graph;quantum algorithm;line graph;quantum phase estimation algorithm;adjacency matrix;quantum sort	Theory	23.781428505673215	26.502956249883468	180954
fd8ded1f9fc5ae5a2cbc94194c6dc7060a09a4e1	multi-stage optimization of matchings in trees with application to kidney exchange		In this paper, we propose a method for multi-stage optimization of matchings in trees relative to different weight functions that assign positive weights to the edges of the trees. This method can be useful in transplantology where nodes of the tree correspond to pairs (donor, recipient) and two nodes (pairs) are connected by an edge if these pairs can exchange kidneys. Weight functions can characterize the number of exchanges, the importance of exchanges, or their compatibility.	matching (graph theory)	Michal Mankowski;Mikhail Ju. Moshkov	2017		10.1007/978-3-319-60837-2_10	weight function;mathematical optimization;mathematics	Logic	23.659850784660843	28.384821483891923	181741
e4c050b8454b517f160f84c41bb1ee664e87b9be	approximating maximum weight cycle covers in directed graphs with weights zero and one	traveling salesman problem;graph theory;teoria grafo;approximate algorithm;subgrafo;asymmetry;approximation algorithms;travelling salesman problem;approximation algorithm;cycle covers;asymetrie;theorie graphe;optimisation combinatoire;problema viajante comercio;probleme commis voyageur;sous graphe;directed graph;cycle graphe;graphe oriente;edge graph;algoritmo aproximacion;borne inferieure;asimetria;arete graphe;grafo orientado;cycle graph;inapproximability;subgraph;algorithme approximation;combinatorial optimization;grafo completo;complete graph;graphe complet;probleme direct;lower bound;problema directo;arista grafico;cota inferior;direct problem;optimizacion combinatoria;ciclo diagrama	A cycle cover of a graph is a spanning subgraph, each node of which is part of exactly one simple cycle. A k-cycle cover is a cycle cover where each cycle has length at least k. Given a complete directed graph with edge weights zero and one, Max-k-DDC(0,1) is the problem of finding a k-cycle cover with maximum weight. We present a 2/3 approximation algorithm for Max-k-DDC(0,1) with running time O(n 5/2). This algorithm yields a 4/3 approximation algorithm for Max-k-DDC(1,2) as well. Instances of the latter problem are complete directed graphs with edge weights one and two. The goal is to find a k-cycle cover with minimum weight. We particularly obtain a 2/3 approximation algorithm for the asymmetric maximum traveling salesman problem with distances zero and one and a 4/3 approximation algorithm for the asymmetric minimum traveling salesman problem with distances one and two. As a lower bound, we prove that Max-k-DDC(0,1) for k ≥ 3 and Max-k-UCC(0,1) (finding maximum weight cycle covers in undirected graphs) for k ≥ 7 are \APX-complete.	approximation algorithm;cycle (graph theory);directed graph;edge cycle cover;file spanning;graph (discrete mathematics);minimum weight;time complexity;travelling salesman problem;vertex cycle cover	Markus Bläser;Bodo Manthey	2004	Algorithmica	10.1007/s00453-004-1131-0	mathematical optimization;combinatorics;discrete mathematics;feedback arc set;vertex cover;edge cover;mathematics;geometry;travelling salesman problem;approximation algorithm;algorithm;bottleneck traveling salesman problem	Theory	21.71169906490795	26.729868898498204	182628
6d532b0c1887870bcf959bdddc81bd8cf217893d	orthogonal drawings based on the stratification of planar graphs	graph theory;teoria grafo;mathematiques discretes;2 visibility;matematicas discretas;arbre maximal;temps lineaire;discrete mathematics;linear time algorithm;tiempo lineal;theorie graphe;algorithme;algorithm;arbol maximo;graphe planaire;linear time;stratification;spanning tree;grafo planario;planar graph;algoritmo	We propose a linear time algorithm that associates with any planar graph G a strati!cation having a particular layered spanning tree of G. Using this strati!cation, an algorithm to obtain a 2-visibility drawing of G is described. c © 2003 Elsevier B.V. All rights reserved.	algorithm;file spanning;planar graph;spanning tree;time complexity	Nicolas Bonichon;Bertrand Le Saëc;Mohamed Mosbah	2004	Discrete Mathematics	10.1016/S0012-365X(03)00305-4	time complexity;stratification;combinatorics;topology;spanning tree;graph theory;mathematics;geometry;planar graph	AI	23.939371888090367	29.622685904937324	182883
45bac4d8b4bbd97538f4d6a96124f2d9ee8d5ff3	intractability of clique-width parameterizations	numero cromatico;hamiltonian cycle;complexite;68w40;edge domination;coloracion grafo;parameterized complexity;cycle hamiltonien;complejidad;graph clique;nombre chromatique;largeur clique;parameterization;chromatic number;clique width;complexity;tree width;68wxx;parametrizacion;algorithme;dominating set;algorithm;hamiltonian graph;intractabilite;68q17;coloration graphe;ciclo hamiltoniano;cycle graphe;ensemble contour;vertex graph;edge set;grafo hamiltoniano;conjunto dominando;68q25;cycle graph;graphe hamiltonien;clique graphe;05c45;largeur arbre;parametrisation;vertice grafo;sommet graphe;ensemble dominant;graph colouring;algoritmo;ciclo diagrama;graphe colore;05c15	We show that Edge Dominating Set, Hamiltonian Cycle, and Graph Coloring are W [1]-hard parameterized by clique-width. It was an open problem, explicitly mentioned in several papers, whether any of these problems is fixed parameter tractable when parameterized by the clique-width, that is, solvable in time g(k) · nO(1) on n-vertex graphs of clique-width k, where g is some function of k only. Our results imply that the running time O(nf(k)) of many clique-width based algorithms is essentially the best we can hope for (up to a widely believed assumption from parameterized complexity, namely FPT 6= W [1]).	algorithm;clique-width;cobham's thesis;computational complexity theory;decision problem;edge dominating set;graph coloring;hamiltonian path;parameterized complexity;time complexity	Fedor V. Fomin;Petr A. Golovach;Daniel Lokshtanov;Saket Saurabh	2010	SIAM J. Comput.	10.1137/080742270	hamiltonian path;combinatorics;discrete mathematics;topology;mathematics	Theory	21.55556693542866	26.36628452587339	183328
b87da68bcd33d7ede07f6686cb169f13a12ef2b1	computing the average distance of an interval graph	graph theory;teoria grafo;graphe intervalle;interval graph;grafo intervalo;average distance;theorie graphe;algorithme;algorithm;graph algorithm;distance moyenne;algorithme graphe;graph algorithms;algoritmo	An O(m)-algorithm for computing the average distance of an interval graph with m edges of unit length is presented. A slight modification of the algorithm can be used for computing the average distance of a tree with weighted edges in time O(n), where n is the number of vertices.	algorithm	Peter Dankelmann	1993	Inf. Process. Lett.	10.1016/0020-0190(93)90174-8	graph power;combinatorics;discrete mathematics;interval graph;topology;graph bandwidth;level structure;degree;distance-regular graph;graph theory;simplex graph;hypercube graph;mathematics;algorithm;strength of a graph	Theory	21.987761712747478	27.93037078384636	184227
34eb3a17c75c17633b39f380b399d777ab4c7043	computing vertex connectivity: new bounds from old techniques	graphe non oriente;graph theory;distance function;teoria grafo;non directed graph;fonction distance;theorie graphe;algorithme;algorithm;graphe pondere;grafo no orientado;directed graph;graphe oriente;randomized algorithm;conexidad;grafo orientado;error probability;weighted graph;connexite;connexite sommet;connectedness;vertex connectivity;algoritmo	The vertex connectivity ? of a graph is the smallest number of vertices whose deletion separates the graph or makes it trivial. We present the fastest known deterministic algorithm for finding the vertex connectivity and a corresponding separator. The time for a digraph having n vertices and m edges is O(min{?3+n,?n}m); for an undirected graph the term m can be replaced by ?n. A randomized algorithm finds ? with error probability 1/2 in time O(nm). If the vertices have nonnegative weights the weighted vertex connectivity is found in time O(?1nmlog(n2/m)) where ?1?m/n is the unweighted vertex connectivity or in expected time O(nmlog(n2/m)) with error probability 1/2. The main algorithm combines two previous vertex connectivity algorithms and a generalization of the preflow-push algorithm of Hao and Orlin (1994, J. Algorithms17, 424?446) that computes edge connectivity.	k-vertex-connected graph	Monika Henzinger;Satish Rao;Harold N. Gabow	2000	J. Algorithms	10.1006/jagm.1999.1055	vertex separator;combinatorics;discrete mathematics;directed graph;topology;feedback vertex set;metric;social connectedness;connectivity;graph theory;probability of error;cycle graph;vertex;mathematics;randomized algorithm;neighbourhood;algorithm	Theory	23.766837861234897	30.698787981367794	184748
53f45924e4ccb6944a3b3c52e3a81c0f81edb5b4	the expected distribution of degrees in random binary search trees	arbre graphe;graph theory;random graph;teoria grafo;arbre recherche binaire;grafico aleatorio;tree graph;graphe aleatoire;mathematical expectation;theorie graphe;arbol investigacion binaria;binary search tree;vertex graph;esperanza matematica;cuspide grafico;arbol grafo;sommet graphe;esperance mathematique	Etude de la distribution moyenne des degres des sommets dans un arbre de recherche binaire aleatoire		Hosam M. Mahmoud	1986	Comput. J.	10.1093/comjnl/29.1.36	random graph;combinatorics;discrete mathematics;binary search tree;topology;graph theory;vertex;mathematics;tree;expected value	Theory	23.783227307206804	31.69723618086802	185058
be4a1d40e19053c788e9f21fde2516da190c32b0	layered graph traversals and hamiltonian path problems - an algebraic approach	camino mas corto;algebraic approach;shortest path;structure programme;plus court chemin;functional programming;programming theory;estructura programa;hamiltonian path problem;mathematical programming;theorie programmation;programmation fonctionnelle;programacion funcional;program structure;programmation mathematique;programacion matematica;reachability analysis;analyse atteignabilite	Using an algebra of paths we present abstract algebraic derivations for two problem classes concerning graphs, viz. layer oriented traversal and computing sets of Hamiltonian paths. In the rst case, we are even able to abstract to the very general setting of Kleene algebras. Applications include reachability and a shortest path problem as well as topological sorting, cycle detection and nding maximum cardinality matchings.	algorithm;axiomatic system;cycle detection;hamiltonian path;kleene algebra;linear algebra;list of algorithms;matching (graph theory);maximal set;reachability;schematic;shortest path problem;topological sorting;tree traversal;viz: the computer game	Thomas Brunn;Bernhard Möller;Martin Russling	1998		10.1007/BFb0054287	hamiltonian path;combinatorics;discrete mathematics;longest path problem;computer science;mathematics;hamiltonian path problem;shortest path problem;programming language;functional programming;algorithm	Theory	20.464090909343824	28.762419049744317	185328
5a3633a191deff78cd51d717ae92ef94be217cd6	some structural properties of a least central subtree of a tree	structural properties	We consider the graph center problem in the joinsemilattice L(T ) of all subtrees of a tree T . A subtree S of a tree T is a central subtree of T if S has the minimum eccentricity in the joinsemilattice. The graph center of the joinsemilattice is the set of all central subtrees. A central subtree with the minimum number of points is a least central subtree of a tree T . Thus least central subtrees of T are, in some sense, the best possible connected substructures of T among all connected substructures. We show that every tree is a unique least central subtree of some larger tree. Our main result points out the importance of the cardinality of the nodes of degree two. Low cardinality guarantees uniqueness and explicit construction for the least central subtree.	distance (graph theory);graph center;tree (data structure)	Martti Hamina;Matti Peltola	2010	Algorithmic Operations Research		combinatorics;discrete mathematics;topology;mathematics;search tree	Theory	24.521740391452862	30.361468810749514	186140
e22bcb24ddbefe04530ba3d3e8f81eb541539c0f	constructing competitive tours from local information	graph theory;graphe minimal;teoria grafo;algorithm analysis;information retrieval;robotics;theorie graphe;grafo minimo;algorithme;algorithm;recherche information;graphe planaire;robotica;analyse algorithme;robotique;recuperacion informacion;grafo planario;analisis algoritmo;planar graph;minimal graph;algoritmo	Abstract   We consider the problem of a searcher exploring an initially unknown weighted planar graph  G . When the searcher visits a vertex  v , it learns of each edge incident to  v . The searcher's goal is to visit each vertex of  G , incurring as little cost as possible. We present a constant competitive algorithm for this problem.		Bala Kalyanasundaram;Kirk Pruhs	1994	Theor. Comput. Sci.	10.1016/0304-3975(94)90155-4	combinatorics;computer science;graph theory;mathematics;robotics;algorithm;planar graph	ECom	20.959473372219456	27.336699999904614	186422
eb7a8846ae3e60dbb2b641f10ace3334a05ebd07	congestion-free, dilation-2 embedding of complete binary trees into star graphs	binary tree;parallel processing;parallel algorithm;graph embedding;star graph;complete binary tree	Trees are a common structure to represent the inter-task communication pattern of a parallel algorithm. In this paper, we consider the embedding a complete binary tree in a star graph with the objective of minimizing congestion and dilation. We develop two embeddings: i) a congestion-free, dilation-2, load-1 embedding of a level-p binary tree, and ii) a congestion-free, dilation-2, load-2 k embedding of a level-(p+k) binary tree, into an n-dimensional star graph, where p = n i=2 blog ic = (n log n) and k is any positive integer. The rst result ooers a tree of size comparable or superior to existing results, but with less congestion and dilation. The second result provides more exibility in the embeddable tree sizes compared to existing results.	a* search algorithm;binary tree;blog;dilation (morphology);inter-process communication;network congestion;parallel algorithm;time complexity	Yu-Chee Tseng;Yuh-Shyan Chen;Tong-Ying Tony Juang;Chiou-Jyu Chang	1999	Networks	10.1002/(SICI)1097-0037(199905)33:3%3C221::AID-NET8%3E3.0.CO;2-K	random binary tree;optimal binary search tree;cartesian tree;parallel processing;red–black tree;combinatorics;discrete mathematics;tree rotation;binary expression tree;topology;exponential tree;binary tree;star;computer science;treap;order statistic tree;range tree;self-balancing binary search tree;k-ary tree;interval tree;mathematics;ternary search tree;threaded binary tree;tree traversal;algorithm;avl tree	ML	17.507698753705537	29.720338526448767	186884
ef31004974d7f3202f64d15256aaf135eba58ba4	solving subgraph isomorphism problems with constraint programming	institutional repositories;fedora;global constraint;vital;graph isomorphism;scale free;isomorphism problem;constraint programming;filtering algorithm;vtls;ils;subgraph isomorphism;partial order	The subgraph isomorphism problem consists in deciding if there exists a copy of a pattern graph in a target graph. We introduce in this paper a global constraint and an associated filtering algorithm to solve this problem within the context of constraint programming. The main idea of the filtering algorithm is to label every node with respect to its relationships with other nodes of the graph, and to define a partial order on these labels in order to express compatibility of labels for subgraph isomorphism. This partial order over labels is used to filter domains. Labelings can also be strengthened by adding information from the labels of neighbors. Such a strengthening can be applied iteratively until a fixpoint is reached. Practical experiments illustrate that our new filtering approach is more effective on difficult instances of scale free graphs than state-of-the-art algorithms and other constraint programming approaches.	algorithm;computation;constraint programming;experiment;fixed point (mathematics);gecode;graph isomorphism problem;graph property;heuristic (computer science);iteration;iterative method;propagator;subgraph isomorphism problem	Stéphane Zampelli;Yves Deville;Christine Solnon	2009	Constraints	10.1007/s10601-009-9074-3	partially ordered set;constraint logic programming;order isomorphism;mathematical optimization;constraint programming;combinatorics;discrete mathematics;constraint satisfaction;graph canonization;computer science;constraint graph;scale-free network;subgraph isomorphism problem;mathematics;graph isomorphism;induced subgraph isomorphism problem;maximum common subgraph isomorphism problem;graph homomorphism;algorithm	AI	23.519842497112222	26.61640586764229	186885
e45bc48c8eed4f18f4da74306247e05bc494c6ab	oca-graphical system for algorithm structure analysis and processing	algorithm graph;algorithm analysis;algorithm structure;algorithm flow graph;graphic system	We suggest a graphical system for analyzing and processing algorithm structure with a user-friendly interface and a set of necessary tools. The system is designed to make the process of visualization, modification, and analysis of algorithm graphs easier. The system provides algorithm flow graph building and analysis, the algorithm flow graph height and width adjustment, algorithm simplification due to the data output rule, and algorithm flow graph parameters output.	dijkstra's algorithm;graphical user interface;level of detail;usability	Anatoliy Melnyk;Inna Iakovlieva	2012	Smart CR	10.6029/smartcr.2012.02.007	out-of-kilter algorithm;algorithm design;suurballe's algorithm;combinatorics;kruskal's algorithm;graph bandwidth;ramer–douglas–peucker algorithm;push–relabel maximum flow algorithm;floyd–warshall algorithm;computer science;theoretical computer science;hopcroft–karp algorithm;machine learning;in-place algorithm;factor graph;johnson's algorithm;fsa-red algorithm;moral graph;reverse-delete algorithm;dinic's algorithm;difference-map algorithm;matching	Graphics	21.115867754469868	29.969648054267548	186973
c97a6c2d9a85c80d23012f2f62abd883f3f46a65	on the domination search number	graph search;algorithm complexity;complejidad algoritmo;construction graphe;graph connectivity;complexite algorithme;informatique theorique;vertex graph;conectividad grafo;algoritmo optimo;algorithme optimal;optimal algorithm;connectivite graphe;graph construction;vertice grafo;sommet graphe;construccion grafo;computer theory;informatica teorica	We introduce the domination search game which can be seen as a natural modiica-tion of the well-known node search game. Various results concerning the domination search number of a graph are presented. In particular, we establish a very interesting connection between domination graph searching and a relatively new graph parameter called dominating target number.	dominating set;search game;whole earth 'lectronic link	Fedor V. Fomin;Dieter Kratsch;Haiko Müller	2000		10.1007/3-540-40064-8_16	combinatorics;discrete mathematics;connectivity;vertex;mathematics;best-first search	AI	21.20710618288158	27.4813065198974	187125
50b017733d4860932276442de6eab5c09675d9cf	distributed weighted matching	algorithme rapide;distributed system;systeme reparti;time complexity;distributed computing;complexite temps;graphe pondere;sistema repartido;grafo pondero;fast algorithm;algorithme reparti;graph algorithm;calculo repartido;algoritmo repartido;weighted graph;complejidad tiempo;distributed algorithm;calcul reparti;algoritmo rapido	In this paper, we present fast distributed approximation algorithms for matching in weighted trees and general weighted graphs. The time complexity as well as the approximation ratio of the tree algorithm is constant. For the general graph algorithm we prove a constant ratio bound and a polylogarithmic time complexity ofO(log n).	approximation algorithm;list of algorithms;polylogarithmic function;time complexity	Mirjam Wattenhofer;Roger Wattenhofer	2004		10.1007/978-3-540-30186-8_24	time complexity;distributed algorithm;combinatorics;discrete mathematics;computer science;mathematics;distributed computing;algorithm	Theory	19.097294078631684	28.344302476278994	187386
b0976ac405e90942d2a1faaf73078d750a0b4d73	approximation algorithm for the minimum connected k -path vertex cover problem			approximation algorithm;vertex cover	Xiaosong Li;Zhao Zhang;Xiaohui Huang	2014		10.1007/978-3-319-12691-3_56	vertex separator;kruskal's algorithm;feedback vertex set;vertex cover;prim's algorithm;edge cover;vertex;reverse-delete algorithm;approximation algorithm;neighbourhood	Theory	23.073647022373475	25.906626199298664	187932
e3b3d322294305142d6586b6e00162337b5da3ff	a parallel algorithm for edge-coloring of graphs with edge-disjoint cycles	arbre graphe;algoritmo paralelo;edge coloring;coloracion grafo;partition method;parallel algorithm;shared memory;algorithm analysis;tree graph;multiprocessor;implementation;memoria compartida;sistema informatico;computer system;algorithme parallele;ejecucion;coloration graphe;methode partition;edge graph;arete graphe;analyse algorithme;systeme informatique;metodo particion;multiprocesador;arbol grafo;algoritmo optimo;algorithme optimal;optimal algorithm;analisis algoritmo;arista grafico;memoire partagee;graph colouring;multiprocesseur	We present a new linear algorithm for coloring the edges of a tree. Although this is not the first linear algorithm for the problem, our algorithm unlike the existing ones can be parallelized directly. The parallelization is obtained by showing that edge-coloring can be carried out using tree contraction. Hence, it can be done in O(log n) time using n/log n processors on the EREW PRAM. When the problem is extended to one of coloring the edges of a graph with edge-disjoint cycles, the said algorithm for trees can be extended very easily without increasing the resource requirement	edge coloring;graph coloring;parallel algorithm	Eliezer A. Albacea	1992	Inf. Process. Lett.	10.1016/0020-0190(92)90117-E	shared memory;combinatorics;discrete mathematics;kruskal's algorithm;multiprocessing;computer science;complete coloring;edge coloring;mathematics;parallel algorithm;implementation;tree;algorithm	DB	18.501935843908996	28.782742375510132	188252
994ae77c57d111c6464ffc86f94d731c09498c5c	graphs with maximum degree 6 are acyclically 11-colorable	grafo aciclico;maximum degree;coloracion grafo;procesamiento informacion;maximo;grado grafo;algorithm analysis;color;vertex;combinatorial problems;graphe acyclique;graph coloring;maximum;acyclic graph;combinatorial problem;probleme combinatoire;problema combinatorio;coloration graphe;graphe k colorable;informatique theorique;68r10;information processing;acyclic coloring;vertex coloring;couleur;analyse algorithme;vertice;degre graphe;traitement information;bounded degree graphs;analisis algoritmo;graph degree;graph colouring;computer theory;graphe colore;informatica teorica;05c15	An acyclick-coloring of a graphG is a proper vertex coloring of G, which uses at most k colors, such that the graph induced by the union of every two color class es i a forest. In this note, we prove that every graph with maximum degree six is acyclically 11-color ab e, thus improving the main result of [12].	color;degree (graph theory);graph (discrete mathematics);graph coloring	Hervé Hocquard	2011	Inf. Process. Lett.	10.1016/j.ipl.2011.05.005	degeneracy;loop;graph power;pathwidth;vertex;split graph;factor-critical graph;combinatorics;discrete mathematics;cograph;topology;fractional coloring;information processing;perfect graph;degree;regular graph;complete coloring;edge coloring;cycle graph;cubic graph;graph coloring;graph factorization;mathematics;list coloring;directed acyclic graph;line graph;circulant graph	Theory	24.285529606362818	29.832961318948765	188367
50aa35b948b5a17cc72b442d735a8c8c862a70b7	a generalization of the 0-1 principle for sorting	algoritmo paralelo;secuencia binaria;68w40;algoritmo aleatorizado;randomized algorithms;binary sequence;parallel algorithm;procesamiento informacion;algorithm analysis;sorting;68p10;algorithme randomise;tria;maillage;analysis of algorithm;68wxx;algorithme parallele;analysis of algorithms;cas moyen;principe 0 1;celdarada;sorting network;informatique theorique;average case perfomance;triage;information processing;randomized algorithm;grid pattern;68q25;analyse algorithme;meshes;0 1 principle;traitement information;sequence binaire;68w20;analisis algoritmo;68w10;computer theory;parallel algorithms;informatica teorica	The traditional zero-one principle for sorting networks states that ”if a network with n input lines sorts all 2n binary sequences into nondecreasing order, then it will sort any arbitrary sequence of n numbers into nondecreasing order.” We generalize this to the situation when a network sorts almost all binary sequences and relate it to the behavior of the sorting network on arbitrary inputs. We also present an application to mesh sorting. ∗This research has been supported in part by the NSF Grants CCR-9912395 and ITR-0326155. †257 ITE Building, Dept. of CSE, Univ. of Connecticut, Storrs, CT 06269 Email: rajasek@engr.uconn.edu ‡Department of Computer Science and Engineering, IIT Delhi, New Delhi 1100116, India. Email:ssen@cse.iitd.ernet.in. Part of the research done when the author was visiting University of Connecticut and supported by NSF Grant ITR-0326155 .	email;ibm notes;integrated information theory;sorting network	Sanguthevar Rajasekaran;Sandeep Sen	2005	Inf. Process. Lett.	10.1016/j.ipl.2004.11.013	adaptive sort;combinatorics;information processing;sorting network;computer science;sorting;artificial intelligence;external sorting;sorting algorithm;comparison sort;mathematics;parallel algorithm;randomized algorithm;algorithm	Theory	18.1291988932249	26.451611833535363	188582
57198bba1b6a808e430af81f794feb5c57c2ef02	crossing numbers of graphs with rotation systems	torneo;tournaments;graph theory;approximation lineaire;teoria grafo;approximate algorithm;tournament;probleme np complet;approximation algorithm;np completeness;edit distance;temps lineaire;linear approximation;chaine caractere;emparejamiento de cadenas;tiempo lineal;theorie graphe;multigraph;graphe cubique;nombre de croisements;multigrafo;tournoi;linear time;cadena caracter;aproximacion lineal;edge graph;algoritmo aproximacion;distancia;arete graphe;completitud;numero de cruces;problema np completo;appariement chaine;rotacion;odd crossing number;completeness;multigraphe;string matching;algorithme approximation;grafo completo;rotation;crossing number;completude;complete graph;graphe complet;rotation system;independent odd crossing number;grafo cubico;distance;arista grafico;np complete problem;character string;cubic graph	We show that computing the crossing number and the odd crossing number of a graph with a given rotation system is NP-complete. As a consequence we can show that many of the well-known crossing number notions are NP-complete even if restricted to cubic graphs (with or without rotation system). In particular, we can show that Tutte’s independent odd crossing number is NP-complete, and we obtain a new and simpler proof of Hliněný’s result that computing the crossing number of a cubic graph is NP-complete. We also consider the special case of multigraphs with rotation systems on a fixed number k of vertices. For k=1 we give an O(mlog m) algorithm, where m is the number of edges, and for loopless multigraphs on 2 vertices we present a linear time 2-approximation algorithm. In both cases there are interesting connections to edit-distance problems on (cyclic) strings. For larger k we show how to approximate the crossing number to within a factor of ${k+4\choose4}/5$ in time O(m k log m) on a graph with m edges.	approximation algorithm;crossing number (graph theory);cubic function;edit distance;karp's 21 np-complete problems;multigraph;np-completeness;rotation system;time complexity;vertex (geometry);whole earth 'lectronic link	Michael J. Pelsmajer;Marcus Schaefer;Daniel Stefankovic	2007	Algorithmica	10.1007/s00453-009-9343-y	combinatorics;discrete mathematics;np-complete;graph theory;mathematics;geometry;crossing number;approximation algorithm;algorithm;tutte 12-cage	Theory	22.200447492076705	27.238538118131565	188908
33366a518e7255ccb0e2892d0eb042737f15e0d8	chain decompositions and independent trees in 4-connected graphs	shortest paths;distributed networks;connected graph;efficient approximation algorithms;spanning tree;facility location	"""This work was motivated by the study of a multitree approach to reliability in distributed networks and by the study of non-separating paths and cycles in highly connected graphs. We first give a result on """"non-separating chains"""" in 4-connected graphs. This result is then used to obtain a """"non-separating chain decomposition"""" of a 4-connected graph <i>G</i>, and an <i>O</i>(|<i>V</i>(<i>G</i>)|<sup>2</sup>|<i>E</i>(<i>G</i>)|) algorithm for constructing such a decomposition. As an application of this decomposition, we show how to produce four """"independent spanning trees"""" in a 4-connected graph in <i>O</i>(|<i>V</i>(<i>G</i>)|<sup>3</sup>) time."""	algorithm;connectivity (graph theory);file spanning;independent set (graph theory);planar graph	Sean Curran;Orlando Lee;Xingxing Yu	2003			pathwidth;mathematical optimization;combinatorics;discrete mathematics;spanning tree;connectivity;facility location problem;mathematics;trémaux tree;modular decomposition;shortest-path tree	Theory	22.96902166874475	28.746496583823784	188948
147dc1c9a8420ef98a75dd8fd5300ee4672dbea3	la complejidad paramétrica de minar grafos 1, resultados negativos	maquinas de turing;complejidad parametrica;algoritmos eficientes;clases de complejidad	In this paper we analyze the parameterized complexity of graph mining tasks, specically we analyze the parameterized complexity of the listing problem consistent in: Given an input graph G; list the frequent subgraphs of G of a given size. In this paper some lower bounds for this problem are proved. RESUMEN. En este artículo analizamos la complejidad paramétrica de algunos problemas típicos en minería de grafos, especícamente nosotros analizamos la complejidad paramétrica del problema de listado consistente en: Dado G un grafo-input, liste todos los subgrafos de G de un tamaño dado. En el artículo se prueban algunas cotas inferiores para este problema. A Mamadimitriou e Hijodimitriou	controller (control theory);linear algebra;parameterized complexity;structure mining	J. Andrés Montoya	2009	Revista Colombiana de Computación	10.29375/25392115.1137		Theory	21.897424370368423	27.515031765286718	189887
5a8d2e83e57b8f8ba282ea304776e61abd39e5f8	enumeration of subtrees of trees	maximum degree;tree transformation;enumeration;bc subtrees;middle part;enumeracion;bepress selected works;sous arbre;linear time algorithm;algorithme temps lineaire;diametre;connected subgraph;diameter;block cutpoint tree;transformation arbre;informatique theorique;extremal tree;diametro;extremal trees;subtree;arbre extremal;sous graphe relie;bicolorable tree;computer theory;informatica teorica	Let T be a weighted tree. The weight of a subtree T1 of T is defined as the product of weights of vertices and edges of T1. We obtain a linear-time algorithm to count the sum of weights of subtrees of T . As applications, we characterize the tree with the diameter at least d, which has the maximum number of subtrees, and we characterize the tree with the maximum degree at least ∆, which has the minimum number of subtrees.	algorithm;time complexity;tree (data structure)	Weigen Yan;Yeong-Nan Yeh	2006	Theor. Comput. Sci.	10.1016/j.tcs.2006.09.002	combinatorics;discrete mathematics;tree rotation;range tree;diameter;k-ary tree;mathematics;tree structure;search tree;weight-balanced tree;algorithm;avl tree	Theory	24.318304329436803	30.631952162301946	192164
e0ea6879ab0ee3a79fb90f94389287f3c38982b1	efficient parallel algorithms for series parallel graphs	graph theory;algoritmo paralelo;teoria grafo;parallel algorithm;algorithm performance;decomposition;theorie graphe;algorithme parallele;series parallel graph;resolucion problema;resultado algoritmo;performance algorithme;descomposicion;problem solving;resolution probleme	We present efficient parallel algorithms for solving three problems for series parallel graphs: 3-coloring, depth-first spanning tree, and breadth-first spanning tree. If the input is given by the decomposition tree, the first two problems can be solved in O(log n) time with O(n/log n) processors, the last problem can be solved in O(log n log log n) time with O(n) processors. We also present a parallel algorithm for recognizing series parallel graphs and constructing decomposition trees. This algorithm takes O(log’ n + log m) time with O(n + m) processors, where n (m) is the number of vertices (edges) in the graph. Q 1991 Academic press,	breadth-first search;central processing unit;depth-first search;file spanning;integrated circuit layout design protection;parallel algorithm;regular expression;spanning tree	Xin He	1991	J. Algorithms	10.1016/0196-6774(91)90012-N	mathematical optimization;combinatorics;computer science;graph theory;mathematics;parallel algorithm;decomposition;algorithm	Theory	18.559896732191515	28.168460530825502	192229
c5a50830aec67ffa58bd2becba3cd941f56b710c	shortest paths in euclidean graphs (extended abstract)	shortest path;euclidean distance;tree graphs;tree graphs computer science search problems euclidean distance circuits;euclidean space;circuits;search problems;computer science;graph model	We analyze a simple method for finding shortest paths in Euclidean graphs (where vertices are points in a Euclidean space and edge weights are distances between points). For many graph models, the running time of the algorithm to find the shortest path between a specified pair of vertices in a graph with V vertices and E edges is shown to be O ( V ) as compared with O(V1ogV + E ) required by the classical (Dijkstra) algorithm.	dijkstra's algorithm;euclidean distance;shortest path problem;time complexity;vertex (geometry)	Robert Sedgewick;Jeffrey Scott Vitter	1984		10.1109/SFCS.1984.715943	1-planar graph;euclidean domain;euclidean minimum spanning tree;visibility graph;suurballe's algorithm;electronic circuit;combinatorics;geometric graph theory;discrete mathematics;independent set;topology;widest path problem;longest path problem;floyd–warshall algorithm;euclidean space;euclidean shortest path;euclidean distance;mathematics;euclidean distance matrix;path;shortest path problem;distance;chordal graph;indifference graph;tree;k shortest path routing;shortest path faster algorithm	Theory	23.573724600033067	26.711835075714195	192429
8c41f8e9d69220825fa29529f58a8d5969dadb91	the k-edge intersection graphs of paths in a tree	optical network;graphe infini;grafo triangular;optimisation;coloracion grafo;combinatorics;aplicacion;camino grafo;tree;optimizacion;longitud onda;05c05;graph path;combinatoria;arbol;reconocimiento;graphe cordal;combinatoire;graph clique;coloring;wavelength;polynomial;red fibra optica;recognition;coloration graphe;infinite graph;graphe k colorable;informatique theorique;scheduling;conexion;graphe intersection;polinomio;68r10;reseau fibre optique;raccordement;edge graph;chemin graphe;graphe triangule;arbre;grafo infinito;arete graphe;ept graphs;optical fiber network;optimization;longueur onde;clique graphe;intersection graphs;grafo completo;reconnaissance;application;polynome;complete graph;graphe complet;connection;paths of a tree;ordonnancement;arista grafico;reglamento;chordal graphs;graph colouring;computer theory;68m20;chordal graph;graphe colore;informatica teorica;05c15	We consider a generalization of edge intersection graphs of paths in a tree. Let P be a collection of nontrivial simple paths in a tree T . We define the k-edge (k 1) intersection graph k(P), whose vertices correspond to the members of P, and two vertices are joined by an edge if the corresponding members of P share k edges in T . An undirected graph G is called a k-edge intersection graph of paths in a tree, and denoted by k-EPT, if G = k(P) for some P and T . It is known that the recognition and the coloring of the 1-EPT graphs are NP-complete. We extend this result and prove that the recognition and the coloring of the k-EPT graphs are NP-complete for any fixed k 1. We show that the problem of finding the largest clique on k-EPT graphs is polynomial, as was the case for 1-EPT graphs, and determine that there are at most O(n3) maximal cliques in a k-EPT graph on n vertices. We prove that the family of 1-EPT graphs is contained in, but is not equal to, the family of k-EPT graphs for any fixed k 2. We also investigate the hierarchical relationships between related classes of graphs, and present an infinite family of graphs that are not k-EPT graphs for every k 2. The edge intersection graphs are used in network applications. Scheduling undirected calls in a tree is equivalent to coloring an edge intersection graph of paths in a tree. Also assigning wavelengths to virtual connections in an optical network is equivalent to coloring an edge intersection graph of paths in a tree. © 2007 Published by Elsevier B.V.	graph (discrete mathematics);graph coloring;maximal set;np-completeness;polynomial;scheduling (computing);second level address translation;vertex (geometry)	Martin Charles Golumbic;Marina Lipshteyn;Michal Stern	2008	Discrete Applied Mathematics	10.1016/j.dam.2006.06.019	1-planar graph;clique;block graph;pathwidth;split graph;combinatorics;discrete mathematics;cograph;interval graph;independent set;topology;bipartite graph;connection;pancyclic graph;wavelength;graph coloring;clique-sum;trapezoid graph;mathematics;tree-depth;trémaux tree;modular decomposition;tree;treewidth;intersection number;scheduling;complete graph;chordal graph;indifference graph;intersection graph;polynomial	Theory	22.843947201673135	28.908508274873157	192522
8aebaac45a77bec7ff46f39a90007ad70f9cfa38	fixed parameter algorithms for dominating set and related problems on planar graphs	arbre graphe;conjunto independiente;tree graph;independent set;probleme np complet;fixed parameter tractable;dominating set;ensemble independant;graphe planaire;problema np completo;tree decomposition;treewidth;domination number;covering problem;grafo planario;outerplanarity;arbol grafo;planar graph;np complete problem;tractabilite parametre fixe;plane graph	Abstract. We present an algorithm that constructively produces a solution to the k -DOMINATING SET problem for planar graphs in time O(c^ \sqrt k n) , where c=4^ 6\sqrt 34 . To obtain this result, we show that the treewidth of a planar graph with domination number γ (G) is O(\sqrt \rule 0pt 4pt \smash γ (G) ) , and that such a tree decomposition can be found in O(\sqrt \rule 0pt 4pt \smash γ (G) n) time. The same technique can be used to show that the k -FACE COVER problem (find a size k set of faces that cover all vertices of a given plane graph) can be solved in O(c 1 ^ \sqrt k n) time, where c 1 =3^ 36\sqrt 34 and k is the size of the face cover set. Similar results can be obtained in the planar case for some variants of k -DOMINATING SET, e.g., k -INDEPENDENT DOMINATING SET and k -WEIGHTED DOMINATING SET.	algorithm;dominating set;planar graph;tree decomposition;treewidth	Jochen Alber;Hans L. Bodlaender;Henning Fernau;Ton Kloks;Rolf Niedermeier	2002	Algorithmica	10.1007/s00453-001-0116-5	combinatorics;discrete mathematics;independent set;topology;bidimensionality;dominating set;mathematics;maximal independent set;planar graph	Theory	22.119876754313477	27.424229772997577	192549
fa97cd226dfad30fa710af66ea3677d8a476cf3d	length-constrained path-matchings in graphs	metodo polinomial;acoplamiento grafo;adaptacion;camino grafo;temps polynomial;graph path;probleme np complet;np completeness;reseau ordinateur;multidestinatario;pairing;pseudomatching;diffusion telecommunications;pseudo matching;graph matching;arete disjointe;computer network;couplage graphe;disjoint edge;path matching;polynomial method;matching;adaptation;diffusion donnee;polynomial time;difusion dato;chemin graphe;red ordenador;algorithms;problema np completo;emparejamiento;data broadcast;broadcasting;methode polynomiale;appariement;multidestinataire;multicast;np complete problem;disjoint paths;tiempo polinomial	The path-matching problem is to find a set of vertexor edge-disjoint paths with length constraints in a given graph with a given set of endpoints. This problem has several applications in broadcasting and multicasting in computer networks. In this paper, we study the algorithmic complexity of different cases of this problem. In each case, we either provide a polynomial-time algorithm or prove that the problem is NP-complete. © 2002 Wiley Periodicals, Inc.	algorithm;analysis of algorithms;computational complexity theory;john d. wiley;matching (graph theory);multicast;np-completeness;planar graph;polynomial;time complexity;vertex (geometry)	Mohammad Ghodsi;Mohammad Taghi Hajiaghayi;Mohammad Mahdian;Vahab S. Mirrokni	2002	Networks	10.1002/net.10030	combinatorics;discrete mathematics;np-complete;feedback vertex set;vertex cover;computer science;mathematics;maximal independent set;subset sum problem;algorithm	Theory	21.197247669339813	27.509515030306968	193187
2e3d42907078395675748ec5316328872a2c0492	a combinatorial property of the factor poset of a word	graph theory;mot semblable;teoria grafo;language theory;combinatorial problems;teoria lenguaje;theorie graphe;similitude;conjunto parcialmento ordenado;combinatorial problem;probleme combinatoire;partially ordered set;problema combinatorio;similarity;similar word;ensemble partiellement ordonne;similitud;theorie langage	We prove the following interesting combinatorial property of the poset of the factors of a word. Let w b a word and n = Gw + 2, whereGw is the maximal length of a repeated factor of w. If v is any word such that the posets of the factors of v and ofw up to lengthn are isomorphic, thenv can be obtained by renaming the letters of w or of the reversal of w.  2002 Elsevier Science B.V. All rights reserved.	maximal set	Arturo Carpi;Aldo de Luca	2002	Inf. Process. Lett.	10.1016/S0020-0190(01)00192-2	partially ordered set;combinatorics;similarity;philosophy of language;graph theory;similitude;mathematics;algorithm	AI	24.30579388893793	30.3628342900485	193923
ff84ced32a0d569ee6d9d0a91c690d633885c164	an optimal randomised logarithmic time connectivity algorithm for the erew pram	graph theory;algoritmo paralelo;gestion memoire;teoria grafo;parallel algorithm;algorithmique;systeme multiprocesseur memoire repartie;complexite calcul;implementation;storage management;theorie graphe;interconnection network;algorithme parallele;theorem proving;ejecucion;demonstration theoreme;gestion memoria;complejidad computacion;algorithmics;algoritmica;computational complexity;sistema multiprocesador memoria distribuida;systeme parallele;distributed memory multiprocessor system;parallel system;demostracion teorema;long chain;connected component;red interconexion;sistema paralelo;reseau interconnexion	Improving a long chain of works we obtain a randomised EREW PRAM algorithm for nding the connected components of a graph G = (V; E) with n vertices and m edges in O(logn) time using an optimal number of O((m + n)= log n) processors. The result returned by the algorithm is always correct. The probability that the algorithm will not complete in O(log n) time is o(n ?c) for any c > 0.	algorithm;central processing unit;connected component (graph theory);parallel random-access machine;time complexity	Shay Halperin;Uri Zwick	1996	J. Comput. Syst. Sci.	10.1006/jcss.1996.0078	combinatorics;connected component;computer science;artificial intelligence;graph theory;mathematics;parallel algorithm;automated theorem proving;computational complexity theory;implementation;algorithmics;algorithm	Theory	18.02229901889682	28.30172319887174	194292
7209eb9887e1d241dcf6d775046f7a15fb6a8280	simpler algorithms for testing two-page book embedding of partitioned graphs	planar graph;book embedding	In this paper, we study the problem of testing whether a given graph admits a 2-page book embedding with a fixed edge partition. We first show that finding a 2-page book embedding of a given graph can be reduced to the planarity testing of a graph, which yields a simple linear-time algorithm for solving the problem. We then characterize the graphs that do not admit 2-page book embeddings via forbidden subgraphs, and give a linear-time algorithm for detecting the forbidden subgraph of a given graph.	algorithm;book embedding	Seok-Hee Hong;Hiroshi Nagamochi	2014		10.1007/978-3-319-08783-2_41	combinatorics;discrete mathematics;theoretical computer science	Theory	24.587894087602027	26.059133052495135	195361
b9825f6bb711978b476f48a51c1cbfc13d4b7395	an analysis of the size of the minimum dominating sets in random recursive trees, using the cockayne-goodman-hedetniemi algorithm	minimum dominating set;lettre alphabet;conjunto recursivo;boolean circuits;statistique;metodo estadistico;optimisation;nombre domination;probability;combinatorics;procesamiento informacion;emergencia;tree;optimizacion;loi probabilite;ley probabilidad;05c05;emergence;combinatoria;vertex;random tree;arbol;combinatoire;random recursive tree;algorithme temps lineaire;dominating sets;statistical method;ensemble recursif;reseau;potencia;68wxx;red;dominating set;numero dominacion;enquete;algorithme lineaire;methode statistique;informatique theorique;probability distribution;probabilidad;linear time;modificacion;information processing;probability theory;probabilite;statistics;65f35;arbre;circuit booleen;ensemble aleatoire;theorie probabilite;algorithms;puissance;conjunto dominando;teoria probabilidad;letra alfabeto;optimization;vertice;recursive set;encuesta;cardinalite;domination number;power law;letter;traitement information;survey;power;random set;network;ensemble dominant;estadistica;epsrc;computer theory;modification;random trees;theorie mathematique;conjunto aleatorio;informatica teorica	A random recursive tree on n vertices is either a single isolated vertex (for n = 1) or is a vertex vn connected to a vertex chosen uniformly at random from a random recursive tree on n− 1 vertices. Such trees have been studied before (see [11]) as models of boolean circuits. More recently, modifications of such models [2], have been used to model for the web and other “power-law” networks. A smallest dominating set in a tree can be found in linear time using the algorithm of Cockayne, Goodman and Hedetniemi [4]. We prove that there exists a constant d ' 0.3745... such that the size of a smallest dominating set in a random recursive tree on n vertices is dn+o(n) with probability approaching one as n tends to infinity. The result is obtained by analysing the algorithm of Cockayne, Goodman and Hedetniemi. ∗This research was supported by EPSRC grant EP/DO59372/1. The first author was also supported in this work by a LaBRI ENSIERB visiting research fellowship.	algorithm;boolean circuit;dominating set;expectation propagation;recursion;time complexity;vertex (geometry);vertex (graph theory)	Colin S Cooper;Michele Zito	2009	Discrete Applied Mathematics	10.1016/j.dam.2008.06.024	probability distribution;time complexity;boolean circuit;probability theory;vertex;power law;combinatorics;letter;dominating set;information processing;power;probability;mathematics;tree;recursive set;algorithm;emergence	Theory	23.08854849740372	31.373243985980558	195989
777426212c8e00dadce7b391f0d3a30c4cf9238b	static and dynamic path selection on expander graphs: a random walk approach (preliminary version).	multicommodity flow;pseudorandomness;poisson process;path selection;pac learning;multiple instance learning;virtual circuit;derandomization;random graphs;machine learning;community networks;random walk;approximations of distributions;expander graph;ramsey graphs;explicit constructions;sample complexity;rectangles	This paper addresses the problem of virtual circuit switching in bounded degree expander graphs. We study the static and dynamic versions of this problem. Our solutions are baaed on the rapidly mixing properties of random walks on expander graphs. In the static version of the problem an algorithm is required to route a path between each of K pairs of vertices so that no edge is used by more than g paths. A natural approach to this problem is through a multicommodity flow reduction. However, we show that the random walk approach leads to significantly stronger results than those recently obtained by Leighton and Rao [10] using the multi-commodity flow setup. In the dynamic version of the problem connection requests are continuously injected into the network, Once a connection is established it utilizes a path (a virtual circuit) for a certain time until the communication terminates and the pat h is deleted. Again each edge in the network should not be used by more than g paths at once. The dynamic version is a better model for the practical use of communication networks. Our random walk approach gives a simple and fully distributed solution for this problem. We show that if the injection to the network and the duration of connections are both controlled by Poisson processes then our algorithm achieves ●Digital Systems Research Center, 130 Lytton Ave, Palo Alto, CA 943o1 t Department of Mathematics, Carnegie-Mellon University. A portion of this work was done while the author was visiting Digital SRC. Supported in part by NSF grants CCR-9225008 and CCR9530974. t IBM Almaden Research Center, San Jose, CA 95120, and Department of Applied Mathematics, Weizmann Institute of Science, Rehovot, Israel. Pumission 10nmkc digllalflmd topics ofnll or pflll ot’thismxtcrinlfhr pemmal or clmsnmm usc is gr:mtcd ivilhoul k pro!fidcd 111:11 the copies arc not mode or distrihltcd t’orprolit or conmwrciu I adwmtagc, Ihe copyrighl notice. Ihc Iitle ol”thc puldicoliol) :In(i ils tialc appcw. and nolicc is gi\&ll that LX)pyrigh(i, b) pNllli\,iOll (>~tht :’!Vhi. ill~. “[’0LOp\ Othtr\! ist. to republish. 10 post on wrvers or 10 rcdis!r}l>tjlc IO 1ists. requires speci Iic penniwion andfor kc ,$770( ‘ 97 1:1 1’,,so. ‘1’c\m 1 ‘s:\ Copyrighl 11)97 ,-\Ckl0-XtJ7’)I-XXX-(V97,05 .,$3 5[) a steady state utilization of the network which is similar to the utilization achieved in the static case situation.	1:1 pixel mapping;algorithm;circuit switching;emoticon;ibm notes;ibm research - almaden;multi-commodity flow problem;palo;reduction (complexity);steady state;telecommunications network;virtual circuit	Andrei Z. Broder;Alan M. Frieze;Eli Upfal	1997		10.1145/258533.258646	random graph;mathematical optimization;combinatorics;discrete mathematics;poisson process;expander graph;multi-commodity flow problem;machine learning;mathematics;virtual circuit;pseudorandomness;random walk;probably approximately correct learning;algorithm;statistics	Theory	19.150121782664474	30.8911181422431	196132
8b6cf49cb8ba2dade2223aaba3f1993f4a9d94da	a note on transitive orientations with maximum sets of sources and sinks	graphe non oriente;graphe transitif;non directed graph;descomposicion grafo;time complexity;nombre source puits;temps lineaire;decomposition modulaire;equation recurrence;orientation;tiempo lineal;source sets;comparability graphs;connected graph;complexite temps;grafo no orientado;modular decomposition;linear time;vertex graph;grafo transitivo;recurrence equation;orientacion;algorithms;transitive orientation;complejidad tiempo;transitive graph;artigo de periodico;graphe connexe;vertice grafo;sommet graphe;graph decomposition;ecuacion recurrencia;decomposition graphe;grafo conexo	Given a transitive orientation ~ G of a comparability graph G, a vertex of G is a source (sink) if it has indegree (outdegree) zero in ~ G, respectively. A source set of G is a subset of vertices formed by sources of some transitive orientation of G. A pair of subsets S; T V (G) is a source-sink pair of G when the vertices of S and T are sources and sinks, respectively, of some transitive orientation of G. We describe algorithms for computing the cardinality of a maximum source set and of a maximum source-sink pair of a comparability graph. In addition, we describe algorithms for nding the corresponding transitive orientations. The algorithms are applications of modular decomposition and are all of linear-time complexity.	algorithm;degree (graph theory);directed graph;modular decomposition;time complexity;transitive reduction;vertex (geometry)	Celina M. H. de Figueiredo;John G. Gimbel;Célia Picinin de Mello;Jayme Luiz Szwarcfiter	2002	Discrete Applied Mathematics	10.1016/S0166-218X(01)00283-9	transitive reduction;time complexity;combinatorics;discrete mathematics;topology;mathematics;transitive relation;transitive closure;algorithm	Theory	24.341354280804303	30.769617212380307	196358
ef068890234fa71276197314dff017201836cea0	a note on maximum independent sets in rectangle intersection graphs	conjunto independiente;dynamic programming;graph theory;methode diviser pour regner;altura;optimisation;programacion dinamica;problem;teoria grafo;nombre entier;approximate algorithm;maximo;optimizacion;approximation numerique;independent set;geometrie algorithmique;approximation algorithm;computational geometry;metodo dividir para vencer;maximum;dynamic program;time;result;probleme;interseccion;theorie graphe;aproximacion numerica;1998;algorithme;unit;grafo;algorithm;integer;hauteur;ensemble independant;temps;2001;graphe intersection;entero;theory;graph;graphe;68r10;divide and conquer method;teoria;programmation dynamique;algoritmo aproximacion;resultado;geometria computacional;optimization;resultat;numerical approximation;problema;intersection graphs;algorithme approximation;intersection;intersection graph;constante;height;theorie;unite;unidad;tiempo;algoritmo;maximum independent set;constant	Finding the maximum independent set in the intersection graph of n axis-parallel rectangles is NP-hard. We re-examine two known approximation results for this problem. For the case of rectangles of unit height, Agarwal, van Kreveld, and Suri (1997) gave a (1+1/k)-factor algorithm with an O(n log n + n) time bound for any integer constant k ≥ 1; we describe a similar algorithm running in only O(n log n+ n∆) time, where ∆ ≤ n denotes the maximum number of rectangles a point can be in. For the general case, Berman, DasGupta, Muthukrishnan, and Ramaswami (2001) gave a dlogk ne-factor algorithm with an O(n ) time bound for any integer constant k ≥ 2; we describe similar algorithms running in O(n log n + n∆) and n log k) time.	algorithm;approximation;independent set (graph theory);ne (complexity);optic axis of a crystal	Timothy M. Chan	2004	Inf. Process. Lett.	10.1016/j.ipl.2003.09.019	intersection;split graph;combinatorics;independent set;computational geometry;graph theory;mathematics;geometry;maximal independent set;circle graph;intersection;rectangle method;intersection number;approximation algorithm;intersection graph;algorithm	Theory	19.38856153790364	26.556704933815087	196689
f58dfbeea2ca5e46d415c33fe8b31ad7ed4ac6e5	routing sets in the integer lattice	hub number;05c70;optimisation;connected dominating set;combinatorics;subgrafo;optimizacion;routing;combinatoria;coaccion;combinatoire;red aritmetica;contrainte;routage;maillage;routing sets;grid;dominating set;graph connectivity;enrejado;constraint;connected domination;celdarada;treillis;sous graphe;rejilla;informatique theorique;68r10;integer lattice;conectividad grafo;grille;grid pattern;conjunto dominando;optimization;06bxx;subgraph;reseau arithmetique;connectivite graphe;grid graphs;ensemble dominant;computer theory;lattice;informatica teorica;enrutamiento	A set of vertices S in a graph G is a routing set if it ensures some kind of connectivity between all pairs of vertices outside of S. Additional constraints may apply; a connected dominating set, for instance, is a special case of a routing set. We determine the size of a minimum routing set in subgraphs of the integer lattice, as well as (asymptotically) for the lattice itself.	routing	Peter Hamburger;Robert C. Vandell;Matt Walsh	2007	Discrete Applied Mathematics	10.1016/j.dam.2007.02.007	routing;combinatorics;discrete mathematics;topology;graph center;dominating set;integer lattice;connectivity;destination-sequenced distance vector routing;lattice;connected dominating set;mathematics;index set;constraint;grid;infinite set	Crypto	22.716981841541994	29.67854490402115	197105
9ab2edef97315fdfefaa4d2fa849db40ed634f2d	broadcast routing with minimum wavelength conversion in wdm optical networks	wdm;optimal solution;multiplexage longueur onde;reseau communication;reseau optique;approximate algorithm;algorithme glouton;approximation algorithm;wdm optical network;radiodifusion;dynamic routing;routage reseau;optical networks;network routing;broadcast routing;telecomunicacion optica;telecommunication optique;optical arrays;diffusion donnee;algoritmo aproximacion;difusion dato;broadcast conversation;optical telecommunication;greedy algorithm;algoritmo gloton;data broadcast;broadcasting;algorithme approximation;performance ratio;red de comunicacion;wavelength conversion;communication network;radiodiffusion;multiplaje longitud onda;wavelength division multiplexing	We consider dynamic routing of broadcast connections in WDM optical networks. Given the current network state, we want to find a minimum set of network nodes S such that a broadcast routing using only the nodes in S as wavelength conversion nodes can be found. This ensures that the average conversion delay from the source to all destinations is minimized. We refer to the problem as Broadcast Conversion Node Selection (BCNS) problem. We prove that BCNS has no polynomial-time approximation with performance ratio ρ ln n for ρ < 1 unless NP ⊂ DTIME(nO(log log n)) where n is the number of vertices in the input graph. We present a greedy approximation algorithm for BCNS that achieves approximation ratio 2 + ln n. Simulation results show that the algorithm performs very well in practice, obtaining optimal solutions in most of the cases.	approximation algorithm;greedy algorithm;polynomial;procedural generation;routing;simulation;time complexity;wavelength-division multiplexing	Lu Ruan;Weili Wu	2005	J. Comb. Optim.	10.1007/s10878-005-6859-1	telecommunications;computer science;mathematics;approximation algorithm;wavelength-division multiplexing;computer network	Theory	20.56452523712671	27.895138158243075	197148
ac3335cf90e6cb5c787378f6df456be952205af6	finding separator cuts in planar graphs within twice the optimal	graph theory;algorithme dot box;teoria grafo;approximation algorithms;dotbox algorithm;aproximacion;problema np duro;algorithme deterministe;theorie graphe;approximation;algorithme;separation;algorithm;np hard problem;separacion;deterministic algorithm;probleme np difficile;transfer function;90c27;simple cycle;funcion traspaso;graphe planaire;05c85;vlsi;68q25;fonction transfert;cycle simple;68q35;grafo planario;planar graphs;planar graph;separators;algoritmo	A factor 2 approximation algorithm for the problem of finding a minimum-cost b-balanced cut in planar graphs is presented, for $b \leq {1 \over 3}$. We assume that the vertex weights are given in unary; for the case of binary vertex weights, a pseudoapproximation algorithm is presented. This problem is of considerable practical significance, especially in VLSI design.#R##N#The natural algorithm for this problem accumulates sparsest cuts iteratively. One of our main ideas is to give a definition of sparsity, called net-sparsity, that reflects precisely the cost of the cuts accumulated by this algorithm. However, this definition is too precise: we believe it is NP-hard to compute a minimum--net-sparsity cut, even in planar graphs. The rest of our machinery is built to work with this definition and still make it computationally feasible. Toward this end, we use several ideas from the works of Rao [ Proceedings, 28th Annual IEEE Symposium on Foundations of Computer Science, 1987, pp. 225--237; Proceedings, 24th Annual ACM Symposium on Theory of Computing, 1992, pp. 229--240] and Park and Phillips [ Proceedings, 25th Annual ACM Symposium on Theory of Computing, 1993, pp. 766--775].		Naveen Garg;Huzur Saran;Vijay V. Vazirani	1999	SIAM J. Comput.	10.1137/S0097539794271692	mathematical optimization;combinatorics;computer science;graph theory;mathematics;approximation algorithm;algorithm;planar graph;algebra	Theory	22.398032011546466	25.391214448386535	197283
efd4d7107bc4b1e9a26afbc47f02be4ae374c794	on batcher's merge sorts as parallel sorting algorithms	algoritmo paralelo;parallel algorithm;parallel sorting;sorting;fusion informatique;tria;algorithme parallele;upper bound;estructura datos;triage;merging;structure donnee;algoritmo optimo;algorithme optimal;optimal algorithm;data structure;lower bound	In this paper we examine the average running times of Batcher's bitonic merge and Batcher's odd-even merge when they are used as parallel merging algorithms. It has been shown previously that the running time of odd-even merge can be upper bounded by a function of the maximal rank diierence for elements in the two input sequences. Here we give an almost matching lower bound for odd-even merge as well as a similar upper bound for (a special version of) bitonic merge. From this follows that the average running time of odd-even merge (bitonic merge) is ((n=p)(1+log(1+p 2 =n))) (O((n=p)(1+log(1+p 2 =n))), resp.) where n is the size of the input and p is the number of processors used. Using these results we then show that the average running times of odd-even merge sort and bitonic merge sort are O((n=p)(logn + (log(1 + p 2 =n)) 2)), that is, the two algorithms are optimal on the average if n p 2 =2 p log p. The derived bounds do not allow to compare the two sorting algorithms directly, thus we also present experimental results, obtained by a simulation program, for various sizes of input and numbers of processors.	batcher odd–even mergesort;bitonic sorter;central processing unit;ken batcher;maximal independent set;maximal set;merge sort;simulation;sorting algorithm;time complexity	Christine Rüb	1998		10.1007/BFb0028577	combinatorics;parallel computing;data structure;computer science;mathematics;upper and lower bounds;programming language;algorithm	Theory	17.77430200240816	28.44351819588522	197597
9d13922e6a89d9e904024926b32fe8cdada116d5	directed graph pattern matching and topological embedding	acoplamiento grafo;complejidad espacio;time complexity;grafo topologico;efficient algorithm;plongement topologique;natural extension;graph matching;algorithme;topological embedding;couplage graphe;complexite temps;pattern matching;directed graph;graphe oriente;topological graph;space complexity;algorithms;grafo orientado;concordance forme;complexite espace;complejidad tiempo;graphe topologique	Pattern matching in directed graphs is a natural extension of pattern matching in trees and has many applications to different areas. In this paper, we study several pattern matching problems in ordered labeled directed graphs. For the rooted directed graph pattern matching problem, we present an efficient algorithm which, Ž < < < < given a pattern graph P and a target graph T , runs in time and space O E V P T < <. < < < < < <4 q E . It is faster than the best known method by a factor of min E , E V . T T P T This algorithm can also solve the directed graph pattern matching problem without increasing time or space complexity. Our solution to this problem outperforms the best existing method by Katzenelson, Pinter and Schenfeld by a factor of < < < < < < < < < <4 min V E , V E V . We also present an algorithm for the directed graph P T P P T Ž < < < < < <. topological embedding problem which runs in time O V E q E and space P T P Ž < < < < < < < <. O V V q E q E . To our knowledge, this algorithm is the first one for this P T P T problem. Q 1997 Academic Press	algorithm;dspace;directed graph;dynamic programming;maxima and minima;max–min inequality;pattern matching;preprocessor;rooted graph	James Jianghai Fu	1997	J. Algorithms	10.1006/jagm.1996.0818	time complexity;combinatorics;discrete mathematics;topological graph;directed graph;topology;computer science;3-dimensional matching;pattern matching;mathematics;dspace;algorithm;matching	Theory	21.01094066239187	25.49093592850067	198131
2088a582950ca8cc166a231b1af509a8129cd6bb	graph covers using t-colourable vertex sets	graph theory;recouvrement graphe;cubierta grafo;perfection boite;coloracion grafo;teoria grafo;graphe parfait;perfect graphs;perfect graph;cellular neural nets;theorie graphe;frequency assignment;reseau neuronal cellulaire;graph covering;coloration graphe;cellular network;clique number;weighted graph;article;box perfection;assignation frequence;graph colouring	A t-chrome cover is a cover of a weighted graph by vertex sets that induce t-colourable subgraphs. We investigate the problem of determining the minimal number of sets needed for such a cover, and give conditions under which this number is directly derived from the clique number and the maximum weight of the graph. The problem of minimal t-chrome covers is relevant to frequency assignment in cellular networks. c © 2003 Elsevier B.V. All rights reserved.	amax;assignment problem;clique (graph theory);covering problems;induced subgraph;linear programming relaxation	Sylvain Gravier;Jeannette C. M. Janssen;Kyriakos Kilakos;Sulamita Klein	2004	Discrete Mathematics	10.1016/S0012-365X(03)00246-2	loop;covering graph;cellular network;combinatorics;clique graph;discrete mathematics;independent set;graph bandwidth;feedback vertex set;bipartite graph;vertex cover;perfect graph;degree;regular graph;graph theory;simplex graph;edge cover;cycle graph;vertex;mathematics;voltage graph;windmill graph;intersection number;line graph;neighbourhood;circulant graph	Theory	24.089030322712464	29.398907060476173	198491
2cec28447324a59dbec6909f8f7e63f8e6162d39	parallel algorithms for maximal independent set and maximal matching		We present a derandomization process which leads to efficient parallel algorithms for the maximal independent set and maximal matching problems. The derandomization of the general pairs PROFIT/COST problem depends on the derandomization of the bit pairs PROFIT/COST problem which follows Luby’s approach of using an O(n) sized sample space. This simplifies the approach presented in [16].	independent set (graph theory);matching (graph theory);maximal independent set;maximal set;michael luby;parallel algorithm;randomized algorithm	Yijie Han	2007		10.1201/9781420011296.ch25	sample space;theoretical computer science;mathematical optimization;matching (graph theory);computer science;parallel algorithm;maximal independent set	Theory	18.231213823263154	28.331159230456834	199562
