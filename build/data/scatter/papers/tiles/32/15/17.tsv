id	title	keywords	abstract	entities	authors	year	journal	doi	fos	area	x	y	ix
49a22760860eb2c6b3c4c645f795eb3a66ff6f72	the uniformity principle on traced monoidal categories	domain theory;monoidal category	The uniformity principle for traced monoidal categories has been introduced as a natural generalization of the uniformity principle (Plotkin’s principle) for fixpoint operators in domain theory. We show that this notion can be used for constructing new traced monoidal categories from known ones. Some classical examples like the Scott induction principle are shown to be instances of these constructions. We also characterize some specific cases of our constructions as suitable enriched limits.	circuit complexity;domain theory;fixed point (mathematics);inductive reasoning;plotkin bound	Masahito Hasegawa	2002	Electr. Notes Theor. Comput. Sci.	10.1016/S1571-0661(04)80563-2	symmetric monoidal category;discrete mathematics;topology;closed monoidal category;computer science;domain theory;mathematics;enriched category;programming language	Logic	-9.137262227532517	14.282308762372121	131954
a0bd3213f2dfebdb28486a04a6b3a533d6ac951c	arity vs. alternation in second order logic	second order;expressive power;first order	We investigate the expressive power of second-order logic over finite structures, when two limitations are imposed. Let SAA@, n)(AA(k, n)) be the set of second-order formulas such that the arity of the relation variables is bounded by k and the number of alternations of (both first-order and) second-order quantification is bounded by n. We show that this imposes a proper hierarchy on second-order logic, i.e. for every k, n there are problems not definable in AA(k, n) but definable in AA(k + cl, n + d,) for some cl, d,.		Johann A. Makowsky;Y. B. Pnueli	1994		10.1007/3-540-58140-5_24	combinatorics;discrete mathematics;computer science;first-order logic;mathematics;expressive power;second-order logic;algorithm	Logic	-8.053685847438409	16.49264598775615	132240
4c55b04e7122ea52505046d3d81a012f41958811	hod in natural models of ad+	03e15;descriptive inner model theory;03e45;hod mice;03e55;determinacy;03e60;hod	The goal of this paper is to compute the full HOD of models of AD of the form L(℘(R)) below “ADR + Θ is regular”. As part of this computation, we give a computation of HOD|Θ left open in [3] for Θ a successor in the Solovay sequence. Our work, when combined with [3], shows that in AD models of the form L(℘(R)) below “ADR + Θ is regular”, HOD satisfies GCH.	computation	Nam Trang	2014	Ann. Pure Appl. Logic	10.1016/j.apal.2014.04.006	topology;calculus;mathematics;determinacy;algorithm	Logic	-5.765642344342295	15.926536088945483	132655
a5312cceb6f20dafa2de0984f129375128700ecf	partial regularization of first-order resolution proofs		Resolution and superposition are common techniques which have seen widespread use with propositional and first-order logic in modern theorem provers. In these cases, resolution proof production is a key feature of such tools; however, the proofs that they produce are not necessarily as concise as possible. For propositional resolution proofs, there are a wide variety of proof compression techniques. There are fewer techniques for compressing first-order resolution proofs generated by automated theorem provers. This paper describes an approach to compressing first-order logic proofs based on lifting proof compression ideas used in propositional logic to first-order logic. One method for propositional proof compression is partial regularization, which removes an inference η when it is redundant in the sense that its pivot literal already occurs as the pivot of another inference in every path from η to the root of the proof. This paper describes the generalization of the partial-regularization algorithm RecyclePivotsWith Intersection [10] from propositional logic to first-order logic. The generalized algorithm performs partial regularization of resolution proofs containing resolution and factoring inferences with unification. An empirical evaluation of the generalized algorithm and its combinations with the previously lifted GreedyLinearFirstOrderLowerUnits algorithm [12] is also presented.	algorithm;automated theorem proving;data compression;exploit (computer security);first-order logic;first-order predicate;first-order reduction;image resolution;integer factorization;item unique identification;lambda lifting;literal (mathematical logic);procedural generation;propositional calculus;quantum superposition;resolution (logic);spass;unification (computer science)	Jan Gorzny;Ezequiel Postan;Bruno Woltzenlogel Paleo	2018	CoRR		discrete mathematics;mathematics;algorithm;proof theory;superposition principle;mathematical proof;propositional calculus;inference;regularization (mathematics);unification	Logic	-11.113510490481826	15.66641092523777	132898
ea98e47e1b5904b8a7099f40e6f9570b4341193b	a final coalgebra theorem	final coalgebra theorem	"""We prove that every set-based functor on the category of classes has a final coalgebra. This result strengthens the final coalgebra theorem announced in the book """"Non-well-founded Sets"""", by the first author. 1 I n t r o d u c t i o n The theorem of this note is an improvement of a result that was first stated, but not proved in its full generality, in [NWFS]. The original inspiration for the result came from [SCCS]. There a language of infinitaxy expressions called, agents, is made into a labelled transition system via an operational semantics. Different agents can exhibit the same operational behaviour. A notion of bisimulation relation between agents is used to define the maximal bisimulation equivalence relation which captures formally the intuitive behavioural equivalence relation. The quotient of the class of agents with respect to this equivalence relation can itself be made into a labelled transition system which can be viewed as a mathematical interpretation of the language of agents. If the labels for a labelled transition system axe taken from a set Act then the system may be viewed as a co~lgebra for the functor pow(Act x ) . Here pow is the natural covaxiant power class functor which associates with each class X the class powX of its subsets. It turns out that the quotient of the coalgebra of agents by the maximal bisimulation relation can be chaxacterised up to isomorphism as a final coalgebra for the funct~r. So this basic construction of Milner's is providing a proof of the existence of a final coalgebra for the functor. The final coalgebra theorem is a general result about the existence of final coalgebras for a very general collection of functors on the category of classes. The functor pow itself is essentially a special case of pow(Act x ) where Act is a singleton set. The final coalgebras for paw give the full models for Z F C + AFA, a version of axiomatic set theory in which the Foundation Axiom, FA, is replaced by a dual Anti-Foundation Axiom, AFA, which expresses the existence of many non-well-founded sets. The notion of a final coalgebra for a functor can be used to chaxacterise up to isomorphism many other interesting mathematical structures. In this respect it can play the same kind of role as the dual notion of an initial algebra for a functor. For example associated with each single sorted signature, ~/, is a functor, Fa~ on the category of classes whose initial algebras are the algebras isomorphic to the algebra of terms of the signature. Terms can be viewed as well-founded trees and if the well-foundedness restriction is dropped from the trees then the resulting algebra of possibly non-well-founded trees is essentially a final coalgebra for Fn. In this note we are not concerned to explore such instances of the final coalgebra theorem but rather give a proof of the result itself. The reader may wonder why the category of classes is being used here rather than the more familiax category of sets. The reader may even be concerned about the foundational correctness of the use of such a superlarge category. The point is that the powerset functor on the category of sets cannot have a final eoalgebra for caxdinality reasons. And it is functors involving pow that"""	alternating finite automaton;bisimulation;correctness (computer science);initial algebra;mv-algebra;mathematical structure;maximal set;netware file system;operational semantics;set theory;source code control system;transition system;turing completeness;whole earth 'lectronic link	Peter Aczel;Nax Paul Mendler	1989		10.1007/BFb0018361	functor;equivalence relation;coalgebra;topology;mathematics	Logic	-5.750781401919682	15.182062920136003	132964
0634d8ebde9b6e2e67cdd33c608b57be60a15261	finite satisfiability for guarded fixpoint logic	finite satisfiability;guarded fragment;formal methods;satisfiability;logic in computer science;guarded fixpoint logic	The finite satisfiability problem for guarded fixpoint logic is decidable and complete for 2ExpTime (resp. ExpTime for formulas of bounded width).	2-exptime;boolean satisfiability problem;exptime;first-order logic;fixed point (mathematics)	Vince Bárány;Mikolaj Bojanczyk	2012	Inf. Process. Lett.	10.1016/j.ipl.2012.02.005	modal μ-calculus;discrete mathematics;formal methods;computer science;mathematics;algorithm;satisfiability	Logic	-9.032074003393669	17.906986220221427	133436
ed48a731e39d847962de0b236792da2ff444fa9a	a remark on the equational calculus for many-sorted algebras with possibly empty carrier sets				Hartmut Ehrig;Jacques Loeckx;Bernd Mahr	1986	Bulletin of the EATCS			Logic	-11.25887408779834	13.19191279045726	133442
208c91e5a20db4702451890d91e435188f208b65	lifting of l-narrowing derivations	satisfiability	If conditional rewrite-rules are restricted to the form P =⇒ f(x1, . . . , xn)→ t where P is a finite set of equations, f is any function symbol, x1, . . . , xn are variables, and t is any term then the premise P contains in general variables which do not occur in the list x1, . . . , xn. The rule with premise P can be applied if P is satisfiable. Therefore, we need methods to solve P and narrowing must be combined with rewriting. But, narrowing becomes a special case, called L-narrowing, closely related to lazy-narrowing. Two lifting lemmas are shown which characterize the relationship of L-narrowing derivations if the goals are modified by substitutions. From these lifting lemmas, soundness and completeness results can be concluded.	lambda lifting;lazy evaluation;lifting scheme;rewrite (programming);rewriting	Peter Bachmann	1997	Computers and Artificial Intelligence		discrete mathematics;completeness (statistics);premise;satisfiability;derivation;soundness;special case;finite set;mathematics;rewriting	AI	-10.537259340861482	16.843102327051877	133454
0b247977b929d8bba2a3135a65b0d5b1467d3137	intended models and the löwenheim-skolem theorem				Virginia Klenk	1976	J. Philosophical Logic	10.1007/BF02109439	theorem;no-go theorem;fundamental theorem;compactness theorem	Logic	-11.60230087293465	11.614821043661877	134185
44e7c8526d9ecd06b4d9de223e77b6866547dcd5	a fundamental effect in computations on real numbers		Abstract   For several elementary constructions which often occur in computations on real numbers we prove that they possess unavoidable intensionalities. Our examples give sharp bounds for constructive extensional choices and Skolem functors in theories of order ⩾2.		Horst Luckhardt	1977	Theor. Comput. Sci.	10.1016/0304-3975(77)90048-2	pure mathematics;mathematics;algorithm	Logic	-7.317829399020408	12.776539360276118	134233
677b20cd8fbc7c783134df69230b822c8a64d531	towards a typed geometry of interaction	computacion informatica;multiplicative linear logic;vector space;geometry of interaction;ciencias basicas y experimentales;matematicas;monoidal category;grupo a;linear logic	We introduce a typed version of Girard’s Geometry of Interaction, called Multiobject GoI (MGoI) semantics. We give an MGoI interpretation for multiplicative linear logic (MLL) without units which applies to new kinds of models, including finite dimensional vector spaces. For MGoI (i) we develop a version of partial traces and trace ideals (related to previous work of Abramsky, Blute, and Panangaden); (ii) we do not require the existence of a reflexive object for our interpretation (the original GoI 1 and 2 were untyped and hence involved a bureaucracy of domain equation isomorphisms); (iii) we introduce an abstract notion of orthogonality (related to work of Hyland and Schalk) and use this to develop a version of Girard’s theory of types, datum and algorithms in our setting, (iv) we prove appropriate Soundness and Completeness Theorems for our interpretations in partially traced categories with orthogonality; (v) we end with an application to completeness of (the original) untyped GoI in a unique decomposition category.	algorithm;bureaucracy;emoticon;geodetic datum;geometry of interaction;lawrence a. hyland;linear logic;mechwarrior: living legends;tracing (software);type theory	Esfandiar Haghverdi;Philip J. Scott	2010	Mathematical Structures in Computer Science	10.1017/S096012951000006X	linear logic;discrete mathematics;vector space;geometry of interaction;computer science;mathematics;programming language;algorithm	Logic	-9.082177055707067	13.152220053484584	135213
a10ece0a87467a1d2e48e7ee1f5e3cc10faa901f	sufficient conditions for temporal logic specifications in hybrid dynamical systems		In this paper, we introduce operators, semantics, and conditions that, when possible, are solution-independent to guarantee basic temporal logic specifications for hybrid dynamical systems. Employing sufficient conditions for forward invariance and finite time attractivity of sets for such systems, we derive such sufficient conditions for the satisfaction of formulas involving temporal operators and atomic propositions. Furthermore, we present how to certify formulas that have more than one operator. Academic examples illustrate the results throughout the paper.	atomic sentence;dynamical system;hybrid system;temporal logic	Hyejin Han;Ricardo G. Sanfelice	2018		10.1016/j.ifacol.2018.08.017	discrete mathematics;dynamical systems theory;semantics;invariant (physics);operator (computer programming);mathematics;atomic sentence;temporal logic	AI	-11.351652202796389	15.711970048508936	135215
7b43ea29b0c5c1bcd9ea8e30c2610283e85b2e05	finite frames for k4.3 x s5 are decidable		If a modal logic L is finitely axiomatisable, then it is of course decidable whether a finite frame is a frame for L: one just has to check the finitely many axioms in it. If L is not finitely axiomatisable, then this might not be the case. For example, it is shown in [7] that the finite frame problem is undecidable for every L between the product logics K ×K ×K and S5 × S5 × S5. Here we show that the finite frame problem for the modal product logic K4.3× S5 is decidable. K4.3× S5 is outside the scope of both the finite axiomatisation results of [4], and the non-finite axiomatisability results of [11]. So it is not known whether K4.3× S5 is finitely axiomatisable. Here we also discuss whether our results bring us any closer to either proving non-finite axiomatisability of K4.3×S5, or finding an explicit, possibly infinite, axiomatisation of it.	axiomatic system;frame problem;modal logic	Ágnes Kurucz;Sérgio Marcelino	2012			modal logic;discrete mathematics;algorithm;axiom;decidability;mathematics	Logic	-10.295699508226019	14.84451394803017	135420
e1decd71f7ca2f5b848abff3175e9ec8ba01180a	skolemization in intermediate logics with the finite model property		An alternative Skolemization method, which removes strong quantifiers from formulas, is presented that is sound and complete with respect to intermediate predicate logics with the finite model property. For logics without constant domains the method makes use of an existence predicate, while for logics with constant domains no additional predicate is necessary. In both cases an analogue of Hebrand’s theorem is obtained and it is proved that the one-variable fragment of a logic with the finite model property is decidable once the propositional fragment of the logic is. It is also shown that universal constant domain logics with the finite model property have interpolation once their propositional fragment has. For logics without constant domains some of these results, but with far more complicated proofs, have been obtained in (Iemhoff, 2010).	finite model property;interpolation;quantifier (logic);skolem normal form;theory	Matthias Baaz;Rosalie Iemhoff	2016	Logic Journal of the IGPL	10.1093/jigpal/jzw010	monoidal t-norm logic;t-norm fuzzy logics;discrete mathematics;mathematics;algorithm	Logic	-10.446161456035968	14.379655019399866	135456
404337011fc337c019828fed6d9b4a9c8627a896	machines over the reals and non uniformity	polynomial time hierarchy;polynomial advice;non uniform complexity;real computability;real complexity class;polynomial time compatibility	We survey the research performed in the last few years on a specific topic: the power of real machines over binary inputs. This research attempts to characterize the classes of decision problems over a finite alphabet say ( 0 , l ) which can be decided by real machines working under several resource restrictions. Non-uniformity appears here in a natural way. However, since this is a technical concept which is not widely known, we summarize in Section 2 some of the intuitive notions, as well as a few basic theorems related to it. In Section 3 we do this for the subject of real machines and then, in Section 4 we present the state of the art of the surveyed topic. We devote Section 1 to introduce the main concepts of complexity theory. Proofs in this article are quite sketchy and are included more to convey intuitive ideas than to completely prove the claimed statements. Bibliographical references to the original literature are supplied for the latter purpose. Mathematics Subject Classification: 03D15, 68815, 68Q20, 6SQ25.	circuit complexity;computational complexity theory;decision problem;mathematics subject classification	Felipe Cucker	1997	Math. Log. Q.	10.1002/malq.19970430202	mathematical analysis;discrete mathematics;topology;computer science;mathematics;programming language;algorithm;algebra	Theory	-5.081504080854975	12.060551035672225	135459
54e9725224371a19b640dd76905109a5ab072216	modal languages for topology: expressivity and definability	topology;topological space;definability;expressive power;modal logic;first order;expressivity	In this paper we study the expressive power and definability for (extended) modal languages interpreted on topological spaces. We provide topological analogues of the van Benthem characterization theorem and the Goldblatt-Thomason definability theorem in terms of the well established first-order topological language Lt.	expressive power (computer science);first-order predicate;modal logic;thomason collection of civil war tracts;whole earth 'lectronic link	Balder ten Cate;David Gabelaia;Dmitry Sustretov	2009	Ann. Pure Appl. Logic	10.1016/j.apal.2008.11.001	modal logic;discrete mathematics;topology;pure mathematics;first-order logic;expressivity;mathematics;topological space;programming language;expressive power	Logic	-11.633011150395358	13.050753971260827	136074
6c47e9a96af7b2712c4bff899116efd00d02092d	computable reductions and reverse mathematics		Recent work in reverse mathematics on combinatorial principles below Ramsey’s theorem for pairs has made use of a variety of computable reductions to give a finer analysis of the relationships between these principles. We use three concrete examples to illustrate this work, survey the known results and give new negative results concerning RTk, SRT 2 ` and COH. Motivated by these examples, we introduce several variations of ADS and describe the relationships between these principles under Weihrauch and strong Weihrauch reductions.	computable function;division algorithm;reverse mathematics	Reed Solomon	2016		10.1007/978-3-319-40189-8_19		Theory	-8.209987626121288	11.496930867604219	136923
31eb19f70ca9ac694ef344b4056afaaa1af4a500	kripke models for subtheories of czf	kripke models;kripke model;intuitionistic logic;generic extensions;constructible sets;constructive set theory;model theory	In this paper a method to construct Kripke models for subtheories of constructive set theory is introduced that uses constructions from classical model theory such as constructible sets and generic extensions. Under the main construction all axioms except the collection axioms can be shown to hold in the constructed Kripke model. It is shown that by carefully choosing the classical models various instances of the collection axioms, such as exponentiation, can be forced to hold as well. The paper does not contain any deep results. It consists of first observations on the subject, and is meant to introduce some notions that could serve as a foundation for further research.	kripke semantics;set theory;theory (mathematical logic)	Rosalie Iemhoff	2010	Arch. Math. Log.	10.1007/s00153-009-0164-0	discrete mathematics;kripke structure;topology;intuitionistic logic;mathematics;kripke semantics;algorithm;constructive set theory;model theory;algebra	Logic	-8.56191062194083	12.970942637554256	137260
883260e1575547a84df4fef57ae4c1a654b0a50d	a new bound for the d0l language equivalence problem		We study the language equivalence problem for smooth and loop-free D0L systems. We show that the number of initial terms in the associated D0L sequences we have to consider to decide language equivalence depends only on the cardinality of the underlying alphabet.	turing completeness	Juha Honkala	2016	Acta Informatica	10.1007/s00236-016-0286-x	logical equivalence;combinatorics;discrete mathematics;boundary-value analysis;adequate equivalence relation;equivalence partitioning;mathematics;equivalence relation;algorithm	Theory	-5.152607058942806	18.142567312665843	137885
635db219e2914f38ace8bc82f8112da4f1e85373	the specker-blatter theorem does not hold for quaternary relations	satisfiability;monadic second order logic;binary relation;recurrence relation;first order logic	Let C be a class of relational structures. We denote by fC(n) the number of structures in C over the labeled set {0, . . . , n − 1}. For any C definable in monadic second order logic with unary and binary relation symbols only, E. Specker and C. Blatter showed that for every m ∈ N, the function fC satisfies a linear recurrence relation modulo m, and hence it is ultimately periodic modulo m. The case of ternary relation symbols, and more generally of arity k symbols for k ≥ 3, was left open. In this paper we show that for every m there is a class of structures Cm, which is definable even in first order logic with one quaternary (arity four) relation symbol, such that fCm is not ultimately periodic modulo m. This shows that the Specker-Blatter Theorem does not hold for quaternary relations, leaving only the ternary case open.	first-order logic;kochen–specker theorem;linear difference equation;modulo operation;recurrence relation;symbol (formal);unary operation	Eldar Fischer	2003	J. Comb. Theory, Ser. A	10.1016/S0097-3165(03)00075-X	arity;combinatorics;discrete mathematics;recurrence relation;first-order logic;binary relation;mathematics;monadic predicate calculus;algorithm;algebra;satisfiability	Logic	-6.622168470670127	15.149628198340134	138384
d11c6e9e9514d45d84e58407ec7d260b8e6be81d	constructing cantorian counterexamples	theorie des ensembles;logics;argument diagonal;set theory;diagonal argument;cantor g;logique	Cantor’s diagonal argument provides an indirect proof that there is no one-one function from the power set of a set A into A. This paper provides a somewhat more constructive proof of Cantor’s theorem, showing how, given a function f from the power set of A into A, one can explicitly define a counterexample to the thesis that f is one-one.		George Boolos	1997	J. Philosophical Logic	10.1023/A:1004209106100	cantor function;countable set;mathematical analysis;discrete mathematics;uncountable set;cantor's paradox;cantor's theorem;power set;mathematics;cardinality of the continuum;set theory;cantor's diagonal argument	Logic	-7.753541999289463	11.465256505766323	138843
0bfbc7b92862a7e94fd3e5165a581fe98daf43cf	k without the measurable		If the universe V of sets does not have within it very complicated canonical inner models for large cardinal hypotheses, then it has a canonical inner model K that in some sense is as large as possible. K is absolutely definable, its internal structure can be analyzed in fine-structural detail, and yet it is close to the full universe V in various ways. If 0 does not exist, then K = L. Set forcing cannot add 0 or change L, so K = K [G] = L whenever G is set-generic over V . The fine-structure theory of [6] produces a detailed picture of the first order theory of L. Jensen’s Covering Theorem ([7]) describes one of the most important ways L is close to V : any uncountable X ⊆ L has a superset Y of the same cardinality such that Y ∈ L. If 0 does exist, then L is quite far from V , and so K must be larger than L. Dodd and Jensen developed a theory of K under the weaker hypothesis that there is no proper class inner model with a measurable cardinal in [1], [2], and [3]. This hypothesis is compatible with the existence of 0, and if 0 exists, then 0 in K, and hence K is properly larger than L. Under this weaker anti-large-cardinal hypothesis, K is again absolutely definable, admits a fine structure theory like that of L, and is close to V , in that every uncountable X ⊆ K has a superset Y of the same cardinality such that Y ∈ K. Several authors have extended the Dodd-Jensen work over the years. We shall recount some of the most relevant history in the next section. In this paper, we shall prove a theorem which represents its ultimate extension in one direction. Our discussion of the history will be clearer if we state that theorem now.	jensen's inequality;theory	Ronald Jensen;John R. Steel	2013	J. Symb. Log.			AI	-6.294276756328676	12.731998553126507	138937
5279bb1f0e7607522343fba8c4c10e099586b693	ecc, an extended calculus of constructions	computer languages;set theory formal languages formal logic;calculus mathematics computer science buildings functional programming abstract algebra computer languages inference algorithms mathematical model;mathematics;abstract algebra;realizability higher order calculus ecc extended calculus of constructions strong sum types fully cumulative type hierarchy abstract mathematics strongly normalizing proof theoretic properties omega set;thesis or dissertation;higher order calculus ecc;extended calculus of constructions;kb thesis scanning project 2015;formal languages;set theory;proof theoretic properties;functional programming;strong sum types;higher order;ω set;calculus;formal logic;mathematical model;realizability;fully cumulative type hierarchy;inference algorithms;computer science;strongly normalizing;calculus of constructions;abstract mathematics;buildings	We present a higher-order calculus ECC which can be seen as an extension of the calculus of constructions CH88] by adding strong sum types and a fully cumulative type hierarchy. ECC turns out to be rather expressive so that mathematical theories can be abstractly described and abstract mathematics may be adequately formalized. It is shown that ECC is strongly normalizing and has other nice proof-theoretic properties. An !?Set (realizability) model is described to show how the essential properties of the calculus can be captured set-theoretically.	calculus of constructions;class hierarchy;ecc memory;essence;normalization property (abstract rewriting);theory	Zhaohui Luo	1989		10.1109/LICS.1989.39193	fluent calculus;calculus of constructions;process calculus;formal language;discrete mathematics;higher-order logic;abstract algebra;pure type system;computer science;pure mathematics;mathematical model;mathematics;programming language;functional programming;lambda cube;logic;algorithm;set theory	Logic	-11.210502836219652	17.75399207575615	139128
1d029e10d24cd18755e14508ec3fd2703e282e0a	interpolation theorems for resolution in lower predicate calculus	computer program;theorem proving;inference rule;first order;automatic theorem proving	The resolution principle is an inference rule for quantifier-free first-order predicate calculus. In the past, the completeness theorems for resolution and its refinements have been stated and proved for finite sets of clauses. It is easy (by Gödel's Compactness Theorem) and of practical interest to extend them to countable sets, thus allowing schemata representing denumerably many axioms. In addition, some theorems similar to Craig's Interpolation Theorem are proved for deduction by resolution. In propositional calculus, the theorem proved is stronger, whereas in predicate calculus the theorems proved are in some ways stronger and in some ways weaker than Craig's theorem. These interpolation theorems suggest procedures which could be embodied in computer programs for automatic proof finding and consequence finding.	computer program;craig's theorem;first-order logic;first-order predicate;gödel;interpolation;natural deduction;propositional calculus;quantifier (logic);resolution (logic)	James R. Slagle	1970	J. ACM	10.1145/321592.321604	combinatorics;discrete mathematics;theorem;cut-elimination theorem;computer science;first-order logic;fundamental theorem;mathematics;automated theorem proving;compactness theorem;programming language;algorithm;rule of inference;algebra	Theory	-11.6094459937159	14.67351774210461	139274
01ad8e140b7a53f0a488998b9cb949ca7c36c188	on the asymptotic nullstellensatz and polynomial calculus proof complexity	polynomial calculus proof complexity;complexity theory;predicate logic;proof complexity;asymptotic nullstellensatz proof complexity;asymptotic behavior;polynomials;asymptotic complexity;theorem proving;nullstellensatz proof system;algebraic proof complexity;first order;polynomials calculus computer science logic testing character generation knowledge representation;algebraic proof complexity propositional proof complexity predicate logic;computational complexity;degree complexity asymptotic nullstellensatz proof complexity polynomial calculus proof complexity asymptotic complexity uniformly generated prepositional tautologies first order logic nullstellensatz proof system finite characteristics prepositional translation finite model;calculus;uniformly generated prepositional tautologies;prepositional translation;formal logic;mathematical model;propositional proof complexity;computer science;degree complexity;finite model;first order logic;theorem proving computational complexity formal logic;polynomial calculus;finite characteristics;modules abstract algebra	We show that the asymptotic complexity of uniformly generated (expressible in first-order (FO) logic) prepositional tautologies for the nullstellensatz proof system (NS) as well as for polynomial calculus, (PC) has four distinct types of asymptotic behavior over fields of finite characteristic. More precisely, based on some highly non-trivial work by Krajicek, we show that for each prime p there exists a function l(n) G isin Omega(log(n)) for NS and l(n) G Omega (log(log(n)) for PC, such that the prepositional translation of any FO formula (that fails in all finite models), has degree proof complexity over fields of characteristic p, that behave in 4 mutually distinct ways: (i) The degree complexity is bound by a constant. (ii) The degree complexity is at least l(n) for all values of n. (iii) The degree complexity is at least l(n) except in a finite number of regular subsequences of infinite size, where the degree is constant. (iv) The degree complexity fluctuates in a very particular way with the degree complexity taking different constant values on an infinite number of regular subsequences each of infinite size. We leave it as an open question whether the classification remains valid for l[n) isin nOmega(1) or even for I (n) isin Omega(n). Finally, we show that for any non-empty proper subset A sube {(i), (ii), (iii), (iv)} the decision problem of whether a given input FO formula Psi has type belonging to A - is undecidable.	computational complexity theory;decision problem;first-order predicate;hilbert's nullstellensatz;omega;polynomial;proof calculus;proof complexity;sube card;undecidable problem	Søren Riis	2008	2008 23rd Annual IEEE Symposium on Logic in Computer Science	10.1109/LICS.2008.30	combinatorics;discrete mathematics;asymptotic analysis;computer science;first-order logic;mathematics;programming language;algorithm	Theory	-6.596179381194356	15.76469057126421	139382
6e9375bf002a7109aed398af1f6a95338526df7a	coalgebras of bounded type	computacion informatica;ciencias basicas y experimentales;matematicas;grupo a	Using results of Trnková, we first show that subcoalgebras are always closed under finite intersections. Assuming that the type functor F is bounded, we obtain a concrete representation of the terminal F-coalgebra. Several equivalent characterizations of boundedness are provided.	automaton;category theory;electronic notes in theoretical computer science;petri net;set theory;ical	H. Peter Gumm;Tobias Schröder	2002	Mathematical Structures in Computer Science	10.1017/S0960129501003590	discrete mathematics;topology;mathematics;algebra	Logic	-4.840776289477722	17.93958360098772	139860
519911a783a1efb809306208112fadd60ead5452	cpos as concrete domains: lattices of abstract domains and complements			abstract interpretation	Francesco Ranzato	1999			discrete mathematics;lattice (order);mathematics	ECom	-9.32292103440955	12.892965655124465	139981
0973980f593afa4da7c6929c3862e042b76ce965	deterministic languages and non-generators	context free	"""This communication is devoted to the proof of the following results: the family of context-free non-~enerators cannot be principal with a deterministic generator.A similar result holds for the largest sub-cone of linear languages as well as of one-counter languages. We assume that the reader is familiar with the theory of families of context-free languages (see for instance [2]). Given a principal rational cone~,it is well-known that ~ contains a largest proper sub-cone. It consists in the non-generators of ~ ,that is of the languages L in~ which generate a proper sub-cone of£ .This family of non-generators of~ will be denoted ~.So,we have ~£ = {LE$1~(L) ~} ,where ~ stands for """"the cone generated by"""". Besides the special case of ~ = Rat,the family of rational languages,for which ~Rat = ~,it should be noted that there is no principal cone ~ for with the status of ~ is known with respect to principality.We have only some conjectures,among which the most important one is [4] Greibach's Conjecture: The family Nge=~Alg of the non-generators of the family of context-free languages is not principal. A lot of work has been done around this conjecture which nevertheless is still open.Along the same lines,we have to mention the [2] Berstel's Conjecture: Given two languages A and B such that ~'(A) ~q!'(B), there exists a language C such that ~(A) ~(C)~(B). If it holds,Berstel's conjecture would imply Greibach's conjecture,because it would imply that for any principal cone~ ,~ is not principal.The results that we prove here are the following:"""	cone (formal languages);context-free language;greibach normal form;l (complexity);linear grammar	Luc Boasson;Antoine Petit	1985		10.1007/BFb0023993	deterministic context-free language;deterministic pushdown automaton;deterministic context-free grammar;computer science;nested word;mathematics;cone;abstract family of languages;second-generation programming language;comparison of multi-paradigm programming languages	Theory	-5.5233170313914375	14.80507805477183	140353
db24c754a45e9710f55a53d2211391b0d74a5cf4	implementing the ‘fool's model’ of combinatory logic	combinatory;logic;set theory;fool;model;implementing	This paper studies ‘Fool's models’ of combinatory logic, and relates them to Hindley's ‘D-completeness’ problem. A ‘fool's model’ is a family of sets of → formulas, closed under condensed detachment. Alternatively, it is a ‘model’ ofCL in naive set theory. We examine Resolution; and the P-W problem. A sequel shows T→ is D-complete; also, its extensions. We close with an implementation FMO of these ideas.	combinatory logic;flexible macroblock ordering;pyrite;set theory	Robert K. Meyer;Martin W. Bunder;Lawrence Powers	1991	Journal of Automated Reasoning	10.1007/BF01880331	computer science;artificial intelligence;mathematics;logic;algorithm;set theory	Logic	-11.29902106167583	15.208271373046673	140464
934c8f306fb35b02d4ee6d488e9eae256428fd0c	profinite methods in semigroup theory		A highlight of the Conference held at the University of Nebraska-Lincoln in May 2000 was the proof of the decidability of the complexity of nite semigroups and automata, presented by Rhodes 78]. This problem had been open for more than thirty years and had inspired many active branches of semigroup theory. As is usually the case with old and diicult problems, the solution for the original question is given by a sequence of results, often very interesting in their own right, and the paper nally closing the problem actually states and proves a more speciic result, which completes the whole construction. A number of techniques and notions have come to play a role in the solution to this problem, which did not exist in the 1960s when the problem was stated, notably the notion of pseudovariety of nite semigroups in the 1970s, the introduction of category-theoretic tools in semigroup theory in the 1980s, and the introduction of proonite methods. This survey concentrates on the latter topic, which is especially interesting in the context outlined above since proonite semigroup theory provides the framework in which to formulate the precise questions which Rhodes answered, and makes it possible to understand the importance of the recently submitted paper by McCammond 55], another essential ingredient in the proof of the decidability of complexity. Our paper aims to speak to both specialists and non-specialists. For the latter it ooers an outlook on semigroup theory which will allow them to appreciate the way in which the study of relatively free proonite semigroups has enriched and modiied nite semigroup theory, and has provided the tools used to solve the complexity problem. The end of the paper, somewhat more technical, is intended to help the specialists of pseudovariety theory who were not directly involved in the most recent results in that direction, to get a general view of the present situation. The part of semigroup theory we are concerned with here is the theory of nite semigroups, and especially the classiication of nite semigroups in pseudovarieties. The introduction of proonite methods in the mainstream of semigroup theory is rather recent. Reiterman's seminal theorem was published in 1982, and Almeida's work developing the theory of implicit operations in the speciic framework of semigroup theory started in the mid 1980s. Important results started owing rapidly, and there are at present a number of surveys and basic references, some dated 3, …	automata theory;automatic semigroup;category theory;closing (morphology);microsoft outlook for mac	Pascal Weil	2002	IJAC	10.1142/S0218196702000912	mathematical analysis;discrete mathematics;bicyclic semigroup;cancellative semigroup;mathematics;krohn–rhodes theory;profinite group;special classes of semigroups;semigroup;algebra	Theory	-4.893093561983596	11.751388059112482	140489
fd940c00d3f423e611785737cdf9c0f8e3f1e96a	proof theory of fuzzy logics: urquhart's c and related logics	teoria demonstracion;theorie preuve;cut elimination;proof theory;logique floue;logica difusa;fuzzy logic;intuitionistic logic;informatique theorique;logique intuitionniste;logica intuicionista;computer theory;informatica teorica	We investigate the proof theory of Urquhart's C and other logics underlying the most prominent fuzzy logics, such as Godel, Product, and Lukasiewicz logic. All these logics share the property that their truth values are linearly ordered. We define hypersequent calculi for such logics, and show the following results: (1) Contraction-free counterparts of intuitionistic logic and Godel logic (including C) admit cutelimination. (2) Validity in these logics is decidable. (3) Hajek's basic fuzzy logic BL properly extends the contraction-free Godel logic; the axiom for commutativity of the minimum is independent from the other axioms of BL. (4) All abovementioned logics are distinct from each other.	fuzzy logic;urquhart graph	Matthias Baaz;Agata Ciabattoni;Christian G. Fermüller;Helmut Veith	1998		10.1007/BFb0055769	fuzzy logic;monoidal t-norm logic;t-norm fuzzy logics;principle of explosion;mathematical logic;discrete mathematics;classical logic;higher-order logic;principle of bivalence;many-valued logic;intuitionistic logic;computer science;intermediate logic;artificial intelligence;łukasiewicz logic;proof theory;absorption law;mathematics;programming language;kripke semantics;method of analytic tableaux;accessibility relation;substructural logic;algorithm	Logic	-10.765554350216101	12.291661940997535	140507
3bcdb832f1578890723e479cdfc2b12f386e5dc1	locality of queries definable in invariant first-order logic with arbitrary built-in predicates	arb-invariant first-order formula;queries definable;gaifman locality theorem;numerical predicate;hanf locality;arbitrary built-in predicate;first-order formula;log n;arb-invariant first-order;tight lower bound;arbitrary numerical predicate;n element;invariant first-order logic	We consider first-order formulas over relational structures which may use arbitrary numerical predicates. We require that the validity of the formula is independent of the particular interpretation of the numerical predicates and refer to such formulas as Arb-invariant first-order. Our main result shows a Gaifman locality theorem: two tuples of a structure with n elements, having the same neighborhood up to distance (log n), cannot be distinguished by Arb-invariant first-order formulas. When restricting attention to word structures, we can achieve the same quantitative strength for Hanf locality. In both cases we show that our bounds are tight. Our proof exploits the close connection between Arb-invariant first-order formulas and the complexity class AC, and hinges on the tight lower bounds for parity on constant-depth circuits.	canonical account;complexity class;fo (complexity);first-order logic;first-order predicate;first-order reduction;locality of reference;numerical analysis	Matthew Anderson;Dieter van Melkebeek;Nicole Schweikardt;Luc Segoufin	2011		10.1007/978-3-642-22012-8_29	combinatorics;discrete mathematics;mathematics;algorithm	Logic	-6.912119053897225	15.466618932461127	140863
10d6d6b5c7af0c5d3d6b1432144fe66078068550	marginalia to a theorem of jacopini	lambda calculus;functional equations;consistency;combinatorial analysis	"""The copyright law of the United States (title 17, U.S. Code) governs the making of photocopies or other reproductions of copyrighted material. Any copying of this document without permission of its author may be prohibited by law. INTRODUCTION In this note we consider the problem of whether a combinator P can consistently (in most cases with beta conversion) be assumed to satisfy the functional equation Mx = Nx. Much of the literature in this area concerns easy terms first discovered by Jacopini. These are combinators P which can consistently be assumed to be solutions to the equation x = Q for any Q. Here we shall prove several results which might be viewed as unexpected; although given Jacopini's result the unexpected should be expected in this topic in lambda calculus. We shall construct an identity M = N which is not a beta conversion but which is consistent with any consistent set of combinator equations. By a simpler construction we shall build a functional equation Mx = Nx for which there is no solution modulo beta conversion but such that for each consistent set S of combinator equations there exists a combinator P with 5 U {MP = NP} consistent. Next we consider the problem of which sets of combinators are """"consistency sets"""" i.e. sets of the form {P : MP = NP is consistent}. Each such set is closed under beta conversion and pi-zero-one (""""co-Visseral"""" in [5]). We produce such a co-Visseral set which is not a consistency set, in contrast to the case for first order arithmetic. Finally, we consider some questions involving compactness. We give several examples of sets of functional equations Mx=Nx such that (*) for each finite subset there is a combinator which can be consistently assumed to be a solution but there is no single combinator which can consistently be assumed to be a solution of the whole set.However, we show that if the condition (*) is made effective then no such examples are possible. This is in contrast to the familiar event of the effectivization of a classical theorem being false. PRELIMINARIES We adopt for the most part the notation and terminology of [1]. A combi-nator is a closed term. The following are the usual combinators"""	bellman equation;combinatory logic;kinetic data structure;lambda calculus;modulo operation;peano axioms;photocopier;processor consistency	Richard Statman	2001	Fundam. Inform.		functional equation;discrete mathematics;computer science;calculus;lambda calculus;mathematics;consistency;programming language	Theory	-4.548602237871516	14.95439536890884	141397
46e749d4b6b4ee2f2d7e084368b2011b5c76b33d	on the proof of the existence of undominated strategies in normal form games		AbstractIn the game theory literature, there are two versions of the proof of the well-known fact that in a normal form game of n persons with compact spaces of strategies and continuous utility functions, the sets of undominated strategies are nonempty. The older one, stated in the first edition of the well-known book by Herve Moulin, depends on certain, relatively nontrivial results from measure theory, metric topology, and mathematical analysis. The proof is valid only for metrizable topological spaces. The second, revised edition of the same book contains a simplified proof, which is, however, incorrect. The author implicitly assumes that any linearly ordered set contains a cofinal subsequence, which is certainly not true. In this paper we correct, simplify, and generalize the second proof of Moulin by its reformulation in terms of topological convergence of nets. This modified technique also yields a slightly better result than is stated in the original. The assertion now holds for almost compact spa...		Martin Kovár;Alena Chernikava	2014	The American Mathematical Monthly	10.4169/amer.math.monthly.121.04.332	discrete mathematics;mathematics;mathematical economics	AI	-4.556258800325499	13.24553454989347	141455
3971caa666d2b2e85bcdfd4739cc9f552803db83	investigation of finitary calculus for a discrete linear time logic by means of infinitary calculus	cut elimination;temporal logic;first order temporal logic;linear time logic	A method for the investigation of undecidable and noncompact temporal logic is presented. It begins with a construction of a Gentzen-like calculus containing some infinitary rules reflecting semantics of the temporal logic. Some semantic (e.g., completeness) and proof theoretical (e.g., cut elimination) properties for this infinitary calculus are proved. The main part of the method consists of reducing an arbitrary derivation in the infinitary restricted calculus into the cut-free derivation in the finitary calculus (in short reduction of the infinitary calculus to the finitary one). As the infinitary rules are similar to the -induction rule the method is called the -reduction. The method allows: 1) to construct a finitary calculus with efficient proof-theoretical properties and 2) to prove the completeness theorem for the considered restricted first order temporal logic.	sequent calculus;time complexity	Regimantas Pliuskevicius	1991		10.1007/BFb0019366	predicate logic;dynamic logic;zeroth-order logic;discrete mathematics;linear temporal logic;higher-order logic;many-valued logic;interval temporal logic;intermediate logic;mathematics;proof calculus;minimal logic;noncommutative logic;situation calculus;natural deduction;substructural logic;multimodal logic;algorithm;algebra	Theory	-11.341381942688153	15.710401034809628	141576
255f72fe5f48a9b4c784bf73d99e76c83f4a10a3	closures of database hypergraphs	relational database;functional dependency;upper bound;computational complexity;polynomial time;transitive closure;database design;lower bound	A hypergraph formalism is introduced to represent database schemata. In particular, a database schema <italic>B</italic>, described by one full join dependency and a set of functional dependencies, is represented by a (database) hypergraph <italic>H</italic>, containing both undirected and directed hyperedges. Undirected hyperedges correspond to the relations in the join dependency, and directed hyperedges correspond to the functional dependencies. In addition, two classes of database hypergraphs are defined: <italic>e</italic>-acyclic hypergraphs and <italic>e</italic>-independent hypergraphs. A hypergraph is <italic>e</italic>-acyclic if it is equivalent to some acyclic hypergraph; it is <italic>e</italic>-independent if it is equivalent to some independent (i.e., cover-embedding) hypergraph. Furthermore, the closure of a database hypergraph is defined as the extension of the transitive closure of a graph. By using a lower bound and an upper bound of the hypergraph closure (called L-closure and U-closure, respectively), it is proved that two <italic>e</italic>-acyclic (<italic>e</italic>-independent) hypergraphs are equivalent if and only if they have the same closure. Moreover, a hypergraph is <italic>e</italic>-acyclic (<italic>e</italic>-independent) if and only if its closure is acyclic (independent) and, in most cases, such a recognition can be done in polynomial time. Finally, it is shown how to use the database hypergraph closure to solve some database design problems.	algorithm;closure (computer programming);database design;database schema;directed acyclic graph;formal grammar;functional dependency;graph (discrete mathematics);join dependency;polynomial;semantics (computer science);time complexity;transitive closure	Domenico Saccà	1985	J. ACM	10.1145/4221.4997	combinatorics;discrete mathematics;computer science;mathematics;upper and lower bounds;algorithm	DB	-6.507214266798805	18.052164664528203	141840
33bffe87bb748aa9e4b3a1495a333d4870d976f3	bounded functional interpretation	proof mining;proof theory;classical logic	We present a new functional interpretation, based on a novel assignment of formulas. In contrast with Gödel’s functional “Dialectica” interpretation, the new interpretation does not care for precise witnesses of existential statements, but only for bounds for them. New principles are supported by our interpretation, including (a version of) the FAN theorem, weak König’s lemma and the lesser limited principle of omniscience. Conspicuous among these principles are also refutations of some laws of classical logic. Notwithstanding, we end up discussing some applications of the new interpretation to theories of classical arithmetic and analysis.	boolean algebra;gödel;könig's lemma;mike lesser;theory	Fernando Ferreira;Paulo Oliva	2005	Ann. Pure Appl. Logic	10.1016/j.apal.2004.11.001	dialectica interpretation;mathematical analysis;discrete mathematics;classical logic;topology;proof theory;mathematics;programming language;algorithm;algebra	PL	-10.42247355694298	13.296984455567786	141928
0352a13067fc633d92da9b71490995856da82495	bidual horn functions and extensions	partially defined boolean functions;boolean functions;boolean function;satisfiability;polynomial algorithm;polynomial time;normal form;characteristic models;horn formulas;polynomial algorithms	Partially definedBooleanfunctions(pdBf) , where aredisjoint setsof true and falsevectors,generalizetotal Booleanfunctionsby allowing that the function valueson some input vectorsareunknown. Themain issuewith pdBfs is theextensionproblem,which is deciding, givena pdBf, whetherit is interpolatedby a function from a givenclassof totalBooleanfunctions, and computinga formula for . In this paper , we considerextensionsof bidual Horn functions, which are the Booleanfunctions suchthat both and its dual function are Horn. They are intuitively appealingfor consideringextensionsbecausethey give a symmetricrole to positive and negative information(i.e., trueandfalsevectors)of a pdBf, which is not possiblewith arbitraryHorn functions. Bidual Horn functionsturn out to constitutean intermediateclassbetweenpositive and Horn functionswhich retainsseveral benignpropertiesof positive functions. Besidesthe extension problem,we study recognitionof bidual Horn functionsfrom Booleanformulasandpropertiesof normalform expressions.We show thatfinding a bidualHorn extensionandcheckingbiduality of a HornDNF is feasiblein polynomialtime,andthatthelatteris intractablefrom arbitraryformulas.We alsogivecharacterizations of shortestDNF expressionsof a bidualHorn function andshow how to computesuchanexpressionfrom aHornDNF for in polynomialtime; for arbitraryHorn functions, this is NP-hard.Furthermore,we show thata polynomialtotal algorithmfor dualizinga bidualHorn functionexistsif andonly if thereis suchanalgorithmfor dualizinga positive function.	duality (optimization);horn clause;like button;literal (mathematical logic);polynomial	Thomas Eiter;Toshihide Ibaraki;Kazuhisa Makino	1999	Discrete Applied Mathematics	10.1016/S0166-218X(99)00033-5	combinatorics;mathematical analysis;discrete mathematics;boolean expression;mathematics;boolean function;algorithm	ML	-7.838394776694863	16.74454834498005	141987
1a47b7cc3f16c1b7933a7513519227115021f14c	completeness with respect to a chain and universal models in fuzzy logic	03b50;fuzzy logic;03c05;single chain;universal models;03g20;completeness;first order logic	In this paper we investigate fuzzy propositional and first order logics which are complete or strongly complete with respect to a single chain, and we relate this properties with the existence of a universal chain for the logic.	fuzzy logic	Franco Montagna	2011	Arch. Math. Log.	10.1007/s00153-010-0207-6	predicate logic;fuzzy logic;dynamic logic;monoidal t-norm logic;zeroth-order logic;complete theory;t-norm fuzzy logics;combinatorics;discrete mathematics;description logic;higher-order logic;many-valued logic;completeness;intuitionistic logic;fuzzy classification;intermediate logic;fuzzy number;łukasiewicz logic;first-order logic;mathematics;signature;substructural logic;autoepistemic logic	Logic	-11.414693086228977	12.569398275095445	142013
45a4d94da74ad5a16a5e38600f6c35b67eb6c4d5	ordinal theory for expressiveness of well-structured transition systems	coverability languages;expressiveness;well partial orders;well structured transition systems;ordinals	We characterize the importance of resources (like counters, channels, or alphabets) when measuring the expressiveness of Well-Structured Transition Systems (WSTS). We establish, for usual classes of well partial orders, the equivalence between the existence of order reflections (non-monotonic order embeddings) and the simulations with respect to coverability languages. We show that the non-existence of order reflections can be proved by the computation of order types. This allows us to extend the current classification of WSTS, in particular solving some open problems, and to unify the existing proofs.	well-structured transition system	Rémi Bonnet;Alain Finkel;Serge Haddad;Fernando Rosa-Velardo	2013	Inf. Comput.	10.1016/j.ic.2012.11.003	ordinal number;discrete mathematics;expressivity;mathematics;algorithm;algebra	Logic	-8.474733922912566	16.70417872495643	142330
911ac8a01fbb51e2a114201178dba479fb07f562	cuting plane versus frege proof systems	cutting plane	The cutting plane proof system for proving the unsatisfiability of propositional formulas in conjunctive normalform is based on a natural representation of formulas as systems of integer inequalities. We show: Frege proof systems p-simulate the cutting plane proof system. This strengthens a result in [5], that extended Frege proof systems (which are believed to be stronger than Frege proof systems) p-simulate the cutting plane proof system. Our proof is based on the techniques introduced in [2].	frege	Andreas Goerdt	1990		10.1007/3-540-54487-9_59	combinatorics;computer science;mathematics;geometry;cutting-plane method	Crypto	-9.849456177286825	14.43164383879328	142503
0fd5994abfaac0571430c6c3c78f5642c1eb10ba	model-theoretic properties characterizing peano arithmetic		Let = {0,1, +,·, -theory containing I Δ 0 + exp such that every complete extension T of it has a countable model K satisfying (i) K has no proper elementary substructures, and (ii) whenever L ≻ K is a countable elementary extension there is and such that . Other model-theoretic conditions similar to (i) and (ii) are also discussed and shown to characterize Peano arithmetic.	peano axioms;theory	Richard Kaye	1991	J. Symb. Log.		combinatorics;number theory;discrete mathematics;automorphism;quantization;first-order logic;mathematics;enumeration;peano axioms;algebra;satisfiability	Theory	-8.052471103240311	13.864676464108983	142627
bce9931529472c8a1e69477214c7817e88550364	distributive lattices as a generalization of brouwerian lattices	distributive lattice	Abstract   It is taken for granted that Brouwerian lattices are distributive. The purpose of this paper is to give an axiom system for Brouwerian lattices from which can be deduced a slightly modified axiom system for distributive lattices.	residuated lattice	Henner Kröger	1977	Discrete Mathematics	10.1016/0012-365X(77)90069-3	birkhoff's representation theorem;distributive lattice;combinatorics;discrete mathematics;mathematics	Theory	-8.437126297246891	12.67360457209975	142669
6c5e2762261311ca54803cf730d3778daa7ccc92	quotienting the delay monad by weak bisimilarity		The delay datatype was introduced by Capretta [3] as a means to deal with partial functions (as in computability theory) in Martin-Löf type theory. It is a monad and it constitutes a constructive alternative to the maybe monad. It is often desirable to consider two delayed computations equal, if they terminate with equal values, whenever one of them terminates. The equivalence relation underlying this identification is called weak bisimilarity. In type theory, one commonly replaces quotients with setoids. In this approach, the delay monad quotiented by weak bisimilarity is still a monad. In this paper, we consider Hofmann’s alternative approach [6] of extending type theory with inductive-like quotient types. In this setting, it is difficult to define the intended monad multiplication for the quotiented datatype. We give a solution where we postulate some principles, crucially proposition extensionality and the (semi-classical) axiom of countable choice. We have fully formalized our results in the Agda dependently typed programming language.	bisimulation;coinduction;embedded system;homotopy type theory;inductive type;intuitionistic type theory;linear algebra;mv-algebra;monad (functional programming);semiconductor industry;setoid;turing completeness	James Chapman;Tarmo Uustalu;Niccolò Veltri	2015		10.1007/978-3-319-25150-9_8	discrete mathematics;mathematics;algorithm	PL	-10.375694497822492	13.939494263991563	143016
30c865e36c0dc595bcd2c4ee0a21f89b82965b76	generalizing boolos' theorem		It’s well known that it’s possible to extract, from Frege’s Grudgesetze, an interpretation of second-order Peano Arithmetic in the theory HP2, whose sole axiom is Hume’s principle. What’s less well known is that, in Die Grundlagen Der Arithmetic §82–83 Boolos (2011), George Boolos provided a converse interpretation of HP2 in PA2. Boolos’ interpretation can be used to show that the Frege’s construction allows for any model of PA2 to be recovered from some model of HP2. So the space of possible arithmetical universes is precisely characterized by Hume’s principle. In this paper, I show that a large class of second-order theories admit characterization by an abstraction principle in this sense. The proof makes use of structural abstraction principles, a class of abstraction principles of considerable intrinsic interest, and categories of interpretations in the sense of Visser (2003).	abstraction principle (computer programming);frege;frege's propositional calculus;hume (programming language);peano axioms;theory	Graham Leach-Krouse	2017	Rew. Symb. Logic	10.1017/S1755020316000332		Logic	-10.429750497997148	12.336190668685493	143441
a53a2d61345bb5be2b70d5bda11f076be2b19c77	strong normalizability of typed lambda-calculi for substructural logics	strong normalization;typed lambda calculus;substructural logic	The strong normalization theorem is uniformly proved for typed λ-calculi for a wide range of substructural logics with or without strong negation.	typed lambda calculus	Motohiko Mouri;Norihiro Kamide	2008	Logica Universalis	10.1007/s11787-008-0036-0	system f;typed lambda calculus;discrete mathematics;computer science;simply typed lambda calculus;mathematics;programming language;substructural logic;algorithm	Logic	-11.557859365043917	15.144658877507828	143583
a1108f881e72ee622dcf8daafb83b2dd3465a54a	isotropy of algebraic theories		Abstract To every small category or topos one may associate its isotropy group , which is an algebraic invariant capturing information about the behaviour of automorphisms. We investigate this invariant in the particular situation of algebraic theories, thus obtaining a group-theoretic invariant of algebraic theories. This invariant encodes a notion of inner automorphism relative to the theory. Our main technical result is a syntactic characterization of the isotropy group of an algebraic theory, and we illustrate the usefulness of this characterization by applying it to various concrete examples of algebraic theories.		Pieter J. W. Hofstra;Jason Parker;Philip J. Scott	2018	Electr. Notes Theor. Comput. Sci.	10.1016/j.entcs.2018.11.010	topos theory;algebraic number;discrete mathematics;pure mathematics;automorphism;isotropy;computer science;syntax;inner automorphism;invariant (mathematics);algebraic theory	ECom	-8.054207965260089	15.965369070858507	143830
b149dcf65af56b028137f76e74c999c67019b079	automatic proofs by induction in theories without constructors	lenguaje programacion;programming language;language theory;teoria lenguaje;induccion;knuth bendix;induction;informatique theorique;reecriture;langage programmation;rewriting;theorie langage;reescritura;computer theory;informatica teorica	Inducfionless induction consists of using pure equational reasoning for proving the validity of an equation in the initial algebra of a set of equational axioms, which would normally require some kind of induction. Under given hypotheses, the equation is valid iff adding it to the set of axioms does not result in an inconsistency. This inconsistency can be found by the Knuth-Bendix completion algorithm, provided that the signature of the algebra is split into free constructors and defined symbols, which must be completely defined in terms of constructors This is the base of the so-called inductive completion algorithm of Huet and Hullot. TWO key concepts, inductive reducibility and inductive co-reducibility, allow us to extend these techniques in various directions: incomplete specifications, nonfree constructors, no constructors specified, equational term rewriting systems. The method is adapted for proving the consistency property of an enrichment of a specitication by new operators and new equations. In addition, we get also a simple algorithm to exhibit a set of constructors of a specification. Finally, inductive co-reducibility is reduced to inductive reducibility and an algorithm for deciding inductive reducibility is given for left linear term rewriting systems. ‘7 1989 Academic Press, Inc		Jean-Pierre Jouannaud;Emmanuel Kounalis	1989	Inf. Comput.	10.1016/0890-5401(89)90062-X	discrete mathematics;rewriting;computer science;philosophy of language;mathematics;programming language;algorithm;algebra	Logic	-11.099823172554643	17.426573732892788	144894
d67896f500d1c5de3e5f4c9b85aa1b2b041ea0a3	proof pearl: abella formalization of λ-calculus cube property	cube property;calculus residual;gerard huet;recent proof assistant;calculus cube property;clever idea;natural development;abella formalization;higher-order abstract syntax;revisiting huet;nominal quantifier;beautiful inductive definition;proof pearl	In 1994 Gerard Huet formalized in Coq the cube property of λ-calculus residuals. His development is based on a clever idea, a beautiful inductive definition of residuals. However, in his formalization there is a lot of noise concerning the representation of terms with binders. We re-interpret his work in Abella, a recent proof assistant based on higher-order abstract syntax and provided with a nominal quantifier. By revisiting Huet’s approach and exploiting the features of Abella, we get a strikingly compact and natural development, which makes Huet’s idea	coq (software);cube;higher-order abstract syntax;lambda calculus;name binding;nominal type system;proof assistant;quantifier (logic);recursive definition	Beniamino Accattoli	2012		10.1007/978-3-642-35308-6_15	pure mathematics;mathematics;algorithm	PL	-11.17200372452349	15.621295729886413	144970
cf1e2f2b32fa6766073814b38533a85beab107a5	theory matrices (for modal logics) using alphabetical monotonicity	modal logic;first order;syntactic analysis;first order logic	In this paper I give conditions under which a matrix characterisation of validity is correct for first order logics where quantifications are restricted by statements from a theory. Unfortunately the usual definition of path closure in a matrix is unsuitable and a less pleasant definition must be used. I derive the matrix theorem from syntactic analysis of a suitable tableau system, but by choosing a tableau system for restricted quantification I generalise Wallen's earlier work on modal logics. The tableau system is only correct if a new condition I call “alphabetical monotonicity” holds. I sketch how the result can be applied to a wide range of logics such as first order variants of many standard modal logics, including non-serial modal logics.	modal logic	Ian P. Gent	1993	Studia Logica	10.1007/BF01058390	monoidal t-norm logic;t-norm fuzzy logics;normal modal logic;discrete mathematics;philosophy;epistemology;computer science;first-order logic;mathematics;programming language;kripke semantics;accessibility relation;algorithm	Logic	-10.838742292400914	13.429411762855255	145200
8f524f6d51d3b5f936d4e98ac8296dd4ad10c4f8	on the predicate logics of continuous t-norm bl-algebras	or phrases;many valued logic	Given a class C of t-norm BL-algebras, one may wonder which is the complexity of the set Taut(C∀) of predicate formulas which are valid in any algebra in C. We first characterize the classes C for which Taut(C∀) is recursively axiomatizable, and we show that this is the case iff C only consists of the Godel algebra on [0,1]. We then prove that in all cases except from a finite number Taut(C∀) is not even arithmetical. Finally we consider predicate monadic logics TautM(C∀) of classes C of t-norm BL-algebras, and we prove that (possibly with finitely many exceptions) they are undecidable.	bl (logic);t-norm	Franco Montagna	2005	Arch. Math. Log.	10.1007/s00153-004-0231-5	discrete mathematics;many-valued logic;mathematics;algorithm;algebra	Theory	-7.013965785832133	14.650751257212594	145500
7fa8c83bae4331e05bbdb6366a47dacbfd52f957	automata and fixed point logic: a coalgebraic perspective	fixed point operators;game semantics;bisimulation;universiteitsbibliotheek;fixed point;parity games;automata;modal logic;xed point;coalgebra	This paper generalizes existing connections between automata and logic to a coalgebraic level. Let F : Set → Set be a standard functor that preserves weak pullbacks. We introduce various notions of F-automata, devices that operate on pointed F-coalgebras. The criterion under which such an automaton accepts or rejects a pointed coalgebra is formulated in terms of an infinite two-player graph game. We also introduce a language of coalgebraic fixed point logic for F-coalgebras, and we provide a game semantics for this language. Finally we show that any formula p of the language can be transformed into an F-automaton Ap which is equivalent to p in the sense that Ap accepts precisely those pointed F-coalgebras in which p holds.	automaton;fixed point (mathematics);game semantics;least fixed point	Yde Venema	2006	Inf. Comput.	10.1016/j.ic.2005.06.003	modal logic;combinatorics;discrete mathematics;computer science;bisimulation;game semantics;mathematics;fixed point;automaton;programming language;algorithm;least fixed point;algebra	Logic	-11.282185668771488	15.36638215500725	145684
7c7af423ceb5016ccb9da91647b3d54c10e41ffd	uniqueness of axiomatic extensions of cut-free classical propositional logic	interdisciplinar	In this article, we prove that, for any cluster of extra-logical assumptions, there exists exactly one axiomatic (i.e. minimal) extension of classical propositional logic that admits cut elimination. As a corollary, it follows that classically equivalent formulas share the same axiomatization. The moral is that cut elimination ‘flattens’ the specific information encoded by the logical structure of proper axioms.	axiomatic system;propositional calculus	Mario Piazza;Gabriele Pulcini	2016	Logic Journal of the IGPL	10.1093/jigpal/jzw032	zeroth-order logic;discrete mathematics;computer science;pure mathematics;mathematics;propositional variable	AI	-9.798484757612663	12.017740481709208	145871
48427d49a9e11ecaba9528ae7fdae0ca08c038df	linear extensions of partial orders and reverse mathematics	linear extensions of partial order;τ like;msc 2010 primary 03b30;ciencias basicas y experimentales;matematicas;reverse mathematics;grupo a;secondary 06a07;linearizability	"""We introduce the notion of τ-like partial order, where τ is one of the linear order types ω, ω * , ω + ω * , and ζ. For example, being ω-like means that every element has finitely many predecessors, while being ζ-like means that every interval is finite. We consider statements of the form """" any τ-like partial order has a τ-like linear extension """" and """" any τ-like partial order is embeddable into τ """" (when τ is ζ this result appears to be new). Working in the framework of reverse mathematics, we show that these statements are equivalent either to BΣ 0 2 or to ACA 0 over the usual base system RCA 0 ."""	american cryptogram association;reverse mathematics	Emanuele Frittaion;Alberto Marcone	2012	Math. Log. Q.	10.1002/malq.201200025	mathematical analysis;discrete mathematics;linearizability;interval order;reverse mathematics;mathematics;programming language;algorithm;algebra	Logic	-5.659273058387124	14.042132202548997	146117
6c74705f3f783f21b4c4da259122873c9e8ffb0e	hoare calculi for higher-type control structures and their completeness in the sense of cook	first order;control structure	We show that the Hoare Calculus for the language of finitely typed λ-terms, introduced in Go 85, is complete in the sense of Cook, i. e. complete for expressive interpretations, if the first-order theory of the interpretation is supplied as oracle. This is the classical notion of completeness for Hoare Calculi [Ap 81]. In Go 85 completeness in the sense of Cook was only proved with respect to Herbrand definable interpretations, which is much easier because of the characterizations in Ur 83, and amounts essentially to completeness for arithmetic and finite interpretations.	hoare logic	Andreas Goerdt	1988		10.1007/BFb0017156	discrete mathematics;computer science;first-order logic;mathematics;hoare logic;programming language;control flow;algorithm	Logic	-11.292725708887142	15.275430011851304	146254
70d4ea6132f31010b02f63d4f1c589a79a58ec13	"""an extension of """"representative instances and gamma-acyclic relational schemes"""""""	universal instance;947;satisfiability;functional dependency;functional dependency with nulls;γ acyclic relational scheme;representative instance;acyclic relational scheme	Let R be a γ-acyclic relational scheme, and let F be the set of functional dependencies (FD's) embodied in R. Given an existence constrained database r over R, it was shown in [1] that it is possible to connect tuples from different relations in r and construct a universal instance L, possibly containing null values δ, such that the total projection of L onto R yields exactly the set r. Moreover, conditions were given which guarantee that this L would satisfy the functional dependency with nulls (NFD) counterparts of FD's, in F. The purpose of this note is to generalize the latter result and show that under the same conditions, L actually satisfies NFD counterparts of FD's in the closure F+ of F.	directed acyclic graph	Sushil Jajodia	1987	IEEE Trans. Software Eng.	10.1109/TSE.1987.233792	computer science;database;functional dependency;algorithm;satisfiability	Security	-5.945719822747473	11.93843305485662	147101
e9529be32e241b9daaa8689f5e39735738c8924f	axiomatic inscriptional syntax. part ii. the syntax of protothetic		Part I of this paper presented an axiomatized theory of general syntax, defined the usual notions of general syntax, and proved some typical theorems of general syntax. We claimed that this system is strong enough to precisely state the formative and deductive rules of formal languages. In Part II we support this claim by formulating, in a very precise way, the rule of procedure of Leśniewski’s Protothetic. Section 1 is an informal introduction to Protothetic and its rule of procedure. Our metalogical system is extended there to a theory MP which is concerned explicitly with the syntax of Protothetic. This section is intended to motivate the Terminological Explanations of Section 2 which culminate in the statement of the rule of Protothetic. In Section 3 we sketch a proof that our formulation of the rule is equivalent to that given by Leśniewski (1929). This proof shows that our system is strong enough to conduct certain metalogical investigations.		V. Frederick Rickey	1973	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093890806	syntax;formative assessment;axiom;algorithm;sketch;formal language;mathematics	Logic	-9.063688356154998	11.700305983384714	147364
72ea8d8380a457e4f539f36e5f36004e32a7afa5	universes in explicit mathematics	proof theory	This paper deals with universes in explicit mathematics. After introducing some basic definitions, the limit axiom and possible ordering principles for universes are discussed. Later, we turn to least universes, strictness and name induction. Special emphasis is put on theories for explicit mathematics with universes which are proof-theoretically equivalent to Feferman’s T0.	expanded memory;james a. kahle;logical unit number;mathematical induction;schedule (computer science);switzerland;theory;three utilities problem;wilhelm schickard	Gerhard Jäger;Reinhard Kahle;Thomas Studer	2001	Ann. Pure Appl. Logic	10.1016/S0168-0072(00)00057-9	mathematical analysis;discrete mathematics;pure mathematics;proof theory;mathematics;programming language	Theory	-9.215191511429845	11.736892885515333	147929
7a4529727f5fdd8a5f6224bd4130441dc1702a6e	symmetric blocking		We present three different techniques that use information about symmetries detected in the input formula to block the expansion of diamonds in a modal tableau. We show how these blocking techniques can be included in a standard tableaux calculus for the basic modal logic, and prove that they preserve soundness and completeness. We empirically evaluate these blocking mechanisms in different modal benchmarks.	blocking (computing);symmetric multiprocessing	Carlos Areces;Ezequiel Orbe	2015	Theor. Comput. Sci.	10.1016/j.tcs.2015.06.020		ECom	-11.546498997340828	15.367918332165413	148009
74eb3dcdbe4cb5d519b553bf34e6327450969381	on the expressiveness of frame satisfiability and fragments of second-order logic		It was conjectured by Halpern and Kapron ( Annals of Pure and Applied Logic , vol. 69, 1994) that frame satisfiability of propositional modal formulas is incomparable in expressive power to both (Ackermann) and (Bernays-Schonfinkel). We prove this conjecture. Our results imply that (Ackermann) and (Bernays-Schonfinkel) are incomparable in expressive power, already on finite graphs. Moreover, we show that on ordered finite graphs, i.e., finite graphs with a successor, (Bernays-Schonfinkel) is strictly more expressive than (Ackermann).		Thomas Eiter;Georg Gottlob	1998	J. Symb. Log.		discrete mathematics;mathematics;programming language;expressive power;second-order logic;algorithm;satisfiability	Logic	-11.321665581941192	14.540601243888775	148444
0d5c232ee034ba167a243e6aad36d00553472735	an automata theoretic approach to rational tree relations	generic model;tree automata;regular tree language	We investigate rational relations over trees. Our starting point is the definition of rational tree relations via rational expressions by Raoult (Bull. Belg. Math. Soc. 1997). We develop a new class of automata, called asynchronous tree automata, which recognize exactly these relations. The automata theoretic approach is convenient for the solution of algorithmic problems (like the emptiness problem). The second contribution of this paper is a new subclass of the rational tree relations, called separate-rational tree relations, defined via a natural restriction on asynchronous tree automata. These relations are closed under composition, preserve regular tree languages, and generate precisely the regular sets in the unary case (all these properties fail for the general model), and they are still more powerful than, for instance, the automatic tree relations.	abstract syntax tree;automata theory;bottom-up proteomics;diploma;goto;linear genetic programming;microsoft outlook for mac;regular tree grammar;rewriting;top-down and bottom-up design;transducer;tree automaton;unary operation;universal instantiation	Frank G. Radmacher	2008		10.1007/978-3-540-77566-9_37	combinatorics;discrete mathematics;binary tree;trie;k-ary tree;mathematics;tree structure;tree;tree traversal;algorithm	Theory	-4.9562900250042565	17.28350806992861	148497
d4299e273e3ceb407f91afea6913594e10990faa	decidability of the existential fragment of some infinitely generated trace monoids: an application to ordinals		Diekert, Matiyasevich and Muscholl proved that the existential first-order theory of a trace monoid over a finite alphabet is decidable. We extend this result to a natural class of trace monoids with infinitely many generators. As an application, we prove that for every ordinal λ less than ε0, the existential theory of the set of successor ordinals less than λ equipped with multiplication is decidable.		Alexis Bès;Christian Choffrut	2018	CoRR		discrete mathematics;existentialism;mathematics;ordinal number;successor cardinal;multiplication;decidability;trace monoid;alphabet;monoid	PL	-5.575847918709598	17.896651522821337	148530
64c5a8567c12ff0a374b1a2a5875c6996cf725e3	necessary and sufficient conditions for university of programming formalisms (partial report)	partial report;sufficient conditions;programming formalisms	Over many familiar datatypes the notion of “computable” coincides with the notion of “flowchartable”. It is also known that flowcharts are not a universal programming formalism over arbitrary datatypes, in the sense that there are datatypes over which not all computable functions are flowchartable. In this paper we consider various extensions and restrictions of the basic formalism of flowcharts, and then for every such formalism, we characterize the datatypes over which the computable functions are exactly the functions programmable in this formalism. We say that a function is computable over a datatype if it is effective relative to the primitive operations and relations of the datatype.		Assaf J. Kfoury;Pawel Urzyczyn	1983		10.1007/3-540-12896-4_368	discrete mathematics;mathematics;computable function;algorithm;computable analysis	AI	-9.490549178464924	16.765120363821755	149455
f4478389f73bdd951537139854f60af8c07d0416	operators defined by propositional quantification and their interpretation over cantor space			cantor;propositional proof system	Tomasz Polacik	1993	Reports on Mathematical Logic		operator (computer programming);cantor space;discrete mathematics;propositional variable;mathematics	PL	-11.586231038693318	13.07002126845643	149929
501a25550386e2809580946cc6371d491a96e5b9	universal languages and the power of diagonalization	computable language universal language diagonalization power strong diagonalization weak diagonalization indirect diagonalization diagonalization complexity pseudouniversal language weak closure condition;computability;formal languages;set theory formal languages computability computational complexity;set theory;computational complexity;mathematics computer science power engineering and energy computational complexity	We define and study strong diagonalization and compare it to weak diagonalization, implicit in [7]. Kozen’s result in [7] shows that virtually every separation can be recast as weak diagonalization. We show that there are classes of languages which can not be separated by strong diagonalization and provide evidence that strong diagonalization does not relativize. We also define two kinds of indirect diagonalization and study their power. Since we define strong diagonalization in terms of universal languages, we study their complexity. We distinguish and compare weak and strict universal languages. Finally we analyze some apparently weaker variants of universal languages, which we call pseudouniversal languages, and show that under weak closure conditions they easily yield universal languages.	dexter kozen;many-one reduction;space hierarchy theorem;time complexity	Alan Nash;Russell Impagliazzo;Jeffrey B. Remmel	2003		10.1109/CCC.2003.1214432	combinatorics;formal language;discrete mathematics;computer science;mathematics;computability;computational complexity theory;algorithm;set theory	Theory	-6.807236748854808	16.571985180235913	150394
19912796f3a08ee1642827cb9f7c2261823fe5ab	combining voting rules together		We propose a simple method for combining together voting rules that performs a run-off between the different winn ers of each voting rule. We prove that this combinator has several g ood properties. For instance, even if just one of the base voting rules has a desirable property like Condorcet consistency, the combi nation inherits this property. In addition, we prove that combining v oting rules together in this way can make finding a manipulation more comp utationally difficult. Finally, we study the impact of this comb inator on approximation methods that find close to optimal manipulati ons.	approximation;comb filter;computation;polynomial;william winn	Nina Narodytska;Toby Walsh;Lirong Xia	2012		10.3233/978-1-61499-098-7-612	machine learning;data mining;mathematics;cardinal voting systems;ranked pairs;anti-plurality voting;condorcet method;algorithm	AI	-4.672274851086633	12.370514601147812	150463
68d6790cdbfda26cf71311e13756d87f164838da	100 years of zermelo's axiom of choice: what was the problem with it?	axiom of choice	Cantor conceived set theory in a sequence of six papers published in the Mathematische Annalen during the five year period 1879-1884. In the fifth of these papers, published in 1883,1 he stated as a law of thought (Denkgesetz) that every set can be well-ordered or, more precisely, that it is always possible to bring any well-defined set into the form of a well-ordered set. Now to call it a law of thought was implicitly to claim self-evidence for it, but he must have given up that claim at some point, because in the 1890’s he made an unsuccessful attempt at demonstrating the well-ordering principle.2 The first to succeed in doing so was Zermelo,3 although, as a prerequisite of the demonstration, he had to introduce a new principle, which came to be called the principle of choice (Prinzip der Auswahl) respectively the axiom of choice (Axiom der Auswahl) in his two papers from 1908.4,5 His first paper on the subject, published in 1904, consists of merely three pages, excerpted by Hilbert from a letter which he had received from Zermelo. The letter is dated 24 September 1904, and the excerpt begins by saying that the demonstration came out of discussions with Erhard Schmidt during the preceding week, which means that we can safely date the appearance of the axiom of choice and the demonstration of the well-ordering theorem to September 1904. Brief as it was, Zermelo’s paper gave rise to what is presumably the most lively discussion among mathematicians on the validity, or acceptability, of a mathematical axiom that has ever taken place. Within a couple of	cantor;lively kernel;schmidt decomposition;set theory;whole earth 'lectronic link	Per Martin-Löf	2006	Comput. J.	10.1093/comjnl/bxh162	urelement;zermelo–fraenkel set theory;kripke–platek set theory;axiom of extensionality;discrete mathematics;axiom independence;action axiom;zermelo set theory;computer science;non-well-founded set theory;scott's trick;well-ordering theorem;continuum hypothesis;mathematics;axiom of choice;mathematical economics;s;constructive set theory	Theory	-7.92834400124079	11.308456739129026	150648
94d1599f2fb41e48dcedf1ed4d824407aff762fe	the predicative frege hierarchy	03f35;interpretability;03f25;frege;predicative comprehension;03a05;03b30	In this paper, we characterize the strength of the predicative Frege hierarchy, PV, introduced by John Burgess in his book [Bur05]. We show that PV and Q + con(Q) are mutually interpretable. It follows that PV := PV is mutually interpretable with Q. This fact was proved earlier by Mihai Ganea in [Gan06] using a different proof. Another consequence of the our main result is that PV is mutually interpretable with Kalmar Arithmetic (a.k.a. EA, EFA, I∆0+EXP, Q3). The fact that P V interprets EA, was proved earlier by Burgess. We provide a different proof. Each of the theories PV is finitely axiomatizable. Our main result implies that the whole hierarchy taken together, PV, is not finitely axiomatizable. What is more: no theory that is mutually locally interpretable with PV is finitely axiomatizable.	exploratory factor analysis;frege;page view;theory	Albert Visser	2009	Ann. Pure Appl. Logic	10.1016/j.apal.2009.02.001	mathematical analysis;computer science;artificial intelligence;mathematics;algorithm;algebra	Theory	-8.443184813842302	11.581023339416156	151086
c11636dcf8f9adb974f34a3553cd4d7f25c86c76	solving open problems in right alternative rings with z-module reasoning	automated reasoning;automated theorem proving	This paper presents our experiments using an automated reasoning program, called the Z-module reasoning system, to prove a number of interesting theorems in right alternative rings. Important results include a computer solution of the conjecture that (x, x, y)2 x(x, x, y) 2=0 holds in every right alternative ring and a computer solution of a generalized version of this conjecture. The paper illustrates how one uses the Z-module reasoning system to solve different problems with varying complexity.	automated reasoning;experiment;reasoning system	Tie-Cheng Wang;Rick L. Stevens	1989	Journal of Automated Reasoning	10.1007/BF00243001	discrete mathematics;computer science;artificial intelligence;automated proof checking;mathematics;automated theorem proving;reasoning system;automated reasoning;algorithm	AI	-10.523997191999573	14.878992917699305	151491
84df3e890d3e48ec705653b48ea98a99b5d4881c	on the definition and the representability of quasi-polyadic equality algebras		We show that the usual axiom system of quasi polyadic equality algebras is strongly redundant. Then, so called non-commutative quasi-polyadic equality algebras are introduced (QPENα), in which, among others, the commutativity of cylindrifications is dropped. As is known, quasi-polyadic equality algebras are not representable in the classical sense, but we prove that algebras in QPENα are representable by quasi-polyadic relativized set algebras, or more exactly by algebras in Gwqα .	axiomatic system	Miklós Ferenczi	2016	Math. Log. Q.	10.1002/malq.201100109	cayley–dickson construction;discrete mathematics;non-associative algebra;pure mathematics;mathematics;interior algebra;nest algebra;algebra	Logic	-7.773282115166686	12.803727790377065	151493
b277c8309bca2536ba6e6494fbbac31494526103	a canonical model construction for iteration-free pdl with intersection		We study the axiomatisability of the iteration-free fragment of Propositional Dynamic Logic with Intersection and Tests. The combination of program composition, intersection and tests makes its proof-theory rather difficult. We develop a normal form for formulae which minimises the interaction between these operators, as well as a refined canonical model construction. From these we derive an axiom system and a proof of its strong completeness.	a-normal form;approximation;axiomatic system;beta normal form;canonical model;computable function;dynamic logic (modal logic);iteration;kleene star;kripke semantics;np-completeness;parallels desktop for mac;perl data language (pdl);proof calculus;recursively enumerable set	Florian Bruse;Daniel Kernberger;Martin Lange	2016		10.4204/EPTCS.226.9	combinatorics;discrete mathematics;mathematics;algorithm	AI	-11.033293042468848	16.341712499484196	151664
ed188060c73610d5163b77d47287bd4d6bc53263	a note on conditional expressions	parallel evaluation;suspending cons;infinite structures;conditional forms;lisp;ambiguity function;if then else;ambiguous function	Evaluation of a conditional expression may succeed even when the “deciding predicate” diverges and the alternatives are records (or nodes) whose fields have different content.	conditional (computer programming)	Daniel P. Friedman;David S. Wise	1978	Commun. ACM	10.1145/359642.359650	discrete mathematics;computer science;theoretical computer science;lisp;mathematics;programming language;algorithm;ambiguity function	PL	-10.899904681249774	14.43231672912624	151675
848aad9e7c93a0ebe0896f6034f2157e58330b91	mass problems and intuitionistic higher-order logic		In this paper we study a model of intuitionistic higher-order logic which we call the Muchnik topos. The Muchnik topos may be defined briefly as the category of sheaves of sets over the topological space consisting of the Turing degrees, where the Turing cones form a base for the topology. We note that our Muchnik topos interpretation of intuitionistic mathematics is an extension of the well known Kolmogorov/Muchnik interpretation of intuitionistic propositional calculus via Muchnik degrees, i.e., mass problems under weak reducibility. We introduce a new sheaf representation of the intuitionistic real numbers, the Muchnik reals, which are different from the Cauchy reals and the Dedekind reals. Within the Muchnik topos we obtain a choice principle (8x9y A(x,y)) ) 9w 8xA(x,wx) and a bound	intuitionistic logic	Sankha S. Basu;Stephen G. Simpson	2016	Computability	10.3233/COM-150041	discrete mathematics;topology;pure mathematics;mathematics;algebra	Logic	-7.912520473757862	12.814126935209268	151881
2fe340c6a9aea3cb7aaf7b7b119d7874bcaacd65	on the satisfiability of two-variable logic over data words	satisfiability;presburger arithmetic	Data trees and data words have been studied extensively in connection with XML reasoning. These are trees or words that, in addition to labels from a finite alphabet, carry labels from an infinite alphabet (data). While in general logics such as MSO or FO are undecidable for such extensions, decidablity results for their fragments have been obtained recently, most notably for the two-variable fragments of FO and existential MSO. The proofs, however, are very long and nontrivial, and some of them come with no complexity guarantees. Here we give a much simplified proof of the decidability of two-variable logics for data words with the successor and data-equality predicates. In addition, the new proof provides several new fragments of lower complexity. The proof mixes database-inspired constraints with encodings in Presburger arithmetic.	fo (complexity);presburger arithmetic;tree (data structure);two-variable logic;undecidable problem;xml	Claire David;Leonid Libkin;Tony Tan	2010		10.1007/978-3-642-16242-8_18	computer science;presburger arithmetic;algorithm;satisfiability	Theory	-7.124999827078058	17.201798458219553	152252
9d1c9376489930cfb88301af2dd398c67b4bbfb9	direct proofs of lindenbaum conditionals		We discuss the problem raised by Miller (Log Univers 1:183–199, 2007) to re-prove the well-known equivalences of some Lindenbaum theorems for deductive systems (each equivalent to the Axiom of Choice) without an application of the Axiom of Choice. We present five special constructions of deductive systems, each of them providing some partial solutions to the mathematical problem. We conclude with a short discussion of the underlying philosophical problem of deciding, whether a given proof satisfies our demand that the Axiom of Choice is not applied.		René Gazzari	2014	Logica Universalis	10.1007/s11787-013-0081-1	zermelo–fraenkel set theory;axiom schema;discrete mathematics;choice function;action axiom;scott's trick;mathematics;axiom of choice;s;algorithm;algebra	Crypto	-8.662865694196709	11.645565409173113	152279
8e0d4f82c68a2d629d29ccdd7ff2cb64f96e1dc2	some relationships between the foies and s1 arity hierarchies		A rst order incremental evaluation system foies uses rst order queries to maintain a database view which is de ned by a non rst order query some auxiliary relations views may also need to be maintained similarly In foies monadic auxiliary relations were known to be strictly weaker than binary ones however it is open whether k ary auxiliary relations are strictly weaker than k ary ones for k if we limit the arity of the input relations to be at most k In the full version of the PODS paper DS b which will appear in JCSS it is shown that the answer to this question is positive if we do not limit the arity of the input relations It appears hard to generalize the techniques used for current separation results to solve the above problem On the other hand the arity hierarchy of was shown to be strict		Guozhu Dong;Limsoon Wong	1997	Bulletin of the EATCS		discrete mathematics;mathematics;hierarchy;arity;view;binary number;monad (functional programming)	ML	-6.870269913325852	16.31271364158568	152416
f728a307a711e3b18db00025f66c58cf096a6445	discriminating lambda-terms using clocked boehm trees	article letter to editor	As observed by Intrigila [16], there are hardly techniques available in the λ-calculus to prove that two λ-terms are not β-convertible. Techniques employing the usual Böhm Trees are inadequate when we deal with terms having the same Böhm Tree (BT). This is the case in particular for fixed point combinators, as they all have the same BT. Another interesting equation, whose consideration was suggested by Scott [24], is BY = BYS, an equation valid in the classical model Pω of λ-calculus, and hence valid with respect to BT-equality =BT, but nevertheless the terms are β-inconvertible. To prove such β-inconvertibilities, we employ ‘clocked’ BT’s, with annotations that convey information of the tempo in which the data in the BT are produced. Böhm Trees are thus enriched with an intrinsic clock behaviour, leading to a refined discrimination method for λ-terms. The corresponding equality is strictly intermediate between =β and =BT, the equality in the model Pω. An analogous approach pertains to Lévy–Longo and Berarducci Trees. Our refined Böhm Trees find in particular an application in β-discriminating fixed point combinators (fpc’s). It turns out that Scott’s equation BY = BYS is the key to unlocking a plethora of fpc’s, generated by a variety of production schemes of which the simplest was found by Böhm, stating that new fpc’s are obtained by postfixing the term SI, also known as Smullyan’s Owl. We prove that all these newly generated fpc’s are indeed new, by considering their clocked BT’s. Even so, not all pairs of new fpc’s can be discriminated this way. For that purpose we increase the discrimination power by a precision of the clock notion that we call ‘atomic clock’.	attack tree;böhm tree;clock rate;combinatory logic;fixed point (mathematics);fixed-point combinator;lambda calculus;linear discriminant analysis	Jörg Endrullis;Dimitri Hendriks;Jan Willem Klop;Andrew Polonsky	2012	Logical Methods in Computer Science	10.2168/LMCS-10(2:4)2014	discrete mathematics;computer science;mathematics;algorithm	Logic	-8.077308870917935	14.277819211286827	153025
c554df8d1f06648d0bd26ffab2dec34ed6db3c0b	a characterisation of lambda definability with sums via tt-closure operators	closure operator;typed lambda calculus	We give a new characterisation of morphisms that are definabl e by the interpretation of the simply typed lambda calculus with sum inanybi-Cartesian closed category. The ⊤⊤-closure operator will be used to constructthe category in which the collection of definable morphisms at sum types ca n be characterised as the coproducts of such collections at lower types.	cartesian closed category;simply typed lambda calculus	Shin-ya Katsumata	2008		10.1007/978-3-540-87531-4_21	system f;combinatorics;typed lambda calculus;discrete mathematics;binary lambda calculus;pure type system;computer science;simply typed lambda calculus;mathematics;programming language;church encoding;lambda cube;closure operator;algebra	Logic	-6.731526277511502	16.158520624243206	153346
d70c6dd7fcc909df20c7d5b748b9f2707a4f9c26	every two equivalent d0l systems have a regular true envelope		This paper pursues further the research started in [2] and 133. Its aim is to demonstrate further the usefulness of elementary homomorphisms and proof techniques around them for solving (using ‘systematic’ proof techniques) various problems concerning DOL systems. In particular we solve an open problem from [l] and prove that every two equivalent DOL systems have a true regular envelope. We assume the reader to be familiar with the rudiments of automata theory and the rudiments of the theory of DOL systems. Also we assume the reader to be familiar with 131.	automata theory	Andrzej Ehrenfeucht;Grzegorz Rozenberg	1980	Theor. Comput. Sci.	10.1016/0304-3975(80)90071-7	combinatorics;discrete mathematics;open problem;mathematics	Logic	-5.5653512312608795	12.457479762090335	153662
459e09f5df63c77d3abe1ca245d3b1c41a6167e4	resurrection axioms and uplifting cardinals		We introduce the resurrection axioms, a new class of forcing axioms, and the uplifting cardinals, a new large cardinal notion , and prove that various instances of the resurrection axioms are equiconsistent over ZFC with the existence of an uplifting cardinal .	zermelo–fraenkel set theory	Joel David Hamkins;Thomas A. Johnstone	2014	Arch. Math. Log.	10.1007/s00153-014-0374-y	large cardinal;pure mathematics;mathematics;rank-into-rank;algorithm	Logic	-7.704418686858603	12.621452393242345	153871
08a0e98dd444fcb27ff07fff4199a536113dcc2f	rule separation and embedding theorems for logics without weakening	embedding theorem;logic;mathematical logic and foundations;philosophy;residuated lattice;computational linguistics;linear logic	A full separation theorem for the derivable rules of intuitionistic linear logic without bounds, 0 and exponentials is proved. Several structural consequences of this theorem for subreducts of (commutative) residuated lattices are obtained. The theorem is then extended to the logic LR+ and its proof is extended to obtain the finite embeddability property for the class of square increasing residuated lattices.		Clint J. van Alten;James G. Raftery	2004	Studia Logica	10.1023/B:STUD.0000032087.02579.e2	dynamic logic;monoidal t-norm logic;linear logic;combinatorics;mathematical logic;discrete mathematics;higher-order logic;topology;philosophy;epistemology;many-valued logic;computer science;intermediate logic;computational linguistics;first-order logic;mathematics;programming language;logic;substructural logic;second-order logic;gödel's completeness theorem;model theory;algebra	Theory	-10.35741344852726	12.758457845021358	153921
ccbcb9113c22db96906b0029d5ada99630a6623d	the encodability hierarchy for pcf types		Working with the simple types over a base type of natural numbers (including product types), we consider the question of when a type σ is encodable as a definable retract of τ : that is, when there are λ-terms e : σ → τ and d : τ → σ with d ◦ e = id . In general, the answer to this question may vary according to both the choice of λ-calculus and the notion of equality considered; however, we shall show that the encodability relation between types actually remains stable across a large class of languages and equality relations, ranging from a very basic language with infinitely many distinguishable constants 0̂, 1̂, . . . (but no arithmetic) considered modulo computational equality, up to the whole of Plotkin’s PCF considered modulo observational equivalence. We show that σ τ σ iff σ ∼= τ via trivial isomorphisms, and that for any σ, τ we have either σ τ or τ σ. Furthermore, we show that the induced linear order on isomorphism classes of types is actually a well-ordering of type ǫ0, and indeed that there is a close syntactic correspondence between simple types and Cantor normal forms for ordinals below ǫ0. This means that the relation is readily decidable, and that terms witnessing a retraction σ ⊳ τ are readily constructible when σ τ holds.	cantor;chomsky hierarchy;database normalization;graph isomorphism;lambda calculus;modulo operation;observational equivalence;plotkin bound;product type;programming computable functions;turing completeness	John Longley	2018	CoRR		mathematics;discrete mathematics;product type;isomorphism;ordinal number;modulo;decidability;ranging;natural number;retract;topology	PL	-6.445276381783764	14.72294296801708	153925
2650684355cdfe75a1c2856908e26fe43c251f5e	termination and confluence in infinitary term rewriting	universiteitsbibliotheek	The basic notions of the theory of term rewriting are defined for terms that may involve function letters of infinite arity. A sufficient condition for completeness is derived, and its use demonstrated by the example of abstract clones over infinitary signatures. Introduction In general, to see that two terms of some equational theory A a e not equivalent requires a model of A in which their interpretations are distinct. The construction of such models is often bothersome. It may be avoided when the axioms of A can be oriented in such a way that they form a semi-complete term rewriting system. The normal forms then constitute a canonical model of A , which is sufficient for all demonstrations of nonequivalence (see [2]). A theory of rewriting for infinite terms, that is, terms constructed with function symbols of infinite arity, does not have the straightforward calculational motivation of the well-known finitary term rewriting (cf. [2] and [4]). It would still have its use, however, in demonstrating nonequivalence. For example, the theory of categories with certain infinite products may be axiomatized by an infinite set of infinitary equations. (Cf. [5] for the finite case.) One way of showing terms of this theory to be nonequivalent would be to interpret them as distinct arrows in some category of sets. As an application of the results of this note, we shall derive another method: the theory in question may be so oriented as to constitute a complete term rewriting system, and we can decide equivalence, for sufficiently conceivable terms, by normalizing and comparing the normal forms. The subject of the present note is essentially different from the infinitary term rewriting of Kennaway c.s. [3]. The infinite reduction sequences that they study will here be considered simply divergent. Terms By a vocabulary let us understand a set F oּf function letters, each associated with a fixed ordinal which we call its arity. If F is a vocabulary, then the set TF of terms over F is the least set T such that for any α-ary F ∈F and any αINFINITARY TERM REWRITING 2 termed sequence 〈tξ |ξ<α 〉 of elements of T, F (tξ |ξ<α) ∈T. We picture F(tξ|ξ<α) as an oriented tree with a root labeled F from which the tξ grow, from left to right as ξ increases. Variables are special nullary function symbols. If X is a set of variables, then TF,X , the set of terms over F in variables from X, is TF∪X. Let t be a term over F (in variables from X), and ξ = 〈ξi| i<n〉 a finite sequence of ordinals. The label Lab(t, ξ ) of t at ξ , and the subterm Sub(t, ξ ) of t at ξ , are defined inductively as follows: (i) Sub(t, ∅) = t (∅ is the empty sequence), and if t ∈ X, Lab(t, ∅) = t, while if t = F(tξ|ξ<α ) with F ∈F, Lab(t, ∅) = F; (ii) Lab(F(tξ|ξ<α ), 〈γ , δ1,..., δn〉) = Lab(tγ , 〈δ1,..., δn〉) and Sub(F(tξ|ξ<α ), 〈γ , δ1,..., δn〉) = Sub(tγ , 〈δ1,..., δn〉). A sequence ξ for which Lab(t, ξ ) is defined will be called a position in t. For any ξ and F ∈F we define U(F, ξ ) := {t ∈ TF | Lab(t, ξ ) = F} . We topologize TF by taking the U(F, ξ ) as subbasic opens. Then t is the limit of a sequence 〈tξ|ξ<α〉 of terms if for every position η in t, there exists δ < α such that for all ξ with δ ≤ ξ < α, Lab(tξ, η ) = Lab(t, η ). Rewrite rules and reductions Let F be a vocabulary and X a set of variables. A rewrite rule over F in X is an ordered pair of terms s, t over F in variables from X such that s ∉ X and t contains only variables that also appear in s. We denote such a pair by s → t. A pair 〈TF , R〉 consisting of the set of all terms over some vocabulary F and a set R of rewrite rules over F we call a term rewriting system, abbreviated trs. A substitution, with respect to F and X, is a function σ : TF,X a TF with the property that for every F ∈F and every suitable sequence 〈tξ|ξ<α〉 of arguments, σ (F(tξ|ξ<α)) = F(σ (tξ)|ξ<α) . We say σ (t) is an instance of t. Now suppose we also have a set R of rewrite rules over F. An instance of a rewrite rule s → t is a pair 〈σ (s), σ (t)〉 for some substitution σ. With reference to the trs 〈TF , R 〉, we call such a pair a contraction or head reduction ; and we write σ (s) → σ (t). Sometimes it is useful to make the variables in a term a little more explicit. If t is a term in variables from a set { xξ|ξ<α}, we write t as t(xξ |ξ<α). The result of substituting sξ for xξ, for all ξ<α, is then denoted by t(sξ |ξ<α). A reduction is either a contraction, or an i ternal reduction, i.e. a pair 〈F(sξ |ξ<α) , F(tξ|ξ<α)〉	abstract data type;canonical model;confluence;database normalization;normal form (abstract rewriting);ordered pair;ordinal data;recursive definition;reduction (complexity);rewrite (programming);rewriting;semiconductor industry;substitution (logic);turing completeness;type signature;vocabulary;whole earth 'lectronic link	Pieter Hendrik Rodenburg	1998	J. Symb. Log.		mathematics;confluence	Logic	-5.978572773020475	14.600280620397056	153928
b69a787c0857f61bc0db72894438151d70cfceb1	a theory of computation based on unsharp quantum logic: finite state automata and pushdown automata	mv algebra;lattice ordered qmv algebra;unsharp quantum logic;finite state automata;pushdown automata	When generalizing the projection-valued measurements to the positive operator-valued measurements, the notion of the quantum logic generalizes from the sharp quantum logic to the unsharp quantum logic. It is known that: (i) the distributive law is one of the main differences between the sharp quantum logic and the boolean logic, and the block or the center of the sharp quantum structures are boolean algebras; (ii) the unsharp quantum logic does not satisfy the non-contradiction law, which forces the block or the center of unsharp quantum structures to be multiple valued algebras, rather than boolean algebras. Multiple valued algebras, as special quantum structures, are the algebraic semantics of multiple valued logic. Interestingly, we recently discovered that the difference between some unsharp quantum structures and multiple valued algebras is also some kind of distributive law. Choosing an orthomodular lattice (an algebraic model of a sharp quantum logic) to be the truth valued lattice, Ying et al. have systematically developed automata theory based on sharp quantum logic. In this paper, choosing a lattice ordered quantum multiple valued algebra E (an extended lattice ordered effect algebra E, respectively) to be the truth valued lattice, we also systematically develop an automata theory based on unsharp quantum logic. We introduce E-valued finite-state automata and E-valued pushdown automata in the framework of unsharp quantum logic. We study the classes of languages accepted by these automata and re-examine their various properties in the framework of unsharp quantum logic. The study includes the equivalence between finite-state automata and regular expressions, as well as the equivalence between pushdown automata and context-free grammars. It is also demonstrated that the universal validity of some important properties (such as some closure properties of languages and Kleene theorem etc.) depends heavily on the aforementioned distributive law. More precisely, when the underlying model degenerates into an MV algebra, then all the counterparts of properties in classical automata are valid. This is the main difference between automata theory based on unsharp quantum logic and automata theory based on sharp quantum logic.	automata theory;finite-state machine;pushdown automaton;quantum logic;stack (abstract data type);theory of computation	Yun Shang;Xian Lu;Ruqian Lu	2012	Theor. Comput. Sci.	10.1016/j.tcs.2012.02.018	quantum logic;combinatorics;discrete mathematics;quantum finite automata;computer science;nested word;quantum cellular automaton;pure mathematics;mathematics;quantum dot cellular automaton;finite-state machine;pushdown automaton;quantum algorithm;algorithm;algebra	Logic	-5.622419306277983	16.3509216096495	154055
6f250261cb2653c038612115282cda1294aa3d56	transfinite recursive progressions of axiomatic theories			recursion;recursive language;transfinite induction	Solomon Feferman	1962	J. Symb. Log.		discrete mathematics;transfinite number;axiom;recursion;mathematics	Theory	-11.362900769055148	12.477826866346826	154459
618e846b16e2015c331359c741f114f04a8184b6	a complete type inference algorithm for simple intersection types	type checking;type inference;intersection types;type system	In this paper we present a decidable restriction of the intersection type discipline, obtained by combining intersection and universal quantification over types. The system, which has a notion of principal type, is a proper extension of the ML type system. A sound and complete type checking algorithm is presented and proved	algorithm;principal type;type inference;type system;universal quantification	Mario Coppo;Paola Giannini	1992		10.1007/3-540-55251-0_6	combinatorics;discrete mathematics;type system;unit type;type family;recursive data type;algebraic data type;generalized algebraic data type	PL	-11.28206590548735	17.318145391981766	154605
67e0c6b1b4d968e8910a588b7c034caf345f161a	on the standard part of nonstandard models of set theory		We characterize the ordinals α of uncountable cofinality such that α is the standard part of a nonstandard model of ZFC (or equivalently KP ).	set theory	Menachem Magidor;Saharon Shelah;Jonathan Stavi	1983	J. Symb. Log.		zermelo–fraenkel set theory;effective descriptive set theory;universal set;mathematical analysis;discrete mathematics;inner model theory;internal set;mathematics;set theory;algebra	Theory	-7.660578365503719	12.594210167955803	154780
4450b8145579a57c45b468a66f250aaa3760a74a	dualities for modal n4-lattices		We introduce a new Priestley-style topological duality for N4-lattices, which are the algebraic counterpart of paraconsistent Nelson logic. Our duality differs from the existing one, due to S. Odintsov, in that we only rely on Esakia duality for Heyting algebras and not on the duality for De Morgan algebras of Cornish and Fowler. A major advantage of our approach is that we obtain a simple description for our topological structures, which allows us to extend the duality to other algebraic structures such as N4-lattices with monotonic modal operators, and also to provide a neighborhood semantics for the non-normal modal logic corresponding to these algebras.	de morgan's laws;fenchel's duality theorem;linear algebra;modal operator;neighborhood semantics;normal modal logic;paraconsistent logic	Ramon Jansana;Umberto Rivieccio	2014	Logic Journal of the IGPL	10.1093/jigpal/jzu002	algebraic structure;discrete mathematics;algebraic number;modal operator;modal logic;mathematics;monotonic function;duality (optimization);neighborhood semantics;lattice (order)	Logic	-9.68775396217963	12.20315057289466	155114
c54d0677a1e4ee5caee23fbfb6a73eb66ca919a8	the primal framework ii: smoothness	cardinal number;modele cosmologique;modelo homogeneo;modelo cosmologico;relacion orden;charpente;teoria conjunto;theorie ensemble;ordering;modele homogene;set theory;relation ordre;nombre cardinal;first order;numero cardinal;smoothing;alisamiento;cosmological model;existence and uniqueness;homogeneous model;lissage;stability theory;armadura;framework	This is the second in a series of articles developing abstract classification theory for classes that have a notion of prime models over independent pairs and over chains. It deals with the problem of smoothness and establishing the existence and uniqueness of a ‘monster model’. We work here with a predicate for a canonically prime model. In a forthcoming paper, entitled, ‘Abstract classes with few models have ‘homogeneous-universal’ models’, we show how to drop this predicate from the set of basic notions and still obtain results analogous to those here. Experience with both first order logic and more general cases has shown the advantages of working within a ‘monster’ model that is both ‘homogeneousuniversal’ and ‘saturated’. Fräissé [6] for the countable case and Jónsson [9] for arbitrary cardinalities gave algebraic conditions on a class K of models that guaranteed the existence of a model that is homogeneous and universal for K. Morley and Vaught [11] showed that if K is the class of models of a first order theory then the algebraic conditions of homogeneity and universality are equivalent to model theoretic conditions of saturation. First order stability theory works within the fiction of a monster model M. Such	exception handling;first-order logic;formal system;linear algebra;maximal set;semantics (computer science);set theory;stationary process;theory;universality probability	John T. Baldwin;Saharon Shelah	1991	Ann. Pure Appl. Logic	10.1016/0168-0072(91)90095-4	cardinal number;topology;order theory;software framework;calculus;first-order logic;mathematics;geometry;stability theory;programming language;smoothing;set theory	Theory	-11.515357375533814	17.21509368215981	155565
22ef77dab2f21922161956acacc8d0bae72e9ed4	generic vopěnka's principle, remarkable cardinals, and the weak proper forcing axiom		We introduce and study the first-order Generic Vopěnka’s Principle, which states that for every definable proper class of structures C of the same type, there exist B 6= A in C such that B elementarily embeds into A in some set-forcing extension. We show that, for n ≥ 1, the Generic Vopěnka’s Principle fragment for Πn-definable classes is equiconsistent with a proper class of n-remarkable cardinals. The n-remarkable cardinals hierarchy for n ∈ ω, which we introduce here, is a natural generic analogue for the C(n)-extendible cardinals that Bagaria used to calibrate the strength of the first-order Vopěnka’s Principle in [1]. Expanding on the theme of studying set theoretic properties which assert the existence of elementary embeddings in some set-forcing extension, we introduce and study the weak Proper Forcing Axiom, wPFA, which states that for every transitive modelM in the language of set theory with some ω1-many additional relations, if it is forced by a proper forcing P thatM satisfies some Σ1-property, then V has a transitive model M̄, which satisfies the same Σ1property, and in some set-forcing extension there is an elementary embedding from M̄ intoM. This is a weakening of a formulation of PFA due to Schindler and Claverie [2], which asserts that the embedding from M̄ toM exists in V . We show that wPFA is equiconsistent with a remarkable cardinal and that wPFA implies PFAא2 , the proper forcing axiom for antichains of size at most ω2, but it is consistent with κ for all κ ≥ ω2, and therefore does not imply PFAא3 .	existential quantification;first-order predicate;predictive failure analysis;set theory	Joan Bagaria;Victoria Gitman;Ralf Schindler	2017	Arch. Math. Log.	10.1007/s00153-016-0511-x	mathematical analysis;discrete mathematics;topology;calculus;mathematics;algebra	Logic	-7.421737462343099	12.938779025540178	155851
0ee5eceb8bdb5089ce6e2b8009e4316c353662dd	definitions of semantical reference and self-reference			self-reference	Brian Skyrms	1976	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093887434	discrete mathematics;self-reference;mathematics	Vision	-10.37517135249071	11.860241500201457	156189
8be04b838b6311341d59eae517482a78a4018199	tags m-constructed		This paper puts TAGs into an algebraic perspective. The operation of tree adjunction is shown to be a special case of function substitution within a derived theory. The underlying process of theory derivation is illustrated with the concrete example of free continuous tree algebras.		Uwe Mönnich	1998			mathematics	NLP	-5.007246298897423	15.806810125965194	156648
377c4b6bd513481be9949b826b26e909e68193c5	weighted automata and weighted logics over tree-like structures		In theoretical computer science the connection between automata and logic is of fundamental importance. This connection was first considered by Büchi and Elgot in the 1960s, when they showed that the languages accepted by finite automata are precisely those languages that can be defined in monadic second-order logic (MSO). In this thesis we consider extensions of Büchi’s and Elgot’s theorem into two directions. First, we consider classes of objects which are more general than words and carry a tree-like structure. Second, we consider quantitative aspects and investigate weighted automata operating on these structures. The study of weighted automata goes back to the work of Schützenberger. He equipped the transitions of an automaton additionally with a weight and studied the behavior of such a device which is now a formal power series, i.e. a mapping assigning to a word an element of a semiring. A semiring is the algebraic structure that carries the weights. For example, the natural numbers form a semiring, but also the probabilistic semiring given by the interval [0, 1] together with the max-operator and the usual multiplication is a semiring. This thesis investigates different weighted automaton models over tree-like structures such as texts, nested words and hedges, which have already been considered in the literature. We characterize all automaton models logically. This is achieved by considering suitable adaptions of weighted logics. The formalism of weighted logics was introduced by Droste and Gastin [1] in 2005 and provides an extension of classical MSO which is now enriched with values from a semiring in order to add quantitative expressiveness. Since already for words the full weighted MSO is expressively stronger than weighted automata, we restrict the consideration to a syntactically defined fragment called sRMSO which was proposed in [2]. Now, rather than proving for each class of structures a characterization on its own, for instance by an induction over the structure of formulae, we use a translation technique and reduce the results to ones that have already been shown. This admits the advantage that it gives insight into the similarities of the different structures. More importantly, by using the translation technique we get decidability results for the emptiness and equivalence problems from corresponding results for trees. For the case of hedges and nested words the automaton models are straightforward generalizations of the unweighted models which had already been presented in the literature. For texts, however, no automaton model had been considered so far and the model of weighted	automaton;finite-state machine;finite-state transducer;formal grammar;keystroke-level model;linear algebra;mathematical induction;nested word;theoretical computer science;turing completeness	Christian Mathissen	2009			discrete mathematics;nested word;finite-state machine;semiring;probabilistic logic;natural number;formal power series;decidability;mathematics;monad (functional programming)	Logic	-5.539236701798379	17.119727114431335	157211
5e1deb3876e5d8c4c61736c6aa6968c06a185856	pointwise hereditary majorization and some applications		A pointwise version of the Howard–Bezem notion of hereditary majorization is introduced which has various advantages, and its relation to the usual notion of majorization is discussed. This pointwise majorization of primitive recursive functionals (in the sense of Gödel’s T as well as Kleene/Feferman’s P̂R) is applied to systems of intuitionistic and classical arithmetic (H and Hc) in all finite types with full induction as well as to the corresponding systems with restricted induction Ĥ|\ and Ĥ|\. 1) H and Ĥ|\ are closed under a generalized fan–rule. For a restricted class of formulae this also holds for Hc and Ĥ|\ . 2) We give a new and very perspicuous proof that for each Φ2 ∈ T (P̂R) one can construct a functional Φ̃2 ∈ T (P̂R) such that Φ̃α is a modulus of uniform continuity for Φ on {β1|∀n(βn ≤ αn)}. Such a modulus can also be obtained by majorizing any modulus of pointwise continuity for Φ. 3) The type structure M of all pointwise majorizable set–theoretical functionals of finite type is used to give a short proof that quantifier–free “choice” with uniqueness (AC!)1,0–qf. is not provable within classical arithmetic in all finite types plus comprehension (given by the schema (C)ρ : ∃y0ρ∀xρ(yx = 0 ↔ A(x)) for arbitrary A), dependent ω–choice and bounded choice. Furthermore M separates several μ–operators.	gödel;hereditary property;modulus of continuity;primitive recursive function;primitive recursive functional;provable security;quantifier (logic);recursion;scott continuity	Ulrich Kohlenbach	1992	Arch. Math. Log.	10.1007/BF01794980	combinatorics;mathematical analysis;discrete mathematics;topology;mathematics;algorithm;algebra	Theory	-8.482166566037455	14.127296964340369	157535
4a103d0f5f01c6680142c6bdbf4f489303208433	a short proof of the strong normalization of classical natural deduction with disjunction		We give a direct, purely arithmetical and elementary proof of the strong normalization of the cut-elimination procedure for full (i.e. in presence of all the usual connectives) classical natural deduction.	logical connective;natural deduction;normalization property (abstract rewriting)	René David;Karim Nour	2003	J. Symb. Log.		discrete mathematics;mathematics;programming language;sequent calculus;natural deduction;algorithm	Theory	-11.39557716973142	14.177846762678813	157536
966424a90b5f22fbc46c7d403e943e59b4af7c72	states on eq-algebras		The notion of state is an analogue to probability measure and it has been studied for different types of structures such as MV -algebras, BL-algebras and BCK algebra. In this paper we define the notion of state on EQ-algebras which is algebraic structure of higher order fuzzy logic and we investigate some properties of them. Then we characterize representable class of state	bl (logic);fuzzy logic;linear algebra;mv-algebra;relational operator	Rajab Ali Borzooei;B. Ganji Saffar	2015	Journal of Intelligent and Fuzzy Systems	10.3233/IFS-151588	mathematical analysis;discrete mathematics;mathematics;algebra	Logic	-8.09223682039899	11.95396651670333	157979
55b71f764b4d230cade258575674507b8f11f5db	new undecidability results for properties of term rewrite systems	reachability;confluence;term rewrite system;decision problem;rewrite systems;normal form;normalization properties;term rewrite systems;decision problems	This paper is on several basic properties of term rewrite systems: reachability, joinability, uniqueness of normal forms, unique normalization, confluence, and existence of normal forms, for subclasses of rewrite systems defined by syntactic restrictions on variables. All these properties are known to be undecidable for the general class and decidable for ground (variable-free) systems. Recently, there has been impressive progress on efficient algorithms or decidability results for many of these properties. The aim of this paper is to present new results and organize existing ones to clarify further the boundary between decidability and undecidability for these properties. Another goal is to spur research towards a complete classification of these properties for subclasses defined by syntactic restrictions on variables. The proofs of the presented results may be intrinsically interesting as well due to their economy, which is partly based on improved reductions between some of the properties.	algorithm;confluence;correctness (computer science);database normalization;decision problem;linear system;map;mathematical induction;post correspondence problem;reachability;rewrite (programming);term (logic);time complexity;undecidable problem;viz: the computer game;wp symposium pro	Rakesh M. Verma	2012	Electr. Notes Theor. Comput. Sci.	10.1016/j.entcs.2012.11.012	discrete mathematics;computer science;decision problem;normalization property;mathematics;algorithm	Logic	-6.823724709090302	16.67524150440343	158288
72bbaf2fe1cd49c6199a39b30dc7c0a0c8447015	on nonelementarily equivalent pairs of fields		In [3], Keisler proves that if Q1 is a nonstandard model of the complete theory Th(Q) of (Q;+;×; 0; 1) and C1 is the algebraic closure of Q1, then (C1; Q1) is elementarily equivalent to (C;Q) where C is the algebraic closure of Q. But if Q r 1 is the real closure of Q1 and Qr the real closure of Q, then it is observed in [1] that (Q r 1; Q1) ≡(Qr ;Q). Victor Harnik asked the following question: if we have two nonstandard models Q1 and Q2 of Th(Q) are (Q r 1; Q1) and (Q r 2; Q2) elementarily equivalent? Let L be the language {0; 1;+;×} and let N be a nonstandard model of Peano Arithmetic, formulated in L. We refer to “formulas” of L meaning all the elements of N satisfying a formula F(x), naturally interpreting in the standard model N “x is the G< odel number of a formula”. Then “standard formula” means a “formula” which belongs to the standard part of N (i.e. N) and hence can be identi$ed with a real formula. We call “standard formulas with arbitrary parameters” all the “formulas” of the form G(b) where G(x) is a “formula” with one free variable with a standard G< odel number and b is an integer (standard or nonstandard).	free variables and bound variables;linear algebra;peano axioms;victor animatograph corporation	Anatole Khelif	2003	Ann. Pure Appl. Logic	10.1016/S0168-0072(02)00116-1	combinatorics;mathematics	Logic	-6.269074931105981	13.78866094129483	158434
473c1316958f4017fbe1ed11aaf34346ebf5ed9b	on hierarchical software metrics	hierarchical software metrics;software engineering programming theory;argument by induction;programming theory;axiomatic system;software metric;argument by induction programming theory hierarchical software metrics axiomatic system	The notion of a hierarchical software metric is introduced, encompassing and extending the earlier work of Fenton and Whitty and this author. It is shown that a stronger interpretation of this notion is insufficient for treating the important 'number-of-paths' metric, whereas this metric definitely falls within the range of the axiomatic system introduced herein. Finally, the technique of argument by induction over an arbitrary flowgraph decomposition is clarified and demonstrated in the new hierarchical context.	axiomatic system;mathematical induction;signal-flow graph;software metric	Ronald E. Prather	1987	Software Engineering Journal	10.1049/sej.1987.0006	axiomatic system;theoretical computer science;algorithm;software metric	SE	-9.910376790907184	11.493554181077956	158733
6ff2d5bdca2c4ca0897606bee0266cafa2a0b954	erratum to: reasoning with infinite stable models [artificial intelligence 156 (1) (2004) 75-111]	stable models;artificial intelligent	Theorem 16 in [Piero A. Bonatti, Reasoning with infinite stable models, Artificial Intelligence 156 (1) (2004) 75-111] states that ground skeptical and credulous inferences under the stable model semantics are decidable when the given normal logic program is finitary. Giovanni Criscuolo and Nicola Leone independently observed in personal communications that the proof of this theorem relies on an unproved assumption that-at the best of our current knowledge-might turn out to be false. In this note we correct Theorem 16 by adding the set of odd-cyclic atoms to the inputs of the computation, and argue that this change has no impact on the current applications of the theory of finitary programs.	artificial intelligence	Piero A. Bonatti	2008	Artif. Intell.	10.1016/j.artint.2008.07.002	discrete mathematics;computer science;artificial intelligence;mathematics;algorithm	AI	-10.979808252125716	13.590134694602188	159526
f28c6748633a522e32b596038a6bf02f679ece62	from lambda-calculus to universal algebra and back	church algebras;lambda calculus;stone representation theorem;lambda theories;universal algebra	We generalize to universal algebra concepts originating from lambda calculus and programming in order first to prove a new result on the lattice of λ-theories, and second a general theorem of pure universal algebra which can be seen as a meta version of the Stone Representation Theorem. The interest of a systematic study of the lattice λT of λ-theories grows out of several open problems on lambda calculus. For example, the failure of certain lattice identities in λT would imply that the problem of the orderincompleteness of lambda calculus raised by Selinger has a negative answer. In this paper we introduce the class of Church algebras (which includes all Boolean algebras, combinatory algebras, rings with unit and the term algebras of all λ-theories) to model the if-then-else instruction of programming and to extend some properties of Boolean algebras to general universal algebras. The interest of Church algebras is that each has a Boolean algebra of central elements, which play the role of the idempotent elements in rings. Central elements are the key tool to represent any Church algebra as a weak Boolean product of directly indecomposable Church algebras and to prove the meta representation theorem mentioned above. We generalize the notion of easy λ-term and prove that any Church algebra with an “easy set” of cardinality n admits (at the top) a lattice interval of congruences isomorphic to the free Boolean algebra with n generators. This theorem has the following consequence for λT : for every recursively enumerable λtheory φ and each n, there is a λ-theory φn ≥ φ such that {ψ : ψ ≥ φn} “is” the Boolean lattice with 2 elements.	boolean algebra;church encoding;combinatory logic;conditional (computer programming);idempotence;lambda calculus;patricia selinger;recursion;recursively enumerable language;recursively enumerable set;stone's representation theorem for boolean algebras	Giulio Manzonetto;Antonino Salibra	2008		10.1007/978-3-540-85238-4_39	filtered algebra;universal algebra;combinatorics;discrete mathematics;division algebra;subalgebra;tensor algebra;computer science;universal enveloping algebra;stone's representation theorem for boolean algebras;pure mathematics;jordan algebra;lambda calculus;mathematics;algebra representation;quadratic algebra;cellular algebra;interior algebra;programming language;subdirectly irreducible algebra;current algebra;algorithm;two-element boolean algebra;free boolean algebra;algebra	Logic	-6.052552392075179	15.09558121453019	159942
b70fc845cd5dbbeb199607a21af4ade4a22d1931	stack semantics of type theory		We give a model of dependent type theory with one univalent universe and propositional truncation interpreting a type as a stack, generalizing the groupoid model of type theory. As an application, we show that countable choice cannot be proved in dependent type theory with one univalent universe and propositional truncation.	delta-sigma modulation;dependent type;expect;linear algebra;nominal techniques;truncation;type theory	Thierry Coquand;Bassel Mannaa;Fabian Ruch	2017	2017 32nd Annual ACM/IEEE Symposium on Logic in Computer Science (LICS)	10.1109/LICS.2017.8005130	mathematical analysis;discrete mathematics;mathematics	Logic	-11.686234700720172	13.204428823435435	159982
a3aa694a2492ac220428a4d3e0c9591cdfc20106	on characterization, definability and ω-saturated models	modal expressivity;modal logic;important classic result;following result;definability theorem;general version;hennessy-milner property;general theory	Two important classic results about modal expressivity are the Characterization and Definability theorems. We develop a general theory for modal logics below first order (in terms of expressivity) which exposes the following result: Characterization and Definability theorems hold for every (reasonable) modal logic whose ω-saturated models have the Hennessy-Milner property. The results are presented in a general version which is relativized to classes of models.	modal logic;oracle machine	Facundo Carreiro	2011		10.1007/978-3-642-23283-1_7	modal;discrete mathematics;modal logic;expressivity;temporal logic;mathematics	Theory	-10.932603728015676	14.55499771518024	160310
ff89292729b89aaab95e5ca21ab49c0e0c063ad6	np-containment for the coherence test of assessments of conditional probability: a fuzzy logical approach	satisfiability;fuzzy logic;computational complexity;conditional probability;probability measure;many valued logic	In this paper we investigate the problem of testing the coherence of an assessment of conditional probability following a purely logical setting. In particular we will prove that the coherence of an assessment of conditional probability χ can be characterized by means of the logical consistency of a suitable theory Tχ defined on the modal-fuzzy logic FPk(R L∆) built up over the many-valued logic R L∆. Such modal-fuzzy logic was previously introduced in [11] in order to treat conditional probability by means of a list of simple probabilities following the well known (smart) ideas exposed in [18] by Halpern and in [7] by Coletti and Scozzafava. Roughly speaking, such logic is obtained by adding to the language of R L∆ a list of k modalities for “probably” and axioms reflecting the properties of simple probability measures. Moreover we proved that the satisfiability problem for modal formulas of FPk(R L∆) is NP-complete. Finally, as main result of this paper, we used FPk(R L∆) in order to prove that the problem of establishing the coherence of rational assessments of conditional probability is NP-complete.	boolean satisfiability problem;fuzzy logic;karp's 21 np-complete problems;modal logic;np-completeness;whole earth 'lectronic link	Tommaso Flaminio	2007	Arch. Math. Log.	10.1007/s00153-007-0045-3	fuzzy logic;mathematical analysis;discrete mathematics;conditional probability;probability measure;many-valued logic;computer science;regular conditional probability;mathematics;law of total probability;logical connective;computational complexity theory;algorithm;conditional probability table;algebra;satisfiability;strict conditional	AI	-10.78583268595863	12.572288177272036	160480
dd00bcbd7cd4752fbcfeece9eccbb7b93a9eefb5	types as resources for classical natural deduction		We define two resource aware typing systems for the λμ-calculus based on non-idempotent intersection and union types. The non-idempotent approach provides very simple combinatorial arguments – based on decreasing measures of type derivations – to characterize head and strongly normalizing terms. Moreover, typability provides upper bounds for the length of head-reduction sequences and maximal reduction sequences. 1998 ACM Subject Classification F.4.1 Mathematical Logic	idempotence;lambda-mu calculus;maximal set;natural deduction;normalization property (abstract rewriting);type inference	Delia Kesner;Pierre Vial	2017		10.4230/LIPIcs.FSCD.2017.24	algorithm;mathematics;natural deduction	Logic	-9.01649592990692	16.817135437125255	161328
9d1e0fc400173a9e20219b254aeec78a9b3f5a39	a coding theoretic study of mll proof nets	algebraic combinatorics;metric space;computacion informatica;multiplicative linear logic;discrete mathematics;digital television;real world application;proof net;coding theory;ciencias basicas y experimentales;error correction;matematicas;discrete geometry;logic in computer science;error detection;grupo a;information theory	Coding theory is useful for real world applications. A notab le example is digital television. Basically, coding theory is to study a way of detecting and/or correctin g data that may be true or false. Moreover coding theory is an area of mathematics, in which there is an i nterplay between many branches of mathematics, e.g., abstract algebra, combinatorics, discrete geometry, information theory, etc. In this paper we propose a novel approach for analyzing proof nets of Multi plicative Linear Logic (MLL) by coding theory. We define families of proof structures and introduce a metric space for each family. In each family, 1. an MLL proof net is a true code element, and 2. a proof structure that is not an MLL proof net is a false (or c orrupted) code element. The definition of our metrics reflects the duality of the multi plicative connectives elegantly. In this paper we show that in the framework one error-detecting is possibl e but one error-correcting not. Our proof of the impossibility of one error-correcting is interestin g in the sense that a proof theoretic property is proved using a graph theoretic argument. In addition, we sho w t at affine logic and MLL + MIX are not appropriate for this framework. That explains why MLL is bet ter than such similar logics.	coding theory;error detection and correction;graph theory;information theory;linear logic;logical connective;mix;mechwarrior: living legends;sensor	Satoshi Matsuoka	2012	Mathematical Structures in Computer Science	10.1017/S0960129511000582	discrete geometry;direct proof;combinatorics;discrete mathematics;error detection and correction;information theory;computer science;mathematics;proof complexity;algebraic combinatorics	Theory	-7.126805825169177	11.721551391451944	161474
07c82fae545c9468efc741102a8b7650471233c0	axiomatizing prefix iteration with silent steps	atomic action;semantica formal;language theory;complete axiomatization;teoria lenguaje;formal semantics;algorithme;semantique formelle;algorithms;completitud;completeness;completude;theorie langage;equational logic	Prefix iteration is a variation on the original binary version of the Kleene star operation P Q, obtained by restricting the first argument to be an atomic action. The interaction of prefix iteration with silent steps is studied in the setting of Milner’s basic CCS. Complete equational axiomatizations are given for four notions of behavioural congruence over basic CCS with prefix iteration, viz. branching congruence, η-congruence, delay congruence and weak congruence. The completeness proofs for η-, delay, and weak congruence are obtained by reduction to the completeness theorem for branching congruence. It is also argued that the use of the completeness result for branching congruence in obtaining the completeness result for weak congruence leads to a considerable simplification with respect to the only direct proof presented in the literature. The preliminaries and the completeness proofs focus on open terms, i.e., terms that may contain process variables. As a byproduct, the ω-completeness of the axiomatizations is obtained as well as their completeness for closed terms. AMS Subject Classification (1991): 68Q10, 68Q40, 68Q55. CR Subject Classification (1991): D.3.1, F.1.2, F.3.2.	congruence of squares;iterated function;iteration;kleene star;level of detail;linearizability;vhdl-ams;viz: the computer game	Luca Aceto;Rob J. van Glabbeek;Wan Fokkink;Anna Ingólfsdóttir	1996	Inf. Comput.	10.1006/inco.1996.0047	discrete mathematics;equational logic;completeness;computer science;philosophy of language;formal semantics;mathematics;programming language;algorithm;algebra	Logic	-10.580661038243312	17.747108159025537	161694
4732716007cbbb3e1d6cfae0a8435c7d3ff1dbb8	categorical abstract algebraic logic: gentzen pi -institutions and the deduction-detachment property	algebraic logic;leibniz operator;category of theories;algebraizable institutions;abstract algebraic logic;equivalent institutions;gentzen institutions;equivalent deductive systems;deduction detachment theorem;lattice of theories;algebraizable logics;gentzen systems;metalogical properties	Given a π-institution I, a hierarchy of π-institutions I(n) is constructed, for n ≥ 1. We call I(n) the n-th order counterpart of I. The second-order counterpart of a deductive π-institution is a Gentzen π-institution, i. e. a π-institution associated with a structural Gentzen system in a canonical way. So, by analogy, the second order counterpart I(2) of I is also called the “Gentzenization” of I. In the main result of the paper, it is shown that I is strongly Gentzen, i. e. it is deductively equivalent to its Gentzenization via a special deductive equivalence, if and only if it has the deduction-detachment property.	linear algebra;natural deduction;sequent calculus;turing completeness	George Voutsadakis	2005	Math. Log. Q.	10.1002/malq.200310132	algebraic logic;mathematical analysis;discrete mathematics;gentzen's consistency proof;mathematics;abstract algebraic logic;algorithm;algebra	DB	-9.025872914920077	14.16434860439043	162414
40db07221b99bb3e182b70d0094a71c455a76a0c	the skolem-löwenheim theorem in toposes. ii		This paper is a continuation of the investigation from [13]. The main theorem states that the general and the existential quantifiers are (χ, λ-reducible in some Grothendieck toposes. Using this result and Theorems 4.1, 4.2 [13] we get the downward Skolem-Lowenheim theorem for semantics in these toposes.		Marek W. Zawadowski	1985	Studia Logica	10.1007/BF00370808	discrete mathematics;topology;mathematics;algebra	Logic	-10.18808126290352	13.517159281528928	162483
11196b743eb00303387ff5d5aa4704765c8ebef1	logics of metric spaces	liverpool;metric space;spatial reasoning;complete metric space;repository;expressive power;first order;expressive completeness;university;metric spaces;decidability	We investigate the expressive power and computational properties of two different types of languages intended for speaking about distances. First, we consider a first-order language FM the two-variable fragment of which turns out to be undecidable in the class of distance spaces validating the triangular inequality as well as in the class of all metric spaces. Yet, this two-variable fragment is decidable in various weaker classes of distance spaces. Second, we introduce a variable-free modal language MS that, when interpreted in metric spaces, has the same expressive power as the two-variable fragment of FM. We determine natural and expressive fragments of MS which are decidable in various classes of distance spaces validating the triangular inequality, in particular, the class of all metric spaces.	algorithm;computation;computational complexity theory;decision problem;expressive power (computer science);fm broadcasting;first-order logic;first-order predicate;graph coloring;knowledge representation and reasoning;long division;modal logic;nexptime;numerical analysis;social inequality;two-variable logic;undecidable problem	Oliver Kutz;Frank Wolter;Holger Sturm;Nobu-Yuki Suzuki;Michael Zakharyaschev	2003	ACM Trans. Comput. Log.	10.1145/635499.635504	convex metric space;combinatorics;discrete mathematics;injective metric space;topology;product metric;metric;metric space;ultrametric space;mathematics;t-norm;equivalence of metrics;programming language;fréchet space;uniform continuity;metric map	Logic	-10.579602088058376	13.816400900420902	162567
9f2ef00ceb33fc6032cf061bd54a6edcfce2f878	systems of combinatory logic related to quine's 'new foundations'	logical relation;theorie types;sistema;logique combinatoire;teoria tipos;new foundations;individu;consistencia;combinatory logic;logica combinatoria;system;type theory;consistance;interpretabilite;systeme;consistency	Holmes, M.R., Systems of combinatory logic related to Quine’s ‘New Foundations’, Annals of Pure and Applied Logic 53 (1991) 103-133. Systems TRC and TRCU of illative combinatory logic are introduced and shown to be equivalent in consistency strength and expressive power to Quine’s set theory ‘New Foundations’ (NF) and the fragment NFU + Infinity of NF described by Jensen, respectively. Jensen demonstrated the consistency of NFU + Infinity relative to ZFC; the question of the consistency of NF remains open. TRC and TRCU are presented here as classical first-order theories, although they can be presented as equational theories; they are not constructive. Part 0. General introduction In this paper, we work with two systems of untyped illative combinatory logic, first introduced in the author’s thesis [9], one of which is provably consistent relative to the usual set theory and one of which is consistent if and only if Quine’s set theory ‘New Foundations’ (introduced in [16]; the axioms of NF are . stated in Part 1 below) is consistent. The consistency of ‘New Foundations’ remains an open problem ([2] is a discussion of this problem with a bibliography). We call these systems TRC (for ‘type-respecting combinators’) and TRCU (for ‘TRC with ur-elements’). Atomic terms of TRC are Abst, Eq, pl, p2 and variables. If f and g are terms of TRC, f(g), (f, g), and Qfl are terms of TRCthese constructions are intended to represent function application, ordered pairing, and the formation of constant functions, respectively. We always write f(g, h) instead of f((g, h)), and we write nK[f] for the result of 12 applications of the constant function construction to J We define Id as (pl, p2). The axioms of TRC are the axioms of 01~~0072/91/$03.50	combinatory logic;constant function;first-order predicate;jensen's inequality;new foundations;quine (computing);zermelo–fraenkel set theory	M. Randall Holmes	1991	Ann. Pure Appl. Logic	10.1016/0168-0072(91)90052-N	combinatory logic;calculus;system;mathematics;consistency;programming language;new foundations;type theory;algorithm	Logic	-9.775505602851595	12.096324747418139	162788
af269524f2dd369973f40e15b3172deeaf6469d1	"""many-valued logics inside λ-calculus: church's rescue of russell with b{\""""}ohm trees"""		We extend the Church encoding of the Booleans and two-valued Boolean Logic in λ-calculus to encodings of n-valued sequential propositional logic (for 3 ≤ n ≤ 5) in well-chosen infinitary extensions in λ-calculus. In case of three-valued logic we use the infinitary extension of the finite lambda calculus in which all terms have a unique normal form in which their Böhm tree can be recognised. The construction can be refined for n ∈ {4, 5}. The three n-valued logics so obtained are variants of McCarthy’s left-sequential three-valued proposition calculus. The four-valued logic has been described by Bergstra. The five-valued logic seems new, but closely related to a five-valued logic proposed by Bergstra and Ponse in the context of Process Algebras. The encodings of these n-valued logics are of interest because they can be used to calculate the truth values of infinite closed propositions. With a novel application of McCarthy’s three-valued logic we can now resolve Russell’s paradox. We make the speculation that Church could have found a similar encoding of three-valued logic in own λI-calculus, because of the simplifying fact that Böhm trees are always finite in λI-calculus. 1998 ACM Subject Classification F.4.1 [Mathematical Logic]: lambda calculus and related systems	boolean algebra;böhm tree;church encoding;four-valued logic;lambda calculus;logical connective;propositional calculus;three-valued logic	Fer-Jan de Vries	2018	CoRR			Logic	-11.166358641367076	13.969953438921785	162841
6635ddb4ddd16f6024f3c357497b8e375720488f	a theorem for deriving consequences of the axiom of choice	axiom of choice			Francis J. Tytus	1967	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1094068841	urelement;zermelo–fraenkel set theory;axiom schema;kripke–platek set theory;axiom of extensionality;mathematical analysis;discrete mathematics;choice function;morse–kelley set theory;axiom independence;action axiom;axiom of projective determinacy;general set theory;non-well-founded set theory;scott's trick;reverse mathematics;well-ordering theorem;continuum hypothesis;mathematics;axiom of choice;s;constructive set theory;algebra	EDA	-8.012814421682597	11.974606785816745	163021
3d0a4734866c606526069372e266dbd817a7ae4e	basic model theory of xpath on data trees		We investigate model theoretic properties of XPath with data (in)equality tests over the class of data trees, i.e., the class of trees where each node contains a label from a finite alphabet and a data value from an infinite domain. We provide notions of (bi)simulations for XPath logics containing the child, descendant, parent and ancestor axes to navigate the tree. We show that these notions precisely characterize the equivalence relation associated with each logic. We study formula complexity measures consisting of the number of nested axes and nested subformulas in a formula; these notions are akin to the notion of quantifier rank in first-order logic. We show characterization results for fine grained notions of equivalence and (bi)simulation that take into account these complexity measures. We also prove that positive fragments of these logics correspond to the formulas preserved under (non-symmetric) simulations. We show that the logic including the child axis is equivalent to the fragment of first-order logic invariant under the corresponding notion of bisimulation. If upward navigation is allowed the characterization fails but a weaker result can still be established. These results hold over the class of possibly infinite data trees and over the class of finite data trees. Besides their intrinsic theoretical value, we argue that bisimulations are useful tools to prove (non)expressivity results for the logics studied here, and we substantiate this claim with examples.	apache axis;bisimulation;first-order logic;first-order predicate;quantifier (logic);quantifier rank;simulation;theory;tree (data structure);turing completeness;xpath	Diego Figueira;Santiago Figueira;Carlos Areces	2014		10.5441/002/icdt.2014.09	combinatorics;discrete mathematics;database;mathematics;programming language;algorithm	Logic	-7.266157187572681	14.018977683181856	163091
c34b7519e3b8d1f6da77b48ae99f9cb01b1902e1	expansions of mso by cardinality relations		We study expansions of the Weak Monadic Second Order theory of (N, <) by cardinality relations, which are predicates R(X1, . . . , Xn) whose truth value depends only on the cardinality of the sets X1, . . . , Xn. We first provide a (definable) criterion for definability of a cardinality relation in (N, <), and use it to prove that for every cardinality relation R which is not definable in (N, <), there exists a unary cardinality relation that is definable in (N, <,R) and not in (N, <). These results resemble Muchnik and Michaux-Villemaire theorems for Presburger Arithmetic. We prove then that + and × are definable in (N, <,R) for every cardinality relation R which is not definable in (N, <). This implies undecidability of the WMSO theory of (N, <,R). We also consider the related satisfiability problem for the class of finite orderings, namely the question whether an MSO sentence in the language {<,R} admits a finite model M where < is interpreted as a linear ordering, and R as the restriction of some (fixed) cardinality relation to the domain of M . We prove that this problem is undecidable for every cardinality relation R which is not definable in (N, <).	boolean satisfiability problem;eisenstein's criterion;model m keyboard;presburger arithmetic;unary operation;undecidable problem	Alexis Bès	2013	Logical Methods in Computer Science	10.2168/LMCS-9(4:18)2013	cardinality;combinatorics;discrete mathematics;mathematics;algorithm	Logic	-7.2710888727124185	15.546074640747964	163166
3258da4b5adaf7d20a8b66ef46fbbb09ff5ed648	a tableau for set-satisfiability for extended fuzzy logic bl		This paper presents a tableau calculus for finding a model for a set-satisfiable finite set of formulas of a fuzzy logic BL △∼ , a fuzzy logic BL with additional Baaz connective △ and the involutive negation ∼, if such a model exists. The calculus is a generalisation of a tableau calculus for BL, which is based on the decomposition theorem for a continuous t-norm. The aforementioned tableau calculus for BL is used to prove that a formula ψ of BL is valid with respect to all continuous t-norms or to find a continuous t-norm ⋆ and assignment V of propositional atoms to [0,1] such that ⋆-evaluation V⋆(ψ) < 1. The tableau calculus presented in this paper enables for a finite set of formulas Ψ of BL △∼ and K ⊆ [0, 1] to find a continuous t-norm ⋆ and assignment V of propositional atoms to [0,1] such that ⋆-evaluation V⋆(ψ) ∈ K for all ψ ∈ Ψ , or alternatively to show that such a model does not exist.	bl (logic);fuzzy logic;logical connective;method of analytic tableaux;t-norm	Agnieszka Kulacka	2014	CoRR		discrete mathematics;mathematics;algorithm	AI	-11.17810555150718	13.461128954239928	163213
5e8cea94d623ec3d3b3f9cb2f6cec41f47054efe	a proof of moessner's theorem by coinduction		We present a coinductive proof of Moessner’s theorem. This theorem describes the construction of the stream (1,2,3, . . .) (for n ≥ 1) out of the stream of positive natural numbers by repeatedly dropping and summing elements. Our formalisation consists of a direct translation of the operational description of Moessner’s procedure into the equivalence of—in essence—two functional programs. Our proof fully exploits the circularity that is implicitly present in Moessner’s procedure, and it is more elementary than existing proofs. As such, it serves as a non-trivial illustration of the relevance and power of coinduction.	coinduction;operational definition;relevance;turing completeness	Milad Niqui;Jan J. M. M. Rutten	2011	Higher-Order and Symbolic Computation	10.1007/s10990-012-9082-7	discrete mathematics;mathematics;algorithm	Logic	-10.779355024857773	18.011934438328204	163670
d14b7c17c941565c0a6518153d77f0037f158a02	the complete extensions of the monadic second order theory of countable ordinals	monadic second order	Let MT[co] be the Monadic second order Theory of Countable Ordinals. Thus MT[co] has individual variables and set variables, both quantifiable. The only primitive is the symbol u003c for the order relation. Call this language ℒ. The true sentences of MT[co] are those of ℒ which hold in all countable ordinals. Here “countable ordinal” refers to models of set theory, say Zermelo-Fraenkel, plus the axiom of choice. (For details compare the appendix, Section 7). From MT[co] we get ET[co], the Elementary Theory of Countable Ordinals, by cancelling the set variables. Let ℒ 0 be the language of ET[co]. Occasionally we will consider the Weak monadic second order Theory of Countable Ordinals, WT[co]. which has the same language as MT[co], but the set variables are interpreted as ranging over finite sets only. Both ET[co] and WT[co] are the same as the corresponding theories of all ordinals (see proposition 1.5 below). Finally, let MT[α] be the monadic second order theory of the ordinal α.		J. Richard Büchi;Dirk Siefkes	1983	Math. Log. Q.	10.1002/malq.19830290502	combinatorics;discrete mathematics;mathematics;monadic predicate calculus;algebra	Logic	-6.339542220883454	14.001547392217745	164003
0d54e25ecb60e981973cf5fc481c20a76bea707e	the relation reflection scheme	mathematics;coinductive definitions;ciencias basicas y experimentales;matematicas;grupo a;dependent choices;constructive set theory	In this paper we introduce a new axiom scheme, the Relation Reflection Scheme (RRS), for constructive set theory. Constructive set theory is an extensional set theoretical setting for constructive mathematics. A formal system for constructive set theory was first introduced by Myhill in [8]. In [1, 2, 3] I introduced a formal system CZF that is closely related to Myhill’s formal system and gave a natural interpretation of CZF and extensions of it in Martin-Löf’s constructive type theory, [7]. The axiom system CZF can be formulated in the same first order language as that of ZF, but uses intuitionistic logic rather than classical logic. But when the law of excluded middle is added the resulting classical theory has the same theorems as ZF. So, from the classical point of view, CZF does not involve any choice principle. The axiom CC of countable choice and even the stronger axiom DC of dependent choices have been accepted principles of constructive mathematics that have played an important role in the development of constructive analysis, particularly Bishop style constructive mathematics. In fact the interpretation of CZF in constructive type theory actually also gives an interpretation of each instance of the axiom scheme RDC of relative dependent choices; an axiom scheme that implies DC. So it is natural to consider allowing the free use of RDC in constructive set theory. But there are reasons for avoiding the use of any choice principles, even of CC, when possible. The Boolean-valued models of ZF generalise to Heyting-valued models of CZF. More precisely, in CZF, given a set-presented frame, which will form a complete Heyting algebra, Ω, there is a natural Ω-valued model construction that gives a reinterpretation of CZF, [5, 6], and, in general, these reinterpretations do not	axiomatic system;first-order logic;formal system;intuitionistic logic;intuitionistic type theory;research diagnostic criteria;zermelo–fraenkel set theory	Peter Aczel	2008	Math. Log. Q.	10.1002/malq.200710035	urelement;zermelo–fraenkel set theory;mathematical analysis;discrete mathematics;topology;computer science;pure mathematics;mathematics;axiom of choice;algorithm;constructive set theory;algebra	Theory	-9.777869559356086	12.831930148729965	164082
081f9dfa3aad2bbb78ed70b30f685042b05e191e	definability by horn formulas and linear time on cellular automata		We establish an exact logical characterization of linear time complexity of cellular automata of dimension d, for any fixed d: a set of pictures of dimension d belongs to this complexity class iff it is definable in existential second-order logic restricted to monotonic Horn formulas with built-in successor function and d+1 first-order variables. This logical characterization is optimal modulo an open problem in parallel complexity. Furthermore, its proof provides a systematic method for transforming an inductive formula defining some problem into a cellular automaton that computes it in linear time. 1998 ACM Subject Classification F.1.1 Models of Computation, F.1.3 Complexity Measures and Classes, F.4.1 Mathematical Logic, F.4.3 Formal Languages.	automata theory;canonical account;cellular automaton;complexity class;computation;descriptive complexity theory;first-order predicate;horn clause;modulo operation;successor function;time complexity	Nicolas Bacquey;Etienne Grandjean;Frédéric Olive	2017		10.4230/LIPIcs.ICALP.2017.99	time complexity;combinatorics;discrete mathematics;computer science;mathematics;programming language;logic programming;information extraction;second-order logic;regular expression;algorithm;descriptive complexity theory	Theory	-6.259731953917315	17.32081077173886	164291
47f57a8ebdda9d164d06e7a0b8a093e7391b2fa8	fuzzy partial groups	fuzzy groups;semilattices;partial groups;partial monoids	Abstract   The fuzzification of partial monoids and partial groups has introduced in a little different way than that one usually found. The notion of the  T -partial monoid on  I  has been investigated and is used to define different membership values for the partial identities, which is consistent with the hall spirit of the fuzzification. This is, in fact, the motivation of this paper. Examples have been given to get the generalization reasonable. In fact, the basic results of fuzzy groups and fuzzy monoids has been generalised.	fuzzy set	A. M. Abd-Allah;R. A. K. Omar	1996	Fuzzy Sets and Systems	10.1016/0165-0114(95)00233-2	combinatorics;discrete mathematics;mathematics;monoid;algebra	Logic	-6.914009674772743	12.455088385949848	164588
578af98e118b16e2d159b77e804f9d88a491eb13	a little blocked literal goes a long way		Q-resolution is a generalization of propositional resolution that provides the theoretical foundation for search-based solvers of quantified Boolean formulas (QBFs). Recently, it has been shown that an extension of Q-resolution, called long-distance resolution, is remarkably powerful both in theory and in practice. However, it was unknown how long-distance resolution is related to (mathsf {QRAT}), a proof system introduced for certifying the correctness of QBF-preprocessing techniques. We show that (mathsf {QRAT}) polynomially simulates long-distance resolution. Two simple rules of (mathsf {QRAT}) are crucial for our simulation—blocked-literal addition and blocked-literal elimination. Based on the simulation, we implemented a tool that transforms long-distance-resolution proofs into (mathsf {QRAT}) proofs. In a case study, we compare long-distance-resolution proofs of the well-known Kleine Buning formulas with corresponding (mathsf {QRAT}) proofs.	correctness (computer science);letter-quality printer;literal (mathematical logic);preprocessor;proof calculus;simulation;true quantified boolean formula	Benjamin Kiesl;Marijn Heule;Martina Seidl	2017		10.1007/978-3-319-66263-3_18	discrete mathematics;combinatorics;correctness;mathematical proof;computer science	AI	-10.100196642990879	16.283113129189992	164609
2c394d1cc48f1f36a577585df18f2205d381ef6b	cyclic multiplicative-additive proof nets of linear logic with an application to language parsing		This paper concerns a logical approach to natural language parsing based on proof nets (PNs), i.e. de-sequentialized proofs, of linear logic (LL). It first provides a syntax for proof structures (PSs) of the cyclic multiplicative and additive fragment of linear logic (CyMALL). A PS is an oriented graph, weighted by boolean monomial weights, whose conclusions Γ are endowed with a cyclic order σ. Roughly, a PS π with conclusions σ(Γ ) is correct (so, it is a proof net), if any slice φ(π), obtained by a boolean valuation φ of π, is a multiplicative (CyMLL) PN with conclusions σ(Γr), where Γr is an additive resolution of Γ , i.e. a choice of an additive subformula for each formula of Γ . The correctness criterion for CyMLL PNs can be considered as the non-commutative counterpart of the famous Danos-Regnier (DR) criterion for PNs of the pure multiplicative fragment (MLL) of LL. The main intuition relies on the fact that any DR-switching (i.e. any correction or test graph for a given PN) can be naturally viewed as a seaweed, that is, a rootless planar tree inducing a cyclic order on the conclusions of the given PN. Unlike the most part of current syntaxes for non-commutative PNs, our syntax allows a sequentialization for the full class of CyMALL PNs, without requiring these latter to be cut-free. One of the main contributions of this paper is to provide a characterization of CyMALL PNs for the additive Lambek Calculus and thus a geometrical (non inductive) way to parse sentences containing words with syntactical ambiguity (i.e., with polymorphic type).	additive model;categorial grammar;correctness (computer science);eisenstein's criterion;graph (discrete mathematics);interpretation (logic);ll parser;linear logic;mechwarrior: living legends;monomial;orientation (graph theory);parsing;utility functions on indivisible goods;value (ethics);well-formed formula	V. Michele Abrusci;Roberto Maieli	2015		10.1007/978-3-662-53042-9_3	natural language processing;geometry of interaction;top-down parsing language;bottom-up parsing;mathematics;programming language;algorithm	Logic	-8.87174105498464	15.648325152256811	164695
88b63c9748a7675b8d06ed71347c9e78985ea40f	collections, sets and types	simple type theory;relativizing quantifiers;predicate subtyping;typing predicate	"""We give a rst order formulation of Church's type theory in which types are mere sets. This formulation is obtained by replacing -calculus by a language of combinators (skolemized comprehension schemes), introducing a distinction between propositions and their contents, relativizing quanti ers and at last replacing typing predicates by membership to some sets. The theory obtained this way has both a type theoretical avor and a set theoretical one. Like set theory, it is a rst order theory, and it uses only one notion of collection. Like type theory, it gives an explicit notation for objects, a primitive notion of function and propositions are objects. Key-words: type, set, type theory, set theory (R esum e : tsvp) Gilles.Dowek@inria.fr Unit e de recherche INRIA Rocquencourt Domaine de Voluceau, Rocquencourt, BP 105, 78153 LE CHESNAY Cedex (France) T el ephone : (33 1) 39 63 55 11 { T el ecopie : (33 1) 39 63 53 30 Collections, ensembles et types R esum e : Nous donnons une formulation au premier ordre de la th eorie des types de Church, dans laquelle les types sont des ensembles ordinaires. Cette formulation est obtenue en rempla cant le -calcul par un langage de combinateurs (sch emas de compr ehension skol emis e), en introduisant une distinction entre les propositions et leurs contenus, en relativisant les quanti cateurs et en n en rempla cant les pr edicats de typage par l'appartenance a des ensembles. La th eorie ainsi obtenue pr esente a la fois des aspects de th eorie des types et des aspects de th eorie des ensembles. Comme la th eorie des ensembles, c'est une th eorie du premier ordre et elle repose sur une unique notion de collection. Comme la th eorie des types, elle fournit une notation explicite pour les objets, une notion primitive de fonction et les propositions sont des objets. Mots-cl e : type, ensemble, th eorie des types, th eorie des ensembles Collections, sets and types 3 Introduction A set is a collection of objects de ned by a characteristic property of its elements, for instance \the set of natural numbers lower than or equal to 3"""". At a rst glance, a type is also a collection of objects de ned by a characteristic property of its elements, for instance \the type of natural numbers"""". A di erence between the notions of set and type lies in the fact that a given object usually belongs to only one type while it may belong to several sets. For instance, the type of 0 is nat (the type of natural numbers) while 0 belongs to several sets fx j x 3g, fx j x = 0g, fx j 9y x = 2 yg, etc. Also the fact that a given object belongs to a type is often a decidable judgement, while the fact that a given object belongs to a set is usually not. At last, the type of an expression restricts its use. For instance, as 0 has type nat and true has type bool, the proposition 0 0 is well-formed and the proposition true true is not. Thus a postulate underlying the use of (simply) typed languages is that among all the properties veri ed by an object, a single one, its type, determines the uses of this object. In many situations this postulate seems to be too restrictive. For instance, the expression pa is de ned when a is a positive real number and 1=a is de ned when a is non zero complex number. Thus more liberal type disciplines have been designed (overloading, polymorphism, subtyping, etc.) For instance, we may consider the types complex, real, non-zero and positive, non-zero and real being subtypes of complex and positive being a subtype of real. When such extensions are considered, unicity of type is lost and decidability sometimes also. Moreover there seems to be very few di erences between the judgement \1 belongs to the type positive"""" and the proposition \1 2 R+"""". There is a conceptual di culty to explain why type and set are two distinct notions and it seems that types should be mere sets. This advocates for founding mathematics on a theory with a single notion of collection, such as set theory, rather than one with two distinct notions, such as type theory. Another reason advocating for set theory are that it is a rst order theory while type theory is not. At last, for abstract mathematics set theory is better suited than type theory. If we develop, for instance, results about groups in type theory, we cannot apply these results both to the group of integers and to the group of bijective functions mapping integers to integers, because when we develop these results, we need to give a xed type to the elements of the group. This problem is usually solved by using \typical ambiguity"""" i.e. more or less type variables. However, in some situations, type theory is better suited than set theory. For instance, proofs-as-objects interpretations are always developed in typed languages [8, 34, 21, 22, 12]. Also when one is interested in expressing computations as rewrite rules on the expressions of the language, type theories seem better suited than set theories [34, 21, 22, 12]. At last automated theorem proving methods have been developed for type theory [3, 28, 29] and very rarely for set theory. Several reasons explain these success of type theory. (1) Type theory provides an explicit notation for objects ( -calculus) while set theory merely provides axioms expressing the existence of some objects. (2) Functions are primitive objects in type theory and the object obtained by applying a function to some object has a notation, while it has not in set theory as functions are coded as relations. (3) Meaningless statements such as 1 2 0 are forbidden by the syntax of type theory but not by the one of set theory. (4) Typing judgements are decidable in type theory (this fact is used in the functional interpretation of proofs, as proofs judgements must be decidable). (5) Propositions are objects in type theory and not in set theory (with the exception of Morse's set theory [39]). We give in this paper a rst order formulation of Church's theory of types where types are mere sets. This theory is obtained by rst considering a formulation with combinators (skolemized comprehension schemes) instead of -calculus [14], introducing a distinction between propositions and their contents, relativizing quanti ers as in [20, 15, 42] and at last replacing the typing predicates by belongness to some sets. The theory obtained this way has both a type theoretical and a set theoretical avor. Like set theory, there is only one notion of collection, the theory is expressed in a rst order setting and typical ambiguity is not required. Like type theory, it provides an explicit notation for objects, functions are primitive objects and propositions are objects. The decidability of typing judgements can be seen as the decidability of a fragment of the language. The formation of meaningless propositions is not yet forbidden as this requirement RR n 2708 4 Gilles Dowek is incompatible with the expression in a rst order setting, we suggest at the end of the paper an extension of rst order logic that would allow to forbid the formation of these propositions. This formulation permits to simplify the proofs of Henkin's completeness theorem and of a variant of Miller's higher order skolemization theorem. 1 Typed rst order logic 1.1 Syntax De nition A typed rst order language (see [20] for a detailed presentation) is given by a denumerable collection T of types, for each type T of T , a denumerably in nite collection VT of variables, such that if T 6= U then VT and VU are disjoint, a denumerable collection of function symbols, to each function symbol f is associated an element of T n+1 (n 0) called its rank, a denumerable collection of predicate symbols, to each predicate symbol P is associated an element of T n (n 0) called its rank. De nition Terms of type T are inductively de ned as variables of VT are terms of type T , if f is a function symbol of rank (T1; :::; Tn; Tn+1) and t1, ..., tn are terms of type T1; :::; Tn then (f t1 ::: tn) is a term of type Tn+1. De nition Propositions is inductively de ned as if P is a predicate symbol of rank (T1; :::; Tn) and t1, ..., tn are terms of type T1; :::; Tn then (P t1 ::: tn) is a proposition, >, ? are propositions (resp. truth and falsehood), if A is a proposition then :A is a proposition, if A and B are propositions then A ^B, A _ B, A) B, A, B are propositions, if A is a proposition and x a variable then 8x A and 9x A are propositions. 1.2 Proofs Proof rules for typed rst order logic are the same as the ones for rst order logic, with an extra side condition for quanti ers rules, that a variable of type T can only be substituted by a term of type T . Natural deduction, sequent calculus and Frege-Hilbert systems can be used. We give below a formulation of natural deduction. As usual substitution is de ned in such a way that variable captures are avoided. De nition (Substitution) x[x b] = b, y[x b] = y, Inria Collections, sets and types 5 (f c1 ::: cn)[x b] = (f c1[x b] ::: cn[x b]), (P c1 ::: cn)[x b] = (P c1[x b] ::: cn[x b]), >[x b] = >, ?[x b] = ?, (:A)[x b] = :(A[x b]), (A ^B)[x b] = (A[x b]) ^ (B[x b]), (A _ B)[x b] = (A[x b]) _ (B[x b]), (A) B)[x b] = (A[x b])) (B[x b]), (A, B)[x b] = (A[x b]), (B[x b]), (8y A)[x b] = 8z (A[y z][x b]) where z is a fresh variable, i.e. a variable not occurring in 8x A or b, (9y A)[x b] = 9z (A[y z][x b]) where z is a fresh variable, i.e. a variable not occurring in 9x A or b. De nition (Proof rules) A 2 axiom ` A A ` B ) -intro ` A) B ` A) B ` A) -elim ` B A ` B B ` A, -intro ` A, B ` A, B ` A, -elim ` B ` A, B ` B , -elim ` A ` A ` B ^-intro ` A ^ B ` A ^ B ^-elim ` A ` A ^ B ^-elim ` B ` A _-intro ` A _ B ` B _-intro ` A _ B ` A _ B A ` C B ` C _-elim ` C A ` ? :-intro ` :A ` A ` :A :-elim ` ? RR n 2708 6 Gilles Dowek >-intro ` > ` ? ?-elim ` A ` A 8-intro x not free in ` 8x A ` 8x A 8-elim x and t have the same type ` A[x t] ` A[x t] 9-intro x and t have the same type ` 9x A ` 9x A A ` B 9-elim x not free in B or in ` B classic ` A _ :A where is a nite set of proposi"""	ambiguity function;automated theorem proving;bibliothèque des ecoles françaises d'athènes et de rome;combinatory logic;computation;frege;hilbert system;linear algebra;natural deduction;network address translation;predicate variable;r language;rapid refresh;rewrite (programming);rewriting;sequent calculus;set theory;skolem normal form;type theory;typing;unicity distance;well-formed formula	Gilles Dowek	1999	Mathematical Structures in Computer Science		set;effective descriptive set theory;discrete mathematics;family of sets;computer science;mathematics;programming language;type;type theory;algorithm;set theory	Logic	-9.748553667441088	12.744373595899468	164800
cb86e8b41f97058fc87b54889ef594c446e0f946	cut-formulas in propositional logic	resolution;logique propositionnelle;logical programming;coupure;programming theory;programmation logique;propositional logic;cut;theorie programmation;logica proposicional;programacion logica	Cut formulas in propositional logic can speed up some proofs exponentially [S] (a cut-free system is used as reference when we talk about speed-ups); it is hence important to study proof systems with cut, types of cut formulas (atomic cuts versus general cuts) and also relations between cut and techniques which may speed up proofs. in Section 2, we try to explain the importance of atomic cut formulas. We study the resolution principle [3] and analysis trees [4] with atomic cut and conjecture that there are proofs by analysis trees with atomic cuts and refutations by resolution, such that transferring them to cut-free proofs will cause exponential increase of the proof length. We also study unit resolution and conclude that transferring refutations by unit resolution to cut-free proofs does not cause exponential increase of the proof length. In Section 3, we discuss using definitions in analysis trees and in resolution. We conclude that it corresponds to using abbreviations in analysis trees and to adding possibilities to use more complicated cut formulas in resolution.	propositional calculus;resolution (logic);time complexity	Wenhui Zhang	1993	Theor. Comput. Sci.	10.1016/0304-3975(93)90249-S	combinatorics;discrete mathematics;resolution;cut;mathematics;propositional calculus;algorithm	Logic	-8.900650297031103	17.520610640516256	164877
4562ae70e137477c9a0003d6b55912278327e844	on expansions of wnm t-norm based logics with truth-constants	fuzzy set;procesamiento informacion;semantics;conjunto difuso;ensemble flou;satisfiability;semantica;semantique;03b05;particion;information processing;weak nilpotent minimum logics wnm;partition;completitud;completeness results;sistema difuso;monoidal t norm based logic mtl;rational t norm based logic;systeme flou;completeness;traitement information;completude;nilpotent minimum logic nm;fuzzy system	This paper focuses on completeness results about generic expansions of propositional Weak Nilpotent Minimum (WNM) logics with truth-constants. Indeed, we consider algebraic semantics for expansions of these logics with a set of truth-constants {r | r ∈ C}, for a suitable countable C ⊆ [0, 1], and provide a full description of completeness results when (i) the t-norm is a Weak Nilpotent Minimum satisfying the finite partition property and (ii) the set of truth-constants covers all the unit interval in the sense that each interval of the partition contains values of C in its interior.	algebraic semantics (computer science);computational complexity theory;t-norm fuzzy logics	Francesc Esteva;Lluis Godo;Carles Noguera	2010	Fuzzy Sets and Systems	10.1016/j.fss.2009.09.002	partition;combinatorics;discrete mathematics;information processing;completeness;computer science;artificial intelligence;mathematics;semantics;fuzzy set;fuzzy control system;satisfiability	Logic	-10.673368159927591	11.39409787792646	165215
0e683570720cf768229b8fc781d4cabf8ec14a29	toward isomorphism of intersection and union types		This paper investigates type isomorphism in a λ-calculus with intersection and union types. It is known that in λ-calculus, the isomorphism between two types is realised by a pair of terms inverse one each other. Notably, invertible terms are linear terms of a particular shape, called finite hereditary permutators. Typing properties of finite hereditary permutators are then studied in a relevant type inference system with intersection and union types for linear terms. In particular, an isomorphism preserving reduction between types is defined. Reduction of types is confluent and terminating, and induces a notion of normal form of types. The properties of normal types are a crucial step toward the complete characterisation of type isomorphism. The main results of this paper are, on one hand, the fact that two types with the same normal form are isomorphic, on the other hand, the characterisation of the isomorphism between types in normal form, modulo isomorphism of arrow types.	abstract rewriting system;beta normal form;confluence (abstract rewriting);database normalization;hereditary property;inference engine;lambda calculus;modulo operation;substructural type system;syntactic monoid;turing completeness;type inference;typing	Mario Coppo;Mariangiola Dezani-Ciancaglini;Ines Margaria;Maddalena Zacchi	2012		10.4204/EPTCS.121.5	order isomorphism;combinatorics;discrete mathematics;topology;group isomorphism;mathematics;isomorphism;antiisomorphism	PL	-8.351271356031107	15.956550214812937	165666
21597e5c3c9e1f59ee7f4d9e4ada237864c2d347	on axiomatising products of kripke frames, part ii	modal logic	We generalise some results of [7, 5] and show that if L is an α-modal logic (for some ordinal α ≥ 3) such that (i) L contains the product logic Kα and (ii) the product of α-many trees of depth one and with arbitrary large finite branching is a frame for L, then any axiomatisation of L must contain infinitely many propositional variables. As a consequence we obtain that product logics like Kα, K4, S4, GL, and Grz cannot be axiomatised using finitely many propositional variables, whenever α ≥ 3.	axiomatic system;kripke semantics;ordinal data;propositional variable	Ágnes Kurucz	2008			modal logic;zeroth-order logic;normal modal logic;discrete mathematics;philosophy;epistemology;intermediate logic;axiom s5;mathematics;propositional variable;algorithm	AI	-11.687821951712255	12.74118724977882	165777
e343990e640ca99fd1fd054d533a1d3b907b5524	commutative implications on complete lattices	implication;negation;t norm and t conorm;complete lattice;normal form of a linguistic composition	This paper is devoted to the investigation of commutative implications on a complete lattice L. It is proved that the disjunctive normal form (DNF) of a linguistic composition * is included in the conjunctive normal form (CNF) of that *, i.e., DNF(*) ≤ CNF(*) holds, for a special family of t-norms, t-conorms and negations induced by commutative implications.		Wangming Wu	1994	International Journal of Uncertainty, Fuzziness and Knowledge-Based Systems	10.1142/S0218488594000274	discrete mathematics;complete lattice;negation;mathematics;negation normal form;algorithm;algebra	Arch	-9.214728193031947	12.161178262014054	166763
d30304e7ed8af1b0d3dfd3f9408d8b4fc6ec5927	antichains for inclusion games		We study two-player games played on the infinite graph of sentential forms induced by a contextfree grammar (that comes with an ownership partitioning of the non-terminals). The winning condition is inclusion in a regular language for the terminal words derived in maximal plays. Our contribution is an algorithm to compute a finite representation of all plays starting in a non-terminal. The representation is compositional and, once obtained for the non-terminals, immediate to lift to sentential forms. The result has three consequences. It is decidable whether a position is in the winning region of a player. The winning regions have a finite representation. We can compute a winning strategy. Technically, the algorithm is a fixed-point iteration over a novel domain that generalizes the transition monoid to negation-free Boolean formulas. It takes doubly exponential time to check whether a winning strategy exists, which is proven to be the optimal time complexity. We show that this domain is not only expressive but also algorithmically appealing. It is compatible with recent antichainand subsumption-based optimizations, and admits a lazy evaluation strategy.	algorithm;exptime;fixed-point iteration;formal grammar;lazy evaluation;maximal set;regular language;semiautomaton;subsumption architecture;time complexity	Lukás Holík;Roland Meyer;Sebastian Muskalla	2016	CoRR		combinatorics;discrete mathematics;computer science;artificial intelligence;mathematics;algorithm	PL	-8.479102272435403	17.420567827220182	167437
dc46fa0b766089d5df59ecd0f9cce3e63c2d20e0	three-valued commutative pseudo-sheffer functions				Barbara Lowesmith	1981	Math. Log. Q.	10.1002/malq.19810271102	discrete mathematics;mathematics;commutative property	Logic	-11.58657182228822	11.999519326335593	167536
f499198c0bd20ba2a1bb6571ba09105c7473c336	a tractable subclass of dtds for xpath satisfiability with sibling axes	satisfiability;regular expression	The paper presents a tractable subclass of DTDs, called DC-DTDs, for XPath satisfiability with sibling axes. A DC-DTD is a DTD such that each content model is in the form of a concatenation of single tag names and Kleene-starred regular expressions. DC-DTDs are a proper subclass of covering DTDs proposed by Montazerian et al., and a proper superclass of disjunction-free DTDs. In this paper, it is shown that tractability by covering DTDs is fragile against sibling axes. Then, tractability of XPath satisfiability with sibling axes under DC-DTDs is demonstrated. Finally, as a limitation of the tractability of DC-DTDs, it is shown that upward axes appearing in qualifiers bring intractability under even disjunction-free DTDs.	xpath	Yasunori Ishihara;Takuji Morimoto;Shougo Shimizu;Kenji Hashimoto;Toru Fujiwara	2009		10.1007/978-3-642-03793-1_5	computer science;programming language;regular expression;algorithm;satisfiability	DB	-7.430117495105421	17.428897470672723	168088
84149f1f13b2fb753eeba5176788764e5f35ead1	a note on theπ20-induction rule	first order	It is well-known (due to C. Parsons) that the extension of primitive recursive arithmetic PRA by first-order predicate logic and the rule of H~ H ~ is H~ over PRA. We show that this is no longer true in the presence of function quantifiers and quantifier-free choice for numbers AC~176 More precisely we show that ~ :=PRA 2 + H ~ 1 7 6 1 7 6 proves the totality of the Ackermann function, where PRA 2 is the extension of PRA by number and function quantifiers and H ~ may contain function parameters. This is true even for PRA 2 + S ~ 1 7 6 1 7 6 1 7 6 where Hz~ is the restriction of H ~ without function parameters. Let (PRA) denote the extension of primitive recursive arithmetic obtained by adding first-order predicate logic. By the rule IR of induction we mean I R : A(O), Az(A(x) ~ A(x')) Ax A(x) where x ' denotes the successor of x. The restriction of IR to Z~ Vv Ao(x,v) (resp. to H2~ AuVv Ao(x, u, v)) is denoted by Si~ (resp. H ~ 1 . It is well-known that (PRA) is closed under H2~ This was proved first by Parsons [7],[8]. Other proofs can be found in [6] and [9]. As a consequence of this fact one has the following rule If ( P R A ) + H ~ F AxVy A0(x, y), then there exists a primitive recursive function f such that (PRA) FAx Ao(x, fx), * I am grateful to an anonymous referee whose suggestions led to an improved discussion of our results Subject Classifications: 03F30, 03F35, 03F10, 03D20 I Ao always denotes a quantifier-free formula	ackermann function;emoticon;first-order logic;first-order predicate;physical review a;primitive recursive function;quantifier (logic);recursion;well-formed formula	Ulrich Kohlenbach	1995	Arch. Math. Log.	10.1007/BF01469385	artificial intelligence;first-order logic;mathematics;programming language;algorithm	Logic	-10.146040891549369	13.321942645648415	168115
ba498eea781bf0ba69dfeb559f7617d1cb039451	curry algebras and propositional algebra c1	algebraic logic;computability;propositional algebra;contructibility;curry algebra;paraconsistent logic	In this expository paper, we illustrate some applications of the notion of Curry algebras, and its relationship with the concept of propositional algebra C1. Curry algebra was formerly introduced as a concept to study algebraic version of some non–classical systems, such as algebraic version of Da Costa's systems Cn.	curry	Jair Minoro Abe	2013	IJRIS	10.1504/IJRIS.2013.057274	algebraic logic;filtered algebra;boolean algebra;classical logic;division algebra;paraconsistent logic;combinatory logic;abstract algebra;subalgebra;term algebra;computer science;jordan algebra;algebra representation;cellular algebra;propositional variable;computability;interior algebra;abstract algebraic logic;algebra	Logic	-11.434625093736853	12.648650131876845	168145
760d293518eded095143fa7d3abc439ba5b5f5a5	model finiteness and funetionality in a declarative language with oid invention		Two important properties of IsaLog programs are studied model niteness and func tionality Finiteness refers to the property of a program of having a nite model over every input instance Functionality requires a model to contain no contradictory infor mation about object values These two properties are shown to be undecidable This is a consequence of the ability of IsaLog programs to simulate computations of arbitrary Turing machines provided their input is coded as a suitable instance Weakly recursive programs a restricted class of IsaLog programs is then investi gated It is shown that every weakly recursive program admits a nite model over every input instance Moreover models for this class of programs can be computed in polyno mial time with respect to the number of objects in the input instance	computation;declarative programming;oracle internet directory;recursion;simulation;turing machine;undecidable problem	Luca Cabibbo;Giansalvatore Mecca	1994			discrete mathematics;programming language;undecidable problem;time complexity;recursion;computation;declarative programming;fifth-generation programming language;turing machine;mathematics	Theory	-7.547775754680569	18.24114773065649	168214
32e4f71780a8db5477063a6a53d21706da7eace5	the semantics of fuzzy logics: two approaches to finite tomonoids		Fuzzy logic generalises classical logic; in addition to the latter’s truth values “false” and “true”, the former allows also intermediary truth degrees. The conjunction is, accordingly, interpreted by an operation acting on a chain, making the set of truth degrees into a totally ordered monoid. We present in this chapter two different ways of investigating this type of algebras. We restrict to the finite case.	fuzzy logic	Thomas Vetterlein;Milan Petrík	2016		10.1007/978-3-319-28808-6_6	monoidal t-norm logic;t-norm fuzzy logics;kripke semantics;operational semantics	Logic	-10.961814549106078	12.425979971392948	168843
45077628d34a7f49705ccd658d084e8fd4c75745	generic degrees are complemented		The notions of forcing and generic set were introduced by Cohen in 1963 to prove the independence of the Axiom of Choice and the Continuum Hypothesis in set theory. Let o be the set of natural numbers, i.e., (0, 1,2,3, . . .}. A string is a mapping from an initial segment of o into (0, l}. We identify a set A c w with its characteristic function. We now consider a set generic over the arithmetic sets. A set A E w is called n-generic if it is Cohen-generic for n-quantifier arithmetic. This is equivalent to saying that for every ,X:-set of strings S, there is a o cA such that o E S or (Vv Z= o)(v F# S). By degree we mean Turing degree (of unsolvability). We call a degree n-generic if it has an n-generic representative. For a degree a, let D(=%) denote the set of degrees which are recursive in a. Before Cohen’s work, there was a precursor of the notion of forcing in recursion theory. Friedberg showed that for every degree b above the complete degree 0’, i.e., the degree of a complete r.e. set, there is a degree a such that a’ = a U 0' = b. He actually proved this result by using the notion of forcing for 27 statements. In the construction of a real which satisfies some recursion-theoretic property, the notion of forcing makes the situation clear and it has become quite popular, see Lerman [8]. There is another important method in recursion theory, namely the priority method. Friedberg and Muchnik first independently invented the priority method to prove the existence of incomparable recursively enumerable degrees. The finite injury argument used there was improved by the infinite argument by Sacks, see [9]. Further, the 0”‘-priority argument was introduced by	characteristic function (convex analysis);degree (graph theory);quantifier (logic);recursion;recursively enumerable set;set theory;triune continuum paradigm;turing degree	Masahiro Kumabe	1993	Ann. Pure Appl. Logic	10.1016/0168-0072(93)90096-V	continuum hypothesis;discrete mathematics;axiom of choice;combinatorics;recursively enumerable language;turing degree;recursion;natural number;mathematics;computability theory;set theory	Theory	-5.314510926918947	14.058224690012295	169073
5c039dc7aeb650b5aca53fa0cb8e900293e35072	equational derivation vs. computation		Subrecursive hierarchy classifications are used to compare the complexities of recursive functions according to (i) their derivations in a version of Kleene's equation calculus, and (ii) their computations by term-rewriting. In each case ordinal bounds are assigned, and it turns out that the respective complexity measures are given by (i) a version of the Fast Growing Hierarchy, and (ii) the Slow Growing Hierarchy. Known comparisons between the two hierarchies then provide ordinal trade-offs between (i) derivation and (ii) computation. Characteristics of some well-known subrecursive classes are also read off.	computation	W. G. Handley;S. S. Wainer	1994	Ann. Pure Appl. Logic	10.1016/0168-0072(94)90068-X	combinatorics;discrete mathematics;mathematics;program derivation;algebra	Logic	-5.385134815994382	15.051015221260386	169160
91f2be6082b3ceb697f167b886433e62cfeb98fd	uniform proof complexity	proof complexity;length of proofs;translations;peano arithmetic;propositional calculus;bounded arithmetic;modus ponens;regularity condition	We define the notion of the uniform reduct of a propositional proof system as the set of those bounded formulas in the language of Peano Arithmetic which have polynomial size proofs under the Paris-Wilkietranslation. With respect to the arithmetic complexity of uniform reducts, we show that uniform reducts are Π1-hard and obviously in Σ2. We also show under certain regularity conditions that each uniform reduct is closed under bounded generalisation; that in the case the language includes a symbol for exponentiation, a uniform reduct is closed under modus ponens if and only if it already contains all true bounded formulas; and that each uniform reduct contains all true Π1(α)-formulas.	bounded quantifier;peano axioms;polynomial;proof calculus;proof complexity;propositional proof system	Arnold Beckmann	2005	J. Log. Comput.	10.1093/logcom/exi035	combinatorics;discrete mathematics;modus ponens;computer science;reduct;mathematics;propositional calculus;programming language;peano axioms;proof complexity;algorithm	Theory	-8.495056558237014	14.968520524639445	169303
739b7fb436b08923f5188b42c622261b90aea0f5	what is concrete equivalence?	concrete equivalence;concrete functor;monadic functors.	The notion of concrete equivalence is introduced, based on a modification of the traditional notion of concrete functor. The discussion of examples includes a direct (i.e. not referring to any monadicity theorem) proof of the fact that monadicity is stable under concrete equivalence. Mathematics Subject Classifications (1991). Primary 18A05, Secondary 18C15.	bell's theorem;turing completeness	Hans-E. Porst	1994	Applied Categorical Structures	10.1007/BF00878502	discrete mathematics;pure mathematics;mathematics	Logic	-8.80628146132818	13.30385629530944	169525
6b3669211c90392aac50abc1bb3b2d83677aa644	infinitary first-order categorical logic		"""We present a unified categorical treatment of completeness theorems for several classical and intuitionistic infinitary logics with a proposed axiomatization. This provides new completeness theorems and subsumes previous ones by G\""""odel, Kripke, Beth, Karp, Joyal, Makkai and Fourman/Grayson. As an application we prove, using large cardinals assumptions, the disjunction and existence properties for infinitary intuitionistic first-order logics."""		Christian Espíndola	2019	Ann. Pure Appl. Logic	10.1016/j.apal.2018.09.002	discrete mathematics;mathematics;algorithm	Logic	-11.320717714180578	13.39109937520677	169711
18b3b82ea9134e4f2efd5c49883208377cf8530e	connectives in quantum and other cumulative logics		The nonmonotonic logics definable by definability-preserving choice functions that satisfy Coherence have been studied in [7]. Larger families correspond to weakenings of this property. The cumulative and loop-cumulative relations of [6] are characterized by such models and, as a consequence, one may study the natural connectives for those logics. The representation results obtained are surprisingly smooth: in the completeness part the choice function may be defined on any set of models, not only definable sets and no definability-preservation property is required in the soundness part. For those logics, proper conjunction and negation may be defined, but no proper disjunction, contrary to the situation studied in [7]. Quantum Logics, as defined by [3] are such Logics but the orthogonal complement does not provide a proper negation.	logical connective;quantum;subject reduction	Daniel J. Lehmann	2002	CoRR		monoidal t-norm logic;t-norm fuzzy logics;discrete mathematics;mathematics;algorithm	Logic	-10.460019157630033	12.670464985356764	170462
4ab3195a0cd4d4417ac4daa2c53acfcf52c3b4d6	satisfiability of a spatial logic with tree variables	logic;tree isomorphisms;satisfiability;semi structured data;mso;tree automata;query;spatial logic	We investigate in this paper the spatial logic TQL for querying semistructured data, represented as unranked ordered trees over an infinite alphabet. This logic consists of usual Boolean connectives, spatial connectives (derived from the constructors of a tree algebra), tree variables and a fixpoint operator for recursion. Motivated by XML-oriented tasks, we investigate the guarded TQL fragment. We prove that for closed formulas this fragment is MSO-complete. In presence of tree variables, this fragment is strictly more expressive than MSO as it allows for tree (dis)equality tests, i.e. testing whether two subtrees are isomorphic or not. We devise a new class of tree automata, called TAGED, which extends tree automata with global equality and disequality constraints. We show that the satisfiability problem for guarded TQL formulas reduces to emptiness of TAGED. Then, we focus on bounded TQL formulas: intuitively, a formula is bounded if for any tree, the number of its positions where a subtree is captured by a variable is bounded. We prove this fragment to correspond with a subclass of TAGED, called bounded TAGED, for which we prove emptiness to be decidable. This implies the decidability of the bounded guarded TQL fragment. Finally, we compare bounded TAGED to a fragment of MSO extended with subtree isomorphism tests.	automata theory;boolean satisfiability problem;fixed point (mathematics);fixed-point combinator;logical connective;recursion;tree (data structure);tree automaton;xml	Emmanuel Filiot;Jean-Marc Talbot;Sophie Tison	2007		10.1007/978-3-540-74915-8_13	combinatorics;discrete mathematics;k-ary tree;mathematics;logic;algorithm;satisfiability	Logic	-7.648343504871612	17.78687864499322	170577
63ef9d6d270503f43b0f5fb9a3935f43b6dbe632	a descending chain of classical logics for which necessitation implies regularity	classical logic			Roy A. Benton	1979	Math. Log. Q.	10.1002/malq.19790251902	discrete mathematics;classical logic;mathematics	Theory	-10.182918503946096	12.803943621152609	170883
5ee1e47138ad628f3d7fbcee491bdd629e01c2ce	the logic of tied implications, part 1: properties, applications and representation	regle inference;operateur implication;fuzzy set;many valued rough sets;subdirect product;logique floue;logica difusa;triangular norm;satisfiability;conjunto parcialmento ordenado;tied implication;fuzzy logic;inference rule;prelinearity;enrejado;partially ordered set;comparateur;comparator;treillis;generalized modus ponens;implication floue;ensemble partiellement ordonne;compositional rule of inference;norma triangular;t norm;norme triangulaire;residuated lattice;rough set;nonclassical logics;modus ponens;regla inferencia;lattice;comparador;connectives	A conjunction T ties an implication operator A if the identity A(a, A(b, z)) = A(T (a, b), z) holds [A.A. Abdel-Hamid, N.N. Morsi, Associatively tied implications, Fuzzy Sets and Systems 136 (2003) 291–311]. We study the class of tied adjointness algebras (which are five-connective algebras on two partially ordered sets), in which the implications are tied by triangular norms. This class contains, besides residuated implications, several other implications employed in fuzzy logic. Nevertheless, we show that the algebraic inequalities of residuated algebras remain true for our tied implications, but in forms that distribute roles over the five connectives of the algebra. We apply the properties of tied implications to a generalized modus ponens inference scheme with two successive rules. We prove its equivalence to a scheme with one compound rule, when both schemata are interpreted by the compositional rule of inference, and all connectives are taken from one tied adjointness algebra. Then we quote another application of this rich theory, a notion of many-valued rough sets, which exhibit the basic mathematical behaviour of the rough sets of Pawlak. A comparator H is said to be prelinear if it satisfies H(y, z)∨H(z, y)=1 for all y, z (Hájek). We introduce prelinear tied adjointness algebras, in which two comparators are prelinear. We provide a representation of those algebras, as subdirect products of tied adjointness chains, on the lines of Hájek’s representation of BL-algebras. But our representations are more economical, because we employ minimal prime filters (on residuated lattices) only; rather than all prime filters. © 2005 Elsevier B.V. All rights reserved.	bl (logic);comparator;emoticon;first-order logic;fuzzy sets and systems;fuzzy logic;fuzzy set;gnu multiple precision arithmetic library;kleene algebra;linear algebra;logical connective;ordered pair;powerset construction;residuated lattice;rough set;succession;turing completeness	Nehad N. Morsi;Wafik Boulos Lotfallah;Moataz Saleh El-Zekey	2006	Fuzzy Sets and Systems	10.1016/j.fss.2005.10.018	partially ordered set;fuzzy logic;discrete mathematics;rough set;modus ponens;computer science;artificial intelligence;lattice;mathematics;comparator;t-norm;fuzzy set;algorithm	Logic	-9.172800950099555	11.974570191982458	171063
90fcbb3f8ef6585bc51c8505ca45c275bc0df0d4	conditional lower bounds for failed literals and related techniques		We prove time-complexity lower bounds for various practically relevant probing-based CNF simplification techniques, namely failed literal detection and related techniques. Specifically, we show that improved algorithms for these simplification techniques would give a 2 time algorithm for CNF-SAT for some δ < 1, violating the Strong Exponential Time Hypothesis.	algorithm;boolean satisfiability problem;conjunctive normal form;exptime;exponential time hypothesis;level of detail;literal (mathematical logic);time complexity	Matti Järvisalo;Janne H. Korhonen	2014		10.1007/978-3-319-09284-3_7	combinatorics;discrete mathematics;mathematics;algorithm	Theory	-7.054145714867787	18.104291302406796	171631
4a707b47ea1b6736d7d96021d32e90d74dee2b74	adding the everywhere operator to propositional logic	inference rule;propositional logic	Sound and complete modal propositional logic C is presented, in which aP has the interpretation 'P is true in all states'. This interpretation is already known as the Camapian extension of SS. The new axiomatization for C provides two insights. Fust, introducing an inference rule textual substitution allows integration of the propositional and modal parts of the logic in a way that gives a more practical system for writing formal proofs. Second, the two following approaches to axiomatizing a logic are shown to be not equivalent: (i) give axiom schemes that denote an infinite number of axioms and (ii) write a finite number of axioms in terms of propositional variables and introduce a substitution inference rule.	axiomatic system;modal logic;propositional calculus	David Gries;Fred B. Schneider	1998	J. Log. Comput.	10.1093/logcom/8.1.119	modal logic;propositional formula;dynamic logic;zeroth-order logic;absorption;modal μ-calculus;discrete mathematics;classical logic;resolution;description logic;horn-satisfiability;tautology;many-valued logic;intuitionistic logic;computer science;intermediate logic;disjunction introduction;negation introduction;propositional variable;well-formed formula;propositional calculus;algorithm;rule of inference;autoepistemic logic	AI	-11.407846040045241	12.897928812283517	171681
1e8a1af0ca775e770b7065e76389d05e168a1982	some aspects of lattice and generalized prelattice effect algebras	algebra relacional;logica multivalente;probabilistic approach;logique multivalente;enrejado;orthomodular lattice;treillis;mesure probabilite;enfoque probabilista;approche probabiliste;necessary and sufficient condition;algebre relationnelle;multivalued logic;probability measure;relational algebra;medida probabilidad;lattice	Common generalizations of orthomodular lattices and MV-algebras are lattice effect algebras which may include noncompatible pairs of elements as well as unsharp elements. Thus elements of these structures may be carriers of states, or probability measures, when they represent properties, questions or events with fuzziness, uncertainty or unsharpness. Unbounded versions of these structures (more precisely without top elements) are generalized effect algebras which can be extended onto effect algebras. We touch only a few aspects of these structures. Namely, necessary and sufficient conditions for generalized effect algebras to obtain their effect algebraic extensions lattice ordered or MV-effect algebras. We also give one possible construction of pastings of MV-effect algebras together along an MV-effect algebra to obtain lattice effect algebras. In conclusions we give some applications of presented results about sets of sharp elements, direct and subdirect decompositions of lattice effect algebras and about smearings (resp. the existence) of states an probabilities on them.		Zdenka Riecanová;Ivica Marinová;Michal Zajac	2006		10.1007/11964810_14	combinatorics;discrete mathematics;non-associative algebra;probability measure;relational algebra;lattice;mathematics;quadratic algebra;interior algebra;nest algebra;statistics;algebra	Logic	-5.856242971115557	15.774040386650418	171931
5c320e1e48ac2bf2b185847ff4be38fd08da0cff	on an interpretation of second order quantification in first order intuitionistic propositional logic		We prove the following surprising property of Heyting's intuitionistic propositional calculus, IpC. Consider the collection of formulas, , built up from propositional variables (p; q; r; : : :) and falsity (?) using conjunction (^), disjunction (_) and implication (!). Write ` to indicate that such a formula is intuitionistically valid. We show that for each variable p and formula there exists a formula A p (e ectively computable from ), containing only variables not equal to p which occur in , and such that for all formulas not involving p, ` !A p if and only if ` ! . Consequently quanti cation over propositional variables can be modelled in IpC, and there is an interpretation of the second order propositional calculus, IpC 2 , in IpC which restricts to the identity on rst order propositions. An immediate corollary is the strengthening of the usual Interpolation Theorem for IpC to the statement that there are least and greatest interpolant formulas for any given pair of formulas. The result also has a number of interesting consequences for the algebraic counterpart of IpC, the theory of Heyting algebras. In particular we show that a model of IpC 2 can be constructed whose algebra of truth-values is equal to any given Heyting algebra. Supported by the ESPRIT Basic Research Action Nr 3003, `CLICS'.	computable function;interpolation;intuitionistic logic;linear algebra;propositional calculus;propositional variable	Andrew M. Pitts	1992	J. Symb. Log.		zeroth-order logic;discrete mathematics;resolution;tautology;interpolation;many-valued logic;intuitionistic logic;intermediate logic;first-order logic;mathematics;propositional variable;well-formed formula;propositional calculus;truth value;algorithm;autoepistemic logic	Logic	-10.035285645011509	13.366810201808898	172017
ce7aa604f631a34b7eaba8de8ead03529716b64a	an algebraic semantics for the logic of multiple-source approximation systems	satisfiability;modal logic;equivalence relation	A multiple-source approximation system (MSAS) is a tupleF := (U, {Ri}i∈N ), whereU is a non-empty set, N an initial segment of the set N of positive integers, and each Ri, i ∈ N, is an equivalence relation on the domainU . A quantified propositional modal logic LMSAS was defined in [1] in order to study MSAS. In this paper, we will present an algebraic semantics for LMSAS. Syntax of the logic LMSAS is given as follows: There is a (i) a non-empty countable set V ar of variables, (ii) a (possibly empty) countable set Con of constants, (iii) a non-empty countable set PV of propositional variables and (iv) the propositional constants >,⊥. The setT of termsof the language is given by V ar ∪ Con. Using the standard Boolean logical connectives¬ (negation) and∧ (conjunction), a unary modal connective 〈t〉 (possibility) for each term t ∈ T , and the universal quantifier ∀, well-formed formulae (wffs) ofLMSAS are defined recursively as: >|⊥|p|¬α|α ∧ β|〈t〉α|∀xα, wherep ∈ PV, t ∈ T, x ∈ V ar, andα, β are wffs. The set of all wffs and closed wffs of LMSAS will be denoted by F andF respectively. For a wff α of LMSAS, Con(α) will denote the set of constants used in α. Let Γ be a set of wffs ofLMSAS. An interpretation forΓ is given by a tripleM := (μ, V, I), whereμ := (U, {Ri}i∈N ) is a MSAS,V : PV → P(U) andI : Con(Γ) → N . An assignment for an interpretationM is a mapv : Term(Γ) → N such thatv(c) = I(c), for eachc ∈ Con(Γ). Thesatisfiabilityin an interpretationM := (μ, V, I) of a wff α of Γ, under an assignment v, and at an objectw of the domainU , denoted asM, v, w |= α is defined inductively as follows: M, v, w |= 〈t〉α, if and only if there existsw′ in U such thatwRv(t)w andM, v, w′ |= α. M, v, w |= ∀xα, if and only if for every assignment v′ x-equivalent tov,M, v′, w |= α. α is valid, denoted|= α, if and only ifM, v, w |= α, for every interpretationM := (μ, V, I), assignment v for M and objectw in the domain ofμ. The following sound and complete deductive system for LMSAS was proposed in [1]. t stands for a term inT . Axiom schema : (Ax1). All axioms of classical propositional logic. (Ax2). ∀xα → α(t/x), whereα admits the termt for the variablex. (Ax3). ∀x(α → β) → (α → ∀xβ), where the variablex is not free inα. (Ax4). ∀x[t]α → [t]∀xα, where the termt and variablex are different. (Ax5). [t](α → β) → ([t]α → [t]β). (Ax6). α → 〈t〉α. (Ax7). α → [t]〈t〉α. (Ax8). 〈t〉〈t〉α → 〈t〉α. Rules of inference : ∀. α MP. α N. α ∀xα α → β [t]α β We note that this is different from both propositional quantification of modal logic, and modal predicate logic. Next, we present an algebraic semantics for LMSAS. We begin with the following definition. Definition 1 A BAOsA := (A,∩,∼, 1, fi)i∈∆ is said to be acomplete BAOs(CBAOs) if it satisfies the following properties for allX ⊆ A: (A1) ⋂ X and ⋃ X exists; (A2)fk ⋂ X = ⋂ fkX, k ∈ ∆. In this paper, we are interested only in those (complete ) BAOs where ∆ = N and eachfk satisfies the following additional conditions: (B1) fka ≤ fkfka; (B2) fka ≤ a and (B3) a ≤ fkgka, where gk :=∼ fk ∼.	algebraic semantics (computer science);andi gutmans;approximation;ar (unix);emoticon;formal system;logical connective;mtsat satellite augmentation system;modal logic;modal operator;naruto shippuden: clash of ninja revolution 3;propositional calculus;propositional variable;quantifier (logic);recursion;recursive definition;turing completeness;unary operation;universal quantification;well-formed formula	Md. Aquil Khan;Mohua Banerjee	2009		10.1007/978-3-642-10646-0_8	modal logic;predicate logic;dynamic logic;algebraic logic;normal modal logic;mv-algebra;modal μ-calculus;combinatorics;discrete mathematics;classical logic;description logic;higher-order logic;algebraic sentence;intermediate logic;predicate functor logic;mathematics;signature;equivalence relation;axiomatic semantics;accessibility relation;multimodal logic;second-order logic;algorithm;satisfiability	Logic	-11.663727021191159	13.923255020000726	172399
ef80d8114c452ba82c1382cfdfa7d26e6e62099a	coequational logic for accessible functors	distribution;regularite;regularidad;18a25;consistencia semantica;foncteur;category;fonction repartition;soundness;68t15;logic;regularity;polynomial;coequation;funcion distribucion;quotient;18axx;distribution function;categorie;informatique theorique;polinomio;functor;consistance semantique;coalgebra;coalgebre;cociente;completitud;completeness;cofree coalgebra;polynome;completude;regular presentation;distribucion;deduccion;accessible functor;logique;logica;computer theory;informatica teorica;deduction	Covarieties of coalgebras are those classes of coalgebras for an endofunctor H on the category of sets that are closed under coproducts, subcoalgebras and quotients. Equivalently, covarieties are classes of H-coalgebras that can be presented by coequations. Adámek introduced a logic of coequations and proved soundness and completeness for all polynomial functors on the category of sets. Here this result is extended to accessible functors: given a presentation of an accessible functor H, simple deduction systems for coequations are formulated and it is shown that regularity of the presentation implies soundness and completeness of these deduction systems. The converse is true whenever H has a nontrivial terminal coalgebra. Also a method is found to obtain concrete descriptions of cofree (and thus terminal) coalgebras of accessible functors, and is applied to the finite and countable powerset functor as well as to the finite distribution functor.	attack tree;formal system;modal logic;natural deduction;polynomial;soundness (interactive proof);surround sound;type system	Daniel Schwencke	2010	Inf. Comput.	10.1016/j.ic.2009.10.010	distribution;adjoint functors;soundness;discrete mathematics;topology;category;natural transformation;completeness;functor category;distribution function;mathematics;derived functor;exact functor;tor functor;quotient;logic;algorithm;functor;polynomial;algebra	Logic	-9.224441524666698	16.280794219533973	172592
6a8ac93914473c7a4758cdfc805e3477ee801894	seeing beyond divergence	operational semantics;fixed point;fixed point theory	A long-standing complaint about the theory of CSP has been that all theories which encompass divergence are divergence-strict, meaning that nothing beyond the first divergence can be seen. In this paper we show that a congruence previously identified as the weakest one to predict divergence over LTS’s can be given a new fixed point theory, which we term reflected fixed points and thereby turned into a full CSP model which is congruent to the operational semantics.	congruence of squares;fixed point (mathematics);fixed-point theorem;operational semantics;vergence	A. W. Roscoe	2004		10.1007/11423348_2	combinatorics;discrete mathematics;mathematics	ML	-7.578788564859462	14.556211498615022	172593
0501add5c2ee58254bfc752b7b960f970ba003ed	deciding the confluence of ordered term rewrite systems	path orderings;confluence;term rewrite system;ordered rewriting;rewrite systems	A term rewrite system (TRS) terminates if, and only if, its rules are contained in a reduction ordering $u003e$. In order to deal with {em any/} set of equations, including inherently non-terminating ones (like commutativity), TRS have been generalized to {em ordered/} TRS $(E,u003e)$, where equations of $E$ are applied in whatever direction agrees with $u003e$. The confluence of terminating TRS is well-known to be decidable, but for ordered TRS the decidability of confluence has been open. Here we show that the confluence of ordered TRS is decidable if $u003e$ belongs to a large class of path orderings (including most practical orderings like LPO, MPO, RPO (with status), KNS and RDO), since then {em ordering constraints/} for $u003e$ can be solved in an adequate way. For ordered TRS $(E,u003e)$ where $E$ consists of {em constrained equations/}, confluence is shown to be undecidable. Finally, also {em ground reducibility/} is proved undecidable for ordered TRS.	confluence;rewrite (programming)	Hubert Comon-Lundh;Paliath Narendran;Robert Nieuwenhuis;Michaël Rusinowitch	2003	ACM Trans. Comput. Log.	10.1145/601775.601777	combinatorics;discrete mathematics;mathematics;confluence;algorithm	Graphics	-10.638156564698303	16.487668584414976	172781
395080d0805beab4b9a33049bec66a90df150cb0	the r-calculus and the finite injury priority method		The R-calculus is a Gentzen-type deduction system to deduce a consistent theory from a theory to be revised and a theory to revise. Because the semi-decidability of the deduction in the first-order logic, the R-calculus is semi-decidable. By using the limit lemma and finite injury priority method in recursion theory, we shall recursively construct a sequence of formula sets such that the limit of exists, say is provable in the R-calculus, and each formula in is enumerated in or extracted from only finitely often, where Θ is a maximal consistent set of by . Moreover, a Gentzen-type deduction is constructed to deduce the sequence by the deduction rules in which the deduction is recursive (decidable, computable).		Li Wei;Yuefei Sui	2017	JCP		machine learning;theoretical computer science;artificial intelligence;computer science	Logic	-8.150345428568306	15.340354244261261	172845
5e583836121c642fd2be853b80229cbfde7afc3a	fixpoint theorem for continuous functions on chain-complete posets	fixed point theorem	Let P be a non empty poset. Observe that there exists a chain of P which is non empty. Let I1 be a relational structure. We say that I1 is chain-complete if and only if: (Def. 1) I1 is lower-bounded and for every chain L of I1 such that L is non empty holds sup L exists in I1. One can prove the following proposition (1) Let P1, P2 be non empty posets, K be a non empty chain of P1, and h be a monotone function from P1 into P2. Then h◦K is a non empty chain of P2. Let us note that there exists a poset which is strict, chain-complete, and non empty. Let us mention that every relational structure which is chain-complete is also lower-bounded.	conditional (computer programming);empty string;fixed point (mathematics);fixed-point theorem;monotone	Kazuhisa Ishida;Yasunari Shidama	2010	Formalized Mathematics	10.2478/v10037-010-0006-x	mean value theorem;green's theorem;closed graph theorem;carlson's theorem;combinatorics;mathematical analysis;discrete mathematics;brouwer fixed-point theorem;kakutani fixed-point theorem;arzelà–ascoli theorem;topology;schauder fixed point theorem;factor theorem;shift theorem;danskin's theorem;fundamental theorem;mathematics;fixed point;fundamental theorem of calculus;bruck–ryser–chowla theorem;picard–lindelöf theorem;fixed-point theorem;compactness theorem;gap theorem	ML	-7.195562076269317	13.136152910234818	172983
c498d5361dd36721b4110c6866d7b854ca9c3582	non-linearity as the metric completion of linearity		We summarize some recent results showing how the lambdacalculus may be obtained by considering the metric completion (with respect to a suitable notion of distance) of a space of affine lambda-terms, i.e., lambda-terms in which abstractions bind variables appearing at most once. This formalizes the intuitive idea that multiplicative additive linear logic is “dense” in full linear logic (in fact, a proof-theoretic version of the above-mentioned construction is also possible). We argue that thinking of non-linearity as the “limit” of linearity gives an interesting point of view on well-known properties of the lambda-calculus and its relationship to computational complexity (through lambda-calculi whose normalization is time-bounded). 1 Linearity and approximations The concept of linearity in logic and computer science, introduced over two decades ago [12], has now entered firmly into the “toolbox” of proof theorists and functional programming language theorists. It is present, in one way or another, in a broad range of contexts, such as: denotational semantics [11], games semantics [22] and categorical semantics [8]; computational interpretations of classical logic [18, 9]; optimal implementation of functional programming languages [3, 19]; the theory of explicit substitutions [2]; higher-order languages for probabilistic [10] and quantum computation [24]; typing systems for polynomialtime [4], non-size-increasing [14] and resource-aware computation [17]; and even concurrency theory [6, 15]. Technically, linearity imposes a severe restriction on the behavior of programs: data must be accessed exactly once. Its cousin affinity, which is more relevant for the purposes of this text, slightly relaxes the constraint: although data may be discarded, it may nevertheless be accessed at most once. In any case, linearity and affinity forbid re-use, forcing the programmer to explicitly keep track of how many copies of a given piece of information are needed in order to perform a computation. How can general, non-linear computation be performed in an affine setting? In other words, how can a persistent memory be simulated by a volatile memory? The intuitive answer is clear: one persistent memory cell, accessible arbitrarily many times, may be perfectly simulated by infinitely many volatile memory cells, each accessible only once. Of course, if only a finite memory is available, then only an imperfect simulation will be possible in general. However, the important point is that affine computation may approximate non-linear computation to an arbitrary degree of precision. 2 A polyadic affine lambda-calculus Let us see how the above intuition may be formalized. Consider the fragment A,B ::= X | (A1 & 1)⊗ · · · ⊗ (An & 1) ( B of multiplicative additive linear logic (if n = 0, then the premise of the implication is the logical constant 1). The proofs of this simple logical system correspond to (simply-typed) terms of the following language: t, u ::= x | λx1 . . . xn.t | t〈u1, . . . , un〉, with the requirement that variables appear at most once in terms. In other words, we have a “multilinear”, or polyadic affine λ-calculus. The reduction of a simply-typed non-linear λ-term such as M = (λx.Nxx)I may be “linearized” as JMK = (λx0x1.JNK〈x0〉〈x1〉)〈JIK, JIK〉, in which we see how the duplication of the subterm I by the head redex of M forces us to explicitly introduce two copies of JIK (the linearization of I). This is of course very naive: if M duplicates I again (for instance, if N = λy.zyy), we will be forced to include additional copies of JIK in JMK and it would be hard in general to statically determine exactly how many are necessary (we would essentially need to normalize M). We are thus naturally led to consider an infinitary calculus. The rigorous manipulation of infinity requires some form of topology, which will actually be the key to a satisfactory formalization of the above intuition: we will be able to say that affine terms approximate non-linear terms to an arbitrary degree of precision in a clear technical sense, that of metric spaces. Our first step is to switch to an untyped framework, so that our analysis will be valid in the most general terms. To this extent, we introduce a term ⊥ in the language, which is used to solve possible mismatches between the arity of abstractions and applications: when reducing (λx0x1.t)〈u〉, the sequence in the outer application in not “long enough”, so the term ⊥ will be substituted to x1. We also switch from variables to explicit occurrences, which is to realize that the affine (or linear) λ-calculus is, in a way, a calculus of occurrences. This, although not technically necessary (and not done in [20]) will simplify the exposition. So, our definition of (untyped) polyadic affine λ-calculus is the following: t, u ::= ⊥ | xi | λx.t | tu,	affinity analysis;approximation;categorical logic;computation;computational complexity theory;concurrency (computer science);database normalization;denotational semantics;explicit substitution;functional programming;lambda calculus;lecture notes in computer science;linear logic;memory cell (binary);nonlinear system;persistent memory;processor affinity;programmer;programming language;quantum computing;springer (tank);utility functions on indivisible goods;volatile memory	Damiano Mazza	2013		10.1007/978-3-642-38946-7_3	mathematical optimization	Theory	-6.366331483092489	13.480319787851826	173388
5885d7a2f16c4fe0e49339e98c600e9a5d9b4998	enayat models of peano arithmetic		Simpson showed that every countable model $mathcal{M} mathsf{PA}$ has an expansion $(mathcal{M}, X) mathsf{PA}^*$ that is pointwise definable. A natural question is whether, in general, one can obtain expansions of a non-prime model in which the definable elements coincide with those of the underlying model. Enayat showed that this is impossible by proving that there is $mathcal{M} mathsf{PA}$ such that for each undefinable class $X$ of $mathcal{M}$, the expansion $(mathcal{M}, X)$ is pointwise definable. We call models with this property Enayat models. In this paper, we study Enayat models and show that a model of $mathsf{PA}$ is Enayat if it is countable, has no proper cofinal submodels and is a conservative extension of all of its elementary cuts. We then show that, for any countable linear order $gamma$, if there is a model $mathcal{M}$ such that $mathrm{Lt}(mathcal{M}) cong gamma$, then there is an Enayat model $mathcal{M}$ such that $mathrm{Lt}(mathcal{M}) cong gamma$.		Athar Abdul-Quader	2018	J. Symb. Log.	10.1017/jsl.2018.29	second-order arithmetic;mathematics;discrete mathematics;hilbert's second problem;primitive recursive arithmetic;countable set;true arithmetic;pointwise;arithmetical set;non-standard model of arithmetic	Theory	-7.527258807657451	14.583865705130535	173862
49ecd4cd0dccdab9ddfc2d9ef9016cf0b6470a8b	scott sentences for certain groups		"""We give Scott sentences for certain computable groups, and we use index set calculations as a way of checking that our Scott sentences are as simple as possible. We consider finitely generated groups and torsion-free abelian groups of finite rank. For both kinds of groups, the computable ones all have computable $\Sigma_3$ Scott sentences. Sometimes we can do better. In fact, the computable finitely generated groups that we have studied all have Scott sentences that are """"computable $d$-$\Sigma_2$"""" (the conjunction of a computable $\Sigma_2$ sentence and a computable $\Pi_2$ sentence). This was already shown for the finitely generated free groups. Here we show it for all finitely generated abelian groups, and for the infinite dihedral group. Among the computable torsion-free abelian groups of finite rank, we focus on those of rank $1$. These are exactly the additive subgroups of $\mathbb{Q}$. We show that for some of these groups, the computable $\Sigma_3$ Scott sentence is best possible, while for others, there is a computable $d$-$\Sigma_2$ Scott sentence."""		Julia F. Knight;Vikram Saraph	2018	Arch. Math. Log.	10.1007/s00153-017-0578-z	discrete mathematics;mathematics;computable number;algebra	Logic	-5.17990701887174	14.637932289202267	173943
06e92db69d118fc2e1b158aceabb19bef4d0c4b6	definable fixed points in modal and temporal logics : a survey	fixed point theorem;temporal logic;definability;fixed point;modal logic;propositional logic;positive operator	The paper presents a survey of author’s results on definable fixed points in modal, temporal, and intuitionistic propositional logics. The well-known Fixed Point Theorem considers the modalized case, but here we investigate the positive case. We give a classification of fixed point theorems, describe some classes of models with definable least fixed points of positive operators, special positive operators, and give some examples of undefinable least fixed points. Some other interesting phenomena are discovered – definability by formulas that do not preserve positivity of parameters and definability by finite sets of formulas. We also consider negative operators, graded modalities, construct undefinable inflationary fixed points, and put some problems.	fixed point (mathematics);fixed-point theorem;modal logic;temporal logic;whole earth 'lectronic link	S. Mardaev	2007	Journal of Applied Non-Classical Logics	10.3166/jancl.17.317-346	modal logic;combinatorics;discrete mathematics;temporal logic;epistemology;computer science;artificial intelligence;mathematics;fixed point;fixed-point theorem;propositional calculus;fixed-point property;least fixed point	Logic	-9.873377123486499	12.793004914121587	174072
a70e8fb3f433d5a4d9b720ee3142fa4281678960	the uniformity principle for sigma -definability with applications to computable analysis	computer analysis	In this paper we prove the Uniformity Principle for  Σ ---definability over the real numbers extended by open predicates. Using this principle we show that if we have a  Σ   K  -formula, i.e. a formula with quantifier alternations where universal quantifiers are bounded by computable compact sets, then we can eliminate all universal quantifiers obtaining a  Σ -formula equivalent to the initial one. We also illustrate how the Uniformity Principle can be employed for reasoning about computability over continuous data in an elegant way.	circuit complexity;computable analysis;computable function	Margarita V. Korovina;Oleg V. Kudinov	2007		10.1007/978-3-540-73001-9_43	discrete mathematics;computer science;mathematics;algorithm;computable analysis	ML	-10.34434883542501	15.029979624603678	174204
cf2c00542dc637b6f79d1af1b4578409599dac2e	focused and synthetic nested sequents		Focusing is a general technique for transforming a sequent proof system into one with a syntactic separation of non-deterministic choices without sacrificing completeness. This not only improves proof search, but also has the representational benefit of distilling sequent proofs into synthetic normal forms. We show how to apply the focusing technique to nested sequent calculi, a generalization of ordinary sequent calculi to tree-like instead of list-like structures. We thus improve the reach of focusing to the most commonly studied modal logics, the logics of the modal S5 cube. Among our key contributions is a focused cut-elimination theorem for focused nested sequents.	database normalization;modal logic;proof calculus;sequent calculus;synthetic intelligence	Kaustuv Chaudhuri;Sonia Marin;Lutz Straßburger	2016		10.1007/978-3-662-49630-5_23	combinatorics;discrete mathematics;completeness (statistics);cut-elimination theorem;modal logic;syntax;mathematical proof;sequent calculus;sequent;mathematics;linear logic	PL	-11.392718620420668	15.653559145983218	174817
b318346750755b232980c63679148ec0edc30a28	the weak □* is really weaker than the full □		We show that relative to the consistency of a supercompact cardinal does not imply . The model-theoretic transfer property ⟨ℵ 1 , ℵ 0 ⟩ → ⟨ℵ ω + 1 , ℵ ω ⟩ does not imply , and it is consistent to have an ultrafilter on ℵ ω + 1 which is λ -indecomposible for all ω ω .		Shai Ben-David;Menachem Magidor	1986	J. Symb. Log.		mathematical logic;calculus;mathematics;combinational logic;algorithm;model theory;set theory;algebra	Theory	-10.3998702967871	13.343405045544895	174879
20c2e793f240b3c1b144f375ea0c52f94278d115	note on a property of matrices for lewis and langford's calculi of propositions		where E stands for a v-chain, and the pi are variables in any one of the calculi. Using M, there is always at least one summand in F,, where pi and Pk have the same value. Therefore, F, can always be written in the form (a = a) v B, and thus will give, for any B, a designated value, since the formula (p = p) v q is provable in any one of the systems S1-S5. Give to any one of the systems S1-S5, the following matrix, due to Henle:4 1. Elements: all possible classes formed from the integers 1, 2, 3, * * *, n. 2. Designated element: the class f1, 2, 3, ** , n). 3. Boole-Schroder algebra on the elements.		James Dugundji	1940	J. Symb. Log.		arithmetic;mathematics;algorithm	Logic	-5.677433771696452	14.080976621446018	175980
a533c223e806b5044fffa30cec454e7e09bfbe78	infinitary proof theory: the multiplicative additive case	infinitary proofs linear logic;004	7 Infinitary and regular proofs are commonly used in fixed point logics. Being natural intermediate 8 devices between semantics and traditional finitary proof systems, they are commonly found in 9 completeness arguments, automated deduction, verification, etc. However, their proof theory 10 is surprisingly underdeveloped. In particular, very little is known about the computational 11 behavior of such proofs through cut elimination. Taking such aspects into account has unlocked 12 rich developments at the intersection of proof theory and programming language theory. One 13 would hope that extending this to infinitary calculi would lead, e.g., to a better understanding of 14 recursion and corecursion in programming languages. Structural proof theory is notably based 15 on two fundamental properties of a proof system: cut elimination and focalization. The first 16 one is only known to hold for restricted (purely additive) infinitary calculi, thanks to the work 17 of Santocanale and Fortier; the second one has never been studied in infinitary systems. In 18 this paper, we consider the infinitary proof system μMALL∞ for multiplicative and additive 19 linear logic extended with least and greatest fixed points, and prove these two key results. We 20 thus establish μMALL∞ as a satisfying computational proof system in itself, rather than just an 21 intermediate device in the study of finitary proof systems. 22	additive model;automated theorem proving;computation;corecursion;fixed point (mathematics);linear logic;natural deduction;programming language theory;proof calculus;recursion;utility functions on indivisible goods	David Baelde;Amina Doumane;Alexis Saurin	2016		10.4230/LIPIcs.CSL.2016.42	proof by contradiction;combinatorial proof;discrete mathematics;computer science;analytic proof;proof theory;mathematics;structural proof theory;proof complexity;algorithm	Theory	-10.771778672123325	15.357284237197057	176809
84a1fa6e685237899c4e86ccba4271a71b76f088	the fact semantics for ramified type theory and the axiom of reducibility	logicism;bertrand russell;type theory;higher order logic	This paper uses an atomistic ontology of universals, individuals, and facts to provide a semantics for ramified type theory. It is shown that with some natural constraints on the sort of universals and facts admitted into a model, the axiom of reducibility is made valid.	axiom of reducibility;molecular dynamics;type theory	Edwin D. Mares	2007	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1179323266	zermelo–fraenkel set theory;axiom schema;higher-order logic;logicism;pure mathematics;mathematics;axiom of choice;programming language;type theory;algorithm	PL	-10.103068517399832	13.10359563722189	176986
6ab305b4f31fa608a4209a06d4bb7c4e2471edc5	process operations in extended dynamic logics	action language;process theory process operations extended dynamic logic modal logic action logic decidable fragments first order logic natural bisimulation guarded fragments;dynamic logic;modal logic;first order;formal logic;logic testing transformers interpolation logic design scattering;propositional dynamic logic;first order logic;parallel processing;model theory	Modal logic becomes action logic by adding programs as in propositional dynamic logic or the p-calculus. Modal languages can be seen as decidable fragments of first-order logic that admit a natural bisimulation, and hence enjoy a good model theory. Recently, much stronger ‘guarded fragments offirst-order logic have been identified that enjoy the same pleasant features. The latter can serve as richer action languages as well. We will develop the logic of guarded fragments as a form of process theory. In particular, moving from sequential to parallel process operations correlates w i t h m o v i n g that are close to, or perhaps just over the decidable-undecidable fence. 1 The modal dynamics of actions We will start by reviewing the basics. Standard polymodal logic is a decidable fragment of the first-order logic of process graphs (labeled transition systems, Kripke models). It can be characterized semantically as consisting, up to logical equivalence, of those firstorder formulas which are invariant for bisimulation. Propositional dynamic logic turns this into an explicit action language by treating propositions and programs on a par, adding a syntactic component of regular programs, including tests for all propositions. Again, this system is decidable, its propositions are invariant for bisimulation, while its programs are what may be called ‘safe for bisimulation’. (Roughly speaking, transition relations for all programs enjoy automatic zig-zag over any existing bisimulation). To obtain the full power of fixed-point operations over all syntactically positive predicate transformers, however, one must move to the modal p-calculus. Again, the latter system is decidable, and it consists of all bisimulation-invariant statements in a first-order logic with fixed-point operators over process graphs. (This convenient paraphrase of a recent semantic characterization is equivalent to the version involving monadic second-order logic.) This line of logics runs into clear limitations, as it does not handle .joint or parallel action. But read on. O-8186-8506-9/98 $10.00	action algebra;action language;bisimulation;dynamic logic (modal logic);first-order logic;first-order predicate;fixed point (mathematics);invariant (computer science);kripke semantics;modal logic;monadic predicate calculus;predicate transformer semantics;syntax (logic);transformers;turing completeness;undecidable problem;π-calculus	Johan van Benthem	1998		10.1109/LICS.1998.705661	predicate logic;dynamic logic;zeroth-order logic;normal modal logic;parallel processing;discrete mathematics;linear temporal logic;description logic;logic optimization;higher-order logic;many-valued logic;computer science;intermediate logic;predicate functor logic;first-order logic;computational logic;mathematics;sequential logic;signature;substructural logic;multimodal logic;algorithm;philosophy of logic;autoepistemic logic	Logic	-11.658341253739609	18.161005989582435	177214
00009b3bb0b551ccc6ec1b637d593ea78d6d45ca	bases of admissible rules of lukasiewicz logic	admissible rule;ukasiewicz logic;multiple-conclusion admissible rule;finite basis;admissible rules;explicit base	We construct explicit bases of single-conclusion and multiple-conclusion admissible rules of propositional Lukasiewicz logic, and we prove that every formula has an admissibly saturated approximation. We also show that Lukasiewicz logic has no finite basis of admissible rules.	approximation;łukasiewicz logic	Emil Jerábek	2010	J. Log. Comput.	10.1093/logcom/exp082	mv-algebra;combinatorics;discrete mathematics;many-valued logic;łukasiewicz logic;mathematics	Logic	-11.043020428026484	12.692394792689234	177600
231fadea60e72a64ce0ec446c8e766c5af5b9e3e	on coherence in computer algebra	data type;satisfiability;computer algebra system;computer algebra;type system	Modern computer algebra systems e g AXIOM support a rich type system including parameterized data types and the possibility of implicit coercions between types In such a type system it will be frequently the case that there are di erent ways of building coercions between types An important requirement is that all coercions between two types coincide a property which is called coherence We will prove a coherence theorem for a formal type system having several possibilities of coercions covering many important examples Moreover we will give some informal reasoning why the formally de ned restrictions can be satis ed by an actual system	computer algebra system;symbolic computation;type conversion;type system	Andreas Weber	1993		10.1007/BFb0013171	differential graded algebra;filtered algebra;boolean algebra;discrete mathematics;division algebra;subalgebra;incidence algebra;term algebra;universal enveloping algebra;pure mathematics;jordan algebra;quaternion algebra;mathematics;algebra representation;cellular algebra;allen's interval algebra;quantum algebra;two-element boolean algebra;algebra	PL	-8.913319184784767	15.315087922560116	178421
d725e8a6869cb3dcab8b747b2625d72bdd479477	weak inclusion for recursive xml types	approximative inclusion;xml type;regular unranked tree grammar	Considering that the unranked tree languages L(G) and L(G′) are those defined by given possibly-recursive XML types G and G′, this paper proposes a method to verify whether L(G) is “approximatively” included in L(G′). The approximation consists in weakening the fatherchildren relationships. Experimental results are discussed, showing the efficiency of our method in many situations.	approximation;recursion (computer science);xml	Joshua Amavi;Jacques Chabin;Pierre Réty	2012		10.1007/978-3-642-31606-7_7	discrete mathematics;theoretical computer science;mathematics;algorithm	DB	-10.746091314194803	17.667213559700194	179133
5ebf8bfe16cd6f17fdcd49c9bee113b20a0d7663	completeness and partial soundness results for intersection and union typing for lambda_µµ_	complete intersection;satisfiability;sequent calculus;classical logic	Abstract   This paper studies intersection and union type assignment for the calculus     λ   ¯   μ    μ    ̃     (Curien and Herbelin, 2000  [16] ), a proof-term syntax for Gentzen’s classical sequent calculus, with the aim of defining a type-based semantics, via setting up a system that is closed under conversion.  We will start by investigating what the minimal requirements are for a system, for     λ   ¯   μ    μ    ̃     to be complete (closed under redex expansion); this coincides with System     M    ∩  ∪    , the notion defined in Dougherty et al. (2004)  [18] ; however, we show that this system is not sound (closed under subject reduction), so our goal cannot be achieved. We will then show that System     M    ∩  ∪     is also not complete, but can recover from this by presenting System     M     C      as an extension of     M    ∩  ∪     (by adding typing rules) and showing that it satisfies completeness; it still lacks soundness. We show how to restrict     M    ∩  ∪     so that it satisfies soundness as well by limiting the applicability of certain type assignment rules, but only when limiting reduction to (confluent) call-by-name or call-by-value reduction; in restricting the system this way, we sacrifice completeness. These results when combined show that, with respect to full reduction, it is not possible to define a sound and complete intersection and union type assignment system for     λ   ¯   μ    μ    ̃    .		Steffen van Bakel	2010	Ann. Pure Appl. Logic	10.1016/j.apal.2010.04.010	complete intersection;mathematical analysis;discrete mathematics;classical logic;mathematics;sequent calculus;algorithm;satisfiability	Logic	-11.498172330108211	15.377851741747996	179168
21a76b6df6e8cba2d087f0f12d6d8e720751fcfb	cheap non-standard analysis and computability		Non standard Analysis is an area of Mathematics dealing with notions of infinitesimal and infinitely large numbers, in which many statements from classical Analysis can be expressed very naturally. Cheap non-standard analysis introduced by Terence Tao in 2012 is based on the idea that considering that a property holds eventually is sufficient to give the essence of many of its statements. This provides constructivity but at some (acceptable) price. We consider computability in cheap non-standard analysis. We prove that many concepts from computable analysis as well as several concepts from computability can be very elegantly and alternatively presented in this framework. It provides a dual view and dual proofs to several statements already known in these fields. 2012 ACM Subject Classification Theory of computation/Computability, Mathematics of computing/Numerical analysis, Models of Computation/Continuous functions.		Olivier Bournez;Sabrina Ouazzani	2018	CoRR		mathematics;non-standard analysis;discrete mathematics;computable analysis;mathematical proof;infinitesimal;computability	Theory	-9.040691033928349	14.750872102440896	179225
5c284b8c2262a098a52810718630cde3c21114b0	unification, finite duality and projectivity in varieties of heyting algebras	settore m fil 02 logica e filosofia della scienza;heyting algebra;algebraic variety	We investigate #nitarity of uni#cation types in locally #nite varieties of Heyting algebras, giving both positive and negative results. We make essential use of #nite dualities within a conceptualization for E-uni#cation theory (J. Logic and Computation 7(6) (1997) 733–752) relying on the algebraic notion of a projective object. c © 2003 Elsevier B.V. All rights reserved. MSC: primary: 03B55; 68T15; secondary: 03B45; 06D20; 08B30	computation;conceptualization (information science);han unification	Silvio Ghilardi	2004	Ann. Pure Appl. Logic	10.1016/j.apal.2003.11.010	heyting arithmetic;mathematical analysis;discrete mathematics;algebraic variety;topology;pure mathematics;mathematics;heyting algebra;algebra	Logic	-9.619386631278712	11.985018790309155	179914
2ef3f6d939ee3c8a78176a7888132ce89c74ffb3	on the weak kleene scheme in kripke's theory of truth	weak kleene scheme	It is well known that the following features hold of AR + Tunder the strong Kleene scheme, regardless of the way the language is Godel numbered: 1. There exist sentences that are neither paradoxical nor grounded. 2. There are 21? fixed points. 3. In the minimal fixed point the weakly definable sets (i.e., sets definable as {n I A(n) is true in the minimal fixed point}, where A(x) is a formula of AR + T) are precisely the HI1 sets. 4. In the minimal fixed point the totally defined sets (sets weakly defined by formulae all of whose instances are true or false) are precisely the A sets. 5. The closure ordinal for Kripkeu0027s construction of the minimal fixed point is cl 1 . In contrast, we show that under the weak Kleene scheme, depending on the way the Godel numbering is		James Cain;Zlatan Damnjanovic	1991	J. Symb. Log.		discrete mathematics;kripke structure;kleene's recursion theorem;first-order logic;mathematics;fixed point;kripke semantics;algorithm	Logic	-7.549075155530991	14.169812710144699	179973
5c1d3c8398d4203f36ff622e2a150f497cd2b37f	a hierarchy of probabilistic system types	probabilistic system;probabilistic transition system;natural transformation	Abstract   We arrange various types of probabilistic transition systems studied in the literature in an expressiveness hierarchy. The expressiveness criterion is the existence of an embedding of systems of the one class into those of the other. An embedding here is a system transformation which preserves and reflects bisimilarity. To facilitate the task, we define the classes of systems and the corresponding notion of bisimilarity coalgebraically and use the new technical result that an embedding arises from a natural transformation with injective components between the two coalgebra functors under consideration. Moreover, we argue that coalgebraic bisimilarity, on which we base our results, coincides with the concrete notions proposed in the literature for the different system classes, exemplified by a detailed proof for the case of general Segala-type systems.		Falk Bartels;Ana Sokolova;Erik P. de Vink	2003	Electr. Notes Theor. Comput. Sci.	10.1016/S1571-0661(04)80632-7	combinatorics;discrete mathematics;natural transformation;mathematics	Logic	-7.821683221923211	16.105786460328076	180460
bfffe69fb77443169c3b073a58128fd74233bdfa	about primitive recursive algorithms	representation theorem;recursive algorithm;functional programming language;large classes	Colson, L., About primitive recursive algorithms, Theoretical Computer Science 83 (1991) 57-69. In the past few years, there has been a growing interest in the application of proof-theoretical methods to the design of functional programming languages [3, 111. One approach relies on representation theorems [3,8, IO], which show that a large class of general recursive functions can be encoded in a language where general recursion is replaced by primitive recursion with functions, functionals, as parameters [13]. These results are however purely extensional in nature: they state that a large class of mafhemaricalfunctions is representable in a given system, but they say nothing about the efficiency of such a representation. Although the infensiona/ aspect is of primary concern for computer science, very little seems to be known about this question. This paper is a beginning in the study of this problem. We take as a case study the following computational model: a primitive recursive function is seen as defining a rewriting system which is evaluated in call-by-name. In this setting, we give a non-trivial necessary condition for an algorithm to be representable. As an application, we can show that the function inf (which computes the minimum of two integers in unary representation) cannot be programmed in complexity O(inf(n, p)). Our proof method uses some basic notions of denotational semantics. In this paper, we study the representation problem in a functional system from an intensional point of view. What can we say about algorithms (as opposed to graphs or extensional mathematical functions) representable in a given functional system? For instance, it is known that the class of functions representable in C&de1 system T [5] contains strictly the class of primitive recursive functions (for example, the Ackermann function is also definable in system T). However, this is of little use from a computational point of view, since non-primitive recursive functions are intractable. It seems that the intensional version of the same problem is more interesting. By the use of denotational semantics we show that primitive recursive algorithms use really only one argument for large incomplete inputs. As an application of this, with a simple notion of complexity of programs (basically, the number of reduction 0304-3975/91/$03.50 @ 1991-Elsevier Science Publishers B.V.	ackermann function;algorithm;computation;computational model;denotational semantics;functional programming;graph (discrete mathematics);intensional logic;primitive recursive function;programming language;recursion (computer science);rewriting;theoretical computer science;unary operation;μ-recursive function	Loïc Colson	1991	Theor. Comput. Sci.	10.1016/0304-3975(91)90039-5	combinatorics;discrete mathematics;computer science;recursive data type;theoretical computer science;successor function;primitive recursive function;recursive language;mathematics;programming language;functional programming;μ-recursive function;primitive recursive arithmetic;algorithm characterizations;μ operator;recursion	Theory	-9.474466715936503	16.65825908180985	180730
c65a431762dc8a2e25c833be4cd7c4b7e5ab16e5	computing with words via turing machines: a formal approach	turing machines;computing with words;time complexity;context free grammars;context free;turing machine;indexing terms;fuzzy logic;fuzzy grammars computing with words turing machines formal approach fuzzy subsets time complexity extension principle context free grammars regular grammars formal grammars fuzzy pushdown automata fuzzy finite state automata;finite state machines;computational complexity;context free grammar;finite state automata;pushdown automata;fuzzy logic computational complexity pushdown automata finite state machines context free grammars turing machines;formal grammar;extension principle;turing machines fuzzy systems fuzzy logic fuzzy sets fuzzy neural networks fuzzy reasoning natural languages context modeling automata user generated content	Computing with words (CW) as a methodology, means computing and reasoning by the use of words in place of numbers or symbols, which may conform more to humans’ perception when describing real-world problems. In this paper, as a continuation of a previous paper, we aim to develop and deepen a formal aspect of CW. According to the previous paper, the basic point of departure is that CW treats certain formal modes of computation with strings of fuzzy subsets instead of symbols as their inputs. Specifically, 1) we elaborate on CW via Turing machine (TM) models, showing the time complexity is at least exponential if the inputs are strings of words; 2) a negative result of (6) not holding is verified which indicates that the extension principle for CW via TMs needs to be re-examined; 3) we discuss CW via contextfree grammars and regular grammars and the extension principles for CW via these formal grammars are set up; 4) some equivalences between fuzzy pushdown automata (respectively, fuzzy finitestateautomata) fuzzy context-free grammars (respectively, fuzzy regular grammars) are demonstrated in the sense that the inputs are instead strings of words; 5) some instances are described in detail.Summarily formal aspect of CW is more systematically established more deeply dealt with while some new problems also emerge.	automata theory;computation;computing with words and perceptions;context-free grammar;context-free language;continuation;formal grammar;fuzzy set;pushdown automaton;regular grammar;stack (abstract data type);time complexity;turing machine	Huaiqing Wang;Daowen Qiu	2003	IEEE Trans. Fuzzy Systems	10.1109/TFUZZ.2003.819841	discrete mathematics;computer science;turing machine;theoretical computer science;machine learning;mathematics;finite-state machine;context-free grammar;algorithm	Logic	-5.3622000070195535	17.186199636186323	180736
7e1dcf412c92e12c42f986eb89c0e42527f89ef2	on the union of well-founded relations	regular algebra;well-founded relations;program termination.	We give a criterion for the union of well-founded (i.e., noetherian) relations to be well-founded, generalizing results of Geser and of Bachmair-Dershowitz. The proof is written in a calculational style and is conducted entirely in regular algebra.	kleene algebra	Henk Doornbos;Burghard von Karger	1998	Logic Journal of the IGPL	10.1093/jigpal/6.2.195	discrete mathematics;mathematics;mathematics education	DB	-9.544692061550764	13.651622516270194	180832
7cb192a904976f578ad4d28af7fcdea4bd446d7a	a decidable canonical representation of the compact elements in scott's reflexive domain in p-omega	compact elements;lambda calculus;reflexive domains;canonical representation	The extensional model in Pw for the pure I-calculus, found by Scott in 1976, is provided with a canonical, decidable representation of its compact elements, with the interesting property that it does not at all refer to the retract that defines the domain, but only to the codings of the Pw model.	algorithm;chaitin's constant;karl james jalkanen;plotkin bound	Thomas Drakengren	1998	Theor. Comput. Sci.	10.1016/S0304-3975(97)00038-8	canonical form;combinatorics;discrete mathematics;computer science;pure mathematics;lambda calculus;mathematics;programming language;algorithm;algebra	Logic	-11.669561364488597	15.485680920946677	181033
b6869e91730116e473d3b503d66686321d7b889b	graph attribution through sub-graphs		We offer an alternative to the standard formalisation of attributed graphs. We propose to represent an attributed graph as a graph with a marked sub-graph, in which the sub-graph represents the data domain, rather than as a tuple of graph and algebra. This is a general construction which can be shown to preserve adhesiveness of categories; it has the advantage of uniformity and gives more flexibility in defining data abstractions. We show equivalence of our formalisation with the standard one, under a suitable encoding of algebras as graphs.	attributed graph grammar;circuit complexity;data domain;turing completeness	Harmen Kastenberg;Arend Rensink	2018		10.1007/978-3-319-75396-6_14	discrete mathematics;attribution;theoretical computer science;computer science;graph	AI	-11.213328176567188	17.45806499887571	181106
6b246e42ffced7484a906faf9224f05e48d741c7	a lattice representation of independence relations		Independence relations in general include exponentially many statements of independence, that is, exponential in terms of the number of variables involved. These relations are typically fully characterised however, by a small set of such statements and an associated set of derivation rules. While various computational problems on independence relations can be solved by manipulating these smaller sets without the need to explicitly generate the full relation, existing algorithms are still associated with often prohibitively high running times. In this paper, we introduce a lattice representation for sets of independence statements, which provides further insights in the structural properties of independence and thereby renders the algorithms for some well-known problems on independence relations less demanding. By means of experimental results, in fact, we demonstrate a substantial gain in efficiency of closure computation of semi-graphoid independence relations.	algorithm;computation;computational problem;rendering (computer graphics);semiconductor industry;time complexity	Linda C. van der Gaag;Marco Baioletti;Janneke H. Bolt	2018			differentiation rules;computational problem;machine learning;computation;small set;theoretical computer science;artificial intelligence;exponential growth;full relation;lattice (order);computer science;exponential function	AI	-8.394725754941238	14.92720142246945	181509
af212df83d6cf26a06de0eace12a314fb4abfeb6	review of &#769;on measures of information and their characterizations&#769; (acz&#233;l, j., and dar&#243;czy, z.; 1975)	entropy functions;information theory book reviews entropy functions;book reviews;measures of information;information theory	"""Property 2 degq-n +n-l't-ltnE 12 e E deg o n tnc-1: ttng /2 e Lemma 4 deg pm deg,,(t-lfnE/2 deg p: deg,j ,: t+nO /2 Problem at most t-1tne/2 less than ttne/2 Lemma 5 degq _ / t-lmB/2 deg 7, ' tfne /2 0 Theorem 2 deg rk-t-ltne/2 deg rkc, ttnE /2 Step (iii) in Proof of Theorem 2 deg ,, C t-ltne /2 s-deg ,, s< ttnE /2 Book Reviews On Measures of Information and Their Characterizations -J. One of the first basic achievements of Shannon's information theory was the demonstration that the entropy function measures the amount of information in the sense that heuristic reasoning based on this information measure leads to correct mathematical results in a large number of coding problems. This remarkable fact and evidence of usefulness of Shannon's entropy in a variety of fields other than communication theory naturally lead to the extrapolation that it represents the universal information measure. To support this view, several systems of natural postulates for an information measure have been suggested and it has been proved that they uniquely characterized Shannon's entropy. Characterization theorems of this sort go back to Shannon's fundamental paper [5]. Non-Shannonian information measures have also been suggested. The best known family of such measures is the set of RBnyi entropies of order LY [4] which contain Shannon's entropy as the special case (Y = 1. These generalized information measures have also been characterized in terms of more or less natural postulates. By now, there exists an extensive theory of postulational characterizations of information measures as functions of probability distributions. The book under review is the first monograph on this theory and is written by two of the main contributors to the subject. Surely, most readers of IEEE TRANSACTIONS ON INFORMATION THEORY will agree that the interpretation of a function as a measure of information should be justified by its operational significance rather than by its formal properties. This """" pragmatic """" approach, however, does not render superfluous the """" axiomatic """" one, as A. RBnyi used to call the two approaches which he considered as complementary to each other (the book is dedicated to his memory). Clearly, the axiomatic approach can lead to the discovery of new functions with certain good properties required for some operational purpose; conversely, the proof of nonexistence of such functions can stop vain efforts. While different people may differently evaluate the …"""	algorithm characterizations;axiomatic system;entropy (information theory);extrapolation;heuristic;information theory;quantities of information;shannon (unit)	Imre Csiszár	1976	IEEE Transactions on Information Theory	10.1109/TIT.1976.1055635	information theory;data mining;mathematics;statistics	Theory	-6.173584246322395	11.959539910709745	181677
1d541e415a10da6c3aeae5c56415d652b84dd743	decidability for non-standard conversions in typed lambda-calculi	ddc 500;fakultat fur mathematik informatik und statistik;ddc 510	"""This thesis studies the decidability of conversions in typed lambda-calculi, along with the algorithms allowing for this decidability.  Our study takes in consideration conversions going beyond the traditional beta, eta, or permutative conversions (also called commutative conversions). To decide these conversions, two classes of algorithms compete, the algorithms based on rewriting, here the goal is to decompose and orient the conversion so as to obtain a convergent system, these algorithms then boil down to rewrite the terms until they reach an irreducible forms; and the """"reduction free"""" algorithms  where the conversion is decided recursively by a detour via a meta-language. Throughout this thesis, we strive to explain the latter thanks to the former."""	typed lambda calculus	Freiric Barral	2008			artificial intelligence;mathematics;algorithm	Logic	-9.57136588379892	17.00326519231092	181806
9c0afb49bdd230f9ff8d8dbaff49f81f99d1d11f	reactive valuations		In sequential logic there is an order in which the atomic propositions in an expression are evaluated. This order allows the same atomic proposition to have different values depending on which atomic propositions have already been evaluated. In the sequential propositional logic introduced by Bergstra and Ponse in [5], such valuations are called “reactive” valuations, in contrast to “static” valuations as are common in e.g. ordinary propositional logic. There are many classes of these reactive valuations e.g., we can define a class of reactive valuations such that the value for each atomic proposition remains the same until another atomic proposition is evaluated. This Master of Logic thesis consists of a study of some of the properties of this logic. We take a closer look at some of the classes of reactive valuations mentioned in [5]. We particularly focus on the relation between the axiomatization and the semantics. Consequently, the main part of this thesis focuses on proving soundness and completeness. Furthermore, we show that the axioms in the provided axiomatizations are independent i.e., there are no redundant axioms present. Finally, we show ω-completeness for two classes of reactive valuations.	atomic sentence;axiomatic system;first-order logic;peano axioms;propositional calculus;sequential logic;soundness (interactive proof)	Chris Regenboog	2011	CoRR			Logic	-10.872058533022255	12.693538383183895	182236
f62d9e7f80e933c3cb97137cfa244bcfe28c1f29	determinization of fuzzy automata by means of the degrees of language inclusion	determinization fuzzy automaton complete residuated lattice;lattices;computational time language inclusion degrees fuzzy finite automata determinization crisp deterministic fuzzy automata fuzzy sets terminal states determinization methods fuzzy finite automaton canonization methods brzozowski type determinization residuated lattice fuzzy languages finite number membership values finite subsemiring semiring reduct;automata lattices fuzzy sets context vectors algorithm design and analysis;lattice theory deterministic automata finite automata formal languages fuzzy set theory;fuzzy sets;automata;vectors;context;algorithm design and analysis	Determinization of fuzzy finite automata is understood here as a procedure of their conversion into equivalent crisp-deterministic fuzzy automata, which can be viewed as being deterministic with possible infinitely many states, but with fuzzy sets of terminal states. Particularly, significant determinization methods are those that provide a minimal crisp-deterministic fuzzy automaton equivalent to the original fuzzy finite automaton called canonization methods. One canonization method for fuzzy finite automata, the Brzozowski type determinization, has been developed recently by Jancic and Ciric in [10]. Here we provide another canonization method for a fuzzy finite automaton A = (A, σ, δ, r) over a complete residuated lattice £, based on the degrees of inclusion of the right fuzzy languages associated with states of A into the left derivatives of the fuzzy language recognized by A. The proposed procedure terminates in a finite number of steps, whenever the membership values taken by δ, σ, and r generate a finite subsemiring of the semiring reduct of £. This procedure is generally faster than the Brzozowski type determinization, and if the basic operations in the residuated lattice £ can be performed in constant time, it has the same computational time as all other determinization procedures provided in [8], [11], and [12].	automaton;finite-state machine;fuzzy set;powerset construction;residuated lattice;time complexity	Ivana Micic;Zorana Jancic;Jelena Ignjatovic;Miroslav Ciric	2015	IEEE Transactions on Fuzzy Systems	10.1109/TFUZZ.2015.2404348	algorithm design;combinatorics;discrete mathematics;quantum finite automata;fuzzy mathematics;fuzzy classification;computer science;artificial intelligence;fuzzy number;lattice;mathematics;automaton;fuzzy set;fuzzy set operations;algorithm	Theory	-5.651075921022993	17.0433523036651	182239
4aabf30a0d76eb90e40fbd3a3e311a1f97fee2d7	a note on natural deduction in many-valued logic	natural deduction;many valued logic	Natural-deduction techniques have not been applied very much in the formalization of many-valued logics, since the deduction theorem fails for many interesting systems; this point is made, for example, by Ackermann [1], Nevertheless, natural-deduction formalizations are possible—an interesting example is Woodruff's [3]. In this note I describe a very simple natural-deduction system Q with rules in the style of Suppes [2]. The theorems of Q coincide with the theorems of P, which are the consequences under modus ponens of the axiom schemes	ackermann function;formal system;natural deduction	Bruce White	1974	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093891211	predicate logic;dynamic logic;judgment;higher-order logic;paraconsistent logic;epistemology;deduction theorem;many-valued logic;intermediate logic;computational logic;mathematics;minimal logic;curry–howard correspondence;sequent;programming language;sequent calculus;natural deduction;logic;philosophy of logic;rule of inference	Theory	-11.725361177893703	12.192358579903805	182345
41dc71b5c86c73d4448d26d0fccf212a11b91c6d	completion of integral polynomials by ac-term completion	ac-term completion;integral polynomial	We present a canonical term rewriting system RX whose ground normal forms can directly be mapped to integral polynomials in distributive normal form. Completing RX and a set of ground equations simulates the Grobner base computation for the ideal presented by the ground equations. With our approach, we can clearly show the correspondences of the key features of algebraic completion procedures for integral polynomial ideals ([Lau76], [Buc84]) and their simulation in a term rewriting environment.	abstract rewriting system;computation;gröbner basis;knuth–bendix completion algorithm;linear algebra;normal form (abstract rewriting);polynomial ring;simulation	Reinhard Bündgen	1991		10.1145/120694.120704	computer science;discrete mathematics;polynomial	Logic	-10.774543847502803	16.515580562220126	182915
91621165b0211531f22488f2545254f6786b8065	what is a categorical model of arrows?	arrows;freyd categories;hughes arrows;functional programming;categorical model;indexation;electronic computers computer science	We investigate what the correct categorical formulation of Hughes’ Arrows should be. It has long been folklore that Arrows, a functional programming construct, and Freyd categories, a categorical notion due to Power, Robinson and Thielecke, are somehow equivalent. In this paper, we show that the situation is more subtle. By considering Arrows wholly within the base category we derive two alternative formulations of Freyd category that are equivalent to Arrows—enriched Freyd categories and indexed Freyd categories. By imposing a further condition, we characterise those indexed Freyd categories that are isomorphic to Freyd categories. The key differentiating point is the number of inputs available to a computation and the structure available on them, where structured input is modelled using comonads.	arrow (computer science);computation;functional programming	Robert Atkey	2011	Electr. Notes Theor. Comput. Sci.	10.1016/j.entcs.2011.02.014	computer science;pure mathematics;mathematics;programming language;functional programming;algorithm	Logic	-7.700349929772067	15.613906775685708	182966
613ea65cb41c8312fbaec0dde3edda463b86ec44	hierarchies based on computational complexity and irregularities of class determining measured sets (preliminary report)	computational complexity	We consider here the problem of building transfinite hierarchies of computable functions on the basis of their difficulty of computation. Previous hierarchies of functions through the constructive ordinals have had two major problems, each apparently caused by not having techniques to restrict the classes considered at limit ordinals. These problems are, first that every function occurs at some name for ω, or some other small ordinal, and second that two names for the same constructive ordinal have two different classes of functions associated with them.  The axioms of computational complexity introduced by Blum[1] and several theorems by Blum[1],and by McCreight and Meyer[9], particularly the union theorem, lead to a very natural method of hierarchy building that partially avoids the first of these problems. The other problem is not overcome, however.  In attempting to understand the problem of obtaining unique, or nearly unique classes of functions we have encountered difficulties because the class determining measured sets of McCreight and Meyer[9] lack several properties that might reasonably be desired.	computable function;computation;computational complexity theory;ordinal data;recursive ordinal;transfinite interpolation	Leonard J. Bass;Paul R. Young	1970		10.1145/800161.805147	ordinal number;mathematical optimization;combinatorics;discrete mathematics;computer science;mathematics;computational complexity theory;algorithm	Theory	-4.619036436137798	13.228084154085542	183035
c35407e909aa1e2f13503e603fab46e357172c24	games and definability for system f	theoretical model;game theory;formal logic game theory lambda calculus;lambda calculus;morphism games definability system f game theoretic model polymorphic spl lambda calculus fibred category;laboratories calculus functional programming testing analog computers yarn;formal logic;normal form	We present a game-theoretic model of the polymorphic λ-calculus, system F , as a fibred category. Every morphism σ of the model defines an η-expanded, β-normal form σ̂ of system F whose interpretation is σ. Thus the model gives a precise, non-syntactic account of the calculus.	abstract machine;applicative programming language;dependent type;game theory;latex;lambda calculus;lawrence a. hyland;one-to-one (data model);order by;parametric model;parametric polymorphism;system f	Dominic J. D. Hughes	1997		10.1109/LICS.1997.614935	system f;deductive lambda calculus;game theory;typed lambda calculus;discrete mathematics;binary lambda calculus;pure type system;computer science;pure mathematics;lambda calculus;simply typed lambda calculus;mathematics;curry–howard correspondence;programming language;church encoding;lambda cube;natural deduction;logic;algorithm	Logic	-11.636969254895858	17.257801509146127	183613
1b17d31430c4f02b794efafaf74bf2b6511af5c7	on the logic of hypergraphs	satisfiability	Abs t rac t . A notion of satisfiability on hypergraphs is introduced and some existence problems are shown to be instances of the satisfiability on appropriate hypergraphs. Then a hypergraph based interpretation of propositional connectives is defined. This interpretation unexpectably turns out to be adequate for the Intuitionistic Propositional Calculus. At the end some possible directions of research in this field are suggested.	intuitionistic logic;logical connective;propositional calculus	Adam Kolany	1993		10.1007/BFb0022572	discrete mathematics;algorithm	AI	-10.744824846371987	12.29786343846121	183625
1d7cca61f49a01ac8dc234f0b4aaa907084520a9	backdoors to normality for disjunctive logic programs	parameterized complexity;answer set programming;quantified boolean formulas;backdoors;propositional satisfiability	The main reasoning problems for disjunctive logic programs are complete for the second level of the polynomial hierarchy and hence considered harder than the same problems for normal (i.e., disjunction-free) programs, which are on the first level. We propose a new exact method for solving the disjunctive problems which exploits the small distance of a disjunctive programs from being normal. The distance is measured in terms of the size of a smallest “backdoor to normality,” which is the smallest number of atoms whose deletion makes the program normal. Our method consists of three phases. In the first phase, a smallest backdoor is computed. We show that this can be done using an efficient algorithm for computing a smallest vertex cover of a graph. In the second phase, the backdoor is used to transform the logic program into a quantified Boolean formula (QBF) where the number of universally quantified variables equals the size of the backdoor and where the total size of the quantified Boolean formula is quasilinear in the size of the given logic program. The quasilinearity is achieved by means of a characterization of the least model of a Horn program in terms of level numberings. In a third phase, the universal variables are eliminated using universal expansion yielding a propositional formula. The blowup in the last phase is confined to a factor that is exponential in the size of the backdoor but linear in the size of the quantified Boolean formula. By checking the satisfiability of the resulting formula with a Sat solver (or by checking the satisfiability of the quantified Boolean formula by a Qbf-Sat solver), we can decide the Asp reasoning problems on the input program. In consequence, we have a transformation from Asp problems to propositional satisfiability where the combinatorial explosion, which is expected when transforming a problem from the second level of the polynomial hierarchy to the first level, is confined to a function of the distance to normality of the input program. In terms of parameterized complexity, the transformation is fixed-parameter tractable. We complement this result by showing that (under plausible complexity-theoretic assumptions) such a fixed-parameter tractable transformation is not possible if we consider the distance to tightness instead of distance to normality.	algorithm;backdoor (computing);boolean satisfiability problem;cobham's thesis;disjunctive normal form;logic programming;parameterized complexity;polynomial hierarchy;solver;theory;time complexity;true quantified boolean formula;universal quantification;vertex cover;whittaker–shannon interpolation formula	Johannes Klaus Fichte;Stefan Szeider	2013	ACM Trans. Comput. Log.	10.1145/2818646	true quantified boolean formula;parameterized complexity;combinatorics;discrete mathematics;formula game;computer science;artificial intelligence;maximum satisfiability problem;answer set programming;mathematics;algorithm	AI	-8.6540404604673	17.685112129430262	183755
fe5bb06520cbb3a494857a38876329b4b928fa12	model companions of theories of graphs		Let T be a consistent set of universal-existential sentences formulated in the language L . A model M of T is existentially closed if, whenever a quantifier-free formula in L(M) has a solution in an extension N |= T , it has a solution in M . By an argument using a chain of extensions, it can be shown that any model can be extended to an existentially closed model. Existentially closed models appear naturally in various fields of mathematics. For example, a dense linear order (A,<) without minimum or maximum elements is an existentially closed model of linear order axioms, an algebraically closed field is an existentially closed model of field axioms, and a random graph is an existentially closed model of the graph axioms. Moreover, in such cases, existentially closed models of T are characterized by a first-order theory. More specifically, there is an L-theory S, called a model companion of T , such that	first-order logic;first-order predicate;graph (discrete mathematics);l (complexity);model m keyboard;quantifier (logic);random graph;theory;well-formed formula	Kota Takeuchi;Yu-ichi Tanaka;Akito Tsuboi	2015	Math. Log. Q.	10.1002/malq.201400019	combinatorics;pure mathematics;mathematics	AI	-6.940684846305022	14.538844929193045	183758
cc0cb594e6bf78ae73c7c5e7cab40b98b5d3324c	distributional learning of regular formal graph system of bounded degree		In this paper, we describe how distributional learning techniques can be applied to formal graph system (FGS) languages. Formal graph system is a logic program that deals with term graphs instead of the terms of first-order predicate logic. We show that the FGS languages of bounded degree with the 1-finite context property (1-FCP) and the bounded treewidth property can be learned from positive data and membership queries.	distributional semantics;first-order logic;first-order predicate;graph (discrete mathematics);logic programming;treewidth;whole genome sequencing	Takayoshi Shoudai;Satoshi Matsumoto;Yusuke Suzuki	2016		10.1007/978-3-319-63342-8_6	discrete mathematics;combinatorics;predicate logic;null graph;bounded function;mathematics;graph;treewidth	DB	-8.494384778936777	16.632078477470177	183823
3f3ea7f30989f9a18cd75e0ffb306b3b0cd0fe75	counting and addition cannot express deterministic transitive closure	complexity theory;complexity theory logic circuits laboratories computer science read only memory polynomials;circuit complexity;logspace complete problem deterministic transitive closure complexity theory circuit complexity class logspace descriptive complexity theory first order logic quantifiers ordered structures;formal logic circuit complexity;descriptive complexity theory;formal logic;counting quantifiers;transitive closure;finite model theory;first order logic	An important open question in complexity theory is whether the circuit complexity class TC 0 is (strictly) weaker than LOGSPACE. This paper considers this question from the viewpoint of descriptive complexity theory. TC0 can be characterized as the class of queries expressible by the logic FOC(<,+,×), which is first-order logic augmented by counting quantifiers on ordered structures that have addition and multiplication predicates. We show that in first-order logic with counting quantifiers and only an addition predicate it is not possible to express “deterministic transitive closure” on ordered structures. As this is a LOGSPACE-complete problem, this logic therefore fails to capture LOGSPACE. It also directly follows from our proof that in the presence of counting quantifiers, multiplication cannot be expressed in terms of addition and ordering alone.	circuit complexity;complexity class;computational complexity theory;descriptive complexity theory;entity framework;festival of code;first-order logic;first-order predicate;l (complexity);tc0;transitive closure	Matthias Ruhl	1999		10.1109/LICS.1999.782627	predicate logic;zeroth-order logic;circuit complexity;boolean circuit;combinatorics;discrete mathematics;higher-order logic;ph;finite model theory;l;computer science;first-order logic;mathematics;transitive closure;logic;second-order logic;algorithm;descriptive complexity theory	Logic	-7.586397532820051	16.788157619788272	184490
a06984642609c7bdff3fa61c42587a2c3e47674f	properties preserved under definitional equivalence and interpretations		There are many common instances of theories which may be formulated naturally in more than one way, using different sets of primitive relations and operations. For example, lattice theory may be presented as an algebraic theory LA with the operations + and * , or alternatively. as a theory LA' whose language has only one nonlogical symbol s . Similarly the theory of real closed fields may be formulated in several ways, with or without an order relation. When theories T and T' are related in this manner, they are said to be definitionally eqicivnlent. Because this situation occurs so frequently, it appears useful to state some conditions which quickly and easily determine whether important properties of a theory T (such as model-completeness, or convexity) continue to hold in an equivalent formulation T'.	definition;linear algebra;theory;turing completeness	Charles C. Pinter	1978	Math. Log. Q.	10.1002/malq.19780243102	combinatorics;equivalence (measure theory);mathematics	Theory	-6.175062460194537	12.418547265810965	184717
8b59ca00b9782da717530d3a3e412c658375dfb7	axiomatizability in inclusive equational logics	computacion informatica;ciencias basicas y experimentales;matematicas;grupo a;equational logic	A categorical framework for equational logics is presented, together with axiomatizability results in the style of Birkhoff. The distinctive categorical structures used are inclusion systems, which are an alternative to factorization systems in which factorization is required to be unique rather than unique ‘up to an isomorphism’. In this framework, models are any objects, and equations are special epimorphisms in C, while satisfaction is injectivity. A first result says that equations-as-epimorphisms define exactly the quasi-varieties, suggesting that epimorphisms actually represent conditional equations. In fact, it is shown that the projectivitysfreeness of the domain of epimorphisms is what makes the difference between unconditional and conditional equations, the first defining the varieties, as expected. An abstract version of the axiom of choice seems to be sufficient for free objects to be projective, in which case the definitional power of equations of projective and free domain, respectively, is the same. Connections with other abstract formulations of equational logics are investigated, together with an organization of our logic as an institution.		Grigore Rosu	2002	Mathematical Structures in Computer Science	10.1017/S0960129501003474	discrete mathematics;equational logic;computer science;mathematics;programming language;algorithm	Logic	-8.354973447394427	15.108088431255883	184735
c1251319fdb795b709e1fa3fc61008a230ae9988	big toy models: representing physical systems as chu spaces		We pursue a model-oriented rather than axiomatic approach to the foundations of Quantum Mechanics, with the idea that new models can often suggest new axioms. This approach has often been fruitful in Logic and Theoretical Computer Science. Rather than seeking to construct a simplified toy model, we aim for a ‘big toy model’, in which both quantum and classical systems can be faithfully represented—as well as, possibly, more exotic kinds of systems. To this end, we show how Chu spaces can be used to represent physical systems of various kinds. In particular, we show how quantum systems can be represented as Chu spaces over the unit interval in such a way that the Chu morphisms correspond exactly to the physically meaningful symmetries of the systems—the unitaries and antiunitaries. In this way we obtain a full and faithful functor from the groupoid of Hilbert spaces and their symmetries to Chu spaces. We also consider whether it is possible to use a finite value set rather than the unit interval; we show that three values suffice, while the two standard possibilistic reductions to two values both fail to preserve fullness.	spaces	Samson Abramsky	2009	CoRR		discrete mathematics;pure mathematics;mathematics;quantum mechanics;category theory;hilbert space	NLP	-6.4881315968215025	11.429088378307963	184805
f67af278bb48e5bae85236924101651d40aeaa74	a note on the normal form of closed formulas of interpretability logic	normal form	1. I n t r o d u c t i o n . G stands for provability logic, i.e. for the modal proposi t ional calculus whose axioms are propositional tautologies, [:](~ r --, (D T --+ De) , D~o ~ E]D~ and LSb's axiom D([] T --. T) --+ [:]~ and whose rules are modus ponens and generalization. There are two propositional constants T (true) and 3(false); a formula is closed if it contains no proposi t ional variables, i.e. if it is built up f~om T and 3_ using Boolean connectives and D. The normal form theorem for closed formulas of G states that each dosed formula is G-equivalent to a Boolean combination of formulas Dn• (n = 0, 1, 2 , . . . ; [3 '~ stands for [3. . . [] n times). This was discovered independent ly by several authors (see ~Bool], ~Viag]). Artemov gives more detailed analysis [Artl,2]; his formulation will be ment ioned below where we present still another normal form. Interpretability logic I~ [Vi88] extends G by a binary modal i ty t> and by the following axioms: (J~) (J2) (J3) (J4) (Js) a(~ -~ r -~ (~ ~ r (~ ~ r & (r v x) -~ (~ ~ x) (~ ~ x) ~ ( r ~ x)-~ (~ v r ~ x) where (~ stands for -~D-~ and b has the same priority as --,. I L W and I L F are the extensions of IL by axioms (w) and (F) (~ ~ r -~ (~ ~ r ~ D~) 26 P. H~jek, V. Svejdar respectively. Visser [Vi88] shows that ILF is a subtheory of ILW and that all axioms of ILW are arithmetically valid if [] is unders tood as provability and D as interpretabil i ty of a theory containing ( IA 0 + ftl) . Svejdar shows that W is unprovable in ILF. We are going to show that each dosed formula of interpretabi l i ty logic is ILF-equivalent to a dosed formula of G. To prove this we first reformulate the normal form theorem for G. Then we show that each G-formula is equiinterpretale to a formula of the form ~k T (k = 0 , . . . , 0% ~oo T being _1_). Of course, o~r result holds for ILW as well as for other extensions of ILF. Van Benthem, Boolos and Magari (see [Bool], [Magi) give independent ly a characterization of the set of all dosed modal formulas of provability logic tha t are valid w.r.t, interpretat ions in e.g. (IA0 + f~l). Visser remarks that we in fact extend their result to dosed formulas of interpretabil i ty logic. He proves independent ly the same result as we for the case of more complicated modal language with an additional propositional constant for the ari thmetical axiom Ezzp (see [Vi89]). 2. DEFINITION. Let [Sn_k be as above and let D~,I, be T. Let, for oo >_ i > j > O, F(i , j) be the formula [21,i, -+ [sJ.• More generally, if oo >_ il > j l > i2 > j2 > . . . > /~ > jn _> 0 then F ( i l , j l , . . . , i n , j ~ ) i s F ( i l , j l )& . . . &F(in,j~). We admit n = 0; then F( ) is T. Note that we may think of the tuple (Q, j l , . . . . j,,) as of the union of half dosed intervals [j,~,i,~) U . . . U[j~, i l ) of integers. Following this we identify the domain of F with the Boolean algebra of finite and cofmite subsets of na tura l numbers . 3. LEMMA. Each closed G-formula is G-equivalent to some formula We give only some hints for a proof since the lemma is only an inessential modification of the normal form of Artemov (his normal forms are finite conjunctions of formulas F( i , i + 1) and negations of such conjunctions). Since F(0) is T it suffices to show that our normal forms are closed o_nder negation, conjunction and necessitation. Indeed, if A, B are finite or coilnite sets of integers then -~F(A) is G-equivalent to F(-A) , F(A)&F(B) is G-equivalent to F(A U B), [:IF(0) is G-equivalent to T and if A ~ ~ and j = rain(A) then DF(A) is G-equivalent to DJ+I.• thus to F([j + 1, oo)). Elementary details are left to the reader. 4. DEFINITION. ~ N r means (~ D r gz (r D ~). A Note on the Normal Form . . . 27 5. • For each G-formula T there is an n = O, 1 , . . . , oo such that I L F ~o N 0 '~ T. In more details, we have the following: (1) I L IF(~}) N T. zf A = ~,,, in) u . . . u ~ , i , ) a,~d ,~ > 1 then (2) I L F F(A) N T if j~ > 0 (3) I L k F(A) N 0 i. T if j~ = O. (Note that (>kT is equivalent to n k l -+ • i.e. to F(k,0).) PROOF. (3) I L proves the following:	boolean algebra;co-ment;database normalization;emoticon;interpretability logic;kleene's t predicate;logical connective;modal logic;np-equivalent;numerical aperture;provability logic;theory (mathematical logic)	Petr Hájek;Vítezslav Svejdar	1991	Studia Logica	10.1007/BF00370384	decidability;conjunctive normal form;mathematical analysis;discrete mathematics;philosophy;computer science;mathematics;normal-form game;atomic formula;algorithm	AI	-6.554737979482903	13.68596081161448	185090
17985a9c348c7a47c8dbf64a1c3fdc56a6f5a139	a complete axiom system for polygonal mereotopology of the real plane	topology;logique des predicats;regle;spatial reasoning;predicate logic;mereologie;fonction;geometrie euclidienne;logic;topologie;polygone;axiom;calcul propositionnel;interpretation of;espace;raisonnement;function;isomorphism;property;boolean algebra;polygon;logique du premier ordre;first order;poligon;finitude;symbole;symbol;system;graph;plan reel;graphe;mereology;region;propositional calculus;propriete;euclidean geometry;algebre de boole;space;isomorphisme;systeme;completeness;reasoning;sous ensemble ouvert;completude;rule;plan reel ferme;constante;interpretation de;first order logic;inference;spatial;axiome;constant;zero	"""This paper presents a calculus for mereotopological reasoning in which two-dimensional spatial regions are treated as primitive entities. A rst order predicate language L with a distinguished unary predicate c(x), function-symbols +; : and and constants 0 and 1 is de ned. An interpretation R for L is provided in which polygonal open subsets of the real plane serve as elements of the domain. Under this interpretation the predicate c(x) is read as \region x is connected"""" and the function-symbols and constants are given their meaning in terms of a Boolean algebra of polygons. We give an alternative interpretation S based on the real closed plane which turns out to be isomorphic to R. A set of axioms and a rule of inference are introduced. We prove the soundness and completeness of the calculus with respect to the given interpretation. 1 The problem As anyone who has read a book on point-set topology knows, Euclidean spaces contain regions which could not possibly be useful for representing the shapes of everyday objects. Fractal dust, in nitely convoluted boundaries and other pathological constructions simply do not arise in the world of desks and chairs arranged in a room, or of plots of land drawn on a map, or of electronic components etched on a silicon chip. They are mere artifacts of a model of space according to which all spatial entities are sets of points, and all spatial properties are analysable in terms of the metric relations between points. Perhaps, then, we can develop more e cient and parsimonious ways of representing and reasoning about space by taking regions, rather than points, as primitive. The best known theory of this kind is Tarski's [12] axiomatization of Euclidean geometry based on spheres. But the policy of taking regions as primitive is perhaps most attractive when considering problems involving mereological (part-whole) and other topological notions|that is, where no metric information is to hand. Recent interest in \mereotopology"""", much of it from within the AI community, dates from the work of Clarke [5],[6], following earlier work of Whitehead [13]. See, for example, Randall, Cui and Cohn [11], Gotts, Gooday and Cohn [7], and Borgo, Guarino and Masolo [4]. A mereotopological calculus is an axiomatic system in a formal language whose variables are to be thought of as ranging over spatial regions, and whose non-logical constants are to be thought of as expressing primitive topological properties and relations involving these regions. Mereotopological calculi vary as to which primitives they employ, and the axioms they propose. Clarke's calculus has a single binary relation of \connection"""" with the gloss that two regions are connected if they share a common point. Randall, Cui and Cohn also use a binary connection relation, but take two regions be connected if their closures share a common point. Borgo, Guarino and Masolo, by contrast, use a primitive \part-of"""" relation (the mereological component) together with a primitive property of \self-connectedness"""" (the topological component). However, all three approaches are motivated by the prospect of an adequate account of space in which regions are not identi ed with sets of points. With any such calculus, the question arises as to whether the proposed axioms constitute a good theory of space|one that will lead to correct inferences about the everyday situations whose spatial features the calculus purports to model. More technically, we must ask whether physical space|at least approximately, and on everyday scales|is a model of the proposed axioms under the intended interpretation, and if so, how completely those axioms capture its features. This question has been answered for Clarke's system by Biacino and Gerla [2], who prove a completeness result guaranteeing that the regular sets of a Euclidean space are a model of Clarke's axioms (regular sets are explained below). This result is of interest because, whatever their faults, IR2 and IR3 are at least known to be workable models of physical space. Unfortunately, as Biacino and Gerla note, under the proposed interpretation, the language really allows only mereological relations to be expressed. In particular, Clarke's suggestions for capturing topological notions such as, for example, the relation of two objects' touching tangentially, do not have the desired e ect. So although Biacino and Gerla's theorem is the kind of result needed to validate a mereotopological calculus, the particular interpretation to which it applies is too weak to be topologically interesting. Another approach to mereotopology in which semantics plays an important part is taken by Asher and Vieu [1]. They present a calculus|also based on a binary relation of connection|together with 1 a formal semantics in which the individuals are identi ed with certain subsets of a particular type of topological space. Soundness and completeness proofs are duly provided. Unfortunately, Asher and Vieu's topological spaces are strange objects, far removed from the standard Euclidean model of space. (In particular, as Asher and Vieu point out, these spaces are not dense.) While Asher and Vieu would reply that their aim is to present a mereotopological theory responsive to the demands of modelling cognition and natural language, rather than to reconstruct the mereotopology of Euclidean space, the radical nature of their models makes the axioms hard to assess. In this paper, we present a mereotopological calculus for 2-dimensional spatial reasoning. Our axiom system, though considerably more complex than others that have been proposed, has the advantage of being sound and complete with respect to a familiar and topologically non-trivial spatial interpretation. By familiar, we mean a spatial interpretation based on an ontology known to provide a workable model of physical space. By topologically non-trivial, we mean one under which the formulae of the calculus express a wide range of topological (not just mereological) properties and relations. Thus, although regions are still regarded as primitive within the calculus, the axiom system is shown to characterize a familiar spatial ontology of proven utility. 2 A mereotopological calculus 2.1 The syntax of L Formally, L is a rst-order language with equality, having the non-logical constants c(x), 0, 1, , + and : , where c(x) is a 1-place predicate, 0 and 1 are constant symbols, is a 1-place function symbol and + and : are 2-place function symbols. In other words, L, is the language of Boolean algebra with a distinguished predicate c(x). Having de ned our mereotopological language, we give a formal semantics in terms of familiar spatial constructions. We stress that the calculus itself cannot talk about these constructions: as far as it is concerned, spatial regions are primitive, and the interpretations of its non-logical constants are simply functions and relations de ned over these primitives. But the familiar interpretation will guarantee that our mereotopological calculus really is an appropriate calculus for spatial reasoning. In fact, we present two formal models for our mereotopological language L, which we denote R and S and which turn out to be isomorphic. We begin with the more intuitive of the two. 2.2 The model R Our rst task is to establish our domain of interpretation, R. It is now fairly standard in treatments of mereotopology to con ne attention to regular sets. De nition 2.1 Let X be a topological space and x X. Then the set Sfy X jy open, y \ x = ;g is an open set in X called the pseudocomplement of x, written x0. We say that x X is regular if x = x00. The following well-known theorem underlies the importance of the regular sets to mereotopology. We state it here without proof. (See, e.g. Johnstone [8], chapter I, section 1.13.) Theorem 2.1 Let X be a topological space. Then the set of regular sets in X forms a Boolean algebra M(X) with top and bottom de ned by 1 = X and 0 = ;, and Boolean operations de ned by x:y = x \ y, x+ y = (x [ y)00 and x = x0. Let IR2 denote the real plane with the usual Euclidean topology. Our domain R will form a Boolean subalgebra of M(IR2). Before turning to its construction, let us pause to x our intuitions about M(IR2). Basically, we can think of regular sets in IR2 as open sets with no internal cracks or point-holes (compare g. 1a with g. 1b). The product, x:y, of two regular sets x and y is simply their intersection, which is guaranteed to be a regular set. The sum, x+y, of two regular sets x and y is a little more complicated; very roughly, it 2 a) Three regular sets (each differently shaded) b) Three non-regular sets c) Three pairs of regular sets and their sums d) Three polygons (each di erently shaded) Figure 1: Some regular sets of the plane and their Boolean combinations is the union of x and y with any internal boundaries removed ( g. 1c). Finally, the pseudocomplement, x, of a regular set x is simply that part of the plane not occupied by x or its boundary. Any line in the plane cuts the plane into two connected, open sets, called half-planes. It is easy to see that these sets are regular, with each being the pseudocomplement of the other. Hence, we can speak about their sums, products and complements in M(IR2). De nition 2.2 A basic polygon in IR2 is the intersection of nitely many half-planes in IR2. A polygon in IR2 is the sum, in the Boolean algebra M(IR2), of any nite set of basic polygons in IR2. We denote the set of polygons in IR2 by R. Fig. 1d shows some polygons. Note that polygons, in this sense, need not be connected; nor need their complements be. Furthermore a polygon is not necessarily bounded. Note that ; and IR2 also count as polygons. We have the following result: Lemma 2.1 R is a Boolean subalgebra of M(IR2). Proof: We need only show that R is closed under the Boolean operations. But this is obvious given the distribution laws for M(IR2). 2 Idealizing slightly, R is the set of regions recognized by most compute"""	artifact (software development);axiomatic system;boolean algebra;boolean operations on polygons;cognition;edmund m. clarke;electronic component;emoticon;entity;first-order predicate;formal language;fractal;geographic information system;gloss (annotation);integrated circuit;interpretation (logic);line level;logical constant;mereology;mereotopology;monadic predicate calculus;np-completeness;naruto shippuden: clash of ninja revolution 3;natural language;occam's razor;peano axioms;semantics (computer science);sequent calculus;shading;simply typed lambda calculus;solid modeling;soundness (interactive proof);spatial–temporal reasoning;unary operation;x00	Ian Pratt-Hartmann;Dominik J. Schoop	1998	J. Philosophical Logic	10.1023/A:1004361501703	euclidean geometry;discrete mathematics;polygon;mathematics;algorithm	Theory	-5.95517691629669	12.704804525773321	185244
a833473e94707b26d261d8d07fe9bc23e4791e2b	bck is not structurally complete	admissible rules;structural completeness;bck logic		turing completeness	Tomasz Kowalski	2014	Notre Dame Journal of Formal Logic	10.1215/00294527-2420642	discrete mathematics;algorithm;algebra	Logic	-9.12847349614885	13.638737649656422	185394
4367907929f37aa5328a3a23cd8c3fc68c5e99c9	polymodal lattices and polymodal logic	filtroid;polymodal logic;polymodal lattice;polymodality	A polymodal lattice is a distributive lattice carrying an n-place operator preserving top elements and certain finite meets. After exploring some of the basic properties of such structures, we investigate their freely generated instances and apply the results to the corresponding logical systems polymodal logics which constitute natural generalizations of the usual systems of modal logic familiar from the literature. We conclude by formulating an extension of Kripke semantics to classical polymodal logic and proving soundness and completeness theorems. Mathematics Subject Classification: 03G10, 06D99, 03B45.	kripke semantics;mathematics subject classification;modal logic	John L. Bell	1996	Math. Log. Q.	10.1002/malq.19960420119	discrete mathematics;mathematics;algorithm	Logic	-8.819876665308154	13.995996521810438	187027
5615b90e4d513d165ea397198219090972fad8d6	meta-resolution: an algorithmic formalisation	satisfiability;davis putnam;data structure	We study the Tseitin formulae (Tseitin, 1970) on which resolution is known to be inefficient. We first give a new proof of the satisfiability condition and precise the number of solutions if any and otherwise the minimal contradictory subformula. Then, defining a new data structure, we introduce the meta-argument of that proof in the Davis-Putnam and Loveland procedure (Loveland, 1978) and obtain a new algorithm for SAT especially efficient on these formulae.		Jean-Denis Fouks;Jean-Claude Spehner	1996	Theor. Comput. Sci.	10.1016/0304-3975(95)00155-7	combinatorics;discrete mathematics;data structure;computer science;mathematics;programming language;algorithm;satisfiability	ECom	-9.703410139162324	17.899757659248774	187184
d52e0b7e09085f2045d7822f822a929d94eabdef	the clone relation of a binary relation		In a recent paper, De Baets et al. introduced the clone relation of a strict order relation. Two elements of a poset are said to be a pair of clones (or to be clones) if every other element that is greater (resp. smaller) than one of them is also greater (resp. smaller) than the other one. This clone relation played a key role in the characterization of the L-fuzzy tolerance relations and the L-fuzzy equivalence relations that a strict order relation is compatible with. In this paper, we extend the notion of clone relation to any binary relation. Although the definition of such extension is trivial, the corresponding properties significantly differ from those of the clone relation of a strict order relation. We analyse the most important ones among these properties, paying particular attention to a partition of the clone relation in terms of three different types of pairs of clones.	fuzzy set;recurrence relation;turing completeness;utility functions on indivisible goods	Hassane Bouremel;Raúl Pérez-Fernández;Lemnaouar Zedam;Bernard De Baets	2017	Inf. Sci.	10.1016/j.ins.2016.12.008	asymmetric relation;combinatorics;discrete mathematics;inverse relation;binary relation;mathematics;equivalence relation;total relation;algorithm	Logic	-5.6034984464130115	11.55916245438335	187281
83cf74a423d26d5897179745b1fff83dd1c3f96e	light dialectica program extraction from a classical fibonacci proof	proof mining;refined a translations;program extraction from classical proofs;proof complexity;light dialectica interpretation;quantifiers without computational meaning;complexity of extracted programs;fibonacci number;computationally redundant contractions;computational complexity;strong normalization;recursive algorithm;godel s functional dialectica interpretation	We demonstrate program extraction by the Light Dialectica Interpretation (LDI) on a minimal logic proof of the classical existence of Fibonacci numbers. This semi-classical proof is available in MinLog’s library of examples. The term of Gödel’s T extracted by the LDI is, after strong normalization, exactly the usual recursive algorithm which defines the Fibonacci numbers (in pairs). This outcome of the Light Dialectica meta-algorithm is much better than the T-program extracted by means of the pure Gödel Dialectica Interpretation. It is also strictly less complex than the result obtained by means of the refined A-translation technique of Berger, Buchholz and Schwichtenberg on an artificially distorted variant of the input proof, but otherwise it is identical with the term yielded by Berger’s Kripke-style refined A-translation. Although syntactically different, it also has the same computational complexity as the original program yielded by the refined A-translation from the undistorted input classical Fibonacci proof.	algorithm;computational complexity theory;gödel;minlog;metaheuristic;normalization property (abstract rewriting);recursion (computer science);semiconductor industry	Mircea-Dan Hernest	2007	Electr. Notes Theor. Comput. Sci.	10.1016/j.entcs.2006.10.050	dialectica interpretation;discrete mathematics;fibonacci number;computer science;mathematics;programming language;computational complexity theory;proof complexity;algorithm;recursion	PL	-10.201529763043471	15.851378844869208	187721
a7061f92f64267e4187837129dd3fb0ae4d0b719	on relating ctl to datalog	efficient algorithm;satisfiability;specification language;model checking;query evaluation;linear time;logic in computer science;linear time logic;database query	CTL is the dominant temporal specification language in practice mainly due to the fact that it admits model checking in linear time. Logic programming and the database query language Datalog are often used as an implementation platform for logic languages. In this paper we present the exact relation between CTL and Datalog and moreover we build on this relation and known efficient algorithms for CTL to obtain efficient algorithms for fragments of stratified Datalog. The contributions of this paper are: a) We embed CTL into STD which is a proper fragment of stratified Datalog. Moreover we show that STD expresses exactly CTL – we prove that by embedding STD into CTL. Both embeddings are linear. b) CTL can also be embedded to fragments of Datalog without negation. We define a fragment of Datalog with the successor build-in predicate that we call TDS and we embed CTL into TDS in linear time. We build on the above relations to answer open problems of stratified Datalog. We prove that query evaluation is linear and that containment and satisfiability problems are both decidable. The results presented in this paper are the first for fragments of stratified Datalog that are more general than those containing only unary EDBs.	algorithm;database;datalog;embedded system;emoticon;logic programming;model checking;query language;std bus;specification language;time complexity;unary operation	Foto N. Afrati;Theodore Andronikos;Vassia Pavlaki;Eugénie Foustoucos;Irène Guessarian	2003	CoRR		time complexity;model checking;specification language;computation tree logic;computer science;theoretical computer science;ctl*;datalog;programming language;algorithm;satisfiability	DB	-8.482181868004172	18.247290252691542	188096
4084ff26d79cd0642d7f47c08ccb2f31a0f47149	decidability and undecidability of extensions of second (first) order theory of (generalized) successor		We study certain first and second order theories which are semantically defined as the sets of all sentences true in certain given structures. Let be a structure where A is a non-empty set, λ is an ordinal, and P α is an n ( α )-ary relation or function 4 on A . With we associate a language L appropriate for which may be a first or higher order calculus. L has an n ( α )-place predicate or function constant P for each α A ; (3) restricted (weak) second-order calculi which contain monadic predicate variables ranging over finite subsets of A .	decision problem;undecidable problem	Calvin C. Elgot;Michael O. Rabin	1966	J. Symb. Log.		combinatorics;discrete mathematics;first-order logic;mathematics;algebra	Logic	-7.248453946444752	15.39287221590805	188255
069246f3b424c724cbb51b2300cd54b5f4e88428	pseudo-retract functors for local lattices and bifinite l-domains	denotational semantic	Recently, a new category of domains used for the mathematical foundations of denotational semantics, that of L-domains, have been under study. In this paper we consider a related category of posets, that of local lattices. First, a completion operator taking posets to local lattices is developed, and then this operator is extended to a functor from posets with embedding-projection pairs to local lattices with embedding-projection pairs. The result of applying this functor to a local lattice yields a local lattice isomorphic to the first; this functor is a pseudo-retract. Using the functor into local lattices, a continuous pseudo-retraction functor from ω-bifinite posets to ωbifinite L-domains can be constructed. Such a functor takes a universal domain for the ω-bifinite posets to a universal domain for the ω-bifinite L-domains. Moreover, the existence of such a functor implies that, from the existence of a saturated universal domain for the ω-algebraic bifinites, we can conclude the existence of a saturated universal domain for the ω-bifinite L-domains. Comments University of Pennsylvania Department of Computer and Information Science Technical Report No. MSCIS-89-37. This technical report is available at ScholarlyCommons: http://repository.upenn.edu/cis_reports/788 Pseudo-Retract Functors For Local Lattices And Bifinite L-Domains MS-CIS-89-37 LOGIC & COMPUTATION 08	denotational semantics;incidence poset;information and computer science;information science	Elsa L. Gunter	1989		10.1007/BFb0040267	operator (computer programming);isomorphism;denotational semantics;functor;complete lattice;retract;principal ideal;lattice (order);mathematics;topology	Theory	-8.048179958032152	13.473606783293016	188331
bd8985e12d04e37809f3089b12246ba110ff3305	a henkin-style proof of completeness for first-order algebraizable logics	henkin theory;completeness theorem;algebraizable logics;first order logic	This paper considers Henkin’s proof of completeness of classical first-order logic and extends its scope to the realm of algebraizable logics in the sense of Blok and Pigozzi. Given a propositional logic L (for which we only need to assume that it has an algebraic semantics L and a suitable disjunction) we axiomatize two natural firstorder extensions L∀ and L∀ and prove that the former is complete with respect to all models over algebras from L, while the latter is complete with respect to all models over relatively finitely subdirectly irreducible algebras. While the first completeness result is relatively straightforward, the second requires non-trivial modifications of Henkin’s proof by making use of the disjunction connective. As a byproduct, we also obtain a form of Skolemization provided that the algebraic semantics admits regular completions. The relatively modest assumptions on the propositional side allow for a wide generalization of previous approaches by Rasiowa, Sikorski, Hájek, Horn, and others and help to illuminate the ‘essentially first-order’ steps in the classical Henkin’s proof. §	algebraic semantics (computer science);completeness (knowledge bases);first-order logic;first-order predicate;irreducibility;logical connective;propositional calculus;skolem normal form	Petr Cintula;Carles Noguera	2015	J. Symb. Log.	10.1017/jsl.2014.19	t-norm fuzzy logics;combinatorics;discrete mathematics;first-order logic;mathematics;programming language;gödel's completeness theorem	Logic	-9.274921393207643	14.728512596905661	188601
9bd3eda523860439c773f9e4cfa18f5faa067d64	complete and atomic algebras of the infinite valued łukasiewicz logic	direct product;boolean algebra	The infinite-valued logic of Łukasiewicz was originally defined by means of an infinite-valued matrix. Łukasiewicz took special forms of negation and implication as basic connectives and proposed an axiom system that he conjectured would be sufficient to derive the valid formulas of the logic; this was eventually verified by M. Wajsberg. The algebraic counterparts of this logic have become know as Wajsberg algebras. In this paper we show that a Wajsberg algebra is complete and atomic (as a lattice) if and only if it is a direct product of finite Wajsberg chains. The classical characterization of complete and atomic Boolean algebras as fields of sets is a particular case of this result.	łukasiewicz logic	Roberto Cignoli	1991	Studia Logica	10.1007/BF00370678	mv-algebra;boolean algebra;discrete mathematics;topology;philosophy;łukasiewicz logic;pure mathematics;mathematics;direct product;algebra	Logic	-7.985567537412904	12.927298879852641	188899
1c7c53b3f907cb75d3f59f68be0bcd0175b38fe1	combining enumeration and deductive techniques in order to increase the class of constructible infinite models	computacion informatica;search space;satisfiability;first order;ciencias basicas y experimentales;grupo a	A new method for building infinite models for first-order formulae is presented. The method combines enumeration techniques with existing deductive (in a broad sense) ones. Its soundness and completeness w.r.t. the class of models that can be represented by equational constraints are proven. This shows that the use of enumeration techniques strictly increases the power of existing methods for building Herbrand models that are not complete in this sense. Some strategies are proposed to reduce the search space. We give examples and show how to use this approach for building interactively a model of a formula introduced by Goldfarb in his proof of the undecidability of the Gödel class with identity. This formula is satisfiable but has no finite model. c © 2000 Academic Press	first-order predicate;gödel;heuristic (computer science);information;interactivity;mathematical model;ph (complexity);skolem normal form;term algebra;undecidable problem	Ricardo Caferra;Nicolas Peltier	2000	J. Symb. Comput.	10.1006/jsco.1999.0360	combinatorics;discrete mathematics;first-order logic;mathematics;algorithm;algebra;satisfiability	AI	-10.968838094833925	16.3404880946439	189171
131827d9aac05ff26477609047642a1098e5fa44	survey of disjoint np-pairs and relations to propositional proof systems	teoria demonstracion;theorie preuve;proof theory;calcul propositionnel;program verification;verificacion programa;propositional calculus;calculo proposicional;verification programme	A disjoint NP-pair is a pair (A,B) of nonempty, disjoint sets A and B such that both A and B belong to the complexity class NP.1 We let DisjNP denote the collection of all disjoint NP-pairs. A separator of a disjoint NP-pair (A,B) is a set S such that A ⊆ S and B ⊆ S (Figure 1). A fundamental question is whether (A,B) has a separator belonging to P. In this case the pair is P-separable; otherwise, it is P-inseparable.	complexity class;propositional proof system;separable polynomial	Christian Glaßer;Alan L. Selman;Liyu Zhang	2005	Electronic Colloquium on Computational Complexity (ECCC)	10.1007/11685654_11	discrete mathematics;computer science;proof theory;mathematics;propositional calculus;structural proof theory;algorithm	Theory	-5.479867952575661	15.810259999032757	189266
6a939e50fc7430c7fb5f9dd6b5db33f7a2f5ee08	the power of primitive positive definitions with polynomially many variables		Two well-studied closure operators for relations are based on existentially quanti ed conjunctive formulas, primitive positive (p.p.) de nitions, and primitive positive formulas without existential quanti cation, quanti er-free primitive positive de nitions (q.f.p.p.) de nitions. Sets of relations closed under p.p. de nitions are known as co-clones and sets of relations closed under q.f.p.p. de nitions as weak partial co-clones. The latter do however have limited expressivity, and the corresponding lattice of strong partial clones is of uncountably in nite cardinality even for the Boolean domain. Hence, it is reasonable to consider the expresiveness of p.p. de nitions where only a small number of existentially quanti ed variables are allowed. In this paper we consider p.p. de nitions allowing only polynomially many existentially quanti ed variables, and say that a co-clone closed under such de nitions is polynomially closed, and otherwise superpolynomially closed. We investigate properties of polynomially closed co-clones and prove that if the corresponding clone contains a k-ary near-unanimity operation for k ≥ 3 then the co-clone is polynomially closed, and if the clone does not contain a k-edge operation for any k ≥ 2, then the co-clone is superpolynomially closed. For the Boolean domain we strengthen these results and prove a complete dichotomy theorem separating polynomially closed co-clones from superpolynomially closed co-clones. Using these results, we then proceed to investigate properties of strong partial clones corresponding to superpolynomially closed co-clones. We prove that if Γ is a nite set of relations over an arbitrary nite domain such that the clone corresponding to Γ is essentially unary, then the strong partial clone corresponding to Γ is of in nite order and cannot be generated by a nite set of partial functions.	unary operation	Victor Lagerkvist;Magnus Wahlström	2017	J. Log. Comput.	10.1093/logcom/exw005	discrete mathematics;mathematics;operator (computer programming)	Logic	-7.094147817488787	15.349222165800347	189488
6356c8283dede4a24d96aacf3aac4de52e5690ad	a language for multiplicative-additive linear logic	multiplicative additive linear logic;cut elimination;programming language;process semantics;linearly distributive categories;category theory;rewrite systems;rewriting modulo equations;term logic	A term calculus for the proofs in multiplicative-additive linear logic is introduced and motivated as a programming language for channel based concurrency. e term calculus is proved complete for a semantics in linearly distributive categories with additives. It is also shown that proof equivalence is decidable by showing that the cut elimination rewrites supply a conuent rewriting system modulo equations.	apl;concurrency (computer science);linear logic;modulo operation;programming language;rewriting;turing completeness;utility functions on indivisible goods	J. Robin B. Cockett;Craig A. Pastro	2005	Electr. Notes Theor. Comput. Sci.	10.1016/j.entcs.2004.06.049	discrete mathematics;description logic;higher-order logic;geometry of interaction;computer science;mathematics;curry–howard correspondence;programming language;logic programming;term logic;algorithm;category theory;algebra	Logic	-11.343612232635188	16.38019041032996	190035
69f585c29ea591ba7fe8dc2eaf7e7eb24052e4f2	satisfying subtype inequalities in polynomial space	langage fonctionnel;soustype;subtype;satisfactoriabilidad;desigualdad;03b;inequality;lenguaje funcional;subtyping;inegalite;semantics;satisfiability;subtype inequality;semantica;semantique;algorithme;upper bound;algorithm;polynomial space;subtipo;soustypage;decidibilidad;satisfaisabilite;inegalite sous type;decidabilite;functional language;espace polynome;type inference;lower bound;decidability;algoritmo	This paper studies the complexity of type inference in l-calculus with subtyping. Infering types is equivalent to solving systems of subtype inequalities. These inequalities are solved over simple types ordered structurally from an arbitrary set of base subtype assumptions. In this case, we give a new PSPACE upper bound. Together with the previously known lower bound, this result settles completely the complexity of the problem, which is PSPACE-complete. We use a technique of independent theoretical interest that simplifies existing methods developed in the literature. Finally, we show how our polynomial space algorithm, although mainly theoretical, can lead to a slight practical improvement of existing implementations. Copyright 2002 Elsevier Science B.V.	pspace	Alexandre Frey	2002	Theor. Comput. Sci.	10.1016/S0304-3975(00)00314-5	combinatorics;discrete mathematics;subtyping;computer science;mathematics;semantics;upper and lower bounds;programming language;algorithm;algebra	ECom	-8.302903324749037	17.995752056118757	190152
e898d2c7810cff440c0b8164d8badcc57394b244	correction to: infinitary addition, real numbers, and taut monads			monad (functional programming)	George Janelidze;Ross Street	2018	Applied Categorical Structures	10.1007/s10485-018-9528-0	discrete mathematics;mathematics;real number;monad (functional programming)	Logic	-9.8994671497856	15.006949253161629	190314
129e53e382a56e00c946460748ab265bafd725a6	interpolation in computing science: the semantics of modularization	theorem;interpolation;logical framework;logics;software systems;theory algebra;modularization theorem;science philosophy;normal form;logique;module algebra;philosophie des sciences	The Interpolation Theorem, first formulated and proved by W. Craig fifty years ago for predicate logic, has been extended to many other logical frameworks and is being applied in several areas of computer science. We give a short overview, and focus on the theory of software systems and modules. An algebra of theories TA is presented, with a nonstandard interpretation of the existential quantifier $${\exists}$$ . In TA, the interpolation property of the underlying logic corresponds with the quantifier combination property $${\exists{\Sigma} \,{\exists{\Pi} \,{S}} \equiv \exists{(\Sigma \cup \Pi)} \,{S}}$$ . It is shown how the Modularization Theorem, the Factorization Lemma and the Normal Form Theorem for module expressions can be proved in TA.		Gerard R. Renardel de Lavalette	2008	Synthese	10.1007/s11229-008-9358-y	discrete mathematics;theorem;logical framework;interpolation;pure mathematics;mathematics;software system	Logic	-10.694438438652154	11.851825145765062	191173
2f87ebb08592951339a3e74943049db1ab61bf32	final coalgebras and the hennessy-milner property	satisfiability;formal logic	The existence of a final coalgebra is equivalent to the existence of a formal logic with a set (small class) of formulas that has the Hennessy-Milner property of distinguishing coalgebraic states up to bisimilarity. This applies to coalgebras of any functor on the category of sets for which the bisimilarity relation is transitive. There are cases of functors that do have logics with the Hennessy-Milner property, but the only such logics have a proper class of formulas. The main theorem gives a representation of states of the final coalgebra as certain satisfiable sets of formulas. The key technical fact used is that any function between coalgebras that is truth-preserving and has a simple codomain must be a coalgebraic morphism.	bisimulation;emoticon;hindley–milner type system;initial algebra;theory;vertex-transitive graph	Robert Goldblatt	2006	Ann. Pure Appl. Logic	10.1016/j.apal.2005.06.006	combinatorics;discrete mathematics;mathematics;logic;algebra;satisfiability	Logic	-7.314551887471991	15.393320289187411	191884
b004f8c7aec4db42f3fb401b735b09b1ebf68b5c	constructive canonicity in non-classical logics	non classical logic;canonical model;modal logic;first order	Sufficient syntactic conditions for canonicity in intermediate and intuitionistic modal logics are given. We present a new technique which does not require semantic first-order reduction and which is constructive in the sense that it works in an intuitionistic metatheory through a model without points which is classically isomorphic to the usual canonical model.	canonical model;first-order reduction;modal logic	Silvio Ghilardi;Giancarlo Meloni	1997	Ann. Pure Appl. Logic	10.1016/S0168-0072(96)00048-6	modal logic;normal modal logic;non-classical logic;discrete mathematics;intermediate logic;first-order logic;canonical model;mathematics;accessibility relation;algorithm	Logic	-10.756473052838967	14.15820910901963	192364
5655efb2059407d9d3f31ba3b5ca033a39117e24	on the unification problem for cartesian closed categories	libraries;cartesian closed categories;computer languages;mathematics;convergence;isomorphisms;higher order languages cartesian closed categories axiomatization isomorphisms unification problem np complete retrieving functions polymorphic higher order unification theorem proving logic programming type reconstruction;retrieving functions;axiomatization;lambda calculus;polymorphic higher order unification;higher order;theorem proving;type reconstruction;higher order languages;programming theory;logic programming;mathematical programming;computational complexity;calculus;polymorphism;indexation;np complete;computer science;logic programs;programming theory computational complexity decidability lambda calculus;unification problem;decidability;equations logic programming computer science libraries mathematical programming mathematics computer languages calculus convergence;semantics of programming languages	Cartesian closed categories (CCC’s) have played and continue to play an important role in the study of the semantics of programming languages. An axiomatization of the isomorphisms which hold in all Cartesian closed categories discovered independently by Soloviev and Bruce and Longo leads to seven equalities. We show that the unification problem for this theory is undecidable, thus settling an open question. We also show that an important subcase, namely unification modulo the linear isomorphisms, is NP-complete. Furthermore, the problem of matching in CCC’s is NPcomplete when the subject term is irreducible. CCC-matching and unification form the basis for an elegant and practical solution to the problem of retrieving functions from a library indexed by types investigated by Rittri. It also has potential applications to the problem of polymorphic higher-order unification, which in turn is relevant to theorem proving, logic programming, and type reconstruction in higher-order languages.	automated theorem proving;axiomatic system;cartesian closed category;graph isomorphism;han unification;higher-order function;irreducibility;logic programming;modulo operation;np-completeness;programming language;semantics (computer science);type inference;undecidable problem;unification (computer science)	Paliath Narendran;Frank Pfenning;Richard Statman	1993	J. Symb. Log.	10.1109/LICS.1993.287600	decidability;polymorphism;discrete mathematics;np-complete;higher-order logic;convergence;computer science;lambda calculus;mathematics;automated theorem proving;isomorphism;programming language;computational complexity theory;logic programming;algorithm	Logic	-7.165830563295463	15.929679604953328	192777
486df37eda8ab0ac5e1b01b44d76248b3f778e94	the kinds of truth of geometry theorems	fonction rationnelle;truth;780101 mathematical sciences;computation theory and mathematics;grobner basis;base grobner;theorem proving;demonstration theoreme;algebraic geometry;230112 topology and manifolds;geometria algebraica;expanding knowledge;proof by refutation;funcion racional;demostracion teorema;computation theory and mathematics not elsewhere classified;rational function;information and computing sciences;expanding knowledge in the mathematical sciences;geometrie algebrique	Proof by refutation of a geometry theorem that is not universally true produces a Gröbner basis whose elements, called side polynomials, may be used to give inequations that can be added to the hypotheses to give a valid theorem. We show that (in a certain sense) all possible subsidiary conditions are implied by those obtained from the basis; that what we call the kind of truth of the theorem may be derived from the basis; and that the side polynomials may be classified in a useful way. We analyse the relationship between side polynomials and kinds of truth, and we give a unified algorithmic treatment of side polynomials, with examples generated by an implementation. 1 Algebraic Preliminaries Throughout, let n be a positive integer and L a fixed field containing the field Q of rational numbers. Let Q[Xn] be the ring of polynomials with n-variable set Xn = {x1, x2, . . ., xn} over Q. Let F ⊆ Q[Xn] and f ∈ Q[Xn]. We call (F, f) a possible theorem. (F )Xn denotes the ideal generated by F in Q[Xn]. For a ∈ L we denote by f(a) the result of substituting a for their corresponding variables in f and evaluating. For F ⊆ Q[Xn], let CXn(F ) = {f ∈Q[Xn] | for all a ∈Ln, h(a) = 0 for all h ∈F implies f(a) = 0}, an ideal of Q[Xn] as is easily checked. If the choice of polynomial ring is clear we often write just C(F ). The ideal CXn(F ) depends on the field L. For example if n = 1 and F = {x3+x}, then if L = R is the field of real numbers, CX1(F ) = (x), because x3 + x has only one root x = 0 in R. If L = C, the field of complex numbers, then CX1(F ) = (x 3 + x), because x3 + x has three roots x = 0, i,−i in C. If L is algebraically closed, then by Hilbert’s Nullstellensatz, CXn(F ) = {f ∈ Q[Xn] | f ∈ (F )Xn}, the radical ideal generated by F in Q[Xn]. Dually, for F ⊆ Q[Xn], let VXn(F ) = {a | a ∈ L, f(a) = 0 for all f ∈ F}, J. Richter-Gebert and D. Wang (Eds.): ADG 2000, LNAI 2061, pp. 129–142, 2001. c © Springer-Verlag Berlin Heidelberg 2001 130 Michael Bulmer, Desmond Fearnley-Sander, and Tim Stokes the variety associated with F ⊆ Q[Xn]. Again, we often write just V(F ) if the context is clear, and if F = {f}, a singleton set, we shall often write VXn(f) (or just V(f)) rather than VXn({f}). Varieties are closed under arbitrary intersections and finite unions. There is a familiar dual isomorphism between the lattices of varieties of the form VXn(G) and ideals of the form CXn(G), G ⊆ Q[Xn]. Because the lattice of varieties is distributive and satisfies the descending chain condition, every variety V has a unique decomposition V = V1 ∪ V2 ∪ · · · ∪ Vn into distinct irreducible components (varieties which cannot themselves be expressed non-trivially as unions of two or more proper subvarieties). 2 The Kind of Truth of a Possible Theorem In geometrical theorem proving, the higher level statement of a valid geometry theorem naturally translates into an equational implication involving polynomials, with geometrical predicates such as “points A, B and C are collinear” becoming polynomial equations via coordinatisation. Further, one can require that certain variables be treated as independent, in the sense that no algebraic relations are assumed to hold amongst them. Chou has argued in [2] that the specification of the independent variables in a geometry theorem is an integral part of the algebraic formulation: such variables are chosen according to a notional “construction” that takes place when the geometry theorem hypotheses are read in order. It is this approach we adopt. Formally, suppose the variables in U ⊆ Xn are specified as being independent; view Q[U ] as a subring of Q[Xn]. We say that a variety V is U -generic (or simply generic if the choice of U is clear) if no polynomial in Q[U ] is zero on all of V. If L is algebraically closed, then VXn(F ) is U -generic if and only if (F )Xn ∩Q[U ] = {0}; this is called U -independence in [5]. Let GXn(F ) denote the union of all U -generic irreducible components of VXn(F ). We can now define the four basic kinds of truth of a possible theorem: for F ∪ {f} ⊆ Q[Xn], we say the possible theorem (F, f) is 1. universally true if f is zero on all of VXn(F ), that is, f(a) = 0 for all a ∈ VXn(F ); 2. generically true if f is zero on GXn(F ); 3. generically conditionally true if there exists an irreducible component of GXn(F ) on which f is zero but f is not zero on all of GXn(F ); 4. generically false there is no irreducible component of GXn(F ) on which f is zero. We are further able to separate the final category into two subcategories. A generically false possible theorem is: The Kinds of Truth of Geometry Theorems 131 – degenerately true if there is no irreducible component of GXn(F ) on which f is zero, yet there is at least one irreducible component of VXn(F ) on which f is zero; – rarely true if there is no irreducible component of VXn(F ) on which f is zero. We call these kinds of truth 1 to 4 respectively, with kind 4 split into 4(a) and 4(b) as above. Note that a possible theorem is of at least one of these five types, and exactly one of types 2 to 4 (b). We shall show how to determine the kind of truth of a possible theorem using Gröbner bases for the case where L is algebraically closed. Generic truth reflects the idea that the conclusion holding on the generic irreducible components of the hypotheses is what is “really intended” by the author of a theorem. Generically conditional truth occurs when there is some ambiguity in the hypotheses of the theorem and the conclusion will not hold on all generic irreducible components; this is in practice a rare situation but can occur as illustrated in [2] and elsewhere. Generic falsity occurs when the conclusion is valid on no generic irreducible components. In contrast to rare truth, degenerate truth is at least a form of conditional truth, and the fact that it can be algorithmically distinguished from rare truth has led us to define it separately. Most of these kinds of truth have in essence been considered elsewhere along with algorithmic ways of determining the kind of truth of a possible theorem (see [2,1] and more recently [7,6] for instance). However, so far as we know, no unified algorithmic treatment of the kind presented here, applying to all the kinds of truth discussed here and providing a complete set of side polynomials for each, has appeared previously. 3 Side Polynomials and Kinds of Truth For the remainder of the article, F and f will be an arbitrary subset and an element of Q[Xn] respectively. In [4], a method described by Kapur as refutational theorem proving was considered for proving geometry theorems translated into polynomial equations in this way. Kapur’s approach was based on the idea of considering the conjunction of the hypotheses of the theorem with the negation of the conclusion (in a certain sense), forming a Gröbner basis and determining if it was (1)Xn ; if so, then the theorem was validated and if not the polynomials in the basis could be used to give side conditions in the form of inequations which could be added to the hypotheses in order to give a valid theorem. Such side conditions prove necessary because most standard Euclidean geometry “theorems”, as normally stated, are not universally true, owing to the absence from the hypotheses of certain additional non-degeneracy conditions that may be represented algebraically as inequations. These may correspond to hypotheses of the form “points A, B and C are not collinear”, and so forth. Often, such extra hypotheses are not easy to guess, as is discussed at length in 132 Michael Bulmer, Desmond Fearnley-Sander, and Tim Stokes [2], although synthetic proofs of geometry theorems make at least tacit use of them. Note that any finite number of inequations may be expressed as a single inequation. We show that all possible side conditions (in a certain natural sense) are implied by those obtained from the Gröbner basis used in Kapur’s method, and that the kind of truth of the theorem may be derived from this basis; moreover, the side polynomials may be classified in a useful way. Formally, we say that g ∈ Q[Xn] is a side polynomial for (F, f) if f(a) = 0 for all a ∈ V(F ) for which g(a) = 0. Let the set of all side polynomials for (F, f) be denoted side(F, f). Theorem 1. For the possible theorem (F, f), C(side(F, f)) = (side(F, f))Xn = side(F, f). Proof. Now of course side(F, f) ⊆ (side(F, f))Xn ⊆ C(side(F, f)). Suppose h ∈ C(side(F, f)) and that h(a) = 0 for some a ∈ V(F ). Then because h ∈ C(side(F, f)), by definition there exists g ∈ side(F, f) such that g(a) = 0, so f(a) = 0. Hence h ∈ side(F, f) by definition, and so C(side(F, f)) ⊆ side(F, f). Hence the two sets are equal. For example, letting F = {x1x2} and f = x1, one element of side(F, f) is g = x2, since for c, d ∈ L, if cd = 0 and d = 0, then necessarily c = 0. In other words, for all a ∈ L2, if a ∈ V(F ) and g(a) = 0, then f(a) = 0. In fact in this case, side(F, f) = (x2), the ideal generated by x2 in Q[X2]. There are various kinds of side polynomial, corresponding to the various kinds of truth as we shall show. Thus a side polynomial g for (F, f) is 1. generic if g ∈ Q[U ]; 2. generically resolving if g ∈ Q[U ] and (F, g) is not generically true; 3. degenerate if g ∈ Q[U ] and (F, g) is generically true; 4. extraneous if g ∈ Q[U ] and (F, g) is universally true. Theorem 2. The possible theorem (F, f) is 1. universally true if and only if every polynomial is a side polynomial; 2. generically true if and only if there exists a generic side polynomial; 3. generically conditionally true if and only if there exist no generic side polynomials, but there does exist a generically resolving side polynomial; 4. degenerately true if and only if there exist no generic or generically resolving side polynomials, but there does exist a degenerate side polynomial; 5. rarely true if and only if all side polynomials are extraneous. Proof. Condition 1 is immediate, and condition 2 is proved in [2]. Now suppose	algebraic equation;algorithm;automated theorem proving;basis (linear algebra);degeneracy (graph theory);desmond;emoticon;existential quantification;floor and ceiling functions;gröbner basis;hilbert's nullstellensatz;irreducibility;lecture notes in computer science;linear algebra;navier–stokes equations;polynomial ring;raid;springer (tank);synthetic intelligence	Michael Bulmer;Desmond Fearnley-Sander;Timothy Stokes	2000		10.1007/3-540-45410-1_8	rational function;discrete mathematics;algebraic geometry;computer science;gröbner basis;artificial intelligence;pure mathematics;mathematics;automated theorem proving;algorithm	Theory	-6.0591575929073525	13.320676322375196	192888
cfedb0b67ab2eece5d9bbc59b952ac35e58348bb	proof nets and semi-star-autonomous categories		In this paper, it is proved that Girardu0027s proof nets for multiplicative linear logic characterize free semi-star-autonomous categories.	autonomous robot;semiconductor industry	Willem Heijltjes;Lutz Straßburger	2016	Mathematical Structures in Computer Science	10.1017/S0960129514000395	proof theory;discrete mathematics;combinatorics;geometry of interaction;multiplicative function;mathematics;linear logic	Logic	-11.790491552119168	13.280814992522084	193275
2d8331f52977da1d3d1713dde5341d5466a6993a	on notions of completeness weaker than kripke completeness	boolean algebra;duality theory	We are going to show that the standard notion of Kripke completeness is the strongest one among many provably distinct algebraically motivated completeness properties, some of which seem to be of intrinsic interest. More specifically, we are going to investigate notions of completeness with respect to algebras which are either atomic, complete, completely additive or admit residuals (the last notion of completeness coincides with conservativity of minimal tense extensions); we will be also interested in combinations of these properties.	complete (complexity);kripke semantics;utility functions on indivisible goods	Tadeusz Litak	2004			discrete mathematics;two-element boolean algebra;boolean algebra;completeness (statistics);completeness (order theory);stone's representation theorem for boolean algebras;mathematics;duality (mathematics)	Theory	-9.030976815231964	13.69866559214711	193327
974e91f2a4fc6e7057f12de2386b45890e2cb5e6	the completeness of propositional dynamic logic	modal logic;propositional dynamic logic	ABSTRACT: Propositional modal logic of programs has been introduced by Fischer and Ladner [I], following ideas of Pratt [4]. We shall call it propositional dynamic logic (PDL) following the terminology of Harel, Meyer and Pratt. In the following we prove the completeness I of a rather natural set of axioms for this logic and for an extension of it obtained by allowing the inverse operation which converts a program into its inverse. The following is a brief sketch of the plan of the proof. We introduce two auxiliary notions, that of pseudomodel and that of nonstandard model. Pseudomodels are highly syntactic objecOs and merely represent partial attempts to spell out a model. Thus an inconsistent formula may have a pseudomodel but every attempt to spell out the complete details of a model corresponding to the pseudomodel will, for an inconsistent formula, run into obstacles. A nonstandard model is like a model but we do not insist that R , = (R)*. R , is some reflexive transitive relation containing R, but not necessarily the smallest.	dynamic logic (modal logic);knuth–morris–pratt algorithm;michael j. fischer;modal logic	Rohit Parikh	1978		10.1007/3-540-08921-7_88	modal logic;dynamic logic;zeroth-order logic;s5;normal modal logic;modal μ-calculus;classical logic;resolution;linear temporal logic;description logic;many-valued logic;intuitionistic logic;computer science;intermediate logic;axiom s5;propositional variable;well-formed formula;accessibility relation;multimodal logic;philosophy of logic;autoepistemic logic	AI	-11.558271375560611	12.89523930632854	194563
22fb3fe906a82ed93c7c11ed6a8e7db497538cc7	sequent and hypersequent calculi for abelian and lukasiewicz logics	abelian group	We present two embeddings of infinite-valued Lukasiewicz logic L into Meyer and Slaney’s abelian logic A, the logic of lattice-ordered abelian groups. We give new analytic proof systems for A and use the embeddings to derive corresponding systems for L. These include: hypersequent calculi for A and L and terminating versions of these calculi; labelled single sequent calculi for A and L of complexity co-NP; unlabelled single sequent calculi for A and L.	co-np;newman's lemma;sequent calculus;łukasiewicz logic	George Metcalfe;Nicola Olivetti;Dov M. Gabbay	2002	CoRR			AI	-11.328407755405241	13.508766451616468	194611
21bdc3d1538baf3003a99b826a90fdcbccdb2367	rule-based refinement of petri nets: a survey	rule based;petri net	This contribution provides a thorough survey of our work on rule-based refinement. Rule-based refinement comprises the transformation of Petri nets using rules while preserving certain system properties. Petri net rules and transformations are expressed by morphisms and pushouts. This allows an abstract formulation of our notions independent of a specific Petri net class, as place/transition nets, elementary nets, predicate/transition nets etc. Hence, it is adequate to consider our approach as rule-based refinement of Petri nets in general. We have presented various results in recent years at different conferences. So this contribution gives an overview of our work in a compact form leaving out the technical details.		Julia Padberg;Milan Urbásek	2003		10.1007/978-3-540-40022-6_9	discrete mathematics;stochastic petri net;computer science;data mining;process architecture;petri net;algorithm	Logic	-7.896794117356996	16.30714290160387	194727
90fc84b0d569f4e0b7495c3ef0f4faa02b8210f4	on generalized van benthem-type characterizations		Abstract The paper continues the line of [6] , [7] , [8] . This results in a model-theoretic characterization of expressive powers of arbitrary finite sets of guarded connectives of degree not exceeding 1 and regular connectives of degree 2 over the language of bounded lattices.		Grigory K. Olkhovikov	2017	Ann. Pure Appl. Logic	10.1016/j.apal.2017.03.002	combinatorics;discrete mathematics;mathematics;algorithm	Logic	-4.834016979715265	18.002397576653884	194788
0ca844f2bc690a8b6a27c662b558569a7e94e537	safety and liveness, weakness and strength, and the underlying topological relations	topology;temporal logic;sva;psl;regular expressions;safety;liveness	We present a characterization that shows what it means for a formula to be a weak or strong version of another formula. We show that the weak version of a formula is not the same as Alpern and Schneider's safety component, but can be achieved by taking the closure in the Cantor topology over an augmented alphabet in which every formula is satisfiable. The resulting characterization allows us to show that the set of semantically weak formulas is exactly the set of nonpathological safety formulas. Furthermore, we use the characterization to show that the original versions of the ieee standard temporal logics psl and sva are broken, and we show that the source of the problem lies in the semantics of the sere intersection and fusion operators. Finally, we use the topological characterization to show the internal consistency of the alternative semantics adopted by the latest version of the psl standard.	cantor;liveness	Cindy Eisner;Dana Fisman;John Havlicek	2014	ACM Trans. Comput. Log.	10.1145/2532440	discrete mathematics;temporal logic;computer science;pure mathematics;mathematics;psl;programming language;regular expression;algorithm;liveness	Theory	-10.138889121325448	16.714584031514242	194900
74295f4f398e7a6950c04a70b02e329983d98d07	on the formalization of theories	03e30;zf;03b70;urelement;axiom schema of replacement;68t27	We propose that the set theory ZFC slightly modified to allow for urelements, and extended with appropriate definitional schemata, constitutes a complete description of natural human logic and that it constitutes a lingua characterica and a calculus ratiocinator in the sense of Leibniz.	calculus ratiocinator;definition;zermelo–fraenkel set theory	Jan Mycielski	2012	Journal of Automated Reasoning	10.1007/s10817-012-9247-4	urelement;axiom schema;discrete mathematics;morse–kelley set theory;scott–potter set theory;mathematics;algorithm	AI	-9.711798155840592	12.860267909280966	195205
291930322412e524ff9b3b2cb94fbef2fc8a0ee0	bimodal logics with a 'weakly connected' component without the finite model property	multimodal logic;linear orders;finite model property	There are two known general results on the finite model property (fmp) of commutators [L0, L1] (bimodal logics with commuting and confluent modalities). If L is finitely axiomatisable by modal formulas having universal Horn first-order correspondents, then both [L,K] and [L,S5] are determined by classes of frames that admit filtration, and so have the fmp. On the negative side, if both L0 and L1 are determined by transitive frames and have frames of arbitrarily large depth, then [L0, L1] does not have the fmp. In this paper we show that commutators with a ‘weakly connected’ component often lack the fmp. Our results imply that the above positive result does not generalise to universally axiomatisable component logics, and even commutators without ‘transitive’ components such as [K3,K] can lack the fmp. We also generalise the above negative result to cases where one of the component logics has frames of depth one only, such as [S4.3,S5] and the decidable product logic S4.3×S5. We also show cases when already half of commutativity is enough to force infinite frames.	commutator (electric);connectivity (graph theory);finite model property;first-order predicate;modal logic;transitive reduction	Ágnes Kurucz	2017	Notre Dame Journal of Formal Logic	10.1215/00294527-3870247	combinatorics;discrete mathematics;topology;mathematics;multimodal logic;algebra	Logic	-8.827952990035879	13.896988565781834	195305
4752760429b72de99a169579cc555557e2b36a61	locality and subsumption testing in el and some of its extensions	monotone operator;description logic;word problem	In this paper we show that subsumption problems in many lightweight description logics (including EL and EL+) can be expressed as uniform word problems in classes of semilattices with monotone operators. We use possibilities of efficient local reasoning in such classes of algebras, to obtain uniform PTIME decision procedures for CBox subsumption in EL and extensions thereof. These locality considerations allow us to present a new family of (possibly many-sorted) logics which extend EL and EL+ with n-ary roles and/or numerical domains.	description logic;interpolation;locality of reference;numerical analysis;ontology (information science);p (complexity);subsumption architecture;universal quantification;monotone	Viorica Sofronie-Stokkermans	2008			discrete mathematics;mathematics;algorithm	AI	-10.233622047459273	16.507877461420843	195362
be9a1224abd0f5773512f5848a34cd23541519c6	a unified category theoretic approach to variable binding	variable binding;distributive law;generalized derivation;substitution monoidal structure;pseudo distributive law;bunched implications;pseudo monad;binding signature	We give a general category theoretic formulation of the approach to modelling variable binding first proposed by Fiore, Plotkin, and Turi. This general formulation allows us to include variable binding as they have it, as well as Tanaka's linear variable binding and variable binding for other binders and for mixtures of binders as for instance in the Logic of Bunched Implications. The key structure developed by Fiore et al. was a substitution monoidal structure, from which their formulation of binding was derived; so we give an abstract formulation of a substitution monoidal structure, then, at that level of generality, derive the various category theoretic structures they considered. The central construction we use is that of a pseudo-distributive law between 2-monads on Cat, which suffices to induce a pseudo-monad on Cat, and hence a substitution monoidal structure on the free object on 1.	bunched logic;category theory;monad (functional programming);name binding;plotkin bound;turi	John Power	2003		10.1145/976571.976578	distributive property;closed monoidal category	Comp.	-11.523280674658952	17.723482717478756	195423
353669ae2f7d7e69283006d0223b38af5da981ea	efficient unification over infinite terms	first order	We address the unification problem for expressions over infinite first-order terms. An algorithm which is practically linear in time and space is presented. It is argued that this algorithm is better than some recent algorithms with respect to performance in practice and simplicity in nature. It is further argued that this superiority also holds in comparison with some of the best known algorithms for the more conventional unification problem over finite terms.	algorithm;first-order predicate;term (logic);unification (computer science)	Joxan Jaffar	1984	New Generation Computing	10.1007/BF03037057	computer science;first-order logic;programming language;algorithm	PL	-11.374111633726166	16.383213353414348	196011
e899f44e39f23c93887f6edf8df3c52519f1c458	varieties of cost functions	004;cost functions regular language varieties syntactic algebra	Regular cost functions were introduced as a quantitative generalisation of regular languages, retaining many of their equivalent characterisations and decidability properties. For instance, stabilisation monoids play the same role for cost functions as monoids do for regular languages. The purpose of this article is to further extend this algebraic approach by generalising two results on regular languages to cost functions: Eilenberg’s varieties theorem and profinite equational characterisations of lattices of regular languages. This opens interesting new perspectives, but the specificities of cost functions introduce difficulties that prevent these generalisations to be straightforward. In contrast, although syntactic algebras can be defined for formal power series over a commutative ring, no such notion is known for series over semirings and in particular over the tropical semiring. 1998 ACM Subject Classification F.4.3 Algebraic language theory	free monoid;linear algebra;regular language;x-machine	Laure Daviaud;Denis Kuperberg;Jean-Éric Pin	2016		10.4230/LIPIcs.STACS.2016.30	combinatorics;discrete mathematics;pumping lemma for regular languages;computer science;mathematics;abstract family of languages;generalized star height problem;algorithm;algebra	PL	-5.212887657827513	17.00779097441874	196465
9525455995c0ce6323b8f5ef4c981bc24b955747	extended clause learning	teoria demonstracion;resolution;theorie preuve;methode empirique;sat instances;proof theory;metodo empirico;empirical method;logique propositionnelle;learning algorithms clause learning;program verification;constraint satisfaction;journal article;sat;satisfaction contrainte;verificacion programa;real world application;propositional logic;keywords clause learning;empirical results;satisfaccion restriccion;theoretical result;logica proposicional;verification programme;clause learning;proof system	The past decade has seen clause learning as the most successful algorithm for SAT instances arising from real-world applications. This practical success is accompanied by theoretical results showing clause learning as equivalent in power to resolution. There exist, however, problems that are intractable for resolution, for which clause-learning solvers are hence doomed. In this paper, we present extended clause learning, a practical SAT algorithm that surpasses resolution in power. Indeed, we prove that it is equivalent in power to extended resolution, a proof system strictly more powerful than resolution. Empirical results based on an initial implementation suggest that the additional theoretical power can indeed translate into substantial practical gains.	algorithm;benchmark (computing);boolean satisfiability problem;constraint learning;erdős–rényi model;heuristic (computer science);polynomial;proof calculus;resolution (logic);scalability;search tree;simulation;time complexity;turing completeness	Jinbo Huang	2010	Artif. Intell.	10.1016/j.artint.2010.07.008	resolution;constraint satisfaction;computer science;artificial intelligence;proof theory;mathematics;propositional calculus;empirical research;algorithm	AI	-7.745575695532614	18.123316187592593	196524
de45d43d942732a6688bc593e9dfd2c1af456030	model companions and k-model completeness for the complete theories of boolean algebras				J. Mead;George C. Nelson	1980	J. Symb. Log.			Logic	-11.425235140694738	11.658759125232741	197252
6f71c1391135b82d18d27bbb2d2a67b3e7e67bab	syntactic conditions for antichain property in consistency restoring prolog		We study syntactic conditions which guarantee when a CR-Prolog (Consistency Restoring Prolog) program has antichain property: no answer set is a proper subset of another. A notable such condition is that the program’s dependency graph being acyclic and having no directed path from one cr-rule head literal to another.	directed acyclic graph;literal (mathematical logic);path (graph theory);prolog;stable model semantics	Vu Ngoc Phan	2018	CoRR		antichain;mathematics;algorithm;discrete mathematics;dependency graph;syntax;prolog	AI	-11.817291336367882	16.79087131545312	197357
68f7cdab846b4b6e552a5459d3dfe04111f3174b	the completeness of presupposition-free tense logic		In this paper, we continue the work begun by MCARTHUR and LEBLANC~) on the strong completeness of a minimal quantificational tense logic2) We establish the strong completeness and soundness of QK: = , the presupposition-free (with equality) version of MCARTHUR and LEBLANC’S QK, .3) The tense-counterparts VsGA 2 GVXA and VxHL4 3 HVzA of the Barcan Formula are not provable in QKf =, nor are the counterparts of the converse of the Barcan Formula G V d 3 VxGA and HVxA 3 3 V . r H A ; a term may designate a t one time but not a t another. Like MCARTHUR and LERLANC, we employ a Henkin-style proof with MAKTNSON attendants4) and truth-value semantics. In order to handle the presupposition-free character of QB: = , our construction of maximally consistent and omega-complete sets differs from others to be found in the literature.	barcan formula;chaitin's constant;provable security;quickbasic;temporal logic;value semantics	Robert F. Barnes;Raymond D. Gumb	1979	Math. Log. Q.	10.1002/malq.19790251302		Logic	-9.85009677249031	14.151043800655525	197394
e948ca8e7e136deddd83799630269194f1054b1f	the congruence theory of closure properties of regular tree languages	reconocimiento lenguaje;closure;reconnaissance langage;automate arbre;language theory;regular language;teoria lenguaje;language recognition;congruencia;lenguaje racional;clausura;tree automaton;informatique theorique;automata arbol;langage rationnel;regular tree language;theorie langage;congruence;fermeture;computer theory;informatica teorica	Abstract   Boolean operations, tree homomorphisms and their converses, and forest product, in special cases  σ -catenation,  x -product,  x -quotient and  x -iteration, preserve the regularity of forests. These closure properties are proved algebraically by using congruences of term algebras which saturate the forests operated on and constructing, by means of them, a congruence which saturates the product forest. The index of the constructed congruence is finite, if the congruences saturating the forests to operate are of finite indexes. The cardinalities of ranked and frontier alphabets are arbitrary. The preservation of recognizability is a straightforward consequence of those congruence constructions and the Nerode type of congruence characterization for recognizable forests. Furthermore, the constructed congruences can also be applied directly to construct explictly tree automatas to recognize the product forests.	congruence of squares;epistemic closure;tree automaton	S. Tirri	1990	Theor. Comput. Sci.	10.1016/0304-3975(90)90020-I	combinatorics;discrete mathematics;regular language;philosophy of language;pure mathematics;closure;congruence;mathematics;algorithm;algebra	Logic	-4.883117222359367	17.17598317720702	197943
f9a2d6e1c9c97b7f882136aa6bd1b925bacf5a16	ancestral kripke models and nonhereditary kripke models for the heyting propositional calculus	modele non hereditaire;modele kripke;calcul propositionnel;kripke model;logique heyting;propositional calculus;calculo proposicional;modelo kripke;modele ancestral	"""This is a sequel to two previous papers, where it was shown that, for the Heyting propositional calculus H, we can give Kripke-style models whose accessibility relation R need not be a quasi-ordering relation, provided we have: x\=A &Vy(xRy=* y VA). From left to right, this is the heredity condition of standard Kripke models for H, but, since R need not be reflexive, the converse is not automatically satisfied. These Kripke-style models for H were called """"rudimentary Kripke models"""". This paper introduces a kind of dual of rudimentary Kripke models, where the equivalence above is replaced by: x^A <#3y(yRx &y \=A). From right to left, this is again the usual heredity condition, but the converse, which is automatically satisfied if R is reflexive, yields a proper subclass of rudimentary Kripke models, whose members are called """"ancestral Kripke models"""". In all that, the semantic clauses for the connectives are as in standard Kripke models for H. The propositional calculus H is strongly sound and complete with respect to ancestral Kripke models. The remainder of the paper is devoted to Kripke-style models for H where the semantic clauses for the connectives are changed so that we need not assume any of the heredity conditions above. The resulting Kripke-style models are called """"nonhereditary Kripke models"""". These models are inspired by some particular embeddings of H into 54 and a somewhat weaker normal modal logic. With respect to a notion of quasi-ordered nonhereditary Kripke model, we can prove a certain form of strong soundness and completeness of H. With respect to another notion, where quasi-ordering is not assumed, we can only prove the ordinary soundness and completeness of H. Received November 14, 1990; revised February 18, 1991"""	accessibility relation;kripke semantics;logical connective;normal modal logic;propositional calculus;right-to-left;soundness (interactive proof);turing completeness	Kosta Dosen	1991	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093635930	modal logic;discrete mathematics;intuitionistic logic;axiom s5;mathematics;linguistics;propositional calculus;kripke semantics;algorithm	AI	-10.504606691879335	13.871058156585892	198279
40d9e9c5371eb8cad4352b131a221b640af18039	undecidability of the first-order arithmetic a[p(x), 2x, x+1]	first order	Abstract   It is shown that the first-order arithmetic  A [ P ( x ), 2 x ,  x  + 1] with two functions 2 x ,  x  + 1 and a monadic predicate symbol  P ( x ) is undecidable, by using a kind of two-dimensional finite automata, called finite causal ω 2 -systems. From this immediately follows R.M. Robinson's result, which says that the monadic second-order theory with two functions 2 x ,  x  + 1 is undecidable. This is also considered as an improvement on H. Putnam's result about the undecidability of the first-order arithmetic with addition and a monadic predicate symbol.	first-order predicate;peano axioms;undecidable problem	Hiroakira Ono;Akira Nakamura	1979	J. Comput. Syst. Sci.	10.1016/0022-0000(79)90033-3	discrete mathematics;computer science;first-order logic;mathematics;monadic predicate calculus;algorithm;algebra	Theory	-7.01102533044874	15.1891738756892	198449
4c221c72e0e8309fa1d24c351de1460df3f802c7	metric semantics from partial order semantics	partial order semantics;metric space;complete metric space;programming language;monotone function;004 informatik;denotational semantic;partial order	In dealing with denotational semantics of programming languages partial orders resp. metric spaces have been used with great benefit in order to provide a meaning to recursive and repetitive constructs. This paper presents two methods to define a metric on a subset $M$ of a complete partial order $D$ such that $M$ is a complete metric spaces and the metric semantics on $M$ coincides with the partial order semantics on $D$ when the same semantic operators are used. The first method is to add a ‘length’ on a complete partial order which means a function $\rho : D \to {\Bbb N} \cup \{\infty\}$ of increasing power. The second is based on the ideas of [11] and uses pseudo rank orderings, i.e. monotone sequences of monotone functions $\pi_n : D \to D$ . We show that SFP domains can be characterized as special kinds of rank orderded cpo's. We also discuss the connection between the Lawson topology and the topology induced by the metric.	denotational semantics;lawson topology;programming language;recursion;semantics (computer science);simulated fluorescence process algorithm;monotone	Christel Baier;Mila E. Majster-Cederbaum	1997	Acta Informatica	10.1007/s002360050104	partially ordered set;combinatorics;discrete mathematics;monotonic function;metric space;pure mathematics;mathematics;complete metric space;algorithm	Web+IR	-7.581251813933796	13.64219533534113	198952
41ddc60a75aa0a96d0cc8b577cc4afadb30b5878	equational weighted tree transformations	weighted extended top-down tree;different weighted bimorphisms;weighted tree transformation;equational relation;weighted top-down tree transformation;weighted tree;equational weighted tree transformation;equational definition;weighted equational tree transformation;weighted relation	We consider systems of equations of weighted tree transformations with finite support over continuous and commutative semirings. We define a weighted relation to be equational, if it is a component of the least solution of such a system of equations in a pair of algebras. In particular, we focus on equational weighted tree transformations which are equational relations obtained by considering the least solutions of such systems in pairs of term algebras. We characterize equational weighted tree transformations in terms of weighted tree transformations defined by different weighted bimorphisms. To demonstrate the robustness of equational weighted tree transformations, we give an equational definition of the class of linear and nondeleting weighted top-down tree transformations and of the class of linear and nondeleting weighted extended top-down tree transformations. Finally, we prove that a weighted relation is equational if and only if it is, roughly speaking, the morphic image of a weighted equational tree transformation.	morphic (software);top-down and bottom-up design	Symeon Bozapalidis;Zoltán Fülöp;George Rahonis	2011	Acta Informatica	10.1007/s00236-011-0148-5	combinatorics;discrete mathematics;mathematics;algebra	PL	-4.8474905669246855	16.923927629518108	199067
ea713503b6a89dd0cda9c5384b4bc0fc4a49d7fd	topological separation principles and logical theories	identite;topology;logique paraconsistante;topologie;incompleteness;separation principle;incompletude;property;separation;modal logic;intuitionistic logic;necessary and sufficient condition;logique modale;logique intuitionniste;propriete;identity;paraconsistent logic	This paper is dedicated to Newton da Costa, who,among his many achievements, was the first toaim at dualising intuitionism in order to produce paraconsistent logics,the C-systems. This paper similarly dualises intuitionism to aparaconsistent logic, but the dual is a different logic, namely closed setlogic. We study the interaction between the properties of topologicalspaces, particularly separation properties, and logical theories on thosespaces. The paper begins with a brief survey of what is known about therelation between topology and modal logic, intuitionist logic and paraconsistentlogic in respect of the incompleteness and inconsistency of theories.Necessary and sufficient conditions which relate the T 1-property to theproperties of logical theories, are obtained. The result is then extendedto Hausdorff and Normal spaces. In the final section these methods areused to vary the modelling conditions for identity.	hausdorff dimension;interaction;intuitionistic logic;modal logic;newton;paraconsistent logic;theory	Chris Mortensen	2000	Synthese	10.1023/A:1005263111635	modal logic;non-classical logic;discrete mathematics;paraconsistent logic;philosophy;epistemology;intuitionistic logic;mathematics;property;logic;separation principle;algorithm	AI	-10.45745800991427	11.48290119338592	199447
513a53419241b7e69bfd00ed602e2aa74fc5a8eb	constructive mathematics as a programming logic i: some principles of theory	constructive mathematics;function space;type theory;technical report;computer science	The design of a programming system is guided by certain beliefs, principles and practical constraints. These considerations are not always manifest from the rules defining the system. In this paper the author discusses some of the principles which have guided the design of the programming logics built at Cornell in the last decade. Most of the necessarily brief discussion concerns type theory with stress on the concepts of function space and quotient types.		Robert L. Constable	1983		10.1007/3-540-12689-9_94	applied mathematics;function space;computer science;technical report;constructivism;pure mathematics;mathematics;programming language theory;programming language;type theory;intuitionism	Theory	-9.138841887231942	11.540190792321468	199701
05a3ccf049b7fc4ed14d010f20324816fa2d2c8e	possible rough ingredients of concepts in approximation spaces	rough mereology;rough ingredient;possible rough ingredients;indiscernibility-based approximation space;future substitute;approximation spaces;empty concept;concept	"""We discuss the problem of rough ingredients and parts of concepts of an indiscernibility-based approximation space. The notion of a (rough) ingredient is extended to the notion of a possible (rough) ingredient, and analogously in the case of parts. The term """"possible"""" means that a concept is perceived as a candidate for a future substitute of some ingredient. Our approach is in line with rough mereology except for allowing the empty concept for the sake of simplicity."""	approximation;spaces	Anna Gomolinska	2006	Fundam. Inform.		artificial intelligence;mathematics;algorithm	Robotics	-6.355393699436671	11.252830594884887	199959
