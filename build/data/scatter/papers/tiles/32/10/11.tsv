id	title	keywords	abstract	entities	authors	year	journal	doi	fos	area	x	y	ix
3dc376866ee84d62a6c5102c05f3e8fa3ad479ca	the architecture and implementation of cpn2000, a post-wimp graphical application	document structure;coloured petri nets;marking menu;coloured petri net;post wimp interfaces;user interface toolkit;instrumental interaction;detection algorithm;opengl;two handed input;off the shelf;interaction technique;advanced interaction techniques	"""We have developed an interface for editing and simulating Coloured Petri Nets based on toolglasses, marking menus and bi-manual interaction, in order to understand how novel interaction techniques could be supported by a new generation of user interface toolkits. The architecture of CPN2000 is based on three components: the Document Structure stores all the persistent data in the system; the Display Structure represents the contents of the screen and implements rendering and hit detection algorithms; and the Input Structure uses """"instruments"""" to manage interaction. The rendering engine is based on OpenGL and a number of techniques have been developed to take advantage of 3D accelerated graphics for a 2D application. Performance data show that high frame rates have been achieved with off-theshelf hardware even with a non-optimized redisplay. This work paves the way towards a post-WIMP UI toolkit."""	algorithm;coloured petri net;graphical user interface;graphics;hit-testing;interaction technique;item unique identification;layout engine;list of toolkits;opengl;post-wimp;simulation	Michel Beaudouin-Lafon;Henry Michael Lassen	2000		10.1145/354401.354761	embedded system;human–computer interaction;computer science;document structure description;operating system;post-wimp;world wide web;interaction technique	HCI	-43.210659738185406	-30.686140941002648	176800
6f896c80c453048f3432e3f985cd90f8758f38c0	a web art gallery	web art gallery	1. THE GALLERY This paper describes the design and implementation of a virtual art gallery on the Web. The main objective of the virtual art gallery is to provide a navigational environment for the Networked Digital Library of Theses and Dissertations (NDLTD see http://www.ndltd.org and Fox et al., 1996), where users can browse and search electronic theses and dissertations (ETDs) indexed by the pictures--images and figures--that the ETDs contain. The galleries in the system and the ETD collection are simultaneously organized using a college/department taxonomic hierarchy. The system architecture has the general characteristics of the client-server model. Users access the system by using a Web browser to follow a link to one of the named art galleries. This link has the form of a CGI query which is passed by the Web server to a CGI program that handles it as a data request by accessing the database server. The query results are used to generate a view of the art gallery (as a VRML or HTML file) and are sent back to the user’s browser. We employ several technologies for improving the system’s efficiency and flexibility. We define a Simple Template Language (STL) to specify the format of VRML or HTML templates. Documents are generated by merging pre-designed VRML or HTML files and the data coming from the Database. Therefore, the generated virtual galleries always contain the most recent database information. We also define a Data Service Protocol (DSP), which normalizes the request from the user to communicate it with the Data Server and ultimately the image database.	browsing;chomsky hierarchy;client–server model;common gateway interface;database server;digital library;gallery project;html;image;internet art;server (computing);systems architecture;template processor;vrml;virtual art;web server;world wide web	Murat Bayraktar;Change Zhang;Bharadwaj Vadapalli;Neill A. Kipp;Edward A. Fox	1998		10.1145/276675.276727	computer science	DB	-46.28874195189529	-24.397038647415027	176844
25ea2b1a26420ca519c041804b13dab2ea48bf76	an introduction to the synchronized multimedia integration language	hypermedia markup languages;information resources;multimedia systems layout html web sites computer science code standards standards development prototypes world wide web scheduling;synchronized multimedia integration language;text editor synchronized multimedia integration language web multimedia presentations audio images text video scripting language authoring tool world wide web consortium smil html;multimedia systems;synchronisation;internet;world wide web;multimedia presentation;authoring tool;scripting language;information resources hypermedia markup languages multimedia systems synchronisation internet	handle audio, images, text, and video. However, creating TV-like multimedia presentations proves difficult.1 It either requires complex, timerbased programming in a scripting language (such as Javascript) or an authoring tool for multimedia presentations. To allow a broader audience to author multimedia presentations for the Web, the World Wide Web Consortium (W3C) developed the Synchronized Multimedia Integration Language2 (SMIL— pronounced “smile”). SMIL, an easy-to-learn HTML-like language, allows the use of a text editor to write multimedia presentations. SMIL is a W3C recommendation, and several implementations are available. This article explains how to write a multimedia presentation in SMIL. As an example, Figure 1 shows two scenes in a multimedia presentation about Web use. At the beginning, a commentator (Mr. Green) describes the increasing use of the Web (scene 1). This is followed by an interview with a Web expert, Mrs. Smith (scene 2). During the interview, the viewer can click on the video of Mrs. Smith to bring up her homepage. Media object synchronization The example presentation consists of several media objects: an image showing the increase in Web use, audio and video files for Mr. Green and Mrs. Smith, and text containing the image and video captions. Figure 2 shows when and for how long these media objects appear in the presentation. Time increases from left to right, and a bar represents each media object. Its length indicates for how long the object occurs in the presentation. SMIL describes schedules such as the one shown in Figure 2 using mainly two constructs, par and seq. The seq element schedules two media objects in sequence. The following example describes the synchronization of the two audio files at the top of Figure 2:	consortium;html;image;javascript;media object server;schedule (computer science);scripting language;streaming media;synchronized multimedia integration language;text editor;video file format;world wide web	Philipp Hoschka	1998	IEEE MultiMedia	10.1109/93.735872	synchronization;the internet;synchronized multimedia integration language;html;html5;computer science;database;scripting language;multimedia;world wide web	Web+IR	-45.30207403795535	-27.1526296481831	177148
feb1813ad76ff5d08a30c47738254843a03993af	rendering, visualization and rasterization hardware (eurographics'91 workshop)	rasterization hardware			Arie E. Kaufman	1993		10.2312/344	computer vision;computer hardware;parallel rendering;computer graphics (images)	Visualization	-47.28943636793192	-29.400291967012823	177768
6303f4a7fa8182929f030878acbf6ff17e928ef3	international remix: video editing for the web	raw materials;social software;web video;video editing;remix;social media;new media;san francisco	The long-awaited arrival of video as a major medium on the web is here. But in contrast to the textual web, which enables users to author documents with a minimum of technical knowledge, the video web is still read-only for most users. Developed for the 2006 San Francisco International Film Festival, International Remix is a platform for web-based video editing that provides a simple video authoring experience for novice users. Nineteen directors from nine countries agreed to allow their films to be used as raw material for the creation of remixes using the platform. This paper describes the International Remix system, some of its design features, and its potential as a platform for research into community media usage on the web.	file system permissions;read-only memory;web application	Patrick Schmitz;Peter L. Shafton;Ryan Shaw;Samantha Tripodi;Brian Williams;Jeannie Yang	2006		10.1145/1180639.1180814	social media;new media;computer science;raw material;web page;multimedia;world wide web;non-linear editing system	Mobile	-45.41966683098499	-27.13130271558156	177817
9d9a7d465328d777a030f18374cdb8aff198e221	latex and friends	computer presentation;output side;previous knowledge;modern technique;automated state-of-the-art typesetting system;complex graphics;recurring theme;data plot;effective presentation;controlling style	11 algorithm, 183, 184 algorithm*, 184 algorithm2e, 183, 185, 187, 188 align, 149, 151–153 align*, 149, 153, 156, 180 aligned, 153, 154 alignedat, 153 array, 58, 59, 61, 63, 123, 170 axis, 131–134, 139, 141 Bmatrix, 170 bmatrix, 170, 171 cases, 155, 173 center, 58 description, 37, 69, 70 document, 9, 11, 14, 16, 19, 24, 30, 34, 198, 199, 202, 205, 208, 211 enumerate, 37, 68–70 eqnarray, 154 equation, 149–151 equation*, 149–151, 154 figure, 75, 76, 78, 184 flushleft, 58, 59 flushright, 58 footnotesize, 51 frame, 225, 226, 228, 229, 231 function, 184 function*, 184 gather, 150, 151 gathered, 153	algorithm;align (company);apache axis;data structure alignment;enumerated type;latex	Marc R. C. van Dongen	2012		10.1007/978-3-642-23816-1	computer science	Vision	-45.817654791988225	-28.298356818097126	177825
ff66b0cadd300867c7cffcbff342a1f17e161585	pastepost: a web interface for editing instructions with captured images	html5;web	In this paper, we introduce an e ff ctive Web-page construction method especially for instructions and tutorials of GUI based operations. We often obtain knowledge of specific software tools and its usages by Web documents such as blog entry and product sites. Also we sometimes need to create instructional web pages for teaching and distributing particular softwares. The instructional web pages contain several steps of operation with a text and a captured image. Organizing the instructional web page is time-consuming task because the editor need to prepare captured image files and upload them to the server. To relief the burdens, we propose a method of uploading clipboard images to the instructional web pages instantly. The method provides functions of (1) uploading captured images by a shortcut key, (2) instant image editor, and (3) organizing texts and images with wysiwyg manner. We performed an experiment regarding usability, and confirmed that the proposed method improves efficiency and satisfaction of the web organizing tasks. c ⃝ 2013 The Authors. Published by Elsevier B.V. Selection and peer-review under responsibility of KES International.	blog;clipboard (computing);graphical user interface;graphics software;keyboard shortcut;organizing (structure);portable document format;server (computing);upload;usability;wysiwyg;web design;web page;world wide web	Motoki Miura;Shinya Yoshida	2013		10.1016/j.procs.2013.09.203	web service;static web page;web development;web design;computer science;operating system;web page;data mining;multimedia;world wide web;web server;computer graphics (images)	HCI	-44.18752106343824	-26.493326641682064	177838
0c1774fbe64e2f2561f656fef4a1f64506fcff3a	formal description and development of graphical user interfaces	graphic user interface		graphical user interface	Weishi Zhang	1996			user interface design;look and feel;user;10-foot user interface;user experience design;user modeling;clickable;interface metaphor;shell;human–computer interaction;magic pushbutton;event-driven programming;post-wimp;natural user interface;user interface;graphical user interface testing;multiple document interface	HCI	-42.459776072684896	-29.525584253454724	178012
f7a984766cbc3eca22f16149a84182fc73bac2be	xjp system: an internationalized language interface for the x window system	distributed networks;x window system	This paper discusses the internationalization of the X Window System developed by the MIT X consortium. The main purpose is to enable X Window System Release 4 (X11R4) and earlier versions to support Asian languages, primarily Japanese, Chinese, and Korean. Unlike English and other European-based languages, Asian languages involve idiographic character manipulation. X Window System XIlR4 and earlier versions can output such ideograms when the corresponding fonts are provided, but they have no corresponding input feature. Asian language input thus involves more than one keystroke to input a single ideogram, e.g., Japanese-language input uses romaji-kana-kanji conversion. This paper proposes an ideogram input architecture on the X Window System and discusses the interfaces between conversion systems Window oriented and X application programs. Like the X System, our input-conversion feature is to a distributed network environment.	event (computing);japanese input methods;x window system	Masato Morisaki;Etsuo Kawada;Hiroshi Kuribayashi;Seiji Kuwari;Masahiko Narita	1991		10.1145/120782.120802	embedded system;real-time computing;computer science;operating system	NLP	-47.549086215487684	-26.640998336340896	178057
79fc92d2e283271ed9951f8ef96de04af21653bb	a user-friendly interface adapter	difference operator	Most computer systems do not give any indication to users of what input is required. A manual, whether online or hardcopy, must be consulted, or help must be obtained from an expert. This paper describes a 'black box' which may be placed between a computer and a VDU to rectify this situation. The user is prompted with possible inputs at any stage during command input. Other features include local command line editing, a command recall buffer and time/date facilities. The system may be adapted for different operating systems and VDUs if required.	black box;command-line interface;computer monitor;operating system;usability	Jonathan P. Bowen	1985	Microprocessors and Microsystems - Embedded Hardware Design	10.1016/0141-9331(85)90080-8	embedded system;simulation;human–computer interaction;telecommunications;computer science;electrical engineering;operating system;multimedia	HCI	-44.80842178716635	-28.91717396855068	178140
16b6da1e5d1e6677ae83862cf0b2ca3285d687d9	focus in graphical user interfaces	graphical interface;interaction style;discourse structure;graphical user interfaces;focus;natural language;graphic user interface;natural language processing	Focus in natural language processing is used to keep track of the attentional space of the participants in the dialogue. Graphical interfaces have still to benefit from the use of this level of communication. We discuss a graphical interface counter part called a focus space. Focus spaces can be used to combine multiple interaction styles (e.g. natural language with graphical pointing). We describe how a specific theory of discourse structure and focus space can be applied to graphical interfaces. The attentional space is maintained automatically by the system, and can be used by the software under program control. An example is provided showing how the attentional space can be used.	b. j. fogg;computation;graphical user interface;intelligent user interface;jones calculus;lennard-jones potential;morgan;natural language processing;pollack's rule	Manuel A. Pérez;John L. Sibert	1993		10.1145/169891.170022	user interface design;natural language processing;look and feel;natural language programming;10-foot user interface;clickable;shell;human–computer interaction;natural language user interface;magic pushbutton;computer science;operating system;graphical user interface;event-driven programming;post-wimp;natural user interface;programming language;user interface;graphical user interface testing;multiple document interface	HCI	-42.03048553541324	-29.485380549399427	178723
967754a0956f87e91f583e06586667bcb93223cb	interaction-based user interface redesign	adaptive interfaces;user interface;adaptive interface;redesign;implicit interaction;user behavior;structured data	This paper demonstrates a general framework to restyle UI widgets, in order to adapt them to the user behavior. Different implementation examples illustrate its feasibility. The value of this methodology comes from the fact that it is suited to any application language or toolkit supporting structured data hierarchies and style sheets; e.g., interfaces created in HTML, XUL, Flex/AIR (ActionScript), or Java. As described in the paper, an explicit end user intervention is not required, and changes are gradually applied so that they are not intrusive for the user.	actionscript;html;java;user interface	Luis A. Leiva	2012		10.1145/2166966.2167028	user interface design;user;user modeling;human–computer interaction;data model;computer science;operating system;multimedia;natural user interface;user interface;world wide web	HCI	-42.348376958869636	-29.054080263509015	178820
afc8eb2751d59911bfca1db6338e1b7f73514cb5	mplot3—a system-independent plotting package	computer graphics;device independent graphics;philips;plotting package;graphics software	Abstract#R##N##R##N#This paper describes a general purpose plotting package which enables sets of data points to be plotted on a variety of output devices by simply specifying the mnemonic name and without any programming on the part of the users. A plot can be produced with the default options from a simple data file which can be expanded to call in many extra facilities. Options include scaling, automatic selection of axes and their markings, and identification of curves/shapes by varying-length dashed lines, different symbols or colours. English and Greek characters can be written at any angle and size. Clipping or voiding facilities are provided to confine plotting inside or outside a given area. The package is expandable to allow new facilities to be added. The present form has been arrived at through feedback from the users over the last four years and has found a wide variety of applications in a scientific environment.		H. R. Sethi;D. H. Paul	1979	Softw., Pract. Exper.	10.1002/spe.4380091103	computer science;engineering;operating system;graphics software;programming language;computer graphics;engineering drawing;computer graphics (images)	SE	-45.270804016613006	-29.052368808574002	179466
2488094ef7beb9e736c28be36b4645c68c02a938	sparrow web: group-writable information on structured web pages	software tool;web pages;multi stream;computer supported cooperative work;target customers;information sharing;internet;support group;testing software;codec;testing procedures;is success;video;usability;browser;websites	Sparrow Web is a server-based software tool that supports the creation and customization of group-writable Web pages. Templates in each page define the data schema and layout of that page's group-editable data items. Using different templates, page authors produce Web pages that support many tasks, including task lists, co-authored documents, bibliographies, home pages, faculty directories, and project lists. While lacking the rich UI of dedicated information-sharing applications, it is successful at supporting a variety of groups and tasks because it integrates information-sharing into Web pages, leveraging the affordances of the Web for supporting group work.	bibliographic index;programming tool;rich user interaction;server (computing);user interface;web page;world wide web	Eric A. Bier;Kenneth A. Pier	2003		10.1145/765891.765901	web service;codec;static web page;web development;web modeling;site map;the internet;data web;video;web mapping;usability;web design;human–computer interaction;web search engine;web standards;computer science;operating system;dynamic web page;computer-supported cooperative work;web page;database;same-origin policy;multimedia;hits algorithm;web 2.0;world wide web;web design program;website parse template;web server;mashup	Web+IR	-42.829803104009756	-25.957416363558323	179521
ae67f7eedfa2be1fc07d0848fa0953df75941335	software environment for research on evolving user interface designs	user interfaces productivity guidelines algorithm design and analysis genetic algorithms data visualization process design environmental management space exploration humans;data management;software environment;null;user interface management systems genetic algorithms interactive systems;interactive genetic algorithm;wxpython window;user interface design;genetic algorithms;user interface designs;user interface management systems;development time;wxpython window software environment user interface designs interactive genetic algorithm;interactive systems;research productivity	We investigate the trade off between investing effort in improving the features of a research environment that increases productivity and investing such effort in actually conducting the research experiments using a less elaborated, albeit sufficiently operational environment. The study case presented is an interactive genetic algorithm environment we created to evolve user interfaces designs. We present three productivity improvements integrated in our environment and examine whether on the long run the research productivity can be in fact increased by spending development time on enhancing the research tools rather than on performing the research itself. The three improvements are the integration of the entire system interface into a main wxPython window, the addition of a runs manager for setting up multiple experiments, and the creation of a data manager for effective exploration and visualization of data produced in the experiment runs. We also discuss several guidelines for transitioning a research environment such as ours from a researcher's tool to an end-user's tool.	experiment;genetic algorithm;interactive evolutionary computation;user (computing);user interface;wxpython	Juan C. Quiroz;Anil Shankar;Sergiu M. Dascalu;Sushil J. Louis	2007	International Conference on Software Engineering Advances (ICSEA 2007)	10.1109/ICSEA.2007.62	user interface design;simulation;genetic algorithm;human–computer interaction;data management;computer science;systems engineering;user interface	SE	-42.67923758446364	-30.96551950627497	179550
3f220f1f882fc943b27e7eba954e2c813d6dcd3c	virtual worlds for web site visualisation	web based software engineering;web site visualisation intranet web sites internet web sites web based software engineering virtual worlds perspective wall;information resources;internet web sites;web site visualisation;virtual reality;software engineering;intranet web sites;perspective wall;data visualisation;virtual reality information resources software engineering data visualisation;software development;visualization documentation html java software engineering power system management computer science information systems internet programming;virtual worlds	Internet and intranet web sites have become an integral part of software development as well as the wider fields of commercial, educational and recreational activity. In order to improve our understanding of web based software engineering we must first understand how web sites are used. Information about the structure and usage of sites is valuable to administrators, maintainers, content developers and users. The volume and complexity of the data generated by typical tools is a major limitation. We describe the use of virtual worlds, including a novel extension of the perspective wall, for visualising web site activity. Examples from our university environment are presented and discussed.	complexity;database;floor and ceiling functions;internet;intranet;numerical analysis;server (computing);software development;software engineer;software engineering;vrml;virtual world;web server	Danita Hartley;Neville Churcher;Greg Albertson	2000		10.1109/APSEC.2000.896733	web service;web application security;web development;web application;web modeling;data web;web analytics;web mapping;web-based simulation;web design;human–computer interaction;web standards;computer science;software development;web api;software engineering;web navigation;social semantic web;web page;virtual reality;multimedia;web intelligence;web 2.0;world wide web	Web+IR	-43.60550817097482	-24.65088677857048	180100
09e3fe601fb7059ba83fc9112a2c8f74dcd5fa58	plan of teaching & learning for database software through situated learning (poster session)	pedagogy;io;introductory computer science;situated learning;java;toolkits	"""The physical world is built from geometric objects, and computers are designed for crunching numbers. This gap has largely been ignored for years until the automobile and other industries and computer graphics started to manipulate and manufacture geometric objects with computers. Nowadays, handling geometric objects with computers has become a vital technology in automobile, ship-building, manufacturing, visualization, computer vision, GIS, geometric design, and computer graphics. Unfortunately, the skills of handling geometric objects is virtually missing in a typical computer science curriculum, in spit of its impact on computer science and other fields, and its importance to increase students' employability. To address this problem, we have created a course """"Computing with Geometry."""" The proposed poster will present the design merit, content, and findings of this course."""	computer graphics;computer science;computer vision;database;geographic information system;geometric design;scientific visualization;situated	Soo-Bum Shin;In-Hwan Yoo;Chul-Hyun Lee;Tae-Wuk Lee	2000		10.1145/343048.343241	situated learning;human–computer interaction;computer science;software engineering;teaching and learning center;multimedia;programming language;java;pedagogy	Graphics	-47.51717239237273	-30.092466191812203	180459
6f1fc909896acd2d2305301adc560807e3de21c3	candytop: a web3d interface to visualize growth of multimedia documents	catching up	Candytop is a web3D interface to visualize growth of multimedia documents along with a time line. Users can easily realize the relation among documents and catch up the context behind the projects. We use X3D VRML97 Profile for modeling and visualization.	timeline;vrml;web3d;x3d	Akira Wakita;Naofumi Yoshida;Jun Miyazaki;Hiroaki Chiyokura	2003		10.1145/965333.965342	computer science;database;multimedia;world wide web	HCI	-43.6663461281922	-27.492959229272493	180472
cb40438bc30c2505cba3e1889a4308644303151c	illusion—creating a mock reality	realism;arts;object;tracing;three dimensional;ray;computer music;animation;fine;and;graphics	Abstract#R##N##R##N#Photorealistic computer animation sequences have become more important in recent years in visualization and presentation techniques as well as in fine arts. Some aspects of creating a photorealistic computer animation are demonstrated by the following example of the film Illusion that was created by the computer graphics team at the University of Karlsruhe. An overview of modelling methods, some special effects and details on how to administrate a large computer animation project are presented.		Achim Stößer;Wolfgang Leister;Frerk Meyer	1993	Journal of Visualization and Computer Animation	10.1002/vis.4340040403	anime;three-dimensional space;computer vision;simulation;computer facial animation;tracing;skeletal animation;computer science;graphics;object;interactive skeleton-driven simulation;ray;non-photorealistic rendering;computer animation;multimedia;computer music;realism;programming language;computer graphics;3d computer graphics;computer graphics (images)	Visualization	-47.07706242626609	-30.271417545413243	180550
0ac38f88cd2a537459d1dc8f7cec169a87d5de94	on the design of a dual-mode user interface for accessing 3d content on the world wide web	user interface;3d web;3d graphics;hypertext	The World Wide Web, today's largest and most important online information infrastructure, does not support 3D content and, although various approaches have been proposed, there is still no clear design methodology for user interfaces that tightly integrate hypertext and interactive 3D graphics. This paper presents a novel strategy for accessing information spaces, where hypertext and 3D graphics data are simultaneously available and interlinked. We introduce a Dual-Mode User Interface that has two modes between which a user can switch anytime: the driven by simple hypertext-based interactions ''hypertext mode'', where a 3D scene is embedded in hypertext and the more immersive ''3D mode'', which immerses the hypertextual annotations into the 3D scene. A user study is presented, which characterizes the interface in terms of its efficiency and usability.	user interface;world wide web	Jacek Jankowski;Stefan Decker	2013	Int. J. Hum.-Comput. Stud.	10.1016/j.ijhcs.2013.04.006	user interface design;hypertext transfer protocol;hypertext;human–computer interaction;computer science;web navigation;multimedia;user interface;world wide web;3d computer graphics	Web+IR	-42.92500712118701	-26.965943054280686	180725
0a255ea9b105e6ba28a2254b7908d229fd839bea	document icons and page thumbnails: issues in construction of document thumbnails for page-image digital libraries	rendu image;image numerique;restitucion imagen;digital library;teoria sistema;user feedback;biblioteca electronica;systems theory;marcacion;visual representation;theorie systeme;marquage;imagen numerica;image rendering;electronic library;digital image;bibliotheque electronique;tagging	Digital libraries are increasingly based on digital page images, but techniques for constructing usable versions of these page images are largely folklore. This paper documents some issues encountered in creating various kinds of renderings of page images for the UpLib digital library system, and suggests approaches for each, based on both problem analysis and user feedback. Several factors important in determining useful sizes for small visual representations of the documents, called document icons, are discussed; one algorithm, called log-area, seems most effective.	algorithm;digital library;library (computing);library classification;problem solving;thumbnail	William C. Janssen	2004		10.1007/978-3-540-30230-8_11	digital library;computer science;multimedia;world wide web;systems theory;digital image;computer graphics (images)	Graphics	-43.05757755591464	-24.854716758000023	181714
fb0915b20ef80f5b4ccd8ff416fcd0e908148733	a format for a graphical communications protocol	protocols computer graphics data structures space technology application software iso standards humans digital images hardware transmitters;protocols;application software;computer graphics;iso standards;software architecture;data structures;transmitters;communication protocol;humans;space technology;interactive graphics;digital images;hardware	This article describes the requirements for a graphical format on which a graphical on-line communications protocol can be based. It is argued that on-line graphical communications is similar to graphical session capture, and thus we propose an Interactive Graphical Communications Format using the GKSM session metafile. The discussion includes items that complement the GKSM metafile as a format for on-line interactive exchanges. One key application area of such a format is multimedia on-line conferencing. Therefore, we present a conferencing software architecture for processing the proposed format. This format specification is made available to those planning multimedia conferencing systems, as a contribution toward the development of a graphical communication protocol that will permit the interoperation of these systems.	communications protocol;computer graphics;graphical user interface;image file formats;interoperability;interoperation;online and offline;prototype;requirement;software architecture;windows metafile	Lorenzo Aguilar	1986	IEEE Computer Graphics and Applications	10.1109/MCG.1986.276634	communications protocol;computer graphics metafile;wireless application protocol bitmap format;data structure;human–computer interaction;computer science;theoretical computer science;operating system;computer graphics (images)	Graphics	-46.92225752116219	-25.865829698653744	182086
fcd08a80dac096eb40af0bd93b688d151589c958	generated glyphs as memorable desktop icons for document	information visualization;hardware software interface	In this paper, we describe a possible exploratory research of the transfer of glyph images from information visualization software to virtual desktops. The goal is to find a way to offer users significant icon images which they can assign to documents, thus enhancing their memorability over time.,	desktop computer;glyph;information visualization;virtual desktop;visualization software	Alain D. M. G. Vaillancourt	1998		10.1145/324332.324334	human–computer interaction;computer science;world wide web;computer graphics (images)	HCI	-44.0960116767563	-30.949505715524655	182232
8871de24e8a94bff3e5bdeecbea760aa8a3e9a72	iannotate: exploring multi-user ink annotation in web browsers	web documents;user evaluation;web annotation;web pages;multi user;document annotation;digital ink	We present iAnnotate, a tool that provides multi-user digital ink annotation on standard web pages within a commercial browser. The annotation can be saved, retrieved and shared with others via a URL. In addition multiple users’ annotations can be displayed on the same page. We describe our design goals and the technical challenges. While realizing annotation on web documents is difficult because of the dynamic nature of the documents and the security constraints of web browsers, our user evaluation suggests that fully realized digital ink annotation tools would be very valuable.	application programming interface;microsoft research;microsoft silverlight;multi-user;open-source software;usability;web page	Beryl Plimmer;Samuel Hsiao-Heng Chang;Meghavi Doshi;Laura Laycock;Nilanthi Seneviratne	2010			web service;static web page;web modeling;web design;web accessibility initiative;image retrieval;computer science;web navigation;web page;multimedia;world wide web;information retrieval;web server	Web+IR	-43.4843943088134	-25.03510995205693	182298
27d7eef97b9d59e5c4ac2a32404e32c11c378ef2	rapid implementation of a partially reconfigurable video system with pynq		Undergraduate students rapidly implement a partially-reconfigured, real-time video processor on the Xilinx PYNQ board. The video processor performs various real-time operations including Sobel edge detection, embossing, averaging, an interactive Pong game, etc., using a separate partially-reconfigurable bit-stream for each distinct function. Selection of image-processing functions is accomplished by a Python-based graphical user interface that is accessed via a Jupyter notebook. As users select image-processing functions the appropriate partial bit-stream is automatically downloaded to the FPGA. The resulting system is easily and quickly developed by several undergraduate students over a period of about 10 weeks with very little supervision. All files related to the project are available for download on GitHub. The productivity benefits provided by PYNQ, including Jupyter-based documentation, tutorials, and executable Python code greatly ease development effort making PYNQ an excellent FPGA platform for education.	accessibility;audio description;bitstream;card image;descriptive video service;direct memory access;documentation;download;edge detection;executable;field-programmable gate array;framebuffer;graphical user interface;hdmi;ipython;image embossing;image processing;python;real-time clock;real-time computing;real-time transcription;secure digital;sobel operator;tyler oakley;usability;video processing;vii	Brad L. Hutchings;Michael J. Wirthlin	2017	2017 27th International Conference on Field Programmable Logic and Applications (FPL)	10.23919/FPL.2017.8056845	field-programmable gate array;documentation;real-time computing;computer science;embedded system;computer hardware;python (programming language);executable;sobel operator;graphical user interface;download	Visualization	-44.72369244956083	-29.480268194666696	182360
da2765d38cd31f92f4b8792a1f7d17baab6d6627	music notation as a mei feasability test		This project demonstrated that enough information can be retrieved from MEI, an XML format for musical information representation, to transform it into music notation with good fidelity. The process involved writing an XSLT script to transform files into Mup, an intermediate format, then processing the Mup into PostScript, the de facto page description language for high-quality printing. The results show that the MEI format represents musical information such that it may be retrieved simply, with good recall and precision.	music encoding initiative;page description language;postscript;precision and recall;printing;xml;xslt	B. Schwartz	2003				Web+IR	-43.82596638474481	-26.995435083976957	182704
180bdaaf881815beb7b9a80f3862eb2104efa6d9	creating guis for web services	user friendliness gui web services next generation web browsers form navigation variable size lists dynamic enumeration;graphical user interfaces web services search engines xml user interfaces concrete navigation html human computer interaction service oriented architecture;stylesheets;web service;online front ends;graphical user interfaces;forms;web services;next generation;graphical user interfaces online front ends;guis	Using standards like UDDI, WSDL, and SOAP, it is now possible to discover a Web service and determine the interface and message format that it understands. However, actually calling a Web service requires carefully studying its documentation and then writing special-purpose code to handle the service. There is not enough information provided in WSDL definitions to allow the generation of a user-friendly GUI for a service. In particular, there are currently no standards for making a service accessible thorough a Web browser; doing so requires an ad-hoc implementation. To solve this problem, we have written XMLbased standards that make creating user-friendly browser-based GUIs for Web services a straightforward task. We have also created an engine that implements our standards. We explain our design in this article.	documentation;graphical user interface;hoc (programming language);soap;usability;web services description language;web services discovery;web application;web service	Michael Kassoff;Daishi Kato;Waqar Mohsin	2003	IEEE Internet Computing	10.1109/MIC.2003.1232520	web service;navigation bar;static web page;web development;web modeling;web mapping;web-based simulation;html;web design;human–computer interaction;web accessibility initiative;web standards;computer science;ws-policy;web navigation;web page;multimedia;user interface;web 2.0;law;world wide web	Web+IR	-43.02925429129863	-25.528153043592457	183333
0235fb6cd2d6179fa3227ea2b589e4a21dceb889	distributed chinese bibliographic searching	chinese bibliographic	The system [1] was built with an extensible threetier architecture (Figure 1). Users accessed CLib via the Web sending multilingual queries to specified libraries and receiving bibliographic information through any Chinese-enabled browser. The CLib server either distributed the searches using Z39.50 protocol to libraries that supported Chinese or searched a local multilingual bibliographic database. Results were collated, filtered, and sorted for return. Here we focus on language support issues, clearly seen by following a user search from start to end. Among those issues:	bibliographic database;library (computing);server (computing);world wide web	M. K. Leong;Ling Cao;Ying Lu	1998	Commun. ACM	10.1145/273035.273054	theoretical computer science;data science;computer science	Theory	-45.78406731580306	-24.20407846023572	183718
1d1bd30399e60059bc20814ef2f259fa282f83ec	an operations advisor for an on-line computer banking system with graphics interface	graphical interface;banking system		graphics interface;online and offline;online banking	S. Ishii;T. Abe;Y. Hidai;Akihiro Tanaka	1989		10.1145/67312.67320	human–computer interaction;computer science;graphical user interface	Graphics	-43.54995775382835	-29.595294553410557	184677
3f12664ec7f22290f068200541d34b4e2f17ddce	windows powershell cookbook - scripting microsoft's new command shell: revised and updated (2. ed.)			microsoft windows;powershell	Lee Holmes	2010			active scripting;computer science;operating system;vbscript;command substitution;computer graphics (images)	NLP	-45.148528205921224	-28.127638921424108	185804
e57058f1bfa24c899475b457078c787cc85c8740	procedural interfaces to databases in the logician design environment			database	Chi-Ngong Pow	1985			human–computer interaction;computer science;systems engineering	EDA	-42.04264955890278	-29.152857379249	186168
c73c21d6ee4b1142dba6c365baf90087e5ab1e67	augmented reality browsers: essential products or only gadgets?	augmented reality browser;ar browser;web browser;essential product	How lessons learned from the evolution of the Web and Web browsers can influence the development of AR browsers.	augmented reality;world wide web	Tobias Langlotz;Jens Grubert;Raphaël Grasset	2013	Commun. ACM	10.1145/2527190	browser security;web accessibility initiative;multimedia;internet privacy;world wide web	Web+IR	-44.09547299948135	-24.277579072967256	186401
15c185d465012f146441890f3738043f019c66ae	recommendation of web resources for academics - architecture and components		Vast amount of resources in digital libraries and on the Internet makes the selection of relevant and appropriate resources rather difficult especially for novices and less experienced academics such as students. The article presents an architectural solution for personal recommendation system of web pages targeted to the academic sphere. The solution aims to meet the objective of minimizing the overheads and provide support for PDF documents. The solution is based on a set of heterogeneous components connected	digital library;internet;library (computing);personalization;prototype;recommender system;user profile;web page;web resource;web service	Pavel Cech;Vladimír Bureš	2007			human–computer interaction	HPC	-44.49812671403502	-24.404375567437757	186700
0b6a4d6f3f957fe7f65d5271c08a67341130edc2	a system for adding content-based searching to a traditional music library catalogue server	query by humming;music information retrieval;z39 500	Most online music library catalogues can only be searched by textual m etadata. Whilst highly effective - since the rules for maintaining consistency have been refined over many years - this does not allow searching by musical content. Many music librarians are familiar with users humming their enquiries. Most systems providing a query by humming interface tend to run independently of music library catalogue systems and not offer similar textual metadata searching. This demonstration shows how we can integrate these two types of system based on work conducted as part of the NSF/JISC funded OMRAS project (http://www.omras.org).	ibm notes;librarian;online music store;query by humming;server (computing);while	Matthew J. Dovey	2001		10.1145/379437.379791	computer science;multimedia;world wide web;information retrieval	Web+IR	-45.86407394295899	-24.408620983970742	186859
ecf7d7387fc9e3d7a808cf14a8d35a73fbaf3d8d	dsp fun the gui way.		Production of Graphical User Interfaces (GUIs) has been found to be a vital ingredient in building up a comprehensive MATLAB framework supporting the learning and enjoyment of DSP topics. We describe some of the functional and esthetic issues surrounding the two dozen GUIs we have developed and used to animate various DSP topics during inclass demonstrations and in student laboratories. We conclude that the substantial development effort needed for a really good GUI is paid back by the impact on learning and the enhancement of routine design and	graphical user interface;matlab	Anush Yardim;M. A. Mughal;Gerald D. Cain;Dragana Barjamovic	1999			computer engineering;matlab;dozen;ingredient;digital signal processing;graphical user interface;computer science	HCI	-47.749663807622234	-27.389971860399168	187028
1c9472ca3adfb71bc12ee89d91f9e58fe328fcdc	context-driven smart authoring of multimedia content with xsmart	smart multimedia authoring;multimedia authoring;context aware;user interface;authoring tool;context;domain specificity	In recent years, many highly sophisticated multimedia authoring tools have been developed. Up to today, these system's integration of the targeted user context, however, is limited. With our Context-aware Smart Multimedia Authoring Tool (xSMART) we developed a semi-automatic authoring tool that integrates the targeted user context into the different authoring steps and exploits this context to guide the author through the content authoring process. The design of xSMART allows that it can be extended and customized to the requirements of a specific domain by domain-specific wizards. These wizards realize the user interface that meets best the domain-specific requirements and effectively supports the domain experts in creating their content targeted at a specific user context.	requirement;semiconductor industry;user interface	Ansgar Scherp;Susanne Boll	2005		10.1145/1101149.1101323	human–computer interaction;computer science;operating system;multimedia;user interface;world wide web	HCI	-40.993529658313406	-25.583142762116765	187101
62a93df316c88ccb5fa938fa67c24b8a9e689d23	digital topology java applet	digital topology;world wide web;digital image;image processing;java applet	We present here a java applet, accessible through the World Wide Web, which allows to apply to a binary digital image a series of topological algorithms for image processing.	algorithm;digital image;digital topology;image processing;java applet;world wide web	Carmen Escribano;Antonio Giraldo;María Asunción Sastre;Mario Trotta	2008		10.1145/1384271.1384372	plug-in;image processing;computer science;database;world wide web;digital image;digital topology;java applet;computer graphics (images)	Graphics	-43.806862014153275	-27.141426687972324	187183
e8b121fd4f4e8eb378c0ba57dccdbf72614b922c	remote camera control in a distributed multimedia system	distributed multimedia system;camera control	Most publications on multimedia issues address basic technology or system software aspects (video server implementation, communication protocols, etc.). Some papers discuss networked applications with the focus on multimedia conferencing, multimedia and hypermedia documents and video on demand with client and server systems. We look into details of networked applications, a remote camera control application.		Marcus Wieland;Ralf Steinmetz;Peter Sander	1994		10.1007/978-3-642-51136-3_25	smart camera;embedded system;computer vision;multimedia	Robotics	-47.16802015608071	-25.611389797693782	187501
e5ecdb7d7b835890ec28e154fb7f958ce01b7811	flow curves: an intuitive interface for coherent scene deformation		Figure 1: This figure shows results generated by Artist 1 in our user study (see section 7 of our paper). The five scenes in the left column were deformed by the artist using both Maya (middle column) and our Flow Curves interface (right column). Under each deformed image, we provide the corresponding time and number of mouse clicks required. Note that for scenes 3 and A, the artist has added his own SEcurves to the ones automatically computed.	autodesk maya;coherent;usability testing	Loïc Ciccone;Martin Guay;Robert W. Sumner	2016	Comput. Graph. Forum	10.1111/cgf.13022	computer vision;computer science;theoretical computer science;computer graphics (images)	Vision	-44.563554799430776	-30.77398603594502	187512
c1d2fc4ca07e88bf3af074caba827a1d5d5d24ad	interactive shared bookmark		ISB has been designed to looking up information on Internet easier. This tool aims to be operated in conjunction with local area networks, for instance inside a company or, more generally, within Intranets. ISB’s capabilities are situated between bookmark’s ones and search engine’s ones. So to speak, ISB allows each user to take advantages of their colleague’s bookmarks. Inter activity is one of the main functionality of this shared bookmark.	internet;intranet;situated;web search engine	Luigi Lancieri	1997			computer science	HCI	-47.069245348379944	-24.23758307401317	188463
d7bfa51dab2c9b9c20e483b7d559e1810dcd7345	visual user interfaces for database systems	database system;user interface		application programming interface;relational database management system	Yannis E. Ioannidis	1996	ACM Comput. Surv.	10.1145/242224.242399	user interface design;user;10-foot user interface;database server;intelligent database;shell;database tuning;magic pushbutton;computer science;natural user interface;user interface;graphical user interface testing	DB	-42.7051311298371	-29.627577166187482	188760
34f84b94325800470df3c9dfe3e50d62ef9348da	handheld access to radiology teaching files: an automated system for format conversion and content creation	databases;data conversion;radiology;pacs;interfaces;image processing;personal digital assistant;web accessibility;application program interface;personal digital assistants;computer programming;handheld device;mobile devices	Current handheld Personal Digital Assistants (PDAs) can be used to view radiology teaching files. We have developed a toolkit that allows rapid creation of radiology teaching files in handheld formats from existing repositories. Our toolkit incorporated a desktop converter, a web conversion server and an application programming interface (API). Our API was integrated with an existing pilot teaching file database. We evaluated our system by obtaining test DICOM and JPEG images from our PACS system, our pilot database and from personal collections and converting them on a Windows workstation (Microsoft, Redmond, CA) and on other platforms using the web server. Our toolkit anonymized, annotated and categorized images using DICOM header information and data entered by the authors. Image processing was automatically customized for the target handheld device. We used freeware handheld image viewers as well as our custom applications that allowed window/level manipulation and viewing of additional textual information. Our toolkit provides desktop and web access to image conversion tools to produce organized handheld teaching file packages for most handheld devices and our API allows existing teaching file databases to incorporate handheld compatibility. The distribution of radiology teaching files on PDAs can increase the accessibility to radiology teaching.© (2002) COPYRIGHT SPIE--The International Society for Optical Engineering. Downloading of the abstract is permitted for personal use only.	radiology	Raghav Raman;Lalithakala Raman;Bhargav Raman;Garry Gold;Christopher F. Beaulieu	2002		10.1117/12.466928	computer science;database;multimedia;world wide web	OS	-44.294580389373394	-26.676323259978577	188825
de3ac3e68f304eb81ca6323a67f2c20ff02548f6	is ontowiki useful as collaborative working tool for engineers?	semantic web;poster;computer supported cooperative work		ontowiki	Selver Softic;Alexander Stocker;Manfred Rosenberger;Jürgen Zernig;Michael Schmeja	2014				Logic	-45.31461864716904	-25.964609217816296	189262
e989f6cede40457038892bfef4971a85bec6288d	the evolution of user interface tools for database applications	user interface	The recent advances in hardware and enabling software technologies are having profound effect on the development of UI tools for building database applications.	user interface	Moshé M. Zloof;Ravi Krishnamurthy	1994		10.1007/3-540-58183-9_38	user interface design;user;10-foot user interface;interface metaphor;shell;human–computer interaction;natural language user interface;magic pushbutton;console application;natural user interface;interactivity;user interface;graphical user interface testing;multiple document interface	EDA	-42.98262266708981	-30.20543221429127	190402
1316fca431b418bac20dc0b470b920175da5aaf3	exploring users' experiences of the web	web browsing	Abstract: this paper we present results froma qualitative in-depth interview study of how users browse theWeb and combine browsing with their other activities. The dataare used to explore three particular problems which users havewith browsing the Web. Firstly, users have problems managingtheir favourites, and in particular accessing their favouritesthrough a hierarchical menu. Second, users have problems withcombining information across different Web sites - what we callthe &quot;meta-task&quot; problem....	world wide web	Barry A. T. Brown;Abigail Sellen	2001	First Monday		web service;web application security;webhook;web development;web analytics;web design;web accessibility initiative;web standards;computer science;ws-policy;web navigation;social semantic web;multimedia;internet privacy;web intelligence;web engineering;web 2.0;world wide web;mashup	HCI	-43.19375826071955	-24.137124351461907	190983
62b3857ed2b5f40e41940549a34e7ffdb95bce72	a visual information seeking system for web search	user interface	In this paper we present the conception and the evaluation of a visual information seeking system for the Web. Our work has been motivated by the lack of good user interfaces assisting the user in searching the Web. The selected visualisations and why they have been chosen are explained in detail. A focus of this paper is on the evaluation of these visualisations as an add-on to the traditional result list presentation.	adaptive binary optimization;add-ons for firefox;cylinder-head-sector;earthbound;han unification;information seeking;lua;microsoft outlook for mac;numerical aperture;power-on reset;sed;user interface;web search engine;world wide web	Harald Reiterer;Gabriela Mußler;Thomas M. Mann	2001			web service;web development;web design;web crawler;web navigation;web page;multimedia;web intelligence;web search query;world wide web;information retrieval;web server;search engine	Web+IR	-43.33104309970721	-24.108425388906145	190996
1b4bba990c9e2ef48041966845577ce1ef35e183	cern building and map interface via www and on the palm	hand held device;map building;real time;indexation	The buildings at CERN are chrono-chaotically numbered. They are therefore sometimes hard to find without a map and index. A WWW browser can be used to retrieve the location of a building by name or number. A set of electronic maps containing the Meyrin, Prevessin, LEP and SPS sites are available in PostScript format. These maps are used to build a database of the locations of the buildings which together with the maps are accessed by some CGI scripts to provide the browser with a set of GIF bitmap images. These images show the full CERN site, the site of the building and an enlargement of the exact location of the building. A click on the image can show any location at CERN or change the enlargement factor. A Palm application can be used to access the same maps. In this application the maps are stored on the Palm and are drawn on request in real time. The user is thus able to lookup buildings and to interactively scale and translate the resulting picture. The limited memory and CPU resources which are available in the Palm are used to store the maps and building coordinates and to calculate the picture. The application is written in Java to provide portability in future to other hand held devices. It runs on the recently released kvm, an implementation of the Java Micro Edition on top of PalmOS.	bitmap;central processing unit;common gateway interface;gif;ibm 1401 symbolic programming system;interactivity;java platform, micro edition;lookup table;map;mobile device;palm os;postscript;www	Mark Dönszelmann;Péter Jurcsó	2001			simulation;computer science;database;world wide web;computer graphics (images)	Web+IR	-43.941559826832275	-25.89459716632332	191284
de2b7e34b5728b10b3081d740df89fb38b2cec01	skeleton lab: an interactive tool to create, edit, and repair curve-skeletons				Simone Barbieri;Pietro Meloni;Francesco Usai;Riccardo Scateni	2015		10.2312/stag.20151299	engineering;multimedia;computer graphics (images)	HCI	-47.02448420249628	-29.68266253440544	192585
db5e71462e3830cc359f98bb8a6afa3c1b1799a6	modeling clinical protocols using semantic mediawiki: the case of the oncocure project	clinical guideline;semantic annotation;electronic patient record;collaborative tools;modeling language;automatic generation;decision support system;distributed environment;clinical protocol;breast cancer;semantic wiki	A computerized Decision Support Systems (DSS) can improve the adherence of the clinicians to clinical guidelines and protocols. The building of a prescriptive DSS based on breast cancer treatment protocols and its integration with a legacy Electronic Patient Record is the aim of the Oncocure project. An important task of this project is the encoding of the protocols in computer-executable form — a task that requires the collaboration of physicians and computer scientists in a distributed environment. In this paper, we describe our project and how semantic wiki technology was used for the encoding task. Semantic wiki technology features great flexibility, allowing to mix unstructured information and semantic annotations and automatically generate the final model with minimal adaptation cost. These features render semantic wikis natural candidates for small to medium scale modeling tasks, where the adaptation and training effort of bigger systems cannot be justified. This approach is not constrained to a specific protocol modeling language, but can be used as a collaborative tool for other languages. When implemented, our DSS is expected to reduce the cost of care while improving the adherence to the guideline and the quality of the documentation.	collaborative software;computer scientist;documentation;executable;mediawiki;modeling language;wiki	Claudio Eccher;Antonella Ferro;Andreas Seyfang;Marco Rospocher;Silvia Miksch	2008		10.1007/978-3-642-03262-2_4	decision support system;computer science;knowledge management;breast cancer;data mining;database;modeling language;distributed computing environment	SE	-41.18833785029637	-27.532319576073874	192721
63562e234a7e8d91d53774a8f2a2dcdfd0af68fe	dialogue management for interactive question answering	natural language;user interaction;dialogue manager;question answering	With the increasing availability of on-line information, either on the Internet or within Intranets, the need for Question Answering (Q&A) systems that allow user interaction expressed in natural language has become critical. A major obstacle in building robust, user-friendly Q&A systems is the need to enable a conversation with the user in which clarifications, follow-up questions and context specification are made possible. This paper presents INTERLOCUTOR, a generic interactive shell that performs dialogue management for open-domain Q&A systems through a set of dialogue strategies enabled by task templates.	dialog system;information needs;interactivity;intranet;knowledge engineering;natural language;online and offline;question answering;usability	Sanda M. Harabagiu;Marius Pasca;V. Finley Lacatusu	2001			natural language processing;question answering;computer science;knowledge management;natural language;world wide web	NLP	-41.096770861120085	-26.464553356360266	192787
e40c9758134fd1b00a3227e9b6720331502279e4	"""a """"graphics window"""" to a data base for electronic system design"""	on line editing;project design data base;physical design;display techniques;printed circuit layout;system design;printed circuit board;interactive graphics;interaction design	"""This paper will explore the use of """"Graphics Windows"""" to data bases used in the physical design of electronic equipment. The common characteristics of connectivity oriented data bases will be briefly reviewed. Then the concept of a graphics window on this type of data base will be defined and several examples given. This is followed by a detailed example of a graphics window used for editing printed circuit boards. The paper is concluded with a brief discussion of experiments conducted with the window which are aimed at developing display techniques useful for interactive design."""	database;experiment;graphics;interactive design;microsoft windows;physical design (electronics);printed circuit board;printing;systems design	Charles Alaimo	1974		10.1145/1408800.1408863	physical design;human–computer interaction;computer science;circuit design;engineering drawing;computer graphics (images)	DB	-47.54066870819331	-28.201574388644286	193714
c78f4c7fdd9258efdf1087cd70cb1487b5de60c2	custom protocol load testing - the case of visual studio test edition			load testing;microsoft visual studio	Oleksiy Volkov	2009			microsoft visual studio;computer graphics (images);load testing;computer science	SE	-45.95238537407716	-30.155925904767507	196153
45f7a5ca2cee6a3e710fd484538654644bac8017	multimedia authoring based on templates and semi-automatic generated wizards	multimedia;tal;authoring;wizards;template based authoring	Templates have been used to engage non-expert multimedia authors as content producers. In template-based authoring, templates with most of the relevant application logic and application constraints are developed by experts, who must also specify the template semantics, report which are the required gaps to be filled in, and how to do so. Filling template's gaps is the single task left to inexperienced users to produce the final applications. To do that, they usually must understand the padding instructions reported by template authors and learn some specific padding language. An alternative is using specific GUI components created specifically to each new developed template. This paper proposes a semi-automatic generation of GUI Wizards to guide end(-user) authors to create multimedia applications. The wizard can be tuned to improve the communication between the template author and the template end user, and also if the template specification is not complete. Many successful trial cases show that the generated wizards are usually simple enough to be used by non-experts. The contributions coming from this paper is not constrained to any specific template language or final-application format. Nevertheless, aiming at testing the proposal it was instantiated to work with TAL (Template Authoring Language) whose template processors can generate applications in different target languages.	business logic;central processing unit;experience;graphical user interface;semiconductor industry;template processor;typed assembly language;wizard (software)	Roberto Gerson De Albuquerque Azevedo;Rodrigo Costa Mesquita Santos;Eduardo Cruz Araújo;Luiz Fernando Gomes Soares;Carlos de Salles Soares Neto	2013		10.1145/2494266.2494283	computer science;database;multimedia;world wide web	PL	-41.74111294069736	-26.808002214851978	196468
443b874969bcad1d5e223f812b45a24402c52aaa	microprocessor controlled colour vision tester	colour vision	This paper describes the development of a new microprocessor controlled instrument for use in scoring the Farnsworth Munsell colour vision test. In the test the colour spectrum from red to violet is covered with 85 caps each containing a disc with a slightly different shade. The subject is given caps in random order and is required to rearrange them in colour sequence. The instrument incorporates an M6800 microprocessor which identifies the location of each cap, computes the error score and drives a circular chart recorder. All software for the instrument is written in PL/F, a high level language for microprocessors developed at Strathclyde.		David W. Pritty	1979	Microprocessors and Microsystems - Embedded Hardware Design	10.1016/0141-9331(79)90140-6	computer vision;computer science;computer graphics (images)	EDA	-45.38459574025028	-28.979500230512276	196867
f93e1ee7a11df9c180daa1de79b10d48d75e42a4	streamlining complexity: conceptual page re-modeling for rich internet applications	ux requirements;information architecture;rich internet application;user experience;dialogue modeling	The growth of Rich Internet Applications (RIAs) calls for new conceptual tools that enable web engineers to model the design complexity unleashed by innovative interaction (with increasing communication potential) and to carefully consider the impact of the design decisions on the optimal flow of the User Experience (UX). In this paper we illustrate how is particularly relevant for RIA engineering not only to capture existing RIA technologies with suitable design artifacts but also to model an effective dialogue between users and RIA interfaces. Through a case study, we propose a set of conceptual design primitives (Rich-IDM) to enable web engineers to characterize the fluid, smooth and organic nature of the user interaction, and to take design decisions which meet both usability and communication requirements.	a/ux;high- and low-level;requirement;rich internet application;semiconductor industry;the sims;usability;user experience;user interface	Andrea Pandurino;Davide Bolchini;Luca Mainetti;Roberto Paiano	2011		10.1007/978-3-642-27997-3_28	user experience design;rich internet application;human–computer interaction;computer science;software engineering;programming language;world wide web;information architecture	HCI	-43.6312751592996	-29.96350556836099	197850
0cb1edfaf10d4e1f3dfb7510817aec5fc78e64ef	mathplayer: web-based math accessibility	print disabilities;math accessibility;learning disabled;visual impairments;assistive technology;visual impairment;mathml	MathPlayer is a plug-in to Microsoft's Internet Explorer (IE) that renders MathML[11] visually. It also contains a number of features that make mathematical expressions accessible to people with print-disabilities. MathPlayer integrates with many screen readers including JAWS and Window-Eyes. MathPlayer also works with a number of TextHELP!'s learning disabilities products.	accessibility;internet explorer;plug-in (computing);rendering (computer graphics);web application;window-eyes	Neil Soiffer	2005		10.1145/1090785.1090831	human–computer interaction;computer science;multimedia;world wide web;mathml	ECom	-44.72938186696068	-30.75976123966631	198212
d0e0317a92c517ef7f03fd7162a1075bc561f2fa	microcomputer based search/save system for the lockheed information system (dialog)	information system	Micro Search/Save is a computer program written for the APPLE PASCAL System. The program emulates a CRT terminal with an additional feature which enables the microcomputer user to transmit a DIALOG search profile stored on diskette. Additional features permit automatic dial-up, automatic logon, printing search results, and saving search results on diskette.	information system;microcomputer;dialog	Benjamin F. Speller;George F. Bowie	1982	Inf. Process. Manage.	10.1016/0306-4573(82)90040-1	embedded system;simulation;computer hardware;computer science;world wide web;information retrieval;information system	DB	-44.74325040536315	-28.81213326812095	198240
0abaebcf389011e3d6013ae5acbfcd952a9024a1	the digital library integrated task environment (dlite)	user interface;direct manipulation;digital library;digital libraries;interface design;world wide web;holophrasting	We describe a case study in the design of a user interface to a digital library. Our design stems from a vision of a library as a channel to the vast array of digital information and document services that are becoming available. Based on published studies of library use and on scenarios, we developed a metaphor called workcenters, which are customized for users’ tasks. Due to our scenarios and to prior work in the CHI community, we chose a direct-manipulation realization of the metaphor. Our system, called DLITE, is designed to make it easy for users to interact with many different services while focusing on a task. Users have reacted favorably to the interface design in pilot testing. We conclude by describing our approaches to this problem.	abstract window toolkit;chi;coherence (physics);digital data;digital library;direct manipulation interface;java;library (computing);prototype;smoothing;tom	Steve B. Cousins;Andreas Paepcke;Terry Winograd;Eric A. Bier;Kenneth A. Pier	1997		10.1145/263690.263807	interface metaphor;human–computer interaction;engineering;multimedia;world wide web	HCI	-43.43643042720053	-30.411265025613048	198341
587c1738ba18936e57a5fef66d2d74ff1f23f57b	a web site editing system based on unfold/ fold operations	authoring tool;dom;zooming;html;web	A better page structure for a web site improves the usability of its contents. Though ensuring a well-designed structure is important, site updating, such as adding new contents, may contort the consistency of a site. Most editors have experienced trouble changing the site-structure because the tasks include both creating new pages and linking to the pages. We have designed and implemented a system called “Javara” for restructuring a web site. Javara is a kind of editor, but the principal operations are link unfolding and folding. Link unfolding inserts the linked document into the page, which can then be used to gather the sparse contents into a page. Folding means to create both a new page and a link to that page at the same time, which can be used to divide the contents of a grand page into sub pages. Editors can specify a target area to be exported anywhere with casual drag operations. Javara also has a zoomable pane to show a longer page. These facilities will reduce the editor’s burden.	linker (computing);sparse matrix;subpage;unfolding (dsp implementation);usability	Hironohu Aoki;Motoki Miura;Jiro Tanaka	2002			world wide web;usability;restructuring;casual;computer science	Networks	-43.89753589437735	-26.0046769712003	199095
28934a4740225ac4d1200924c384e8b0030c67b6	people, places, and things: the next generation web	multi user;interactive systems internet internetworking;internet;multiuser interactive system next generation web world wide web;next generation;internetworking;world wide web;interactive systems;testing humans web server network servers service oriented architecture navigation java html graphics ip networks	Today's World-Wide Web was designed for sharing information among many users, yet it lacks abstractions for people and places. Browsing the Web is a solitary activity because Web clients and servers do not natively support multi-user interaction. This paper discusses these limitations in the current Web architecture and proposes a set of extensions to improve the multi-user interactive nature of the Web.		James Gwertzman;Margo I. Seltzer	1996		10.1109/CMPCON.1996.501750	web service;web application security;web development;web modeling;data web;web of things;web mapping;web-based simulation;web design;web accessibility initiative;web standards;computer science;web api;web navigation;web page;multimedia;internet privacy;web intelligence;web 2.0;world wide web;web server	NLP	-43.076402531485556	-25.794290221339537	199503
14b63ff59eb4478e0345e154e16740733467c4a5	the graphical user interface.	graphical user interface;graphic user interface	The systems are getting better, but they are not perfect yet. With physicians, health information managers, nurses, and software engineers working together to more accurately define what these systems can do, should do, and will do, better and even more elegant GUIs will be developed.		L Swadner	1995	Journal of AHIMA	10.1007/978-0-387-73003-5_2239	user interface design;look and feel;10-foot user interface;clickable;shell;magic pushbutton;console application;skin;event-driven programming;natural user interface;user interface;graphical user interface testing;multiple document interface	HCI	-42.85810812976403	-29.721857020555223	199862
