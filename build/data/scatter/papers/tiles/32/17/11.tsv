id	title	keywords	abstract	entities	authors	year	journal	doi	fos	area	x	y	ix
7f1d40a5310e3386500984e07a802b2bb0ad8298	an auto-learning system for the classification of fetal heart rate decelerative patterns	autoapprentissage;ritmo cardiaco;sistema experto;detection forme;aplicacion medical;sistema hibrido;rule based;fetal therapy;base connaissance;rythme cardiaque;shape detection;classification;autodidactismo;self learning;learning system;deteccion forma;pattern detection;heart rate;traitement foetus;desaceleracion;hybrid system;autoorganizacion;base conocimiento;self organization;medical application;tratamiento feto;systeme expert;fetal heart rate;reseau neuronal;deceleration;clasificacion;red neuronal;autoorganisation;artificial neural network;neural network;systeme hybride;application medicale;knowledge base;expert system	The classification of decelerations of the Fetal Heart Rate signal is a difficult and crucial task in order to diagnose the fetal state. For this reason the development of an automatic classifier would be desirable. However, the low incidence of these patterns makes it difficult. In this work, we present a solution to this problem: an auto-learning system, that combines self-organizing artificial neural networks and a rule-based approach, able to incorporate automatically to its knowledge each new pattern detected during its clinical daily use.		Bertha Guijarro-Berdiñas;Amparo Alonso-Betanzos;Oscar Fontenla-Romero;Olga Garcia-Dans;Noelia Sánchez-Maroño	2001		10.1007/3-540-45723-2_47	acceleration;self-organization;biological classification;computer science;artificial intelligence;artificial neural network;algorithm;hybrid system	Mobile	8.257420274333507	-30.328178623586048	192946
4b286715e15882a8dcbab520246e5a05d2c0c60a	pre- and post-processing in machine learning and data mining	tratamiento datos;extraction information;learning algorithm;model combination;decision tree;analisis datos;information extraction;numerical continuation;data processing;traitement donnee;intelligence artificielle;algorithme apprentissage;data mining;very large database;data analysis;neural net;machine learning;fouille donnee;knowledge acquisition;artificial intelligence;analyse donnee;knowledge integration;knowledge discovery in database;inteligencia artificial;algoritmo aprendizaje;busca dato;decision rule;knowledge base;extraction informacion	"""  Knowledge discovery in databases (KDD) has become a very attractive discipline both for research and industry within the last few years. Its goal is to extract  """"pieces"""" of knowledge or """"patterns"""" from usually very large databases. It portrays a robust sequence of procedures or steps  that have to be carried out so as to derive reasonable and understandable results. One of its components is the process which  induces the above “pieces” of knowledge; usually this is a machine learning (ML) algorithm. However, most of the machine learning algorithms require perfect data in a specific format. The data that are  to be processed by a knowledge acquisition (inductive) algorithm are usually noisy and often inconsistent. Many steps are  involved before the actual data analysis starts. Moreover, many ML systems do not easily allow processing of numerical attributes  as well as numerical (continuous) classes. Therefore, certain procedures have to precede the actual data analysis process.  Next, a result of an ML algorithm, such as a decision tree, a set of decision rules, or weights and topology of a neural net,  may not be appropriate from the view of custom or commercial applications. As a result, a concept description (model, knowledge  base) produced by an inductive process has to be usually postprocessed. Postprocessing procedures usually include various  pruning routines, rule quality processing, rule filtering, rule combination, model combination, or even knowledge integration.  All these procedures provide a kind of symbolic filter for noisy, imprecise, or non-user-friendly knowledge derived by an  inductive algorithm. Therefore, some preprocessing routines as well as postprocessing ones should fill up the entire chain of data processing. The pre- and post-processing tools always help to investigate databases  as well as to refine the acquired knowledge. Usually, these tools exploit techniques that are not genuinely symbolic/logical,  e.g., statistics, neural nets, and others.  """	data mining;machine learning;precondition;video post-processing	Ivan Bruha	2001		10.1007/3-540-44673-7_13	knowledge base;knowledge integration;data processing;computer science;artificial intelligence;machine learning;decision tree;data mining;decision rule;data analysis;information extraction;artificial neural network;very large database	ML	7.395558816434938	-30.188437589967126	193485
797a4e4fff934eb5df45882f9f0719b8e1e87557	hierarchical mixtures of autoregressive models for time-series modeling	reponse temporelle;ar model;mixture;decision tree;melange;modelo autorregresivo;weighted averaging;model generation;datos financieros;modele lineaire;analyse temporelle;donnee financiere;modelo lineal;time series;probabilistic approach;arbol decision;analisis temporal;autoregressive model;financial data;time analysis;nonlinear time series;analisis regresion;time response;enfoque probabilista;approche probabiliste;robustesse;linear model;serie temporelle;financial time series;serie temporal;analyse regression;robustness;regression analysis;teoria mezcla;respuesta temporal;modele autoregressif;mixture theory;theorie melange;arbre decision;mezcla;robustez;time series model	A hierarchical mixture of autoregressive (AR) models is proposed for the analysis of nonlinear time-series. The model is a decision tree with soft sigmoidal splits at the inner nodes and linear autoregressive models at the leaves. The global prediction of the mixture is a weighted average of the partial predictions from each of the AR models. The weights in this average are computed by the application of the hierarchy of soft splits at the inner nodes of the tree on the input, which consists in the vector of the delayed values of the time series. The weights can be interpreted as a priori probabilities that an example is generated by the AR model at that leaf. As an illustration of the flexibility and robustness of the models generated by these mixtures, an application to the analysis of a financial time-series is presented.	autoregressive model	Carmen Vidal;Alberto Suárez	2003		10.1007/3-540-44989-2_71	econometrics;artificial intelligence;time series;star model;mathematics;autoregressive model;statistics	NLP	9.364631840185632	-24.503843703494812	194383
9ae7e57e19d7789acbf0a4c94e1d6f006d6aa498	evaluating students' learning progress by using fuzzy inference system	students learning progress evaluation;fuzzy rueles;complexity theory;fuzzy reasoning;expert systems;learning artificial intelligence educational computing fuzzy logic fuzzy reasoning fuzzy systems inference mechanisms;inference mechanisms;fuzzy sets;fuzzy logic;accuracy;fuzzy expert system;fuzzy inference;fuzzy inference system;defuzzification students learning progress evaluation fuzzy inference system fuzzification;mathematical model;fuzzy systems fuzzy logic fuzzy sets hybrid intelligent systems educational technology knowledge engineering systems engineering education gravity genetic algorithms;fuzzification;fuzzy inference fuzzy rueles fuzzy expert system student evaluation;student evaluation;learning artificial intelligence;educational computing;fuzzy systems;defuzzification	Having an effective system for evaluating the learning progress of students is an essential key to realizing the goals of education. In recent years, many researchers proposed many fuzzy inference methods for students' learning progress evaluation. In this paper, a new fuzzy inference system for evaluating the learning progress is proposed. In the proposed system, difficulty, importance and complexity of a question is determined by fuzzification, fuzzy inference and defuzzification. Since the proposed system is simple, transparent and easy to implement, it provides a novel solution to students' learning progress evaluation.	asp.net;cog (project);complexity;defuzzification;diagram;feedback;fuzzy control system;fuzzy logic;fuzzy set;inference engine;minimax;sql;subject-matter expert	Mahdi Hassani Goodarzi;Akram Amiri	2009	2009 Sixth International Conference on Fuzzy Systems and Knowledge Discovery	10.1109/FSKD.2009.313	adaptive neuro fuzzy inference system;computer science;artificial intelligence;machine learning;data mining;mathematics;fuzzy set;expert system;fuzzy control system	ML	3.278490711287082	-28.058514573321542	194585
0a2244adc17e4582e8dac89078fbf3f5c596aff5	principal component analysis of fuzzy data using autoassociative neural networks	high dimensionality;neural networks;neural nets;fuzzy data;fuzzy number;fuzzy data analysis principal component analysis fuzzy data linear autoassociative neural network fuzzy arithmetics feature extraction pattern recognition;fuzzy set theory;fuzzy logic;data analysis;sensory evaluation;data analysis principal component analysis feature extraction fuzzy set theory neural nets fuzzy logic;fuzzy data analysis;feature extraction;principal component analysis;pattern recognition;principal component analysis fuzzy neural networks neural networks fuzzy sets data analysis data mining pattern recognition feature extraction clouds vehicles;correlation coefficient;neural network	This paper describes an extension of principal component analysis (PCA) allowing the extraction of a limited number of relevant features from high-dimensional fuzzy data. Our approach exploits the ability of linear autoassociative neural networks to perform information compression in just the same way as PCA, without explicit matrix diagonalization. Fuzzy input values are propagated through the network using fuzzy arithmetics, and the weights are adjusted to minimize a suitable error criterion, the inputs being taken as target outputs. The concept of correlation coefficient is extended to fuzzy numbers, allowing the interpretation of the new features in terms of the original variables. Experiments with artificial and real sensory evaluation data demonstrate the ability of our method to provide concise representations of complex fuzzy data.	artificial neural network;coefficient;experiment;fuzzy logic;fuzzy number;principal component analysis	Thierry Denoeux;Marie-Hélène Masson	2004	IEEE Transactions on Fuzzy Systems	10.1109/TFUZZ.2004.825990	fuzzy logic;defuzzification;adaptive neuro fuzzy inference system;feature extraction;fuzzy classification;computer science;fuzzy number;neuro-fuzzy;machine learning;pattern recognition;data mining;mathematics;fuzzy set;fuzzy associative matrix;data analysis;artificial neural network;principal component analysis	ML	3.27298830582255	-28.72589131915281	194630
69dbc8e40cfe86d4d587e50c23aa89764bcf0228	identification of fuzzy models using cartesian genetic programming	recursive least square;recursive estimation;pattern clustering;least squares approximations;input variables;fuzzy models;cartesian genetic programming;recursive estimation combinatorial mathematics fuzzy set theory fuzzy systems genetic algorithms least squares approximations pattern clustering;genetic programming;fuzzy set theory;fuzzy sets;complex optimization problem;optimization problem;fuzzy clustering;shape;membership function parameters;fuzzy clustering fuzzy models cartesian genetic programming pattern recognition complex optimization problem recursive least square membership function parameters;membership function;pattern recognition;genetic algorithms;optimization;local minima;combinatorial mathematics;fuzzy systems;fuzzy model;genetic programming fuzzy systems fuzzy sets least squares methods system identification shape sampling methods resonance light scattering takagi sugeno model computational intelligence;data models	Fuzzy models have capability for solving problem in different application such as pattern recognition, prediction and control. Nevertheless, it has to be emphasized that the identification of a fuzzy model is complex task with many local minima. Cartesian genetic programming provides a way to solve such complex optimization problem. In this paper, fuzzy model is in form of network. Cartesian genetic programming is used to optimize the antecedent part and recursive least square is used to optimized the consequent part. The initialization of membership function parameters are doing with fuzzy clustering. Benefit of the methodology is illustrated by simulation results.	cartesian closed category;cluster analysis;fuzzy clustering;genetic programming;mathematical optimization;maxima and minima;optimization problem;pattern recognition;recursion;recursive least squares filter;simulation	Samaneh Yazdani;Mahdi Aliyari Shoorehdeli;Mohammad Teshnehlab	2008	2008 International Conference on Computational Intelligence and Security	10.1109/CIS.2008.143	mathematical optimization;discrete mathematics;membership function;defuzzification;fuzzy transportation;fuzzy classification;computer science;artificial intelligence;fuzzy number;neuro-fuzzy;machine learning;mathematics;fuzzy set;fuzzy set operations;fuzzy control system	Robotics	6.286305809976134	-26.3986611593596	194776
643ce72ba8062ef3329d4b5c4f4e8479eecd635f	a new partitioning method for the ids method	partitioning method modeling technique input domains siso system single input single output system miso target system multi input single output system soft computing ink drop spread method ids method;ink function approximation accuracy genetics computational modeling data models;function approximation;modeling technique ink drop spread ids soft computing;genetic algorithms;modelling function approximation genetic algorithms	The ink drop spread (IDS) method is a modeling technique based on the idea of soft computing. This method divides a multi-input-single-output (MISO) target system into multiple single-input-single-output (SISO) systems, and models each SISO system by plotting the input/output data. The IDS method combines the modeling results of SISO systems to model the target. It is important for the IDS method to decide appropriate partitions of the target system in order to accurately model the target. Existing partitioning methods divide each input domain independently of the other inputs, and thus generate unnecessary SISO systems. In this article, we propose a new partitioning method for the IDS method, which divides the input domains by considering the relationship between inputs. We also show that our method can achieve better performance with less partitions than existing methods.	approximation;cobham's thesis;input/output;merge algorithm;simulation interoperability standards organization;soft computing;soft-in soft-out decoder;system analysis	Yoshito Ozaki;Akira Utsumi	2013	2013 IEEE International Conference on Systems, Man, and Cybernetics	10.1109/SMC.2013.670	real-time computing;genetic algorithm;function approximation;computer science;machine learning;control theory	Robotics	6.061565013732994	-26.674452321351673	195256
a4cee2ce06ffe7e2384e52bdd445b7f3eeedaf22	analog fault detection using a neuro fuzzy pattern recognition method	modelizacion;logique floue;metodo formal;methode formelle;logica difusa;intelligence artificielle;probabilistic approach;formal method;fuzzy logic;modelisation;detection defaut;enfoque probabilista;approche probabiliste;neuro fuzzy;fault detection;pattern recognition;artificial intelligence;inteligencia artificial;reconnaissance forme;reseau neuronal;reconocimiento patron;probabilistic neural network;modeling;deteccion imperfeccion;red neuronal;fuzzy system;defect detection;neural network	There are different methods for detecting digital faults in electronic and computer systems. But for analog faults, there are some problems. This kind of faults consist of many different and parametric faults, which can not be detected by digital fault detection methods. One of the proposed methods for analog fault detection, is neural networks. Fault detection is actually a pattern recognition task. Faulty and fault free data are different patterns which must be recognized. In this paper we use a probabilistic neural network to recognize different faults(patterns) in analog systems. A fuzzy system is used to improve performance of network. Finally different network results are compared.	fault detection and isolation;pattern recognition	Reza Asgary;Karim Mohammadi	2005		10.1007/11550907_141	fuzzy logic;probabilistic neural network;formal methods;systems modeling;fault coverage;fault indicator;computer science;artificial intelligence;stuck-at fault;neuro-fuzzy;fault management;machine learning;fault model;artificial neural network;fault detection and isolation;algorithm;fuzzy control system	Vision	9.340875328956779	-28.612111576980663	196607
67cd925e6136f839bbec559a7946d373d0cdf8df	universal approximation by hierarchical fuzzy systems	linguistic model;hierarchical system;control theory;fuzzy controller;theorie approximation;systeme hierarchise;curse of dimensionality;theorie commande;satisfiability;approximation theory;sistema jerarquizado;modele linguistique;modelo linguistico;sistema difuso;systeme flou;error bound;fuzzy system;linguistic modelling	"""A serious problem limiting the applicability of standard fuzzy controllers is the rule-explosion problem; that is, the number of rules increases exponentially with the number of input variables to the fuzzy controller. A way to deal with this """"curse of dimensionality"""" is to use the hierarchical fuzzy systems. A hierarchical fuzzy system consists of a number of hierarchically connected low-dimensional fuzzy systems. It can be shown that the number of rules in the hierarchical fuzzy system increases linearly with the number of input variables. In this paper, we prove that the hierarchical fuzzy systems are universal approximators; that is, they can approximate any nonlinear function on a compact set to arbitrary accuracy. Our proof is constructive, that is, we first construct a hierarchical fuzzy system in a step-by-step manner, then prove that the constructed fuzzy system satisfies an error bound, and finally show that the error bound can be made arbitrarily small. (~) 1998 Elsevier Science B.V."""	approximation algorithm;curse of dimensionality;fuzzy concept;fuzzy control system;fuzzy logic;nonlinear system;universal approximation theorem	Li-Xin Wang	1998	Fuzzy Sets and Systems	10.1016/S0165-0114(96)00197-2	fuzzy logic;discrete mathematics;curse of dimensionality;membership function;defuzzification;adaptive neuro fuzzy inference system;fuzzy transportation;type-2 fuzzy sets and systems;fuzzy mathematics;fuzzy classification;computer science;artificial intelligence;fuzzy subalgebra;fuzzy number;neuro-fuzzy;machine learning;fuzzy measure theory;mathematics;fuzzy set;hierarchical control system;fuzzy associative matrix;fuzzy set operations;algorithm;fuzzy control system;satisfiability;approximation theory	AI	5.343923051808893	-27.478932496328966	196782
a155ac3ac3fdc3d3e4e0b3556a6ee8aea84d27d2	granular computing classification algorithms based on distance measures between granules from the view of set	期刊论文;predictive value of tests;artificial intelligence;algorithms;pattern recognition automated;humans;computer simulation;set psychology	Granular computing classification algorithms are proposed based on distance measures between two granules from the view of set. Firstly, granules are represented as the forms of hyperdiamond, hypersphere, hypercube, and hyperbox. Secondly, the distance measure between two granules is defined from the view of set, and the union operator between two granules is formed to obtain the granule set including the granules with different granularity. Thirdly the threshold of granularity determines the union between two granules and is used to form the granular computing classification algorithms based on distance measures (DGrC). The benchmark datasets in UCI Machine Learning Repository are used to verify the performance of DGrC, and experimental results show that DGrC improved the testing accuracies.	algorithm;benchmark (computing);computation (action);granular computing;granule (oracle dbms);granules dose form;machine learning	Hongbing Liu;Chunhua Liu;Chang-an Wu	2014		10.1155/2014/656790	computer simulation;computer science;artificial intelligence;theoretical computer science;machine learning;predictive value of tests;data mining;mathematics;algorithm	ML	3.03703219782531	-29.983392315987196	198021
8683a17c6d2fd34b3746b6e954dba72aa8c20f6d	improved algorithm of bp neural network and its application to prediction of k/s value in dyeing with reactive dyes	prediction model;backpropagation;neural nets;neural network;predictive model	Traditional algorithm of BP neural network has been mended and an improved predictive model using L-M method has been carried out to calculate the K/S values in dyeing with reactive dyes in this article. The results showed L-M method is superior in the prediction by comparing traditional and improved algorithm. Shorter predictive time and higher predictive veracity were obtained in the later.	algorithm;artificial neural network;veracity	HuiYu Jiang;Min Dong;Xiangpeng Li;Feng Yang	2007	2007 IEEE International Conference on Granular Computing (GRC 2007)	10.1109/GrC.2007.25	natural language processing;sargable;query optimization;sql;query expansion;web query classification;boolean conjunctive query;natural language user interface;computer science;query by example;rdf query language;natural language;programming language;query language;object query language	Robotics	7.728374251317976	-25.85699021015982	198371
e54a27977381c53b5981a1a8ae6a27120ddb35c8	fuzzy logic control based on weighted rules using neural network	neural networks;fuzzy control;niobium;simulation;neurocontrollers fuzzy control;fuzzy sets;fuzzy logic;fuzzy logic neural networks simulation fuzzy sets niobium fuzzy control inference algorithms;inference algorithms;computer simulations fuzzy logic control weighted rules neural network if then rules weight updating algorithm real application problems	In this paper a method of fuzzy logic control based on possibly inconsistent if-then rules representing uncertain knowledge or imprecise data is studied. When it is hard to obtain consistent rule bases, we propose the fuzzy logic control based on weighted rules depending on output performances using the neural network and we derive the weight updating algorithm. With the final weight change informations, we can make better decisions by taking into consideration conflicting rules. Computer simulations show the proposed method has good performance to deal with the inconsistent rule base in the fuzzy logic control. And real application problems are also discussed.	algorithm;artificial neural network;computer simulation;fuzzy logic;logic control;performance;rule-based system	Jae-Soo Cho;Dong-Jo Park	1998	9th European Signal Processing Conference (EUSIPCO 1998)		fuzzy logic;combs method;fuzzy electronics;membership function;defuzzification;adaptive neuro fuzzy inference system;fuzzy transportation;type-2 fuzzy sets and systems;fuzzy mathematics;fuzzy classification;artificial intelligence;fuzzy number;neuro-fuzzy;machine learning;data mining;mathematics;fuzzy set;fuzzy associative matrix;fuzzy set operations;fuzzy control system;intelligent control	ML	5.181632616303071	-27.07144837348886	199337
097694eb726504713f6fba95bdbd96f93a59d745	an empirical methodology for developing stockmarket trading systems using artificial neural networks	stockmarket trading;neural networks;stockmarket trading systems;bepress selected works;soft computing;trading system;articial neural networks;neural networks articial neural networks stockmarket trading systems;artificial neural network;neural network	A great deal of work has been published over the past decade on the application of neural networks to stockmarket trading. Individual researchers have developed their own techniques for designing and testing these neural networks, and this presents a difficulty when trying to learn lessons and compare results. This paper aims to present a methodology for designing robust mechanical trading systems using soft computing technologies, such as artificial neural networks. This methodology describes the key steps involved in creating a neural network for use in stockmarket trading, and places particular emphasis on designing these steps to suit the real-world constraints the neural network will eventually operate in. Such a common methodology brings with it a transparency and clarity that should ensure that previously published results are both reliable and reusable.	algorithmic trading;artificial neural network;soft computing	Bruce J. Vanstone;Gavin R. Finnie	2009	Expert Syst. Appl.	10.1016/j.eswa.2008.08.019	computer science;artificial intelligence;machine learning;data mining;artificial neural network	ML	6.626404277290132	-23.971951225116644	199513
702dcc8413955d7a91d3c892804faefea42a329a	reduction of fuzzy systems through open product analysis of genetic algorithm-generated fuzzy rule sets	system component extraction fuzzy system reduction open product analysis genetic algorithm fuzzy rule set generation fuzzy classifier reduction fuzzy classifier space design binary classification tracked vehicles wheeled vehicles acoustic data;fuzzy rules;fuzzy systems algorithm design and analysis fuzzy sets humans space exploration robustness vehicles genetic algorithms design methodology evolutionary computation;design space;vehicles fuzzy systems fuzzy set theory genetic algorithms pattern classification;fuzzy set theory;pattern classification;genetic algorithm;genetic algorithms;binary classification;vehicles;fuzzy systems;fuzzy system;fuzzy classifier	We explore the reduction of a fuzzy classifier designed to perform a binary classification of tracked or wheeled vehicles based on acoustic data. A genetic algorithm is used to explore the design space of the classifier, with variations performed on the number of antecedents included in the final fuzzy system. Besides the original individual set generated by the GA, we define a subset of it with a small number of antecedents as a filtered set. A novel method of extracting important system components, known as open product analysis, is applied to these two sets, yielding systems that perform well with a small number of antecedents. The fuzzy classifier we reduced performs well using only 20 to 30% of the antecedents that were originally used for classification.	acoustic cryptanalysis;binary classification;fuzzy control system;fuzzy rule;genetic algorithm;software release life cycle	Taehoon Shin;Diana Jue;Dharshan Chandramohan;David Choi;C. Seng;James Yang;A. Bae;A. Lee;Jason R. J. Lee;P. Lim;Sanza Kazadi;J. Mendel	2004	2004 IEEE International Conference on Fuzzy Systems (IEEE Cat. No.04CH37542)	10.1109/FUZZY.2004.1375553	genetic algorithm;defuzzification;adaptive neuro fuzzy inference system;fuzzy classification;computer science;artificial intelligence;fuzzy number;neuro-fuzzy;machine learning;pattern recognition;data mining;mathematics;fuzzy associative matrix;fuzzy set operations;fuzzy control system	Robotics	4.546451751775384	-29.88709487897743	199617
12e4b8957fcab4e0b514206203f71d317e29cba6	on non-markovian topographic organization of receptive fields in recursive self-organizing map	tratamiento datos;dimensionalidad;model design;proceso concepcion;design process;principio modelo interno;carte topographique;proceso markov;dimensionality;data processing;adaptive dynamics;traitement donnee;modele statique;topographic map;preparacion serie fabricacion;dimensionnalite;processus markov;modelo estatico;estructura datos;markov process;principe modele interne;autoorganizacion;static model;self organization;internal model principle;self organized map;structure donnee;receptive field;process planning;preparation gamme fabrication;data structure;autoorganisation;plano topografico;processus conception	Recently, there has been an outburst of interest in extending topographic maps of vectorial data to more general data structures, such as sequences or trees. The representational capabilities and internal representations of the models are not well understood. We concentrate on a generalization of the Self-Organizing Map (SOM) for processing sequential data – the Recursive SOM (RecSOM [1]). We argue that contractive fixed-input dynamics of RecSOM is likely to lead to Markovian organizations of receptive fields on the map. We show that Markovian topographic maps of sequential data can be produced using a simple fixed (non-adaptable) dynamic module externally feeding a standard topographic model designed to process static vectorial data of fixed dimensionality (e.g. SOM). We elaborate upon the importance of non-Markovian organizations in topographic maps of sequential data.	data structure;organizing (structure);recursion (computer science);self-organizing map;topography	Peter Tiño;Igor Farkas	2005		10.1007/11539117_96	topographic map;self-organization;curse of dimensionality;design process;data structure;data processing;computer science;artificial intelligence;markov process;programming language;receptive field;algorithm;statistics	ML	9.704742257683359	-29.966791125916373	199697
0ebd348a3fa5ce9ee3b5f28a987e7da2811ab774	learning monotonic‐concave interval concepts using the back‐propagation neural networks	modelizacion;concavity;neural networks;simulation;apprentissage conceptuel;simulacion;prise decision;raisonnement;back propagation neural network;monotonie;modelisation;aprendizaje conceptual;machine learning;monotonicity;cognition;razonamiento;concept learning;cognicion;monotonia;reasoning;reseau neuronal;toma decision;modeling;red neuronal;neural network	Monotonicity and concavity play important roles in human cognition, reasoning, and decision making. This paper shows that neural networks can learn monotonic-concave interval concepts based on real-world data, Traditionally, the training of neural networks has been based only on raw data. In cases where the training samples carry statistical fluctuations, the products of the training have often suffered. This paper suggests that global knowledge about monotonicity and concavity of a problem domain can be incorporated in neural network training. This paper proposes a learning scheme for the back-propagation layered neural networks in learning monotonic-concave interval concepts and provides an example to show its application.		Shouhong Wang	1996	Computational Intelligence	10.1111/j.1467-8640.1996.tb00262.x	systems modeling;cognition;types of artificial neural networks;monotonic function;computer science;artificial intelligence;machine learning;reason;artificial neural network;algorithm	AI	8.44986136135531	-30.128822610436302	199865
