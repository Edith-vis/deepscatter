id	title	keywords	abstract	entities	authors	year	journal	doi	fos	area	x	y	ix
46042c30024dbbccc8c70de38f2f958f2ae9f9bd	self-collision detection for rigid non-convex multi-link model	temporal culling;non convex multi link model;conservative advancement;surface convex decomposition;self collision detection	This paper presents an efficient algorithm to perform continuous self-collision detection for rigid non-convex multi-link model. Our algorithm precomputes the oriented bounding box (OBB) and the bounding volume hierarchy (BVH) of convex hulls for each link based on the surface convex decomposition and constructs the dynamic bounding volume hierarchies with axis-aligned bounding boxes (AABBs). Given two discrete configurations of the links, we use motion interpolation between two successive time steps and check the resulting trajectory for collisions. We employ the conservative advancement and temporal culling to calculate the potentially colliding links, and adopt spatial culling to reduce the conservative advancement iterations. If collision occurs, the algorithm reports the first time of contact as well as colliding features (vertex/ face or edge/edge contacts). We implement the algorithm on the avatar model consisting of many links and tens of thousands, the results demonstrate the algorithm is efficient to perform continuous self-collision detection between the rigid non-convex multi-link model.	collision detection		2008		10.1007/978-3-540-88518-4_11	mathematical optimization;bounding interval hierarchy;simulation;mathematics;geometry;bounding volume hierarchy;collision detection	Vision	61.27611359493435	-43.10963463455552	191392
8a8f683f1e4edd5ead1af6242c954dc8c9854e53	functionality in blend design	equation derivee partielle;concepcion asistida;partial differential equation;computer aided design;ecuacion derivada parcial;parametrization;parametrizacion;conception assistee;superficie;surface;parametrisation	The major difficulty in the analysis inherent in the design of such a surface is being able to represent it by a method which involves few design parameters and which allows easy manipulation in a predictable wayL This problem was addressed by B&zier who reformulated Ferguson patches so that the parameters had a physical meaning (the vertices of the so-called 'characteristic polyhedron') 2. The drawback with this method is that any given surface may need to be broken into a number of such patches for it to be represented and that each patch has many design variables (i.e. control points) which would render any optimization procedure very expensive computationally. This work uses the method of surface generation proposed by Bloor and Wilson 3 and demonstrates its applicability to the problem of surface design. This method was originally developed in the field of blend generation and was later extended to free-form surface design 4. The introduction of physical and engineering constraints into the design process is thus a natural progression from the previous work. The method views the surface as the solution to a partial differential equation (PDE) and, by imposing suitable boundary	color gradient;control point (mathematics);mathematical optimization;polyhedron	T. W. Lowe;Malcolm I. G. Bloor;Michael J. Wilson	1990	Computer-Aided Design	10.1016/0010-4485(90)90012-2	parametrization;mathematical optimization;computer aided design;calculus;mathematics;geometry	EDA	67.60106336998014	-41.04500549071212	191743
5f48928530b443560fb1b125aaf72fd944cd1bf0	complex-valued contour meshing	computational geometry;mesh generation;computer graphics	Complex-Valued Contour Meshing Chris Weigle and David C. Banks An isovalue contour of a function of two complex variables defines a surface in four-space. We present a robust technique for creating polygonal contours of complex-valued functions. The technique, Contour Meshing, generalizes well to larger dimensions. CR Descriptors: G. 1.5 [Numerical Analysis] Roots of Nonlinear Equations; G. 1.6 [Numerical Analysis] Optimization; G.2.1 [Discrete Mathematics] Combinatorics; 1.3.5 [Computer Graphics] Computational Geometry and Object Modeling; 1.3.6 [Computer Graphics]: Methodology and Techniques; J.2 [Physical Sciences and Engineering] Mathematics and Statistics.	computational geometry;computer graphics;contour line;data descriptor;david c. evans;discrete mathematics;nonlinear programming;numerical analysis;roots	Chris Weigle;David C. Banks	1996			mesh generation;computer vision;computational geometry;computer science;image-based meshing;computer graphics;computer graphics (images)	Graphics	65.89836033483982	-42.95835982374177	192813
3a5229612bbd557fc310d1ee1378dedb5503e049	symmetry of shape charts	concepcion asistida;subdivision surfaces;computer aided design;subdivision surface;courbure;conception assistee;curvatura;curvature;subdivision;shape charts	For subdivision surfaces, the so-called shape chart can be used to characterize the curvature behavior at an extraordinary point a priori from the initial control net. Of late, it has been used in different approaches to tune subdivision algorithms to handle the so-called hybrid shapes. For this the shape charts are computed numerically. In this paper, symmetries of shape charts are analyzed that can be used to simplify the computations and to reduce the computation costs significantly. Â© 2007 Published by Elsevier B.V.	algorithm;chart;computation;numerical analysis;shape context;subdivision surface	Ingo Ginkel;Georg Umlauf	2008	Computer Aided Geometric Design	10.1016/j.cagd.2007.09.001	topology;computer aided design;mathematics;geometry;subdivision surface	Graphics	68.18587017381982	-40.55103295456748	193687
bd619f685bc296d46925f669410f65db73cf19bd	geometric constraint solving via c-tree decomposition	rigid body;stewart platform;geometric constraint solving;generalized stewart platform;parametric cad;decomposition tree;assembly;tree decomposition;geometric constraints;analytic solution;general construction sequence	This paper has two parts. First, we propose a method which can be used to decompose a geometric constraint graph into a c-tree. With this decomposition, solving for a well-constrained problem is reduced to the solving for smaller rigid bodies if possible. Second, we give the analytical solutions to one of the basic merge patterns used to solve a c-tree: the 3A3D general Stewart platform, which is to determine the position of a rigid body relative to another rigid body when we know three angular and three distance constraints between the two rigid bodies.	angularjs;constraint graph;constraint satisfaction problem;tree decomposition;c-treeace	Xiao-Shan Gao;Gui-Fang Zhang	2003		10.1145/781606.781617	closed-form expression;mathematical optimization;rigid body;combinatorics;mathematics;assembly;geometry;stewart platform;tree decomposition	AI	64.0776555364441	-39.35855292963558	193748
db7a6d2c126890011878803033bf6ce842885ec9	computer graphics and geometric modelling - implementation and algorithms	computer graphic;geometric modelling		algorithm;computer graphics;computer-aided design;geometric modeling	Max K. Agoston	2005				Graphics	65.91996692474618	-43.225939507515044	194193
5f6f73cd31b07990cf26160250789b596ba6d3da	3d computational morphology	computational geometry;shape analysis;computational morphology;computer aided geometric design	Computational Morphology is the analysis of form by computational means. This discipline typically uses techniques from Computational Geometry and Computer Aided Geometric Design. The present paper is more specifically about the construction and manipulation of closed object boundaries through a set of scattered points in 3D. Original results are developed in three stages of computational morphology: 1. impose a geometrical structure on the set o f points; 2, construct a polyhedral boundary surface from this geometrical structure; 3. build a hierarchy of polyhedral approximations together with localization information; The economic advantage of this approach is that there is no dependency on any specific data source. It can be used for various types of data sources or when the source is unknown.	approximation;computation;computational geometry;computer-aided design;geometric design;mathematical morphology;polyhedron	Remco C. Veltkamp	1993	Comput. Graph. Forum	10.1111/1467-8659.1230115	computer vision;combinatorics;computational topology;computational geometry;computer science;theoretical computer science;shape analysis;geometry;computational model	Robotics	64.24043284371395	-41.937964811640796	194434
feb5904ca3b9e1e93eebc2d3ef0b95db2b768f56	solving global geometric constraints on free-form curves	centroidal voronoi tessellation;shape approximation;inequality constraint;global constraint;satisfiability;standard model;general methods;mesh clustering;constraint solving;geometric model;geometric constraints	Constraint-based geometric modeling is the standard modeling paradigm in current modern CAD systems. Generally, the user defines constraints on the geometric objects and a solver is applied to find a configuration of the geometry, which satisfies these constraints. Proper application of these constraints allows rapid modification of the geometry without loss of design intent.  However, in current CAD systems, constraint solving for free-form geometric objects is generally limited. In particular, constraining global features such as limits on a curve's curvature values, are not supported.  In this paper we present a general method, within the constraint-based framework, to construct global constraints on free-form curves. The method starts by defining sufficient conditions on the curves in terms of an inequality expression, unlike local constraints the global constraint expression will be defined for all the domain of the curves. We then transform the expression into a symbolic polynomial, whose coefficients are symbolic expressions of the original curves. In the final step, a set of inequality constraints is applied in terms of the symbolic coefficients. These inequality constraints enforce the positivity of the symbolic polynomial.  The final inequality constraints are fed into the solver along with any other local constraints, which the user has provided on the curves. Therefore, the solution returned by the solver satisfies both the global constraints and any other local constraints the user supplies.  We have implemented a prototype of our method using existing commercial constraint solvers. We present results on several problems, which are handled as global geometric constraints using our method.	coefficient;computer-aided design;constraint satisfaction problem;geometric modeling;global optimization;polynomial;programming paradigm;prototype;s-expression;social inequality;solver	Iddo Hanniel;Kirk Haller	2009		10.1145/1629255.1629295	standard model;constrained clustering;mathematical optimization;constraint programming;discrete mathematics;centroidal voronoi tessellation;geometric modeling;mathematics;geometry;constraint;statistics;satisfiability	Graphics	64.13077693416184	-39.6882862406097	195822
f6f88a8ce002e1bc944575b794ba9a55c6648a5d	mÃ©thodes d'approximation et de gÃ©omÃ©trie algorithmique pour la reconstruction de courbes et surfaces. (approximation and computational geometry methods for curves and surfaces reconstruction)			approximation;computational geometry;linear algebra	Jean-Christophe Roux	1994				Theory	66.11525637223532	-41.07015584287119	195844
f8b20aa06883731ace33f690ef9209d9ac3c2eb1	octree encoding of b-rep based objects	terminologie;vertical science platform;solid;octree;boundary representation;solide;terminologia;algorithm performance;octarbol;solido;geometrie algorithmique;efficient algorithm;path planning;computational geometry;octarbre;interseccion;classification;sintesis imagen;image synthesis;mechanical engineering;research paper;finite element mesh;resultado algoritmo;patents;estructura datos;performance algorithme;research platform;synthese image;terminology;geometria computacional;structure donnee;journals;intersection;data structure;researchers network;clasificacion;solid modelling	An octree representation of a solid is useful in applications such as finite element mesh generation, robot path planning and NC path generation. It consists of approximating the solid by variably sized cubes (octants). Since most solid modellers store the boundary representation (B-Rep) of objects, an algorithm for converting the B-Rep of the object to its octree representation will be useful in applications involving octree representation. This paper describes an algorithm for computing octree approximation of an object given its facetted B-Rep. An earlier effort classifies the octant with respect to the object to obtain the octree approximation. The algorithm proposed in this paper classifies the object entities with respect to the octant (cube). The simple structure of cubes can therefore be exploited to either totally avoid or reduce considerably, expensive operations to realize an efficient algorithm.	octree	R. Krishnan;Anupam A K Das;B. Gurumoorthy	1996	Computers & Graphics	10.1016/0097-8493(95)00069-0	barnesâhut simulation;data structure;biological classification;computational geometry;computer science;artificial intelligence;theoretical computer science;intersection;geometry;motion planning;sparse voxel octree;solid;programming language;terminology;boundary representation;algorithm;octree;computer graphics (images)	Robotics	65.898853262472	-39.83356413390765	196444
7c67d8d27232cd02572d9faacde0ef8c37cddd72	efficient and accurate interference detection for polynomial deformation	second order;interference detection;spline;loop intersection tests;convex hulls;physics based modeling;performance evaluation;solid models;animation interference detection polynomial deformation dynamic simulation variational models deformable models soft object animation geometric models polygonal meshes parametric surfaces bezier patches b splines solid models axis aligned bounding boxes convex hulls subdivision linear programming surface intersection tests loop intersection tests frame to frame coherence;parametric surfaces;computational geometry;polynomials deformable models solid modeling testing object detection interference constraints animation spline linear programming performance evaluation;testing;deformable models;polynomials;splines mathematics;axis aligned bounding boxes;frame to frame coherence;bezier patches;polygonal meshes;solid modeling;animation;linear programming;linear program;b splines;dynamic simulation;geometric models;subdivision;surface intersection tests;computer animation;variational models;convex hull;interference constraints;linear programming computational geometry solid modelling computer animation splines mathematics;deformable model;object detection;solid modelling;soft object animation;polynomial deformation	We present efficient and accurate algorithms for interference detection among objects undergoing polynomial deformation. The scope of our algorithms include physically-based models undergoing dynamic simulation subject to non-penetration constraints, variational models, deformable models used in soft object animation, geometric models including polygonal meshes, parametric surfaces such as BÃ©zier patches and B-splines, and solid models defined by such surfaces. Our algorithms use axisaligned bounding boxes and convex hulls of the objects to identify the object pairs in close vicinity. They use subdivision, convex hull properties and linear programming to perform surface intersection tests and loop intersection tests. Frame-to-frame coherence is utilized to achieve incremental computations. The resulting algorithms have been implemented and work well in practice. In particular, we are able to compute all contacts accurately and at interactive speeds for flexible bodies undergoing second-order polynomial deformations.	algorithm;b-spline;composite bÃ©zier curve;computation;convex hull;interference (communication);linear programming;polygon mesh;polynomial;simulation;statistical interference;subdivision surface;variational principle	Merlin Hughes;Christopher DiMattia;Ming C. Lin;Dinesh Manocha	1996		10.1109/CA.1996.540498	mathematical optimization;combinatorics;mathematics;geometry	Graphics	61.262294434233176	-43.251360705668496	196632
3555168ff00405147b3f960cd77f5a0803eb51d4	qualitative comparison of contraction-based curve skeletonization methods		In recent years, many new methods have been proposed for extracting curve skeletons of 3D shapes, using a mesh-contraction principle. However, it is still unclear how these methods perform with respect to each other, and with respect to earlier voxel-based skeletonization methods, from the viewpoint of certain quality criteria known from the literature. In this study, we compare six recent contraction-based curveskeletonization methods that use a mesh representation against six accepted quality criteria, on a set of complex 3D shapes. Our results reveal previously unknown limitations of the compared methods, and link these limitations to algorithmic aspects of the studied methods.	algorithm;computation;computational resource;foremost;sampling (signal processing);topological skeleton;voxel	AndrÃ© Sobiecki;Haluk C. Yasan;Andrei Jalba;Alexandru Telea	2013		10.1007/978-3-642-38294-9_36	computer vision;algorithm	Comp.	63.71136634113018	-44.23449014967759	197237
ace07e9b40651243af4a400c58716718d2e98dd9	optimal pitch map generation for scanning pitch design in selective sampling	operations strategy;free form;selective sampling;three dimensional;scanner uncertainty;physical model;sampling strategy;reverse engineering	The reverse engineering process represents one of the best known methodologies for creating threedimensional (3D) virtual models starting from physical ones. Even if in the last few years its usage has significantly increased, the remarkable involvement of the operator has until now represented a significant constraint for its growth. Having regard to the fact that this process, and in particular its first step (that is the acquisition phase), strongly depends on the operatorâs ability and expertise, this paper aims at proposing a strategy for automatically supporting an ââoptimalââ acquisition phase. Moreover, the acquisition phase represents the onlymoment inwhich there is a direct contact between the virtualmodel and the physical model. For this reason, designing an ââoptimalââ acquisition phase will provide as output an efficient set of morphological data, whichwill turn out to be extremely useful for the following reverse engineering passages (pre-processing, segmentation, fitting, . . . ). This scenario drives the researcher to use a selective sampling plan, whose grid dimensions are correlated with the complexity of the local surface region analyzed, instead of a constant one. As a consequence, this work proposes a complete operative strategy which, starting from a first raw preliminary acquisition, will provide a new selective sampling plan during the acquisition phase, in order to allow a deeper and more efficient new scansion. The proposed solution does not require the creation of any intermediate model and relies exclusively on the analysis of the metrological performances of the 3D scanner device and of the morphological behaviour of the surface acquired. Â© 2009 Elsevier B.V. All rights reserved.	3d scanner;image scanner;performance;preprocessor;reverse engineering;sampling (signal processing)	Enrico Vezzetti	2009	Robotics and Autonomous Systems	10.1016/j.robot.2009.02.003	three-dimensional space;simulation;physical model;artificial intelligence;reverse engineering	AI	66.23233079905128	-38.28033143853898	197797
8d367b7383dfad3227e05b55cc9c727faf7d5336	a new surface interpolation method for irregular curve models	interpolation method	The shapes of many engineering objects contain free-form surfaces for functional or aesthetic reasons. Hence the representation of free-form surfaces is very important. Many solutions have been proposed; Coonâs patch,â Bezier patch2 and Bspline patch3 have all been used in practical enpeering fields. However, even today, it is not easy to represent complicated free-form surfaces of practical objects.	b-spline;interpolation	Hiroaki Chiyokura;Fumihiko Kimura	1984	Comput. Graph. Forum	10.1111/j.1467-8659.1984.tb00070.x	spline interpolation;interpolation;bilinear interpolation;monotone cubic interpolation;interpolation;computer science;stairstep interpolation;inverse quadratic interpolation;tricubic interpolation;bicubic interpolation;linear interpolation;nearest-neighbor interpolation;multivariate interpolation;trilinear interpolation	Graphics	66.40993257027577	-43.658020713142484	197961
63bdac0360b15940e21ea79996a0b62f9d467d57	an algebraic algorithm to compute the exact general sweep boundary of a 2d curved object	concepcion asistida;computer aided design;geometrie algorithmique;computer graphics;computational geometry;courbe algebrique;curve tracing;conception assistee;geometria computacional;grafico computadora;tracage courbe;infographie;parametric curve;courbe parametrique;algebraic curve	Abstract We present an algebraic algorithm to generate the exact general sweep boundary of a 2D curved object which changes its shape dynamically while moving along a parametric curve trajectory.	algorithm;linear algebra	Myung-Soo Kim;Jae-Woo Ahn	1993	Inf. Process. Lett.	10.1016/0020-0190(93)90131-R	combinatorics;parametric equation;computational geometry;mathematics;geometry;algebraic curve;computer graphics	Robotics	67.79607643745489	-40.19283697839414	198181
2d981004b787db836f0ddc9299c27c2b3aa5b7f0	delaunay-based polygon morphing across a change in topology	topology;triangulacion delaunay;interfase usuario;delaunay triangulation;user interface;triangulation delaunay;topologie;polygone;topologia;polygon;object oriented;poligono;oriente objet;interface utilisateur;information system;user interaction;orientado objeto;systeme information;sistema informacion	We present a new object-based algorithm for morphing between two shapes with an arbitrary number of polygons and arbitrarily different topology. Many solutions have been proposed for morphing between two polygons. However, there has been little attention to morphing between different numbers of polygons, across a change in topology. A modified conforming Delaunay triangulation is used to build the vertex correspondence. Polygon evolution is used to smooth the morph. The morph requires no user interaction, avoids self-intersection, uses dynamic vertex correspondence, and follows nonlinear vertex paths.	delaunay triangulation;morphing	Xiaqing Wu;John K. Johnstone	2006		10.1007/11751540_53	smoothing group;point in polygon;topology;computer science;polygon;polygon;mathematics;geometry	HCI	67.24023230776001	-40.7040353551367	199175
f70b0542895e293047d8c6dfddf3c84d0e9a1a71	generic recognition through qualitative reasoning about 3-d shape and object function	object recognition;structural model;generic object category;3 d shape;computerised picture processing artificial intelligence computerised pattern recognition;geometry;model based approach;computerised pattern recognition;computer vision;objective function;shape;structural model generic recognition geometric model qualitative reasoning 3 d shape object function generic object category;solid modeling;object function;computerised picture processing;artificial intelligence;geometric model;generic recognition;computer science;qualitative reasoning;functional requirement;shape solid modeling object recognition geometry computer science knowledge engineering computer vision;knowledge engineering	The work which demonstrates the feasibility of a different approach to 3-D object recognition is described. The authors construct a definition of a generic object category, such as a chair, in terms of the function required of the object. This definition is based on qualitative reasoning about 3-D shape, and does not imply any particular geometric or structural model for an object. Thus, this approach has the potential to lead to recognition systems of much greater generality than current CAD-based or model-based approaches. >		Louise Stark;Kevin W. Bowyer	1991		10.1109/CVPR.1991.139697	computer vision;method;object model;qualitative reasoning;shape;computer science;artificial intelligence;geometric modeling;cognitive neuroscience of visual object recognition;machine learning;knowledge engineering;3d single-object recognition;solid modeling;functional requirement	Vision	63.83588651964351	-40.94611739575278	199349
