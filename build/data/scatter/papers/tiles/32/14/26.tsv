id	title	keywords	abstract	entities	authors	year	journal	doi	fos	area	x	y	ix
99851190165f301167fcbfdf9d798586ef2db87c	dataplane specialization for high-performance openflow software switching	packet classification;openflow software switching;template based code generation	OpenFlow is an amazingly expressive dataplane programming language, but this expressiveness comes at a severe performance price as switches must do excessive packet classification in the fast path. The prevalent OpenFlow software switch architecture is therefore built on flow caching, but this imposes intricate limitations on the workloads that can be supported efficiently and may even open the door to malicious cache overflow attacks. In this paper we argue that instead of enforcing the same universal flow cache semantics to all OpenFlow applications and optimize for the common case, a switch should rather automatically specialize its dataplane piecemeal with respect to the configured workload. We introduce ESwitch, a novel switch architecture that uses on-the-fly template-based code generation to compile any OpenFlow pipeline into efficient machine code, which can then be readily used as fast path. We present a proof-of-concept prototype and we demonstrate on illustrative use cases that ESwitch yields a simpler architecture, superior packet processing speed, improved latency and CPU scalability, and predictable performance. Our prototype can easily scale beyond 100 Gbps on a single Intel blade even with complex OpenFlow pipelines.	central processing unit;code generation (compiler);compiler;data rate units;fast path;machine code;malware;network packet;network switch;openflow;partial template specialization;pipeline (computing);programming language;prototype;scalability	László Molnár;Gergely Pongrácz;Gábor Enyedi;Zoltán Lajos Kis;Levente Csikor;Ferenc Juhász;Attila Korösi;Gábor Rétvári	2016		10.1145/2934872.2934887	parallel computing;real-time computing;computer science;operating system;distributed computing;computer security;computer network	Networks	-14.993510920517249	81.3889475806081	191842
295a61ea24a88c95b0ce84d85b16beb89cdec93d	flow-level traffic matrix generation for various data center networks	topology;protocols;generators;network topology;servers;shape;generators network topology servers topology ip networks shape protocols;ip networks;flow level traffic traffic generator data center networks	The number of data centers deployed by governments, enterprises, and universities has been increased affected by the development of cloud computing technologies to reduce CAPAX and OPEX. Many architectures or topologies for data center networks have been proposed to address the diverse purposes and requirements. However, the construction of data centers incurs significant costs. Moreover, there are many technologies that can affect the structure of the data center. Before building a data center, it must be confirmed that it possesses the characteristics necessary to satisfy requirements. Efficient ways to find and confirm network characteristics include simulation and tests using a traffic generation method. Our proposed method is designed to generate network traffic that address many characteristics of data center networks explored by several studies. The proposed method generates network traffic utilizing flow-level traffic matrix, not directly generates packets. We used Python programming language to create traffic matrix and iPerf to generate network packets. To evaluate it, we compared the generation results to real network traffic collected from a data center network. The result shows that the generated traffic is similar with the real network traffic.	algorithm;cloud computing;communications protocol;data center;iperf3;network packet;network topology;noise shaping;programming language;python;random number generation;requirement;simulation;time of arrival	Yoonseon Han;Sin-Seok Seo;Chan Kyou Hwang;Jae-Hyoung Yoo;James Won-Ki Hong	2014	2014 IEEE Network Operations and Management Symposium (NOMS)	10.1109/NOMS.2014.6838394	traffic generation model;communications protocol;network traffic control;floating car data;shape;computer science;distributed computing;traffic shaping;computer security;network topology;server;computer network;network traffic simulation	Networks	-12.298117181932536	78.92120478644932	191995
5f52245d31788b2e683c5cca254cc9e347660925	on nat traversal in peer-to-peer applications	punching;transport protocols client server systems ip networks peer to peer computing;client server architecture;routing;network address translation peer to peer computing frame relay java collaborative work multimedia communication punching routing;p2p;client server systems;data mining;network address translation;network address translator;transport protocols;public ip address;peer to peer application;client server;internet;side effect;p2p communication paradigm;nat traversal technique;nat traversal;ip networks;peer to peer computing;relays;peer to peer;p2p communication paradigm peer to peer application public ip address client server architecture nat traversal technique network address translation;framework peer to peer nat traversal;framework	A widely used technique to overcome the shortage of unique public IP addresses is network address translation (NAT), which hides several hosts behind a single public address. This method works smoothly with client-server architectures; however, it causes severe problems with the peer-to-peer (p2p) communication paradigm. Due to the side effects of NAT, the establishing connection is made possible only by using special NAT traversal techniques. This paper presents a lightweight framework for NAT traversal, which smoothly integrates with p2p applications. The framework can be easily used by most p2p applications, is extensible and does not require additional maintenance overhead.	client–server model;nat traversal;overhead (computing);peer-to-peer;programming paradigm;server (computing);smoothing;tree traversal	Konstantin Pussep;M. Weinert;Aleksandra Kovacevic;Ralf Steinmetz	2008	2008 IEEE 17th Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises	10.1109/WETICE.2008.10	computer science;operating system;distributed computing;law;world wide web;client–server model;nat traversal;computer network	Metrics	-12.552484737027177	76.29088444990236	192139
1188cabcb873910161587c0b0592a069c2dd6166	efficient hierarchical traffic measurement in software-defined datacenter networks		Software-defined datacenters combine centralized resource management, software-defined networking, and virtualized infrastructure to meet diverse requirements of cloud computing. To fully realizing their capability in traffic engineering and flow-based bandwidth management, it is critical for the switches to measure network traffic for both individual flows between virtual machines and aggregate flows between clusters of physical or virtual machines. This paper proposes a novel hierarchical traffic measurement scheme for software-defined datacenter networks. It measures both aggregate flows and individual flows that are organized in a hierarchy with an arbitrary number of levels. The measurement is performed based on a new concept of hierarchical virtual counter arrays, which record each packet only once by updating a single counter, yet the sizes of all flows that the packet belongs to will be properly updated. We demonstrate that the new measurement scheme not only supports hierarchical traffic measurement with accuracy, but does so with memory efficiency, using a fewer number of counters than the number of flows.	aggregate data;aggregate function;bandwidth management;centralized computing;cloud computing;dspace;data center;network packet;network switch;network traffic control;overhead (computing);requirement;self-replicating machine;simulation;software-defined networking;virtual machine	Shiping Chen;You Zhou;Shigang Chen	2017	2017 IEEE 10th International Conference on Cloud Computing (CLOUD)	10.1109/CLOUD.2017.29	real-time computing;resource management;quality of service;computer science;traffic generation model;traffic engineering;cloud computing;computer network;distributed computing;virtual machine;network packet;bandwidth management	Networks	-13.302514723447368	81.32795568981375	193312
d7addfd7ac77427a0c6329db1cf5e49568f98b2c	does one size fit all?: the impact of policy on multicast mechanism for future network	policy;state information;pim ssm;multicast routing;multicast	The rapid growth of diverse applications and services over the Internet poses significant challenges to the traditional multicast routing protocols. However, in most of the existing multicast routing protocols such as PIM-SSM, policy and mechanism are strict-coupling. This makes them hard to fit for different kinds of application demands. In this paper, we propose a Policy and Mechanism Isolation(PMI) multicast routing protocol, which aims at decoupling the policy and mechanism. Based on PMI, more provider policies, which further improve the effect and efficiency of the multicast mechanism, can be infused in to it. A parameter gradient-based multicast routing mechanism is presented to testify the flexibility of the proposed protocol. Preliminary results show that our mechanism is more adaptive than SPT, which is used in PIM-SSM.	coupling (computer programming);glossary of computer graphics;gradient;hall-effect thruster;multicast;routing	Hui Wang;Jianbiao Mao;Zhigang Sun;Tao Li;Zhenghu Gong	2011		10.1145/2079327.2079350	policy-based routing;multicast;ip multicast;inter-domain;reliable multicast;zone routing protocol;protocol independent multicast;computer science;pragmatic general multicast;geocast;internet group management protocol;distributed computing;link-state routing protocol;distance vector multicast routing protocol;source-specific multicast;computer security;xcast;computer network;multicast address	Networks	-14.7574874963653	75.51188007850853	193697
5552c34b0b02eff6a3e9790d78c0a150a3b87059	locality-aware peer-to-peer sip	object recognition;locality aware peer to peer sip overlay;performance evaluation;client server architecture;signaling protocol;distributed hash table;routing;client server architecture sip;session initiation protocol;sip;layout;servers;internet;telecommunication network routing;locality aware;performance evaluation locality aware peer to peer sip overlay session initiation protocol signaling protocol multimedia communication distributed hash table client server architecture sip p2psip overlay dht routing hop count;dht routing hop count;multimedia communication;distributed databases;peer to peer computing delay protocols internet costs robustness network servers multimedia communication multimedia systems routing;peer to peer computing;peer to peer;dht;p2psip overlay;telecommunication network routing file organisation multimedia communication peer to peer computing signalling protocols;p2psip;sip dht locality aware p2psip;signalling protocols;file organisation	SIP (Session Initiation Protocol) is a signaling protocol widely used in multimedia communication. Recently, P2PSIP (Peer-to-Peer SIP), which combines DHT (distributed hash table) and SIP, has been proposed to overcome the drawbacks of traditional CS SIP (client/server architecture SIP). However, the introduction of DHT increases the registration overhead and, session setup overhead/latency. These problems become unbearable when P2PSIP overlay grows huge. To address these problems, we propose locality-aware P2PSIP in this paper. In the P2PSIP context, we design a locality-aware approach, which can be applied to most DHTs. This locality-aware approach reduces both DHT routing hop count and latency per DHT hop. Performance evaluation shows that registration overhead and session setup overhead/latency are reduced dramatically in locality-aware P2PSIP.	client–server model;distributed hash table;locality of reference;locality-sensitive hashing;overhead (computing);peer-to-peer sip;performance evaluation;routing;server (computing);signaling protocol	Lichun Li;Yang Ji;Tao Ma;Lanzhi Gu;Chunhong Zhang	2008	2008 14th IEEE International Conference on Parallel and Distributed Systems	10.1109/ICPADS.2008.92	computer science;distributed computing;session initiation protocol;world wide web;distributed database;computer network	HPC	-13.676133606631039	76.02228416097259	193933
f6396af3e632f3aa67401f20bd172c181d27dad4	a novel data reduction technique with fault-tolerance for internet-of-things		Data reduction or data filtering using IoT-gateway is now on the rise in IoT research to facilitate the huge increase of data generated from IoT deployment, and solving problems such as network congestion, limitation of storage and bandwidth. However, existing solutions fall short in two problems, firstly lack of high availability concept to solve single point of failure (SPOF). Secondly, there is not state-of-the-art high availability solution that can be deployed without significant increase of cost and duplication of data. Therefore, this paper will present a concept that utilizing redundant IoT-gateway to improve the availability of data reduction by dividing the task among the IoT-gateways, without generating or sending any duplicated data to the defined end-point (e.g. database in the cloud). The concept is validated with our results that showing in the worst case, we can still achieve 76% accuracy by forwarding only 10% of data.	best, worst and average case;cloud computing;fault tolerance;high availability;network congestion;regular expression;reliability engineering;single point of failure;software deployment	Wong Siaw Ling;Boon Yaik Ooi;Soung-Yue Liew	2017		10.1145/3018896.3018971	real-time computing;redundancy (engineering);single point of failure;software deployment;computer network;high availability;data reduction;computer science;network congestion;fault tolerance;cloud computing	DB	-16.106600936284753	79.97861356600548	193998
54c83add2cf36e1cd9dcb831d498f0f94a604316	large scale characterisation of youtube requests in a cellular network	video cacheability large scale youtube request characterisation cellular network wireless devices mobile devices consumer internet traffic video traffic;traffic cellular radio internet mobile computing social networking online;youtube streaming media mobile handsets mobile communication internet watches data collection	Traffic from wireless and mobile devices is expected to soon exceed traffic from fixed devices. Understanding the behaviour of users on mobile devices is important in order to improve the offered services and the provision of the underlying network. Globally, more than 60% of consumer Internet traffic is estimated to be video traffic, and the most popular video website, YouTube, estimates that mobile access makes up nearly 40% of the global watch time. This paper presents the first work to study the characteristics of YouTube user requests on a nationwide cellular network. This study is based on the analysis of a large dataset generated by 3 million users and collected by a major telecom operator. We show for instance that 20% of the users generate 78% of the requests, and that over 80% of the requests target only 20% of the distinct videos accessed during the data collection period. Our results provide a comprehensive insight into the way people use YouTube on mobile devices, and show a very high potential for video cacheability on the cellular network.	algorithm;cpu cache;internet;mobile device;pareto efficiency;proxy server;server (computing);web cache;web content	Fehmi Ben Abdesslem;Anders Lindgren	2014	Proceeding of IEEE International Symposium on a World of Wireless, Mobile and Multimedia Networks 2014	10.1109/WoWMoM.2014.6918954	mobile search;computer science;multimedia;internet privacy;mobile computing;computer network	Metrics	-18.268735810942704	75.76679528783903	194664
1567ec971a93a8cadc6b5f341396cd4e320a54ec	towards multi-domain monitoring for the european research networks	networks	We propose the creation of a multi-domain measurement framework with dynamic characteristics identical to that of the network as a whole. Our approach recognises and facilitates the ability of independent network entities to set policies and limits on the use of measurement resources locally while encouraging and facilitating the use of such resources by users interested in network paths that traverse remote administrative domains.	authentication;authorization;entity;network performance;next-generation network;scalability;service-oriented architecture;service-oriented device architecture;traverse	Jeff W. Boote;Eric L. Boyd;Jérôme Durand;Andreas Hanemann;Loukik Kudarimoti;Roman Lapacz;Nicolas Simar;Szymon Trocha	2005			real-time computing;simulation;engineering;data mining	OS	-18.436946352615102	81.48284505239744	196398
15ec8ee2df94526cc36c0f9076fa5507a82f75e7	fftree: a flexible architecture for data center networks towards configurability and cost efficiency		In this paper, we propose a novel data center network architecture named FFTree. Compared to widely adopted industrial solutions including fat-tree, this architecture can provide even higher aggregate bandwidth and richer path availability. Most importantly, FFTree provisions unique flexibility so that its topology and performance can be tailored with great freedom before its deployment. The fine granularity and wide dynamic range of its configurations allow FFTree to exactly fit and closely follow the time-variant demands of its applications. Also, this flexibility facilitates the reuse of network devices, so that upgrades could be achieved by rearranging existing switches, avoiding the expenditure on new generations of hardware in each upgrade cycle. Furthermore, this flexibility allows FFTree to be elaborately tuned into cost efficient zones in the sense that it provides higher bandwidth using less network devices, which leads to significant cost reduction. We design the network topologies of FFTree, propose a set of routing algorithms, and demonstrate its aforementioned features. We also analyze the performance and compare it with its predecessors. Technically, this architecture can be seen as a generalization of fat-tree, and is backward-compatible to fat-tree: it consists of commercial off-the-shelf network devices, and the whole system can cooperate with the hosts running Ethernet and IP. We believe FFTree is ready to be deployed in industry, as a perfect replacement of the classic fat-tree.	aggregate data;algorithm;backward compatibility;cost efficiency;data center;distributed computing;dynamic range;fat tree;file allocation table;instruction scheduling;load balancing (computing);network architecture;network switch;network topology;precomputation;protocol stack;routing;software deployment	Jun Duan;Yuanyuan Yang	2017	2017 IEEE/ACM 25th International Symposium on Quality of Service (IWQoS)	10.1109/IWQoS.2017.7969131	computer network;real-time computing;networking hardware;network simulation;computer science;distributed database;architecture;network architecture;network topology;cost efficiency;distributed computing;logical topology	Arch	-14.864972205955794	80.97807729723873	197276
99b5034e585f5c438fac99590e33a0f60da221f1	crrp: cost-based replacement with random placement for en-route caching	cache policy;web caching;en route caching	Caching is considered widely as an efficient way to reduce access latency and network bandwidth consumption. En-route caching, where caches are associated with routing nodes in the network, is proposed in the context of Web cache to exploit fully the potential of caching. To make sensible replacement and placement decision for en-route caching, traditional caching schemes either engage computation-intensive algorithm like dynamic programming or suffer from inferior performance in terms of average access latency. In this article, we propose a new caching scheme with cost-based replacement and random placement, which is named CRRP. The cost-based replacement of CRRP introduces probing request to timely perceive cost change and the random placement is independent of current caching state, of O(1) computational complexity of placement decision. Through extensive simulations, we show that CRRP outperforms a wide range of caching schemes and is very close to the traditional dynamic-programming-based algorithm, in terms of average access delay. key words: Web caching, en-route caching, cache policy	algorithm;cpu cache;cache (computing);computation;computational complexity theory;dynamic programming;randomness;routing;simulation;web cache	Sen Wang;Jun Bi;Jianping Wu	2014	IEICE Transactions	10.1587/transinf.E97.D.1914	real-time computing;false sharing;computer science;inline caching;database;distributed computing;smart cache	Metrics	-14.657249239624235	74.9374444163931	198369
