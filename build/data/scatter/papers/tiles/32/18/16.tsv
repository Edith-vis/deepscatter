id	title	keywords	abstract	entities	authors	year	journal	doi	fos	area	x	y	ix
44249a14323e3eaef773c5d68ab88cc49d280a1a	dynamic configuration of qc allocating problem based on multi-objective genetic algorithm	multi objective genetic algorithm;quay crane scheduling;pareto optimal solution;port facilities	Solving the problem of allocating and scheduling quay cranes (QCs) is very important to ensure favorable port service. This work proposes a bi-criteria mixed integer programming model of the continual and dynamic arrival of several vessels at a port. A multi-objective genetic algorithm is applied to solve the problem in three cases. The results thus obtained confirm the feasibility and effectiveness of the model and GA. Additionally, the multi-objective solution considering both the total duration for which vessels stay in the port and QCs move is the best, as determined by comparing with considering only the total time for which vessels stay in the port or QCs move, as it considers, and it balances these two objectives.	crew scheduling;genetic algorithm;integer programming;linear programming;programming model;scheduling (computing);software release life cycle	Chengji Liang;Miaomiao Li;Bo Lu;Tianyi Gu;Jungbok Jo;Yi Ding	2017	J. Intelligent Manufacturing	10.1007/s10845-015-1035-7	mathematical optimization;simulation;engineering	Robotics	14.186794954425116	4.337949837824106	176567
586abaecd0ff4a50dbb8d15a8da52b45bcd0be8f	robust local search for solving rcpsp/max with durational uncertainty	project manager;artificial intelligent;time lag;scheduling problem;resource constrained project scheduling problem;local search;decision rule	Scheduling problems in manufacturing, logistics and project management have frequently been modeled using the framework of Resource Constrained Project Scheduling Problems with minimum and maximum time lags (RCPSP/max). Due to the importance of these problems, providing scalable solution schedules for RCPSP/max problems is a topic of extensive research. However, all existing methods for solving RCPSP/max assume that durations of activities are known with certainty, an assumption that does not hold in real world scheduling problems where unexpected external events such as manpower availability, weather changes, etc. lead to delays or advances in completion of activities. Thus, in this paper, our focus is on providing a scalable method for solving RCPSP/max problems with durational uncertainty. To that end, we introduce the robust local search method consisting of three key ideas: (a) Introducing and studying the properties of two decision rule approximations used to compute start times of activities with respect to dynamic realizations of the durational uncertainty; (b) Deriving the expression for robust makespan of an execution strategy based on decision rule approximations; and (c) A robust local search mechanism to efficiently compute activity execution strategies that are robust against durational uncertainty. Furthermore, we also provide enhancements to local search that exploit temporal dependencies between activities. Our experimental results illustrate that robust local search is able to provide robust execution strategies efficiently.	approximation;emoticon;local search (optimization);logistics;makespan;scalability;schedule (project management);scheduling (computing)	Na Fu;Hoong Chuin Lau;Pradeep Varakantham;Fei Xiao	2012	J. Artif. Intell. Res.	10.1613/jair.3424	job shop scheduling;mathematical optimization;real-time computing;simulation;computer science;local search;machine learning;decision rule	AI	14.348242966050059	7.363704937486868	177319
df01100435baddb592691478d809c29c68912b5f	capacitated lot sizing problem with inventory bounds	dynamic programming;complexity;lot sizing problem;multi item;single item;inventory bounds	In this paper, we study the single-item and the multi-item capacitated lot sizing problem in presence of inventory bounds (CLSP-IB). That is, in any period, both the quantity produced and the stock on hand are limited. For the single-item CLSP-IB with a stationary production capacity, time-dependent inventory bounds and concave costs, we show that the problem can be solved in time $$O(T^4)$$ O ( T 4 ) by adapting a well-known algorithm in the literature. Restricting to non-speculative costs, we propose an $$O(T^3)$$ O ( T 3 ) time dynamic programming algorithm. For the multi-item CLSP-IB, we consider the lot-sizing problem with item dedicated machines and a common capacitated storage space shared by all the items. We show that this problem is $$\text{ NP }$$ NP -hard in the strong sense even if all the cost parameters and capacities of the instance are stationary and identical for each item. Copyright Springer Science+Business Media New York 2015		Ayse Akbalik;Bernard Penz;Christophe Rapine	2012	Annals OR	10.1007/s10479-015-1816-6	mathematical optimization;complexity;economics;computer science;operations management;dynamic programming;mathematics;mathematical economics	Logic	14.979875657796452	4.302161342168818	178910
e19bf40735a16dd686cfd22fb1ce9a35dc672870	integrated production scheduling and periodic maintenances on a single machine with release dates	schedules job shop scheduling optimal scheduling single machine scheduling maintenance engineering;single machine scheduling;job shop scheduling;maintenance engineering;optimal scheduling;small to medium sized problems production scheduling problem single machine periodic maintenances job release dates polynomial time resumable case nonresumable case np hard problem heuristic erd lpt optimal solutions branch and bound algorithm dominance rules optimal schedules;schedules;tree searching computational complexity maintenance engineering optimisation single machine scheduling	This paper addresses the production scheduling problem on a single machine with periodic maintenances, where the jobs' release dates are considered. For the resumable case, we prove that the problem can be solved in polynomial time. For the non-resumable case, we prove that the problem is strongly NP-Hard and propose an effective heuristic ERD-LPT based on the properties of optimal solutions. Then a branch-and-bound algorithm (B&B) that utilizes several dominance rules is developed to search the optimal schedules for the small-to-medium sized problems. Computational results indicate that the proposed heuristic is highly accurate compared with B&B and the improvement of performance is significant compared with the First-in-First-out (FIFO) rule.	algorithm;branch and bound;computation;entity–relationship model;fifo (computing and electronics);heuristic;job stream;np-hardness;parallel port;scheduling (computing);strong np-completeness;time complexity	Wei-Wei Cui;Zhiqiang Lu	2014	2014 IEEE International Conference on Automation Science and Engineering (CASE)	10.1109/CoASE.2014.6899350	fair-share scheduling;nurse scheduling problem;fixed-priority pre-emptive scheduling;mathematical optimization;real-time computing;earliest deadline first scheduling;flow shop scheduling;dynamic priority scheduling;computer science;rate-monotonic scheduling;operations management;two-level scheduling;scheduling;lottery scheduling;round-robin scheduling;multiprocessor scheduling	Robotics	15.544251177071489	8.721960230824116	178916
07ffa5f25657a180008d7c6de12aba6277258718	single-machine scheduling problems with generalized preemption	preemptive scheduling;single machine scheduling;packing;sequencing;single machine;production scheduling;column generation	We address a class of single-machine, hard scheduling problems with the objective of minimizing the maximum tardiness. The jobs can be preempted, but whenever a job is started or resumed, there is a recovery interval affecting its progress. Such a feature is motivated by certain application environments and generalizes the usual preemption concept. For three different cases of this problem, we propose a heuristic algorithm, based on the partial enumeration of feasible schedules. A packing formulation solved by means of a column generation approach is used to certify the quality of the heuristic solution. An extensive computational experience shows the effectiveness of the approach on different classes of instances and shows that real-size problems can be solved to optimality in an acceptable amount of time.	central processing unit;heuristic;lp-type problem;linear programming relaxation;optimization problem;preemption (computing);scheduling (computing);set packing;single-machine scheduling	Alessandro Agnetis;Arianna Alfieri;Gaia Nicosia	2009	INFORMS Journal on Computing	10.1287/ijoc.1080.0273	column generation;fair-share scheduling;fixed-priority pre-emptive scheduling;mathematical optimization;real-time computing;earliest deadline first scheduling;flow shop scheduling;dynamic priority scheduling;computer science;rate-monotonic scheduling;two-level scheduling;sequencing;mathematics;scheduling;preemption;round-robin scheduling	Theory	15.828391859360352	9.3766810149809	179000
3fd874526b6cd87004ed86f7a9c00ef8b1361bcf	single-machine and parallel-machine serial-batching scheduling problems with position-based learning effect and linear setup time		This paper introduces the serial batching scheduling problems with position-based learning effect, where the actual job processing time is a function of its position. Two scheduling problems respectively for single-machine and parallel-machine are studied, and in each problem the objectives of minimizing maximum earliness and total number of tardy jobs are both considered respectively. In the proposed scheduling models, all jobs are first partitioned into serial batches, and then all batches are processed on the serial-batching machine. We take some practical production features into consideration, i.e., setup time before processing each batch increases with the time, regarded as time-dependent setup time, and we formalize it as a linear function of its starting time. Under the single-machine scheduling setting, structural properties are derived for the problems with the objectives of minimizing maximum earliness and number of tardy jobs respectively, based on which optimization algorithms are developed to solve them. Under the parallel-machine scheduling setting, a hybrid VNS–GSA algorithm combining variable neighborhood search (VNS) and gravitational search algorithm (GSA) is proposed to solve the problems with these two objectives respectively, and the effectiveness and efficiency of the proposed VNS–GSA are demonstrated and compared with the algorithms of GSA, VNS, and simulated annealing (SA). This paper demonstrates that the consideration of different objectives leads to various optimal decisions on jobs assignment, jobs batching, and batches sequencing, which generates a new insight to investigate batching scheduling problems with learning effect under single-machine and parallel-machine settings.		Jun Pei;Bayi Cheng;Xinbao Liu;Panos M. Pardalos;Min Kong	2019	Annals OR	10.1007/s10479-017-2481-8	mathematical optimization;fair-share scheduling;dynamic priority scheduling;real-time computing;simulated annealing;variable neighborhood search;scheduling (computing);computer science;rate-monotonic scheduling;search algorithm;flow shop scheduling	Theory	15.717256170731847	7.455691469140193	179321
0b214d59ce3fcb4354928a635fd745380b869431	analysis of greedy solutions for a replacement part sequencing problem	replacement;greedy heuristic;inventory;np hard	This paper considers the problem of sequencing the installation of replacement parts for the repeated repair of a machine consisting of two working parts. A finite inventory of spares is initially available for each type of part. Each spare has a known deterministic field life, and spares of each type may have different field lives. The inventories are eventually depleted since no replacement or repairs of parts occur. The primary objective is to obtain a sequencing policy which minimizes the total number of installations replacements. This problem is a special case of many opportunistic replacement problems and is called a “build” problem. The motivation for this work is based on the maintenance of modular gas turbine aircraft engines used by domestic airlines and the U.S. Air Force. We show this build problem is NP-hard which indicates the necessity of efficient heuristic solution procedures. This paper considers several “greedy” type algorithms based on grouping parts according to exact matching of field lives. Then, a generalization is presented which allows approximate matches. The focus of the analysis is to obtain tight worst case bounds on the number of replacements obtained by each of the greedy algorithms.	greedy algorithm	Donald K. Friesen;Bryan L. Deuermeyer	1981	Math. Oper. Res.	10.1287/moor.6.1.74	greedy randomized adaptive search procedure;mathematical optimization;greedy algorithm;inventory;np-hard;mathematics;operations research;algorithm	Theory	15.08146239377493	5.44323709836165	179374
7446a1aef323ce4dfaf3daa27a413f9167380be4	research on flexible job-shop scheduling problem under uncertainty based on genetic algorithm	job shop scheduling;uncertainty job shop scheduling biological cells single machine scheduling decoding artificial intelligence;fuzzy set theory;improved genetic algorithm;genetic algorithm;genetic algorithms;average agreement index flexible job shop scheduling problem genetic algorithm fuzzy processing time fuzzy due date optimization model fuzzy completion time;job shop scheduling problem;genetic algorithm flexible job shop scheduling problem fuzzy processing time fuzzy due date;optimization model;job shop scheduling fuzzy set theory genetic algorithms	In this paper, an improved genetic algorithm for optimization of flexible job-shop scheduling problem with fuzzy processing time and fuzzy due date is presented, which is used to research the complexities and essences of this problem. Firstly, the optimization model under uncertainty environment is built, and the objectives are to maximize the average agreement index, and minimize the maximum of fuzzy completion time and the workload of machine. Then the paper discusses some kinds of different situation and definition of fuzzy processing time and due date, gives their graphic description as well. After that, an improved genetic algorithm is presented to optimize the flexible job-shop scheduling problem under uncertainty. The feasibility of the optimization model and the improved genetic algorithm are validated through some instances.	artificial intelligence;essence;genetic algorithm;job shop scheduling;mathematical optimization;scheduling (computing)	Jie Liu;Chaoyong Zhang;Liang Gao;Xiaojuan Wang	2010	2010 Sixth International Conference on Natural Computation	10.1109/ICNC.2010.5583493	fair-share scheduling;nurse scheduling problem;job shop scheduling;mathematical optimization;flow shop scheduling;dynamic priority scheduling;computer science;rate-monotonic scheduling;operations management;genetic algorithm scheduling;machine learning;two-level scheduling;least slack time scheduling;lottery scheduling;fuzzy set operations	Robotics	12.835921182125189	6.728999530898293	179584
9fa256255870dd088107e92387e6a7d472fb4d28	uncertain constrained optimization by interval-oriented algorithm	journal of the operational research society	This paper deals with an interval-oriented approach to solve general interval constrained optimization problems. Generally, this type of problems has infinitely many compromise solutions. The aim of this approach is to obtain one of such solutions with higher accuracy and lower computational cost. The proposed algorithm is nothing but a different kind of branch and bound algorithm with multi-section division criterion of the search region (or box). In the proposed technique, the prescribed/accepted region is divided into several distinct subregions and in each feasible subregion the interval objective function value is computed. Then the subregion containing the best objective value is found by applying a specific interval ranking rule defined with respect to the pessimistic decision makers’ point of view. The process is continued until the interval width for each variable in the accepted subregion is negligible. Finally, the algorithm converges to a compromise solution in interval form. To illustrate the method and also to test the efficiency as well as the effectiveness of the proposed algorithm, we have solved some numerical examples. Journal of the Operational Research Society advance online publication, 20 February 2013 doi:10.1057/jors.2012.151	algorithm;algorithmic efficiency;branch and bound;computation;constrained optimization;interval arithmetic;mathematical optimization;numerical analysis;optimization problem;rule 90	Samiran Karmakar;Asoke Kumar Bhunia	2014	JORS	10.1057/jors.2012.151	mathematical optimization;economics;operations management;mathematics;operations research;algorithm	AI	14.63757047953504	5.842575133090587	179960
b6a0951052194d6ac5023216a78164074c32c709	on the parameterized tractability of the just-in-time flow-shop scheduling problem		Since its development in the early 90’s, parameterized complexity has been widely used to analyze the tractability of many NP-hard combinatorial optimization problems with respect to various types of problem parameters. While the generic nature of the framework allows the analysis of any combinatorial problem, the main focus along the years was on analyzing graph problems. In this paper we diverge from this trend by studying the parameterized complexity of Just-In-Time (JIT) flow-shop scheduling problems. Our analysis focuses on the case where the number of due dates is considerably smaller than the number of jobs, and can thus be considered as a parameter. We prove that the two-machine problem is W[1]-hard with respect to this parameter, even if all processing times on the second machine are of unit length, while the problem is in XP even for a parameterized number of machines. We then move on to study the tractability of the problem when combining the different number of due dates with either the number of different weights or the number of different processing times on the first machine. We prove that in both cases the problem is fixed-parameter tractable for the two machine case, and is W[1]-hard for three or more machines.	cobham's thesis;combinatorial optimization;flow shop scheduling;job stream;just-in-time compilation;mathematical optimization;np-hardness;parameterized complexity;scheduling (computing)	Danny Hermelin;Dvir Shabtay;Nimrod Talmon	2017	CoRR		discrete mathematics;combinatorics;scheduling (computing);mathematics;combinatorial optimization;parameterized complexity;mathematical optimization;flow shop scheduling;graph	AI	15.907461053563443	10.210078841041534	180527
8b0200a10db4962c0cc58de81d41b99e7fe13079	parallel machine scheduling with nested processing set restrictions	conjunto independiente;metodo caso peor;tiempo total acabamiento;nested processing set restrictions;approximate algorithm;ordered set;independent set;approximation algorithm;preempcion;machine parallele;temps total achevement;priorite;nonpreemptive scheduling;problema np duro;multiple machine;maquina paralelas;ensemble ordonne;maquina multiple;np hard problem;parallel machine scheduling;ensemble independant;makespan;probleme np difficile;scheduling;indexation;algoritmo aproximacion;methode cas pire;preemption;parallel machines;nested processing set restrictions nonpreemptive scheduling makespan np hard approximation algorithm worst case bound;np hard;algorithme approximation;machine multiple;priority;prioridad;worst case method;worst case bound;ordonnancement;reglamento;conjunto ordenado	We consider the problem of scheduling a set of n independent jobs on m parallel machines, where each job can only be scheduled on a subset of machines called its processing set. The machines are linearly ordered, and the processing set of job j is given by two machine indexes aj and bj; i.e., job j can only be scheduled on machines aj,aj+1,...,bj. Two distinct processing sets are either nested or disjoint. Preemption is not allowed. Our goal is to minimize the makespan. It is known that the problem is strongly NP-hard and that there is a list-type algorithm with a worst-case bound of 2-1/m. In this paper we give an improved algorithm with a worst-case bound of 7/4. For two and three machines, the algorithm gives a better worst-case bound of 5/4 and 3/2, respectively.	parallel computing;scheduling (computing)	Yumei Huo;Joseph Y.-T. Leung	2010	European Journal of Operational Research	10.1016/j.ejor.2009.10.025	mathematical optimization;real-time computing;computer science;np-hard;mathematics;approximation algorithm;algorithm	HPC	16.75723256865388	11.017025766406316	181001
232243b2a2a1ee29a00e6b676e3282ac7f1e8a83	a real time production sequencing rule for machines of a fms using fuzzy logic	flexible manufacturing systems fuzzy logic productivity fuzzy systems system testing production facilities lead time reduction routing computer science production systems;parts sequencing real time production sequencing rule machine sequencing flexible manufacturing system fms fuzzy logic fuzzy systems fifo rule shop floor;flexible manufacturing systems;production management flexible manufacturing systems fuzzy logic fuzzy systems;real time;lead time;production management;fuzzy logic;fuzzy systems;fuzzy system	Several iechniques have been used for the deiermination of a good sequencing of parts that are stored in queues waiting far to be processed. These iechniques aim to improve the use offacioiyk resources, to increase the productivity, to decrease the lead time. to maintain the delivery date, etc. In this context, this work presents a technique that uses fuzzy rogic io sei ihe best sequence ofparis io beprocessed. The decision of which part will be the next to be processed should rake into account some criteria that influences the performance of theFMS. I n order io test and validate the proposed approach, a shopfloor were tested using the fuzzy system and also a FIFO rule io be compared.	fifo (computing and electronics);fuzzy control system;fuzzy logic;rake	Matheus Giovanni Pires;Pablo Alberto Dalbem de Castro;Orides Morandin;Heloisa A. Camargo;Edilson R. R. Kato	2003		10.1109/ICSMC.2003.1245674	fuzzy logic;fuzzy electronics;real-time computing;adaptive neuro fuzzy inference system;fuzzy transportation;computer science;artificial intelligence;neuro-fuzzy;fuzzy set operations;fuzzy control system	HPC	10.908217951765725	5.889705258495405	181053
722bea758f455b1d8e58b8c50f4e0d3755b215e4	optimal posted prices for online cloud resource allocation		We study online resource allocation in a cloud computing platform, through a posted pricing mechanism: The cloud provider publishes a unit price for each resource type, which may vary over time; upon arrival at the cloud system, a cloud user either takes the current prices, renting resources to execute its job, or refuses the prices without running its job there. We design pricing functions based on the current resource utilization ratios, in a wide array of demand-supply relationships and resource occupation durations, and prove worst-case competitive ratios of the pricing functions in terms of social welfare. In the basic case of a single-type, non-recycled resource (i.e., allocated resources are not later released for reuse), we prove that our pricing function design is optimal, in that any other pricing function can only lead to a worse competitive ratio. Insights obtained from the basic cases are then used to generalize the pricing functions to more realistic cloud systems with multiple types of resources, where a job occupies allocated resources for a number of time slots till completion, upon which time the resources are returned back to the cloud resource pool.	best, worst and average case;cloud computing;competitive analysis (online algorithm)	Zijun Zhang;Zongpeng Li;Chuan Wu	2017		10.1145/3078505.3078529	real-time computing;simulation;competitive analysis;renting;online algorithm;unit price;reuse;cloud computing;computer science;microeconomics;resource allocation	Metrics	13.523908767324212	10.931232866363134	181740
14c0c9ba3e69846db02a6a3df1ef8e99149aa978	np-complete scheduling problems	scheduling problem	We show that the problem of finding an optimal schedule for a set of jobs is NP-complete even in the following two restricted cases.o(1)All jobs require one time unit. (2)All jobs require one or two time units, and there are only two processor resolving (in the negative a conjecture of R. L. Graham, Proc. SJCC, 1972, pp. 205-218). As a consequence, the general preemptive scheduling problem is also NP-complete. These results are tantamount to showing that the scheduling problems mentioned are intractable.	np-completeness;scheduling (computing)	Jeffrey D. Ullman	1975	J. Comput. Syst. Sci.	10.1016/S0022-0000(75)80008-0	fair-share scheduling;nurse scheduling problem;fixed-priority pre-emptive scheduling;open-shop scheduling;mathematical optimization;real-time computing;flow shop scheduling;dynamic priority scheduling;computer science;rate-monotonic scheduling;distributed computing;round-robin scheduling;multiprocessor scheduling	Theory	16.224774066833714	10.746795835146848	181885
79696e8813b527e2f31c46b54fe6f0c5c7f52eb9	a simple linear time approximation algorithm for multi-processor job scheduling on four processors	workload;approximation lineaire;approximate algorithm;multi processor job scheduling;gestion labor;multiprocessor;processor scheduling;approximation algorithm;temps lineaire;linear approximation;problema np duro;tiempo lineal;optimisation combinatoire;np hard problem;gestion tâche;probleme np difficile;linear time;aproximacion lineal;algoritmo aproximacion;charge travail;ordonnancement processeur;task scheduling;multiprocesador;algorithme approximation;carga trabajo;combinatorial optimization;job scheduling;optimizacion combinatoria;multiprocesseur	Multiprocessor job scheduling problem has become increasingly interesting, for both theoretical study and practical applications. Theoretical study of the problem has made significant progress recently, which, however, seems not to imply practical algorithms for the problem, yet. Practical algorithms have been developed only for systems with three processors and the techniques seem difficult to extend to systems with more than three processors. This paper offers new observations and introduces new techniques for the multiprocessor job scheduling problem on systems with four processors. A very simple and practical linear time approximation algorithm of ratio bounded by 1.5 is developed for the multi-processor job scheduling problem P4|fix|Cmax, which significantly improves previous results. Our techniques are also useful for multiprocessor job scheduling problems on systems with more than four processors.	approximation algorithm;central processing unit;job scheduler;multiprocessing;scheduling (computing);time complexity	Jingui Huang;Jianer Chen;Songqiao Chen;Jianxing Wang	2007	J. Comb. Optim.	10.1007/s10878-006-9011-y	fair-share scheduling;time complexity;job shop scheduling;mathematical optimization;parallel computing;real-time computing;multiprocessing;gang scheduling;dynamic priority scheduling;combinatorial optimization;computer science;rate-monotonic scheduling;job scheduler;np-hard;mathematics;distributed computing;least slack time scheduling;multiprocessor scheduling;approximation algorithm;algorithm;linear approximation	Theory	16.781072453726324	11.001601700600764	182419
38c0e6aeeb6a924a11b9c19766456dbcacae2bf7	a genetic algorithm for the resource renting problem with minimum and maximum time lags	fixed cost;metaheuristic algorithms;time dependent;resource costs;temporal constraints;time lag;genetic algorithm;genetic algorithms;project scheduling;resource availability;branch and bound	We work with a project scheduling problem subject to temporal constraints where the resource availability costs have to be minimised. As an extension of the more well known Resource Investment Problem, which considers only time-independent costs, this problem includes both time-independent fixed costs and time-dependent variable renting costs for the resources. Consequently, in addition to projects where all resources are bought, we can deal with projects where resources are rented. Based on a new codification of a solution for project scheduling, we develop a Genetic Algorithm capable of outperforming a branch-and-bound procedure that exists for the problem.		Francisco Ballestín	2007		10.1007/978-3-540-71615-0_3	mathematical optimization;simulation;economics;resource allocation;operations management;genetic algorithm scheduling	Theory	15.528100918499868	4.259970179088262	182485
0a04afdaa932cd5dee1b43a9ad8a615aaaa8c034	solution methods for a scheduling problem with incompatibility and precedence constraints	article accepte pour publication ou publie;serveur institutionnel;archive institutionnelle;precedence constraints;open access;precedence constraint;scheduling problem;project scheduling;archive ouverte unige;incompatibility constraints;cybertheses;local search;institutional repository;mixed graph coloring	Consider a project which consists in a set of operations to be performed, assuming the processing time of each operation is at most one time period. In this project, preced ence and incompatibility constraints between operations h ave to be satisfied. The goal is to assign a time period to each oper ation while minimizing the duration of the whole project and while taking into account all the constraints. Based on t he mixed graph coloring model and on an efficient and quick tabu search algorithm for the usual graph coloring problem, we propose a tabu search algorithm as well as a variable neighborhood search heuristic for the considered scheduli ng problem. We formulate an integer linear program (useful for the CPLEX solver) as well as a greedy procedure for compar ison considerations. Numerical results are reported on instances with up to 500 operations.	cplex;discrete mathematics;graph coloring;greedy algorithm;heuristic (computer science);linear programming;local search (optimization);mixed graph;np-hardness;numerical linear algebra;schedule (project management);scheduling (computing);search algorithm;software incompatibility;solver;tabu search;variable neighborhood search	François-Xavier Meuwly;Bernard Ries;Nicolas Zufferey	2010	Algorithmic Operations Research		nurse scheduling problem;job shop scheduling;mathematical optimization;computer science;local search;mathematics;distributed computing;schedule;algorithm;precedence diagram method	AI	16.931976203918545	8.462298322758956	183352
b41327cd2dcb5b425ade7c835572a86943bea1ab	min-energy voltage allocation for tree-structured tasks	workload;arbre graphe;energy efficiency;intervalo tiempo;chevauchement;fonction energie;energie minimale;tree graph;gestion labor;energy efficient;competitividad;processor scheduling;efficient algorithm;arrival time;metodo arborescente;variable voltage processor;heuristic method;metodo heuristico;overlap;time interval;imbricacion;deadline;energy function;optimisation combinatoire;tension electrique;gestion tâche;energy consumption;optimal scheduling;convex function;tiempo llegada;scheduling;voltage;tree structure;charge travail;competitiveness;consommation energie;funcion energia;tree structured method;methode arborescente;methode heuristique;ordonnancement processeur;energia minima;task scheduling;date limite;carga trabajo;arbol grafo;combinatorial optimization;temps arrivee;algoritmo optimo;voltaje;algorithme optimal;fechas ultimas;optimal algorithm;competitivite;fonction convexe;job scheduling;consumo energia;competitive ratio;funcion convexa;optimizacion combinatoria;intervalle temps;minimum energy	We study job scheduling on processors capable of running at variable voltage/speed to minimize energy consumption. Each job in a problem instance is specified by its arrival time and deadline, together with required number of CPU cycles. It is known that the minimum energy schedule for n jobs can be computed in O(n 3 ) time, assuming a convex energy function. We investigate more efficient algorithms for computing the optimal schedule when the job sets have certain special structures. When the time intervals are structured as trees, the minimum energy schedule is shown to have a succinct characterization and is computable in time O(P) where P is the tree's total path length. We also study an on-line average-rate heuristics AVR and prove that its energy consumption achieves a small constant competitive ratio for nested job sets and for job sets with limited overlap. Some simulation results are also given.		Minming Li;Becky Jie Liu;F. Frances Yao	2006	J. Comb. Optim.	10.1007/s10878-006-7910-6	mathematical optimization;real-time computing;voltage;combinatorial optimization;computer science;mathematics;efficient energy use;algorithm	Theory	16.903143149199312	10.622456086680105	183405
3029853061eb4b34ca2ebe7abf95a70a5b35b334	single-machine scheduling of proportionally deteriorating jobs by two agents	forecasting;reliability;project management;information systems;single machine scheduling;maintenance;branch and bound algorithm;soft or;information technology;packing;operations research;location;investment;journal;journal of the operational research society;inventory;purchasing;history of or;single machine;logistics;computer experiment;marketing;scheduling;exact algorithm;production;communications technology;computer science;operational research;evolutionary algorithm;lower bound;applications of operational research;or society;jors;management science;infrastructure	We consider a problem of scheduling a set of independent jobs by two agents on a single machine. Every agent has its own subset of jobs to be scheduled and uses its own optimality criterion. The processing time of each job proportionally deteriorates with respect to the starting time of the job. The problem is to find a schedule that minimizes the total tardiness of the first agent, provided that no tardy job is allowed for the second agent. We prove basic properties of the problem and give a lower bound on the optimal value of the total tardiness criterion. On the basis of these results, we propose a branch-and-bound algorithm and an evolutionary algorithm for the problem. Computational experiments show that the exact algorithm solves instances up to 50 jobs in a reasonably short time and that solutions obtained by the metaheuristic are close to optimal ones.	job stream;scheduling (computing);single-machine scheduling	Stanislaw Gawiejnowicz;W.-C. Lee;C.-L. Lin;C.-C. Wu	2011	JORS	10.1057/jors.2010.171	project management;logistics;simulation;computer experiment;inventory;economics;forecasting;investment;computer science;marketing;operations management;evolutionary algorithm;reliability;mathematics;location;operations research;information technology;scheduling;statistics	ECom	16.213608056795547	5.751496633254761	183667
51da1d0ad3197e608835cee2838019e8aa9541c9	the subset assignment problem for data placement in caches	memory management;caching;simplex method;linear programming;minimum cost flow;68w40	We introduce the subset assignment problem in which items of varying sizes are placed in a set of bins with limited capacity. Items can be replicated and placed in any subset of the bins. Each (item, subset) pair has an associated cost. Not assigning an item to any of the bins is not free in general and can potentially be the most expensive option. The goal is to minimize the total cost of assigning items to subsets without exceeding the bin capacities. The subset assignment problem models the problem of managing a cache composed of banks of memory with varying cost/performance specifications. The ability to replicate a data item in more than one memory bank can benefit the overall performance of the system with a faster recovery time in the event of a memory failure. For this setting, the number n of data objects (items) is very large and the number d of memory banks (bins) is a small constant (on the order of 3 or 4). Therefore, the goal is to determine an optimal assignment in time that minimizes dependence on n. The integral version of this problem is NP-hard since it is a generalization of the knapsack problem. We focus on an efficient solution to the LP relaxation as the number of fractionally assigned items will be at most d. If the data objects are small with respect to the size of the memory banks, the effect of excluding the fractionally assigned data items from the cache will be small. We give an algorithm that solves the LP relaxation and runs in time $$O(\left( {\begin{array}{c}3^d\\ d+1\end{array}}\right) {\text {poly}}(d) n \log (n) \log (nC) \log (Z))$$ O(3dd+1poly(d)nlog(n)log(nC)log(Z)) , where Z is the maximum item size and C the maximum storage cost.	algorithm;assignment problem;data item;knapsack problem;lp-type problem;lagrangian relaxation;linear programming relaxation;memory bank;np-hardness;self-replicating machine	Shahram Ghandeharizadeh;Sandy Irani;Jenny Lam	2017	Algorithmica	10.1007/s00453-017-0403-4	mathematical optimization;real-time computing;computer science;mathematics;algorithm	Theory	14.927424901889115	10.774457799394346	184232
833a07face6178be24db0476b714a4feb4936d31	heuristics and lower bounds for the simple assembly line balancing problem type 1: overview, computational tests and improvements	heuristic;assembly line balancing;partitioning problem;reduction technique;lower bound	Assigning tasks to work stations is an essential problem which needs to be addressed in an assembly line design. The most basic model is called simple assembly line balancing problem type 1 (SALBP-1). We provide a survey on 12 heuristics and 9 lower bounds for this model and test them on a traditional and a lately-published benchmark dataset. The present paper focuses on algorithms published before 2011. We improve an already existing dynamic programming and a tabu search approach significantly. These two are also identified as the most effective heuristics; each with advantages for certain problem characteristics. Additionally we show that lower bounds for SALBP-1 can be distinctly sharpened when merging them and applying problem reduction techniques. 2014 The Author. Published by Elsevier B.V. This is an open access article under the CC BY license (http:// creativecommons.org/licenses/by/3.0/).		Tom Pape	2015	European Journal of Operational Research	10.1016/j.ejor.2014.06.023	mathematical optimization;heuristic;computer science;artificial intelligence;operations management;mathematics;upper and lower bounds;algorithm	AI	16.335900040843324	7.621003412565368	184300
0656f6249fe233be68b2f61865f526e8767574ed	scheduling parallel cnc machines with time/cost trade-off considerations	total completion time;machining;completion time;manufacturing cost;costo fabricacion;controlabilidad;turning;heuristic method;controllability;machine parallele;cnc machines;temps achevement;metodo heuristico;processing time;computer digital control;controlabilite;temps calcul;cout fabrication;parallel machine scheduling;usinage;tournage;convex function;scheduling;torneado;temps traitement;parallel machines;methode heuristique;controllable processing times;tiempo computacion;mecanizado;computation time;tiempo acabado;fonction convexe;tiempo proceso;control numerico computador;ordonnancement;heuristic algorithm;reglamento;funcion convexa;commande numerique calculateur	When the processing times of jobs are controllable, selected processing times affect both the manufacturing cost and the scheduling performance.A well-known example for such a case that this paper specifically deals with is the turning operation on a CNC machine. Manufacturing cost of a turning operation is a nonlinear convex function of its processing time. We also know that scheduling decisions are quite sensitive to the processing times. Therefore, this paper considers minimizing total manufacturing cost (F1) and total completion time (F2) objectives simultaneously on identical parallel CNC turning machines. Since decreasing processing time of a job increases its manufacturing cost, we cannot minimize both objectives at the same time, so the problem is to generate non-dominated solutions. We consider the problem of minimizing F1 subject to a given F2 level and give an effective formulation for the problem. For this problem, we prove some optimality properties which facilitated designing an efficient heuristic algorithm to generate approximate non-dominated solutions. Computational results show that proposed algorithm performs almost equal with the GAMS/MINOS commercial solver although it spends much less computation time. 2005 Elsevier Ltd. All rights reserved.	approximation algorithm;computation;convex function;gams;heuristic (computer science);job stream;natural language processing;nonlinear system;scheduling (computing);solver;source lines of code;time complexity	Sinan Gürel;M. Selim Akturk	2007	Computers & OR	10.1016/j.cor.2005.10.018	convex function;heuristic;mathematical optimization;controllability;machining;computer science;mathematics;scheduling;algorithm	AI	17.269397676063857	9.502748662049836	184660
f15c5fe8793945daae8538a237ca042886d3fd2f	large neighborhood search and adaptive randomized decompositions for flexible jobshop scheduling	longer runtimes;constraint-based scheduling approach;traditional jobshop scheduling;empirical result;hybrid decomposition;machine decomposition;adaptive randomized decomposition;large neighborhood;best-known solution;flexible jobshop;flexible jobshop scheduling;large neighborhood search	This paper considers a constraint-based scheduling approach to the flexible jobshop, a generalization of the traditional jobshop scheduling where activities have a choice of machines. It studies both large neighborhood (LNS) and adaptive randomized decomposition (ARD) schemes, using random, temporal, and machine decompositions. Empirical results on standard benchmarks show that, within 5 minutes, both LNS and ARD produce many new best solutions and are about 0.5% in average from the best-known solutions. Moreover, over longer runtimes, they improve 60% of the best-known solutions and match the remaining ones. The empirical results also show the importance of hybrid decompositions in LNS and ARD.	heuristic (computer science);logarithmic number system;randomized algorithm;runtime system;scheduling (computing)	Dario Pacino;Pascal Van Hentenryck	2011		10.5591/978-1-57735-516-8/IJCAI11-333	mathematical optimization;computer science;machine learning	AI	16.082545063977545	7.205865018235669	185124
18ae55a2d4e9e94cc90cf43a273c445d77053be4	worst case analysis of a new lower bound for flow shop weighted completion time problem	optimal solution;wspt rule;flow shop weighted completion time problem;random testing;worst case analysis;asymptotic analysis;performance ratio;lower bound;asymptotic equivalence	For the m-machine Flow Shop Weighted Completion Time problem, a New Lower Bound (NLB) is derived to improve the original lower bound which was given by Kaminsky and Simchi-Levi. 1) For the case of arbitrary weight, the NLB is asymptotically equivalent to the optimality solution, as the total number of jobs goes to infinity. Specially, when the processing times of jobs are all equal, the NLB is just the optimal solution. 2) For the case of equal-weight, a tight worst case performance ratio of the optimal solution to the NLB is obtained. At the end of the paper, computational results show the effectiveness of NLB on a set of random test problems.	best, worst and average case	Danyu Bai;Lixin Tang	2007		10.1007/978-3-540-73556-4_22	random testing;mathematical optimization;combinatorics;discrete mathematics;asymptotic analysis;mathematics;upper and lower bounds	Theory	15.9048497629277	11.160139533385603	185197
caab6f93a1f53e47f00a36bf38ca261c62967be6	shopst: flexible job-shop scheduling with agent-based simulated trading		Paradigms in modern production are shifting and pose new demands for optimization techniques. The emergence of new, versatile, reconfigurable and networked machines enables flexible manufacturing scenarios which require, in particular, planning and scheduling methods for cyber-physical production systems to be flexible, reasonably fast, and anytime. This paper presents an approach to flexible job-shop manufacturing scheduling with agent-based simulated trading, called shopST. Aspects of real manufacturing scheduling problems form the basis for a physical decomposition of the planning system into agents. The initial schedule created by the agents in shopST through reactive negotiation is successively improved through the exchange of resource binding constraints with an additional market agent. shopST is evaluated in comparison to selected other different solution approaches to flexible job-shop scheduling.	agent-based model;anytime algorithm;automated planning and scheduling;emergence;job shop scheduling;mathematical optimization;multi-purpose viewer;schedule (project management);scheduling (computing)	Frank Yukio Nedwed;Ingo Zinnikus;Maxat Nukhayev;Matthias Klusch;Luca Mazzola	2017		10.1007/978-3-319-64798-2_8	computer science;distributed computing;job shop scheduling;scheduling (computing);fair-share scheduling	AI	12.026587168074242	6.302484102386308	185235
41f1bb987e35f489db841a8999a23f408e07711f	production scheduling in a semiconductor wafer fabrication facility producing multiple product types with distinct due dates	production control integrated circuit manufacture batch processing industrial;total tardiness production scheduling semiconductor wafer fabrication facility multiple product types distinct due dates semiconductor wafer fab process flows wafer lots serial processing workstations batch processing workstations lot release control lot scheduling batch scheduling decision problems;indexing terms;decision problem;production control;batch processing industrial;batch process;production scheduling;production fabrication workstations job shop scheduling application specific integrated circuits industrial engineering semiconductor device modeling circuit simulation electrical equipment industry companies;simulation model;integrated circuit manufacture	This paper focuses on production scheduling in a semiconductor wafer fab producing multiple product types that have different due dates and different process flows. In the wafer fab, wafer lots are processed on serial and batch processing workstations, each of which consists of parallel identical machines. Machines in serial processing workstations process wafer lots one by one, while those in batch processing workstations process several wafer lots of the same recipe at the same time. What need to be done for production scheduling are lot release control (to determine when and which wafer lot to release into the wafer fab), lot scheduling (to determine processing sequences of lots waiting in front of serial processing workstations) and batch scheduling (to determine which lots to process simultaneously as a batch and when to process batches on batch processing workstations). For these three decision problems, we develop several rules which use information such as order sizes (numbers of lots in orders) and processing status of the wafer lots. To evaluate these new rules, we use a simulation model in which the three decision problems are considered simultaneously. Simulation results show that the new rules work better than existing rules in terms of total tardiness of the orders.	batch processing;decision problem;job scheduler;scheduling (computing);semiconductor fabrication plant;simulation;wafer (electronics);wafer fabrication;workstation	Yeong-Dae Kim;Jae-Gon Kim;Bum Choi;Hyung-Un Kim	2001	IEEE Trans. Robotics and Automation	10.1109/70.964660	real-time computing;index term;computer science;engineering;industrial engineering;decision problem;simulation modeling;scheduling;batch processing	Robotics	10.424843678919526	5.597966473136816	185649
4325af82b16ebd9c2741e0fa2e8983a719eb705f	a genetic algorithm for the robust resource leveling problem	robust resource leveling;会议论文;genetic algorithm;project scheduling;stochastic activity durations	The resource leveling problem (RLP) involves the determination of a project baseline schedule that specifies the planned activity starting times while satisfying both the precedence constraints and the project deadline constraint under the objective of minimizing the variation in the resource utilization. However, uncertainty is inevitable during project execution. The baseline schedule generated by the deterministic RLP model tends to fail to achieve the desired objective when durations are uncertain. We study the robust resource leveling problem in which the activity durations are stochastic and the objective is to obtain a robust baseline schedule that minimizes the expected positive deviation of both resource utilizations and activity starting times. We present a genetic algorithm for the robust RLP. In order to demonstrate the effectiveness of our genetic algorithm, we conduct extensive computational experiments on a large number of randomly generated test instances and investigate the impact of different factors (the marginal cost of resource usage deviations, the marginal cost of activity starting time deviations, the activity duration variability, the due date, the order strength, the resource factor and the resource constrainedness). B Erik Demeulemeester Erik.Demeulemeester@kuleuven.be Hongbo Li ishongboli@gmail.com 1 School of Management, Shanghai University, Shanghai, China 2 Research Center for Operations Management, Faculty of Business and Economics, KU Leuven, Hogenheuvelcollege, Naamsestraat 69, 3000 Leuven, Belgium 3 School of Economics and Management, Beihang University, Beijing, China	audio crossover;baseline (configuration management);computation;experiment;genetic algorithm;heart rate variability;instability;li-chen wang;loss function;marginal model;optimization problem;procedural generation;rl (complexity);radio frequency;scheduling (computing);simulation;software release life cycle	Hongbo Li;Erik Demeulemeester	2016	J. Scheduling	10.1007/s10951-015-0457-6	mathematical optimization;real-time computing;simulation;genetic algorithm;computer science;schedule	AI	14.164650533711349	6.265845057518276	185686
92fa455aa06d86366d1b14b7d0fd037feb5f4fc3	heuristics for the two-stage job shop scheduling problem with a bottleneck machine	approximate algorithm;job shop scheduling;worst case analysis;np hard problem;performance ratio;job shop scheduling problem;ts manufactures;qa76 computer software	The paper considers the job shop scheduling problem to minimize the makespan. It is assumed that each job consists of at most two operations, one of which is to be processed on one of m⩾2 machines, while the other operation must be performed on a single bottleneck machine, the same for all jobs. For this strongly NP-hard problem we present two heuristics with improved worst-case performance. One of them guarantees a worst-case performance ratio of 3/2. The other algorithm creates a schedule with the makespan that exceeds the largest machine workload by at most the length of the largest operation.	heuristic (computer science);job shop scheduling;scheduling (computing)	Inna G. Drobouchevitch;Vitaly A. Strusevich	2000	European Journal of Operational Research	10.1016/S0377-2217(99)00253-2	job shop scheduling;open-shop scheduling;mathematical optimization;real-time computing;flow shop scheduling;computer science;rate-monotonic scheduling;operations management;np-hard;mathematics;multiprocessor scheduling	ML	15.772264593856148	9.71535468496498	185876
d63599c379438b2fa6fa689a92ca7221652ee0f8	bicriteria robotic cell scheduling	cycle time;robotic cell;bicriteria optimization;scheduling problem;controllable processing times;cnc	This paper considers the scheduling problems arising in twoand three-machine manufacturing cells configured in a flowshop which repeatedly produces one type of product and where transportation of the parts between the machines is performed by a robot. The cycle time of the cell is affected by the robot move sequence as well as the processing times of the parts on the machines. For highly flexible CNC machines, the processing times can be changed by altering the machining conditions at the expense of increasing the manufacturing cost. As a result, we try to find the robot move sequence as well as the processing times of the parts on each machine that not only minimize the cycle time but, for the first time in robotic cell scheduling literature, also minimize the manufacturing cost. For each 1-unit cycle in twoand three-machine cells, we determine the efficient set of processing time vectors such that no other processing time vector gives both a smaller cycle time and a smaller cost value. We also compare these cycles with each other to determine the sufficient conditions under which each of the cycles dominates the rest. Finally, we show how different assumptions on cost structures affect the results.	cell (microprocessor);convex function;decision problem;loss function;pups/p3;robot;scheduling (computing)	Hakan Gultekin;M. Selim Akturk;Oya Ekin Karasan	2008	J. Scheduling	10.1007/s10951-007-0033-9	job shop scheduling;mathematical optimization;real-time computing;simulation;cycle time variation;numerical control	Robotics	15.14080896244917	8.516902173502778	186035
09220e779fe9bc044a5615e3e5972570771f572a	integrating transportation in a multi-site scheduling environment	knowledge based systems transportation production control scheduling manufacture optimisation manufacturing data processing;optimisation;manufacture;transportation job shop scheduling processor scheduling humans costs computer aided manufacturing vehicles distributed computing production lab on a chip;production control;manufacturing data processing;scheduling;transportation;solution strategies transportation multi site scheduling environment scheduling problems enterprise distributed production sites intermediate products raw materials manufacturing process global level global schedule local level schedulers multi site scenario scheduling task transportation tasks shortest paths temporal restrictions delivery dates;knowledge based systems	"""le Abstract Multi-site scheduling deals with the scheduling problems of an enterprise with several distributed production sites, where sites are using the intermediate products of other sites to manufacture the products of the enterprise. Therefore the transportation of the raw materials and the intermediate products to the plants is an important task within the whole process of manufacturing. Scheduling problems are treated on two levels. On the global level a global schedule is generated including the requirements for the local level schedulers which then have to transform the global schedule into a local schedule for manufacturing. Since transportation is a vital task in the multi-site scenario, we will view it as a scheduling task on the local level as well. Besides the """"classical"""" objectives of transportation tasks such as finding shortest paths or minimizing costs the temporal restrictions of meeting the delivery dates here are the most important goals. In this paper we describe how transportation tasks can be modeled as a scheduling problem and which kind of solution strategies are appropriate."""	distributed manufacturing;job shop scheduling;requirement;schedule (project management);scheduling (computing);shortest path problem	Jürgen Sauer	2000		10.1109/HICSS.2000.926670	fair-share scheduling;fixed-priority pre-emptive scheduling;transport;real-time computing;earliest deadline first scheduling;simulation;flow shop scheduling;dynamic priority scheduling;computer science;rate-monotonic scheduling;operations management;genetic algorithm scheduling;operating system;knowledge-based systems;two-level scheduling;deadline-monotonic scheduling;scheduling;lottery scheduling;manufacturing;round-robin scheduling;scheduling	Theory	11.757369550626436	4.991877276423061	186143
ba41d6a9a222d3f1d476d884101643d36b35d10a	scheduling on a single machine under time-of-use electricity tariffs	dynamic speed scaling;approximation algorithm;time of use tariff;electricity cost;scheduling	We consider the problem of scheduling jobs on a single machine to minimize the total electricity cost of processing these jobs under time-of-use electricity tariffs. For the uniform-speed case, in which all jobs have arbitrary power demands and must be processed at a single uniform speed, we prove that the non-preemptive version of this problem is inapproximable within a constant factor unless P = NP. On the other hand, when all the jobs have the same workload and the electricity prices follow a so-called pyramidal structure, we show that this problem can be solved in polynomial time. For the speed-scalable case, in which jobs can be processed at an arbitrary speed with a trade-off between speed and power demand, we show that the non-preemptive version of the problem is strongly NP-hard. We also present different approximation algorithms for this case, and test the computational performance of these approximation algorithms on randomly generated instances. In addition, for both the uniform-speed and speed-scaling cases, we show how to compute optimal schedules for the preemptive version of the problem in polynomial time.	approximation algorithm;computation;decision problem;energy minimization;experiment;image scaling;job stream;np-hardness;open-shop scheduling;p versus np problem;polynomial;preemption (computing);procedural generation;scalability;schedule (project management);scheduling (computing);single-machine scheduling;strong np-completeness;terms of service;time complexity	Kan Fang;Nelson A. Uhan;Fu Zhao;John W. Sutherland	2016	Annals OR	10.1007/s10479-015-2003-5	mathematical optimization;simulation;computer science;operations management;scheduling;approximation algorithm	Theory	15.104239232619376	10.449302690172122	186777
e7da42c10ba1032360674434aa43ec73adecaff6	approximation algorithms for scheduling multiple two-stage flowshops		This paper studies the problem that schedules n two-stage jobs on m multiple two-stage flowshops, with the objective of minimizing the makespan. The problem is NP-hard even when m is a fixed constant, and becomes strongly NP-hard when m is a part of input. A 17/6approximation algorithm along with its analysis is presented for arbitrary m ≥ 2. This is the first approximation algorithm for multiple flowshops when the number m of flowshops is a part of input. The arbitrary m and the time complexity O(n logn + mn) of the algorithm demonstrate that the problem, which plays an important role in the current research in cloud computing and data centers, can be solved efficiently with a reasonable level of satisfaction.	approximation algorithm;cloud computing;data center;makespan;np-hardness;order of approximation;polynomial;pseudo-polynomial time;scheduling (computing);strong np-completeness;time complexity	Guangwei Wu;Jianxing Wang	2017		10.1007/978-3-319-62389-4_43	job shop scheduling;discrete mathematics;time complexity;scheduling (computing);computer science;cloud computing;approximation algorithm;binary logarithm;schedule	Theory	15.460372779883352	10.306174849857824	186853
aa1e5f51b2616e8fcf32dc55954476019582f075	applications of resource assignment and scheduling with petri nets and heuristic search	discrete event dynamic system;heuristic search;scheduling;resource assignment;petri nets;petri net	This paper introduces a new Petri Net based approach for resource allocation and scheduling. The goals are (i) minimize the number of required resources given a set of jobs, (ii) find both an assignment for all jobs in the span of a predefined shift and (iii) the sequence in which such jobs are executed. The studied problem was inspired from a complex real life manufacturing shop as described in this document. The modeling of the processes and jobs is carried out with Petri Nets due to their capability of representing dynamic, concurrent discrete-event dynamic systems. The resource assignment starts with an initial feasible solution (initial number of resources) and then follows with a re-optimization process aimed to further reduce the resource requirements. The algorithm is based on a modified Heuristic Search method previously presented. The algorithm was tested first on a number of instances from the literature and then on the aforementioned system (a car seat cover manufacturer). The proposed approach shows not only good results in terms of performance but also shows the potential of Petri Nets for modeling and optimizing real-life systems. An implementation phase at the first stages of the process is underway at the time of writing.	heuristic;petri net;scheduling (computing)	Gonzalo Mejia;Carlos Montoya	2010	Annals OR	10.1007/s10479-010-0686-1	real-time computing;heuristic;computer science;operations management;distributed computing;process architecture;petri net	Robotics	12.974937704746637	4.7368395464095086	187214
5b993f593fb4acee14b314204ee39b6ef80d6d09	dynamic job assignment: a column generation approach with an application to surgery allocation		We consider the assignment of jobs to agents in a stochastic and dynamic setting. Focus is on a dynamic scenario with due dates and service levels reflecting the completion of jobs within certain deadlines. Due dates and other relevant characteristics for currently uncompleted jobs generated in the past are known, but the consumption of resources needed for their completion is stochastic. Distributions for the generation of future jobs as well as their characteristics are known. Capacity is limited, and an arriving job that cannot be assigned to an agent within its due date must be outsourced. Outsourcing is accompanied by a cost. We develop an optimization model based on column generation for the assignment of known and future jobs to agents such that the expected cost of outsourcing is minimum. The model is an extension of a generalized assignment problem and provides an allocation of known as well as tentative future jobs to agents. The model is embedded in a rolling horizon framework and subjected to a series of computational tests. The results indicate that taking stochastic information about future job arrivals into account in the assignment of jobs to agents implies an improved performance. The model is highly relevant in the context of patient scheduling in an operating theater. For this reason patient scheduling constitutes the storyline in the development of the model.	column generation	Troels Martin Range;Dawid Kozlowski;Niels Christian Petersen	2019	European Journal of Operational Research	10.1016/j.ejor.2018.06.014	mathematical optimization;simulation;generalized assignment problem;engineering;operations management	HPC	13.955895301903494	7.857335967133084	187262
16dbf299aeac953d60b6b9fbeb43ef4f97b156be	formulating and solving a multi-mode resource-collaboration and constrained scheduling problem (mrccsp)	branch and bound algorithm;mixed integer linear programming;resource sharing and scheduling problem;resource constrained scheduling problem	The main motivation of this study is to provide, for the first time, a formulation and solution for a class of production scheduling problems (as in cluster tools) characterized mainly by resource collaboration to perform an operation and while allowing batches and considering alternative production methods. We develop a formulation for the new problem and term it a multiple mode per operation, resource collaboration, and constrained scheduling problem (MRCCSP). Some of the important new characteristics we consider are: multiple products (families); multiple orders (jobs) per family; precedence restrictions among the operations that constitute a job; alternative modes for the performance of an operation (each of which needs a set of collaborating resources) may be defined; complementary and exclusive restrictions between operation-modes; batch production is allowed; and setup times may depend on sequence and batch-size. The objective of the MRCCSP is to minimize makespan. We formulate the MRCCSP as a mixed integer linear programming model, and acknowledging the considerable size of the monolithic formulation required, we prescribe a specific method to achieve size reduction. Finally, a customized branch and bound algorithm for optimally solving this problem is proposed and examined experimentally.	scheduling (computing)	Gaby Pinto;Yariv T. Ben-Dov;Gad Rabinowitz	2013	Annals OR	10.1007/s10479-012-1256-5	fair-share scheduling;mathematical optimization;dynamic priority scheduling;computer science;operations management;genetic algorithm scheduling;mathematics;distributed computing;scheduling;branch and bound	AI	14.069983614082583	5.389804625840544	187429
a727f628718cf48d8640c0b57f88ef1710da01fa	minimizing total weighted flow time under uncertainty using dominance and a stability box	total weighted flow time;single machine scheduling;interval input data;stability analysis	We consider an uncertain single-machine scheduling problem, in which the processing time of a job can take any real value on a given closed interval. The criterion is to minimize the total weighted flow time of the n jobs, where there is a weight associated with a job. We calculate a number of minimal dominant sets of the job permutations (a minimal dominant set contains at least one optimal permutation for each possible scenario). We introduce a new stability measure of a job permutation (a stability box) and derive an exact formula for the stability box, which runs in O(n log n) time. We investigate properties of a stability box. These properties allow us to develop an O(n)-algorithm for constructing a permutation with the largest volume of a stability box. If several permutations have the largest volume of a stability box, the developed algorithm selects one of them due to a simple heuristic. The efficiency of the constructed permutation is demonstrated on a large set of randomly generated instances with 10rnr1000. & 2011 Elsevier Ltd. All rights reserved.	algorithm;heuristic;job stream;procedural generation;scheduling (computing);single-machine scheduling	Yuri N. Sotskov;T.-C. Lai	2012	Computers & OR	10.1016/j.cor.2011.02.001	mathematical optimization;combinatorics;von neumann stability analysis;discrete mathematics;mathematics	Theory	15.420460636011809	9.659093677001897	187497
3ae5c82253a2c937ce29d469a09ed19c1009409b	a worst-case analysis for the split delivery vehicle routing problem with minimum delivery amounts		In the vehicle routing problem (VRP), a fleet of vehicles must service the demands of customers in a least-cost way. In the split delivery vehicle routing problem (SDVRP), multiple vehicles can service the same customer by splitting the deliveries. By allowing split deliveries, savings in travel costs of up to 50 % are possible, and this bound is tight. Recently, a variant of the SDVRP, the split delivery vehicle routing problem with minimum delivery amounts (SDVRP-MDA), has been introduced. In the SDVRP-MDA, split deliveries are allowed only if at least a minimum fraction of a customer’s demand is delivered by each visiting vehicle. We perform a worst-case analysis on the SDVRP-MDA to determine tight bounds on the maximum possible savings.	best, worst and average case;claudia neuhauser;ibm monochrome display adapter;vehicle routing problem	Yupei Xiong;Damon Gulczynski;Daniel J. Kleitman;Bruce L. Golden;Edward A. Wasil	2013	Optimization Letters	10.1007/s11590-012-0554-9	mathematical optimization	Theory	15.860753954874271	4.710315907419925	188735
56a0045558d2a24539463613abca2f8bea6d6cec	a computational approach to optimized appointment scheduling	healthcare;utility functions;68q87;universiteitsbibliotheek;appointment scheduling;90b36;d g 1 queue;60k25;phase type distribution;68m20	Appointment scheduling is prevalent in various healthcare settings. Generally, the objective is to determine a schedule (i.e., the sequence of epochs at which the individual patients are asked to appear) that appropriately balances the interests of the patients (low waiting times) and the medical staff (low idle times). In queueing language, the planner is given the distributions of the service times of the individual clients, and then it is his task to determine the arrival epochs of the clients. In this paper, we demonstrate how to generate schedules that have certain optimality properties. As a general principle, we express the performance of a schedule in terms of its associated utility, which incorporates both waiting times and idle times. In a first class of schedules (referred to as the simultaneous approach), the arrival epochs are chosen such that the sum of the utilities of all clients as well as the service provider is minimized. In a second class (sequential approach), the arrival epoch of the next client is scheduled, given the scheduled arrival epochs of all previous clients. For general service times the numerical evaluation of the optimal schedules is often prohibitive; it essentially requires knowledge of the waiting-time distribution in an appropriately chosen D/G/1 queue. In this paper, we demonstrate that by using the phase-type counterparts of the service-time distributions, it is feasible to efficiently determine an optimized schedule, that is, we obtain accurate results with low computational effort. We do so both for transient scenarios (in which the number of clients is relatively low, so that the interarrival time is not uniform) and stationary scenarios (with many clients, and A. Kuiper (B) · B. Kemper Institute for Business and Industrial Statistics, University of Amsterdam, Plantage Muidergracht 12, 1018 TV Amsterdam, The Netherlands e-mail: a.kuiper@uva.nl M. Mandjes Korteweg-de Vries Institute for Mathematics, University of Amsterdam, Science Park 904, 1098 XH Amsterdam, The Netherlands	british undergraduate degree classification;computation;crew scheduling;email;epoch (reference date);first-class function;norm (social);numerical analysis;schedule (computer science);scheduling (computing);stationary process	Alex Kuiper;Benjamin Kemper;Michel Mandjes	2015	Queueing Syst.	10.1007/s11134-014-9398-6	real-time computing;simulation;computer science;mathematics;phase-type distribution;statistics	Metrics	13.404833545410531	10.171258620416413	189195
d01d1d7a239109a71d03f1d2c1ebdddc251d4780	an asymptotically optimal algorithm for large-scale mixed job shop scheduling to minimize the makespan	期刊论文	This paper considers the large-scale mixed job shop scheduling problem with general number of jobs on each route. The problem includes ordinary machines, batch machines (with bounded or unbounded capacity), parallel machines, and machines with breakdowns. The objective is to find a schedule to minimize the makespan. For the problem, we define a virtual problem and a corresponding virtual schedule, based on which our algorithm TVSA is proposed. The performance analysis of the algorithm shows the gap between the obtained solution and the optimal solution is O(1), which indicates the algorithm is asymptotically optimal.	asymptotically optimal algorithm;job shop scheduling;makespan;scheduling (computing)	Manzhan Gu;Xiwen Lu;Jinwei Gu	2017	J. Comb. Optim.	10.1007/s10878-015-9974-7	job shop scheduling;mathematical optimization;flow shop scheduling;mathematics;distributed computing	Web+IR	15.438627767057039	9.65931097889128	189564
26f5eb9582e90bf98d9dd8de250114fc3b38b97d	a simple linear time algorithm for scheduling with step-improving processing times	workload;metodo caso peor;performance guarantee;approximation lineaire;tiempo total acabamiento;approximate algorithm;gestion labor;machine unique;approximation algorithm;temps lineaire;temps total achevement;linear approximation;linear time algorithm;tiempo lineal;worst case ratio;processing time;single machine;maquina unica;gestion tâche;makespan;scheduling;linear time;aproximacion lineal;algoritmo aproximacion;charge travail;methode cas pire;temps traitement;task scheduling;algorithme approximation;carga trabajo;worst case method;tiempo proceso;journal magazine article;ordonnancement;reglamento	We consider the problem of scheduling jobs with step-improving processing times around a common critical date on a single machine to minimize the makespan. For this problem, we present a simple linear time off-line approximation algorithm and prove its worst-case performance guarantee.	algorithm;scheduling (computing);time complexity	Min Ji;Yong Jun He;T. C. Edwin Cheng	2007	Computers & OR	10.1016/j.cor.2005.09.011	fair-share scheduling;time complexity;job shop scheduling;mathematical optimization;dynamic priority scheduling;computer science;artificial intelligence;mathematics;scheduling;approximation algorithm;algorithm;linear approximation	Theory	16.870934986562375	10.87110965914617	189606
e1cd92ffb9c0c3a54439fe9489f0c3cca8740249	repetitive sequencing: from workcell tasks to workcell cycles	cycle time;sage;job shop scheduling;sequencing analysis;workcell cycles;manufacturing industries;workcell tasks;repetitive sequencing;assembly;prolog based decision support system;manufacturing processes;decision support system;production control;robot vision;multirobot assembly repetitive sequencing workcell tasks workcell cycles repetitive tasks sequencing analysis prolog based decision support system sage;machine vision;industrial robots;job shop scheduling robot vision systems machine vision robot programming throughput decision support systems assembly manufacturing industries manufacturing processes flow production systems;decision support systems;flow production systems;repetitive tasks;sequence analysis;multirobot assembly;repetitive sequence;production control decision support systems industrial robots;robot vision systems;robot programming;throughput;partial order	Given a workcell program defined as a set of repetitive tasks to be concurrently performed, one can associate with each workcell element (robots, vision systems, etc.) a repetitive partial order of operations; together, they define a workcell cycle. An evaluation of such cycles in terms of cycle time, task throughput, and machine utilization is proposed. To automate the sequencing analysis, a Prolog-based decision-support system, SAGE (sequence analysis by generalized enumeration), is presented. Given the specification of the work-cell program in terms of the operations to be performed by each workcell element, SAGE constructs all feasible cycles for exploring the space for all possible time evolutions of workcell behavior. Three variations on the same multirobot assembly example are used to illustrate the approach. >		Paul Freedman;Rachid Alami	1990		10.1109/ROBOT.1990.126294	partially ordered set;throughput;real-time computing;decision support system;cycle time variation;computer science;engineering;artificial intelligence;sequence analysis;assembly;manufacturing;manufacturing engineering	NLP	10.845570007280456	5.562475180912764	189719
4951c0dd3065bab6707a9aa32b15febd1ec7ba0a	stochastic and robust scheduling in the cloud	004;approximation algorithms robust optimization stochastic optimization unrelated machine scheduling cloud computing	Users of cloud computing services are offered rapid access to computing resources via the Internet. Cloud providers use different pricing options such as (i) time slot reservation in advance at a fixed price and (ii) on-demand service at a (hourly) pay-as-used basis. Choosing the best combination of pricing options is a challenging task for users, in particular, when the instantiation of computing jobs underlies uncertainty. We propose a natural model for two-stage scheduling under uncertainty that captures such resource provisioning and scheduling problem in the cloud. Reserving a time unit for processing jobs incurs some cost, which depends on when the reservation is made: a priori decisions, based only on distributional information, are much cheaper than on-demand decisions when the actual scenario is known. We consider both stochastic and robust versions of scheduling unrelated machines with objectives of minimizing the sum of weighted completion times ∑ j wjCj and the makespan maxj Cj . Our main contribution is an (8+ )-approximation algorithm for the min-sum objective for the stochastic polynomial-scenario model. The same technique gives a (7.11 + )approximation for minimizing the makespan. The key ingredient is an LP-based separation of jobs and time slots to be considered in either the first or the second stage only, and then approximately solving the separated problems. At the expense of another our results hold for any arbitrary scenario distribution given by means of a black-box. Our techniques also yield approximation algorithms for robust two-stage scheduling. 1998 ACM Subject Classification F.2.2 Nonnumerical Algorithms and Problems, G.2.1 Combinatorics, G.3 Probability and Statistics	approximation algorithm;black box;cloud computing;internet;job stream;makespan;maxima and minima;polynomial;provisioning;robustness (computer science);scheduling (computing);stochastic process;universal instantiation	Lin Chen;Nicole Megow;Roman Rischke;Leen Stougie	2015		10.4230/LIPIcs.APPROX-RANDOM.2015.175	fair-share scheduling;mathematical optimization;real-time computing;computer science;operations management	Theory	14.26874872933428	10.641626119450256	190323
d7d9443b741096e921248c17760b74a742d811a9	the capacitated lot-sizing and scheduling problem with sequence-dependent setup costs and setup times	optimal solution;heuristic;tiempo iniciacion;solution optimale;sequencage;sequence dependent;heuristic method;exact solution;metodo heuristico;temps mise en route;sequencing;single machine;mixed integer program;setup time;programacion mixta entera;tamano lote;taille lot;approximate solution;scheduling;solucion optima;programmation partiellement en nombres entiers;scheduling problem;lot sizing;mixed integer programming;relaxation;methode heuristique;ordonnancement;lower bound;reglamento	We consider the single machine capacitated lot-sizing and scheduling problem (CLSP) with sequencedependent setup costs and non-zero setup times, with the additional feature that setups may be carried over from one period to the next, and that setups are preserved over idle periods. We provide an exact formulation of this problem as a mixed-integer program. It is well known that the CLSP is NP-hard. Therefore, we have also developed a heuristic for solving large problem instances. This is coupled with a procedure for obtaining a lower bound on the optimal solution. We carry out a computational study to test the accuracy of several di5erent lower bounding linear relaxations and the approximate solution obtained by the heuristic. In our study, the average deviation of the heuristic solution from the corresponding exact solution depends on the size of the problem and ranges from 10 to 16%. The heuristic is more e5ective when there are many more products than there are planning periods. This is a desirable property from a practical viewpoint since most 9rms are likely to implement such a procedure on a rolling horizon basis, solving the problem repeatedly for a few periods at a time. ? 2003 Elsevier Ltd. All rights reserved.	approximation algorithm;heuristic;horizon effect;integer programming;linear programming;scheduling (computing)	Diwakar Gupta;Thorkell Magnusson	2005	Computers & OR	10.1016/j.cor.2003.08.014	job shop scheduling;mathematical optimization;combinatorics;heuristic;integer programming;computer science;sequencing;relaxation;mathematics;upper and lower bounds;scheduling	AI	17.21870625135043	9.293939416754665	190619
0730b1bd6d4db12748511e1b4ab8a77516e0ea37	a heuristic approach for u-shaped assembly line balancing to improve labor productivity	assembly line balancing;labor productivity;critical path method;u shaped line;heuristics	The assembly line balancing problem is a non deterministic polynomial type planning problem for mass production. Layout design changes constitute a major decision that yields investment for assembly operations and numerous heuristics have been reported in the literature for solving the line balancing problems. U-shaped assembly layout offers several benefits over traditional straight-line layout in implementation of lean manufacturing and Just-In-Time technology. In the paper an attempt has been made to evaluate labor productivity in U-shaped line system and straight line system. A Critical Path Method (CPM) based approach for U-shaped assembly line has been applied for assigning the task to the work stations for assembly line layout. Results show that the CPM based U-shaped approach performs better and improve the labor productivity of assembly line layout. 2013 Elsevier Ltd. All rights reserved.	critical path method;heuristic (computer science);just-in-time compilation;polynomial	Shwetank Avikal;Rajeev Jain;P. K. Mishra;H. C. Yadav	2013	Computers & Industrial Engineering	10.1016/j.cie.2013.01.001	computer science;engineering;operations management;industrial engineering;critical path method;heuristics;engineering drawing	AI	12.951943499471886	4.44965608017374	191516
21ed13d298210a12ee736e57c2226a3a9980cf44	scheduling of different automated yard crane systems at container terminals	yard crane;container terminal;scheduling;branch and bound;rmg	Full terms and conditions of use: http://pubsonline.informs.org/page/terms-and-conditions This article may be used only for the purposes of research, teaching, and/or private study. Commercial use or systematic downloading (by robots or other automatic processes) is prohibited without explicit Publisher approval, unless otherwise noted. For more information, contact permissions@informs.org. The Publisher does not warrant or guarantee the article’s accuracy, completeness, merchantability, fitness for a particular purpose, or non-infringement. Descriptions of, or references to, products or publications, or inclusion of an advertisement in this article, neither constitutes nor implies a guarantee, endorsement, or support of claims made of that product, publication, or service. Copyright © 2016, INFORMS	download;institute for operations research and the management sciences;robot	Ulf Speer;Kathrin Fischer	2017	Transportation Science	10.1287/trsc.2016.0687	mathematical optimization;simulation;computer science;engineering;operations management;operating system;transport engineering;scheduling;branch and bound	Logic	13.281832369171438	5.082207976073466	191529
ece0d8649f1d8e71798caaf4c58a28f3431c76ed	production re-sequencing for manufacturing based on discrete event simulation and fuzzy inference	flexible manufacturing systems;inference mechanisms;production process;fuzzy logic;production virtual manufacturing discrete event simulation delay fuzzy systems graphics manufacturing systems flexible manufacturing systems decision making discrete event systems;discrete event system;flow production systems discrete event systems fuzzy logic inference mechanisms flexible manufacturing systems;simulation technique;flexible manufacturing system;fuzzy inference;discrete event systems;flow production systems;manufacturing system;decision making production resequencing discrete event system simulation fuzzy inference production process fuzzy logic automated manufacturing system flexible manufacturing system;discrete event simulation	The simulation technique has been used to solve many problems that occur in the production process. Whenever an event occurs, many alternatives (scenarios) can be generated in order to solve the problem. However, as much as the number of scenarios to be simulated becomes higher, the time spent in this process grows, implicating in a difficult task to find a good solution. This work proposes a method using fuzzy logic to select the best scenario in order to do the choice task on an automatic way. Using this method it's possible to set the new conditions to an automated manufacturing system reorganizing it and reacting automatically if an event occurs.	fuzzy logic;simulation	Marcelo Climaites Fernandes;Andre Henrique de Freitas;Orides Morandin;Edilson R. R. Kato	2003		10.1109/ICSMC.2003.1245737	fuzzy logic;fuzzy electronics;real-time computing;adaptive neuro fuzzy inference system;computer science;artificial intelligence;discrete event simulation;scheduling;computer-integrated manufacturing;fuzzy control system	Robotics	10.8118296397112	5.948933404353545	191668
1831977ca18457c332effd4341f44fe392c81a38	a dynamic programming algorithm for the knapsack problem with setup	dynamic programming;combination;knapsack problems;production planning;setup	The Knapsack Problem with Setup (KPS) is a generalization of the classical Knapsack problem (KP), where items are divided into families. An individual item can be selected only if a setup is incurred for the family to which it belongs. This paper provides a dynamic programming (DP) algorithm for the KPS that produces optimal solutions in pseudo-polynomial time. In order to reduce the storage requirements of the algorithm, we adopt a new technique that consists in converting a KPS solution to an integer index. Computational experiments on randomly generated test problems show the efficiency of the DP algorithm compared to the ILOG's commercial product CPLEX 12.5. & 2015 Elsevier Ltd. All rights reserved.	cplex;computation;davis–putnam algorithm;dynamic programming;experiment;ilog;knapsack problem;pixel;polynomial;procedural generation;pseudo-polynomial time;requirement;time complexity	Khalil Chebil;Mahdi Khemakhem	2015	Computers & OR	10.1016/j.cor.2015.05.005	continuous knapsack problem;mathematical optimization;discrete mathematics;combination;change-making problem;dynamic programming;mathematics;knapsack problem;algorithm	AI	16.34256929499501	6.7445931467221545	192768
f36f8213d9a241b8a991cf33e306a22bd193a5bf	open shop scheduling with makespan and total completion time criteria	asymptotic optimality;polynomial time algorithm;polynomial time;scheduling problem	Abstract   In this paper we study the two machine open shop scheduling problem with a hierarchical objective: minimize the total completion time subject to minimum makespan. We show that this problem is distinct from the closely related problem of minimizing the total completion time. We develop polynomial-time algorithms for three special cases and an asymptotically optimal polynomial-time heuristic when a machine is dominant. We also extend some of our results to the three machine open shop case.   Scope and purpose   Hierarchical scheduling objectives are common in many production environments. When there is no predetermined order of job operations, the resulting scheduling problem is an open shop. The main criterion associated with open shop scheduling problems is the minimization of the maximum job completion time (makespan). In a hierarchical environment, we are then interested in minimizing individual job completion times. The objective of this paper is to derive algorithms for minimizing the sum of job completion times subject to minimum makespan for various two machine and three machine open shop problems.		George J. Kyparisis;Christos Koulamas	2000	Computers & OR	10.1016/S0305-0548(99)00005-2	time complexity;job shop scheduling;mathematical optimization;real-time computing;flow shop scheduling;computer science;mathematics	AI	15.519982851381688	9.726371142074049	193281
247fe052adcd8a7948076efe004e82860585be87	the data broadcast problem with non-uniform transmission times	time average;continuous time;linear combination;randomized algorithms;approximate algorithm;temps service;approximation algorithms;approximation algorithm;np completeness;randomised algorithms;radiodifusion;problema np duro;discrete time;promedio temporal;transmission message;tiempo servicio;algorithme randomise;diffusion telecommunications;service time;delai transmission;message transmission;approximation;transmission time;np hard problem;probleme np difficile;combinacion lineal;scheduling;envoi message;diffusion donnee;algoritmo aproximacion;difusion dato;randomized algorithm;message passing;data broadcasting;scheduling problem;ordonamiento;data broadcast;broadcasting;algorithme approximation;plazo transmision;radiodiffusion;ordonnancement;combinaison lineaire;bounding box;moyenne temporelle;transmision mensaje	The Data Broadcast Problem consists of finding an infinite schedule to broadcast a given set of messages so as to minimize a linear combination of the average service time to clients requesting messages, and of the cost of the broadcast. This problem also models the Maintenance Scheduling Problem and the Multi-Item Replenishment Problem. Previous work concentrated on a discrete-time restriction where all messages have transmission time equal to 1. Here, we study a generalization of the model to a setting of continuous time and messages of non-uniform transmission times. We prove that the Data Broadcast Problem is strongly NP -hard, even if the broadcast costs are all zero, and give 3-approximation algorithms.	algorithm;broadcasting (networking);scheduling (computing)	Claire Mathieu;Nicolas Schabanel	1999	Algorithmica	10.1007/s00453-002-0990-5	broadcast radiation;atomic broadcast;computer science;theoretical computer science;mathematics;distributed computing;randomized algorithm;approximation algorithm;algorithm;terminating reliable broadcast	Theory	17.231406495532028	11.0089886680347	195003
b24e2f92cfa8c4927d681dc1ca80ba938d94c6c4	a copula-based hybrid estimation of distribution algorithm for m-machine reentrant permutation flow-shop scheduling problem			estimation of distribution algorithm;flow shop scheduling;reentrancy (computing);scheduling (computing)	Bin Qian;Zuo-Cheng Li;Rong Hu	2017	Appl. Soft Comput.	10.1016/j.asoc.2017.08.037		ECom	14.354528482610283	6.643825551306498	195154
c1cb1682332306568a2e7c01333de626755c4c05	reconfiguring flexible machine modules of a pcb assembly line	machine reconfiguration;line balancing;flexible manufacturing;genetic algorithm;printed circuit board;modular placement machine;local search	Assembly of electronic components to Printed Circuit Boards (PCB) is a complicated manufacturing process and therefore its control is usually divided into several subtasks which are handled separately. We consider the combined task of determining a machine configuration and line balancing for a single assembly line of interconnected, reconfigurable machine modules and one PCB type in production. The modules can be tailored to the needs of each PCB type by suitable assignments for placement heads, nozzles and feeders. Out of these, the component-to-machine assignment appears to be most difficult and we propose five different solution methods for it; brute force, random, greedy, local search and genetic algorithm. The genetic algorithm outperformed the other methods in practical test.	assembly language;printed circuit board	Attila Tóth;Timo Knuutila;Olli Nevalainen	2010	Production Engineering	10.1007/s11740-009-0200-2	embedded system;genetic algorithm;computer science;engineering;local search;printed circuit board;engineering drawing;manufacturing engineering	Robotics	13.314756465537121	4.548371328744906	195861
4d0c3da36e524cf34b29e5b03f43d7bec8ef9ec3	no-wait job shop scheduling: tabu search and complexity of subproblems	decomposition;job shop scheduling;complexity;no wait;90b35 deterministic scheduling theory;tabu search algorithm;scheduling;job shop;tabu search;flow shop	This paper deals with the no-wait job shop problem with a makespan objective. We present some new theoretical properties on the complexity of subproblems associated with a well-known decomposition approach. Justified by the complexity results, we implement a fast tabu search algorithm for the problem at hand. It is extensively tested on known benchmark instances and compares favorably to the best existing algorithms for the no-wait job shop as well as the no-wait flow shop.	job shop scheduling;tabu search	Christoph J. Schuster	2006	Math. Meth. of OR	10.1007/s00186-005-0056-y	job shop scheduling;mathematical optimization;complexity;flow shop scheduling;tabu search;computer science;distributed computing;decomposition;scheduling	AI	16.036031999981653	8.19024542252684	196857
0655af0a9025ff66e3eb205b220f3d0eac77098a	capability-based planning and scheduling for adaptable manufacturing systems	topology;scheduling manufacturing systems production engineering computing production planning;materials schedules production facilities job shop scheduling topology;job shop scheduling;material flow capability based planning capability based scheduling adaptable manufacturing system manufacturing enterprise capability based approach production planning production scheduling factory topology;materials;production facilities;schedules	Manufacturing enterprises can only stay profitable if they manage to flexibly respond to changes in markets by adapting their products, product variants, and product volumes. To support such variety in products, we suggest a capability-based approach for production planning and scheduling. Production plans and machines are described in terms of required capabilities and provided capabilities respectively. Additionally, the topology of the factory is described. We propose to combine these descriptions to automatically generate production schedules that consider the material flow in the factory. For each production plan, our approach generates a valid schedule for the currently available machines in the factory without manually reconfiguring the software. The evaluation of the approach on an industrial production system used for educational purposes shows the suitability of this approach.	automated planning and scheduling;capability-based security;content-control software;dynamic language runtime;material flow;production system (computer science);schedule (computer science);scheduling (computing)	Nadine Keddis;Gerd Kainz;Alois Zoitl	2014	Proceedings of the 2014 IEEE Emerging Technology and Factory Automation (ETFA)	10.1109/ETFA.2014.7005213	fair-share scheduling;job shop scheduling;flow shop scheduling;dynamic priority scheduling;schedule;computer science;engineering;industrial engineering;scheduling;material requirements planning;manufacturing engineering	Robotics	11.80140678185233	4.726176727073873	197166
8ffbd2f9aac740545bbcb2634221162d7572eb1a	embedded simulation on a multiprocessor job scheduling system with inspection	multiprocessor systems;first in first out;queue length;multiprocessor job scheduling;inspection;power supply;real world application;container terminal;original equipment manufacturer;simulation technique;waiting time;embedded simulation;production scheduling;job scheduling;simulation model;heuristic algorithm	This paper first develops architecture for a multiprocessor job scheduling system with an embedded simulation technique. The architecture provides a shell for applications that are characterized by two scheduling policies, a heuristic algorithm policy and a First-In-First-Out (FIFO) policy. These policies are implemented in the simulation model by using the embedded technique. The paper evaluates these two policies using the queue length, waiting time and flow time as the criteria to compare the performance of these two scheduling policies. Next we designed two simulation situations using two different real world applications. The purpose is to examine the performances of multiprocessor systems with and without inspection operations and two different scheduling policies. The two applications, berth allocation for the container terminal operations and production scheduling arrangement in an Original Equipment Manufacturer (OEM) power supply factory, are studied. The final results show that a proper scheduling policy will perform better than the traditional FIFO approach for a multiprocessor system. Our study also provides guidelines on balancing a system with the addition of a final inspection activity. 2008 Elsevier Ltd. All rights reserved.	algorithm;embedded software;embedded system;fifo (computing and electronics);heuristic (computer science);job scheduler;multiprocessing;performance;power supply;production (computer science);scheduling (computing);simulation	Kang-hung Yang;P. Simin Pulat;Yongpei Guan	2009	Computers & Industrial Engineering	10.1016/j.cie.2008.09.011	heuristic;fair-share scheduling;fixed-priority pre-emptive scheduling;embedded system;mathematical optimization;real-time computing;earliest deadline first scheduling;flow shop scheduling;inspection;dynamic priority scheduling;fifo and lifo accounting;computer science;engineering;rate-monotonic scheduling;operations management;job scheduler;original equipment manufacturer;operating system;two-level scheduling;simulation modeling;scheduling;least slack time scheduling;lottery scheduling;round-robin scheduling;multiprocessor scheduling	Embedded	11.673265950301483	4.865900769541418	197306
f97643b01d4f1f8a86bc38c0c94727eca2c6eefa	batch scheduling with deadlines on parallel machines	approximate algorithm;time complexity;parallel machine scheduling;computational complexity;parallel machines;polynomial approximation	The problem of scheduling G groups of jobs on m parallel machines is considered. Each group consists of several identical jobs. We have to find splittings of groups into batches (i.e. sets of jobs to be processed contiguously) and to schedule the batches on the machines. It is possible for different batches of the same group to be processed concurrently on different machines. However, at any time, a batch can be processed on at most one machine. A sequence-independent machine set-up time is required immediately before a batch of a group is processed. A deadline is associated with each group. The objective is to find a schedule which is feasible with respect to deadlines. The problem is shown to be NP-hard even for the case of two identical machines, unit processing times, unit set-up times and a common deadline. It is strongly NP-hard if machines are uniform, the number of jobs in each group is equal and processing times, set-up times and deadlines are unit. Special cases which are polynomially solvable are discussed. For the general problem, a family {DP ɛ } of approximation algorithms is constructed. A new dynamic rounding technique is used to develop DP ɛ . For any ɛ > 0, DP ɛ delivers a schedule in which the completion time of each group is at most (1 + ɛ) times the value of its deadline if there exists a schedule which is feasible with respect to the deadlines. The time complexity of DP ɛ is O(G 2m+1 /ɛ 2m ). Copyright Kluwer Academic Publishers 1998	job scheduler;scheduling (computing)	Peter Brucker;Mikhail Y. Kovalyov;Yakov M. Shafransky;Frank Werner	1998	Annals OR	10.1023/A:1018912114491	time complexity;real-time computing;computer science;operations management;distributed computing;computational complexity theory	HPC	15.537015861063157	10.25981062373355	197487
dddc4ee0660515d61c216c1e2de617a8d6eba452	flow shop scheduling to minimize makespan with decreasing time-dependent job processing times	dominating machines;makespan;scheduling;deteriorating jobs;flow shop	In this study, we consider an n-job, m-machine flow shop scheduling problem with decreasing timedependent job processing times. By the decreasing time-dependent job processing times, we mean that the processing time is a decreasing function of its execution starting time. When some dominant relationships between m 1 machines can be satisfied, we show that the makespan minimization problem can be solved in polynomial time. 2011 Elsevier Ltd. All rights reserved.	convex optimization;flow shop scheduling;makespan;polynomial;scheduling (computing);time complexity	Xiao-Yuan Wang;Ming-Zheng Wang;Ji-Bo Wang	2011	Computers & Industrial Engineering	10.1016/j.cie.2011.02.003	job shop scheduling;mathematical optimization;real-time computing;flow shop scheduling;computer science;operations management;distributed computing;scheduling	AI	16.05098453388201	9.526726629713037	198076
0cae0a54cb4d3a20784a00a3c0574eccdafdc4b7	robust resource allocations in temporal networks	location problem;optimal resource allocation;robust optimisation;resource allocation;90 02;resource allocation problem;90c25;90b15;temporal networks	Temporal networks describe workflows of time-consuming tasks whose processing order is constrained by precedence relations. In many cases, the durations of the network tasks can be influenced by the assignment of resources. This leads to the problem of selecting an ‘optimal’ resource allocation, where optimality is measured by network characteristics such as the makespan (i.e., the time required to complete all tasks). In this paper, we study a robust resource allocation problem where the functional relationship between task durations and resource assignments is uncertain, and the goal is to minimise the worst-case makespan. We show that this problem is generically NP-hard. We then develop convergent bounds for the optimal objective value, as well as feasible allocations whose objective values are bracketed by these bounds. Numerical results provide empirical support for the proposed method.	application domain;approximation algorithm;benchmark (computing);best, worst and average case;branch and bound;circuit design;convex optimization;directed acyclic graph;dynamic programming;makespan;mathematical optimization;np-hardness;numerical method;recursion;robust optimization;scheduling (computing);time complexity;unique sink orientation	Wolfram Wiesemann;Daniel Kuhn;Berç Rustem	2012	Math. Program.	10.1007/s10107-011-0478-7	mathematical optimization;resource allocation;computer science;distributed computing	AI	14.557603330229204	8.134442976291405	198166
db529ed78737c5da902227f084a0993c173689e5	adaptive peer selection strategy in p2p-vod systems based on dynamic metaheuristic	p2p-vod systems;multiple local-search algorithm;resource allocation;adaptive peer selection strategy;large deployment;dynamic optimization;peer-to-peer video-on demand;peers resource allocation;dynamic metaheuristic;new challenge;dynamic resource allocation;offline study	During the past decade, Peer-to-Peer Video-on Demand (VoD) systems have proved their efficiency for large deployments. They raise new challenges such as peers resource allocation. Most literature on resource allocation tackle the problem with optimal static rules found at offline study of the system. In this paper, we use a dynamic metaheuristic, called Multiple Local-Search Algorithm for Dynamic Optimization (MLSDO) to optimize the problem at hand. The obtained results show that using a dynamic resource allocation reduces the rejection rate while enhancing the entropy of the system, in the face of a dynamically changing title demand.	local search (optimization);metaheuristic;online and offline;peer-to-peer;rejection sampling;search algorithm	Thibaud Rohmer;Amir Nakib;Julien Lepagnot;Abdelhamid Nafaa	2013	2013 International Conference on Parallel and Distributed Systems	10.1109/ICPADS.2013.73	system on a chip;multi-core processor;embedded system;thread;parallel computing;real-time computing;real-time operating system;systems modeling;reconfigurable computing;resource allocation;computer science;posix threads;operating system;instruction set;distributed computing;green threads;evolution strategy;bayes' theorem;field-programmable gate array;server;process	Robotics	11.995995261843577	9.352592743957189	198621
87c5e0b8bae8f3e697d16cb7293445cee5a482b0	or practice - the dance of the thirty-ton trucks: dispatching and scheduling in a dynamic environment	modelizacion;dynamic programming;time space networks;zona urbana;optimisation;duracion trayecto;programacion dinamica;entrega;programacion entera;repartiteur;travel time;probleme livraison;optimizacion;systeme aide decision;producto perecedero;informacion incompleta;real time;zone urbaine;grupo de excelencia;beton;vehicle scheduling real time concrete truck scheduling;sistema ayuda decision;operations research;programmation en nombres entiers;hormigon;lorry;modelisation;livraison;incomplete information;integer programming applications dispatching;dynamic environment;planificacion;decision support system;flujo red;transit time;integer programming;recherche operationnelle;ciencias basicas y experimentales;network flows;scheduling;perishable item;matematicas;temps reel;information incomplete;network flows time space networks;programmation dynamique;dispatching problem;temps parcours;tiempo real;urban area;integer programming applications;real time concrete truck scheduling;planning;optimization;repartidor;dispatcher;delivery good;planification;network flow;camion;grupo a;tiempo recorrido;modeling;produit perissable;investigacion operacional;flot reseau;ordonnancement;dispatching;reglamento;problema reparto;concrete;vehicle scheduling;duree trajet	We report on the application of operations research to a very complex scheduling and dispatching problem. Scheduling and dispatching are never easy, but the scheduling of concrete deliveries is particularly difficult for several reasons: (1) concrete is an extremely perishable product—it can solidify in the truck if offloading is delayed by a few hours; (2) customer orders are extremely unpredictable and volatile—orders are often canceled or drastically changed at the last minute; (3) the concrete company overbooks by as much as 20% to compensate for customer unpredictability; (4) many orders require synchronized deliveries by multiple trucks; (5) when a truck arrives at a customer site, the customer may not be ready for the delivery, or a storm may negate the ability to use the concrete; and (6) most of the travel takes place in highly congested urban areas, making travel times highly variable. To assist the dispatchers, schedulers, and order takers at this company, we designed and implemented a decision-support tool consisting of both planning and execution tools. The modules determine whether new orders should be accepted, when drivers should arrive for work, the real-time assignment of drivers to delivery loads, the dispatching of these drivers to customers and back to plants, and the scheduling of the truck loadings at the plants. For the real-time dispatching and order-taking decisions, optimization models are solved to within 1% of optimality every five minutes throughout the day. This nearly continuous reoptimization of the entire system allows quick reactions to changes. The modeling foundation is a time-space network with integer side constraints. We describe each of the models and explain how we handle imperfect data. We also detail how we overcome a variety of implementation issues. The success of this project can be measured, most importantly, by the fact that the tool is being ported by the parent company, Florida Rock, to each of its other ready-mix concrete companies. Second, the corporation is sufficiently convinced of its importance that they have begun promoting this methodology as a “best practice” at the World of Concrete and ConAgg industry conventions.	best practice;mathematical optimization;operations research;pet rock;real-time clock;real-time computing;real-time transcription;schedule (project management);scheduling (computing)	Martin Durbin;Karla Hoffman	2008	Operations Research	10.1287/opre.1070.0459	mathematical optimization;flow network;simulation;integer programming;decision support system;computer science;operations management;mathematics;operations research;algorithm		16.47684864038303	5.436571289718277	199072
6a6f84115ac53e6566c9e1c2bf6b1327ab16f4fe	hierarchical control structures for multi-cell flexible assembly system co-ordination	control systems;control systems assembly systems electrical equipment industry production systems real time systems circuit testing job shop scheduling microcomputers electronics industry industrial electronics;job shop scheduling;real time;hierarchical control;industrial electronics;electrical equipment industry;single cell;approximate solution;electronics industry;production systems;assembly systems;circuit testing;microcomputers;printed circuit board assembly;real time systems	Recently, there has been substantial interest in multi-stage, multi-cell Flexible Assembly Systems for Electronic (Printed Circuit Board) Assembly. Previous work (Akella et.al 1984: Gershwin et.al. 1985; Akella and Kumar, 1986) has concerned real-time dispatch in single cells. There has also been related work on design and production allocation in multi-cell systems by Yao and Shanthikumar (1985, 1986). Here, we formulate and compute approximate solutions to a generic multi-cell, failure prone system with a hierarchical control system.	control flow	Ram Akella;Bruce H. Krogh	1987		10.1109/ROBOT.1987.1088042	job shop scheduling;real-time computing;electronics;computer science;engineering;control system;manufacturing engineering	Robotics	10.526170385367578	5.301880032110927	199111
c8bebba0e0737586a92fddff6e24ebf641558add	scheduling of two parallel machines with linear decreasing time slot costs to minimize total weighted completion time		We consider a scheduling problem with two parallel machines to minimize the sum of total weighted completion time and total machine time slot cost. In this paper we focus on the case of the constant or linear decreasing sequences of time slot costs. We suggest an exact pseudopolynomial DP algorithm for the case of arbitrary integer processing times of jobs. If all jobs have unit processing times, we modify our approach to obtain a polynomial	davis–putnam algorithm;job stream;polynomial;pseudo-polynomial time;scheduling (computing)	Alexander Kononov;Irina N. Lushchakova	2016			scheduling (computing);real-time computing;mathematical optimization;computer science	Theory	15.73943348242841	10.347368872265678	199170
b83c5a980879b9c3b657db01fdc9a8cf6e232f15	sequencing a single machine with due dates and deadlines: an ilp-based approach to solve very large instances	sequencing and scheduling;single machine;deadlines;machine scheduling;tardy jobs;integer linear program	This paper deals with the problem of minimizing the weighted number of tardy jobs on a single machine when both due dates and deadlines are specified for jobs. In the classical three-fields notation the problem is denoted 1|d̄i| ∑ wiUi: a job set N = {1, 2, . . . , n} is given, with weights, processing times, due dates and deadlines wi, pi, di and d̄i respectively, for all i ∈ N . The goal is to find a sequence σ∗ such that Ci ≤ d̄i for all the job completion times Ci, i ∈ N , and F (σ∗) = ∑ {wi : Ci > di} is minimum — or equivalently, f(σ ∗) = ∑ {wi : Ci ≤ di} is maximum. The jobs are executed without idle time or preemption, and all of them are available from time 0 on. From a complexity point of view, the 1|d̄i| ∑ wiUi problem is known to be NP-hard even if wi = 1, for all i ∈ N [1], or if there are no deadlines [2], but it is still unclear whether it is NP-hard in the strong or in the ordinary sense. On the other hand, the basic 1| | ∑ Ui problem is well known to be polynomially solvable by Moore’s algorithm [3]. If release dates are present, the 1|ri| ∑ Ui problem is already NP-hard in the strong sense [4]. Very little work has appeared in literature for the 1|d̄i| ∑ wiUi problem, a state-of-the-art exact algorithm being a branch and bound presented in [6] able to solve instances with up to 300 jobs. A richer literature is available for the deadline-free variant: Potts and Van Wassenhove [5] gave a branch and bound algorithm for solving instances with up to 1, 000 jobs, while M’Hallah and Bulfin [8] propose an exact algorithm capable of handling instances with up to 2, 500 jobs. Several papers are also available for the variants with release dates (see [9, 10, 11]). However, the presence of release dates completely changes the structure of the problem. We note that most of the works on this scheduling problem explicitly avoid to manage the LP relaxation by standard LP tools: in [5] an ILP model is presented, but a specific dynamic programming algorithm is used for solving the relaxation; in [6] no LP is used, the bound being obtained by dynamic programming and state-space relaxation; even in more recent papers like [8] a lagrangian approach is used, and the simplex method is avoided. In this paper we present a compact integer linear programming formulation and, explicitly relying on an LP/ILP solver with minimum additional procedures, we design a simple exact algorithm	branch and bound;decision problem;dynamic programming;exact algorithm;integer programming;job stream;lp-type problem;linear programming formulation;linear programming relaxation;np-hardness;performance;potts model;preemption (computing);scheduling (computing);simplex algorithm;solver;state space	P. Baptiste;Federico Della Croce;Andrea Grosso;Vincent T'Kindt	2010	J. Scheduling	10.1007/s10951-008-0092-6	mathematical optimization;real-time computing;mathematics;distributed computing	Theory	16.11965909523199	9.935293022846961	199211
1498edb333a5c2518f2d37ae2b75602bdc49787f	balancing mixed-model assembly lines using adjacent cross-training in a demand variation environment	bound and remember;demand variation;branch;cross training;mixed model assembly line;branch bound and remember	The internationalization of markets and increased sophistication of consumers have led to an increase in the variety and uncertainty of products demand. It spurs the wide use of flexible production systems in producers. In this study, we aim to present a flexible mixed-model assembly line with adjacent workforce cross-training policy to account for this issue. With the adjacent cross-training, the skill of each task can be learned by two workers in adjacent stations and then task reallocation is possible when demand varies. Whenever the production volume or product mix changes, the only modification of the line is shifting some tasks to the adjacent stations where the workers can deal with. In this way, the line can achieve quick response to demand variation with high efficiency without additional trainings or great changes (such as: employment or layoff). The problem is formulated and some important properties are characterized. Then, a branch, bound and remember (BB&R) algorithm is developed to solve the problem. The efficiency and effectiveness of the proposed algorithm and this policy are tested on 450 representative instances, which are randomly generated on the basis of 25 well-known	algorithm;benchmark (computing);branch and bound;computation;heart rate variability;mathematical model;mixed model;procedural generation	Caijun Yang;Jie Gao	2016	Computers & OR	10.1016/j.cor.2015.07.007	mathematical optimization;simulation;branch;operations research	HCI	14.639604407014975	4.520170867332876	199610
73bbf84735e746881963ebdcfde2813b1311b1fe	computational logistics		The performance of container terminals needs to be improved to adapt the growth of handled containers and maintain port sustainability. This paper provides a methodology to improve the throughput of the container terminal in an energy-efficient way. The behaviors of equipment are considered as consisting of a higher level and a lower level representing discrete-event dynamics and continuous-time dynamics, respectively. These dynamics need to be controlled. For controlling the higher level dynamics, a minimal makespan problem is solved. For this, the minimal time required for carrying out a task at the lower level is needed. The minimal time for carrying out a task at the lower level is obtained by Pontryagin’s MinimumPrinciple. The actual operation time, allowed by the higher level for completing a task by one piece of equipment at the lower level, is determined by the scheduling algorithm at the higher level. The lower level dynamics are controlled using optimal control to achieve the minimal energy consumption when the operation time allowed is given. A simulation illustrates how energy-efficient management of equipment for the minimal makespan could be obtained by the proposed methodology.	algorithm;computation;logistics;makespan;operation time;optimal control;scheduling (computing);simulation;throughput	Dario Pacino;Stefan Voß;Rune Møller Jensen	2013		10.1007/978-3-642-41019-2		Robotics	12.000344516427667	5.301509686002219	199700
