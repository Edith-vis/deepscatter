id	title	keywords	abstract	entities	authors	year	journal	doi	fos	area	x	y	ix
dfe5316717df5f9393e7a2156ca5e0cd12e54165	an algorithm for automatic line routing on schematic drawings	automatic line routing;primary goal;schematic drawings;manual intervention;automated line routing	An algorithm has been developed to produce automated line routing for Schematic Drawings. Aesthetics, elimination of manual interventions, reliability and consistency of results were among the primary goals of this development.	algorithm;central processing unit;frame language;ibm system/370;influence line;mainframe computer;router (computing);routing;schematic;via c3	R. J. Brennan	1975			computer vision;computer science;engineering drawing;algorithm	EDA	11.765090587791898	51.18717618031012	135017
507ee9d5a0572831e2b22606ceb1372973f1e205	zero skew clock-tree optimization with buffer insertion/sizing and wire sizing	network routing integrated circuit design integrated circuit interconnections circuit optimisation timing vlsi;clocks wire timing convergence routing delay effects algorithm design and analysis iterative algorithms very large scale integration polynomials;convergence;delay power tradeoffs;iterative algorithms;clocks;routing;very large scale integration;delay effects;very large scale integrated;indexing terms;polynomials;network routing;wire;clock distribution;integrated circuit design;industrial clock tree;wire sizing;integrated circuit interconnections;polynomial time;vlsi;1 2 ghz pentium iv pc;buffer sizing;timing convergence zero skew clock tree optimization buffer insertion buffer sizing wire sizing clock distribution very large scale integration delay power tradeoffs clocktune delay minimisation power minimisation polynomial time industrial clock tree 1 2 ghz pentium iv pc;clocktune;circuit optimisation;timing convergence;high performance;clock skew;power minimisation;buffer insertion;algorithm design and analysis;zero skew clock tree optimization;delay minimisation;timing	Clock distribution is crucial for timing and design convergence in high-performance very large scale integration designs. Minimum-delay/power zero skew buffer insertion/sizing and wire-sizing problems have long been considered intractable. In this paper, we present ClockTune , a simultaneous buffer insertion/sizing and wire-sizing algorithm which guarantees zero skew and minimizes delay and power in polynomial time. Extensive experimental results show that our algorithm executes very efficiently. For example, ClockTune achieves 45/spl times/ delay improvement for buffering and sizing an industrial clock tree with 3101 sink nodes on a 1.2-GHz Pentium IV PC in 16 min, compared with the initial routing. Our algorithm can also be used to achieve useful clock skew to facilitate timing convergence and to incrementally adjust the clock tree for design convergence and explore delay-power tradeoffs during design cycles. ClockTune is available on the web (http://vlsi.ece.wisc.edu/Tools.htm).	algorithm;clock signal;clock skew;integrated circuit;mathematical optimization;multistage interconnection networks;polynomial;routing;speedup;time complexity;very-large-scale integration	Jeng-Liang Tsai;Tsung-Hao Chen;Charlie Chung-Ping Chen	2004	IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems	10.1109/TCAD.2004.825875	routing;electronic engineering;parallel computing;real-time computing;computer science;timing failure;very-large-scale integration;computer network	EDA	16.8360351290635	52.22334790551361	135130
c5ff807457fac11280495ec5571074e7962d06e0	ensemble representation and techniques for exact control-dependent scheduling	decision tables;diagrams;iterative methods;logic design;parallel processing;scheduling;bdd representation growth;arbitrary forward branching control;benchmark results;clock cycles;closed form solution set;compressed obdd based representation;data paths;data-flow scheduling;ensemble representation;exact control-dependent scheduling;exact formulation;initial bounds;ordered binary decision diagram;resource constraints;robust iterative construction strategy;set-based heuristics	Describes a new exact formulation of control/data-flow scheduling. Unlike current techniques, a closed form solution set is generated in which all satisfying schedules for arbitrary forward branching control/data paths and resource constraints are encapsulated in a compressed ordered binary decision diagram (OBDD) based representation. A robust, iterative construction strategy is presented along with benchmark results. An advantage of this construction is that initial bounds for the number of clock cycles are no longer needed for exact formulations. This strategy also allows the simple formulation of several set-based heuristics as well as controlling the growth of the BDD representation	scheduling (computing)	Ivan P. Radivojevic;Forrest Brewer	1994			mathematical optimization;discrete mathematics;theoretical computer science;mathematics	EDA	16.651629228747318	47.57961895255759	135290
119b7f08f70bcae7ebe13b445f02338b1fe3ed3e	optimizing sequential cycles through shannon decomposition and retiming	efficient algorithm;sequential circuits;timing circuits circuit optimisation pipeline processing sequential circuits;timing circuits;sequential circuits clocks circuit synthesis registers pipelines logic circuits feedback loop delay multiplexing digital circuits;sequential logic circuits shannon decomposition sequential cycles pipelines processing packet processing retiming circuits optimization circuit synthesis;sequential logic circuits circuit optimization circuit synthesis encoding;computer science;circuit optimisation;encoding;high performance;circuit synthesis;pipeline processing;circuit optimization;sequential logic circuits	Optimizing sequential cycles is essential for many types of high-performance circuits, such as pipelines for packet processing. Retiming is a powerful technique for speeding pipelines, but it is stymied by tight sequential cycles. Designers usually attack such cycles by manually combining Shannon decomposition with retiming-effectively a form of speculation-but such manual decomposition is error prone. We propose an efficient algorithm that simultaneously applies Shannon decomposition and retiming to optimize circuits with tight sequential cycles. While the algorithm is only able to improve certain circuits (roughly half of the benchmarks we tried), the performance increase can be dramatic (7%-61%) with only a modest increase in area (1%-12%). The algorithm is also fast, making it a practical addition to a synthesis flow	algorithm;benchmark (computing);cognitive dimensions of notations;network packet;optimizing compiler;pipeline (computing);retiming;shannon (unit)	Cristian Soviani;Olivier Tardieu;Stephen A. Edwards	2006	IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems	10.1109/TCAD.2006.890583	electronic engineering;real-time computing;asynchronous circuit;computer science;theoretical computer science;sequential logic;encoding	EDA	14.616644513551764	47.97021682562478	135548
73345df94f15159567e06cd1780faab2ac8e137d	a multi-functional memory unit with pla-based reconfigurable decoder		An application-specific usage of memory is an important key in development of embedded systems for IoT devices. A functional memory unit such as content addressable memory (CAM) is a good solution for network-specific applications. This work proposes a novel functional memory unit which can reconfigure a function of the memory decoder. In our reconfigurable mechanism, uni-switch cells are introduced to play an alternative role of a logic or a wire, and are embedded in an SRAM memory array. A set of uni-switches is connected and constitutes a programmable logic array (PLA) unit. The PLA has a suitable advantage for a decoder that the multi-input and multi-output function can be realized with a small area, compared with look-up table (LUT). Hence, an extensional function of the decoder is realized by PLA units inside the memory array, and a combination of PLA units provides potentials to configure various functions for stored data such as sorting, filtering, error correction, and encryption/decryption. In this paper, we present a fundamental architecture of our functional memory unit with PLA units, and demonstrate an implementation of 32-bit full adder and 2-bit counter by using PLA units.	32-bit;adder (electronics);codec;color depth;content-addressable memory;embedded system;encryption;error detection and correction;lookup table;network switch;programmable logic array;programmable logic device;sorting;static random-access memory	Nobuyuki Yahiro;Bo Liu;Atsushi Nanri;Shigetoshi Nakatake;Yasuhiro Takashima;Gong Chen	2016	2016 International Conference on ReConFigurable Computing and FPGAs (ReConFig)	10.1109/ReConFig.2016.7857145	shared memory;embedded system;interleaved memory;semiconductor memory;parallel computing;sense amplifier;memory refresh;computer hardware;computer science;computer memory;overlay;conventional memory;extended memory;flat memory model;registered memory;computing with memory;memory map	EDA	11.969714243208717	47.9567038244046	135919
65d8e6ed97fbba9d113895c2140e3a3b758c5982	improving clock-rate of hard-macro designs	clocks;benchmark circuits clock rate hard macro designs precompiled circuit modules xilinx flows hmflow algorithms fpga devices router routing wires greedy placer annealing based placer critical path delay reduction;greedy algorithms;field programmable gate arrays routing clocks fabrics registers wires delays;greedy algorithms clocks field programmable gate arrays;field programmable gate arrays	HMFlow reuses precompiled circuit modules (hard macros) and other techniques to rapidly compile large designs in a few seconds - many times faster than standard Xilinx flows. However, the clock rates of designs rapidly compiled by HMFlow are often significantly lower than those compiled by the Xilinx flow. To improve clock rates, HMFlow algorithms were modified as follows: (1) the router was modified to take advantage of longer routing wires in the FPGA devices, (2) the original greedy placer was replaced with an annealing-based placer, and (3) certain registers were removed from the hard-macro and moved into the fabric to reduce critical-path delays. Benchmark circuits compiled with these modifications can achieve clock rates that are about 75% as fast as those achieved by Xilinx, on average. Fast run-times are also preserved; the improved algorithms only increase HMFlow run-times by about 50% across the benchmark suite so that HMFlow remains more than 30× faster than the standard Xilinx flow for the benchmarks tested in this paper.	benchmark (computing);bitstream;clock rate;compiler;design automation conference;electron;emulator;field-programmable gate array;functional programming;greedy algorithm;international federation for information processing;jean;koch snowflake;lam/mpi;marc (archive);network on a chip;place and route;rapid prototyping;reconfigurable computing;router (computing);routing;simulated annealing;thomas j. watson research center;virtex (fpga)	Christopher Lavin;Brent E. Nelson;Brad L. Hutchings	2013	2013 International Conference on Field-Programmable Technology (FPT)	10.1109/FPT.2013.6718361	embedded system;greedy algorithm;parallel computing;real-time computing;computer science;operating system;field-programmable gate array	EDA	14.19660541193893	50.93478105891838	137077
80dc2eb85cb727a1c73561326e9a88984c2ebdf3	design automation tasks scheduling for enhanced parallel execution of a state-of-the-art layout-aware sizing approach		This paper presents an innovative methodology to efficiently schedule design automation tasks during the execution of an analog IC layout-aware sizing process. The referred synthesis process includes several sub-tasks such as DC simulation, floorplanning, placement, global routing, parasitic extraction, and circuit simulations in multiple worst case corners. The schedule of the design tasks is here optimized taking into account standard multi-core architectures, tasks dependencies, accurate time estimations for each task and a limited number of licenses for using commercial tools, e.g., number of simulator licenses. The proposed methodology, first, considers a directed acyclic graph for representing the design flow and task dependencies, then, an evolutionary kernel is used to implement a single-objective multi-constraint optimization. The efficiency and impact of the proposed approach is validated by using a state-of-the-art Analog IC design automation environment.	automation;best, worst and average case;constrained optimization;directed acyclic graph;floorplan (microelectronics);integrated circuit design;integrated circuit layout;mathematical optimization;multi-core processor;routing;scheduling (computing);simulation	David Neves;Ricardo M. F. Martins;Nuno M T Lourenço;Nuno Horta	2016	2016 Design, Automation & Test in Europe Conference & Exhibition (DATE)		physical design;embedded system;floorplan;electronic engineering;parallel computing;real-time computing;electronic design automation;ic layout editor;schedule;computer science;design flow;computer-automated design;operating system;totally integrated automation;standard cell	EDA	13.158631555858511	52.897872397273076	137209
19131107273d3f1a8a4c3ec2d832bbddb7bf4a69	redundant binary to two's complement converter on fpgas through fabric aware scan based encoding approach for fault localization support		Redundant binary to two's complement conversion circuits tailored for high speed FPGA implementations using a fabric aware approach for serial and carry look-ahead modes have been presented in this paper. The configured, yet underutilized FPGA logic slices are targeted for appendage of fault localization circuitry, namely, unidirectional or bidirectional scan path, C-testability and alternating logic without any logic overhead. The circuit descriptions have been automated and the design flow to determine the faulty FPGA slice coordinates have been proposed. The circuits have been realized through target FPGA specific primitive instantiation coupled with placement constraints to guarantee high speed design, as well as to ease out the exercise of locating faulty FPGA slice coordinates (if any).	electronic circuit;field-programmable gate array;overhead (computing);redundant binary representation;two's complement;universal instantiation	Ayan Palchaudhuri;Anindya Sundar Dhar	2018	2018 IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW)	10.1109/IPDPSW.2018.00042	field-programmable gate array;parallel computing;computer science;encoding (memory);electronic circuit;design flow;binary number;two's complement	EDA	11.098817267274272	52.180811334912114	137451
03d2a988f8eecd1d4c49c664616177e3341e5c71	twin binary sequences: a non-redundant representation for general non-slicing floorplan	binary sequence;fpga;linear time;timing driven routing;lagrangian relaxation	The efficiency and effectiveness of many floorplanning methods depend very much on the representation of the geometrical relationship between the modules. A good representation can shorten the searching process so that more accurate estimations on area and interconnect costs can be performed. Non-slicing floorplan is the most general kind of floorplan that is commonly used. Unfortunately, there is not yet any complete and non-redundant topological representation for non-slicing structure. In this paper, we will propose the first representation of this kind. Like some previous work [9], we have also made used of mosaic floorplan as an intermediate step. However, instead of including a more than sufficient number of extra dummy blocks in the set of modules, our representation allows us to insert an exact number of irreducible empty rooms to a mosaic floorplan in such a way that every non-slicing floorplan can be obtained by this method uniquely from one and only one mosaic floorplan. The size of the solution space is only O(n!23n/n1.5) but every non-slicing floorplan can be generated uniquely and efficiently in linear time without any redundant representation.	dummy variable (statistics);feasible region;floorplan (microelectronics);irreducibility;ncsa mosaic;time complexity	Evangeline F. Y. Young;Chris C. N. Chu;Zion Cien Shen	2002		10.1145/505388.505435	time complexity;floorplan;mathematical optimization;combinatorics;discrete mathematics;lagrangian relaxation;computer science;pseudorandom binary sequence;mathematics;algorithm;quantum mechanics;field-programmable gate array	EDA	16.59519627574069	50.57683259740099	137504
9f7a214767ffb1bd58347353749c0d55cc9bb013	concentrator access networks for programmable logic cores on socs	programmable logic devices;access network;programmable logic arrays programmable logic devices system on a chip costs joining processes integrated circuit technology logic design routing fabrication telephony;unordered networks concentrator access networks programmable logic cores soc input output ordering;programmable logic devices system on chip;input output;system on chip;programmable logic	The inclusion of programmable logic cores in modern SoC motivates the need for an access network to make full use of this resource. The programmable nature of these cores removes the requirement of input/output ordering on this access network. Theoretical work on a class of unordered networks called concentrators has shown that as these networks become large, they have a lower cost than ordered or permutation networks. However, currently known constructions of concentrator networks are not lower cost than permutation networks for the entire range of networks of the size required for SoC. This paper demonstrates the differences in the cost and depth of concentrator and permutation networks. It also presents a new construction of a concentrator network that has lower cost and depth than a permutation network for all configurations.	access network;input/output;programmable logic device;system on a chip	Bradley R. Quinton;Steven J. E. Wilton	2005	2005 IEEE International Symposium on Circuits and Systems	10.1109/ISCAS.2005.1464520	erasable programmable logic device;embedded system;electronic engineering;logic synthesis;real-time computing;macrocell array;logic gate;logic family;programmable logic array;computer science;programmable logic device;pass transistor logic;complex programmable logic device;simple programmable logic device;programmable array logic	Arch	12.178796379680284	52.37843562930805	137514
92c9f87db9526689e8bc0d044e2e36b6d3991f65	an architecture for configuring an effcient scan path for a subset of elements	set theory computational complexity field programmable gate arrays reconfigurable architectures;partial reconfiguration;partial reconfiguration scan path fpga configuration bitstream;fpga;configuration bitstream;scan path data plane fpga partial reconfiguration phase;scan path	Many FPGAs support partial reconfiguration, where the states of a subset of configurable elements is (potentially) altered. However, the configuration bits often enter the chip through a small number of pins. Thus, the time needed to partially reconfigure an FPGA depends, to a large extent, on the number of configuration bits to be input into the chip. This is a key consideration, particularly where partial reconfiguration is performed during the computation. Therefore, it is important that the size of a frame (an atomic configuration unit) be small and the configuration be focused on the bits that truly need to be altered. Suppose C denotes the set of elements that need to be configured during a partial reconfiguration phase, here C is a (small) subset of k frames from a much larger set S of n frames. In this paper we present a method to configure the k elements of C by setting up a configuration path that strings its way through only those frames that require reconfiguration, the configuration bit stream can be now shifted in through this path. Our method also automatically selects (in hardware) a suitable clock speed that can be used to input these configuration bits. If the elements of C show spatial locality, then the configuration time could be made largely independent of n.	bitstream;clock rate;computation;field-programmable gate array;locality of reference;principle of locality	Arash Ashrafi;Ramachandran Vaidyanathan	2015	2015 IEEE International Parallel and Distributed Processing Symposium Workshop	10.1109/IPDPSW.2015.124	parallel computing;real-time computing;computer science;distributed computing;field-programmable gate array	Arch	11.324198359111785	47.617588848976474	138188
5cb08082104cee9ec769786c4b53188f14e0ac2c	esdextractor: a new technology-independent cad tool for arbitrary esd protection device extraction	esd protection circuit;computer aided design;new technology;indexing terms;chip;electrostatic discharge;computer aided design tool esdextractor technology independent cad tool arbitrary esd protection device extraction electrostatic discharge protection circuit layout extractor unconventional layout patterns parasitic device extraction device count reduction technology independent layout extractor design verification intentional protection devices parasitic protection devices;integrated circuit design;electrostatic discharge protection design automation circuit synthesis circuit simulation stress application software radiofrequency integrated circuits integrated circuit technology radio frequency;circuit layout cad electrostatic discharge integrated circuit design;circuit layout cad;design verification	The challenges for developing an on-chip electrostatic discharge (ESD) protection circuit layout extractor originate from unconventional layout patterns of ESD protection devices, parasitic ESD device extraction, and device count reduction. This paper reports a new technology independent layout extractor called the ESDExtractor, which is capable of extracting arbitrary ESD protection devices and answers the demands for full-chip ESD protection design verification. The general methodology to extract both intentional and parasitic ESD protection devices, the specific algorithms, and implementation methods to enhance ESDExtractor's efficiency are presented. Finally, the capability of the new computer-aided design tool is demonstrated using application examples.		Rouying Zhan;Haigang Feng;Qiong Wu;Haolu Xie;Xiaokang Guan;Guang Chen;Albert Z. Wang	2003	IEEE Trans. on CAD of Integrated Circuits and Systems	10.1109/TCAD.2003.818140	chip;physical design;embedded system;electronic engineering;index term;electrostatic discharge;ic layout editor;computer science;engineering;computer aided design;design layout record;integrated circuit layout;circuit extraction;computer engineering;integrated circuit design	EDA	12.547710586441122	50.902463160039396	138566
950114420dddde2d3d26b4ec40bb13a381958fc5	layer-aware design partitioning for vertical interconnect minimization	minimization;through silicon via tsv;layer by layer;bottom up;3d integration technology;heterogeneous systems;tsv minimized 3d partitioning solution layer aware design partitioning vertical interconnect minimization three dimensional design technology 3d design technology through silicon vias iterative layer aware partitioning algorithm tsv minimization ilap;partitioning through silicon via tsv 3d integration technology layering;iterative layer aware partitioning algorithm;three dimensional displays through silicon vias partitioning algorithms junctions algorithm design and analysis minimization runtime;partitioning;three dimensional integrated circuits integrated circuit design iterative methods;three dimensional design technology;through silicon via;runtime;junctions;three dimensional;emerging technology;3d integration;iterative methods;integrated circuit design;vertical interconnect minimization;three dimensional displays;tsv minimized 3d partitioning solution;ilap;proceedings paper;tsv minimization;layer aware design partitioning;layering;3d structure;algorithm design and analysis;3d design technology;three dimensional integrated circuits;partitioning algorithms;through silicon vias	Three-dimensional (3D) design technology, which has potential to significantly improve design performance and ease heterogeneous system integration, has been extensively discussed in recent years. This emerging technology allows stacking multiple layers of dies and typically resolves the vertical inter-layer connection issue by through-silicon vias (TSVs). However, TSVs also occupy significant silicon estate as well as incur reliability problems. Therefore, the deployment of TSVs must be very judicious in 3D designs. In this paper, we propose an iterative layer-aware partitioning algorithm, named iLap, for TSV minimization in 3D structures. iLap iteratively applies multi-way min-cut partitioning to gradually divide a given design layer by layer in the bottom-up fashion. Meanwhile, iLap also properly fulfills a specific I/O pad constraint incurred by 3D structures to further improve its outcome. Experimental results show that iLap can reduce the number of TSVs by about 35% as compared to several existing state-of-the-art methods. We believe a good TSV-minimized 3D partitioning solution can serve as a good starting point for further tradeoff operations between TSV count and wirelength.	algorithm;bottom-up parsing;die (integrated circuit);field-programmable gate array;input/output;iterative method;minimum cut;software deployment;stacking;system integration;three-dimensional integrated circuit;through-silicon via;via (electronics)	Ya-Shih Huang;Yang-Hsiang Liu;Juinn-Dar Huang	2011	2011 IEEE Computer Society Annual Symposium on VLSI	10.1109/ISVLSI.2011.16	electronic engineering;parallel computing;computer science;engineering drawing	EDA	14.940946416076814	53.263342685636296	138580
9ceb337687148e9edd5dc1ee21de2148c7f5daa1	configurable memristive logic block for memristive-based fpga architectures	memristor;configurable logic block;fpga architecture;switch block;logic block	This article proposes a Configurable Memristive Logic Block (CMLB) that comprises of novel memristive logic cells. The memristive logic cells are constructed from memristive D flip-flop, 6-bit non-volatile look-up table (NVLUT), and multiplexers. The memristive logic cells are interconnected using memristive switch matrix cells to form the CMLB. The CMLB is then used to construct a memristor-based FPGA architecture. The proposed CMLB shows a reduction of 8.6% of device area and 1.094 times lesser critical path delay against the SRAM-based FPGA architecture. Against similar CMOS-based circuits, the memristive D flip-flop provides switching speed of 1.08 times faster, the NVLUT reduces power consumption by 6.25 nW, and the memristive logic cells reduce device area by 60.416 µm2. In this research work also, various memristor-based FPGA architectures found in the literature are compared against the SRAM-based FPGA architecture.		Patrick W. C. Ho;Haider Abbas F. Almurib;Thulasiraman Nandha Kumar	2017	Integration	10.1016/j.vlsi.2016.09.003	embedded system;electronic engineering;parallel computing;memristor;computer science;engineering	EDA	12.511906322304544	48.21276999407487	138791
b7e039695a50aedb63df4d8e637c4a7670f99a5d	an effective clustering algorithm for mixed-size placement	cluster algorithm;placement;physical design;deep impact;hypergraph clustering	Placement is a crucial step for the VLSI circuit physical design and it has a deep impact on the overall circuit performance. Numerous clustering techniques have been proposed and applied to placement to deal with the increasing circuit sizes and complexity. In this paper, an effective clustering algorithm for mixed-size placement is presented. This technique uses local cell connectivity information to identify all potential clusters, but finalizes clusters globally. The effectiveness of the proposed clustering technique is verified by empirical tests on ICCAD04 and ISPD05 benchmark circuits. Specifically, 4 major academic placers, including Capo10.1, FengShui5.1, mPL6 and NTUPlace3-LE, are tested by using the proposed clustering technique as a preprocessing step. The overall experimental results show that for ICCAD04 benchmarks, the proposed clustering technique consistently improves all of the placers' performance by 2% to 5% on average in term of the pin-to-pin half perimeter wire length, with comparable or lower runtime. For ISPD05 benchmarks, the proposed clustering technique shows promising results.	algorithm;benchmark (computing);cluster analysis;perimeter;physical design (electronics);preprocessor;very-large-scale integration	Jianhua Li;Laleh Behjat;Jie Huang	2007		10.1145/1231996.1232020	physical design;correlation clustering;mathematical optimization;computer science;theoretical computer science;canopy clustering algorithm;machine learning;cure data clustering algorithm;cluster analysis;biclustering;placement;clustering high-dimensional data	EDA	14.905598662034627	53.14154021825554	138838
92ed026def791aaed9ab447cfbfb64990c16b55a	rectilinear steiner trees with minimum elmore delay	theoretical framework;cost function;steiner trees;routing;very large scale integration;routing steiner trees delay estimation space technology cost function very large scale integration wire spice timing;wire;branch and bound method;space technology;spice;steiner tree;delay estimation;timing	"""We provide a new theoretical framework for constructing Steiner routing trees with minimum Elmore delay. Earlier work [3, 13] has established Elmore delay as a high fidelity estimate of """"physical"""", i.e., SPICE-computed, signal delay. Previously, however, it was not known how to construct an Elmore delay-optimal Steiner tree. Our main theoretical result is a generalization of Hanan's theorem [11] which limited the number of possible locations of Steiner nodes in an optimal delay rectilinear Steiner tree. Another theoretical result establishes a new decomposition theorem for constructing optimal-delay Steiner trees. We develop a branch-and-bound method, called BB-SORT-C, which exactly minimizes any linear combination of Elmore sink delays; BB-SORT-C is practical for routing small nets and for delimiting the space of achievable routing solutions with respect to Elmore delay."""	branch and bound;delimiter;elmore delay;nyquist–shannon sampling theorem;rectilinear steiner tree;regular grid;routing;spice;steiner tree problem	Kenneth D. Boese;Andrew B. Kahng;Bernard A. McCoy;Gabriel Robins	1994	31st Design Automation Conference	10.1145/196244.196428	mathematical optimization;combinatorics;discrete mathematics;steiner tree problem;computer science;elmore delay;mathematics;computer network	EDA	15.74130804381448	51.15799180056248	138982
1353cce1f249b6b3369b9d49f2a23cf70320db9e	slack matching quasi delay-insensitive circuits	mixed integer linear program;cycle time;logic design;quasidelay insensitive circuits slack matching slack elastic asynchronous system mixed integer linear programming buffer circuits;buffer circuits;asynchronous system;quasi delay insensitive;mixed integer linear programming;integer programming;quasidelay insensitive circuits;linear programming;asynchronous circuits;logic design asynchronous circuits buffer circuits circuit optimisation integer programming linear programming;circuit optimisation;slack matching;circuits pipelines throughput communication channels delay effects computer science mixed integer linear programming message passing clocks synchronization;slack elastic asynchronous system;circuit optimization;asynchronous logic circuits	Slack matching is an optimization that determines the amount of buffering that must be added to each channel of a slack elastic asynchronous system in order to reduce its cycle time to a specified target. We present two methods of expressing the slack matching problem as a mixed integer linear programming problem. The first method is applicable to systems composed of either full-buffers or half-buffers but not both. The second method is applicable to systems composed of any combination of full-buffers and half-buffers	algorithm;asynchronous system;delay insensitive circuit;heuristic (computer science);integer programming;linear programming;mathematical optimization;p (complexity);process (computing);slack variable	Piyush Prakash;Alain J. Martin	2006	12th IEEE International Symposium on Asynchronous Circuits and Systems (ASYNC'06)	10.1109/ASYNC.2006.27	asynchronous system;mathematical optimization;electronic engineering;logic synthesis;real-time computing;integer programming;cycle time variation;computer science;linear programming;mathematics;least slack time scheduling;slack variable	EDA	17.08860300421239	51.93489698320819	139119
638360b98210453c21868608de1de4ab7b35ed7c	incorporating power reduction mechanism in arithmetic core design	power supply circuits;multiplying circuits;combinational switching;arithmetic switches voltage delay pipeline processing registers clocks power dissipation logic arrays adders;power supply circuits pipeline arithmetic multiplying circuits combinational switching;cordic power reduction mechanism arithmetic core design supply voltage switching mechanism glitching combinational structures pipelined array structures parallel multipliers;power dissipation;power reduction;pipeline arithmetic	A novel supply voltage switching mechanism for reducing power dissipation of array structures is presented. The mechanism eliminates power dissipated by the glitching while it maintains the speed. The mechanism can be applied to either fully combinational or pipelined array structures such as parallel multipliers and/or CORDICs. The mechanism is easily incorporated such that no circuit change in the existing array structure is necessary.	cordic;combinational logic;glitching	Sangjin Hong;Shu-Shin Chin	2004	IEEE Computer Society Annual Symposium on VLSI	10.1109/ISVLSI.2004.1339544	electronic engineering;parallel computing;real-time computing;mathematics;switched-mode power supply	Arch	13.337030492642226	46.853958966260414	139478
53abf3474c38dbf445a9be0bced5cb457394ac35	latchup-aware placement and parasitic-bounded routing of custom analog cells	custom analog cell;parasitic-bounded routing;latchup-aware placement	This thesis, presents new results in constraint-directed placement and muting of device-level ar~alog cells. We describe the first algorithm for latchup-aware device placement ’,Hat guarantees ufficient placement of well/substrate ,contacts by simultaneous placement of latchup protection geometry and devices. A novel cost-to-target predictor for best-first costbased maze routing is presented, which is shown to be highly effective in multi-layer multi-terminal routing problems. The predictor and a new scheme for pruning evolving palhs that violate user-supplied parasitic bounds, combine to allow faster, deeper, more optimum and tightlyconstrained routing of analog signals in dense placements. Experimental results suggest he strategy avoids the artifacts of crosstalk-for-length trade-offs seen in earlier algorithms, and adlows users more fine-grain control of the routing of dense, high-performance cells. An implementation of these ideas in the tool set KA III is used to derive improved layouts from several analog cells.	a* search algorithm;analog signal;crosstalk;iterative method;kerrison predictor;latch-up;layer (electronics);routing	Bulent Basaran;Rob A. Rutenbar;L. Richard Carley	1993		10.1145/259794.259862	embedded system;electronic engineering;real-time computing;equal-cost multi-path routing;engineering;multipath routing;routing;placement	EDA	15.850793979068632	52.52033498408809	139680
8509d53394a5ef69de70b3bdd3eda2fafc503b95	dragon2006: blockage-aware congestion-controlling mixed-size placer	top down;placement;physical design;simulated annealing;large scale;macro block	In this paper, we develop a mixed-size placement tool, Dragon2006, to solve large scale placement problems effectively. A top-down hierarchical approach based on min-cut partitioning and simulated annealing is used to place very large SoC-style designs containing fixed blockage, movable macro blocks of various sizes and standard cells. Moreover, we have applied several techniques for wirelength optimization, congestion estimation in the presence of blockage and white space allocation for congestion removal.	mathematical optimization;maxima and minima;minimum cut;network congestion;simulated annealing;top-down and bottom-up design	Taraneh Taghavi;Xiaojian Yang;Bo-Kyung Choi;Maogang Wang;Majid Sarrafzadeh	2006		10.1145/1123008.1123054	physical design;mathematical optimization;simulated annealing;computer science;top-down and bottom-up design;placement	EDA	15.230646789609057	52.53198580309187	139779
0d3352a2470fcc40b4f09c656e5c4c3b80c28998	the evolutionary design and synthesis of non-linear digital vlsi systems	nonlinear network synthesis;genetic operator;evolutionary design;longest path;integrated circuit design;nonlinear systems;vlsi;integrated circuit design vlsi nonlinear systems genetic algorithms nonlinear network synthesis circuit cad;very large scale integration circuit synthesis nonlinear filters evolutionary computation adders signal processing hardware design languages delay polynomials computational complexity;hardware design;genetic algorithms;circuit cad;local search;0 18 micron technology evolutionary design system synthesis nonlinear digital vlsi system very large scale integration multiobjective evolutionary algorithm ea system nonlinear vlsi circuit module nonlinear block specification technology independent netlist verilog hardware description language hardware design highlevel component adders multipliers near optimal circuit design silicon area longest path delay ea performance enhancement local search genetic operator evolved design	This paper describes a multi-objective Evolutionary Algorithm (EA) system for the synthesis of efficient non-linear VLSI circuit modules. The EA takes the specification for a non-linear block, and converts it into a technology independent netlist, specified in the Verilog hardware description language. The hardware designs are based upon highlevel components such as adders and multipliers. The circuit designs that are produced are near-optimal with respect to silicon area and longest-path delay. The performance of the EA is enhanced through the use of local searches. These searches are embedded within the genetic operators, and enable the rapid evaluation of large numbers of designs. The use of searches increases the power of the EA system, without forfeiting the benefits of using a population of solutions. The system is demonstrated with several test problems. Results are presented for the discovery of correct designs, and also regarding the quality of the evolved designs. The most complex designs have areas as large as 200,000 m in a 0.18 m technology.	digital electronics;embedded system;evolutionary algorithm;genetic operator;hardware description language;longest path problem;mumps;netlist;nonlinear system;population;verilog;very-large-scale integration	Robert Thomson;Tughrul Arslan	2003		10.1109/EH.2003.1217657	electronic engineering;real-time computing;computer science;theoretical computer science	EDA	10.999043222930972	49.44580954555877	140144
34792ad99c2ef1376a8e0c62462db14c2ed5533f	the crossing distribution problem [ic layout]	graph theory;nets intersection;integrated circuit layout;routing;ic layout crossing distribution problem nets intersection global routing net ordering;multiterminal networks;satisfiability;network routing;network topology;analog circuits;integrated circuit layout routing integrated circuit interconnections shape analog circuits integrated circuit measurements;shape;integrated circuit interconnections;ic layout;global routing;net ordering;graph theory network routing integrated circuit layout network topology circuit layout cad multiterminal networks;circuit layout cad;integrated circuit measurements;crossing distribution problem	In this paper we study the problem of “properly” distributing the set of crossings (i.e., intersection of nets), of a given global routing, among the regions. Each region is assigned a quota, being the maximum number of crossings allowed in that region, which depends on its area and its complexity (e.g., the number of nets going through it and the number of terminals it contains). The crossing distribution problem (CDP) is to find a net ordering at each boundary as to minimize the total number of crossings and to satisfy the quotas. We propose an O(mn2 + mE3/’) time algorithm for CDP, where m is the number of modules, n is the number of nets, and < is the number of crossings.	algorithm;complexity;crossing number (graph theory);integrated circuit layout;routing	Malgorzata Marek-Sadowska;Majid Sarrafzadeh	1995	IEEE Trans. on CAD of Integrated Circuits and Systems	10.1109/43.372368	routing;electronic engineering;computer science;graph theory;theoretical computer science;mathematics;integrated circuit layout;engineering drawing;computer network	EDA	15.299307006545488	50.93788440388354	140420
ab80ddd1b66e8757b25d3fa28f4307c325fb217c	an analytical approach to placement legalization	cost function;placement legalization;placement spreading;analytical placement;place cell;penalty function;detailed placement	We present a method to achieve nearly legal placement while optimizing the traditional metrics in an analytical placement framework. A legalization penalty function term is added to the cost function of the placer. The purpose of this term is to remove overlaps and place cells into rows. The new term kicks in when global spreading cannot resolve overlaps any further. We study how this legalization term in placement helps to achieve better final placements when it is used in combination with wire-length driven analytical placement. Experimental results show that using this additional legalization cost term results in reduction of degradation of wire-length from 7.6% to 0.7% after discrete detailed placement. Optimization of wire-length along with the legalization term in placement shows 6% improvement in total wire-length on average, which if translated into timing is 48% of total negative slack. A further feature to control cell density helps reduce congestion by 33%.	automatic label placement;elegant degradation;loss function;network congestion;penalty method;slack variable	Andrey Ayupov;Alexander Marchenko;Vladimir Tiourin	2008		10.1145/1366110.1366152	mathematical optimization;parallel computing;computer science;engineering;penalty method;placement	EDA	15.299528187160748	53.01435769726107	140583
3c073837152d7c8ddf4067eb8ed7972bb8d92118	a parallel evolutionary algorithm for circuit partitioning	evolutionary computation;parallel evolutionary algorithm;parallel algorithm;resource allocation;evolutionary computation application software partitioning algorithms parallel processing concurrent computing very large scale integration parallel algorithms circuit testing logic circuits logic testing;circuit analysis computing vlsi evolutionary computation parallel algorithms resource allocation logic partitioning;parallel computer;vlsi;logic partitioning;circuit analysis computing;parallel processing;heuristic algorithm;parallel algorithms;parallelism parallel evolutionary algorithm vlsi applications circuit testing logic minimization logic simulation circuit partitioning nonoverlapping subcircuits cut minimization load division load balancing parallel processing	As general-purpose parallel computers are increasingly being used to speed up different VLSI applications, the development of parallel algorithms for circuit testing, logic minimization and simulation, HDL-based synthesis, etc. is currently a field of increasing research activity. In some of these applications the circuit partitioning problem occurs. That implies dividing a circuit into non-overlapping subcircuits while minimizing the number of cuts after the division and balancing the load associated to each one. Very effective heuristic algorithms have been developed in order to solve this problem, but it is unknown how good the partitions are since the problem is NP-complete. In these cases the use of parallel processing can be very useful. This paper describes a parallel evolutionary algorithm for circuit partitioning, where parallelism improves the solutions found by the corresponding sequential algorithm, which indeed is quite effective compared with other previously proposed procedures.	central processing unit;circuit minimization for boolean functions;combinatorial optimization;computer;evolutionary algorithm;general-purpose markup language;hardware description language;heuristic;loss function;mathematical optimization;np-completeness;parallel algorithm;parallel computing;partition problem;population;programming paradigm;sequential algorithm;simulation;speedup;very-large-scale integration	Raul Baños;Consolación Gil;Maria Dolores Gil Montoya;Julio Ortega	2003	Eleventh Euromicro Conference on Parallel, Distributed and Network-Based Processing, 2003. Proceedings.	10.1109/EMPDP.2003.1183612	parallel processing;parallel computing;logic optimization;computer science;theoretical computer science;analysis of parallel algorithms;distributed computing;parallel algorithm;cost efficiency;evolutionary computation	EDA	14.501420050071008	50.298128604456274	141273
c79aaaeacd3496697c8639b1c2e69940bc256547	general architecture for hardware implementation of genetic algorithm	traveling salesman problem;logic design;clocks;circuit design;hardware circuit;fpga;computer architecture;hardware genetic algorithms biological cells pipelines genetic mutations circuits computer architecture clocks field programmable gate arrays predictive models;knapsack problem;biological cells;parallel architectures;size prediction;pipelines;genetic algorithm;predictive models;genetic algorithms;circuits;genetic mutations;software implementation hardware implementation genetic algorithm fpga hardware circuit parallel pipelines size prediction circuit design knapsack problem traveling salesman problem circuit synthesis;field programmable gate arrays;parallel architectures field programmable gate arrays genetic algorithms logic design;hardware implementation;circuit synthesis;software implementation;parallel pipelines;hardware	In this paper, the authors propose a technique to flexibly implement genetic algorithms (GAs) for various problems on FPGAs. For the purpose, the authors propose a common architecture for GA. The proposed architecture allows designers to easily implement a GA as a hardware circuit consisting of parallel pipelines which execute GA operations. The proposed architecture is scalable to increase the number of parallel pipelines. The architecture is applicable to various problems and allows designers to estimate the size of resulting circuits. The authors give a model for predicting the size of resulting circuits from given parameters. Based on the proposed method, the authors have implemented a tool to facilitate GA circuit design and development. Through experiments using knapsack problem and traveling salesman problem (TSP), the authors show that the FPGA circuits synthesized based on the proposed method run much faster and consume much lower power than software implementation on a PC and the model can predict the size of the resulting circuit accurately enough	circuit design;electronic circuit;experiment;field-programmable gate array;genetic algorithm;knapsack problem;pipeline (computing);scalability;software release life cycle;travelling salesman problem	Tatsuhiro Tachibana;Yoshihiro Murata;Naoki Shibata;Keiichi Yasumoto;Minoru Ito	2006	2006 14th Annual IEEE Symposium on Field-Programmable Custom Computing Machines	10.1109/FCCM.2006.43	embedded system;computer architecture;parallel computing;genetic algorithm;computer science;theoretical computer science;field-programmable gate array	EDA	10.231684924425124	48.91772725601754	141301
f166b75939623c93b2307857bf6ca1a6ccd1d6d2	analytical high-level power model for lut-based components	switching activity;telecomunicaciones;power estimation;fpga implementation;relative error;word length;power modeling	This paper presents an extended high-level model for logic power estimation of multipliers and adders implemented in FPGAs in the presence of glitching and correlation. The model is based on an analytical computation of the switching activity produced in the component and the FPGA implementation details of the component structure. It is extended to consider operands of different word-lengths, both zero-mean and nonzero mean signals, and the glitching produced inside the component, taking into account the sign nature of the autocorrelation coefficients of the components’ inputs. The number of simulations needed for the model characterization is extremely small and can be reduced to only two. As the final power model is analytical, it is capable of providing power estimates in miliseconds. The results show that the mean relative error is within 10% of low-level power estimates given by the XPower tool.	approximation error;autocorrelation;coefficient;computation;field-programmable gate array;glitching;high- and low-level;high-level programming language;operand;simulation	Ruzica Jevtic;Carlos Carreras	2008		10.1007/978-3-540-95948-9_37	approximation error;electronic engineering;real-time computing;computer science;theoretical computer science;statistics	EDA	11.25876420553012	48.19326128694394	141303
78621edd45ab4e0d0e7e4f6610fef542b66a10d0	a balanced-mesh clock routing technique using circuit partitioning	lsi;mpeg2 encoder lsi design balanced mesh clock routing technique circuit partitioning mesh routing regions clock skew suppression balanced tree configuration;integrated circuit layout;circuit partitioning;clocks;routing;clocks routing delay effects integrated circuit interconnections large scale integration laboratories very large scale integration combinational circuits classification tree analysis power dissipation;very large scale integration;cad;clock skew suppression;timing circuits;partitioning;delay effects;mesh routing regions;network routing;mpeg2 encoder lsi design;large scale integration;digital integrated circuits;layout design;integrated circuit interconnections;power dissipation;balanced tree configuration;circuit layout cad;digital integrated circuits network routing circuit layout cad integrated circuit layout timing circuits;classification tree analysis;balanced mesh clock routing technique;clock skew;combinational circuits	A clock routing technique using a balanced-mesh routing is proposed, which incorporates the advantages of both the well-known balanced-tree and fixed-mesh routing method. The circuit is partitioned into sub-blocks called Mesh-Routing Regions(MR's) in which clock skew is suppressed below a constant by mesh routing. Then the net from the clock source to each MR is routed as a balanced-tree. In using the technique to the design of MPEG2-encoder LSI, a skew of 210~ps was achieved.	benchmark (computing);binary space partitioning;business motivation model;clock generator;clock rate;clock skew;experiment;fast multipole method;group delay and phase delay;integrated circuit;mpeg-2;mesh networking;ps (unix);routing;spice 2;self-balancing binary search tree;simulation;transistor;whole earth 'lectronic link	Hidenori Sato;Akira Onozawa;Hiroaki Matsuda	1996		10.1109/EDTC.1996.494155	electronic engineering;parallel computing;real-time computing;dsrflow;clock domain crossing;equal-cost multi-path routing;clock skew;computer science;dynamic source routing;destination-sequenced distance vector routing;synchronous circuit;digital clock manager;routing	EDA	14.985147659606467	51.649246660845236	141509
89094047d63d47b517bb27416d199436241e0008	design integrity and immunity checking: a new look at layout verification and design rule checking	silicon;front end;very large scale integration;design rule checking;vlsi design;design rules;very large scale integration permission computer science space technology circuits large scale integration computer errors design methodology assembly silicon;assembly;large scale integration;permission;circuits;space technology;computer science;structural design;computer errors;design methodology	A program implementing a novel approach to layout verification is presented. The approach uses topological and device information to eliminate most false and unchecked errors. This technique, coupled with a hierarchical front end to eliminated redundant checks, is appropriate for layout verification of VLSI designs. Design rules appropriate for this technique, some usage rules in the context of structured design, and a discussion of the future of design rule checking are also presented.	structured analysis	Edward J. McGrath;Telle Whitney	1980	17th Design Automation Conference	10.1145/800139.804537	layout versus schematic;physical verification;computer science;electrical engineering;design rule checking;theoretical computer science;formal equivalence checking;very-large-scale integration;engineering drawing;functional verification;computer engineering	EDA	12.291902627859118	50.96042036844967	141975
454585941c941150f5233d834496867bf8eb599b	low power hierarchical multiplier and carry look-ahead architecture	electronic mail;very large scale integration;information technology;logic;embedded system;computer architecture;low power;energy consumption;adders;computer architecture logic circuits delay energy consumption adders very large scale integration embedded system information technology electronic mail;carry look ahead;circuits;power consumption	This paper proposes a novel 8x8 multiplier architecture based on Wallace Tree, efficient in terms of power and regularity without significant increase in delay and area. The idea involves the generation of partial products in parallel using AND gates. The addition of these partial products is done using Wallace Tree which is hierarchically divided into levels. There will be a significant reduction in the power consumption, since power is provided only to the level that is involved in computation and thereby rendering the remaining two levels switched off (by employing a control circuitry). Furthermore, to improve the speed of addition at the 3rd level of computation, a novel carry look-ahead adder (CLA) is also proposed which is better than the recently proposed CLA architecture when compared its efficiency in terms of area/speed. The efficiency of the proposed multiplier is also tested by embedding it in higher width partition multipliers.	and gate;adder (electronics);carry-lookahead adder;computation;electronic circuit;wallace tree	Himanshu Thapliyal;Gopi Neela;K. K. Pavan Kumar;M. B. Srinivas	2006	IEEE International Conference on Computer Systems and Applications, 2006.	10.1109/AICCSA.2006.205072	parallel computing;real-time computing;computer science;operating system;information technology;logic	EDA	13.293448774798952	46.476501791206786	142074
005a517ef7c5d602f3666b28b34483149bb5de79	a polynomial time approximation scheme for timing constrained minimum cost layer assignment	timing-driven minimum cost layer;integrated circuit interconnections;network routing;routing layers;metal layer;vlsi technology;minimum cost layer assignment;interconnect delay;thick metal;optimal layer assignment solution;polynomial approximation;delays;nanoscale regime;optimal dynamic programming algorithm;layer assignment;vlsi;wire sizing problem;upper metal layers;new algorithm;new dimension;timing-driven minimum cost layer assignment problem;polynomial time approximation scheme;assignment problem;np complete problem;chip;metals;dynamic programming algorithm;dynamic programming	As VLSI technology enters the nanoscale regime, interconnect delay becomes the bottleneck of circuit performance. Compared to gate delays, wires are becoming increasingly resistive which makes it more difficult to propagate signals across the chip. However, more advanced technologies (65nm and 45nm) provide relief as the number of metal layers continues to increase. The wires on the upper metal layers are much less resistive and can be used to drive further and faster than on thin metals. This provides an entirely new dimension to the traditional wire sizing problem, namely, layer assignment for efficient timing closure. Assigning all wires to thick metals improves timing, however, routability of the design may be hurt. The challenge is to assign minimal amount of wires to thick metals to meet timing constraints.  In this paper, the minimum cost layer assignment problem is proven to be NP-Complete. As a theoretical solution for NP-complete problems, a polynomial time approximation scheme is proposed. The new algorithm can approximate the optimal layer assignment solution by a factor of 1 + ε in O(m log log m · n3/ε2) time for 0 < ε < 1, where n is the number of nodes in the tree and m is the number of routing layers. This work presents the first theoretical advance for the timing-driven minimum cost layer assignment problem. In addition to its theoretical guarantee, the new algorithm is highly practical. Our experiments on 500 testcases demonstrate that the new algorithm can run 2x faster than the optimal dynamic programming algorithm with only 2% additional wire.	approximation algorithm;assignment problem;bottleneck (engineering);delay calculation;dynamic programming;experiment;karp's 21 np-complete problems;polynomial;polynomial-time approximation scheme;routing;timing closure;very-large-scale integration	Shiyan Hu;Zhuo Li;Charles J. Alpert	2008	2008 IEEE/ACM International Conference on Computer-Aided Design	10.1145/1509456.1509491	mathematical optimization;electronic engineering;real-time computing;computer science;dynamic programming;mathematics;algorithm	EDA	15.989715140938026	51.31982648842538	142866
3df68f99b11c47ebd6971b6942b8e04c186b7983	exploiting symbolic techniques within genetic algorithms for power optimization	graph theory;symbol manipulation;genetic algorithms power dissipation sequential circuits encoding equivalent circuits circuit synthesis state estimation data structures boolean functions cost function;sequential circuits;diagrams;functional equivalence;state estimation;estimating function;finite state machines;power dissipation;power optimization;graph theory sequential circuits genetic algorithms symbol manipulation finite state machines circuit optimisation diagrams power consumption state estimation encoding circuit analysis computing;genetic algorithm;genetic algorithms;area increase symbolic computations genetic algorithms power optimization algorithm sequential circuit power dissipation finite state machine state encoding functionally equivalent circuit power estimation function binary decision diagrams;power consumption;point of view;circuit optimisation;circuit analysis computing;encoding;finite state machine;binary decision diagram	Proposes an optimization algorithm for reducing the power dissipation in a sequential circuit. The encoding of the different states in a finite-state machine is modified to obtain a functionally equivalent circuit that exhibits a reduced power dissipation. The algorithm is based on a newly-proposed power estimation function that is able to quickly give an accurate estimate of the dissipated power without actually synthesizing the circuit. Given this estimate, a genetic algorithm provides a state re-encoding for the circuit. The estimation function is computed in a very efficient way by exploiting some symbolic computations with binary decision diagrams. The algorithm is experimentally shown to provide good results from the power optimization point of view, at a limited cost in terms of area increase, when compared with similar approaches.	genetic algorithm;power optimization (eda);program optimization	S. Chuisano;Fulvio Corno;Paolo Prinetto;Maurizio Rebaudengo;Matteo Sonza Reorda	1997		10.1109/TAI.1997.632247	equivalent circuit;mathematical optimization;genetic algorithm;computer science;theoretical computer science;machine learning;finite-state machine;circuit extraction;algorithm	EDA	16.86422725762222	49.22388638613828	143232
ebafa75b63e4f045d691dd573e3f447ed1d57fd3	fashion: a fast and accurate solution to global routing problem	topology;movable segment driven dpr;pins;steiner tree flexibility global routing physical design routability;complexity theory;time complexity;routing;dynamic pattern routing;runtime reduction fashion routability driven global routing problem dynamic pattern routing movable segment driven dpr low time complexity overflow reduction;runtime reduction;physical design;overflow reduction;runtime;network routing;wire;integrated circuit design;computational complexity;global routing;low time complexity;routing wire runtime space exploration integrated circuit synthesis space technology educational programs computer science computer science education;steiner tree;algorithm design and analysis;fashion;flexibility;routability driven global routing problem;routability;network routing computational complexity integrated circuit design	This paper presents a fast and accurate solution, namely Fashion, to routability-driven global routing problem. Fashion is based on two efficient yet effective techniques: 1) dynamic pattern routing (DPR) and 2) movable-segment-driven DPR. These two techniques enable Fashion to explore large solution space to achieve high routability with low time complexity. Compared with BoxRouter, Fashion has a shorter wire length and reduces overflow and runtime by 5 and 15 times, respectively. Compared with FastRoute, Fashion has similar runtime but 90% smaller overflow and 1.9% shorter wire length. Fashion is significantly better than Labyrinth and Fengshui in terms of overflow, wire length, and runtime.	feasible region;routing;time complexity	Zhen Cao;Tong Jing;Jinjun Xiong;Yu Hu;Zhe Feng;Lei He;Xianlong Hong	2008	IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems	10.1109/TCAD.2008.917590	routing;parallel computing;real-time computing;computer science;distributed computing;algorithm	EDA	15.61681348281694	52.060852762497824	143519
fc70949a533c73795c2068f67d098347009b72fc	comparison between heterogeneous mesh-based and tree-based application specific fpga	lookup table	An application specific FPGA (ASIF) is an FPGA with reduced flexibility and improved density. A heterogeneous ASIF is reduced from a heterogeneous FPGA for a predefined set of applications. This work presents a new tree-based heterogeneous ASIF and uses two sets of open core benchmarks to explore the effect of lookup table (LUT) and arity size on it. For tree-based ASIF, LUT size is varied from 3 to 7 while arity size is varied from 4 to 8 and 16. Experimental results show that smaller LUTs with higher arity sizes produce good area results. However, smaller LUTs produce worse results in terms of delay. Further experimental results show that for tree-based ASIF, the combination LUT 4 with arity 16 for SET I and LUT 3 with arity 16 for SET II gives best results in terms of area-delay product. Area comparison between mesh and tree-based ASIFs shows that tree-based ASIF gives 11.27% routing area gain for SET I and gives almost same area results for SET II while consuming 70.30% and 69.80% less wires for SET I and SET II benchmarks respectively. Finally the quality analysis shows that tree-based ASIF produces around 18% better results compared to mesh-based ASIF.	field-programmable gate array	Umer Farooq;Husain Parvez;Zied Marrakchi;Habib Mehrez	2011		10.1007/978-3-642-19475-7_23	parallel computing;lookup table;computer science;theoretical computer science;algorithm	Robotics	12.782144162384842	48.756227773969755	144024
bb3fa983352083ddb586ce4c5f7cef7252bd2f2b	integrated layout synthesis for fpgas	cost function;satisfiability;iterative algorithm;global routing	Abs t rac t . A new approach to the layout of FPGA's is presented. This approach integrates replacement and global routing into a compound task. An iterative algorithm solving the compound task is proposed. This algorithm takes into account restrictions imposed by the rigid carrier structure of FPGA's as well as the timing requirements dictated by the clocking scheme. A complex cost function is employed to control the iterative process in order to satisfy all restrictions and to optimize the circuit layout efficiency and performance.	algorithm;circuit diagram;clock rate;field-programmable gate array;iteration;iterative method;loss function;oracle rac;requirement;routing	Michal Servít;Zdenek Muzikár	1994		10.1007/3-540-58419-6_66	mathematical optimization;parallel computing;computer science;theoretical computer science;iterative method;satisfiability	EDA	14.034296644834317	51.511836610680014	146112
dba9d68944e2bf5683f9e6b674fa771a2e01e572	fanout optimization using bipolar lt-trees	dynamic programming;submicron cmos technologies;cmos technology;fanout optimization algorithm;tapered buffers;continuous buffer sizing technique;dynamic programming algorithm;optimal method;dynamic program;trees mathematics;indexing terms;design optimization;buffer circuits;circuit topology;cmos technology delay design optimization digital circuits algorithm design and analysis cmos digital integrated circuits circuit topology dynamic programming heuristic algorithms semiconductor device modeling;high level synthesis;integrated circuit design;nontapered buffers;buffer selection;computational complexity cmos digital integrated circuits delay estimation circuit optimisation dynamic programming buffer circuits integrated circuit design circuit cad high level synthesis trees mathematics;logic synthesis;cmos digital integrated circuits;computational complexity;semiconductor device modeling;heuristic algorithms;circuit cad;optimal fanout tree;bipolar lt trees;logic synthesis bipolar lt trees fanout optimization algorithm digital circuits submicron cmos technologies optimal fanout tree dynamic programming algorithm buffer selection continuous buffer sizing technique delay model total buffer area time constraint tapered buffers nontapered buffers;digital circuits;circuit optimisation;optimal algorithm;algorithm design and analysis;delay estimation;circuit optimization;total buffer area;delay model;time constraint	In this paper we present a new fanout optimization algorithm which is particularly suitable for digital circuits designed with submicron CMOS technologies. Restricting the class of fanout trees to the so-called bipolar LT-trees, the topology of the optimal fanout tree is found by means of a dynamic programming algorithm. The buffer selection is in turn performed by using a continuous buffer sizing technique based on a very accurate delay model especially developed for submicron CMOS processes. The fanout trees can distribute a signal with arbitrary polarity from the root of the tree to a set of sinks with arbitrary required time, required minimum signal slope, polarity and capacitive load. These trees can be constructed to maximize the required time at the root or to minimize the total buffer area under a required time constraint at the root. The performance of the algorithm shows several improvements with respect to conventional fanout optimization methods. More precisely, the average improvements in area and delay of the optimized circuits, using a standard library which contains tapered and nontapered buffers with different strengths, are 30% and 7%, respectively.		Pasquale Cocchini;Massoud Pedram	2000	IEEE Trans. on CAD of Integrated Circuits and Systems	10.1109/43.833202	mathematical optimization;electronic engineering;real-time computing;computer science;theoretical computer science;dynamic programming;algorithm	EDA	17.212768883354286	52.43999772266188	146364
3a3055b4a71bf46aa8d802a019a98ff57fc507b7	guiding global placement with wire density	analytical placement framework;congested region;efficient technique;wire density;best-so-far average;ibm version2;global placement;benchmark suite;objective function;proposed analytical placer;estimation;optimization;vlsi;routing;clustering algorithms;integrated circuit design;network routing;chip	This paper presents an efficient technique for the estimation of the routed wirelength during global placement using the wire density of the net. The proposed method identifies congested regions of the chip and incorporates the model of the routed wirelength into the objective function in order to effectively alleviate these regions from congestion. The method is integrated in the analytical placement framework and the two-level structure improves the scalability of the placer and speeds up the algorithm. The proposed analytical placer provides the best-so-far average routed wirelength in the IBM version2 benchmark suite.	algorithm;benchmark (computing);level structure;loss function;network congestion;optimization problem;routing;scalability	Kalliopi Tsota;Cheng-Kok Koh;Venkataramanan Balakrishnan	2008	2008 IEEE/ACM International Conference on Computer-Aided Design	10.1145/1509456.1509511	embedded system;mathematical optimization;routing;electronic engineering;parallel computing;computer science;engineering;placement	EDA	15.12178151348346	52.93895804715242	146863
09338bea2453ece3a071b2cda9fd3e25a285dfa5	using complementation and resequencing to minimize transitions	minimisation;switching activity;graph theory;approximate algorithm;reconfigurable computing;graph theory system buses minimisation computational complexity switching theory scheduling;system buses;permission automatic testing system testing laboratories binary search trees encoding polynomials power generation microprocessors digital signal processing;computational complexity;polynomial time approximation algorithm complementation resequencing transition minimization system bus optimum sequence bus invert method encoding dopi data ordering problem with inversion np complete;scheduling;switching theory;event driven simulation	Recently, in [3], the following problem was addressed: Given a set of data words or messages to be transmitted over a bus such that the sequence (order) in which they are transmitted is irrelevant, determine the optimum sequence that minimizes the total number of transitions on the bus. In 1994, Stan and Burleson [5] presented the bus-invert method as a means of encoding words for reducing I/O power, in which a word may be inverted and then transmitted if doing so reduces the number of transitions. In this paper, we combine the two paradigms into one — that of sequencing words under the bus-invert scheme for the minimum transitions, i.e., words can be complemented, reordered and then transmitted. We prove that this problem DOPI — Data Ordering Problem with Inversion — is NP-complete. We present a polynomial-time approximation algorithm to solve DOPI that comes within a factor of 1.5 from the optimum. Experimental results show that, on average, the solutions generated by our algorithm were within 4.4% of the optimum, and that resequencing along with complementation leads to 34.4% reduction in switching activity.	approximation algorithm;bus (computing);input/output;np-completeness;polynomial;relevance;stan;time complexity	Rajeev Murgai;Masahiro Fujita;Arlindo L. Oliveira	1998		10.1145/277044.277219	minimisation;mathematical optimization;electronic engineering;discrete mathematics;reconfigurable computing;computer science;graph theory;theoretical computer science;operating system;mathematics;computational complexity theory;scheduling;algorithm;statistics	Logic	16.27907577834198	49.00997296630818	146892
07bd37b418eea061a43072bf07a6976df0817482	iterative improvement based multi-way netlist partitioning for fpgas	multiway fpga partitioning method;handling solutions stack;solution space exploration;multi way netlist partitioning;size constraints;multipliers;cost function;partitioning solution;tellurium;space exploration;handling solutions stack multi way netlist partitioning multiway fpga partitioning method iterative improvement partitioning techniques solution space exploration cost function infeasibility distance partitioning solution size constraints;iterative improvement partitioning techniques;iterative methods;fault secure circuits;data structures;field programmable gate arrays partitioning algorithms data structures tellurium clustering algorithms space exploration cost function;logic cad field programmable gate arrays logic partitioning iterative methods;clustering algorithms;residue arithmetic codes;infeasibility distance;field programmable gate arrays;self checking circuits;logic partitioning;logic cad;partitioning algorithms	This paper presents a multi-way FPGA partitioning method. The basic idea is similar to one proposed by Kuznar et al. (1995), but instead of using the replication and re-optimization, it takes force of the classical iterative improvement partitioning techniques. The basic effort consists in guiding the classical algorithms in their solution space exploration. This was done by introducing the cost function based on the infeasibility distance of the partitioning solution and carefully tuning the basic parameters of the classical algorithms such as definition of size constraints for feasible moves, handling solutions stack, selecting best cluster to move, etc. The proposed method obtains results comparable to the best published results, and even outperforms them for the largest benchmarks.	algorithm;benchmark (computing);binary space partitioning;feasible region;field-programmable gate array;iterative method;loss function;mathematical optimization;netlist;solution stack	Helena Krupnova;Gabriele Saucier	1999	Design, Automation and Test in Europe Conference and Exhibition, 1999. Proceedings (Cat. No. PR00078)	10.1145/307418.307569	embedded system;mathematical optimization;parallel computing;data structure;computer science;theoretical computer science;space exploration;tellurium;iterative method;cluster analysis;field-programmable gate array	EDA	15.00906244132005	48.6464290676513	147211
ced6c1d7d88a6724c43f40b4e6a896413009340d	heuristics-aided tightness evaluation of analytical bounds in networks-on-chip	optimisation buffer circuits network topology network on chip;analytical models;delays calculus analytical models optimization search problems resource management nickel;elektroteknik och elektronik;network on chip tightness evaluation delay bound backlog bound network calculus;electrical engineering electronic engineering information engineering;nickel;resource management;multidimensional discrete search space networks on chip heuristics aided tightness evaluation analytical bounds analytical delay backlog bounds formal analysis communication delay buffer dimensioning time consuming process manual simulation process constrained optimization problems delay bound automated configuration searching process cycle accurate simulations automatic design space exploration various topology traffic patterns;calculus;optimization;search problems;delays	Studying the tightness of analytical delay and backlog bounds is critical for network-on-chip designs, since formal analysis predicts the boundary of communication delay and buffer dimensioning. However, this evaluation process is often a tedious, time-consuming, and manual simulation process whereas many simulation parameters have to be configured before the simulations run. We formulate the tightness evaluation as constrained optimization problems for delay bound and backlog bounds, respectively. The well-defined problems enable a fully automated configuration searching process, which can be guided by a heuristic algorithm with cycle-accurate simulations integrated. This is a fully automated procedure and thus provides a promising path to automatic design space exploration in similar contexts. Experimental results over various topologies and traffic patterns indicate that our method is effective in finding the configuration for best tightness up to 98%, even when up to 50 parameters are configured in a multidimensional discrete search space under complex constraints.	algorithm;constrained optimization;design space exploration;flow control (data);heuristic (computer science);mathematical optimization;network on a chip;profiling (computer programming);simulation;whole earth 'lectronic link	Xueqian Zhao;Zhonghai Lu	2015	IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems	10.1109/TCAD.2015.2402176	nickel;mathematical optimization;combinatorics;computer science;resource management;theoretical computer science;mathematics	EDA	16.731145136879007	53.03465603433254	147758
db92c5e08f0389de5d23b23d86702349329f031e	instruction-set-extension exploration using decomposable heuristic search	divide and conquer technique instruction set extension exploration decomposable heuristic search gain function integer linear programming state space search;logic design;instructional design;divide and conquer methods;heuristic search;computer architecture;instruction set extension;integer programming;algorithm design and analysis heuristic algorithms state space methods encoding iterative algorithms application software costs process design computer science design engineering;state space;linear programming;code size;optimal algorithm;divide and conquer;heuristic algorithm;divide and conquer methods instruction sets computer architecture logic design linear programming integer programming;instruction sets	Instruction-set-extensions (ISEs) are custom instructions designed specifically for a class of applications. Hence extracting the maximum benefit out of them is any designer's goal. ISE application is the problem of efficiently applying custom instructions such that some gain function like code-size is optimized. Traditional algorithmic techniques like ILP and state space search have failed to address practical designs. Hence a considerable effort has been put on the design of heuristic algorithms. In this paper we present a new optimal algorithm DCA* that combines divide-and-conquer technique with heuristic search to address this problem. We demonstrate the effectiveness of this novel algorithm on real life designs.	algorithm;american and british english spelling differences;compiler;heuristic;mathematical optimization;real life	Samik Das;P. P. Chakrabarti;Pallab Dasgupta	2006	19th International Conference on VLSI Design held jointly with 5th International Conference on Embedded Systems Design (VLSID'06)	10.1109/VLSID.2006.106	heuristic;mathematical optimization;logic synthesis;divide and conquer algorithms;integer programming;computer science;state space;linear programming;theoretical computer science;instruction set;instructional design;incremental heuristic search;algorithm	EDA	15.096298756023199	47.998296415627685	148024
3858fe2143a084ef96857ffe60051e3147f696ec	an efficient sequential quadratic programming formulation of optimal wire spacing for cross-talk noise avoidance routing	sequential quadratic programming;mathematical programming	In thii paper we propose a new, and effective, approach to cross-talk noise avoidance routing. In our new approach we attack the cross-talk noise problem immediately following topological routing, which is the point in the routing process that gives the best trade off between the ability to detect cross-talk noise problems and the ability to correct the problems. We formulate the heart of this new approach as a convex, nonlinear, mathematical programming problem which determines an optimal set of wire spacings under cross-talk noise constraints. This new mathematical programming formulation is based on a detailed knowledge of the underlying cross-talk noise mechanisms and accounts for coupling capacitance, interconnect resistance, and aggressor net signal rise time on nets with arbitrarily complex tree topologies. Finally, by slightly restricting this programming problem we formulate it as a linearly constrained, convex, nonlinesr, mathematical program which can be quickly and efficiently solved using sequential quadratic programming.	crosstalk;mathematical optimization;nonlinear system;rise time;routing;sequential quadratic programming	Paul B. Morton;Wayne Wei-Ming Dai	1999		10.1145/299996.300011	mathematical optimization;discrete mathematics;second-order cone programming;machine learning;quadratically constrained quadratic program;mathematics;sequential quadratic programming;active set method;quadratic programming;physics	EDA	16.464287424524944	51.676462133652535	148049
6191119a89662e4b85b8431d5557fc301401a9e8	criticality history guided fpga placement algorithm for timing optimization	placement;fpga;critical path;timing optimization	We present an efficient timing-driven placement algorithm for FPGAs. Our major contribution is a criticality history guided (CHG) approach that can simultaneously reduce the critical path delay and computation time. The proposed approach keeps track of the timing criticality history of each edge and utilizes this information to effectively guide the placer. We also present a cooling schedule that optimizes both timing and run time when combined with the CHG method. The proposed algorithm is applied to the 20 largest MCNC benchmark circuits. Experimental results show that compared with VPR, our algorithm yields an average of 21.7% reduction (maximum 45.8%) in the critical path delay and it runs 2.2X fasterthan VPR. In addition, our approach outperforms other algorithms discussed in the literature in both delay and run time.	algorithm;benchmark (computing);computation;computer cooling;critical path method;criticality matrix;field-programmable gate array;mathematical optimization;run time (program lifecycle phase);self-organized criticality;time complexity	Hao Li;Yue Zhuo	2008		10.1145/1366110.1366175	embedded system;parallel computing;real-time computing;simulation;computer science;critical path method;field-programmable gate array;placement	EDA	13.991283347011768	53.236025524838126	148571
7df664611845981f90e39257290a2202383a9509	a channel-constrained reconfiguration approach for processing arrays	multiprocessor interconnection networks;logic arrays;reconfiguration algorithm;capacity planning;reconfigurable architectures;bus switches;stringent channel width limitation;design optimization;interconnection network;processing arrays;fault tolerant computing;redundancy;shape;fault tolerant systems;bus segments;bus switches channel constrained reconfiguration approach processing arrays interconnection complexity interconnection network reconfiguration algorithm stringent channel width limitation fault model bus segments;interconnection complexity;multiprocessor interconnection networks reconfigurable architectures fault tolerant computing parallel processing;channel constrained reconfiguration approach;fault model;switches;figure of merit;multiprocessor interconnection networks switches redundancy capacity planning logic arrays shape design optimization algorithm design and analysis conferences fault tolerant systems;algorithm design and analysis;parallel processing;conferences	Most previous reconfiguration approaches considered as main figure of merit, besides probability of survival, length of reconfigured paths and deduced complexity of the interconnection network .from the resulting algorithm; in the present paper, interconnection complexity is taken as the guiding figure of merit and a reconfiguration algorithm based on a stringent channel width limitation is presented. Performances are seen to be very good; fitrthermore. the solution can be extended to a comprehensive fault model, allowing presence of faults in bus segments and switches as well as in PES.	algorithm;fault model;interconnection;network switch;packetized elementary stream;performance	Mariagiovanna Sami;Fausto Distante;Renato Stefanelli	1995		10.1109/DFTVS.1995.476942	reliability engineering;parallel processing;algorithm design;figure of merit;parallel computing;real-time computing;multidisciplinary design optimization;network switch;shape;computer science;fault model;distributed computing;redundancy;algorithm	Theory	13.862756452124016	48.97627021731426	148750
44bf73c0a67fd3f95d5420116187bf1a02e5f555	minimal complexity hierarchical loop representations of sfg processors for optimal high level synthesis	silicon;hardware design languages;embedded design tool;image processing problems;design tool;circuit layout cad signal flow graphs high level synthesis computational complexity integrated circuit design digital signal processing chips hardware description languages;signal flow graph;image processing;sfg nodes;dependence graph;hardware description languages;signal flow graphs;hardware design languages algorithm design and analysis high level synthesis silicon flow graphs signal processing image processing signal synthesis pathology polynomials;silicon implementations;flow graphs;polynomials;nested loop structure;synthesizable vhdl models;high level synthesis;integrated circuit design;hierarchical cdfg;post synthesis hardware;dg2vhdl;minimal complexity hierarchical loop representations;signal processing problems;computational complexity;signal processing;polynomial time heuristic;sfg nodes minimal complexity hierarchical loop representations sfg processors optimal high level synthesis silicon implementations signal flow graphs signal processing problems image processing problems hardware description language representations hdl representations dg2vhdl embedded design tool dependence graph translation synthesizable vhdl models sfg arrays nested loop structure post synthesis hardware polynomial time heuristic;hdl representations;circuit layout cad;digital signal processing chips;sfg arrays;signal synthesis;design complexity;optimal vhdl;sfg processors;dependence graph translation;optimal high level synthesis;pathology;algorithm design and analysis;hardware description language representations	In order to rapidly produce, using high level synthesis, quality silicon implementations of Signal Flow Graphs (SFGs) for large size, real-world signal/image processing problems, the Hardware Description Language (HDL) representations of SFG nodes should possess certain desirable characteristics. We have embedded in DG2VHDL, a design tool developed by the authors which translates automatically an algorithm's Dependence Graph into synthesizable VHDL models for SFG arrays 1], an algorithm that formulates the minimal design complexity nested loop structure (to be deened herein) for each SFG processor. This representation will, in all but some pathological cases, produce post-synthesis hardware whose area scales near optimally with increasing problem size. Furthermore , the time and memory required for the synthesis of such models does not increase with the problem size. A polynomial time heuristic is presented which nds (almost always) the minimal design complexity loop representation of SFG nodes. With the design tool DG2VHDL 1] we have automated the process of generating hardware implementations of Signal Flow Graphs (SFGs) 2]. DG2VHDL generates a fully synthesizable, hierarchical VHDL 3, 4] design that matches the cycle by cycle I/O behavior of the desired SFG array, and after synthesis gives rise to hardware that has the distributed memory and control characteristics of SFG arrays. There is a large body of literature on Dependence Graphs (DGs) and DG to SFG mappings as a method for parallelizing matrix and graph theoretic computations. DG2VHDL allows designers and researchers to quickly capture DGs and produce HDL models for various SFG architectures that are easily synthesized, tested and compared. Our group has used the tool to help create hardware implementations for a variety of problems, including image transforms (DCT 5], DWT 6]), motion estimation 7], and higher order moments estimation 8], among others. The challenge in the development of DG2VHDL was not merely the generation of VHDL but to develop an understanding of the characteristics of optimal HDL models for SFGs. We asked ourselves the following questions: If one was to derive automatically an HDL model of an SFG array, what is the best way to go about it? Is one such HDL model better than another and how does one quantify the diierence? How can we decide if we have obtained an optimal model? As the number of computations in the DG of the algorithm targeted for parallelization increase, how is the best HDL model aaected? The rest of the paper is …	algorithm;analysis of algorithms;computation;control flow;design tool;discontinuous galerkin method;discrete cosine transform;discrete wavelet transform;distributed memory;embedded system;hardware description language;heuristic;high-level programming language;high-level synthesis;image processing;input/output;logic synthesis;motion estimation;parallel computing;signal-flow graph;systemic functional grammar;theory;time complexity;vhdl;way to go	Andrew P Stone;Elias S. Manolakos	2000		10.1109/ASAP.2000.862381	embedded system;algorithm design;computer architecture;parallel computing;image processing;signal-flow graph;computer science;theoretical computer science;signal processing;hardware description language;silicon;high-level synthesis;computational complexity theory;algorithm;polynomial;integrated circuit design	EDA	14.336441046513022	47.63418313440284	149054
6578d84caae5f2db6df59f13ee75385a58e9a46a	fast min-cost buffer insertion under process variations	fabrication;dynamic programming;minimization;computer aided design;process variation;reliability;statistical optimization algorithms performance reliability buffer insertion variation;statistical optimization;very large scale integration;slew constrained buffering;vlsi fabrication;performance;delay constrained buffering;dynamic program;runtime;buffer circuits;vlsi buffer circuits combinational circuits dynamic programming;integrated circuit design;trees;computer aided engineering;integrated circuit interconnections;delay constrained buffering vlsi fabrication dynamic programming min cost buffer insertion trees combinational circuits slew constrained buffering;delay integrated circuit interconnections minimization costs very large scale integration fabrication combinational circuits computer science dynamic programming runtime;vlsi;algorithms;variation;computer science;combinational circuit;min cost buffer insertion;buffer insertion;combinational circuits	Process variation has become a critical problem in modern VLSI fabrication. In the presence of process variation, buffer insertion problem under performance constraints becomes more difficult since the solution space expands greatly. We propose efficient dynamic programming approaches to handle the min-cost buffer insertion under process variations. Our approaches handle delay constraints and slew constraints, in trees and in combinational circuits. The experimental results demonstrate that in general, process variations have great impact on slew-constrained buffering, but much less impact on delay-constrained buffering, especially for small nets. Our approaches have less than 9% runtime overhead on average compared with a single pass of deterministic buffering for delay constrained buffering, and get 56% yield improvement and 11.8% buffer area reduction, on average, for slew constrained buffering.	combinational logic;constrained optimization;dynamic programming;feasible region;insertion sort;maxima and minima;overhead (computing);very-large-scale integration	Ruiming Chen;Hai Zhou	2007	2007 44th ACM/IEEE Design Automation Conference	10.1145/1278480.1278567	electronic engineering;parallel computing;real-time computing;computer science;computer aided design;very-large-scale integration;combinational logic;algorithm	EDA	16.339548712342445	52.938373970419484	149260
8db7946711d560e369a2e878f9200c44b03042d7	design methodology for ic manufacturability based on regular logic-bricks	90 nm integrated circuit manufacturability regular logic bricks logic blocks gate arrays logic arrays pattern regularity full mask set design methodology configurable array standard cell asic resolution enhancement technique ret friendly geometry patterns standard cell library cmos technology;logic arrays;cmos logic circuits integrated circuit design design for manufacture logic design logic arrays;integrated circuit;logic design;design for manufacture;regularity;physical design;integrated circuit design;cmos logic circuits;manufacturability;design methodology manufacturing logic design costs logic arrays cmos technology logic circuits computational geometry integrated circuit manufacture logic gates;resolution enhancement technique;integrated circuits;design methodology;ret	Implementing logic blocks in an integrated circuit in terms of repeating or regular geometry patterns [6,7] can provide significant advantages in terms of manufacturability and design cost [2]. Various forms of gate and logic arrays have been recently proposed that can offer such pattern regularity to reduce design risk and costs [2,4,9,11,12]. In this paper, we propose a full-mask-set design methodology which provides the same physical design coherence as a configurable array, but with area and other design benefits comparable to standard cell ASICs. This methodology is based on a set of simple logic primitives that are mapped to a set of logic bricks that are defined by a restrictive set of RET(Resolution Enhancement Technique)-friendly geometry patterns. We propose a design methodology to explore trade-offs between the number of bricks and associated level of configurability versus the required silicon area. Results are shown to compare a design implemented with a small number of regular bricks to an implementation based on a full standard cell library in a 90nm CMOS technology.	application-specific integrated circuit;cmos;design for manufacturability;logic gate;physical design (electronics);progressive enhancement;standard cell	V. Kheterpal;Vyacheslav Rovner;T. G. Hersan;D. Motiani;Y. Takegawa;Andrzej J. Strojwas;Lawrence T. Pileggi	2005	Proceedings. 42nd Design Automation Conference, 2005.	10.1145/1065579.1065675	embedded system;electronic engineering;computer science;engineering;integrated circuit;design for manufacturability;engineering drawing;standard cell;computer engineering	EDA	12.415203196456387	51.88415415965696	149659
4b97a2dc11865d97642917ed3752eadeef00b2e6	clustering hanan points to reduce vlsi interconnect routing times	silicon;quality assurance;rectilinear steiner tree;optimal solution;steiner trees hanan points very large scale integration vlsi interconnect routing times reduction iterative algorithm;iterative algorithms;vlsi routing;steiner trees;routing;very large scale integration;clustering rectilinear steiner tree vlsi routing;trees mathematics;iterative algorithm;polynomials;network routing;very large scale integration routing iterative algorithms tree graphs costs polynomials joining processes clustering algorithms quality assurance silicon;iterative methods;tree graphs;real world application;clustering;vlsi integrated circuit interconnections iterative methods network routing trees mathematics;integrated circuit interconnections;joining processes;vlsi;clustering algorithms;steiner tree problem;hanan points;steiner tree;vlsi interconnect routing times reduction	The rectilinear Steiner tree problem (RSTP) is a classical problem having numerous real-world applications, including VLSI routing. Since the RSTP is NP-hard, developing polynomial heuristics which can produce near optimal solutions has been the primary approach to solve the RSTP. Many of these algorithms (e.g., 1-Steiner) use Hanan points. However, although the algorithms iterate through the entire set of Hanan points, frequently less than 5% of Hanan points appear in the final tree. In this paper, we propose several strategies to reduce the size of the set of Hanan points any iterative algorithm needs to consider, by eliminating points which are less likely to be included in the solution. This results in an improvement in run time, as the iterative algorithm must consider fewer Hanan points. Using our methods, we were able to generate Steiner trees with similar cost to those found when all Hanan points were considered, but with execution time reductions of more than 30%	computer engineering;computer-aided design;discrete mathematics;electrical connection;experiment;heuristic (computer science);integrated circuit;iteration;iterative method;np-hardness;polynomial;prim's algorithm;rectilinear steiner tree;regular grid;routing;run time (program lifecycle phase);spanning tree protocol;steiner tree problem;symposium on discrete algorithms;very-large-scale integration	Shouvik Chowdhury;Gary William Grewal;Dilip K. Banerji	2006	2006 Canadian Conference on Electrical and Computer Engineering	10.1109/CCECE.2006.277830	quality assurance;mathematical optimization;combinatorics;discrete mathematics;steiner tree problem;computer science;mathematics;computer network	DB	15.354109034733147	50.87390289871849	150053
2a65bfa99b177b6c94b3ead02a58903296f75033	a monolithic hough transform processor based on restructurable vlsi	very large scale integration integrated circuit interconnections wafer scale integration image processing silicon logic design feature extraction optical device fabrication manufacturing switches;cad tools;image processing;monolithic integrated circuits;pcb;monolithic hough transform processor;restructurable vlsi;wafer scale integration technology;computerised pattern recognition;linear feature extraction;transforms;vlsi;digital arithmetic;vlsi circuit cad computerised pattern recognition digital arithmetic microprocessor chips monolithic integrated circuits transforms;hough transform;circuit cad;pixel grouping;wsi technology;cad tools pixel grouping linear feature extraction pcb wsi technology monolithic hough transform processor restructurable vlsi wafer scale integration technology image processing pc board;pc board;microprocessor chips	This correspondence describes the implementation of a Hough transform processor using a wafer-scale integration technology, Restructurable VLSI. The Hough transform is typically used as a grouping operation in an image processing sequence. The transform discussed in this paper groups pixels in order to extract linear features. This calculation is realized with a wafer-scale processor that allows a complete line extraction system to be integrated on a single PC board. Also discussed i s the use of the RVLSI CAD tools that allowed this processor to be realized without incurring silicon layout and processing overhead.	computer-aided design;hough transform;image processing;overhead (computing);pixel;very-large-scale integration;wafer-scale integration	F. Matthew Rhodes;Joseph J. Dituri;Glenn H. Chapman;Bruce E. Emerson;Antonio M. Soares;Jack I. Raffel	1988	IEEE Trans. Pattern Anal. Mach. Intell.	10.1109/34.3873	embedded system;computer vision;computer hardware;image processing;computer science;printed circuit board	EDA	12.803997603657072	47.47863065025688	150242
e1ca97904b07799268752bfe32e90e24255da24e	high throughput and low power fir filtering ip cores	logic design;block processing high throughput fir filtering ip core low power fir filtering ip core multiple datapath coefficient segmentation;integrated circuit design;low power;logic design fir filters digital signal processing chips integrated circuit design;fir filter;finite impulse response filter throughput power filters filtering signal processing algorithms energy consumption design methodology hardware power engineering and energy personal communication networks;digital signal processing chips;fir filters;power consumption;high throughput;high performance;design methodology	This paper presents the implementation of high throughput and low power FIR filtering IP cores. Multiple datapaths are utilized for high throughput and low power is achieved through coefficient segmentation, block processing and combined segmentation and block processing algorithms. The paper presents the complete architectural implementation of these algorithms for high performance applications. The paper describes the design methodology, evaluation environment, and provides results which show up to 33% reduction in power consumption with less than 10% increase in area depending on the number of datapaths.	algorithm;coefficient;expression (computer science);finite impulse response;image segmentation;semiconductor intellectual property core;throughput	C. H. Wang;Ahmet T. Erdogan;Tughrul Arslan	2004	IEEE International SOC Conference, 2004. Proceedings.	10.1109/SOCC.2004.1362374	embedded system;electronic engineering;parallel computing;real-time computing;computer science;engineering;finite impulse response	HPC	12.488979836368783	47.00465776346997	150591
2cbac5e041e2c70367bc54a166bcd5a5210a55a4	a vhdl-based design methodology: the design experience of a high performance asic chip	computer aided design;structural model;neural networks;integrated circuit layout;design space;chip;iterative methods;digital image storage;electric network synthesis;design guideline;semiconductor device models;image analysis;semiconductor storage;quality control;high performance;microprocessor chips;real time systems;design methodology	In this paper we present a VHDL-based design methodology which we adopted in the design of an ASIC chip for real time image analysis in a quality control industrial environment. The design methodology is based on the following considerations: i) we explored the design space by applying some high level transformations on the VHDL speci cations; ii) we de ned some VHDL structural modeling (and design) guidelines to take into account, already in the rst design steps, some physical issues which, otherwise could cause incorrect behavior. The presented methodology proved to be e cient in avoiding design iterations and giving reliable high performance circuits.	application-specific integrated circuit;class diagram;correctness (computer science);hardware description language;high-level programming language;image analysis;image processing;iteration;macroblock;physical design (electronics);random-access memory;simulation;strong generating set;vhdl;verilog;wiring	Maurizio Valle;Daniele D. Caviglia;Marco Cornero;Giovanni Nateri;Luciano Briozzo	1994			chip;quality control;computer architecture;electronic engineering;image analysis;design methods;telecommunications;computer science;engineering;iterative method;integrated circuit layout;computer engineering	EDA	12.405022329390427	50.75646365700211	150899
3e1cd70d20d631af5ff55156078df266e650a9d7	simultaneous test pattern compaction, ordering and x-filling for testing power reduction	optimisation;test pattern compaction;circuit faults;helium;iscas 89 benchmark circuits test pattern compaction power reduction x filling ordering power dissipation scan based testing pseudo boolean optimization problems window based local search;automatic test pattern generation;pseudo boolean optimization problems;ordering;sequential analysis;testing;optimization problem;window based local search;x filling;test pattern generators;logic gates;compaction;iscas 89 benchmark circuits;power dissipation;integrated circuit testing;pseudo boolean optimization;fault coverage;optimization;circuit testing;compaction circuit testing power dissipation sequential analysis automatic test pattern generation integrated circuit testing test pattern generators helium computer science circuit faults;power reduction;computer science;scan based testing;peak power;local search;optimisation integrated circuit testing	Minimizing the power dissipation in scan-based testing is an important problem. We provide for the first time an optimal formulation for the problem of simultaneously compacting, ordering, and X-filling a set of test patterns such that the fault coverage is maintained but the (overall or peak) power dissipation is minimized. We model the problem as a sequence of Pseudo-Boolean optimization problems. We give a scalable implementation of the optimization problem based on window-based local search. In contrast to the traditional technique of sequentially optimizing for compaction, ordering, and X-filling, we experimentally demonstrate that our simultaneous optimization can reduce power dissipation by 47% on ISCAS'89 benchmark circuits.	benchmark (computing);cpu power dissipation;data compaction;experiment;fault coverage;local search (optimization);mathematical optimization;optimization problem;scalability;test card	Ju-Yueh Lee;Yu Hu;Rupak Majumdar;Lei He	2009	2009 10th International Symposium on Quality Electronic Design	10.1109/ISQED.2009.4810379	compaction;optimization problem;mathematical optimization;electronic engineering;fault coverage;logic gate;order theory;local search;dissipation;automatic test pattern generation;sequential analysis;mathematics;software testing;helium;algorithm	EDA	17.31667206176447	53.102905116437064	151718
457eaacdbf3bf114642e3b1f690330f8469e8b4c	generation of color-constrained spanning trees with application in symbolic circuit analysis	linear network analysis trees mathematics circuit analysis computing analogue circuits network topology;transfer functions;sorting;color;iel;trees mathematics;network topology;tree graphs;analog circuits;linear network analysis;circuit analysis;circuit analysis tree graphs algorithm design and analysis analog circuits color transfer functions frequency capacitance sorting iel;symbolic circuit analysis;large analog circuits;analogue circuits;color constrained spanning trees;capacitance;second lowest weight;spanning tree;symbolic analysis;large analog circuits color constrained spanning trees symbolic circuit analysis second lowest weight uncolored problem;frequency;circuit analysis computing;algorithm design and analysis;uncolored problem	Proves a property of the second lowest weight spanning tree with color constraint. It enables one to enumerate color-constrained spanning trees in the increasing order of their weights by generalizing existing algorithms for the uncolored problem. A version of the algorithm is implemented in a program for the approximate symbolic analysis of large analog circuits. >	file spanning;network analysis (electrical circuits);symbolic circuit analysis	Qicheng Yu;Carl Sechen	1994		10.1109/GLSV.1994.289959	algorithm design;combinatorics;discrete mathematics;minimum degree spanning tree;spanning tree;network analysis;analogue electronics;computer science;sorting;minimum spanning tree;frequency;mathematics;capacitance;transfer function;symbolic data analysis;tree;network topology;algorithm	Logic	16.71850907875787	49.26789150501105	151869
3e18a1f00fec1f7d1853047cf45925e0b97026f4	efficient state assignment framework for asynchronous state graphs	state assignment framework;state assignment;logic design;signal design;computation time state assignment framework asynchronous state graphs state graph level complete state coding problem asynchronous circuits circuit area;flip flops;asynchronous circuit;automata;logic design automata environmental management circuit synthesis signal synthesis signal design flip flops memory architecture signal processing;circuit area;asynchronous state graphs;memory architecture;signal processing;asynchronous circuits;signal synthesis;computation time;state graph level;encoding;environmental management;circuit synthesis;complete state coding problem;logic design asynchronous circuits encoding state assignment	This paper presents a new eficient state assignment framework for synthesizing asynchronous state graphs. This framework: operates purely at the state graph level and is applicable t o a broad class of behaviors. In this paper we focus the framework for solving the complete state coding problem. This method has been automated and applied to a large set of asynchronous circuits. It achieves significant improvements in terms of both circuit area and computation time.	asynchronous circuit;computation;time complexity	Chantal Ykman-Couvreur;Bill Lin	1995		10.1109/ICCD.1995.528943	logic synthesis;real-time computing;asynchronous circuit;computer science;theoretical computer science;signal processing;distributed computing;automaton;encoding	EDA	15.739232765538988	48.32716326571406	151949
3385c01033d13983c5dd64dd07bb1e0b2058c782	timing optimization of logic network using gate duplication	technology independent logic synthesis logic network gate duplication timing optimization algorithm circuit delay;boolean function;critical path;timing optimization;circuit optimisation logic cad timing;circuit optimisation;logic cad;timing logic gates delay circuit optimization boolean functions appropriate technology circuit synthesis network synthesis libraries buildings;timing	We present a timing optimization algorithm based on gate duplication. We first examine the relationship between gate duplication and delay reduction, and then introduce the notion of duplication gain for selecting the good candidate gates to be duplicated. The objective is to obtain the maximum delay reduction with the minimum duplications. The performance of the algorithm is demonstrated with experiments on benchmark circuits. Our approach can also be combined with other technologyindependent timing optimizers (such as speed-up) to achieve further delay improvement.	algorithm;benchmark (computing);data deduplication;experiment;logic synthesis;mathematical optimization	Chun-hong Chen;Chi-Ying Tsui	1999		10.1109/ASPDAC.1999.760003	boolean circuit;circuit minimization for boolean functions;electronic engineering;logic optimization;delay calculation;logic gate;logic family;computer science;theoretical computer science;elmore delay;critical path method;boolean function;circuit extraction;static timing analysis;algorithm	EDA	16.883155069194995	49.975074625012155	152282
1d0679165b6b5714fd2afd2a9cc69da23cb9c582	robust design of embedded systems	binary decision diagrams;circuit optimisation;embedded systems;logic design;binary decision diagram;design revision;design space exploration;embedded system;robust system design;robustness-aware optimization;set-based approach;symbolic encoding	This paper presents a methodology to evaluate and optimize the robustness of an embedded system in terms of invariability in case of design revisions. Early decisions in embedded system design may be revised in later stages resulting in additional costs. A method that quantifies the expected additional costs as the robustness value is proposed. Since the determination of the robustness based on arbitrary revisions is computationally expensive, an efficient set-based approach that uses a symbolic encoding as Binary Decision Diagrams is presented. Moreover, a methodology for the integration of the optimization of the robustness into a design space exploration is proposed. Based on an external archive that accepts also near-optimal solutions, this robustness-aware optimization is efficient since it does not require additional function evaluations as previous approaches. Two realistic case studies give evidence of the benefits of the proposed approach.	analysis of algorithms;archive;binary decision diagram;design space exploration;embedded system;mathematical optimization;systems design	Martin Lukasiewycz;Michael Glaß;Jürgen Teich	2010	2010 Design, Automation & Test in Europe Conference & Exhibition (DATE 2010)		control engineering;process design;embedded system;algorithm design;logic synthesis;real-time computing;multidisciplinary design optimization;computer science;theoretical computer science;space exploration;ontology;boolean function;binary decision diagram;algorithm;encoding;robustness	EDA	13.33416775322702	51.591882830801325	152582
5854a3231d2725c3de70be0eaa1b0179160d9364	efficient totally-ordered subset generation, with application in partial reconfiguration		"""Partial reconfiguration (PR) of a reconfigurable fabric is typically performed at run-time at the level of a """"frame"""" (the smallest independently reconfigurable unit). Large frames often cause many elements to be reconfigured unnecessarily, causing the partial reconfiguration time to increase. While reconfiguring a large number of small frames, reduces the number of configuration bits used, it is also a problem on conventionalarchitectures because the frames to be reconfigured are selected, one by one, using a 1-hot decoder. Thus, key to using small frames and reducing partial reconfiguration time is hardware that can efficiently generate many subsets of frames. Specifically, if Zn = {0,1,..., n-1} is the set of all frames, then the hardware must efficiently generate a set J = Si : Si ⊂ Zn} subset of Zn of subsets of frames. It has been shown that a """"MU-Decoder"""" can generate the above set S efficiently, provided its elements satisfy the property of """"isomorphic total-ordering.""""In this paper we show the condition for efficient generation of S can be made much less restrictive than isomorphic total ordering and the number of subsets produced increased, even without an increase in the order of hardware resources (gates and delay) of the MU-Decoder. These results can also be used as a basis for producing subsets that are not necessarily in total-order, lending further utility to the MU-decoder."""	computational complexity theory;field-programmable gate array;hamming distance;lambda-mu calculus;magnetic stripe card;stepping level	Utsav Agarwal;Ramachandran Vaidyanathan	2017	2017 IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW)	10.1109/IPDPSW.2017.167	parallel computing;control reconfiguration;field-programmable gate array;isomorphism;computer science;distributed computing;decoding methods;logic gate;real-time computing	EDA	11.342017043612318	47.51268189760822	152742
dc15d388beca040c77790ef5085a1a3d99342916	a new simultaneous circuit partitioning and chip placement approach based on simulated annealing	printed circuits;high density;cost function;very large scale integration;vlsi design;simulated annealing;flow graphs;chip;optimization problem;circuit simulation;partitioning problem;complex system;adders;integrated circuit interconnections;simulated annealing cost function integrated circuit interconnections adders circuit simulation partitioning algorithms very large scale integration flow graphs delay printed circuits;easily routable designs;vlsi;circuit layout cad;placement problem;printed circuit board;easily routable designs chip placement simulated annealing vlsi design partitioning problem placement problem;connected component;vlsi circuit layout cad simulated annealing;cost model;chip placement;partitioning algorithms	The problems of circuit partitioning and chip placement have been studied in the past. Given a circuit partitioned into chips, one can optimize the placement of the chips on a printed circuit board with regard to a given cost function. Conversely, given a placement of the chips on the board, one can optimize the partitioning of the circuit into the chips with regard to the same cost function. However, given neither the circuit partitioning nor the chip placement, we are faced with a difficult optimization problem. Our target technology is one in which the chips are unpackaged chips placed on a substrate, analogous to the printed circuit board and interconnected together with high density interconnect to realize a complex system. We propose a new approach in which the circuit is both partitioned and placed simultaneously by a simulated annealing based algorithm. Our approach is seen to yield excellent results in reasonable run times.	algorithm;complex system;experiment;loss function;mathematical optimization;optimization problem;printed circuit board;printing;routing;simulated annealing	Abhijit Chatterjee;Richard I. Hartley	1990		10.1145/123186.123221	embedded system;mathematical optimization;complex systems;electronic engineering;parallel computing;computer science;electrical engineering;very-large-scale integration;circuit extraction;printed circuit board;placement	EDA	14.609242459300823	50.85677280325263	153377
f190172cf482c85f78cd39a68467f6e86266026c	multilevel synthesis minimizing the routing factor	logic cad circuit layout cad;boolean function;routing boolean functions wiring filtering network synthesis kernel industrial control very large scale integration logic design design automation;logic synthesis;circuit layout cad;technology mapping;logic cad;kernel filtering multilevel synthesis routing factor logic synthesis standard cells routing area gate area synthesis steps factorization technology mapping lexicographical expression boolean function	This paper presents a multilevel synthesis method on standard cells aiming at reducing both gate and wiring areas. The goal is to decrease the routing factor which is defined as the ratio between the routing area and the gate area. The wiring is taken into account during the synthesis steps (factorization and technology mapping). The approach is based on lexicographical expression of Boolean function controlling input dependency, and on kernel filtering controlling excessive factorizations responsible for wiring complexity increase.	lexicography;routing;wiring	Pierre Abouzeid;K. Sakouti;Gabriele Saucier;Franck Poirot	1990		10.1145/123186.123307	embedded system;boolean circuit;electronic engineering;logic synthesis;logic optimization;computer science;theoretical computer science;boolean function;algorithm	EDA	15.961197349769252	49.35755699641496	154106
643777fccc172168a74b5fbc35601026149e3c4c	statistical analysis driven synthesis of asynchronous systems	design process;statistical analysis asynchronous circuits integrated circuit design logic design;asynchronous datapaths statistical analysis asynchronous datapath synthesis system statistical schedule length analysis resource binding;logic design;asynchronous system;integrated circuit design;statistical analysis;asynchronous circuits;statistical analysis processor scheduling job shop scheduling clocks space exploration control system synthesis delay effects circuit synthesis wires crosstalk	In this paper, we propose an effective asynchronous datapath synthesis system to optimize statistical schedule length using statistical schedule length analysis. The proposed method is a heuristics which simultaneously performs scheduling and resource binding. During the design process, decisions are made based on the statistical schedule length analysis. It is demonstrated that asynchronous datapaths with the reduced mean total computation time are successfully synthesized for some datapath synthesis benchmarks.	algorithm;asynchronous system;computation;connection-oriented ethernet;datapath;heuristic (computer science);performance;schedule (computer science);scheduling (computing);statistical model;time complexity	Koji Ohashi;Mineo Kaneko	2005	2005 International Conference on Computer Design	10.1109/ICCD.2005.100	asynchronous system;computer architecture;electronic engineering;parallel computing;logic synthesis;real-time computing;design process;asynchronous circuit;telecommunications;computer science;integrated circuit design	EDA	17.284914669303262	52.088967817323784	154464
4c5b3303d822158d0ce1eb950dbbd33006aba144	implementation of the powerpc 601 microprocessor		To produce a marketable PowerPC™ microprocessor on a short development schedule, the logic had to be designed in a manner flexible enough to allow quick modifications without sacrificing high performance and density when customized cells were required. This was accomplished for the PowerPC 601™ microprocessor (601) with a high-level design-language description, which was synthesized for a gate-level implementation and simulated for functional verification. In a similar way, the physical design strategy for the 601 struck an attractive balance between a highly automated, flexible floorplan and the additional density that had to be available for limited, well-conceived manual placements. Finally, a rigorous test strategy was implemented, which has proved very useful in analyzing the processor and in assembling 601-based systems. Careful adherence to this methodology led to a successful first-pass physical implementation, leaving the second iteration for additional customer requests.	microprocessor;powerpc 600	Timothy B. Brodnax;Richard V. Billings;Scott C. Glenn;P. T. Patel	1994	IBM Journal of Research and Development	10.1147/rd.385.0621	computer architecture;powerpc;power architecture	EDA	11.671724491754205	53.044340240254435	154696
6c0c29d398cc004e7e7671da6b6276b5b057d803	eco cost measurement and incremental gate sizing for late process changes	incremental algorithms;linear programming;eco;gate sizing	Changes in the manufacturing process parameters may create timing violations in a design, making it necessary to perform an engineering change order (ECO) to correct these problems. We present a framework for performing incremental gate sizing for process changes late in the design cycle, and a method for creating initial designs that are robust to late process changes. This includes a method for measuring and estimating ECO cost and for transforming these costs into linear programming optimization problems. In the case of ECOs, the method reduces ECO costs on average, by 89% in changed area compared to a leading commercial tool. Furthermore, the robust initial designs are, on average, 55% less likely to need redesign in the future.	design tool;engineering change order;linear programming;mathematical optimization;slack variable	John Lee;Puneet Gupta	2012	ACM Trans. Design Autom. Electr. Syst.	10.1145/2390191.2390207	mathematical optimization;simulation;computer science;linear programming	EDA	16.535147158809888	53.2354873932395	154705
2ad046cebee227613e8b8999defd86fe8a537343	timing analysis for synthesis of hardware interface controllers using timed signal transition graphs	microprocessors;vmebus hardware interface controller design timed signal transition graphs microprocessor based systems system integration phase component interconnection interfacing protocols interpreted timed petri net design verification symbolic timing analysis interface path delays protocol specifications circuit delays environmental timing constraints bus arbitration;microcontrollers;protocols;vmebus;logic design;cad;signal analysis;symbolic timing analysis;system integration phase;interface design;interpreted timed petri net;protocol specifications;environmental timing constraints;system buses;time petri net;timed signal transition graphs;interfacing protocols;integrated circuit interconnections;system integration;circuit delays;signal transition graph;timing signal analysis signal synthesis hardware protocols delay circuit synthesis integrated circuit interconnections logic design microprocessors;bus arbitration;protocol specification;timing analysis;microprocessor based systems;component interconnection;design verification;signal synthesis;cad timing microcomputers microcontrollers protocols delays system buses petri nets;petri nets;hardware interface controller design;interface path delays;microcomputers;circuit synthesis;delays;hardware;timing;time constraint	This work addresses the design of hardware inte$ace controllers for microprocessor-based systems. Inteij5ace design is required during the system integration phase to interconnect components which may use different intelfacing protocols. In this paper it is shown that both the component interfacing protocols and the interface design can be described using an interpreted timed Petri net. Traditionally veriJication of the design is performed after the design has been synthesized. Such approach usually requires several iterations, i f the implementation violates some of the design constraints. A symbolic timing analysis is proposed to alleviate this problem: tight bounds on the intel-face path delays are computed using the available information from the protocol specijkations prior to interface implementation. This is possible because our model can describe both circuit delays and environmental timing constraints. An example involving bus arbitration in the VhfEbus is used to illustrate the analysis technique.	bus mastering;hardware interface design;iteration;microprocessor;petri net;signal transition;static timing analysis;system integration	Marco A. Escalante;Nikitas J. Dimopoulos;Dilyan Gyuroff;Hausi A. Müller	1995		10.1109/PNPM.1995.524339	embedded system;computer architecture;real-time computing;computer science	EDA	10.624987149840353	50.76777104295842	155643
d3b304abff15c5228bc7a99817f7c5ba95e87678	a discrete heuristics approach to predictive evaluation of semi-custom ic layouts	libraries;integrated circuit layout tiles routing permission shape control bridge circuits military computing very large scale integration wire libraries;integrated circuit layout;routing;very large scale integration;rule based;wire;permission;shape control;tiles;vlsi layout;bridge circuits;critical parameter;military computing	The significant computational requirements of VLSI layout suggest that it may be desirable to estimate the feasibility of a task before actually performing the task. The system described in this paper uses a discrete heuristics approach to estimate the future quality of a semi-custom layout before any placement or routing is done. It does this evaluation with respect to critical parameters such as routability, area utilization, and wire length, using heuristics arranged in a discrete graph structure. The system can handle user-specified non-rectangular layout shapes. Its rule-based structure allows easy observation and modification of individual heuristics for the purposes of “fine tuning.” The system also detects potential problems and suggests possible solutions.	computation;electrical engineering;heuristic (computer science);logic programming;requirement;routing;rule-based system;semiconductor industry;very-large-scale integration	Ali A. Minai;Ronald D. Williams;F. W. Blake	1987	24th ACM/IEEE Design Automation Conference	10.1145/37888.38010	rule-based system;layout;embedded system;routing;electronic engineering;simulation;ic layout editor;computer science;engineering;electrical engineering;design layout record;integrated circuit layout;very-large-scale integration;engineering drawing;computer network	EDA	14.1660225084105	51.46832612080037	156068
8aa5a5d27f427ae6832c5d4832c1a23b5b7ce7a6	circuit partitioning using particle swarm optimization for pseudo-exhaustive testing	uninterruptible power systems;pifan;circuit partitioning;heuristic solution;cones;data mining;pifan circuit partitioning particle swarm optimization pseudoexhaustive testing digital ic np complete problem heuristic solution combinational benchmark circuits;dependency;optimization problem;particle swarm optimisation circuit optimisation combinational circuits computational complexity integrated circuit testing logic partitioning;combinational benchmark circuits;particle swarm optimizer;test pattern generators;logic gates;computational complexity;pseudoexhaustive testing;particle swarm optimization;size of test;pseudo exhaustive testing;integrated circuit testing;circuit optimisation;logic partitioning;particle swarm optimization pseudo exhaustive testing swap operator cones dependency;particle swarm optimisation;digital ic;circuit testing particle swarm optimization electronic equipment testing test pattern generators electrical fault detection fault detection circuit faults combinational circuits communications technology benchmark testing;swap operator;np complete problem;partitioning algorithms;combinational circuits	Pseudo-exhaustive testing reduces the size of test set and test application time compared to exhaustive testing, by partitioning the circuit into cones with lesser number of dependency and exercising each cone with all possible input patterns. This implies that the circuit with large number of inputs should be efficiently partitioned into cones having manageable number of inputs. Partitioning problem is NP-complete and effective heuristic solutions have been proposed in the past. In this paper, we present an approach based on Particle Swarm Optimization (PSO), for circuit partitioning. PSO is based on the iterative use of a set of particles that correspond to states in an optimization problem, moving each agent in a numerical space looking for the optimal position. Experiments on combinational benchmark circuits validate the effectiveness of our work. Our approach shows an improvement of 25% over another PSO based partitioning approach published in [15]. Over PIFAN [16] and I-PIFAN [14] our approach gave a maximum of 72% and 56% improvement, respectively.	benchmark (computing);combinational logic;cone (formal languages);heuristic;iterative method;mathematical optimization;mike lesser;np-completeness;numerical analysis;optimization problem;particle swarm optimization;test set	S. Krishna Kumar;P. Uday Bhaskar;Santanu Chattopadhyay;Pradip Mandal	2009	2009 International Conference on Advances in Recent Technologies in Communication and Computing	10.1109/ARTCom.2009.145	dependency;optimization problem;mathematical optimization;np-complete;cone;logic gate;computer science;theoretical computer science;mathematics;combinational logic;computational complexity theory;particle swarm optimization;algorithm	EDA	16.966574736304366	48.57627688619359	156207
a52a7a1f5241c9bbe3d2291ce372bb1cc35c6745	obstacle-avoiding rectilinear minimum-delay steiner tree construction toward ip-block-based soc design	integrated circuit interconnections trees mathematics system on chip delays;top down;trees mathematics;delay routing minimization topology wire system on a chip integrated circuit interconnections capacitance very large scale integration circuit optimization;obstacle avoidance;system on chip;integrated circuit interconnections;topological construction steiner tree construction system on chip design ip blocks routing obstacles global interconnect delay minimization function;steiner tree minimal delay obstacle routing;steiner tree;delays	With system-on-chip design, IP blocks form routing obstacles that deteriorate global interconnect delay. In this paper, we present a new approach for obstacle-avoiding rectilinear minimal delay Steiner tree (OARMDST) construction. We formalize the solving of minimum delay tree through the concept of an extended minimization function, and trade the objective into a top-down recursion, which wisely produces delay minimization from source to critical sinks. We analyze the topology generation with treatment of obstacles and exploit the connection flexibilities. To our knowledge, this is the first in-depth study of OARMDST problem based on topological construction. Experimental results are given to demonstrate the efficiency of the algorithm.	algorithm;computation;dynamic programming;recursion;regular grid;routing;steiner tree problem;system on a chip;top-down and bottom-up design	Jingyu Xu;Xianlong Hong;Tong Jing;Yang Yang	2006	IEEE Transactions on Circuits and Systems II: Express Briefs	10.1109/TCSII.2005.862041	system on a chip;mathematical optimization;electronic engineering;discrete mathematics;steiner tree problem;computer science;top-down and bottom-up design;mathematics;obstacle avoidance	EDA	15.769420808494932	51.29134952545418	156301
74abc9df1a64d161c6afc0db8cd4b2eb5bda4c86	optimal clock period fpga technology mapping for sequential circuits	field programmable gate array;look up table;sequential circuits;sequential synthesis;look up tables;clock period;logic replication;fpgas;field programmable gate arrays;technology mapping;retiming;flip flop	We study the technology mapping problem for sequential circuits for look-up table (LUT) based field programmable gate arrays (FPGAs). Existing approaches to the problem simply remove the flip-flops (FFs), then map the remaining combinational logic, and finally put the FFs back. These approaches ignore the sequential nature of a circuit and assume the positions of the FFs are fixed. However, FFs in a sequential circuit can be reposistioned by a functionality-preserving transformation called retiming. As a result, existing approaches can only consider a very small portion of the available solution space. We propose in this paper a novel approach to the technology mapping problem. In our approach, retiming is integrated into the technology mapping process so as to consider the full solution space. We then present a polynomial technology mapping algorithm that, for a given circuit, produces a mapping solution with the minimum clock period among all possible ways of retiming. The effectiveness of the algorithm is also demonstrated experimentally.	algorithm;clock rate;combinational logic;experiment;flops;feasible region;field-programmable gate array;flip-flop (electronics);lookup table;polynomial;retiming;sequential logic	Peichen Pan;C. L. Liu	1998	ACM Trans. Design Autom. Electr. Syst.	10.1145/293625.293632	embedded system;parallel computing;real-time computing;computer science;algorithm;field-programmable gate array	EDA	17.267176515314922	51.36269557712969	157017
7d483942a6e4c9490b4b25beb2ce9d1ef1b2c1c1	a color graphics system for i.c. mask design and analysis	automated system;general circuit analysis program;conventional graphics display;mos circuit;graphics display;device level;resulting program;mos ic layout;integrated circuit mask design;color graphics system;comprehensive system;c. mask design;shape;computer aided design;telephony;integrated circuit layout;microcomputers;system design;logic design;computer graphics;hardware;high resolution;integrated circuit	In view of the continuing requirement for good interactive tools in the area of computer aided design, an advanced high-resolution monochrome and color, mini-computer controlled, graphics display has been designed and built. Considering the particular area of integrated circuit mask design, the ability to produce filled, color coordinated shapes extends the designer's interpretation of displayed layouts to a level not previously available with conventional graphics displays. Apart from this welcome improvement in interpretation, the hardware structure of the display provides the system designer with a tool which is potentially far more powerful than existing displays. This factor has been used to implement a comprehensive system to design MOS IC layouts in a detailed manner at the device level. A resulting program is described which is capable of deriving the node table, transistor parameters and parasitic effects for a MOS circuit displayed on the graphics monitor. The output format of this program is in a form suitable for direct input to a general circuit analysis program. The algorithms which use a topological mapping approach are shown to have possible execution time benefits over previous methods while maintaining the overwhelming advantage of user interaction. The relationship of this approach to more automated systems is also treated.	algorithm;computer-aided design;graphics;image resolution;integrated circuit;minicomputer;monochrome;network analysis (electrical circuits);run time (program lifecycle phase);systems design;transistor model	Neil Weste	1978	15th Design Automation Conference		embedded system;electronic engineering;logic synthesis;image resolution;computer hardware;shape;computer science;electrical engineering;operating system;integrated circuit;computer aided design;microcomputer;integrated circuit layout;telephony;computer graphics;computer engineering;systems design;computer graphics (images)	EDA	11.929302629663757	50.915673621136655	157312
4a8ced2035733ebd96a11d02f5dd7440afd0cca6	synthesizable standard cell fpga fabrics targetable by the verilog-to-routing cad flow	field programmable gate array	In this article, we consider implementing field-programmable gate arrays (FPGAs) using a standard cell design methodology and present a framework for the automated generation of synthesizable FPGA fabrics. The open-source Verilog-to-Routing (VTR) FPGA architecture evaluation framework [Rose et al. 2012] is extended to generate synthesizable Verilog for its in-memory FPGA architectural device model. The Verilog can subsequently be synthesized into standard cells, placed and routed using an ASIC design flow. A second extension to VTR generates a configuration bitstream for the FPGA, where the bitstream configures the FPGA to realize a user-provided placed and routed design. The proposed framework and methodology makes possible the silicon implementation of a wide range of VTR-modeled FPGA fabrics. In an experimental study, area and timing-optimized FPGA implementations in 65nm TSMC standard cells are compared to a 65nm Altera commercial FPGA. In addition, we consider augmenting the generic standard-cell library from TSMC with a manually designed and laid-out FPGA-specific cell. We demonstrate the utility of the custom cell in reducing the area of the synthesized FPGA fabric.	application-specific integrated circuit;bitstream;computer-aided design;design flow (eda);experiment;field-programmability;field-programmable gate array;in-memory database;logic synthesis;open-source software;routing;standard cell;verilog	Jin Hee Kim;Jason Helge Anderson	2017	TRETS	10.1145/3024063	embedded system;computer architecture;parallel computing;reconfigurable computing;computer science;operating system;fpga prototype;field-programmable gate array	EDA	11.759751494518502	51.84972683074028	157478
ac970d09a20972aee70dd32c6ecc5f304cb6c1f8	a minimal-state processing search algorithm for satisfiability problems	mips_sat;iterative method;heuristic;iterative method satisfiability problem np complete problem dimacs sat truth assignment approximation algorithm search algorithm heuristic optimization;optimisation;iterative algorithms approximation algorithms cost function heuristic algorithms lagrangian functions communication networks informatics np complete problem cmos logic circuits logic design;communication networks;approximate algorithm;cost function;iterative algorithms;logic design;iterative methods computability search problems optimisation approximation theory computational complexity;dimacs;approximation algorithms;approximation algorithm;computability;search algorithm;satisfiability;approximation theory;sat;iterative methods;computational complexity;heuristic algorithms;cmos logic circuits;optimization;informatics;search problems;satisfiability problem;lagrangian functions;truth assignment;heuristic algorithm;np complete problem	The satisfiability problem (SAT) is a typical NP-complete problem where a wide range of applications has been studied. Given a set of variables U and a set of clauses C, the goal of SAT is to find a truth assignment to variables in U such that every clause in C is satisfied if it exits, or to derive the infeasibility otherwise. This paper presents an approximation algorithm, called a minimal-state processing search algorithm for SAT (MIPS-SAT). MIPS-SAT repeatedly transits minimal states in terms of the cost function for searching a solution through a construction stage and a refinement stage. The first stage greedily generates an initial state composed of as many satisfied clauses as possible. The second stage iteratively seeks a solution while keeping state minimality. The performance of MIPS-SAT is verified through solving DIMACS benchmark instances.	search algorithm	Nobuo Funabiki;Tokumi Yokohira;Tom Nakanishi;Shigeto Tajima;Teruo Higashino	2001		10.1109/ICSMC.2001.972986	mathematical optimization;discrete mathematics;computer science;mathematics;iterative method;approximation algorithm;algorithm	AI	16.620609119822053	48.74754827658568	157998
1fdce180e781e9b38db4ac207230472d744f26e3	slicing floorplans with range constraint	range constraint;slicing floorplans	In floorplanning, it is important to allow users to specify placement constraints. Floorplanning with pm-placed constraint is considered recently in [3, 131. In this paper, we address a more general placement constraint called range constraint, in which a module must be placed within a given rectangular region in the floorplan. This is a more general formulation because any pre-placed constraint can be written as a range constraint. We extend the Wong-Liu algorithm [ll] to handle range constraint. Our main contribution is a novel shape curve computation which takes range constraint into consideration. Experimental results show that the extended floorplanner performs very well and, in particular, it out-performs the floorplauner in [13] when specialized to handle pm-placed modules.	algorithm;bit slicing;computation;constraint logic programming;constraint programming;floorplan (microelectronics)	Evangeline F. Y. Young;Martin D. F. Wong	1999		10.1145/299996.300033	mathematical optimization;simulated annealing;computer science;electrical engineering;theoretical computer science;mathematics;integrated circuit layout;very-large-scale integration;engineering drawing	DB	13.833739318991942	51.699354470457685	158854
1a0d398e2ed253f07bf6cb5d992d9a3fbea9ad97	powershake: a low power driven clustering and factoring methodology for boolean expressions	factoring methodology;de-composed factored form representation;algebraic technique;structural transformation;boolean expression;unique power cost;low power consumption;boolean functions;combinational circuits;capacitance;digital circuits;satisfiability;static timing analysis;iterative methods;binary trees;cost function;design optimization;concurrent computing;boolean expressions;art	This paper describes algebraic techniques that target low power consumption. A unique power cost function based on de-composed factored form representation of a Boolean expression is introduced to guide the structural transformations. Circuits synthesized by the SIS and POSE consume 54.5% and 10.4% more power than that obtained by our tool respectively.	boolean expression;integer factorization;linear algebra;loss function;mac os x 10.4 tiger	Sumit Roy;Harm Arts;Prithviraj Banerjee	1998			electronic engineering;boolean expression;computer science;theoretical computer science;iterative method;combinational logic;boolean function;static timing analysis;algorithm;satisfiability	EDA	16.589439984475938	48.25135521472336	158859
1bc8301aef57abb92ff13742d47100fb7e424fc7	a full-scale solution to the rectilinear obstacle-avoiding steiner problem	optimal solution;problema arbol steiner;hipergrafico;optimisation;solution optimale;track graph;detour;ant colony optimization;optimizacion;integrated circuit;ulsi circuit;routing;rectilinear steiner minimal tree;heuristic method;circuit vlsi;probleme arbre steiner;metodo heuristico;circuito integrado;physical design;conception circuit integre;algorithme;connected graph;circuit ulsi;circuito ulsi;algorithm;integrated circuit design;large scale;vlsi circuit;obstacle avoidance;solucion optima;full steiner tree;obstacle avoiding;optimization;ultra large scale integrated;methode heuristique;hypergraph;circuito vlsi;steiner tree problem;escala grande;steiner tree;circuit integre;hypergraphe;algoritmo;echelle grande	Routing is one of the important steps in very/ultra large-scale integration (VLSI/ULSI) physical design. Rectilinear Steiner minimal tree (RSMT) construction is an essential part of routing. Macro cells, IP blocks, and pre-routed nets are often regarded as obstacles in the routing phase. Obstacle-avoiding RSMT (OARSMT) algorithms are useful for practical routing applications. However, OARSMT algorithms for multi-terminal net routing still cannot meet the requirements of practical applications. This paper focuses on the OARSMT problem and gives a solution to full-scale nets based on two algorithms, namely An-OARSMan and FORSTer. (1) Based on ant colony optimization (ACO), An-OARSMan can be used for common scale nets with less than 100 terminals in a circuit. An heuristic, greedy obstacle penalty distance (OP-distance), is used in the algorithm and performed on the track graph. (2) FORSTer is a three-step heuristic used for large-scale nets with more than 100 terminals in a circuit. In Step 1, it first partitions all terminals into some subsets in the presence of obstacles. In Step 2, it then connects terminals in each connected graph with one or more trees, respectively. In Step 3, it finally connects the forest consisting of trees constructed in Step 2 into a complete Steiner tree spanning all terminals while avoiding all obstacles. (3) These two graph-based algorithms have been implemented and tested on different kinds of cases. Experimental results show that An-OARSMan can handle both convex and concave polygon obstacles with short wire length. It achieves the optimal solution in the cases with no more than seven terminals. The experimental results also show that FORSTer has short running time, which is suitable for routing large-scale nets among obstacles, even for routing a net with one thousand terminals in the presence of 100 rectangular obstacles. r 2007 Elsevier B.V. All rights reserved.	ant colony optimization algorithms;concave function;connectivity (graph theory);file spanning;full scale;greedy algorithm;heuristic;integrated circuit;jing;mathematical optimization;physical design (electronics);regular grid;requirement;routing;steiner tree problem;the forest;time complexity;very-large-scale integration	Tom Tong Jing;Yu Hu;Zhe Feng;Xianlong Hong;Xiao-Dong Hu;Guiying Yan	2008	Integration	10.1016/j.vlsi.2007.10.002	mathematical optimization;combinatorics;steiner tree problem;computer science;mathematics;algorithm	EDA	15.717347881507443	50.54857641691344	159161
f49b24972391f2786c4f50f0dbb45f594c25dffe	on accelerating slicing floorplan design with boundary constraints	integrated circuit layout;simulated annealing;electric network synthesis;mathematical models;integrated circuit interconnections;boundary information computation slicing floorplan design boundary constraints simulated annealing wong liu algorithm young wong algorithm normalized polish expression;algorithms;circuit layout cad;acceleration algorithm design and analysis simulated annealing shape design engineering computational modeling computer simulation costs constraint theory;modules circuit layout cad integrated circuit layout simulated annealing integrated circuit interconnections;modules	Recently Young and Wong extended the well-known simulated annealing based Wong-Liu algorithm [ I ] to solve the problem of slicing floorplan design with boundary constraints. The main idea behind the Young-Wong algorithm [4] is to determine the boundary information of each module in a floorplan by traversing the corresponding normalized Polish expression from right to left once. By having carefully examined each of the three types of moves adopted by the Young-Wong algorithm for generating a new normalized Polish expression, we observe that it is very likely that only a subset of modules might have the boundary information changed in the new normalized Polish expression, and hence only the boundary information for those modules needs to be recomputed. Based on the observation, we improve the Young-Wong algorithm by providing methods to accelerate the boundary information computation.	algorithm;bit slicing;computation;right-to-left;simulated annealing;whole earth 'lectronic link	En-Cheng Liu;Tu-Hsing Lin;Ting-Chi Wang	2000		10.1109/ISCAS.2000.856081	floorplan;mathematical optimization;simulated annealing;computer science;electrical engineering;theoretical computer science;machine learning;modular programming;mathematical model;integrated circuit layout;engineering drawing;adaptive simulated annealing;algorithm	EDA	14.69936852302315	50.41183501032701	159366
6637e689ce4ebb8c27aaa3636b0f1785fb06cdce	complexity enabled design space exploration	libraries;adaptability;complexity theory;measurement;low pass filters integrated circuit design;adaptability design space exploration genetic algorithm system complexity flexibility;space exploration;local design space exploration complexity enabled design space exploration circuit problem component library low pass filter circuit performance complexity trade space performance based exploration;complexity theory space exploration libraries cutoff frequency measurement low pass filters resistors;integrated circuit design;resistors;genetic algorithm;low pass filters;design space exploration;cutoff frequency;system complexity;flexibility	The proposed paper presents a framework for complexity enabled design space exploration. A circuit problem is introduced where different designs are generated from a component library to create a low pass filter circuit. Performance and complexity metrics are defined to measure the fitness of the design. A scheme for complexity enabled design space exploration is introduced and the results obtained are compared to the traditional performance based exploration. It is found that the complexity enabled exploration results in identification of regions within the performance-complexity trade space which are difficult to obtain using a performance based exploration. Characteristic features of designs that result in high performance but low complexity are also identified. Later a scheme for local design space exploration is proposed which investigates the designs in the nearest neighborhood of a particular design. This provides insights about the flexibility and adaptability of the design.	complexity;component-based software engineering;design space exploration;low-pass filter	S. Tamaskar;K. Neema;T. Kotegawa;Daniel DeLaurentis	2011	2011 IEEE International Conference on Systems, Man, and Cybernetics	10.1109/ICSMC.2011.6083807	resistor;mathematical optimization;adaptability;simulation;genetic algorithm;low-pass filter;computer science;artificial intelligence;space exploration;cutoff frequency;measurement;integrated circuit design	EDA	11.029444495898844	49.55976688843548	159395
084d48841acfe420e44ca13dd7aed27f99b29eef	enhancing a layout-aware synthesis methodology for analog ics by embedding statistical knowledge into the evolutionary optimization kernel	gradient model;evolutionary computation;automatic sizing;analog integrated circuits design;electronic design automation	This paper applies to the scientific area of electronic design automation (EDA) and addresses the automatic sizing of analog integrated circuits (ICs). Particularly, this work presents an innovative approach to enhance a state-of-the-art layout-aware circuit-level optimizer (GENOM-POF), by embedding statistical knowledge from an automatically generated gradient model into the multi-objective multi-constraint optimization kernel based on the NSGA-II algorithm. The approach was validated with typical analog circuit structures, using the UMC 0.13 μm integration technology, showing that, by enhancing the circuit sizing optimization kernel with the gradient model, the optimal solutions are achieved, considerably, faster and with identical or superior accuracy. Finally, the results are Pareto Optimal Fronts (POFs), which consist of a set of fully compliant sizing solutions, allowing the designer to explore the different trade-offs of the solution space, both through the achieved device sizes, or the respective layout solutions.	analogue electronics;constrained optimization;electronic design automation;evolutionary algorithm;feasible region;gradient;integrated circuit design;knowledge representation and reasoning;mathematical optimization;multi-objective optimization;pareto efficiency;reliability engineering;run time (program lifecycle phase);simulation;umc (computer)	Frederico Rocha;Ricardo M. F. Martins;Nuno M T Lourenço;Nuno Horta	2013		10.1007/978-3-642-37291-9_57	embedded system;mathematical optimization;electronic engineering;electronic design automation;computer science;artificial intelligence;theoretical computer science;machine learning;evolutionary computation	EDA	13.522655428332046	51.87143878982206	159948
970bae9e6574826e07a4d22216fc223dff19beac	optimum functional decomposition using encoding	libraries;field programmable gate array;look up table;boolean functions;logic;state machine;contracts;input output;logic synthesis;functional decomposition;data structures;encoding logic table lookup libraries costs contracts data structures boolean functions;table lookup;encoding	In this paper, we revisit the classical problem of functional decomposition [1, 2] that arises so often in logic synthesis. One basic problem that has remained largely unaddressed to the best of our knowledge is that of decomposing a function such that the resulting sub-functions are simple, i.e., have small number of cubes or literals. In this paper, we show how to solve this problem optimally. We show that the problem is intimately related to the encoding problem, which is also of fundamental importance in sequential synthesis, especially state-machine synthesis. We formulate the optimum decomposition problem using encoding. In general, an input-output encoding formulation has to be employed. However, for field-programmable gate array architectures that use look-up tables, the input encoding formulation suffices, provided we use minimum-length codes. The last condition is really not a constraint, since each extra code bit means that an extra table has to be used (and that could be expensive). The unused codes are used as don't cares for simplifying the sub-functions. We compare the original implementation of functional decomposition, which ignores the encoding problem, with the new version that uses encoding while doing decomposition. We obtain an average improvement of over 20% on a set of standard benchmarks for look-up table architectures.	benchmark (computing);code;don't-care term;field-programmability;field-programmable gate array;finite-state machine;literal (mathematical logic);logic synthesis;lookup table;olap cube;sequential logic	Rajeev Murgai;Robert K. Brayton;Alberto L. Sangiovanni-Vincentelli	1994	31st Design Automation Conference	10.1145/196244.196440	functional decomposition;embedded system;mathematical optimization;electronic engineering;discrete mathematics;logic synthesis;data structure;computer science;theoretical computer science;mathematics;finite-state machine;logic;algorithm;encoding	EDA	15.104390276203086	47.53323816591888	160007
3c4ac84e8c02aaed3124176c06c956c60c14b729	a feasibility study of quaternary fpga designs by implementing neuron-mos mechanism	voltage control;clocks;circuit simulation field programmable gate array quaternary fpga design neuron mos mechanism standard cmos technology ordinary dual rail power supply lines quaternary signal processing basic functional circuits quaternary memory unit look up table multithreshold voltage inverters static random access memory sram;table lookup cmos integrated circuits field programmable gate arrays invertors power supply circuits sram chips;threshold voltage;voltage control threshold voltage clocks	The feasibility of quaternary field programmable gate array (FPGA) is investigated in this work by using standard CMOS technology and ordinary dual-rail of power supply lines. For quaternary signal processing, the basic functional circuits, quaternary memory unit, look-up table (LUT), and framework of FPGA addressing are proposed. Employing the Neuron-MOS mechanism, multi-threshold voltage inverters are designed. A quaternary scheme of static random access memory (SRAM) circuit and LUTs is proposed for FPGA applications on the basis of these inverters. In this manner, a quaternary FPGA is realized in standard CMOS technology and dual-rail power supply. From the circuit simulation results, our designed proof-of-concept four-by-four FPGA achieves all the illustrated functions correctly. The scale of this FPGA can be expanded by implementing our proposed two-dimensional quaternary addressing framework with the reduced cost.	artificial neuron;cmos;electronic circuit simulation;field-programmable gate array;inverter (logic gate);lookup table;power supply;random access;reduced cost;signal processing;static random-access memory	Renyuan Zhang;Mineo Kaneko	2015	2015 IEEE International Symposium on Circuits and Systems (ISCAS)	10.1109/ISCAS.2015.7168790	embedded system;electronic engineering;engineering;electrical engineering;threshold voltage	EDA	12.858019784784497	47.93265685560154	160062
f87675cd59e0228366efb1a8c04b7725d969a0be	fast polylog-time reconfiguration of structurally fault-tolerant multiprocessors	multiprocessor interconnection networks;polylog time reconfiguration;reliability;fault tolerant;computational complexity reconfigurable architectures parallel architectures multiprocessor interconnection networks fault tolerant computing reliability;interconnection structure;reconfigurable architectures;fault tolerance design methodology hardware costs hypercubes cities and towns degradation process design wiring parallel algorithms;node covering approach;fault tolerant computing;parallel architectures;computational complexity;structurally fault tolerant multiprocessors;structurally k fault tolerant multiprocessors;node covering approach polylog time reconfiguration structurally fault tolerant multiprocessors structurally k fault tolerant multiprocessors interconnection structure	We present a general methodology for the design of structurally k-fault-tolerant multiprocessors that can reconfigure quickly and in a distributed manner around any k processors faults. Structural fault tolerance is defined as the ability of the multiprocessor to reconfigure around faults in order to retain its original interconnection structure; this prevents any performance degradation when faults occur. The basic methodology used here is a generalization of the node covering approach that was introduced by Dutt and Hyes in (1992). The reconfiguration time of previous node-covering designs is linear in the number of processors, which, though faster than those of other designs, can be too slow for many application environments. In this paper, we present new types of node-covering designs that have configuration times T/sub R/ in the range {/spl Theta/(x log (N/x))}, where x is a design parameter that can range of 1 to N, and N is the number of processors. These designs also naturally present a hardware-cost to reconfiguration-time tradeoff; however, the extra hardware cost is nominal even for the fastest reconfiguring designs. We also suggest strategies for efficiently laying out these fast-reconfiguring designs in order to minimize the total wiring area. >	time complexity	Shantanu Dutt	1993		10.1109/SPDP.1993.395455	fault tolerance;parallel computing;real-time computing;computer science;reliability;distributed computing;computational complexity theory;algorithm	Logic	14.017907539628213	48.86419812633407	160482
05e50b6e468546b038d2d41b91f71cbb2a2fe805	clustering techniques for coarse-grained, antifuse fpgas	clustering technique;multiple input;required macro logic cell;minimum-area clustering;performance-driven clustering technique;area-driven clustering algorithm;macro cell;antifuse fpgas;antifuse-based fpgas;macro logic cell;performance-driven clustering;small logic cell;field programmable gate arrays;reliability;link;performance;linear equations;critical path	In this paper, we present area and performance-driven clustering techniques for coarse-grained, antifuse-based FPGAs. A macro logic cell in this class of FPGAs has multiple inputs and multiple outputs. Starting with this macro cell, a library of small logic cells can be generated and a target network was mapped with the library. For the minimum-area clustering, our algorithm minimizes the number of required macro logic cells to cover a network. Two linear equations were set up and we found the optimal mapping solution by using the equations. For the performance-driven clustering, the number of macro logic cells on the critical path is minimized by using the extension of Lawler's algorithm. The results show that the area-driven clustering algorithm reduced the number of macro logic cells by 12.29% and the performance-driven clustering reduced the maximum depth by 44.75% compared to a commercial tool.	antifuse;field-programmable gate array	Chang Woo Kang;Massoud Pedram	2005		10.1109/ASPDAC.2005.1466460	correlation clustering;embedded system;electronic engineering;parallel computing;link;performance;computer science;theoretical computer science;critical path method;reliability;linear equation;field-programmable gate array	EDA	13.567906279940997	52.482952368159516	161038
121a2bdc18a791899ffdc45c293773d27d60b4c9	a new hybrid fpga with nanoscale clusters and cmos routing	nanoscale clusters;experimental analysis;network routing cmos logic circuits field programmable gate arrays molecular electronics nanowires;routing;performance;fpga;network routing;nanowires crossbar;fpga design performance reconfigurable nanoscale devices molecular electronics;cmosfet logic devices;cmos logic circuits;lut;performance analysis;design;field programmable gate arrays routing nanowires nanoscale devices switches cmos logic circuits doping cmos technology performance analysis design methodology;nanowires;field programmable gate arrays;molecular electronics;intercluster routing;intercluster routing fpga nanoscale clusters cmos routing nanowires crossbar lut intracluster muxes;intracluster muxes;reconfigurable nanoscale devices;cmos routing	In this paper we propose a hybrid FPGA using nanoscale clusters with an architecture similar to clusters of traditional CMOS FPGAs. The proposed cluster is made of a crossbar of nanowires configured to implement the required LUTs and intra-cluster MUXes. A CMOS interface is also proposed to provide configuration and latching for the nanoscale cluster. Inter-cluster routing is assumed to remain at CMOS scale. Experimental analysis is performed to evaluate area and performance of the hybrid FPGA and results are compared with traditional fully CMOS FPGA (scaled to 22nm). Up to 75% area reduction was obtained from implementing MCNC benchmarks on hybrid FPGA. Performance of the hybrid FPGA is shown to be close to that of CMOS FPGA.	cmos;crossbar switch;field-programmable gate array;routing	Reza M. Rad;Mark Mohammad Tehranipoor	2006	2006 43rd ACM/IEEE Design Automation Conference	10.1145/1146909.1147094	embedded system;routing;electronic engineering;parallel computing;computer science;engineering;field-programmable gate array;computer network	EDA	12.872764259805825	53.12113662204682	161573
262cf18d50aa3331eaedd0e64d82e1a67e290b21	minimizing the problem of logic testing by the interaction of a design group with user-oriented facilities	logic design	Early design decisions concerning logic packages often make subsequent testing difficult. To minimize such problems, logic designers must maintain close communication with those responsible for testing the finished product. This paper explores a user-oriented system which enables the designer to recognize and correct testing problems in the early stages of design.		Manuel Correia;Donald Cossman;Franco Putzolu;Thomas J. Snethen	1970		10.1145/800160.805117	embedded system;logic synthesis;white-box testing;computer science;systems engineering;engineering;system testing;algorithm	HCI	10.71512169379574	52.094155547611145	161758
9ad36f1a95f4b2f3e01d924d64067ae3385c19ba	a generalized network flow based algorithm for power-aware fpga memory mapping	optimal solution;dynamic power fpga memory mapping;random access memory;resource constraint;memory management;network synthesis;memory resource constraint;decoding;gain;logic;field programmable gate arrays energy consumption testing computer science memory management logic decoding multiplexing costs shift registers;greedy algorithms;testing;fpga;power aware fpga memory mapping;multiplexing;embedded memory blocks;energy consumption;memory architecture;shift registers;memory mapping;generalized network flow based algorithm;network synthesis field programmable gate arrays greedy algorithms memory architecture;dynamic power;greedy method generalized network flow based algorithm power aware fpga memory mapping user defined logical memories embedded memory blocks memory resource constraint;computer science;power consumption;field programmable gate arrays;network flow;power demand;algorithm design and analysis;user defined logical memories;greedy method	In this paper, we present a generalized network flow based algorithm for power-aware FPGA memory mapping. Our algorithm not only maps user-defined logical memories to physical embedded memory blocks under the memory resource constraint but also achieves minimum power consumption. The experimental results show that our algorithm was always able to efficiently generate optimal solutions for all test cases while an existing greedy method could do so only for about one third of the test cases.	embedded system;field-programmable gate array;flow network;greedy algorithm;test case	Tien-Yuan Hsu;Ting-Chi Wang	2008	2008 45th ACM/IEEE Design Automation Conference	10.1145/1391469.1391479	embedded system;greedy algorithm;parallel computing;real-time computing;computer science;theoretical computer science;algorithm;field-programmable gate array	EDA	15.174589093703421	48.96830538042233	161861
654531d04a3fbd2059c9d73192a31837a0c7fd9e	design methodology and trade-offs analysis for parameterized dynamically reconfigurable processor arrays	complementary metal oxide semiconductor;cmos technology;reconfigurable architectures field programmable gate arrays;reconfigurable architectures;complementary metal oxide semiconductor trade offs analysis dynamically reconfigurable processor array processing element design cmos technology;dynamically reconfigurable processor array;processing element design;field programmable gate arrays;trade offs analysis;design methodology hardware design languages logic testing cmos technology delay field programmable gate arrays manipulator dynamics information analysis computer science computer architecture	In this paper, we propose a dynamically reconfigurable processor Array (DRPA) generator which can generate various types of DRPAs. Our target DRPA architecture is fully parameterized. By specifying architectural parameters, it can automatically generate RTL model, simulation environment, and finally chip layout. In our DRPA generator, although the fundamental design of a processing element (PE) and an inter-PE connection is fixed, the array size, PE granularity, and connection flexibilities of intra/inter PE are selectable. In this paper, we have generated various types of DRPAs and evaluated semiconductor area and speed by using the AS-PLA/STARC 90-nm CMOS technology. From evaluation results, fundamental trade-offs between architectural parameters and area/delay are analyzed.	cmos;processor array;programmable logic array;reconfigurability;reconfigurable computing;semiconductor;simulation	Yohei Hasegawa;Hideharu Amano	2007	2007 International Conference on Field Programmable Logic and Applications	10.1109/FPL.2007.4380771	embedded system;real-time computing;computer science;cmos	EDA	10.941029371676994	52.3563118809105	162499
c18c8e8c2d9fbaa273442108ca22995a285b0ef0	efficient approximation algorithms for floorplan area minimization	design automation;approximate algorithm;integrated circuit layout;design engineering;identity based encryption;approximation algorithms;rectangular sub floorplans;space complexities;time complexities efficient approximation algorithms floorplan area minimization approximation techniques l shaped sub floorplans rectangular sub floorplans space complexities;distributed computing;minimization methods;time complexities;floorplan area minimization;l shaped sub floorplans;approximation techniques;permission;computational complexity;space complexity;efficient approximation algorithms;circuit layout cad;circuits;computer science;approximation algorithms minimization methods permission costs design engineering identity based encryption circuits computer science distributed computing design automation	Approximation has been shown to be an e ective method for reducing the time and space costs of solving various oorplan area minimization problems. In this paper, we present several approximation techniques for solving oorplan area minimization problems. These new techniques enable us to reduce both the time and space complexities of the previously best known approximation algorithms by more than a factor of n and n for rectangular and L-shaped suboorplans, respectively (where n is the number of given implementations). The e ciency in the time and space complexities is critical to the applicability of such approximation techniques in oorplan area minimization algorithms. We also give a technique for enhancing the quality of approximation results.	approximation algorithm;dspace	Danny Ziyi Chen;Xiaobo Sharon Hu	1996		10.1145/240518.240610	mathematical optimization;electronic circuit;combinatorics;electronic design automation;computer science;theoretical computer science;mathematics;integrated circuit layout;dspace;computational complexity theory;approximation algorithm;algorithm	Theory	15.669324116920643	50.52900870701956	162970
be045eef85dc0d07e30413ffd5a1dec510b88545	a practical cad system application for full custom vlsi microcomputer chips	verification;silicon;concepcion asistida;computer aided design;microelectronic fabrication;design automation;fabricacion microelectrica;design process;integrated circuit;very large scale integration;circuit vlsi;wires;circuito integrado;design optimization;microordinateur;microcomputer;ion implantation;chip;automated verification;vlsi circuit;microcomputadora;compaction;cmos logic circuits;conception assistee;capacitance;circuito vlsi;verificacion;silicium;microcomputers;silicio;circuit integre;very large scale integration microcomputers cmos logic circuits design automation design methodology compaction design optimization delay capacitance wires;fabrication microelectronique;design methodology	This paper presents a practical CAD system application for layout and verification, resulting in producible full-cutom VLSI microcomputer chips. The CAD system supports three design methodologies--symbolic layout mixed with mask level layout, compaction as an optimizer, and fully automated verification. For the area optimization, the symbolic layout and compactor subsystem supports a flexible description of orthogonal layout patterns with arbitrary dimensions in a loose placement manner. The layout patterns include path data, polygonal data, and symbolic cells. For power and delay optimization, the compactor compacts layout data, decreasing both resistance and capacitance for wires and ion-implanted layers. This feature is pioneering the new generation compactor. Emphasis should be put on the fact that it can compact layout data to a format 10-15 percent smaller than that accomplished manually. The verification subsystem can detect all kinds of errors, more than 30 items. A novel feature of the electrical rule check is that it investigates complementary logic errors for CMOS circuits. The synergy of those three design methodologies has brought about several significant advantages. One is manpower reduction by more than half, in the most complicated design process for unique random logic. The other is a 1600-transistors compaction output, smaller by 365 mils/sup 2/ than that manually compacted. The circuit implementation on a chip works at more than a 15-MHz clock rate. Another is the first silicon success. It has been accomplished in a full-custom VLSI microcomputer chip consisting of more than 100 000 transistors.	cmos;clock rate;computer-aided design;data compaction;full custom;mathematical optimization;microcomputer;multiple independent levels of security;random logic;synergy;transistor;very-large-scale integration	Atsushi Kurosawa;Kazutaka Yamada;Aritoyo Kishimoto;Kunio Mori;Nobuyuki Nishiguchi	1987	IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems	10.1109/TCAD.1987.1270281	embedded system;electronic engineering;electronic design automation;ic layout editor;computer science;engineering;electrical engineering;operating system;computer aided design;design layout record;microcomputer;integrated circuit layout;computer engineering	EDA	12.15114944338236	51.41694917419965	163110
2b6b0d38134e8a8d997b2adc095e28acfcba3452	global optimization of common subexpressions for multiplierless synthesis of multiple constant multiplications	signal processing;optimal synthesis;proposed solution space;multiple constant multiplication;mcm synthesis;minimal signed digit;global optimization;integer programming;minimal signed digit representations;fixed point arithmetic;linear programming;common subexpressions;multiple constant multiplications;coefficient decomposition;novel common subexpression elimination;mixed-integer linear programming;multiplierless synthesis;time delay constraint;design optimization;algorithm design and analysis;fpga;logic design;context modeling;adders	In the context of multiple constant multiplication (MCM) design, we propose a novel common subexpression elimination (CSE) algorithm that models the optimal synthesis of coefficients into a 0--1 mixed-integer linear programming (MILP) problem. A time delay constraint is included for synthesis. We also propose coefficient decompositions that combine all minimal signed digit (MSD) representations and the shifted sum (difference) of coefficients. In the examples we demonstrate, the proposed solution space further reduces the number of adders/subtractors in the MCM synthesis.	algorithm;broadcast delay;coefficient;common subexpression elimination;feasible region;global optimization;integer programming;linear programming;mathematical optimization;multi-chip module	Yuen-Hong Alvin Ho;Chi-Un Lei;Hing-Kit Kwan;Ngai Wong	2008	2008 Asia and South Pacific Design Automation Conference		mathematical optimization;discrete mathematics;integer programming;computer science;linear programming;theoretical computer science;signal processing;mathematics;fixed-point arithmetic;field-programmable gate array;global optimization	EDA	14.668881943611238	47.09118004675713	163256
5a5d4f30f6d5a97f75a4013fb366e6e8e6694958	explicit expression and simultaneous optimization of placement and routing for analog ic layouts	circuit optimisation analogue integrated circuits mixed analogue digital integrated circuits network routing integrated circuit layout circuit layout cad;shape based layout;design automation;routing analog integrated circuits integrated circuit layout analog circuits manufacturing processes wires constraint optimization design automation manufacturing automation algorithm design and analysis;constraint optimization;integrated circuit layout;sequence pair;routing;placement;manufacturing process;analog design;manufacturing automation;wires;simultaneous optimization;network routing;analog circuits;analogue integrated circuits;manufacturing processes;mixed signal design;analog integrated circuits;mixed analogue digital integrated circuits;rectangle representation;circuit layout cad;analog ic layouts;circuit optimisation;commercial tool;algorithm design and analysis;design time reduction;design time reduction simultaneous optimization analog ic layouts mixed signal design manufacturing process placement routing rectangle representation commercial tool	Our target is automation of analog circuit's layout, which is a bottleneck in mixed-signal's design. We formulate the layout explicitly considering manufacturing process, and propose an algorithm that consists of simultaneous expression and optimization of placement and routing. The key is that all the cells and wires are represented by rectangles. The algorithm is combined into a commercial tool, and the performance convinced us that the utilization shortens the design time.	algorithm;analogue electronics;mathematical optimization;mixed-signal integrated circuit;place and route;routing	Yukiko Kubo;Shigetoshi Nakatake;Yoji Kajitani;Masahiro Kawakita	2002		10.1109/ASPDAC.2002.994964	embedded system;routing;constrained optimization;electronic engineering;electronic design automation;ic layout editor;computer science;engineering;engineering drawing;routing;computer network;placement	EDA	13.926134675048745	51.47007314008524	163416
533e187fdd80ee9f183edda820c49a7a905164de	signal type optimisation in the design of time-multiplexed dsp architectures	integer programming digital signal processing chips circuit cad logic cad linear programming;design optimization signal design digital signal processing algorithm design and analysis hardware intelligent networks high level synthesis sprites computer signal synthesis;high level synthesis;integer programming;word length;linear programming;cad signal type optimisation time multiplexed dsp architectures dsp algorithm specification minimal word lengths multiplexer cost minimisation interconnect cost minimisation bit true behaviour;digital signal processing chips;circuit cad;logic cad	When the specifications of a DSP-algorithm are made, the minimal word lengths for all signals in order to get results with acceptable accuracy, are determined. These word lengths have an influence on the size of the interconnection hardware in the final design which is often ignored in the original specification of the DSP-algorithm. An algorithm is presented to modify the types of the signals to match the size of the hardware they are mapped upon. The target is to minimise the cost of multiplexers and interconnect, required for various type changes. The transformation allows to modify the bit-true behaviour of the system.	algorithm;digital signal processor;experiment;interconnection;mathematical optimization;multiplexer;multiplexing;recurrent word	Koen Schoofs;Gert Goossens;Hugo De Man	1994		10.1109/EDTC.1994.326829	computer architecture;electronic engineering;real-time computing;computer science	EDA	13.532225107537442	50.09740711279707	163751
a300a5502c1f08543e5766a460eb19bbddcadfef	an efficient zero-skew routing algorithm	design automation;delaunay triangulation;routing;distributed computing;routing permission design automation distributed computing machinery;permission;linear time;routing algorithm;machinery	A bucket algorithm is proposed for zero-skew routing with linear time complexity on the average. Our algorithm is much simpler and more efficient than the best known algorithm which uses Delaunay triangulations for segments on Manhattan distance. Experimental results show that the linearity of our algorithm is accomplished. Our algorithm generates a zero-skew routing for 3000-pin benchmark data within 5 seconds on a 90MIPS RISC workstation.	algorithm;benchmark (computing);delaunay triangulation;routing;taxicab geometry;time complexity;workstation	Masato Edahiro	1994	31st Design Automation Conference	10.1145/196244.196426	policy-based routing;time complexity;routing table;diffusing update algorithm;routing;enhanced interior gateway routing protocol;static routing;machine;real-time computing;delaunay triangulation;electronic design automation;equal-cost multi-path routing;computer science;dynamic source routing;electrical engineering;theoretical computer science;multipath routing;destination-sequenced distance vector routing;distance-vector routing protocol;distributed computing;routing protocol;link-state routing protocol;triangular routing;path vector protocol;hazy sighted link state routing protocol;algorithm;routing information protocol;computer network	EDA	15.34734621407731	51.15314243570251	164358
1ab2a145c9e0082ff66f2e90cbd9257070b9526f	performance optimization of vlsi interconnect layout	optimization technique;vlsi circuit design;circuit design;vlsi physical design;high performance;performance optimization;buffer insertion	This paper presents a comprehensive survey of existing techniques for interconnect optimizationduring the VLSI physical design process, with emphasis on recent studies on interconnect design and optimization for high-performance VLSI circuit design under the deep submicron fabrication technologies. First, we present a number of interconnect delay models and driver/gate delay models of various degrees of accuracy and efficiency which are most useful to guide the circuit design and interconnect optimization process. Then, we classify the existing work on optimization of VLSI interconnect into the following three categories and discuss the results in each category in detail: (i) topology optimization for high-performance interconnects, including the algorithms for total wirelength minimization, critical pathlength minimization, and delay minimization; (ii) device and interconnect sizing, including techniques for efficient driver, gate, and transistor sizing, optimal wiresizing, and simultaneous topology construction, buffer insertion, buffer and wire sizing; (iii) high-performance clock routing, including abstract clock net topology generation and embedding, planar clock routing, buffer and wire sizing for clock nets, non-tree clock routing, and clock schedule optimization. For each method, we discuss its effectiveness, its advantages and limitations, as well as its computational efficiency. We group the related techniques according to either their optimization techniques or optimization objectives so that the reader can easily compare the quality and efficiency of different solutions.	circuit design;computation;electrical connection;genetic algorithm scheduling;mathematical optimization;physical design (electronics);propagation delay;routing;topology optimization;transistor;very-large-scale integration	Jason Cong;Lei He;Cheng-Kok Koh;Patrick H. Madden	1996	Integration	10.1016/S0167-9260(96)00008-9	embedded system;electronic engineering;engineering;electrical engineering;circuit design;engineering drawing	EDA	14.781164214785292	52.89691668610586	164592
916b6fba9bfb7f8dc648f9c65e3c026fbe1ba634	an edge-based heuristic for steiner routing	wiring area edge based heuristic steiner routing approximation heuristic rectilinear steiner tree minimum spanning tree rectangular layout data structures running time asymptotic time complexity vlsi pcbs;rectilinear steiner tree;concepcion asistida;wiring network routing trees mathematics network topology circuit layout cad integrated circuit layout tree data structures computational complexity vlsi printed circuit layout;computer aided design;printed circuits;implantation topometrie;edge based heuristic;integrated circuit;integrated circuit layout;time complexity;steiner trees;routing;wiring area;very large scale integration;estudio comparativo;aproximacion;heuristic method;performance;circuit vlsi;probleme np dur;problema np duro;wires;metodo heuristico;circuito integrado;layout;tree data structures;trees mathematics;steiner system;network routing;approximation;algorithme;network topology;etude comparative;algorithm;np hard problem;vlsi circuit;printed circuit layout;sistema steiner;asymptotic time complexity;computational complexity;systeme steiner;data structures;rectangular layout;integrated circuit interconnections;approximation heuristic;edge graph;comparative study;minimum spanning tree;joining processes;vlsi;conception assistee;routing costs joining processes wires steiner trees data structures very large scale integration printed circuits integrated circuit interconnections capacitance;arete graphe;running time;circuit layout cad;capacitance;encaminamiento;methode heuristique;steiner routing;rendimiento;circuito vlsi;wiring;data structure;steiner tree;circuit integre;arista grafico;acheminement;pcbs;algoritmo;implantacion topometria	A new approximation heuristic for finding a rectilinear Steiner tree of a set of nodes is presented. It starts with a rectilinear minimum spanning tree of the nodes and repeatedly connects a node to the nearest point on the rectangular layout of an edge, removing the longest edge of the loop thus formed. A simple implementation of the heuristic using conventional data structures is compared with previously existing algorithms. The performance (i.e., quality of the route produced) of our algorithm is as good as the hest reported algorithm, while the running time is an order of magnitude better than that of this hest algorithm. It is also shown that the asymptotic time complexity for the algorithm can he improved to O(n log n), where n is the number of points in the set.	adjacency list;approximation;asymptotic computational complexity;benchmark (computing);data structure;experiment;file spanning;greedy algorithm;heuristic;iteration;rectilinear steiner tree;rectilinear minimum spanning tree;regular grid;routing;steiner tree problem;time complexity	Manjit Borah;Robert Michael Owens;Mary Jane Irwin	1994	IEEE Trans. on CAD of Integrated Circuits and Systems	10.1109/43.331412	routing;combinatorics;data structure;steiner tree problem;computer science;theoretical computer science;mathematics;very-large-scale integration;algorithm	EDA	15.669068654164228	50.567060181652856	165426
28f96c37705a9150a82e4a51339af4c0b5a73b38	reducing dynamic power consumption in synchronous sequential digital designs using retiming and supply voltage scaling	minimisation;digital circuit;circuito combinatorio;computational complexity combinational circuits sequential circuits power consumption minimisation integrated circuit design cmos digital integrated circuits scaling circuits;concepcion asistida;timing constraints;computer aided design;diseno circuito;cmos technology;temps polynomial;caracteristique temporelle;integrated circuit;clocks;etude experimentale;circuito secuencial;polynomial run time;synchronous sequential digital design;sequential circuits;circuit design;dynamic voltage scaling;circuit sequentiel;minimal clock period;minimal clock period dynamic power consumption synchronous sequential digital design supply voltage scaling computational elements np hard problem polynomial run time polynomial time algorithms combinational circuits single phase design;circuito integrado;supply voltage scaling;tecnologia mos complementario;dynamic power consumption;single phase design;polynomials;time curve;combinational digital designs;power supply;algorithme;circuit numerique;polynomial time algorithm;combinatory circuit;algorithm;np hard problem;integrated circuit design;cmos digital integrated circuits;alimentation electrique;registers;energy consumption;computational complexity;threshold voltage;critical path;circuit combinatoire;digital design;batteries;circuit synchrone;scaling circuits;polynomial time;circuito numerico;caracteristica temporal;conception assistee;dynamic power;conception circuit;power consumption;sequential digital designs;consommation energie electrique;combinational circuit;technologie mos complementaire;alimentacion electrica;voltage scaling;circuito sincrono;estudio experimental;polynomial time algorithms;algorithm design and analysis;cmos;computational elements;retiming;lower bound;circuit integre;complementary mos technology;cooling;energy consumption dynamic voltage scaling clocks polynomials registers algorithm design and analysis batteries cooling cmos technology threshold voltage	The problem of minimizing dynamic power consumption by scaling down the supply voltage of computational elements off critical paths is widely addressed in the literature for the case of combinational designs. The problem is NP-hard in general. To address the problem in the case of synchronous sequential digital designs, one needs to move some registers while applying voltage scaling. Moving these registers shifts some computational elements from critical paths, and can be done by basic retiming. Integrating basic retiming and supply voltage scaling to address this NP-hard problem cannot in general be done in polynomial run time. In this paper, we propose to first apply a guided retiming and then to apply supply voltage scaling on the retimed design. We devise new polynomial time algorithms to realize this guided retiming, and the supply voltage scaling on the retimed design. Also, we show that the problem in the case of combinational designs is not NP-hard for some combinational circuits with certain structure, and give a polynomial time algorithm to optimally solve it. Methods to determine lower bounds on the optimal reduction of dynamic power consumption are also provided. Experimental results on known benchmarks have shown that the proposed approach can reduce dynamic power consumption by factors as high as 61% for single-phase designs with minimal clock period. Also, they have shown that it can solve optimally the problem, and produce converter-free designs with reduced dynamic power consumption. For large size circuits from ISCAS'89 benchmark suite, the proposed algorithms run in 15 s-1 h.	approximation algorithm;benchmark (computing);clock rate;combinational logic;dynamic voltage scaling;heuristic;image scaling;mathematical optimization;np-hardness;p (complexity);polynomial;retiming;run time (program lifecycle phase);time complexity	Noureddine Chabini;Wayne H. Wolf	2004	IEEE Transactions on Very Large Scale Integration (VLSI) Systems	10.1109/TVLSI.2004.827569	embedded system;electronic engineering;real-time computing;computer science;electrical engineering;retiming;computer aided design;mathematics;sequential logic;combinational logic;cmos;algorithm	EDA	17.21627850920209	52.69821363753073	165632
4e5772cd9edb17d68d153e7368a3fa4643c16a2c	vlsi test expertise system using a control flow model	basic test sequence;expert system;design modification;circuit design;test program;test program generation;control flow model;whole system;vlsi test expertise system;test pattern;cat system work;vlsi circuit;appraisal;automatic control;chip;control flow;very large scale integration;intelligent agent;hierarchical;system testing;design rule checking	The automatic generation of test programs for VLSI circuits and systems remains an unanswered wish. The solution seems to be a computerized expert aid, integrated in a whole system for circuit design. This paper outlines the concepts of an intelligent agent whose aims are to help the designer in appraising the diagnosability of the device or the system under design, to suggest design modifications, to generate test patterns for elementary modules and to assemble the basic test sequences into a test program for the whole circuit.  Emphasis is put in this paper on this last task, especially for systems described by a control flow model (CADOC language) which is suitable for VLSI circuits like general purpose or dedicated micro-processors, distributed controllers, etc... The CAT system works like an intelligent assistant for test program generation and like an expert system for the diagnosis on the chip.	central processing unit;circuit design;control flow;expert system;intelligent agent;test card;very-large-scale integration	Gabriele Saucier;Catherine Bellon	1984	21st Design Automation Conference Proceedings		chip;control engineering;embedded system;electronic engineering;real-time computing;computer science;design rule checking;automatic test pattern generation;circuit design;automatic control;very-large-scale integration;control flow;system testing;expert system;intelligent agent;hierarchy;computer engineering	EDA	10.161172227239721	51.22152071749098	165908
08e52a1aed5a36628547e030164c9b6823ef5ab8	multilevel full-chip routing for the x-based architecture	delaunay triangulation;integrated circuit;integrated circuit layout;multilevel full chip routing;routing integrated circuit interconnections algorithm design and analysis wires permission integrated circuit technology delay effects microscopy design optimization computational geometry;routing;manhattan architecture;high performance integrated circuits;computational geometry;delay effects;microscopy;wires;physical design;trees mathematics;wirelength reduction;design optimization;microscopic interconnect wires;diagonal routes;network routing;xarchitecture;chip;manhattan architecture multilevel full chip routing x based architecture interconnect delay high performance integrated circuits microscopic interconnect wires diagonal routes via count reduction integrated circuit routing three terminal nets general x steiner tree algorithm delaunay triangulation trapezoid shaped track assignment wirelength reduction;first order;permission;via count reduction;integrated circuit technology;optimal routing;integrated circuit routing;integrated circuit interconnections;three terminal nets;mesh generation integrated circuit layout integrated circuit interconnections network routing trees mathematics;routing algorithm;x based architecture;mesh generation;high performance;general x steiner tree algorithm;steiner tree;trapezoid shaped track assignment;algorithm design and analysis;multilevel optimization;interconnect delay	As technology advances into the nanometer territory, the interconnect delay has become a first-order effect on chip performance. To handle this effect, the X-architecture has been proposed for high-performance integrated circuits. The X-architecture presents a new way of orienting a chip's microscopic interconnect wires with the pervasive use of diagonal routes. It can reduce the wirelength and via count, and thus improve performance and routability. Furthermore, the continuous increase of the problem size of IC routing is also a great challenge to existing routing algorithms. In this paper, we present the first multilevel framework for full-chip routing using the X-architecture. To take full advantage of the X-architecture, we explore the optimal routing for three-terminal nets on the X-architecture and develop a general X-Steiner tree algorithm based on the delaunay triangulation approach for the X-architecture. The multilevel routing framework adopts a two-stage technique of coarsening followed by uncoarsening, with a trapezoid-shaped track assignment embedded between the two stages to assign long, straight diagonal segments for wirelength reduction. Compared with the state-of-the-art multilevel routing for the Manhattan architecture, experimental results show that our approach reduced wirelength by 18.7% and average delay by 8.8% with similar routing completion rates and via counts.	algorithm;analysis of algorithms;delaunay triangulation;embedded system;first-order predicate;integrated circuit;list of algorithms;routing;x window system	Tsung-Yi Ho;Chen-Feng Chang;Yao-Wen Chang;Sao-Jie Chen	2005	Proceedings. 42nd Design Automation Conference, 2005.	10.1145/1065579.1065734	routing table;routing;electronic engineering;static routing;parallel computing;dsrflow;equal-cost multi-path routing;computational geometry;computer science;microscopy;dynamic source routing;theoretical computer science;multipath routing;destination-sequenced distance vector routing;link-state routing protocol;triangular routing;path vector protocol;routing;routing information protocol	EDA	15.360232139403328	51.736015313964465	166089
f78f0cae33262c973e5d8b10b6293762a67690c7	supergenes in a genetic algorithm for heterogeneous fpga placement	genetic algorithms field programmable gate arrays;granularity genetic algorithms supergene fpga placement;field programmable gate arrays genomics bioinformatics clustering algorithms genetic algorithms algorithm design and analysis design automation;binary function genetic algorithm supergenes heterogeneous fpga placement genome placement algorithm fine grain components medium grain components placement metric mutation operators;genetic algorithms;field programmable gate arrays	Supergenes are an addition to a genetic algorithm's genome that duplicate genes in the genome, represent local optimizations, and have the potential to be expressed overriding the duplicated gene. We introduce supergenes in a genetic algorithm for FPGA placement where a placement algorithm places a mix of fine-grain components and medium-grain components (where a medium-grain component is 2 to 10 times the size of a finegrain component). This is the first placement algorithm, to our knowledge, that can deal with such a mix of components. Our results show that supergenes improve a placement metric (clock speed of the FPGA) by approximately 10%. We also show and explore mutation operators on supergenes, and we experimentally demonstrate that the expression of a supergene can be effectively controlled via a binary function for our placement problem.	application domain;clock rate;critical path method;experiment;field-programmable gate array;genetic algorithm;parallel computing;software release life cycle	Peter Jamieson;Farnaz Gharibian;Lesley Shannon	2013	2013 IEEE Congress on Evolutionary Computation	10.1109/CEC.2013.6557578	genetic algorithm;computer science;bioinformatics;theoretical computer science;field-programmable gate array	EDA	10.523228486205015	49.031499987975344	166181
de4f798c4afd2f429fecdef5f2c9676705d0c64f	a general greedy channel routing algorithm	graph theory;burstein s difficult problem circuit layout design greedy channel routing algorithm heuristic routing algorithms backtracking capability switchbox routing three layer routing multilayer routing overlap model track oriented greedy algorithms manhattan switch box problem knock knee models modified algorithms mcrp rout deutsch s difficult problem;concepcion asistida;computer aided design;burstein s difficult problem;modele manhattan;integrated circuit;routing;routing wires integrated circuit interconnections data structures very large scale integration heuristic algorithms nonhomogeneous media chip scale packaging conductors lithography;very large scale integration;three layer routing;wires;circuito integrado;deutsch s difficult problem;knock knee models;algorithme;network topology;algorithm;lithography;greedy channel routing algorithm;nonhomogeneous media;backtracking capability;switchbox routing;computational complexity;modified algorithms;data structures;heuristic algorithms;integrated circuit interconnections;multilayer routing;heuristic routing algorithms;routing algorithm;overlap model;track oriented greedy algorithms;circuit layout design;conception assistee;greedy algorithm;circuit layout cad;manhattan switch box problem;encaminamiento;network topology circuit layout cad computational complexity graph theory;mcrp rout;data structure;circuit integre;chip scale packaging;acheminement;algoritmo;conductors	Abstmt-This paper presents a new channel routing algorithm which assigns wires track by track in a greedy way. The simple underlying data structures and strategy used in this algorithm can be generalized to obtain a class of heuristic channel routing algorithms. The proposed new algorithm has a backtracking capability to increase the chance of completing the routing with a minimum number of tracks. Since the concepts described in this paper are general, they can be applied to other channel problems such as switchbox routing, three-layer routing, and multilayer routing, or it can be even applied to the overlap model with only a few modifications. It successfully routes both the Burstein’s difficult switchbox problem and Deutsch’s difficult example with 19 tracks in the Manhattan model without any backtracking. The extensions of this algorithm are presented with examples.	backtracking;channel router;data structure;greedy algorithm;heuristic;kvm switch;multitier architecture;routing	Tai-Tsung Ho;S. Sitharama Iyengar;Si-Qing Zheng	1991	IEEE Trans. on CAD of Integrated Circuits and Systems	10.1109/43.68407	chip-scale package;mathematical optimization;routing;static routing;greedy algorithm;data structure;dsrflow;equal-cost multi-path routing;computer science;dynamic source routing;theoretical computer science;multipath routing;destination-sequenced distance vector routing;integrated circuit;machine learning;electrical conductor;distance-vector routing protocol;very-large-scale integration;link-state routing protocol;triangular routing;computational complexity theory;path vector protocol;network topology;algorithm;routing information protocol	EDA	15.355294161848368	50.913935620633026	166738
039d4a083de244d2d1bd58a42e22ab9fca65df03	a fast heuristic algorithm for multidomain clock skew scheduling	algorithme rapide;mixed integer linear program;optimal solution;process variation;solution optimale;sequential elements;algorithm performance;clocks;job shop scheduling;circuito secuencial;defasaje;sequential circuits;heuristic method;cascading style sheets;exact solution;circuit sequentiel;metodo heuristico;phase shift;dephasage;solucion exacta;mixed integer linear program solver;chip;heuristic algorithms scheduling algorithm clocks job shop scheduling cascading style sheets circuits clustering algorithms delay registers manufacturing;time 5 h fast heuristic algorithm multidomain clock skew scheduling clock delay clock distribution network sequential elements mixed integer linear program solver time 14 7 min time 31 7 min;scheduling algorithm;planificacion;clock skew domain;time 14 7 min;programacion mixta entera;clock skew scheduling css;registers;resultado algoritmo;scheduling;heuristic algorithms;solucion optima;fast algorithm;clock delay;manufacturing;performance algorithme;sequential circuits clocks delays scheduling;clustering algorithms;programmation partiellement en nombres entiers;mixed integer programming;fast heuristic algorithm;time 5 h;planning;circuits;network delay;temps retard;methode heuristique;delay time;planification;solution exacte;multidomain clock skew scheduling;clock distribution network;tiempo retardo;sequential circuit optimization;clock skew;algoritmo rapido;heuristic algorithm;delays;time 31 7 min;sequential circuit optimization clock skew domain clock skew scheduling css;circuit optimization;optimisation circuit;sequential circuit	In the most general form, clock skew scheduling (CSS) generates a dedicated clock delay for each individual sequential component in the clock distribution network in order to minimize the clock period. Multidomain CSS (MDCSS) relieves this requirement. Instead, sequential components are grouped into several clusters (called clock domains), each of which has a uniform clock delay for all registers within that domain. The skew values of clock domains are provided by a set of deskew buffers with electrically programmable phase shifts and injected after the chip is manufactured. This technique is attractive since, due to process variations, it is becoming overwhelmingly difficult to create precise clock network delays for all sequential elements in a design globally. In this paper, we present a fast algorithm for determining the minimum number of clock domains to be used by MDCSS. The exact solution to this problem cannot be found within a reasonable time if the number of clock domains increases beyond three domains. We show that, even with a small-size circuit, in order to obtain the minimum clock period, more than three clock domains may be required. Therefore, a fast heuristic algorithm is needed to identify these domains. To the best of our knowledge, we present the first efficient heuristic algorithm for this problem. For large benchmark circuits, we solve the problem within 14.7 min on average (as high as 31.7 min for the worst case), while a commercial mixed-integer linear program solver cannot finish in over 5 h. Furthermore, our results show that, for 19 out of 21 small- and medium-size benchmarks, our algorithm yields the optimal solution.	algorithm;benchmark (computing);best, worst and average case;cascading style sheets;clock network;clock rate;clock signal;clock skew;experiment;heuristic (computer science);linear programming;maxima and minima;multistage interconnection networks;scheduling (computing);solver;vp/css	Min Ni;Seda Ogrenci Memik	2010	IEEE Transactions on Very Large Scale Integration (VLSI) Systems	10.1109/TVLSI.2009.2014069	clock synchronization;embedded system;job shop scheduling;mathematical optimization;electronic engineering;real-time computing;asynchronous circuit;clock angle problem;vector clock;clock domain crossing;clock skew;computer science;operating system;sequential logic;timing failure;clock drift;synchronous circuit;matrix clock;clock gating;digital clock manager;scheduling;algorithm;cpu multiplier	EDA	17.150039671217097	52.019320472931916	167192
2569818f91bc6abb69476925d1c5e4aec0d71886	bist design optimization for large-scale embedded memory cores	integer linear programming;random access memory;design optimization problem;routing;built in self test design optimization large scale systems automatic testing system testing system on a chip integer linear programming refining costs routing;heuristic method;performance;bdd;industries;timing speculation;soc designs;design optimization;system on a chip;embedded systems;heuristic method large scale embedded memory cores built in self test embedded memory core testing system on chip soc designs design optimization problem large scale soc embedded memory cores three stage technique integer linear programming user specified assignment constraints;large scale;built in self test;three stage technique;logic synthesis;user specified assignment constraints;system on chip;logic testing;storage management chips;timing analysis;large scale soc embedded memory cores;large scale embedded memory cores;embedded memory core testing;magnetic cores;algorithm design and analysis;integer linear program;dual threshold voltage;system on chip built in self test embedded systems logic testing storage management chips;throughput	Built-in Self Test (BIST) is a crucial technique for testing embedded memory cores in a System-on-Chip (SoC). However, there is not much published work on BIST design optimization for multiple memory cores in the SoC designs. In this paper, we present a method for the BIST design optimization problem for large-scale SoC embedded memory cores, considering various real-world constraints such as peak current, IR drop, etc. Our method is based on a three-stage technique: (1) assignment, (2) legalization, and (3) refinement. The first stage adopts an integer linear programming (ILP) formulation for each memory partition to find a desired assignment of memory cores to controllers. The second stage then legalizes the assignment to meet user-specified assignment constraints. The last stage refines the solution to further reduce its cost. Experimental results show that our method can reduce the test time by 26.6%, the routing length by 8.9%, and the area by 24.1%, compared with a heuristic method currently used in industry.	algorithm;built-in self-test;edram;embedded system;heuristic;integer programming;linear programming;mpsoc;mathematical optimization;memory management (operating systems);optimization problem;refinement (computing);routing;system on a chip	Tzuo-Fan Chien;Wen-Chi Chao;Chien-Mo James Li;Yao-Wen Chang;Kuan-Yu Liao;Ming-Tung Chang;Min-Hsiu Tsai;Chih-Mou Tseng	2009	2009 IEEE/ACM International Conference on Computer-Aided Design - Digest of Technical Papers	10.1145/1687399.1687435	system on a chip;embedded system;computer architecture;parallel computing;real-time computing;integer programming;computer science	EDA	14.765024480939804	52.81811812682918	167327
40e728b639916b907e385b7a8fc3122b1e9cb601	floorplanning with power supply noise avoidance	power supplies integrated circuit noise working environment noise integrated circuit manufacture integrated circuit technology power system planning signal design integrated circuit layout integrated circuit reliability power system reliability;maximum flow;integrated circuit;integrated circuit layout;heuristic programming;signal integrity;power supply;chip;power supply noise;time to market;integrated circuit reliability;integrated circuit noise;heuristic programming integrated circuit layout integrated circuit noise integrated circuit reliability;noise constraint violation floorplanning power supply noise avoidance soc signal integrity problems ir drop requirement spl delta i noise ic reliability post route methodologies time to market delays power supply planning constrained maximum flow problem heuristic total wirelength	With today's advanced integrated circuits (ICs) manufacturing technology in deep submicron (DSM) environment, we can integrate entire electronic systems on a single chip (SoC). However, without careful power supply planning in layout, the design of chips will suffer from mostly signal integrity problems including IR-drop, ΔI noise, and IC reliability. Postroute methodologies in solving signal integrity problem have been applied but they will cause a long turn-around time, which adds costly delays to time-to-market. In this paper, we study the problem of power supply noise avoidance as early as in floorplanning stage. We show that the noise avoidance in power supply planning problem can be formulated as a constrained maximum flow problem and present an efficient yet effective heuristic to handle the problem. Experimental results are encouraging. With slight increase of total wirelength, we achieve almost no-IR-drop requirement violation and 46.6% of improvement on ΔI noise constraint violation compared with a previous approach.	floorplan (microelectronics);flow network;heuristic;integrated circuit;maximum flow problem;power supply;signal integrity;very-large-scale integration	Hung-Ming Chen;Li-Da Huang;I-Min Liu;Minghorng Lai;Martin D. F. Wong	2003		10.1145/1119772.1119857	chip;physical design;maximum flow problem;electronic engineering;real-time computing;telecommunications;computer science;signal integrity;engineering;electrical engineering;integrated circuit;integrated circuit layout;circuit extraction	EDA	16.335725219451934	53.064978424474205	167901
a2b32e7af9ca8cf7aa58541c2eac3b3e95390e1a	enhanced double via insertion using wire bending	wire page description languages routing algorithm design and analysis manufacturing processes semiconductor device manufacture computer science;metals;integrated circuit yield;integrated circuit layout;routing;perturbation techniques;layout;data mining;law;wire bending;chip;wire;wire bending integer linear program redundant via;redundancy;shape;redundant via;linear programming;redundancy integrated circuit layout integrated circuit reliability integrated circuit yield linear programming perturbation techniques;wirelength enhanced simultaneous double via insertion wire bending chip yield reliability postrouting stage signal wires layout perturbation minimum weight maximum independent set enhanced conflict graph zero one integer linear program based approach via density;integrated circuit reliability;integer linear program;maximum independent set	Redundant via insertion is highly recommended for improving chip yield and reliability. In this paper, we studied the problem of simultaneous double via insertion and wire bending (DVI/WB) in a postrouting stage, where a single via can have at most one redundant via inserted next to it. Aside from this, we are allowed to bend existing signal wires for enhancing the insertion rate of double vias. The primary goal of the DVI/WB problem is to insert as many double vias as possible; the secondary objective is to minimize the amount of layout perturbation. We formulate the DVI/WB problem as that of finding a minimum-weight maximum independent set (mWMIS) on an enhanced conflict graph. We proposed algorithms to perform wire bending and to construct the enhanced conflict graph from a given design. We also proposed a zero-one integer linear program (0-1 ILP)-based approach to solve the mWMIS problem. Moreover, we studied the problem of DVI/WB with the consideration of via density and extended our 0-1 ILP-based approach to solve it. Experimental results show that our approaches can improve the insertion rate by up to 6.34% at the expense of up to 1.29% wirelength increase when compared with the state-of-the-art double via insertion methods that do not consider wire bending. Moreover, when compared with an existing method that considers wire bending, our DVI/WB approach can insert 2% more double vias and produce 32% less wirelength increase rate on average.	algorithm;color balance;digital visual interface;independent set (graph theory);insertion sort;linear programming;serializability;via (electronics)	Kuang-Yao Lee;Shing-Tung Lin;Ting-Chi Wang	2010	IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems	10.1109/TCAD.2009.2035559	chip;layout;embedded system;mathematical optimization;routing;electronic engineering;independent set;shape;computer science;engineering;linear programming;electrical engineering;integrated circuit layout;redundancy;engineering drawing;computer network	EDA	15.935282550870525	52.06215335908117	167923
0625614c51cb7fb3672ee7c09bddac029c5d3138	crosstalk minimization in logic synthesis for pla	crosstalk minimization;maximum crosstalk minimization algorithm;interleaving algorithm;pla structure;maximum crosstalk effect;maximum coupling capacitance;product line;long set;logic synthesis;short set;crosstalk immunity;crosstalk;logic circuits;upper bound;logic design	We propose a maximum crosstalk minimization algorithm taking logic synthesis into consideration for PLA structure. To minimize the crosstalk, technique of permuting wire is used which includes the following steps. First, product lines are partitioned into long set and short set, and then product lines in long set and short set are interleaved. By interleaving algorithm, an upper bound on the maximum coupling capacitance of the product lines can be derived.Then, we take advantage of crosstalk immunity of product lines in long set to further reduce the maximum crosstalk effect of the PLA. Finally, synthesis techniques such as local transformation and global transformation are taken into consideration to search for a better result. The experiments demonstrate that our algorithm can effectively minimize the maximum crosstalk effect of a circuit by 48% as compared with the original area-minimized PLA without crosstalk minimization.	algorithm;crosstalk;experiment;forward error correction;logic synthesis;programmable logic array	Yi-Yu Liu;Kuo-Hua Wang;TingTing Hwang	2004	Proceedings Design, Automation and Test in Europe Conference and Exhibition		embedded system;electronic engineering;logic synthesis;logic optimization;logic gate;logic family;programmable logic array;computer science;theoretical computer science;pass transistor logic;algorithm	EDA	16.964578857382648	50.52618387819125	168128
f3880574a4b964fb16d835bd4333f9e5cf446e85	crosstalk-aware routing resource assignment	crosstalk noise;crosstalk;routing;track layer assignment;interconnect;bipartite matching;physical design;vlsi	Crosstalk noise is one of the emerging issues in deep sub-micrometer technology which causes many undesired effects on the circuit performance. In this paper, a Crosstalk-Aware Routing Resource Assignment (CARRA) algorithm is proposed, which integrates the routing layers and tracks to address the crosstalk noise issue during the track/layer assignment stage. The CARRA problem is formulated as a weighted bipartite matching problem and solved using the linear assignment algorithm. The crosstalk risks between nets are represented by an undirected graph and the maximum number of the concurrent crosstalk risking nets is computed as the max clique of the graph. Then the nets in each max clique are assigned to disadjacent tracks. Thus the crosstalk noise can be avoided based on the clique concept. The algorithm is tested on IBM benchmarks and the experimental results show that it can improve the final routing layout a lot with little loss of the completion rate.	algorithm;benchmark (computing);clique (graph theory);clique problem;crosstalk;graph (discrete mathematics);heuristic;matching (graph theory);routing	Hailong Yao;Yici Cai;Qiang Zhou;Xianlong Hong	2005	Journal of Computer Science and Technology	10.1007/s11390-005-0231-x	physical design;routing;crosstalk;bipartite graph;computer science;theoretical computer science;interconnection;distributed computing;very-large-scale integration	EDA	15.927159024961073	51.986366422403805	169113
a73eef27296d11f1bbdad285a293983a06319b7e	ltx - a system for the directed automatic design of lsi circuits	design automation;integrated circuit;routing;placement;chip;large scale integration;logic layout;digital systems	LTX is a minicomputer-based design system for large-scale integrated circuit chip layout which offers a flexible set of interactive and automatic procedures for translating a circuit connectivity description into a finished mask design. The system encompasses algorithms for two-dimensional placement, string placement, exploitation of equivalent terminals, decomposition of routing into channels, and channel routing. Circuit connectivity is preserved during interactive procedures. LTX runs on an H-P 2100 series computer with 32K of memory and disc.   In current applications to polycell-style layouts, one to two weeks is typically required for completion of the layout design of an LSI chip containing 500 cells.		G. Persky;David N. Deutsch;Daniel G. Schweikert	1976		10.1145/800146.804840	chip;physical design;embedded system;routing;electronic engineering;electronic design automation;ic layout editor;computer science;integrated circuit;place and route;design layout record;integrated circuit layout;circuit extraction;engineering drawing;routing;standard cell;placement	EDA	12.905714447263444	50.9582039119304	169214
ef70df9dc0356a4753adfd21ca247c2bff4daf7a	single row routing on multilayers	routing;probleme np complet;multicouche;multiple layer;capa multiple;problema np completo;encaminamiento;np complete problem;acheminement	A common problem in VLSI is automating the routing of wires between pins in a circuit. Several specifications of the routing problem exist. One class of these problems, known as the single row routing problem, involves routing wires when the pins are laid out along a straight line. To prevent electrical interference, the wires are laid out in tracks parallel to the row of pins and distinct wires are prohibited from crossing. Formally, the single row routing problem, known to be NP-complete, involves determining the feasibility of any wiring in the minimum number of tracks. When wires may be routed on more than one layer the problem of determining the feasibility of a wiring in a minimum number of layers but with an arbitrary number of parallel tracks is NP-complete. A long-standing open problem has been the complexity of the single row routing problem on multilayers when the number of parallel tracks per layer is fixed. We show that this version of the problem is also NP-complete.	routing	Adair Dingle;Ivan Hal Sudborough	1995	J. Comput. Syst. Sci.	10.1006/jcss.1995.1012	mathematical optimization;routing;combinatorics;np-complete;computer science;destination-sequenced distance vector routing;mathematics;algorithm	Theory	15.516005854687162	50.57943021007539	170094
fe155045f1ac80eb67e14a2d07b5be150fe2e902	three-dimensional image processing vlsi system with network-on-chip system and reconfigurable memory architecture	high speed imageprocessing;three dimensional imaging;read only storage;random access memory;reconfigurable system;image processing equipment;image processing;3d imaging;network on chip;clocks;very large scale integration;flip flops;three dimensional 3d vlsi;data processing;module system;very large scale integrated;frequency 50 mhz three dimensional image processing vlsi system network on chip system reconfigurable memory architecture ram rom module system 3d image processing vlsi system flexible image data processing input output data control pipeline data operation ram rom synthesis design system pipeline flip flop control clock buffer insertion critical signal route signal transmission correct control operation data storage pipeline control flow power consumption practical chip test inner chip write read function data flow control 3d stacking layer design power 247 728 mw;three dimensional;ram rom synthesis design three dimensional 3d vlsi network on chip system reconfigurable memory system high speed imageprocessing;chip;input output;network on chip system;simulation experiment;data storage;vlsi clocks flip flops flow control image processing equipment memory architecture network on chip pipeline processing random access storage read only storage three dimensional integrated circuits;memory architecture;three dimensional displays;pipelines;reconfigurable memory system;control flow;process control;vlsi;memory systems;ram rom synthesis design;random access storage;power consumption;data flow;flow control;high performance;read only memory;high speed;buffer insertion;flip flop;pipeline processing;three dimensional integrated circuits;three dimensional displays random access memory image processing very large scale integration pipelines read only memory process control	In this paper, we propose new RAM/ROM module system with reconfigurable memory architecture for three-dimensional (3D) image processing VLSI system. To enable flexible image data processing, suitable input/output data control is critical feature for high performance image processing system. The fast speed 3D VLSI system also requires efficient pipeline data operation. New RAM/ROM synthesis design system is realized by specific arrangement with RAM, ROM, pin and interconnection. The pipeline Flip- Flop control, clock buffer insertion and critical signal route have been improved to enhance whole system operation speed. The network-on-chip system is also proposed to enable fast signal transmission and correct control operation. The 3D image processing VLSI system can also be improved by suitable data storage and pipeline control flow. The chip simulation experiments show the accurate results with 247.728mW power consumption and 50MHz processing frequency. Practical chip test conclusion confirms that new RAM/ROM synthesis design can successfully realize innerchip write/read function and efficient data flow control to improve 3D reconfigurable system efficiency. Better image VLSI system can be realized by elaborate network-on-chip system and precise 3D stacking layer design.	computer data storage;control flow;critical path method;dimm;dataflow;experiment;flip chip;flip-flop (electronics);focus stacking;image processing;input/output;interconnection;layer (electronics);modular programming;network on a chip;random-access memory;read-only memory;reconfigurable computing;requirement;simulation;stacking;three-dimensional integrated circuit;very-large-scale integration	Yun Yang	2011	IEEE Transactions on Consumer Electronics	10.1109/TCE.2011.6018893	embedded system;parallel computing;data processing;computer hardware;image processing;computer science;operating system;process control;very-large-scale integration	EDA	11.439840901155938	47.84981393239157	170557
890f7c538e14bf8022937cb0ee1819d2d747a0f4	fuzzy logic approach to vlsi placement	vlsi placement;object oriented programming objects;linguistic variable;fuzzy reasoning;chip area;integrated circuit layout;feasible regions and intervals;very large scale integration;interconnection length;decision theory vlsi fuzzy logic fuzzy set theory circuit layout cad integrated circuit layout application specific integrated circuits object oriented programming;object oriented programming;indexing terms;fuzzy set theory;fuzzy sets;linguistic values;chip;timing driven placement;fuzzy logic;multiple objectives;fuzzy logic very large scale integration fuzzy sets fuzzy set theory timing decision making delay object oriented programming fuzzy systems fuzzy reasoning;application specific integrated circuits;standard cell design style;membership functions;decision theory;hierarchical decision making structures;membership function;object oriented programming objects vlsi placement timing chip area interconnection length fuzzy logic multiobjective decision making standard cell design style linguistic variables linguistic values membership functions hierarchical fuzzy logic rules;vlsi;fuzzy logic system;circuit layout cad;linguistic variables;multiobjective decision making;fuzzy systems;hierarchical fuzzy logic rules;timing	-A contemporary definition of VLSI placement problem is characterized by multiple objectives. These objectives are: timing, chip area, interconnection length and possibly others. In this paper, fuzzy logic has been used to facilitate multiobjective decision-making in placement for standard cell design style. A placement process has been defined in terms of linguistic variables, linguistic values and membership functions. Various objectives have been related by hierarchical fuzzy logic rules implemented as Object-Oriented Programming objects. It is demonstrated that a designed fuzzy logic system is flexible in selecting goals and considering tradeoffs. Details of implementation, experimental results and comparisons with other systems are provided.	fuzzy logic;interconnection;standard cell;very-large-scale integration	Eric Q. Kang;Rung-Bin Lin;Eugene Shragowitz	1994	IEEE Trans. VLSI Syst.	10.1109/92.335016	fuzzy electronics;defuzzification;computer science;fuzzy number;theoretical computer science;neuro-fuzzy;machine learning;fuzzy set;very-large-scale integration;fuzzy associative matrix;algorithm;fuzzy control system;placement	EDA	10.823848513068683	47.33947136749135	171277
21c5ca71205a6ae02269d45264d35e21d41de8fa	thermal-aware non-slicing vlsi floorplanning using a smart decision-making pso-ga based hybrid algorithm	floorplanning;microelectronic center of north carolina mcnc;non slicing floorplan;very large scale integrated circuits vlsi;pso ga based hybrid algorithm pgha	Floorplanning is an important physical design step in the ASIC design flow. It is the process of estimating the area to be occupied by various blocks in a layout together with a precise interconnection pattern. In this work, a smart decision-making hybrid particle swarm optimization-genetic algorithm that aims at reducing the area, wirelength, and hotspot by distributing the temperature evenly across the chip is presented. B*-tree is used to generate the initial floorplan and later a PSO-GA based hybrid algorithm is used to obtain an optimal placement solution. Temperature-driven floorplanning is considered at the perturbation stage to separate the hotspots, thereby reducing the average and maximum temperature. The experimental results of the proposed algorithm are compared with other stochastic algorithms using MCNC and Alpha processor floorplan benchmark circuits. The result shows that the proposed algorithm performs efficient floorplanning, with reduced average and peak temperature.	application-specific integrated circuit;benchmark (computing);combinatorial optimization;dec alpha;design flow (eda);floorplan (microelectronics);genetic algorithm;hybrid algorithm;interconnection;mathematical optimization;multi-objective optimization;np-hardness;network topology;optimization problem;pareto efficiency;particle swarm optimization;phase-shift oscillator;physical design (electronics);simulation;software release life cycle;very-large-scale integration;weight function	P. Sivaranjani;A. Senthil Kumar	2015	CSSP	10.1007/s00034-015-0020-x	floorplan;mathematical optimization;electronic engineering;parallel computing;computer science;engineering	EDA	14.613473745143352	52.79188899580115	172073
7efdc2e671b5d53abe507a07f6159312e5880729	methodology for automated phase noise minimization in rf circuit interconnect trees		We present a methodology for phase noise minimization of interconnects in radio frequency circuits, integrated into a commercial digital tool chain. Accurate estimates of the produced phase noise are derived using a lookup table approach, eliminating the need for analog simulations. A dynamic programming algorithm is utilized to produce the optimal tree structure. The tree is automatically translated into a netlist and placed and routed within the VLSI flow. Back annotated simulations in 28 nm technology show that the obtained results are within 2.2 dB of the actual phase noise, while significantly reducing the design time compared to traditional manual design. To the best of our knowledge, this is the first work on the automation of buffer insertion for phase noise minimization.	algorithm;clock signal;decibel;dynamic programming;electrical connection;industrial pc;lookup table;netlist;phase noise;place and route;radio frequency;requirement;routing;simulation;toolchain;tree structure;very-large-scale integration	Dimo Martev;Sven Hampel;Ulf Schlichtmann	2017	2017 IEEE International Symposium on Circuits and Systems (ISCAS)	10.1109/ISCAS.2017.8051013	phase noise;netlist;electronic engineering;very-large-scale integration;electronic circuit;computer science;tree structure;dynamic programming;logic gate;lookup table	EDA	13.321285776978359	51.576476727397534	172357
08c045e77f61e904ae35e110b393c1cc0b5709c2	a heuristic for constructing a rectilinear steiner tree by reusing routing resources over obstacles	length restricted;vlsi;slew constraint;obstacle avoiding rectilinear steiner tree	The obstacle-avoiding rectilinear Steiner minimal tree (OARSMT) problem is a hot topic in very-large-scale integration physical design. In practice, most of the obstacles occupy the device layer and certain lower metal layers. Therefore, we can place wires on top of the obstacles. To maximize routing resources over obstacles, we propose a heuristic for constructing a rectilinear Steiner tree with slew constraints. Our algorithm adopts an extended rectilinear full Steiner tree grid as the routing graph. We mark two types of Steiner point candidates, which are used for constructing Steiner trees and refining solutions. A shortest path heuristic variant is designed for constructing Steiner trees and it takes into account slew constraint by inhibiting growth. Furthermore, we use a pre-computed strategy to avoid calculating slew rate repeatedly. Experimental results show that our algorithm maximizes routing resources over obstacles and saves routing resources outside obstacles. Compared with the conventional OARSMT algorithm, our algorithm reduces the wire length outside obstacles by as much as 18.74% and total wire length by as much as 6.03%. Our algorithm improves the latest related algorithm by approximately 2% in terms of wire length within a reasonable running time. Additionally, calculating the slew rate only accounts for approximately 15% of the total runing time.	heuristic;rectilinear steiner tree;regular grid;routing	Hao Zhang;Dongyi Ye;Wenzhong Guo	2016	Integration	10.1016/j.vlsi.2016.06.001	mathematical optimization;combinatorics;discrete mathematics;steiner tree problem;computer science;electrical engineering;mathematics;very-large-scale integration	Theory	15.753376736502517	51.144205889926496	174195
954b4cef05ee009d55ad90eb5bc50ed102c6cbbf	layout driven data communication optimization for high level synthesis	circuit optimisation;high level synthesis;integrated circuit layout;floorplan information;high level synthesis;layout driven data communication optimization;physically aware design flow;register transfer level hardware description	High level synthesis transformations play a major part in shaping the properties of the final circuit. However, most optimizations are performed without much knowledge of the final circuit layout. In this paper, we present a physically aware design flow for mapping high level application specifications to a synthesizable register transfer level hardware description. We study the problem of optimizing the data communication of the variables in the application specification. Our algorithm uses floorplan information that guides the optimization. We develop a simple, yet effective, incremental floorplanner to handle the perturbations caused by the data communication optimization. We show that the proposed techniques can reduce the wirelength of the final design, while maintaining a legal floorplan with the same area as the initial floorplan	algorithm;circuit diagram;compiler;floorplan (microelectronics);high-level programming language;high-level synthesis;iterative and incremental development;mathematical optimization;noise shaping;register-transfer level	Ryan Kastner;Wenrui Gong;Xin Hao;Forrest Brewer;Adam Kaplan;Philip Brisk;Majid Sarrafzadeh	2006	Proceedings of the Design Automation & Test in Europe Conference		embedded system;floorplan;computer architecture;electronic engineering;parallel computing;multidisciplinary design optimization;computer science;design flow;operating system;integrated circuit layout;processor register;high-level synthesis;register-transfer level	EDA	13.355937323178653	51.503861508112436	174486
408548fd0608c6d3020601d41589f2fbcac611e9	a predictive distributed congestion metric with application to technology mapping	congestion estimation;predictive distribution;integrated circuit layout;logic design;placement;routing congestion;orientation map;physical design;vlsi design;indexing terms;circuit complexity;network routing;logic synthesis;nanoelectronics;logic design network routing nanoelectronics circuit complexity circuit optimisation vlsi integrated circuit layout;90 nm predictive distributed congestion metric design complexity very large scale integration design vlsi routing congestion prediction area optimization delay optimization probabilistic congestion map subject graph congestion optimal matching congestion aware mapping marginal gate area penalty area oriented technology mapping delay oriented technology mapping congestion estimation logic synthesis physical design;vlsi;technology mapping;circuit optimisation;routing wires very large scale integration delay estimation logic design integrated circuit interconnections moore s law transistors wiring timing;technology mapping congestion estimation logic synthesis physical design placement routing congestion	Due to increasing design complexities, routing congestion has become a critical problem in very large scale integration designs. This paper introduces a distributed metric to predict routing congestion and applies it to technology mapping that targets area and delay optimization. Our technology mapping algorithms are guided by a probabilistic congestion map for the subject graph to identify the congested regions, where congestion-optimal matches are favored. Experimental results on a set of benchmark circuits in a 90-nm technology show that congestion-aware mapping results in a reduction of 37%, on an average, in track overflows with marginal gate-area penalty as compared to conventional area-oriented technology mapping. For delay-oriented mapping, our algorithm improves track overflows by 20%, on an average, in addition to preserving or improving the delay, as compared to the conventional method.	network congestion	Rupesh S. Shelar;Sachin S. Sapatnekar;Prashant Saxena;Xinning Wang	2005	IEEE Trans. on CAD of Integrated Circuits and Systems	10.1109/TCAD.2005.846368	embedded system;electronic engineering;logic synthesis;real-time computing;computer science;theoretical computer science;very-large-scale integration	EDA	15.748644664375542	52.28960403146528	174720
9a5a5c5811b181d9275299db0e536003bbf80013	accelerating 3-d capacitance extraction in deep sub-micron vlsi design using vector/parallel computing	vector computing;integrated circuit;3d capacitance extraction;personal computer;integrated circuits 3d capacitance extraction deep submicron vlsi design vector computing multilayer routing techniques parallel processing p fft algorithm interconnection parasitic influence;vlsi design;multilayer routing techniques;integrated circuit design;acceleration very large scale integration parallel processing parasitic capacitance nonhomogeneous media routing integrated circuit interconnections computational modeling circuit simulation microcomputers;integrated circuit interconnections;deep submicron vlsi design;interconnection parasitic influence;parallel computer;vlsi;fast fourier transforms;capacitance;circuit cad;deep sub micron;vlsi capacitance circuit cad fast fourier transforms integrated circuit design integrated circuit interconnections parallel processing;p fft algorithm;integrated circuits;parallel processing	The widespread application of deep sub-micron and multilayer routing techniques makes the interconnection parasitic influence become the main factor to limit the performance of VLSI circuits. Therefore, fast and accurate 3D capacitance extraction is essential for ultra deep sub-micron design (UDSM) of integrated circuits. Parallel processing provides an approach to reducing the simulation turn-around time. In this paper, we present parallel formulations for 3D capacitance extraction based on P-FFT algorithm, on a personal computer (PC) or on a network of PCs. We implement both vector and parallel versions of 3D capacitance extraction algorithm simultaneously and evaluate our implementation quality in terms of speed up achieved.	algorithm;fast fourier transform;integrated circuit;interconnection;mimd;parallel computing;parallel processing (dsp implementation);personal computer;routing;simd;simulation;speedup;very-large-scale integration	Nima Shahbazi;Hamid Sarbazi-Azad	2007	2007 International Conference on Parallel and Distributed Systems	10.1109/ICPADS.2007.4447827	embedded system;parallel processing;parallel computing;computer science;integrated circuit;very-large-scale integration	EDA	13.143079555572893	49.691750148710355	174790
7a69032aa2cfb157e057cc16cb4c07f0afdbf101	low-power two's-complement multiplication based on selective activation	computer arithmetic low power dissipation two s complement multiplication;multiplying circuits;computer architecture power dissipation delay power demand complexity theory libraries hardware;digital arithmetic;logic partitioning;multiplying circuits digital arithmetic logic partitioning;size 90 nm low power two s complement multiplication selective activation multiplier partitioning standard cell library	A low-power two's-complement multiplier architecture is proposed in this paper. It is shown that by initially partitioning a multiplier into blocks, and selectively activating appropriate blocks depending on the input values, substantial power dissipation reduction is achieved for cases of practical interest. The proposed architecture is quantitatively evaluated in hardware, by mapping several instantiations of the proposed architecture onto a 90nm standard-cell library. Power savings in the order of 38% are achieved in comparison to typical multipliers. Furthermore, delay reduction is also achieved.	activation function;cpu power dissipation;critical path method;low-power broadcasting;standard cell;two's complement	Panagiotis Sakellariou;Vassilis Paliouras	2012	2012 19th IEEE International Conference on Electronics, Circuits, and Systems (ICECS 2012)	10.1109/ICECS.2012.6463653	electronic engineering;theoretical computer science;mathematics;algorithm	EDA	13.190737732211455	46.583896773827995	176178
0d84ac047a6a512a17d7229e483f19df87e9bba9	a new and efficient approach for high-speed and very compact realization of secure hash algorithm	cmos technology field programmable gate arrays cryptography nanoscale devices fabrics nist design automation routing cmos digital integrated circuits fabrication;microprocessors;cmos integrated circuits;design automation;sha 512 high speed compact realization secure hash algorithm hybrid cmos cell fpga nanodevice architecture encryption algorithms semiconductor transistor stack two level nanowire crossbar nanoscale two terminal nanodevices programmable diodes quasi optimum gate placing;high speed compact realization;quasi optimum gate placing;building block;secure hash algorithm;sha 512;cell fpga;nanoelectronics cmos integrated circuits cryptography field programmable gate arrays;computer architecture;nanodevice architecture;cryptography;two level nanowire crossbar;nanoelectronics;semiconductor transistor stack;fabrics;hybrid cmos;encryption algorithms;nanowires;nanoscale two terminal nanodevices;defect tolerance;field programmable gate arrays;high speed;algorithm design and analysis;programmable diodes	We are proposing that the recently proposed cell-FPGA-like hybrid CMOS/nanodevice architecture is an optimum platform to realize encryption algorithms. Such circuits will combine a semiconductor- transistor (CMOS) stack and a two-level nanowire crossbar with nanoscale two-terminal nanodevices (programmable diodes) formed at each crosspoint. The basic modules of the Secure Hash Algorithm (SHA-512) have been designed using this architecture. In addition, using a custom set of design automation tools, quasi-optimum gate placing, routing and rerouting are provided for SHA-512 building blocks. It is shown that such a design results in a circuit which is defect tolerant, much faster and strikingly denser than its CMOS counterpart.	algorithm;cmos;crossbar switch;cryptography;diode;embedded system;encryption;field-programmable gate array;programming paradigm;routing;sha-2;semiconductor;software bug;transistor;transistor–transistor logic	Abbas Shahmoradi;Massoud Masoumi	2009	2009 IEEE International Symposium on Circuits and Systems	10.1109/ISCAS.2009.5117675	nanoelectronics;embedded system;electronic engineering;electronic design automation;computer science;engineering;cryptography;secure hash algorithm;computer engineering	EDA	12.30613151950438	52.57257909012599	176344
193202fa4b0d57feb87c2e72e05cf9be7b3687b4	interactive compaction router for vlsi layout	efficient tool;interactive router;compacting building block;interactive compaction router;functional block;crt display;functional block location;design rule;minimum chip area layout;vlsi layout;databases;very large scale integration;national electric code;routing;compaction;data models;cathode ray tubes;chip;design rules	This paper describes an interactive router for compacting building block VLSI layout. It allows the designer to manipulate the functional block location on the CRT display without breaking interconnections between functional blocks. Following the movement of a functional block, it reroutes the wirings so as to retain interconnections with keeping the layout obeying design rules. The interactive compaction router provides an efficient tool to achieve a minimum chip area layout design.	cathode ray tube;data compaction;obedience (human behavior);router (computing);very-large-scale integration	Hajimu Mori	1984	21st Design Automation Conference Proceedings		chip;compaction;cathode ray tube;embedded system;data modeling;routing;national electrical code;electronic engineering;computer science;engineering;electrical engineering;very-large-scale integration;engineering drawing	EDA	12.71945885851039	50.68360445923244	176725
054a8866d0afb03d7524222ce9d8ceee49628565	improving functional density through run-time constant propagation	dynamic change;digital signal processing;cycle time;time constant;fpga;run time reconfigurable;vlsi;configurable computing;digital circuits;data flow;constant propagation	Circuit specialization techniques such as constant propagation are commonly used to reduce both the hardware resources and cycle time of digital circuits. When reconfigurable FPGAs are used, these advantages can be extended by dynamically specializing circuits using run-time reconfiguration (RTR). For systems exploiting constant propagation, hardware resources can be reduced by folding constants within the circuit and dynamically changing the constants using circuit reconfiguration. To measure the benefits of circuit specialization, a functional density metric is presented. This metric allows the analysis of both static and run-time reconfigured circuits by including the cost of circuit reconfiguration. This metric will be used to justify runtime constant propagation as well as analyze the effects of reconfiguration time on run-time reconfigured systems.	computation;constant folding;digital electronics;dynamical system;field-programmable gate array;iteration;partial template specialization;real-time recovery;registry recon;run time (program lifecycle phase);software propagation	Michael J. Wirthlin;Brad L. Hutchings	1997		10.1145/258305.258316	embedded system;data flow diagram;parallel computing;real-time computing;cycle time variation;computer science;digital signal processing;open-circuit time constant method;very-large-scale integration;time constant;digital electronics;constant folding;field-programmable gate array	EDA	13.639468077408836	48.363773033419534	177282
e81a3164201e40be413a585b545da5822efcf762	low power realization of finite state machines—a decomposition approach	state assignment;low power;power dissipation;power consumption;decomposition of finite state machines;finite state machine;lower power design;state transition	We present in this article a new approach to the synthesis problem for finite state machines with the reduction of power dissipation as a design objective. A finite state machine is decomposed into a number of coupled submachines. Most of the time, only one of the submachines will be activated which, consequently, could lead to substantial savings in power consumption. The key steps in our approach are: (1) decomposition of a finite state machine into submachines so that there is a high probability that state transitions will be confined to the smaller of the submachines most of the time, and (2) synthesis of the coupled submachines to optimize the logic circuits. Experimental results confirmed that our approach produced very good results (in particular, for finite state machines with a large number of states.)	cpu power dissipation;finite-state machine;lisp machine;logic gate	Sue-Hong Chow;Yi-Cheng Ho;TingTing Hwang;C. L. Liu	1996	ACM Trans. Design Autom. Electr. Syst.	10.1145/234860.234862	mathematical optimization;computer science;dissipation;control theory;mathematics;finite-state machine	EDA	15.56967123896882	47.72753502764252	178039
e441926cbef98674fcad115c57e477e10930938c	thermal-aware placement based on fm partition scheme and force-directed heuristic	vlsi circuit physical design;reliability;tecnologia electronica telecomunicaciones;force directed algorithm;partitioning;thermal placement;tecnologias;grupo a	Temperature-tracking is becoming of paramount importance in modern electronic design automation tools. In this paper, we present a deterministic thermal placement algorithm for standard cell based layout which can lead to a smooth temperature distribution over the die. It is mainly based on Fiduccia-Mattheyses partition scheme and a former substrate thermal model that can convert the known temperature constraints into the corresponding power distribution constraints. Moreover, a kind of force-directed heuristic based on cells’ power consumption is introduced in the above process. Experimental results demonstrate a comparatively uniform temperature distribution and show a reduction of the maximal temperature on the die. key words: VLSI circuit physical design, thermal placement, partitioning, reliability, force-directed algorithm	algorithm;die (integrated circuit);electronic design automation;fm broadcasting;force-directed graph drawing;heuristic;maximal set;physical design (electronics);standard cell;very-large-scale integration	Jing Li;Hiroshi Miyashita	2006	IEICE Transactions	10.1093/ietfec/e89-a.4.989	telecommunications;electrical engineering;reliability;mathematics;statistics	EDA	15.575620463430537	52.38952793983615	178587
b6b93b0396c77de74ea1f758cd7e2192fe30dd0b	floorplanning for 2.5-d system integration using multi-layer-bsg structure	2 5d floorplanning problem;phrase based strategy;simulated annealing engine;design automation;integrated circuit layout;integrated circuit interconnections delay very large scale integration design automation circuit synthesis algorithm design and analysis circuit simulation simulated annealing engines runtime;very large scale integration;circuit design;multilayer bsg structure;simulated annealing;2 5d floorplanning problem 2 5d system integration multilayer bsg structure phrase based strategy simulated annealing engine;circuit complexity;system integration;vlsi;circuit layout cad;2 5d system integration;circuit optimisation;circuit optimization;vlsi circuit complexity circuit layout cad circuit optimisation integrated circuit layout simulated annealing	2.5-D integration is a promising technique to significantly reduce the interconnection delay and thus bring advancement to VLSI technology. New CAD tools and approaches are desired by 2.5-D IC circuit design. This paper designed a novel representation multi-layer-BSG and proposed an effective algorithm based on this structure. Quick strategy for solution evaluation and phrase-based strategy for simulated annealing engine are used to reduce the runtime complexity and to improve the performance. Compared with other representations, our algorithm are experimentally proved to be a better choice for 2.5-D floorplanning problem	2.5d;algorithm;circuit design;computer-aided design;experiment;floorplan (microelectronics);interconnection;layer (electronics);simulated annealing;system integration;very-large-scale integration	Sheqin Dong;Shuyi Zheng;Xianlong Hong	2006	2006 IEEE International Symposium on Circuits and Systems	10.1109/ISCAS.2006.1693902	computer architecture;electronic engineering;electronic design automation;computer science;electrical engineering;very-large-scale integration;engineering drawing	EDA	14.178257751413222	52.89587835793923	179047
2734934031820a9eca728481750a489ba482d2e5	a practical methodology for early buffer and wire resource allocation	switching activity;golomb codes;buffer resources;integrated circuit layout;routing;circuit layout cad integrated circuit interconnections vlsi timing buffer circuits application specific integrated circuits network routing wiring integrated circuit layout;resource allocation;wire routes;interconnect;resource management;rabid wire resource allocation interconnect system performance buffer resources wire routes buffer locations design methodology tile graph four stage heuristic;embedded core testing;system performance;buffer circuits;network routing;wire;scan testing;precomputed test sets;wire resource management routing wiring timing design methodology permission artificial intelligence tiles system performance;permission;application specific integrated circuits;integrated circuit interconnections;rabid;tile graph;wire resource allocation;vlsi;four stage heuristic;artificial intelligence;circuit layout cad;test set encoding;tiles;wiring;design methodology;buffer locations;timing	The dominating contribution of interconnect to system per-formance has made it critical to plan for buffer and wiring resources in the layout. Both buffers and wires must be con-sidered, since wire routes determine buffer requirements and buffer locations constrain wire routes. In contrast to recent buffer block planning approaches, our design methodology distributes buffer sites throughout the layout. A tile graph is used to abstract the buffer planning problem while also addressing wire planning. We present a four-stage heuristic called RABID for resource allocation and experimentally verify its effectiveness.	algorithm;call of duty: black ops;experiment;heuristic;naruto shippuden: clash of ninja revolution 3;requirement;wiring	Charles J. Alpert;Jiang Hu;Sachin S. Sapatnekar;Paul G. Villarrubia	2001		10.1145/378239.378461	routing;electronic engineering;real-time computing;computer science;engineering;resource management;engineering drawing;computer network	EDA	14.503635692292502	51.8911254847483	179048
31ad34de9adb4de1a504ef18ee0d8a86e2d87dcc	a hybrid engine for the placement of domain-specific reconfigurable arrays	design tool;simulated annealing;network routing;hybrid approach;rapid prototyping;application specific integrated circuits;genetic algorithm;genetic algorithms;field programmable gate arrays;logic cad;engines hardware genetic algorithms design automation adaptive arrays field programmable gate arrays circuit simulation simulated annealing routing circuit testing;simulated annealing application specific integrated circuits field programmable gate arrays genetic algorithms logic cad network routing;mobile application;reconfigurable hardware;application specific integrated circuits domain specific reconfigurable arrays mobile applications cad design tool field programmable gate arrays genetic algorithms simulated annealing pin locations total routing resource algebraic codebook search;domain specificity	Rapid-prototyping of commercial devices and the demanding requirements for flexible hardware in mobile applications have driven the raise of reconfigurable hardware. The adaptation of CAD design tool is essential for the development of these arrays. While the performance of conventional FPGAs is limited by their predefined architecture, domain- specific reconfigurable arrays target a set of similar applications and their architectures can be tailored to maximize performance within the domain. This paper describes the placement problem for such arrays. It reviews the difficulties encountered implementing genetic algorithm based placement in a previous attempt and presents a hybrid approach by combining genetic algorithm and simulated annealing. The placement algorithm took account of wirelength, pin locations of each block and aims to minimise the total routing resource of the target circuits. It was successfully tested against two set of domain-specific architectures implementing DCT and Algebraic Codebook Search. Its performance was also accessed against five large benchmark circuits in the literature and the results shows significant improvement over the previous approach.	architecture domain;benchmark (computing);codebook;computer-aided design;design tool;discrete cosine transform;domain-specific language;field-programmable gate array;genetic algorithm;mobile app;rapid application development;rapid prototyping;reconfigurable computing;requirement;routing;simulated annealing	Wing On Fung;Tughrul Arslan;Sami Khawam	2007	Second NASA/ESA Conference on Adaptive Hardware and Systems (AHS 2007)	10.1109/AHS.2007.5	embedded system;real-time computing;genetic algorithm;computer science;theoretical computer science;machine learning;placement	EDA	12.772837864385929	51.45844360980388	179190
789899777e4a003270fff59bc309d4700515c6b5	global routing with crosstalk constraints	sequential routing global routing crosstalk constraints deep submicron designs crosstalk between interconnection wires vlsi layout design routing algorithm steiner tree formulation lagrangian relaxation technique complexity two stage heuristic approach np hard problem;routing crosstalk integrated circuit interconnections wires very large scale integration coupling circuits lagrangian functions driver circuits capacitance geometry;integrated circuit layout;crosstalk;very large scale integrated;trees mathematics;indexing terms;circuit complexity;network routing;integrated circuit interconnections;global routing;vlsi;circuit layout cad;vlsi layout;steiner tree;trees mathematics integrated circuit layout circuit layout cad network routing vlsi integrated circuit interconnections circuit complexity crosstalk;lagrangian relaxation	Due to the scaling down of device geometry and increasing frequency in deep sub-micron designs, crosstalk between interconnection wires has become an important issue in VLSI layout design. In this paper, we consider crosstalk avoidance during global routing. We present a global routing algorithm based on a new Steiner tree formulation and the Lagrangian relaxation technique. We also give theoretical results on the complexity of the problem.	algorithm;crosstalk;image scaling;interconnection;lagrangian relaxation;linear programming relaxation;routing;steiner tree problem;very-large-scale integration	Hai Zhou;Martin D. F. Wong	1999	IEEE Trans. on CAD of Integrated Circuits and Systems	10.1109/43.806813	circuit complexity;mathematical optimization;routing;electronic engineering;crosstalk;index term;lagrangian relaxation;steiner tree problem;computer science;electrical engineering;theoretical computer science;mathematics;integrated circuit layout;very-large-scale integration;routing;algorithm	EDA	15.719322680072466	51.71922009939336	179885
1f6ffb3dc1fcf64ce4b2af482adf253d45f8c43e	a state assignment scheme targeting performance and area	assignment problem;minimisation of switching nets state assignment finite state machines multivalued logic circuits delays logic partitioning;one hot encoding state assignment scheme finite state machines sparse state encoding strategies multi level logic circuits delay two hot encodings constrained partitioning problem greedy heuristic algorithm;state assignment;minimisation of switching nets;multivalued logic circuits;greedy heuristic;finite state machines;logic partitioning;encoding electrical capacitance tomography silicon power dissipation circuit testing electronic switching systems logic circuits identity based encryption delay effects programmable logic arrays;finite state machine;delays	In this paper we address the state assignment problem for Finite State Machines (FSMs). In particular we study the effect of certain sparse state encoding strategies on the area and performance of the FSM when implemented using multi-level logic circuits. We present the results of a systematic study conducted for characterizing the effects of some encoding schemes on the area and delay of FSM implementations. Based on these results, we conclude that two-hot encodings preserve the speed advantages of one-hot encodings while reducing the area of the implemented circuit. We show that the problem of finding an optimal two-hot encoding can be posed as a constrained partitioning problem on a certain graph. We describe a greedy heuristic algorithm for this partitioning problem. Finally, we present some results and comparisons between the circuits obtained using two-hot encodings as opposed to those obtained using one-hot encoding, and to those obtained using JEDI and NOVA. The results are encouraging, particularly for FSMs with a large number of states.		B. N. V. Malleswara Gupta;Harini Narayanan;Madhav P. Desai	1999		10.1109/ICVD.1999.745185	electronic engineering;greedy algorithm;discrete mathematics;logic optimization;computer science;theoretical computer science;mathematics;assignment problem;finite-state machine;algorithm	EDA	16.482134051605435	50.534812010229544	181026
7966a7232decc6e6d2131e6744c62115c5df25db	layout optimization and template pattern verification for directed self-assembly (dsa)	layout optimization;machine learning directed self assembly layout optimization template verification;size 7 nm layout optimization template pattern verification directed self assembly block copolymer pitched dense patterns next generation lithography guiding templates eda algorithms patterning rules dsa aware optimization techniques dsa technology;machine learning;routing layout optimization lithography libraries wires shape;directed self assembly;self assembly nanolithography nanopatterning optimisation polymer blends;template verification	Recently, block copolymer directed self-assembly (DSA) has demonstrated great advantages in patterning contacts/vias for the 7 nm technology node and beyond. The high throughput and low process cost of DSA makes it the most promising candidate in patterning tight pitched dense patterns for the next generation lithography. Since DSA is very sensitive to the shapes and distributions of the guiding templates, it is necessary to develop new EDA algorithms and tools to address the patterning rules and constraints of the process. This paper presents a set of DSA-aware optimization techniques targeting the most urgent problems for DSA technology, including layout optimization and template pattern verification.	algorithm;electronic design automation;mathematical optimization;next-generation network;self-assembly;semiconductor device fabrication;template method pattern;throughput;via (electronics)	Zigang Xiao;Daifeng Guo;Martin D. F. Wong;He Yi;Maryann C. Tung;H.-S. Philip Wong	2015	2015 52nd ACM/EDAC/IEEE Design Automation Conference (DAC)	10.1145/2744769.2747934	electronic engineering;simulation;computer science;engineering;engineering drawing	EDA	14.231739211981976	53.3019391127369	181285
520a821c4371ed2395e0f55f29ca8825cbb3065d	fpgas with reconfigurable threshold logic gates for improved performance, power and area		This paper proposes an alternative FPGA tile structure that consists of three traditional LUTs combined with a new reconfigurable threshold logic cell (TLC). The TLC requires only 7 SRAM cells and can be configured to implement one of several threshold functions. The proposed architecture is implemented in a 28nm FDSOI process, and is evaluated on standard benchmark circuits and several large complex function blocks. The results demonstrate an average reduction of 8.9% in register count, 15.4% in multiplexer count, 7% average reduction in Basic Logic Element (BLE) area, and 8.2% average reduction in BLE power, with a maximum decrease in register count up to 64%, BLE multiplexer count up to 68%, BLE Area up to 51.6% and BLE power up to 61.6% without loss in performance. We also show a reduction of 21% in the area of a tile.		Ankit Wagle;Jinghua Yang;Aykut Dengi;Sarma B. K. Vrudhula	2018	2018 28th International Conference on Field Programmable Logic and Applications (FPL)	10.1109/FPL.2018.00051	parallel computing;multiplexer;field-programmable gate array;static random-access memory;architecture;computer science;electronic circuit;logic gate	EDA	12.369617953522186	48.11930215443112	181527
55fe1daf15e69f59a8b822455dcc2f99d93ed3d5	graph algorithms for clock schedule optimization	sequential circuits;shortest path problem;scheduling;graph theory	Performance driven synthesis of sequential circuits relies on techniquessuch as optimal clocking, retiming and resynthesis. In this paper we address the optimal clockingproblem and demonstrate that it is reducible to a parametric shortest path problem. We use constraints that take into account both the short and long paths. The main contributions are efjicient graph algorithms to solve the set of constraints necessary for correct clocking.	clock rate;genetic algorithm scheduling;graph theory;list of algorithms;mathematical optimization;retiming;shortest path problem	Narendra V. Shenoy;Robert K. Brayton;Alberto L. Sangiovanni-Vincentelli	1992		10.1145/304032.304073	mathematical optimization;real-time computing;graph bandwidth;computer science;graph theory;theoretical computer science;route inspection problem;mathematics;sequential logic;shortest path problem;scheduling;closure problem	EDA	17.17228501984387	51.94369524127967	181913
1baa07afe3203f8d83a86b89772fb28fc3900c46	fir filter synthesis considering multiple adder graphs for a coefficient	fir filters computational complexity;filter synthesis algorithm;hardware complexity;multiple adder graphs;adder graph hybrid algorithms fir filter synthesis multiple adder graphs hardware complexity finite impulse response digital filters filter synthesis algorithm dependence graph algorithms hartley algorithm eta dimensional algorithm;finite impulse response filter;dependence graph;hartley algorithm;dependence graph algorithms;fir digital filter;digital filter;finite impulse response filter adders signal processing algorithms costs hardware digital filters tree graphs digital signal processing stability energy consumption;finite impulse response;filtering algorithms;multiplier block;computational complexity;adders;heuristic algorithms;fir filter;digital filters;eta dimensional algorithm;finite impulse response digital filters;adder graph hybrid algorithms;fir filters;signal processing algorithms;fir filter synthesis;multiplier block digital filter filter optimization finite impulse response fir filter synthesis;finite impulse response fir filter synthesis;algorithm design and analysis;hybrid algorithm;filter optimization	To reduce the hardware complexity of finite-impulse response (FIR) digital filters, this paper proposes a new filter synthesis algorithm. Considering multiple adder graphs for a coefficient, the proposed algorithm selects an adder graph that can be maximally sharable with the remaining coefficients, whereas previous dependence-graph algorithms consider only one adder graph when implementing a coefficient. In addition, an addition reordering technique is proposed to derive multiple adder graphs from a seed adder graph generated by using previous dependence-graph algorithms. Experimental results show that the proposed algorithm reduces the hardware cost of FIR filters by 22% and 3.4%, on average, compared to the Hartley and -dimensional reduced adder graph hybrid algorithms, respectively.	adder (electronics);algorithm;coefficient;digital filter;finite impulse response;graph theory;hartley (unit);list of algorithms;network synthesis filters	Jeong-Ho Han;In-Cheol Yong Park	2008	IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems	10.1109/TCAD.2008.917581	mathematical optimization;electronic engineering;computer science;theoretical computer science;finite impulse response;serial binary adder;mathematics;carry-save adder;algorithm;adder	EDA	14.378183846470808	46.826877812502005	182690
7f138442a802da07d5e5cd4144896cd95115b410	wevian: a web-based placement visualizer / analyzer		One of the most important stages of a typical ASIC (Application-specific integrated circuit) design flow, is physical design. The most prominent step of the aforementioned stage is placement. Major design challenges are regulated while traversing this stage in order to accommodate the final sign-off. Various aspects of the design might be modified during this step, and the primary manner to keep track of these modifications is usually through detailed text reports, concerning universal metrics like density and wire-length, and generic static visualizations, due to the timing overhead it introduces to the overall procedure. However, a detailed and interactive depiction of the final result might provide insights concerning the quality of the final solution and the effectiveness of the applied algorithms. In this paper we present WEVIAN, a web-based placement visualizer/analyzer that enhances the design procedure by adding interactivity and offloading part of the workload to a third-party server.	application-specific integrated circuit;approximation algorithm;design flow (eda);displacement mapping;interactivity;iteration;online and offline;open-source software;overhead (computing);parsing;physical design (electronics);server (computing);very-large-scale integration;web application	Konstantinos Mantos;Nikolaos Koungalis;Georgios Demesiotis;Panagiotis Oikonomou;Antonios N. Dadaliaris;Georgios I. Stamoulis	2017		10.1145/3139367.3139396	spectrum analyzer;real-time computing;workload;interactivity;application-specific integrated circuit;web application;computer science;design flow;integrated circuit;physical design	EDA	12.315671676009998	53.10605195475651	183560
b4b5ceab8dc317ed9602ad036a0b29a318996e35	initial placement of gate arrays using least-squares methods	gate array;assignment;eigenvalues;least-squares;placement;quadratic programming;unconnected graphs;gate array;assignment;eigenvalues;least-squares;placement;quadratic programming;unconnected graphs	It is known [1] that the optimal placement of devices on a carrier is NP-complete. So algorithms are forced to rely on heuristics in order to generate placements which are of high quality even if not globally optimal.  This paper proposes the use of a metric which is the sum of the squares of the lengths of connections, for which a globally optimal assignment can be derived when overlapping components are ignored. A second placement phase maps this into a non-overlapping placement on the carrier while perturbing the derived placement as little as possible.  This is essentially the metric used in [4] although not explicitly stated. However, [4] does not deal with the problems of fixed devices, IO's and other constraints which are important to VLSI design. The current paper seeks to incorporate these constraints into the model from the beginning.	algorithm;assignment (computer science);display resolution;heuristic (computer science);least squares;map;maxima and minima;np-completeness;very-large-scale integration	John P. Blanks	1984	21st Design Automation Conference Proceedings		mathematical optimization;electronic engineering;computer science;theoretical computer science;mathematics;least squares;quadratic programming;placement	EDA	14.763045814028581	50.38508930992675	183633
245bd2e40082525b3a15a6c8ab72c8875f807c6a	architectural design of a three dimensional fpga	architectural design;triptych architecture architectural design three dimensional fpga rothko 3d vlsi circuit technology transferred circuits sea of gates fpga model metal interconnections very fine grain interconnection scheme combinational multiplier;three dimensional;network routing;integrated circuit interconnections;circuit layout cad field programmable gate arrays vlsi integrated circuit interconnections network routing logic cad;fpga architecture;vlsi;circuit layout cad;3 dimensional;field programmable gate arrays;logic cad;field programmable gate arrays integrated circuit interconnections routing switches very large scale integration application specific integrated circuits propagation delay logic devices computer architecture programmable logic arrays	The design and evaluation of a 3-dimensional FPGA architecture called Rothko will be described. Rothko takes advantage of a novel 3-dimensional VLSI circuit technology developed at Northeastern University that is based on transferred circuits with interconnections between layers of circuits. The Rothko 3-0 FPGA architecture is based on a sea-of-gates FPGA model first proposed in the Triptych architecture (a 2 -0 architecture) in which individual cells have the dual functions of routing and logic implementation. Our 3-0 VLSI technology allows metal interconnections to be made between cells on different layers so that Rothko is truly 3-D. A very fine-grain interconnection scheme is provided with each cell connected to the one abovehelow it. In this paper we present the architectural design of this 3 0 FPGA. The 3-0 technology that supports the Rothko architecture is also described. An example of mapping a combinational multiplier to both the Rothko and Triptych architectures is provided to demonstrate the advantages of Rothko.	combinational logic;field-programmable gate array;integrated circuit;interconnection;routing;very-large-scale integration	Waleed Meleis;Miriam Leeser;Paul M. Zavracky;Mankuan Michael Vai	1997		10.1109/ARVLSI.1997.634858	computer architecture;electronic engineering;engineering;computer engineering	EDA	11.877407678271908	52.11791340633167	183753
3eb714e90b434776b8c4bc9dac3ac0d6b9f70b1e	a study of floating-point architectures for pipelined risc processors	microprocessors;floating point unit;cmos standard cells;reduced instruction set computing embedded systems microcomputers;application software;embedded microprocessors;reduced instruction set computing;0 25 micron floating point architectures pipelined risc processors computing performance embedded microprocessors cmos standard cells;pipelined risc processors;computer architecture;embedded systems;data analysis;power engineering computing;low power;computing performance;pipelines;arithmetic;cities and towns;floating point;floating point architectures;power consumption;high speed;microcomputers;reduced instruction set computing pipelines computer architecture microprocessors application software arithmetic cities and towns embedded computing power engineering computing data analysis;0 25 micron;embedded computing	To achieve an increase in the computing performance of embedded microprocessors, improved implementations of floating-point units (FPUs) are used. However, there is a need to analyze the suitability of floating-point architectures for high-speed or low power applications. In this research, different system-level architectures and operational algorithms of FPUs were implemented using 0.25mum CMOS standard cells. Fair comparison of design metrics in terms of speed, area and power consumption were made and analyzed for each design. Simulation results show that architectures with an independent pipeline for division perform better in terms of speed while combined pipelines consume the least power. Also, architectures with a combined pipeline for addition and multiplication and an independent pipeline for division occupy the smallest layout area and, in general, show the best performance in all three metrics	algorithm;cmos;central processing unit;embedded system;floating-point unit;graphics pipeline;microprocessor;pipeline (computing);simulation	J. A. P. Reyes;Louis P. Alarcón;L. Alarilla	2006	2006 IEEE International Symposium on Circuits and Systems	10.1109/ISCAS.2006.1693184	floating-point unit;embedded system;reduced instruction set computing;computer architecture;application software;parallel computing;computer science;floating point;operating system;microcomputer;pipeline transport;data analysis	Arch	10.486562094341524	48.11863919637144	184743
cd9cf3cf0d3de747490a27f460beebe3b624e0d2	improving circuit mapping performance through mig-based synthesis for carry chains	carry chain;fpga;technology mapping;majority inverter graph	Hard-wired carry chains in FPGAs are designed to improve efficiency of important arithmetic primitives. Although they are proven to be effective for arithmetic-rich functions, there are very few studies on the optimization opportunities of carry chains for general logic that is poor in arithmetic operations. Recently, Majority-Inverter Graphs (MIGs) were proposed for efficient Boolean logic optimization. MIGs open an opportunity for efficient mapping of critical paths onto hard carry chains, as the carry logic of a full adder is naturally a majority (MAJ) gate. In this paper, we propose an MIG-based synthesis method to exploit hard adders in FPGAs for the mapping of general logic. The proposed heuristic algorithm selects MAJ nodes to be mapped on the carry chains and the associated LUTs; then, the efficiency of carry chain mapping is examined theoretically for efficient LUT utilization. The experimental results show that, compared to traditional design flow Verilog-to-Routing (VTR 7.0), the proposed approach can improve delay by up to 25% with an average of 8%, while the channel width is reduced by up to 20% with an average of 6%.	adder (electronics);algorithm;field-programmable gate array;heuristic (computer science);logic optimization;mathematical optimization;power inverter;routing;verilog	Zhufei Chu;Xifan Tang;Mathias Soeken;Ana Petkovska;Grace Zgheib;Luca Gaetano Amarù;Yinshui Xia;Paolo Ienne;Giovanni De Micheli;Pierre-Emmanuel Gaillardon	2017		10.1145/3060403.3060432	embedded system;electronic engineering;real-time computing;computer science;engineering;field-programmable gate array	EDA	15.185148054104594	48.94401863251325	185100
1ff81248b9c3073626bece94a7d3fa88ac7cd7f7	a placement algorithm for fpga designs with multiple i/o standards	field programmable gate array;graphe biparti;entrada salida;grafo bipartido;algorithme placement;bipartite matching;red puerta programable;simulated annealing;reseau porte programmable;input output;recuit simule;recocido simulado;bipartite graph;entree sortie	State-of-the-art FPGAs possess I/O resources that can be configured to support a wide variety of I/O standards [1]. In such devices, the I/O resources are grouped into banks. One of the consequences of the banked organization is that all of the I/O objects that are placed within a bank must use „compatible“ I/O standards. The compatibility of I/O standards is based on each standard’s supply and reference voltage requirements. For designs that use more than one I/O standard, the constraints associated with the banked organization lead to a constrained I/O pad placement problem. Meeting these constraints with a minimal deleterious effect on traditional objectives like minimizing wirelength turns out to be quite challenging. In this paper, we present a placement algorithm that operates in the context of these constraints. Our approach uses a combination of simulated annealing, weighted bipartite matching and constructive packing to produce a feasible I/O placement. Results show that the proposed algorithm produces placements with wirelength characteristics that are similar to the placements produced when pad placement is unconstrained.	algorithm;bin packing problem;field-programmable gate array;heuristic (computer science);input/output;loss function;matching (graph theory);requirement;set packing;simulated annealing	Jason Helge Anderson;Jim Saunders;Sudip Nag;Chari Madabhushi;Rajeev Jayaraman	2000		10.1007/3-540-44614-1_24	bipartite graph;computer science;distributed computing;algorithm	EDA	15.738618135207773	49.650202121899845	185702
11fc886091de23952afc75d3a0d139cfa8f99604	double-patterning friendly grid-based detailed routing with online conflict resolution	graph theory;iterative methods;lithography;network routing;dpl;color assignment;conflict detection;double-patterning grid-based detailed routing;double-patterning lithography;geometrical relations;graph structure;handling layout decomposition;iterations;layout design phase;online conflict resolution;overlay errors;post-layout decomposition;routed polygons;size 22 nm;size 32 nm;double patterning lithography;conflict resolution;detailed;grid-based;routing	Double patterning lithography (DPL) is seen as one of the most promising solutions for new technology nodes such as 32nm and 22nm. However, DPL faces the challenges of handling layout decomposition and overlay errors. Currently, most DPL solutions use post-layout decomposition which requires multiple iterations and designer intervention to achieve a decomposable layout as designs scale larger. Recent research is starting to consider DPL constraints during the layout design phase especially during the detailed routing phase. In this work, we propose DPL-aware grid-based detailed routing algorithm supported with online conflict resolution. The conflict resolution algorithm uses a graph structure to represent geometrical relations between routed polygons and helps in conflict detection and color assignment. Experimental results indicate that this enhanced algorithm reduces the number of conflicts by 60% on average.	algorithm;file synchronization;iteration;privilege level;routing	Islam S. Abed;Amr G. Wassal	2012	2012 Design, Automation & Test in Europe Conference & Exhibition (DATE)		lithography;algorithm design;routing;parallel computing;computer science;graph theory;theoretical computer science;conflict resolution;engineering drawing;algorithm	EDA	14.972891077217056	52.98631769600952	185992
e6df21c5c35c5402683ea9cea8622e485cafff50	special purpose architecture for accelerating bitmap drc	design automation;very large scale integration;geometry;distributed computing;supercomputer education research centre;acceleration;large scale integration;permission;machinery;electrical communication engineering;acceleration permission geometry large scale integration very large scale integration distributed computing machinery laboratories design automation parallel algorithms;parallel algorithms	In this paper we propose algorithms for performing DRC on a bitmapped layout and develop special purpose architecture for its implementation. We use window scan method, with flexible window size, reduce redundant pixel processing in a window unlike that in [5].	algorithm;bitmap;full custom;pixel;window function	Narasimha B. Bhat;S. K. Nandy	1989	26th ACM/IEEE Design Automation Conference	10.1145/74382.74501	acceleration;embedded system;electronic engineering;machine;parallel computing;real-time computing;electronic design automation;computer science;engineering;electrical engineering;theoretical computer science;operating system;parallel algorithm;very-large-scale integration;programming language;algorithm	EDA	11.838891144519726	46.813275039344646	186198
798921eb6c455a17f910225179a9387ce1e71435	a transistor level placement tool for custom cell generation	libraries;cmos technology;parasitic capacitance;optimisation tool;cmos ics transistor level placement tool custom cell generation macro cell design style eulerian path finding algorithm optimisation tool simulated annealing vlsi layout;integrated circuit layout;transistor level placement tool;very large scale integration;placement;programmable logic arrays;simulated annealing;path finding;macro cell design style;circuit simulation;libraries circuit simulation simulated annealing transistors parasitic capacitance very large scale integration cmos technology costs programmable logic arrays cmos logic circuits;custom cell generation;cmos digital integrated circuits;application specific integrated circuits;cmos logic circuits;transistors;vlsi;circuit layout cad;vlsi layout;circuit optimisation;logic cad;logic cad integrated circuit layout circuit layout cad vlsi simulated annealing circuit optimisation application specific integrated circuits cmos digital integrated circuits;aspect ratio;eulerian path finding algorithm;cmos ics	In this paper, we present a transistor level placer suitable for the macro cell design style. The Eulerian path finding algorithm is used to create locally optimal placements of groups of transistors, called stacks. Typically however there are large disparities in the sizes of the various stacks obtained. It is therefore not always possible to meet the desired cell aspect ratio/height/width specifications. In our placer, these stacks can be reshaped so that the constraints on the cell are met. The optimisation tool used is simulated annealing. Placements for cells containing several hundred transistors were generated using this method.	transistor	Ranjit K. Dash;T. Pramod;Vinita Vasudevan;M. Ramakrishna	2000		10.1109/ICVD.2000.812617	electronic engineering;computer science;engineering;electrical engineering;very-large-scale integration;computer engineering	EDA	13.507578823973924	51.56385187002225	187293
a9c75ef6fd5dd20d1f4b32c810ef10e911f5e68f	pictures with parentheses: combining graphics and procedures in a vlsi layout tool		Tile packing is a technique for VLSI module generation that uses both graphical and procedural information. A graphical editor is used to specify tiles of mask information, then procedures are written to arrange the tiles into modules. This technique combines the visual power of graphical systems with the programming power of procedural systems. Since all of the mask information is contained in the tiles, the same procedures may be used for different design rules or technologies, merely by supplying a different set of tiles. We describe the procedural and graphical interfaces, and discuss two module generators that have been built with them.	adaptive tile refresh;graphical user interface;graphics;procedural programming;set packing;very-large-scale integration	Robert N. Mayo;John K. Ousterhout	1983	20th Design Automation Conference Proceedings		layout;product;yield;electronic circuit;computer architecture;fault coverage;electronic design automation;computer science;electrical engineering;graphical user interface;software testing;very-large-scale integration;programming language;computer graphics;engineering drawing;difference set;computer engineering	EDA	11.951779297550653	51.16629361379084	187374
2e5e02db8b9def4fe9334119d8c563d9f9bce84e	optimizing floating point units in hybrid fpgas	field programmable gate array;hybrid field programmable gate array;optimisation;optimisation adders field programmable gate arrays floating point arithmetic;floating point unit;optimizing floating point unit;high density;multipliers;common subgraph extraction;floating point fp;routing;subgraph extraction optimizing floating point unit hybrid fpga hybrid field programmable gate array floating point adders subtracter interconnection multipliers fm wordblocks wb lut lookup tables registers floating point benchmark circuits system level issues architectural issues fpu architecture optimizations area delay product;wires;wb;field programmable gate array fpga;fixed point;system level issues;computer architecture;lookup tables;registers;adders;wordblocks;lut;fm;merging;floating point fp common subgraph extraction field programmable gate array fpga;floating point adders subtracter interconnection;lookup table;field programmable gate arrays benchmark testing optimization merging routing computer architecture wires;optimization;floating point;floating point arithmetic;field programmable gate arrays;coarse grained;subgraph extraction;architectural issues;area delay product;fpu architecture optimizations;floating point benchmark circuits;benchmark testing;hybrid fpga	This paper introduces a methodology to optimize coarse-grained floating point units (FPUs) in a hybrid field-programmable gate array (FPGA), where the FPU consists of a number of interconnected floating point adders/subtracters (FAs), multipliers (FMs), and wordblocks (WBs). The wordblocks include registers and lookup tables (LUTs) which can implement fixed point operations efficiently. We employ common subgraph extraction to determine the best mix of blocks within an FPU and study the area, speed and utilization tradeoff over a set of floating point benchmark circuits. We then explore the system impact of FPU density and flexibility in terms of area, speed, and routing resources. Finally, we derive an optimized coarse-grained FPU by considering both architectural and system-level issues. This proposed methodology can be used to evaluate a variety of FPU architecture optimizations. The results for the selected FPU architecture optimization show that although high density FPUs are slower, they have the advantages of improved area, area-delay product, and throughput.	benchmark (computing);embedded system;field-programmability;field-programmable gate array;fixed point (mathematics);floating-point unit;lookup table;mathematical optimization;optimizing compiler;routing;throughput	Chi Wai Yu;Alastair M. Smith;Wayne Luk;Philip Heng Wai Leong;Steven J. E. Wilton	2012	IEEE Transactions on Very Large Scale Integration (VLSI) Systems	10.1109/TVLSI.2011.2153883	embedded system;electronic engineering;parallel computing;lookup table;computer hardware;computer science;operating system	EDA	13.534983701347981	53.24382409400373	187408
9a315c5f1ab94644dfb68924d4c8acbaff236778	macro-cell placement for analog physical designs using a hybrid genetic algorithm with simulated annealing	placement;physical design;simulated annealing;analog integrated circuits;genetic algorithm	Practical analog layout synthesis techniques have been the subject of active research for the past two decades to address the growing gap between the increasing chip functionality and the design productivity. In this paper, we present a novel macro-cell placement approach following the optimization flow of a genetic algorithm controlled by the methodology of simulated annealing. A process of cell slide is adopted to drastically reduce the configuration space without degrading search opportunities. In addition, this cell-slide process is used to satisfy the symmetry constraints essential for analog layouts. Furthermore, the dedicated cost function captures subtle electrical and geometrical constraints, such as area, net length, aspect ratio, proximity, parasitic effects, etc. required for analog layout and subsequent intellectual property reuse. To study the algorithm parameters, fractional factorial experiments and a meta-GA approach are employed. The proposed algorithm has been tested using several analog circuits. Compared to the simulated-annealing approach, the dominant one currently used for the analog placement problem, the proposed algorithm requires less computation time while generating higher quality layouts, comparable to expert manual placements. Furthermore, our hybrid algorithm and the method of parameter optimization can be readily adapted to different optimization problems across disciplines.	genetic algorithm;memetic algorithm;simulated annealing	Lihong Zhang;Rabin Raut;Yingtao Jiang;Ulrich Kleine;Yoohwan Kim	2005	Integrated Computer-Aided Engineering		physical design;mathematical optimization;genetic algorithm;simulated annealing;computer science;machine learning;adaptive simulated annealing;placement	EDA	13.706566401423558	51.70399100936405	187409
53093f8dcb3d4e3c9c6b5d5004c510d39ba0c7a2	restructuring wafers for maximum yield and some applications of wsi	wire length minimisation;circuit faults costs wire very large scale integration wafer scale integration power system interconnection application software computer science chip scale packaging wiring;circuit faults;wsi;two dimensional wafer;application software;very large scale integration;systolic arrays;maximum yield;vlsi fault tolerant computing parallel algorithms redundancy systolic arrays;power system interconnection;wire;fault tolerant computing;redundancy;fft graph;two dimensional wafers;periphery nodes;two dimensional array;faulty wafer;i o nodes;wafer scale integration;vlsi;butterfly graph;load factor;fft machines;computer science;wiring;chip scale packaging;parallel algorithms;periphery nodes wire length minimisation maximum yield wsi two dimensional wafers faulty wafer load factor fft machines two dimensional wafer butterfly graph two dimensional array i o nodes fft graph	The paper studies the problem of restructuring two dimensional wafers in the presence of faults. It constructs arrays of size as much as the size of the original faulty wafer. Obviously this is done at the cost of increased load factor. Later it shows how to construct small FFT machines on a two dimensional wafer. The FFT machines are constructed by embedding a butterfly graph in a two dimensional array in such a fashion that all the I/O nodes of a FFT graph are restricted to the periphery nodes of the mesh. It also minimizes the maximum wire length which is an important cost factor in such wafer scale designs. >	wafer-scale integration	D. Bhatia	1990		10.1109/SPDP.1990.143638	parallel computing;computer science;operating system;very-large-scale integration	EDA	14.133184036809588	49.56170630134742	187715
378ac48cb9ecf6af6f7934370524186bbc74dc34	acyclic multi-way partitioning of boolean networks	iterative algorithms;logic design;very large scale integration;efficient algorithm;logic circuits;chip;circuit simulation;signal processing;boolean network;clustering algorithms;partitioning algorithms circuit simulation clustering algorithms signal processing logic circuits field programmable gate arrays very large scale integration iterative algorithms pipeline processing logic design;field programmable gate arrays;pipeline processing;partitioning algorithms	Acyclic partitioning on combinational boolean networks has wide range of applications, from multiple FPGA chip partitioning to parallel circuit simulation. In this paper, we present two efficient algorithms for the acyclic multi-way partitioning. One is a generalized Fm-based algorithm. The other is based on the theory of maximum fanout-free cone (MFFC) decomposition. The acyclic FM-algorithm usually results in larger cut-size, as expected, compared to the undirected FM-algorithm due to the acyclic constraint. To our surprise, however, the MFFC-based acyclic partitioning algorithm consistently produces smaller (50% on average) cut-sized solutions than the conventional FM-algorithm. This result suggests that considering signal directions during the process can lead to very natural circuit decomposition and clustering, which in turn results in better partitioning solutions. We have also implemented parallel gate level simulators in Maisie and applied our partitioning algorithms to evaluate their impact on circuit simulation.	algorithm;boolean network;cluster analysis;combinational logic;directed acyclic graph;electronic circuit simulation;fm broadcasting;fan-out;field-programmable gate array;graph (discrete mathematics);graph partition;series and parallel circuits	Jason Cong;Zhijun Li;Rajive L. Bagrodia	1994	31st Design Automation Conference	10.1145/196244.196609	chip;embedded system;boolean circuit;electronic engineering;logic synthesis;boolean network;logic gate;computer science;theoretical computer science;machine learning;signal processing;very-large-scale integration;cluster analysis;field-programmable gate array	EDA	15.869971217264174	48.533406106174105	187752
051d56ff132bce10ece5e347c11758c6c19e234f	application-driven power efficient alu design methodology for modern microprocessors	dynamic circuits alu application driven power delay;dynamic circuits;logic design;logic gates microprocessors delays adders algorithm design and analysis power demand cmos integrated circuits;会议论文;conference paper;word length 8 bit alu design modern microprocessors power efficiency pn selection algorithm power efficient dynamic modules dynamic circuits iscas85 74x series benchmark circuits power consumption;alu;power consumption;power consumption logic design microprocessor chips;application driven;power;microprocessor chips	In this paper, we propose an application-driven ALU design methodology to achieve high level of power efficiency for modern microprocessors. We introduce a PN selection algorithm (PNSA) which enables designers to select power efficient dynamic modules for different applications, based on the detailed analysis of dynamic circuits. Experimental results on ISCAS85 and 74X-Series benchmark circuits show that the power consumption of 8-bit ALU based on this approach can be reduced by 54%-60% for different frequency levels as compared to the conventional dynamic ALU design, demonstrating the effectiveness of the proposed method on application-driven custom ALU design.	8-bit;arithmetic logic unit;benchmark (computing);dynamic circuit network;high-level programming language;microprocessor;performance per watt;selection algorithm	Na Gong;Jinhui Wang;Ramalingam Sridhar	2013	International Symposium on Quality Electronic Design (ISQED)	10.1109/ISQED.2013.6523608	parallel computing;logic synthesis;real-time computing;computer science;operating system;arithmetic logic unit;power	EDA	12.9380056309687	49.29092880048378	188339
cad19ef4decb3c96a8eb4e1ed6515b9f11e23613	correctness proofs of parameterized hardware modules in the cathedral-ii synthesis environment	circuit layout cad;logic cad;program verification;boyer-moore theorem prover;cathedral ii silicon compiler;cathedral-ii synthesis environment;behavioral specification;carry-bypass alu;correctness proofs;functional correctness;layout instances;parameterised hardware module generators;theorem prover	In this paper the correctness of parameterised hardware module generators is examined. These modules are the basic building blocks for the CATHEDRAL II silicon compiler and therefore their correctness is vital. The proof of their functional correctness by means of the Boyer-Moore theorem prover will be discussed. It will be shown that later modifications made to the module generators can be proven correct very easily, starting from the proofs of the original module. The specific module generator that will be discussed is a carry-bypass ALU based on the Mead & Conway ALU. A general scheme will be presented to verify layout instances of these modules with respect to their behavioral specification.	arithmetic logic unit;automated theorem proving;boyer–moore string search algorithm;conway's game of life;correctness (computer science);silicon compiler	Diederik Verkest;Luc J. M. Claesen;Hugo De Man	1990			correctness;routing;computer science;automatic control;automated theorem proving;high-level synthesis;computer network	Logic	10.03576402733937	50.38568047849061	188542
cb945404301da5fc4ca56d4b628d4d63de2864d8	graph-based output phase assignment for pla minimization	minimisation;assignment;graph theory;area requirements output phase assignment pla minimization graph based approach product terms cliques completely connected subgraphs vertices greedy algorithm logic functions benchmark functions;concepcion asistida;assignment problem;minimization;asignacion;computer aided design;red logica programable;graph method;programmable logic arrays logic functions greedy algorithms decoding sufficient conditions graph theory polynomials minimization methods circuits;integrated circuit;etude theorique;logic design;minimisation of switching nets;assignation;phase;optimization method;circuito integrado;minimizacion;metodo grafo;programmable logic arrays;fase;metodo optimizacion;methode graphe;optimization problem;maximum clique;conception logique;programmable logic array;necessary and sufficient condition;polynomial time;estudio teorico;reseau logique programmable;methode optimisation;conception assistee;graph algorithm;greedy algorithm;graph theory programmable logic arrays minimisation of switching nets;theoretical study;concepcion logica;circuit integre	A graph-based approach to finding near-optimal output phase assignments for PLA minimization is presented. A distinctive feature of the approach is that it exploits the necessary and sufficient conditions to reduce the number of product terms needed for PLA implementation and permits the use of existing graph algorithms to solve the PLA output phase optimization problem. The work is based on the transformation of a PLA into a graph whose vertices are the set of conditions required to reduce each product term of the PLA, and whose edges represent the relations between these conditions. Cliques (completely connected subgraphs) in the graph correspond to the output phase assignments required to reduce the product terms represented by the vertices in the cliques. The optimal PLA output phase assignment problem is then formulated as the well-studied problem in graph theory: finding maximum cliques in graphs. Using an existing algorithm for locating cliques in graphs, a modified greedy algorithm is proposed to compute output phase assignments for logic functions in polynomial time. Experimental results using a number of benchmark functions show that the graph-based approach can achieve optimal or near-optimal output phase assignment for PLA minimization and can lead to PLA's with fewer product terms than achieved using existing approaches. >	empirical risk minimization;programmable logic array	Yanbing Xu;Mostafa H. Abd-El-Barr;Carl McCrosky	1995	IEEE Trans. on CAD of Integrated Circuits and Systems	10.1109/43.384425	time complexity;graph power;optimization problem;embedded system;minimisation;mathematical optimization;combinatorics;greedy algorithm;discrete mathematics;logic synthesis;graph bandwidth;null graph;graph labeling;programmable logic array;computer science;graph theory;simplex graph;integrated circuit;computer aided design;cycle graph;assignment;mathematics;voltage graph;assignment problem;phase;intersection number;complement graph;line graph;algorithm;strength of a graph	EDA	16.13204550951077	49.936362055310376	188593
5fa404c4d22316304bb757bda31013e2b24b9dbd	synthesis of clock gating logic through factored form matching	design automation;logic design;boolean functions;trees mathematics boolean functions combinational circuits logic design;clocks;approximation method;trees mathematics;runtime;clock gating;vectors;logic gates;registers;approximation methods;logic gates clocks approximation methods registers design automation runtime vectors;register transfer level;logic gate;boolean division clock gating logic synthesis factored form matching register transfer level automatic synthesis gate level rtl clock gating gating conditions gate level clock gating synthesis combinational logic factoring tree;combinational circuits	Clock gating is typically dictated by designers in register transfer level (RTL). Automatic synthesis of clock gating in gate level has been less explored, but is certainly more convenient to designers; it can also complement RTL clock gating by extracting additional gating conditions. The key problem in gate-level clock gating synthesis is to implement gating conditions with minimum amount of additional logic. In this paper, we aim to utilize the existing combinational logic as much as possible. This is done by extracting a factored form (modeled by a factoring tree) of each gating condition, and try to cover the tree by factoring trees of existing combinational logic; the corresponding process is named factored form matching. Experiments demonstrate that the proposed matching achieves 25% reduction in the number of gates to implement gating conditions; this can be compared to prior method using Boolean division, which achieves 10% reduction.	approximation;clock gating;combinational logic;gate count;integer factorization;level of detail;meltwater entrepreneurial school of technology;register-transfer level;scalability	Inhak Han;Youngsoo Shin	2012	2012 IEEE International Conference on IC Design & Technology	10.1109/ICICDT.2012.6232835	electronic engineering;clock domain crossing;computer science;theoretical computer science;clock gating;algorithm	EDA	16.549869624275882	48.35567845773227	188654
ba66d15db91c39572f35391ff26440bebeba5578	efficient instruction-level optimization methodology for low-power embedded systems	error tolerance confidence limits instruction level optimization methodology low power embedded systems instruction scheduling reordering problem precedence constrained hamiltonian path problem dags traveling salesman problem tsp instruction level optimization algorithm np hard problem minimum spanning tree simulated annealing mechanisms control flow graph pdt scg instruction level low power analysis data dependence graph;directed graphs;traveling salesman problem;optimization methods embedded system processor scheduling energy consumption bars traveling salesman problems power dissipation permission constraint optimization computer aided instruction;hardware software codesign;confidence limit;circuit cad embedded systems directed graphs travelling salesman problems instruction sets computational complexity simulated annealing hardware software codesign power consumption;simulated annealing;embedded system;connected graph;embedded systems;np hard problem;low power;hamiltonian path problem;data dependence;computational complexity;power dissipation;travelling salesman problems;control flow;minimum spanning tree;current dynamics;circuit cad;power consumption;methodology;instruction scheduling;optimal algorithm;dsp processors;instruction sets	In this paper, for low-power embedded systems, we solve the instruction scheduling and reordering problem as a Precedence Constrained Hamiltonian Path Problem for DAGs and the Traveling Salesman Problem (TSP), both of which are NP-Hard [1,2]. We propose an efficient instruction-level optimization algorithm for solving the NP-Hard problem. Minimum spanning tree (MST) and simulated annealing (SA) mechanisms are used for the optimization. We describe the methods for generating the control flow and data dependence graph (CDG), power dissipation table (PDT), and weighted strongly connected graph (SCG) for the instruction-level low-power analysis. In addition, confidence limits with error tolerance are considered for the validation of the optimization. Finally, experimental results that demonstrate the effectiveness and the efficiency of the proposed algorithms are shown.	algorithm;combinatorial optimization;connectivity (graph theory);control flow;data dependency;delay-gradient congestion control;embedded system;error-tolerant design;file spanning;hamiltonian path problem;instruction scheduling;low-power broadcasting;mathematical optimization;minimum spanning tree;np-hardness;php development tools;scheduling (computing);simulated annealing;strongly connected component;travelling salesman problem	Kyu-won Choi;Abhijit Chatterjee	2001		10.1145/500001.500035	optimization problem;mathematical optimization;computer science;theoretical computer science;distributed computing;3-opt;bottleneck traveling salesman problem	EDA	14.940423099130992	49.2299370609458	188836
18a607d4bf62f6146d5d09742879c4244a555f5c	an ilp formulation for reliability-oriented high-level synthesis	integer linear programming;circuit faults;multipliers;reliability oriented high level synthesis;ilp formulation;design quality;embedded system;neutrons;high level synthesis;integrated circuit design;multipliers ilp formulation vlsi reliability oriented high level synthesis design quality integer linear programming soft error problem adders;integer programming;system design;adders;soft error problem;linear programming;vlsi;high level synthesis combinational circuits integer linear programming circuit faults single event upset neutrons embedded system computer errors hardware adders;single event upset;integrated circuit reliability;soft error;vlsi integrated circuit reliability integrated circuit design high level synthesis integer programming linear programming adders;computer errors;integer linear program;hardware;combinational circuits	Reliability decisions taken early in system design can bring significant benefits in terms of design quality. This paper presents a 0-1 integer linear programming (ILP) formulation for reliability-oriented high-level synthesis that addresses the soft error problem. The proposed approach tries to maximize reliability of the design while observing the bounds on area and performance, and makes use of our reliability characterization of hardware components such as adders and multipliers. We implemented the proposed approach, performed experiments with several example designs, and compared the results with those obtained by a prior proposal. Our results show that incorporating reliability as a first-class metric during high-level synthesis brings significant improvements on the overall design reliability.	experiment;high- and low-level;high-level synthesis;integer programming;linear programming;soft error;systems design	Suleyman Tosun;Ozcan Ozturk;Nazanin Mansouri;Ercument Arvas;Mahmut T. Kandemir;Yuan Xie;Wei-Lun Hung	2005	Sixth international symposium on quality electronic design (isqed'05)	10.1109/ISQED.2005.15	mathematical optimization;electronic engineering;real-time computing;integer programming;soft error;computer science;theoretical computer science;very-large-scale integration;combinational logic;high-level synthesis;neutron;adder;integrated circuit design;systems design	EDA	13.477515023066342	52.0895933155644	189368
4d2e1ecb874d047c048c63e45b2796f1a7b507ec	synthesis and placement flow for gain-based programmable regular fabrics	block design;gain;programmable;regular fabric	In this paper we present the Gain-based Logic Block Array (GLA), a new via-programmable regular fabric. GLA is an array of Gain-based Logic Blocks (GLBs). The GLB is a semi-universal logic block designed based on logical effort theory[12]. Customization of the GLBs is provided by programmable vias. To achieve the best performance, appropriate fabric has to be selected from a family of GLAs with different performance-area trade-offs. We describe a synthesis and placement flow which, for a given design to be implemented, allows us to select the best GLA from the candidate family.	field-programmable gate array;logic block;logic gate;logic synthesis;logical effort;routing;semiconductor industry;via (electronics)	Bo Hu;Hailin Jiang;Qinghua Liu;Malgorzata Marek-Sadowska	2003		10.1145/640000.640041	block design;gain;programmable logic array;mathematics;physics;algorithm	EDA	12.560147142926759	51.77132343555825	189429
249f4d1b880fa10655babb5f2cd2c78e87662b63	a new formulation of yield enhancement problems for reconfigurable chips	complexity yield enhancement reconfigurable chips covering problem redundant elements defective elements;graph theory;generic model;vlsi computational complexity graph theory integrated circuit technology redundancy;chip;computer science production fabrication heuristic algorithms;redundancy;integrated circuit technology;computational complexity;vlsi;covering problem	The covering problem assigns redundant elements to replace defective elements so that the chip will function properly. A general model that can be used to represent the relationship between redundant elements and defective elements in a uniform way is presented. This model subsumes many of the models discussed in previous approaches. A complete characterization of the complexity of the covering problems in all the subcases of the model, most of which have not been studied before, is given. It is hoped that the formulation will also lead to new ways of designing reconfigurable chips. >		Nany Hasan;Jason Cong;C. L. Liu	1988		10.1109/ICCAD.1988.122562	chip;electronic engineering;telecommunications;computer science;graph theory;theoretical computer science;very-large-scale integration;redundancy;computational complexity theory;algorithm	EDA	16.160200964486375	49.62291992982707	190175
9c77db36453a45f6de09e30a97cfb86458c24512	fpga as a tool for implementing non-fixed structure fuzzy logic controllers	field programmable gate array;vhdl language;open architecture design;integrated circuit;weighted averaging;fuzzy control;hardware description languages;logic cad control engineering computing controllers field programmable gate arrays fuzzy control hardware description languages;fuzzy logic controller;fpga;programmable logic arrays;design space;reliability theory;chip;fuzzy logic;hardware design description;open architecture;computer architecture;engines;field programmable gate arrays fuzzy logic hardware costs table lookup computer architecture programmable logic arrays engines algorithm design and analysis reliability theory;controllers;nonfixed structures design;fuzzy inference;membership function;hardware design;hardware design description fpga nonfixed structure fuzzy logic controllers open architecture design nonfixed structures design fuzzy inference engine vhdl language;fuzzy inference engine;control engineering computing;field programmable gate arrays;nonfixed structure fuzzy logic controllers;table lookup;logic cad;processing speed;high speed;structural design;algorithm design and analysis;hardware	This paper presents an open architecture design to implement fuzzy logic controllers (FLC) on a field programmable gate array (FPGA) integrated circuit. This non-fixed structures design is capable of fuzzy inference engine (FIE) parameters on-line user specification, achieves a design space that includes Mamdani FIE, max-min rule evaluation, and weighted average defuzzification method, with user defined membership function (MF) type and number, MF parameters, antecedent and consequent rule construction, and output variable MFs; achieving it within a single chip, high speed, low cost, small footprint FPGA. VHDL language is use for hardware design description of a tested 8-bit resolution FLC; portability and scalability is possible with minor modifications. Algorithms, timing diagrams and hardware resources required are presented; truncation related errors and processing speed achieved is reported	8-bit;algorithm;clock signal;dataflow;defuzzification;diagram;digital electronics;field-programmable gate array;fuzzy control system;fuzzy logic;inference engine;integrated circuit;least significant bit;like button;logical connective;maxima and minima;membership function (mathematics);microcontroller;microprocessor;online and offline;open architecture;peripheral;scalability;software portability;theory;throughput;truncation;vhdl	José Luis González;Oscar Castillo;Luis T. Aguilar	2007	2007 IEEE Symposium on Foundations of Computational Intelligence	10.1109/FOCI.2007.371522	computer science;artificial intelligence;theoretical computer science;fuzzy control system;field-programmable gate array	Arch	10.580103671541794	47.18731063861108	191056
74cb6fb9c5a8f452a4bfb69a71a4daa39fc8b80d	efficient final placement based on nets-as-points	design engineering;simulated annealing;design optimization;iterative methods;circuit simulation;permission;application specific integrated circuits;virtual channel;circuit simulation simulated annealing central processing unit iterative methods permission design engineering design optimization integrated circuit modeling application specific integrated circuits circuit synthesis;integrated circuit modeling;steiner tree;circuit synthesis;central processing unit	Deterministic optimization programs are coming to be considered as viable alternatives for the placement of very large sea-of-gate, gate array and standard cell designs. A nets-as-points placement program has been described which provides competitive results in comparison with non-deterministic placement, and at a fraction of the run time. A new pseudo Steiner tree model for the gate placement about the netpoints, along with a virtual channel snap-to-grid procedure, provides results superior to the original nets-as-points placement program without requiring iterative improvement.	gate array;iterative method;mathematical optimization;run time (program lifecycle phase);standard cell;steiner tree problem;virtual channel	Xueqing Zhang;Lawrence T. Pileggi;Ronald A. Rohrer	1989	26th ACM/IEEE Design Automation Conference	10.1145/74382.74479	physical design;floorplan;mathematical optimization;electronic engineering;real-time computing;multidisciplinary design optimization;simulated annealing;steiner tree problem;computer science;central processing unit;circuit design;iterative method;application-specific integrated circuit;circuit extraction;routing;placement;computer engineering	EDA	14.593140114781447	50.8298887779471	191826
24540e4dca6560404ec96124b234ca927b3393fb	technology mapping for soi domino logic incorporating solutions for the parasitic bipolar effect	silicon;transistor reordering;circuito combinatorio;cmos domino logic;evaluation performance;synthese circuit;design automation;puerta logica;cmos technology;bipolar transistor circuits;combinational logic circuits;canal p;performance evaluation;logic design;implementation;evaluacion prestacion;logique combinatoire;technology mapping algorithm;circuit design;silicon on insulator;logic circuits;elemental semiconductors;circuito logico;silicon on insulator technology logic devices logic circuits cmos technology logic gates lead integrated circuit technology costs algorithm design and analysis bipolar transistor circuits;indexing terms;si soi domino logic incorporating solutions parasitic bipolar effects technology mapping algorithm random logic gate network silicon on insulator soi devices transistor reordering mos discharge transistors cmos domino logic;carta de datos;algorithme;porte logique;soi devices;combinatory circuit;algorithm;miniaturisation;combinatory logic;p channel;general solution;conception logique;logica combinatoria;logic gates;elemental semiconductors silicon on insulator mosfet cmos digital integrated circuits semiconductor device models silicon;soi domino logic incorporating solutions;cmos digital integrated circuits;circuit logique;integrated circuit technology;lead;mappage;cmos logic circuits;semiconductor device models;circuit combinatoire;mos transistor;sintesis circuito;algorithms;circuit logique cmos;cout production;mosfet;mapping;miniaturization;silicon on insulator technology;technologie silicium sur isolant;si;mos discharge transistors;miniaturizacion;production cost;technology mapping;circuit integre numerique cmos;implementacion;random logic gate network;concepcion logica;logic circuit;logic gate;parasitic bipolar effects;algorithm design and analysis;transistor mos;circuit synthesis;logic devices;coste produccion;tecnologia silicio sobre aislante;algoritmo	We present a technology mapping algorithm for implementing a random logic gate network in domino logic. The target technology of implementation is silicon-on-insulator (SOI). SOI devices exhibit an effect known as parasitic bipolar effect (PBE), which can lead to incorrect logic values in the circuit. Our algorithm solves the technology mapping problem by permitting several transformations during the mapping process in order to avoid PBE, such as transistor reordering, altering the way that transistors are organized into gates, and adding pMOS discharge transistors. We minimize the total cost of implementation, which includes discharge transistors required for correct functioning. Our algorithm generates solutions that reduce the number of discharge transistors required by 53% and reduces the size of the final solution by 6.3% on average. We compare our results with a modification of a current technology mapping algorithm for bulk CMOS domino logic that reduces the cost of the final solution and find that our algorithm outperforms this method.	domino logic;silicon on insulator	Shrirang K. Karandikar;Sachin S. Sapatnekar	2003	IEEE Trans. VLSI Syst.	10.1109/TVLSI.2003.817137	embedded system;electronic engineering;electronic design automation;logic gate;logic family;computer science;engineering;electrical engineering;pass transistor logic;pmos logic	EDA	16.728798826794225	50.41634143682586	192323
2a1509d5053279ece406da0134ab737c152752d4	optimization of microprogram control unit with code sharing	optimisation;macrocell networks;integrated circuit;bismuth;bismuth encoding logic circuits macrocell networks prom hardware integrated circuit modeling;logic circuits;programmable logic arrays;programmable logic arrays cellular arrays integrated logic circuits microprogramming optimisation;operational linear chain microprogram control unit code sharing hardware reduction pal based cpld chip fan in pal macrocell;cellular arrays;chip;integrated circuit modeling;integrated logic circuits;microprogramming;prom;encoding;hardware	The method of hardware reduction is proposed which is oriented on compositional microprogram control units with code sharing and PAL-based CPLD chips. The method is based on a wide fan-in of PAL macrocells allowing using more than one source for codes of operational linear chains. An example of the proposed method application is given.	code;complex programmable logic device;control unit;fan-in;microcode;pal	Alexander Barkalov;Larysa Titarenko;Lukasz Smolinski	2011	2011 9th East-West Design & Test Symposium (EWDTS)	10.1109/EWDTS.2011.6116573	computer architecture;electronic engineering;real-time computing;computer science	Embedded	10.08108850165837	50.19885513117418	192937
19d26818afb2f05ec25237aa3297d5b41dc0831a	a study of composition schemes for mixed apply/compose based construction of robdds	top down method;graph theory;bottom up method;time memory tradeoff;mixed apply compose based construction;bottom up;decomposition;network synthesis;composition;boolean functions;top down;network synthesis graph theory circuit cad;reduced ordered binary decision diagram;data structures boolean functions circuits heuristic algorithms benchmark testing matrix decomposition laboratories binary decision diagrams costs;binary decision diagrams;matrix decomposition;data structures;heuristic algorithms;decomposition composition mixed apply compose based construction robdd reduced ordered binary decision diagram circuit cad bottom up method top down method heuristic algorithm time memory tradeoff;robdd;circuits;circuit cad;benchmark testing;heuristic algorithm	Reduced Ordered Binary Decision Diagrams (ROBDDs) have traditionally been built in a bottom-up fashion. In this scheme, the intermediate peak memory utilization is often larger than the final ROBDD size, limiting the complexity of the circuits which can be processed using ROBDDS. Recently we showed that for a large number of applications, the peak memory requirement can be substantially reduced by a suitable combination of bottom up (decomposition based) and top down (composition based) approaches of building ROBDDs. In this paper, we focus on the composition process. We detail four heuristic algorithms for finding good composition orders, and compare their utility on a set of standard benchmark circuits. Our schemes offer a matrix of time-memory tradeoff points.		Amit Narayan;Sunil P. Khatri;Jawahar Jain;Masahiro Fujita;Robert K. Brayton;Alberto L. Sangiovanni-Vincentelli	1996		10.1109/ICVD.1996.489494	combinatorics;electronic engineering;computer science;graph theory;theoretical computer science;top-down and bottom-up design;mathematics;algorithm	EDA	15.941745685555453	48.94477117843537	193926
fda01c944866b27d28f6838032e219cccb3f9efa	a new algorithm for cmos gate matrix layout	cmos integrated circuits;efficient algorithm;mos devices circuits minimization very large scale integration;optimal result nmos pmos duality cmos gate matrix layout algorithms;cmos integrated circuits circuit layout cad;circuit layout cad	Efficient algorithms for CMOS gate matrix layouts which have fully utilized the duality between NMOS and PMOS are presented. Improper assumptions made by previous authors are pointed out. Problems which have prevented previous algorithms from reaching a real optimal result are discussed and solved. Significant improvements are achieved over previous algorithms. >	algorithm;cmos	C. Y. Roger Chen;Cliff Yungchin Hou	1988		10.1109/ICCAD.1988.122480	embedded system;electronic engineering;real-time computing;computer science;theoretical computer science;cmos	EDA	16.17859567915626	52.22661205198492	194707
4d49ce2fef60cb35eb81a8e0642280644ef9b65b	solving the minimum-cost satisfiability problem using sat based branch-and-bound search	boolean constraint propagation;tree searching;sat problem;mincostsat;mincostsat problem;branch-and-bound solvers;branch-and-bound search;automatic test pattern generation;minimum test pattern generation;efficient solvers;boolean satisfiability;computability;ai planning;minimum-cost satisfiability problem;constraint handling;sat based branch-and-bound search;general sat problem;branch-and-bound;electronic design automation;optimization;branch and bound;satisfiability;graph coloring;artificial intelligent	Boolean satisfiability (SAT) has seen many successful applications in various fields, such as electronic design automation (EDA) and artificial intelligence (AI). However, in some cases it may be required/preferable to use variations of the general SAT problem. In this paper we consider one important variation, the minimum-cost satisfiability problem (MinCostSAT). MinCostSAT is a SAT problem which minimizes the cost of the satisfying assignment. MinCostSAT has various applications, e.g. automatic test pattern generation (ATPG), FPGA routing, AI planning, etc. This problem has been tackled before - first by covering algorithms, e.g. scherzo (Coudert, 1996), and more recently by SAT based algorithms, e.g. bsolo (Manquinho and Marques-Silva, 2002). However the SAT algorithms they are based on are not the current generation of highly efficient solvers. The solvers in this generation, e.g. Chaff (Moskewicz et al., 2001), MiniSat (Een and Sorensson, 2006) etc., incorporate several new advances, e.g. two literal watching based Boolean Constraint Propagation, that have delivered order of magnitude speedups. We first point out the challenges in using this class of solvers for the MinCostSAT problem and then present techniques to overcome these challenges. The resulting solver MinCostChaff shows order of magnitude improvement over several current best known branch-and-bound solvers for a large class of problems, ranging from minimum test pattern generation, bounded model checking in EDA to graph coloring and planning in AI	boolean satisfiability problem;branch and bound	Zhaohui Fu;Sharad Malik	2006		10.1109/ICCAD.2006.320089	mathematical optimization;discrete mathematics;electronic design automation;#sat;computer science;theoretical computer science;graph coloring;mathematics;computability;boolean satisfiability problem;branch and bound;algorithm;satisfiability	EDA	17.18369700114208	47.45777543562925	195005
044de2cb92de21ac72ecaa0e89cfb83d4abda18b	efficient set sharing using zbdds	informatica;telecomunicaciones;efficient implementation;transfer function;binary decision diagram	Set sharing is an abstract domain in which each concrete object is represented by the set of local variables from which it might be reachable. It is a useful abstraction to detect parallelism opportunities, since it contains definite information about which variables do not share in memory, i.e., about when the memory regions reachable from those variables are disjoint. Set sharing is a more precise alternative to pair sharing, in which each domain element is a set of all pairs of local variables from which a common object may be reachable. However, the exponential complexity of some set sharing operations has limited its wider application. This work introduces an efficient implementation of the set sharing domain using Zero-supressed Binary Decision Diagrams (ZBDDs). Because ZBDDs were designed to represent sets of combinations (i.e., sets of sets), they naturally represent elements of the set sharing domain. We show how to synthesize the operations needed in the set sharing transfer functions from basic ZBDD operations. For some of the operations, we devise custom ZBDD algorithms that perform better in practice. We also compare our implementation of the abstract domain with an efficient, compact, bitset-based alternative, and show that the ZBDD version scales better in terms of both memory usage and running time.	algorithm;binary decision diagram;bit array;local variable;parallel computing;time complexity;zero-suppressed decision diagram	Mario Méndez-Lojo;Ondrej Lhoták;Manuel V. Hermenegildo	2008		10.1007/978-3-540-89740-8_4	parallel computing;computer science;theoretical computer science;distributed computing;transfer function;binary decision diagram	Logic	17.05658423905218	46.47134635054073	195251
8b7866b4383ac21830fef09285c8fa786fab0f55	the design of a sram-based field-programmable gate array-part ii: circuit design and layout	programmable circuit;field programmable gate array;logic arrays;optimisation;concepcion circuito;arquitectura circuito;static random access memory;optimizacion;integrated circuit;circuit programmable;logic design;routing;sram chips field programmable gate arrays circuit layout logic design;implementation;layout problem;circuit design;circuit layout;sram programmable;probleme agencement;circuit architecture;logic circuits;circuito integrado;physical design;circuito logico;fpga;indexing terms;red puerta programable;reseau porte programmable;ejecucion;circuito programable;digital system;minitile;circuit logique;macro tile;senal numerica;digital systems;fpga architecture;architecture circuit;signal numerique;logic block architecture;problema disposicion;routing architecture;sram;optimization;conception circuit;fpga circuit design;tiles;digital signal;field programmable gate arrays circuit synthesis routing logic design table lookup logic devices logic circuits tiles logic arrays switches;field programmable gate arrays;switches;table lookup;logic circuit;minitile sram field programmable gate array circuit design circuit layout digital system macro tile logic block architecture routing architecture;high level architecture;static storage;memoria estatica;circuit synthesis;circuit integre;logic devices;memoire statique;sram chips	101 The Design of an SRAM-Based Field-Programmable Gate Array, Part II: Circuit Design and Layout Paul Chow, Soon Ong Seo, Jonathan Rose, Kevin Chung, Gerard P aez-Monz on and Immanuel Rahardja Abstract|Field-Programmable Gate Arrays (FPGAs) are now widely used for the implementation of digital systems and many commercial architectures are available. Although the literature and data books contain detailed descriptions of these architectures, there is very little information on how the high-level architecture was chosen and no information on the circuit-level or physical design of the devices. In Part I, we described the high-level architectural design of an SRAM-programmable FPGA. This paper, Part II, will address the circuit design issues through to the physical layout. We consider area-speed trade-o s in the design of the logic block circuits and in the connections between the logic and the routing structure. All commercial FPGA designs are done using full-custom hand layout to obtain absolute minimum die sizes. This is both labor and time-intensive. We propose a design style with a mini-tile that contains a portion of all the components in the logic tile, resulting in less full-custom e ort. The mini-tile is replicated in a 4 4 array to create a macro tile. The mini-tile is optimized for layout density and speed, and is customized in the array by adding appropriate vias. This technique also permits easily changing the hard-wired connections in the logic block architecture, and the segmentation length distribution in the routing architecture. Keywords| eld-programmable gate arrays, FPGA, FPGA architecture, SRAM programmable, FPGA circuit design	book;circuit design;digital electronics;field-programmable gate array;full custom;high- and low-level;high-level architecture;integrated circuit layout;logic block;open road tolling;physical design (electronics);routing;search engine optimization;static random-access memory;via (electronics)	P. Chow;Soon Ong Seo;Jonathan Rose;K. Chung;G. Paez-Monzon;I. Rahardja	1999	IEEE Trans. VLSI Syst.	10.1109/92.784093	physical design;embedded system;computer architecture;electronic engineering;programmable logic array;computer science;design layout record;field-programmable gate array	EDA	13.253312324846668	50.7047429168485	196210
95973660e0e5e0329517c43ddbb4ca20d7b14579	integrated parametric timing optimization of digital systems	mixed integer linear program;network parameters;cycle time;clocks;sequential circuits;flip flops;system performance;optimization problem;timing digital systems clocks flip flops design optimization system performance circuits very large scale integration delay logic;integer programming;mixed integer linear program integrated parametric timing optimization digital systems clock skew optimization scheduled skews flip flops linear programming global time frame system cycle time retiming optimization process concurrent timing optimization;timing optimization;digital systems;linear programming;linear program;circuit optimisation;theoretical foundation;logic cad;clock skew;logic cad network parameters timing circuit optimisation linear programming clocks flip flops sequential circuits integer programming;flip flop;timing	Many design techniques have been proposed to optimize the performance of a digital system implemented in a given technology. These techniques include retiming, insertion of intentional clock skew, insertion of buuers, transistor sizing, resynthesizing, and wave pipelining. Each of these techniques can be advantageous in particular applications, and they are often applied individually to enhance performance. In this paper, a mixed integer linear programming formulation is derived in which the performance of edge-triggered design is optimized by simultaneously adjusting clock skew, retiming the circuit, and applying wave pipelining methods. This formulation is applicable to a broad range of digital circuits. We have applied our formulation to the design examples of a RISC microprocessor, a multiplier, and a correlator. In doing so, we were able to reduce the system clock period several fold in each design. A beneet of this approach to timing optimization is that unintentional clock skew tolerance is a by-product of the computation and the resulting designs often exhibit improved margins against it relative to other non-optimal digital circuits.	clock rate;clock skew;computation;cross-correlation;digital electronics;integer programming;linear programming formulation;mathematical optimization;microprocessor;pipeline (computing);retiming;transistor	Hong-Yean Hsieh;Wentai Liu;Ralph K. Cavin	2000	IEEE Trans. on CAD of Integrated Circuits and Systems	10.1109/43.838997	optimization problem;mathematical optimization;electronic engineering;parallel computing;real-time computing;clock skew;cycle time variation;computer science;linear programming;mathematics;sequential logic;timing failure;static timing analysis	EDA	17.071406954511275	52.84769583295804	196727
0bcd811e632ceee463443d4486b6a3525387d031	an enhanced multiway sorting network based on n-sorters	sorting;wires;merging multiway sorting;logic gates;signal processing;threshold logic merging sorting;merging;signal processing algorithms;switches;sorting logic gates merging signal processing algorithms wires signal processing switches;gates asymptotic number enhanced multiway sorting network n sorters multiway merging algorithm threshold logic ss mk	Merging-based sorting networks are an important family of sorting networks. Most merge sorting networks are based on 2-way or multi-way merging algorithms using 2-sorters as basic building blocks. An alternative is to use n-sorters, instead of 2-sorters, as the basic building blocks so as to greatly reduce the number of gates as well as the latency. Based on a modified Leighton's columnsort algorithm, an n-way merging algorithm, referred to as SS-Mk, that uses n-sorters as basic building blocks was proposed. In this work, we first propose a new multiway merging algorithm with n-sorters as basic building blocks that merges n sorted lists of m values each in 1 + ⌈m/2⌉ stages (n ≤ m). Based on our merging algorithm, we also propose a multiway sorting algorithm. We also show an application of our sorting algorithm with sorters implemented in threshold logic. Though both our algorithm and the SS-Mk require the same asymptotic number of gates, O(N log2 N), to sort N inputs, our algorithm requires fewer gates than the SS-Mk for wide ranges of N.	binary logarithm;sorting algorithm;sorting network;stellar classification;symmetric multiprocessing	Feng Shi;Zhiyuan Yan;Meghanad D. Wagh	2014	2014 IEEE Global Conference on Signal and Information Processing (GlobalSIP)	10.1109/GlobalSIP.2014.7032078	parallel computing;logic gate;network switch;sorting network;computer science;sorting;theoretical computer science;external sorting;signal processing;algorithm	Theory	15.601466475291662	48.01029291340568	196840
c4110b3565823c8402025e1ec021122439c402e0	analog layout synthesis - recent advances in topological approaches		This paper gives an overview of some recent advances in topological approaches to analog layout synthesis and in layout-aware analog sizing. The core issue in these approaches is the modeling of layout constraints for an efficient exploration process. This includes fast checking of constraint compliance, reducing the search space, and quickly relating topological encodings to placements. Sequence-pairs, B*-trees, circuit hierarchy and layout templates are described as advantageous means to tackle these tasks.		Helmut E. Graeb;Florin Balasa;R. Castro-López;Yu-Wei Chang;Francisco V. Fernández;Mark Po-Hung Lin;Martin Strasser	2009			theoretical computer science;computer science	EDA	13.353334233777804	51.502238173716236	196922
43a9b12b4af26be6fb700995a64ecaa4a366c83d	generalized buffering of ptl logic stages using boolean division	pass transistor logic circuit;ptl blocks;logic design;boolean functions;ptl blocks pass transistor logic circuit digital circuits reduced ordered binary decision diagrams circuit delay boolean division;logic design binary decision diagrams boolean functions buffer circuits logic circuits;logic circuits;reduced ordered binary decision diagram;buffer circuits;reduced ordered binary decision diagrams;binary decision diagrams;pass transistor logic;boolean division;circuit delay;boolean functions data structures logic devices mosfets logic circuits voltage libraries delay design methodology circuit synthesis;digital circuits	Pass transistor logic (PTL) is a well known approach for implementing digital circuits. In order to handle larger designs, and also to ensure that the total number of series devices in the resulting circuit is bounded, partitioned reduced ordered binary decision diagrams (ROBDDs) can be used to generate the PTL circuit. The output signals of each partitioned block typically needs to be buffered. In this paper, we present a methodology to perform generalized buffering of the outputs of PTL blocks. By performing the Boolean division of each PTL block using different gates in a library, we select the gate that results in the largest reduction in the height of the PTL block. In this manner, these gates serve the function of buffering the outputs of the PTL blocks, while also reducing the height and delay of the PTL block. Over a number of examples, we demonstrate that our approach results in a 26% reduction in circuit delay and number of MUXes required, with a modest improvement in circuit area, compared to a traditional buffered PTL implementation of the circuit	binary decision diagram;digital electronics;pass transistor logic	Rajesh Garg;Sunil P. Khatri	2006	2006 IEEE International Symposium on Circuits and Systems	10.1109/ISCAS.2006.1693908	electronic engineering;logic synthesis;logic gate;computer science;engineering;electrical engineering;theoretical computer science;pass transistor logic;mathematics;boolean function;digital electronics;algorithm	EDA	16.697785705368812	48.37671414990624	197020
5633b96c31a4e26ace78ba75f8cf8ea2b705e1c2	high-level synthesis under multi-cycle interconnect delay	low power system design;critical path length;cycle time;distributed target architecture;high level synthesis clocks delay effects scheduling algorithm computer architecture delay systems logic geometry noise generators inductance;intellectual property;clocks;logic;geometry;system latency;clock cycle time;delay effects;system level modeling;noise generators;system on a chip;binding algorithm;concurrent algorithm;computer architecture;high level synthesis;digital ic design;scheduling algorithm;critical path;integrated circuit interconnections;multi cycle interconnect delay;deep submicron process technology;delays integrated circuit interconnections high level synthesis;cores;inductance;delay systems;functional unit;parameterized architectures;delays;digital ic design high level synthesis multi cycle interconnect delay deep submicron process technology clock cycle time concurrent algorithm distributed target architecture critical path length system latency scheduling algorithm binding algorithm	As process technology goes into deep submicron range, interconnect delay becomes dominant among overall system delay, occupying most of the system clock cycle time. Interconnect delay is now a crucial factor that needs to be considered even during high-level synthesis. In this paper, we propose a concurrent scheduling and binding algorithm that takes interconnect delay into account. We first define our distributed target architecture, which minimizes the effect of interconnect delay on clock cycle time. We no longer assume that interconnect delay between functional units is a part of one clock cycle. Interconnect delay can span over multiple clock cycles. We incorporate the concept of multi-cycle interconnect delay into scheduling and binding process, to reduce the critical path length and therefore the system latency. We show that by introducing interconnect delay, we can obtain latency improvement of up to 54 % and of 37% on the average.	algorithm;analysis of parallel algorithms;clock signal;high- and low-level;high-level synthesis;name binding;scheduling (computing);very-large-scale integration	Jinhwan Jeon;Daehong Kim;Dongwan Shin;Kiyoung Choi	2001		10.1145/370155.370576	system on a chip;embedded system;electronic engineering;real-time computing;inductance;computer science;elmore delay;operating system;interconnect bottleneck;logic;network delay;intellectual property	EDA	17.245050423348065	52.08993814091769	197300
3765beb67ef49fe38725bbd77a6b2b841861398d	multiple constrained folding of programmable logic arrays: theory and applications	silicon;graph theory;circuits and systems;computer program;logic arrays;constraint optimization;integrated circuit;programmable logic circuit;circuit logique programmable;logic design;building block;microprogrammation;very large scale integration;logic circuits;very large scale integrated;programmable logic arrays;network analysis;general methods;programmable logic array;programmable logic arrays constraint theory logic arrays logic circuits very large scale integration silicon logic design circuits and systems constraint optimization equations;constraint theory;microprogramming;constrained optimization problem	Programmable logic arrays are important building blocks of VLSI circuits and systems. We address the problem of optimizing the silicon area and the performances of large logic arrays. In particular, we describe a general method for compacting a logic array defined as multiple row and column folding and we address the problem of interconnecting a PLA to the outside circuitry. We define a constrained optimization problem to achieve minimal silicon area occupation with constrained positions of electrical inputs and outputs. We present a new computer program, PLEASURE, which implements several algorithms for multiple and/or constrained PLA folding.	algorithm;computer program;constrained optimization;constraint (mathematics);electronic circuit;mathematical optimization;optimization problem;performance;programmable logic array;programmable logic device;very-large-scale integration	Giovanni De Micheli;Alberto L. Sangiovanni-Vincentelli	1983	IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems	10.1109/TCAD.1983.1270033	embedded system;electronic engineering;logic synthesis;logic optimization;logic gate;logic family;network analysis;programmable logic array;computer science;graph theory;theoretical computer science;integrated circuit;microcode;very-large-scale integration;silicon;simple programmable logic device;algorithm	EDA	15.823988314189535	49.48385476120455	198102
107c2c1f87ca1e21e004d83ac564a9c6970680eb	partitioning using second-order information and stochastic-gain functions	second order;clusters;concepcion asistida;algorithme partitionnement;computer aided design;vlsi second order information stochastic gain functions probability based partitioning algorithm prop spatially local information removal probabilities adjacent nets gain computation nonlocal structures uniform weights gain functions variable net weights dynamically assigned variable net weights acm sigda benchmark suite computational complexity var prop mincut improvements ispd98 benchmark circuits multilevel partitioners;integrated circuit;integrated circuit layout;payoff function;complexite calcul;gain aleatoire;circuit vlsi;partitioning;orden 2;probabilistic gain;circuito integrado;indexing terms;experimental result;iterative methods;complejidad computacion;fonction gain;vlsi circuit;local structure;first order;stochastic processes;computational complexity;second order circuit structures;prop;resultado experimental;vlsi;conception assistee;iterative improvement;partitioning algorithm;circuit layout cad;partitioning algorithms iterative algorithms very large scale integration circuit testing gain stochastic processes computational complexity large scale integration application software optimization methods;spatial locality;ordre 2;circuito vlsi;resultat experimental;logic partitioning;flat partitioners;probabilistic gains;stochastic processes vlsi integrated circuit layout circuit layout cad logic partitioning iterative methods computational complexity;circuit integre;funcion ganancia;information structurale	A probability-based partitioning algorithm, PROP, was introduced in [5] that achieved large improvements over traditional “deterministic” iterative-improvement techniques like FM [7] and LA [10]. While PROP's gain function has a greater futuristic component than FM or LA, it incorporates spatially local information—only information on the removal probabilities of adjacent nets of a cell is used in its gain computation. This prevents a higher-level view of non-local structures. Also, giving uniform weights to all nets, results in an inability to differentiate between the futuristic benefit of removing one net from another. In this paper, we present a more sophisticated partitioner DEEP-PROP that incorporates more non-local (second-order) structural information than PROP. The second-order information is incorporated into cell gains as well as variable net weights—the latter helps to focus future cell moves in a cluster around the currently moved cell and thus better utilizes the information that led to its selection. A lower-complexity version, VAR-PROP, that also uses dynamically assigned variable net weights, but based on first-order information, has also been developed. Both versions yield significant improvements over PROP on the ACM/SIGDA benchmark suite. DEEP-PROP yields mincut improvements of as much as 39% for large circuits and an average improvement of 20% over all circuits; it is about 3.8 times slower than PROP, which is very fast. VAR-PROP, which has a much lower computational complexity than DEEP-PROP, yields maximum and average mincut improvements over PROP of 27% and 12%, respectively, while being only about 1.14 times slower.	algorithm;benchmark (computing);computation;computational complexity theory;fm broadcasting;first-order predicate;iterative method;max-flow min-cut theorem;minimum cut	Shantanu Dutt;Halim Theny	1998		10.1145/274535.274551	stochastic process;embedded system;mathematical optimization;electronic engineering;index term;computer science;electrical engineering;theoretical computer science;integrated circuit;computer aided design;first-order logic;mathematics;iterative method;integrated circuit layout;very-large-scale integration;computational complexity theory;second-order logic;algorithm;statistics	ML	16.052017322323813	51.16376004870366	198795
e6e6aff959e04e2a872b40f3844efe1f99ed483b	error-resilient sequential cells with successive time borrowing for stochastic computing	stochastic computing error resilient circuit sequential cell time borrowing;timing circuits application specific integrated circuits digital signal processing chips integrated circuit design scaling circuits;sequential cell;stochastic computing;worst case operation condition stochastic computing error resilient sequential cells successive time borrowing time borrowing capability timing errors pvt variations overvoltage scaling circuit structure asic microprocessors current cell based ic design flow feedforward datapath feedback datapath dsp building blocks dsp modules;time borrowing;proceedings paper;timing clocks registers pipelines latches digital signal processing logic gates;error resilient circuit	This paper presents error-resilient sequential building blocks with time-borrowing capability without extra latches and generated clocks. The circuits are able to recover the timing errors caused by PVT variations and/or over-voltage scaling by up to half a cycle. Unlike prior works, the timing errors can be recovered dynamically through successive time borrowing without stalled cycles, retaining a constant throughput. The circuit structure can be applied to both ASICs and microprocessors. The proposed sequential cells are highly compatible with current cell-based IC design flow, for both feedforward and feedback datapaths. As a proof of concept, a design with key DSP building blocks has been verified. The results show that the performance of the DSP modules is improved by 13-15% in the worst-case operation condition, yielding a promising solution for stochastic computing under an unreliable operation condition.	application-specific integrated circuit;best, worst and average case;digital signal processor;dynamic voltage scaling;feedforward neural network;image scaling;integrated circuit design;microprocessor;standard cell;stochastic computing;throughput	Wei-Chang Liu;Ching-Da Chan;Shuo-An Huang;Chi-Wei Lo;Chia-Hsiang Yang;Shyh-Jye Jou	2016	2016 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP)	10.1109/ICASSP.2016.7472938	parallel computing;real-time computing;computer science	EDA	13.899841581263798	48.136241489751235	198842
