id	title	keywords	abstract	entities	authors	year	journal	doi	fos	area	x	y	ix
434ed300af1204132c8161330adfc7f25afb7490	"""towards a """"humans-first"""" computer science curriculum"""	hci education;human computer interaction;information technology;hci;computer science curriculum;computer science education;humans first;scenarios;claims	"""Traditionally, computer science education has considered """"objects-first"""" or """"imperative-first"""" approaches, with the focus of the course on teaching design of programs starting with data objects or imperative program flow, respectively. Yet with the number of computer science majors dwindling, and with the percentages of women and minorities on the decrease, it is time to consider a new approach that will encourage a larger and more diverse population to the computer science undergraduate major. In our work, we propose a """"humans-first"""" approach, where core principles of human-computer interaction (HCI) are integrated in the computer science and information technology curricula---from the earliest stages of each curriculum through graduation---to provide a coherent, connected experience for students."""	coherence (physics);computer science;control flow;humans;human–computer interaction;imperative programming	D. Scott McCrickard;Charles J. Fowler;Christa M. Chewar	2005		10.1145/1167350.1167451	mathematics education;human–computer interaction;science education;computer science;philosophy of computer science;information and computer science	Logic	-80.7502340451356	-35.32491283490818	58412
2e5addb73932337517222ef41d656b406c19052c	embedding design and service-learning into the k-12 computer science classroom	k 12 computer science design service learning;computer aided instruction;k 12;service learning;teaching computer aided instruction computer science education educational courses;computer science education;computational modeling;k 12 computer science classroom epics project engineering design projects computing based design projects high school students service learning models epics high mission engineering design concepts community based service learning projects computer science students computer science teachers computer science teaching computer science course learning experiences computer science course assignments preuniversity setting;best practices;educational courses;design;computer science;communities;educational institutions computer science communities computational modeling computer science education best practices;teaching	In the pre-university setting, computer science course assignments are often project-based, but seldom do they include real-life problems in real time. Many assignments are strictly dictated by what textbooks suggest as valuable learning experiences, as long as they can be completed in just a few class periods. The number of students taking a computer science course continues to dwindle, as does the number of teachers certified to teach computer science. Building on two case studies of EPICS High in computer science classrooms, this paper will open discussion and explore novel ways of engaging computer science teachers and students through compelling community-based service-learning projects using engineering design concepts. As it is EPICS High's mission is to be a leader in developing, disseminating, and supporting service-learning models that engage high school students in engineering and computing-based design projects that meet the needs of their communities, EPICS High intends to build relationships with computer science teachers to learn the best way this model can be implemented in their courses and help these teachers pilot an EPICS project that connects with their community.	computer science;engineering design process;experience;real life	Mindy Hart;William C. Oakes	2013	2013 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2013.6684960	human–computer interaction;science education;computer science;ap computer science;learning sciences;philosophy of computer science;information and computer science;pedagogy;computer engineering	DB	-79.6089659031329	-34.428837985162154	58663
9db673f1d2e1f8d9f7acf8eb66272d27c52e07b7	editorial preface		It is a great challenge to bring a new journal into the world, especially when the journal aims to publish high quality manuscripts. In addition, although doctoral studies have been a major focus for most of us and many scholars understand their value, only a few spend their time actually exploring related issues. Despite both these challenges, this journal aims to provide readers worldwide with high quality peer-reviewed scholarly articles on a wide variety of issues related to doctoral studies in areas such as informing science, information systems, information technology, information science, information security, and IT education. My recent discussions with Gordon Davis and other distinguished scholars indicate that there is a great need for such a journal. In order to position IJDS as the most authoritative journal on doctoral studies, a group of highly valuable scholars have agreed to serve on the editorial board. I am honored to have five associate I'm also delighted with our group of International Review Board members consisting of scholars from 13 countries worldwide that are actively serving on doctoral dissertation committees, supervising doctoral dissertations, and teaching doctoral level courses. With our editorial board's cumulative experience on doctoral education, this journal brings a substantial representation of the field of doctoral studies in the disciplines noted. Without the service and dedication of our editorial board, IJDS would have never existed. This inaugural volume includes four manuscripts. Atwell's article, Designing an Indonesian leadership training program: Reflections upon decisions made, explores the role of design decisions and leadership training programs on research projects such as doctoral research in the context of schools in Eastern Indonesia. The article concludes that the two key design elements of the research are a) awareness of community context, and b) a need to match style delivery and reflective activity to the participant group. Both key elements appear to be important for future programs. Ali and Kahun's article, Dealing with isolation feelings in IS doctoral programs, explores issues related to isolation among Information Systems (IS) doctoral students and how such feelings are associated with the decision to persist in their doctoral program. The article outlines the four stages of the doctoral program and investigates how reducing the feeling of isolation is a key factor in reducing attrition throughout the four stages. The article also suggests some counter measures or solutions for institutions to follow which may lead to the minimization of isolation and …	attrition (website);counter (digital);display resolution;emoticon;information systems;information science;information security;information system;informing science;review board	Adel M. Aladwani;Mahesh S. Raisinghani;Nicolau Reinhard	2004	Electronic Commerce Research	10.1023/B:ELEC.0000028050.87594.61		HCI	-79.06917252874842	-30.189346718700964	59018
03b856c0ce5b5a7fdb8cda75783b6db8093ade2b	the context, design, and impact of system-wide assessments to enhance effectiveness in the higher colleges of technology of the united arab emirates		This paper examines the use of System-wide Assessments, an innovative initiative to enhance the accountability, quality, and effectiveness within the Higher Colleges of Technology of the United Arab Emirates. The authors review the historic and contemporary influences on college/university assessments and the key forces or factors which have shaped development and need of Outcome Assessments. The paper summarizes the literature on the best practices for assessment and promoting changes. The paper describes the objectives, structures, and processes involved with random use of System-wide Assessments among the 17 Federal colleges. A survey of 80 Deans and Chairs reports the perceptions and ratings of the process and impact of System-wide assessments. The lessons learned are described and inform recommendations for key components of an effective assessment system to promote accountability and improvement in higher education. Findings have significance for leaders of institutions of higher learning throughout the Middle East and the world. DOI: 10.4018/ijqaete.2012070101 2 International Journal of Quality Assurance in Engineering and Technology Education, 2(3), 1-20, July-September 2012 Copyright © 2012, IGI Global. Copying or distributing in print or electronic forms without written permission of IGI Global is prohibited. American Colleges and Universities (2002) recommended, for verifying the value of undergraduate education, the reorganization of education and review of assessment results of course outcomes. According to the United States Department of Education (2006), the U.S. Commission on Higher Education’s report in 2006 emphasized for regional accreditation agencies to use assessment to promote performance outcomes over inputs and processes, to use quality assessment data to improve teaching and learning, and to use measures to determine “value added” for students. Dinur and Sherman (2009) reported that “Outcome Assessment (OA) has emerged as the systemic mechanism for academic institutions to demonstrate to their stakeholders their viability as institutions that create and disseminate knowledge” (p. 291). To contextualize the use of System-wide Assessments in the Higher Colleges of Technology (HCT), key literature is summarized to enhance understanding for the historic and contemporary influences on development and use of Outcome Assessments in higher education; the distinguishing characteristics, assumptions, and challenges of assessment systems; and the key lessons and factors associated with effective use of assessments. Additionally, the paper describes the innovative design and use of System-wide Assessments in the HCT; reports on the perceptions of the SWA process, value, and impact; and based on experiences in the HCT, recommendations are offered for increasing the probability of an effective assessment process and system in higher education. EDUCATIONAL OUTCOMES The increased focus on educational outcomes has been influenced by a range of factors. According to Meyer and Bushney (2008), Outcome Assessment has arisen because of the perceived failures historically in properly evaluating higher education systems and programs. Lucas and Weber (1998) attributed the increased demand for Outcome Assessment to lowered expectations and standards. The decline in standards and quality has seen a corresponding increase in student grade point averages from grade inflation, as reported by Bond (2009), Johnson (2003), and Millet (2010). Increased use of Outcome Assessment has become necessary because of the lack of meaningful progress for student learning demonstrated on national exams (Kimmel & Marquette, 1998). The increased focus on accountability and assessment of outcomes likewise has arisen because of continued high attrition rates and differential educational outcomes based on socio-economic status and factors of race/ethnicity (Kimmel & Marquette, 1998). The call for greater assessment of outcomes in higher education is related to the perceived failure of institutional effectiveness and the deleterious implications for communities and societies because of the existence of under-prepared and uneducated populations, as described by Kuh and Ikenberry (2009), Nusche (2008), and the U.S. Department of Education (2006).	attrition (website);best practice;population;race condition;soap with attachments;verification and validation;windows hardware certification kit	Marshall Mark Drummond;Matthew A. Robby	2012	IJQAETE	10.4018/ijqaete.2012070101	engineering management;engineering;civil engineering	HCI	-77.76236770272502	-31.664740839082995	59067
e9c18f894b0a555d293a2f87bb90e2f3f372abe9	assessment as action research: bridging academic scholarship and everyday practice	evidence based practice;library research;college students;success;scholarship;action research;academic libraries	Kara J. Malenfant is Senior Strategist for Special Initiatives at the Association of College and Research Libraries, e-mail: kmalenfant@ala.org; Lisa Janicke Hinchliffe is Professor, University Library and Coordinator for Information Literacy Services and Instruction at the University of Illinois at Urbana-Champaign, e-mail: ljanicke@illinois.edu; Debra Gilchrist is Vice President for Learning and Student Success at Pierce College, e-mail: dgilchri@pierce.ctc.edu. © 2016 Kara J. Malenfant, Lisa Janicke Hinchliffe, and Debra Gilchrist, Attribution-NonCommercial 3.0 (http://creativecommons.org/licenses/by-nc/3.0/) CC BY-NC 3.0 his special issue of College and Research Libraries proudly features a selection of action research studies by participants of the ACRL program “Assessment in Action: Academic Libraries and Student Success” (AiA). Just over 200 institutions have participated in the AiA program, with a librarian from each leading a campus team in developing and implementing an action learning project that examines the impact of the library on student success and contributes to assessment activities on campus. The AiA approach to action learning projects is described to potential applicants as follows:		Kara J. Malenfant;Lisa Janicke Hinchliffe;Debra Gilchrist	2016	C&RL	10.5860/crl.77.2.140	media studies;action research;pedagogy;evidence-based practice	ML	-78.15409708469008	-32.032188800640604	59165
38b0683289417a64e362d4f6f321f2d9b7ab4763	a theory-based approach to designing student learning context	experiential learning;hci education;learning outcome;kolb s experiential learning;software engineering;learning activities;development tool;education research;computer science and informatics;student learning	How can we keep technology-focused computing and software engineering students interested and engaged in a soft subject like HCI? How can we avoid leaving the less gifted and less enthused students behind in a 12-week module packed with theories, methodologies and with a new development tool to learn? This paper describes how educational research findings were deployed to address the above issues across four semesters in an HCI module at a UK university. Kolb's experiential learning cycle was successfully applied to the design and scheduling of course content and learning activities to enhance students' learning outcomes. Surveys of the students - both at the beginning and at the end of each semester - consistently showed improvement in students' understanding, perception and satisfaction with the module.	human–computer interaction;scheduling (computing);software engineering	Jarinee Chattratichart	2007		10.1145/1240866.1240890	cooperative learning;educational technology;simulation;computer science;knowledge management;experiential learning;learning sciences;active learning;synchronous learning	HCI	-80.90630380480124	-35.410126199710206	59483
126d7fa7c9881a00cde77cd5fc625de0b67a90f3	fostering student engagement in an online ir course		In an online information retrieval course taught from a library science perspective, a number of methods were used to increase student engagement. Successful tactics include frequent email communication in a natural tone, personalized feedback, an organized, modular presentation of the material, latitude for student choice in assignments, and use of multimedia. The engagement potential of the discussion boards was not used as successfully. The discussions of engagement tactics are reinforced by references to the appropriate literature and feedback from class surveys. The chapter includes lessons learned and plans for future work.		Suzanne Bell	2011		10.1007/978-3-642-22511-6_2	multimedia;student engagement;modular design;computer science	NLP	-77.87872385135535	-33.387614993193814	59584
72434f1426e7883c2119b0c16de90212e77a6bcd	black body radiation for students and secondary schools	blackbody radiation;computer aided instruction;physics computing;student experiments;black body radiation;learning process;online laboratories;optic field;remote labs;secondary school students;black body;online course;remote lab	Online laboratories in the field of science are gaining a lot of interest in optic field because a great number of simulations can be found but almost no remote labs. Black body radiation is a hard topic specially for secondary school students so having the possibility to really see how the phenomena happen will facilitate their learning process.	simulation	Ramona Georgiana Oros;Andreas Pester;Christian Kreiter	2014	2014 11th International Conference on Remote Engineering and Virtual Instrumentation (REV)		simulation;electrical engineering;multimedia;physics	Visualization	-87.43300810914211	-36.42214627617721	59837
21acc258af7e43b78e97061df02d7fbdc95219d3	using robots to raise interest in technology among underrepresented groups	control engineering education;robotics;educatrional technology;mechanical engineering;computer science education;educational aids;high school;robots computer science education control engineering education electrical engineering education mechanical engineering;robots;electrical engineering education;robotica;robotique;annual robotics day camp robots underrepresented students it field;educacion;it field;annual robotics day camp;underrepresented students;socio economic effects;educational institutions robotics and automation robot sensing systems service robots engineering profession information technology urban areas hardware birds feedback;distributed robotics	Women and minorities are under represented in the IT field at the high school, university, and industry levels. Efforts to address this imbalance are often too late to solve underlying problems such as perceived ineptitude and actual inexperience. By designing and hosting a program for these underrepresented students in the middle grades, the Center for Distributed Robotics at the University of Minnesota hopes to establish a successful annual robotics day camp that will inspire both women and minorities to pursue careers in technology. Detailed accounts of the goals and methodology are provided. Initial survey results reveal a very positive response from the campers as well as strengths and weaknesses that will be useful in designing or refining similar camps.	computer;robot;robotics	Kelly R. Cannon;Monica A. LaPoint;Nate Bird;Katherine A. Panciera;Harini Veeraraghavan;Nikolaos Papanikolopoulos;Maria L. Gini	2007	IEEE Robotics & Automation Magazine	10.1109/MRA.2007.380640	robot;simulation;computer science;engineering;artificial intelligence;robotics;mechanical engineering	Robotics	-79.77127674295738	-32.445440848537444	60158
3b261ead6d3b256250397b0509ab4fefdac9399b	time for some changes to icis? reflections on our highest-quality conference		In this commentary, we reflect on the program chair experience of ICIS 2015 to pass on some useful organizational memory for the IS community at large. We also reflect on volunteer effort required for a high-quality conference and the challenges of maintaining quality over a diverse and dispersed reviewing effort. We ask whether we can count on this volunteer effort in a changing higher education context where universities value volunteer effort or service less than promotion and tenure. We make several wide-ranging recommendations to preserve organizational memory and ensure the ongoing excellence of ICIS. Finally, we elaborate on some hard questions about whether the current conference model is fit for purpose and consider alternative models for our high-quality conference.	amiga reflections;icis	Cathy Urquhart;Traci Carte;Armin Heinzl	2017	CAIS		management science;ask price;engineering;volunteer;knowledge management;information system;higher education;organizational memory;excellence	EDA	-78.37338415877151	-28.14939087276375	60501
5e77eb38ca630bd2acc3cfa65315cd8419520e8e	just enough programming for eight-years olds (abstract only)	k 12;early programming instruction;lego mindstorms robotics	Programmable robots have become a very popular tool to introduce children to technology. However most curricula that emphasize on actual programming typically target kids 10 years and older. This summer, the University of New Hampshire organized an Elementary Program Introducing Computing (EPIC) camp. Children 7-9 years old, with no prior programming experience, were introduced to problem solving and creative program design using Lego EV3 Mindstorms robotics. The program followed a just enough principle, such that just barely enough contents were presented to the children in spite of a wider ranger of available materials. For example, a simple robot model was prebuilt to help children focus on programming rather than construction; program control flow and sensor data processing were introduced early on, but only using a very limited set of visual programming blocks and sensors. These basic structure blocks provide enough functionality to construct a moderately complex program, and help students stay focused on problem solving in a non-overwhelming setting. In order to gauge the learning outcome, a test was given before and after the camp. The comparison of the results showed that our method helped the children retain the programming skills and knowledge of general concepts of computing.		Karen H. Jin;Gavin Kearns	2015		10.1145/2676723.2691899	simulation;computer science;artificial intelligence;software engineering;programming language;pedagogy	HCI	-81.55088727667173	-36.7503072347192	60513
ee20253b32a34b99bae1c656d7e55f532c5fe062	computer self-efficacy and anxiety scales for an internet sample: testing measurement equivalence of existing measures and development of new scales	use;computers;computadora personal;ordinateur personnel;personal computer;personality;personnalite;computer anxiety;hombre;internet use;sampling;utilisation;internet computing;evaluation scale;internet;efficacite personnelle;computer self efficacy;self efficacy;eficacia personal;uso;human;personalidad;angustia ansiedad;actitud;angoisse anxiete;escala evaluacion;echelle evaluation;anxiety;computer attitudes;attitude;homme	Two studies investigated the validity of computer self-efficacy and computer anxiety scales when administered to an Internet sample. In the first study, it was found that existing measures of computer self-efficacy and anxiety, originally developed through paper-and-pencil methods with more traditional samples, were not adequately equivalent when administered to a sample that was recruited and tested via the Internet. In the second study, the existing measures were adapted, and new items were developed to create new measures of computer self-efficacy and anxiety. The relationship of these new measures to computer and Internet use behaviors provided evidence for validity. Confidence and aversion were related to computer and Internet use suggesting that these new measures are adequate for capturing confidence and aversion towards computers when administered to an Internet sample. # 2003 Elsevier Ltd. All rights reserved.	computer;internet;measurement invariance;risk aversion;turing completeness	Francisco G. Barbeite;Elizabeth M. Weiss	2004	Computers in Human Behavior	10.1016/S0747-5632(03)00049-9	attitude;psychology;sampling;simulation;personality;social psychology;clinical psychology;anxiety	HCI	-87.06505152837285	-24.133266967591318	61496
2e62d6ba2a57060dd35d9d8665f438ed9a6c4f7f	fully automated electronic mock examination in an introductory computer science course	mock examination electronic learning blended learning computer science education;computer science high definition video engineering education conferences information technology training;fully automated electronic mock examination recapitulation lecture learning objectives exam preparation fully automated marking introductory computer science course;computer science education computer aided instruction	"""A mock examination is an exam that does not count for credit. It is taken before an official examination and gives students the opportunity to practice for the later, important exam. The mock examination provides students with information on their actual learning progress and gives them in this way the opportunity to fill knowledge gaps. An electronic mock examination is the online variant usually taken unsupervised in the students' own time. In this work we present the setup of an electronic mock exam in the course """"Basics of Computer Science"""". We discuss question types other than multiple-choice that allow for fully automated marking. Furthermore, we present an in-depth analysis of the results of the mock exam. These results demonstrate that students consider the electronic mock exam as valuable help for exam preparation. Half of the students take the mock exam even more than once and use different strategies to make the most out of it. On the other hand, lecturers get invaluable feedback from the results of the mock exam. This feedback covers all learning objectives of the entire course, comes at the right time, and is ideally suited for planning the contents of a recapitulation lecture."""	computer science;feedback;item unique identification;mathematical optimization;mock object;unsupervised learning	Andreas Kamper;Felicitas Loepp	2016	2016 IEEE Global Engineering Education Conference (EDUCON)	10.1109/EDUCON.2016.7474687	simulation;computer science;ap computer science;computer engineering	DB	-80.12382610505165	-35.89618853168915	61612
1741c87edf20e0dd2343f7cf2436129c1887526a	assessing the assessment of programming ability	computer program;introductory programming;assessment methods;introductory computer programming;assessment;online evaluation;student assessment	A recent study [7] has shown that many computing students are not able to develop straightforward programs after the introductory programming sequence. Normal student assessment should have highlighted this problem, it did not, therefore normal assessment of programming ability does not work.We examine why current assessment methods (written exams and programming assignments) are faulty. We investigate another method of assessment (the lab exam) and show that this form of assessment is more accurate.We explain why accurate assessment is essential in order to encourage students to develop programming ability.		Charlie Daly;John Waldron	2004		10.1145/971300.971375	computational science;simulation;computer science;online assessment;educational assessment	AI	-81.33087071631932	-37.87897911758014	62075
0fc70649416893e61d58acb16141e60311ad3588	seeing and strategizing diversity in engineering classrooms and labs		While there is a plethora of research and inquiry into STEM and diverse populations at the university level, we have found a dearth of solid, introspective, thoughtful advice on how to handle actual classroom/team and research lab interactions such that diversity is at the core of the working experience. We have found that as instructors, leaders of engineering labs, and research managers at both the graduate and undergraduate levels, we often are working on defense versus offense when it comes to addressing issues of diversity, respect, and professional working behaviors.	computer engineering;interaction;population	Traci M. Nathans-Kelly;Emily J. Farrar;Funmi O. Adebayo	2017	2017 IEEE International Professional Communication Conference (ProComm)	10.1109/IPCC.2017.8013961	cultural diversity;knowledge management;engineering	Visualization	-79.799466981682	-34.039071844819716	62161
ed67f205007c4ce690f9f37967bc93db9199203a	lessons learned from seven years of pair programming at north carolina state university	pedagogy;computer science curriculum;software engineering;pair programming;computer science education;collaborative programming;lessons learned;technical report;data structure;north carolina	A recent survey conducted on the SIGCSE mailing list indicated that up to 80% of CS1, CS2, and data structures instructors allow students to collaborate. The use of collaboration increases as students advance through the computer science curriculum. Some computer science educators use pair programming as the model for their student collaboration, sometimes with mixed results. At North Carolina State University, over a thousand students have pair programmed in CS1, undergraduate software engineering, and graduate level courses over the last seven years. This paper provides a summary of the lessons we have learned through experience and through extensive research over this period.	computer science;data structure;pair programming;sigcse;software engineering	Laurie A. Williams	2007	SIGCSE Bulletin	10.1145/1345375.1345420	pair programming;data structure;computer science;technical report;software engineering;programming language	SE	-81.7346846174432	-34.12222602515523	62390
32aca0001758c5f41b19c39c04e4c9dcdf0096fd	instructing with advanced collaboration technology	learning process;informing science;lessons learned;knowledge work	This paper provides lessons learned and some unexpected transformations in the learning process when advanced collaboration technology was used to overcome limitations of a popular, existing collaboration technology. The activities pursued in these advanced undergraduate and graduate computer and information sciences courses replicate many of the activities in collaborative knowledge work in organizations. Therefore, the lessons learned should be applicable to transforming other kinds of joint knowledge work in general.	information and computer science;information science;self-replicating machine	John T. Nosek	2006		10.1007/978-0-387-34731-8_15	simulation;systems engineering;engineering;knowledge management	HCI	-84.15058559340497	-34.40929266851212	62453
be87454c7df2793ad1b1b51b36982c729c8ea818	undergraduate student nurses' functional requirements for e-portfolios: a qualitative research study	last mile practicum course;e-portfolio;interviews;undergraduate student nurse	The advantages of e-portfolios when may assist schools in constructing teaching tools better suited to professional clinical education thereby enabling students to acquire clinical competency and the confidence to practice. The purpose of this study was to investigated senior nursing students' e-portfolio the needs and perceptions of student nurses regarding the use of e-portfolio in the Last Mile practicum course.	last mile;requirement	Chi-Ping Chang	2018	Studies in health technology and informatics	10.3233/978-1-61499-872-3-83		HCI	-77.50365066367537	-36.534177281166585	62801
7b09f595d6f0cc4db27244e60ed0fb0b57f9fae8	an unlevel playing field: women in the introductory computer science courses	parallel computing;comparative analysis;universities;females;student attitudes;gender difference;college students;higher education;prior knowledge;computer literacy;visualization;computer science education;males;sex bias;introductory computer science;achievement rating;questionnaires;laboratory;computer science;programming;computer attitudes	This study looks at students in introductory computer science courses at two major universities in order to understand some of the reasons behind the recent sharp decline in the number of female computer science majors. The study focuses on gender differences in preparation and skills and the implications of these differences on success in the introductory course.The study showed that despite the proliferation of computers in many areas of daily life, female students still enter introductory computer science classes with weaker programming skills and less involvement with computers than their male counterparts.Prior familiarity with programming concepts emerged as the most useful predictor of success in the course and a high level of success was difficult to achieve without this prior knowledge. The mean grades were comparable for men and women but the women were underrepresented among the highest achievers.This study suggests that the above factors combine to place women at a disadvantage in introductory computer science classes and that some adjustments to the pace and/or structure of this course might be necessary to attract and retain more women in the major.	computer science;high-level programming language;kerrison predictor	Marian Gunsher Sackrowitz;Ann Parker Parelius	1996		10.1145/236452.236488	computer literacy;qualitative comparative analysis;questionnaire;programming;visualization;computer science;multimedia;higher education;laboratory	Theory	-85.4251199104329	-24.74334277217461	63234
49c253f3e6f25163e0002b592d89bf1404a5a099	fostering software engineering principles in k-12 through non-programming activities		We describe two didactic modules that we have designed to foster Software Engineering principles through non-programming activities in non-vocational high schools. We summarize preliminary results of our classroom experience, and we discuss some of the challenges that we have identified.	software engineering	Ilenia Fronza;Claus Pahl	2018		10.1145/3241815.3241841	software engineering;engineering	SE	-81.21474681873019	-33.755114287133544	63485
7dbf0bea30044d67c94ac1b57a342128b7102dcf	integrating communication skills in data structures and algorithms courses	employment;communication skills data structures algorithms;software engineering;teaching computer science education data structures educational courses software engineering;computer science education;data structures;educational courses;writing;algorithms;computer science;communication skills;software engineering curriculum data structures courses algorithms courses computer science students writing skills speaking skills teaming skills communication skills teaching dedicated courses technical classes computer science curriculum;algorithm design and analysis;reflection;teaching;writing data structures computer science educational institutions algorithm design and analysis employment reflection	While the improvement of computer science students' communication skills has frequently been called for in the literature, employers continue to feel that recent graduates are not equipped with the writing, speaking, and teaming skills essential in the 21st century workplace. One problem with previous approaches is that they often teach communication skills in dedicated courses rather than integrating them into technical classes across the curriculum. In this paper, we report on a multi-institutional faculty team's efforts to integrate communication skills into mid-level data structures and algorithms courses as part of a larger NSF-funded project to enact integrated reform throughout computer science/software engineering curricula. We present an outline of assignments designed to develop communication skills (writing, speaking, reading, listening, and teaming) intertwined with technical skills, and discuss our preliminary efforts to assess these efforts. Our work reflects a general approach to incorporate communication activities within the computer science curricula and to help students learn and communicate technical content in academic and professional settings.	algorithm;computer science;data structure;ibm notes;software engineering	William Eberle;John Karro;Neal Lerner;Matthias F. Stallmann	2013	2013 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2013.6685087	simulation;computer science;multimedia;skills management;pedagogy	Graphics	-78.60915703951902	-35.470908716785864	63746
6e93bb6462a39fc0d70660a090729077bd89a3af	teaching agile software development: a case study	agile software development;engineering;software;extreme programming xp;software testing;software prototyping;pedagogical trend;agile software development asd;undergraduate study;information technology;pedagogical trend agile software development teaching computer science software engineering cultural setting;scrum;industries;testing;indexing terms;variable speed drives educational institutions programming software testing industries;software engineering;agile software development teaching;extreme programming;computer science education;variable speed drive;foreign countries;lessons learned;variable speed drives;educational courses;graduate study;cross cultural studies;computer software;computer science;productivity;cultural setting;scrum agile software development asd computer science education extreme programming xp;programming;teaching computer science education educational courses software prototyping;teaching methods;college faculty;teaching	This paper describes the authors' experience of teaching agile software development to students of computer science, software engineering, and other related disciplines, and comments on the implications of this and the lessons learned. It is based on the authors' eight years of experience in teaching agile software methodologies to various groups of students at different universities, in different cultural settings, and in a number of courses and seminars. It specifically discusses three different courses on agile software development, given in different teaching settings and at different levels, and briefly surveys variations to these courses given elsewhere. Based on the experience acquired, analyses and evaluations conducted, and current pedagogical trends at relevant university departments, the authors provide recommendations on how to overcome potential problems in teaching agile software development and make their adoption more effective.	agile software development;computer science;interaction;no silver bullet;software development process;software engineering;waterfall model	Vladan Devedzic;S. R. Milenkovic	2011	IEEE Transactions on Education	10.1109/TE.2010.2052104	personal software process;extreme programming practices;agile usability engineering;computer science;systems engineering;engineering;software engineering;software testing;software documentation;information technology;computer engineering	SE	-83.06494223463163	-33.7253472535087	63766
b6200cbe648f646d1ebb67f19005f110eb4e35ec	an in service model for enhancing faculty computer self-efficacy	formation des maitres;software;competence;banque de donnees;universite;enseignement superieur;enseignant;logiciel;higher education;innovation pedagogique;skill;teachers training;service model;computer assisted instruction;computer self efficacy;enseignement assiste par ordinateur;workshop;informatique;university;computer science;teacher;atelier;data bank;educational innovation	"""Computer self-efficacy is a significant factor that differentiates adopters and non-adopters of computer technology among university faculty. Faculty who judge themselves unable to use computers effectively and confidently will not adopt them in the classroom even when the hardware and software are available to them. In this case study, a program was designed and implemented to enhance faculty computer self-efficacy. Using Bandura’s four sources of efficacy information as a guide, the program consisted of showcases, seminars, workshops and funding. The inservice program had a positive impact on both faculty and administration. The inservice program was a cost-effective way for administrators to s~rpport faculty in the use of computer technology in instruction. The faculty gained confidence and enhanced their computer selfefficacy resulting in a community of faculty with shared interests in using computers in the classroom. Components of the program, its evaluation and recommendations for implementation are discussed. Higher education cannot realize the potential impact of computer technology until faculty are comfortable using technology for instructional activities. Current computer hardware and related information technologies are now faster, possess greater memory, and are available at lower costs than their predecessors. Faculty in higher education can and should make iniaginat ive use of these technologies to enrich the learning environment and support student learning. Many faculty are su~cien t ly comfortable with the technology to use it in the classroom: however, many others are not. Indeed, the pace of the information revolution has left many facuIty members bewiIdered and unsure of how or when they can utilize this ever-changing phenomenon. Academic administrators must, therefore, develop mechanisms to help faculty become comfortabIe with the use of computers in their instructional activities (Olivier and Shapiro, 1993). The purpose of this article i s to describe an inservice program designed to improve instructional computer use by faculty at a university campus. The A n inservice model for enhancing faculty computer self-efficacy 2 15 authors found that computer self-efficacy is related to adoption among the faculty on this campus as it is at others (Faseyitan and Hirschbuhl, 1992). Therefore, the program objective was to enhance the computer self-efficacy of the faculty and their desire to integrate computers into instruction. First, we establish how improved self-efficacy is linked to computer usage in instruction, establishing the framework for the inservice program. Next, a detailed description of the program is presented. Finally, we present an evaluation and an assessment of the impact of the inservice program on the self-efficacy of faculty at our campus. Conceptual framework: computer self-efficacy Computer self-efficacy refers to self-judged capabilities on using computers for instruction (Olivier and Shapiro, 1993). One way in which it is measured is by giving participants statements to which they react. Their reactions are scored and individual levels of computer self-efficacy are computed (Murphy, Coover, and Owens, 1989). The authors chose to focus on computer self-efficacy for three reasons. First, studies have consistently shown that self-efficacy correlates highly with the use of complex technologies (Hill, Smith, and Mann, 1987; Landino and Owens, 1988). Secondly, Faseyitan and Hirschbuhl(l992) surveyed faculty in universities and concluded that computer self-efficacy is significantly related to the adoption of computers for instruction. Their study indicated that faculty who do not use computers in the classrooms have significantly lower computer self-efficacy scores than those who do. These faculty judge themselves unable to use computers effectively and confidently, hence they do not adopt them in the classroom even when the hardware and software are available to them (Ellen, 1987). Thirdly, a preliminary survey of our campus indicated that the self-efficacy scores of adopters were significantly higher than those of non-adopters. To cultivate the use of computers in the classroom among faculty, therefore, it is critically important to strengthen their computer self-efficacy. A high self-efficacy about computers will enhance the following attributes among the faculty: 1) a feeling of compatibility of computers with their teaching: 2) a sense of control of the classroom situation when using computers; and 3) an intrinsic interest in developing innovative uses of computers. Compatibility is the degree to which an innovation is perceived as consistent with existing values, past experiences, and the need of potential adopters (Rogers, 1983). A lack of compatibility between computers and the classroom activities of individual faculty is a common complaint. When faculty possess low self-efficacy, they do not routinely identify new, evolving possibilities, and continue to believe that computers are inherently incompatible with their instructional activities. 2 16 British Journal of Educational Technology Vol27 No 3 1996 I Lack of confidence (Zammit, 1992), and the fear of relinquishing creative control of classes and coursework by using materials developed by others. also impede the effective utilization of educational technology (Beal, 19 82). In the classroom, faculty often perceive a need to control and predict what will happen as they use computers because predictability reduces stress and increases their preparedness. Faculty whose self-efficacy is high are generally more confident in the use of technology in the classroom, feeling no loss of control and frequently enhancing classroom options. If problems surface, or the computer fails to perform as expected, a faculty member who is uncomfortable with computers may quickly perceive a loss of control. The influence of incentives has also been studied, but with varied conclusions. Faseyitan and Hirschbuhl (1 992), for example, concluded that external incentives do not induce faculty to adopt computers for their instructional activities. Faculty who wish to adopt computers for instruction do so because they are intrinsically motivated. Those who are confident of their capabilities are more likely to explore classroom use of computers on their own, develop innovative applications, and invest the effort necessary to identify and learn new software appropriate for use in their classroom. High levels of self-efficacy tend to promote intrinsic motivation (Bandura, 1982). Therefore, faculty whose self-efficacy is high are generally more motivated to use computers in instruction. Methodological framework: inservice programs The importance of computer self-efficacy is well established in the literature (Bandura, 1982). However, validated methods for enhancing computer self-efficacy have not yet been articulated. Several authors have suggested situation-specific approaches to improve computer self-efficacy. For example, Lewis ( I 98 5 ) indicated that direct experiences with computers enhances the development of computer self-efficacy. Gist, Schwoerer, and Rosen(1989) found that the demonstration of software can also be effective in improving the computer self-efficacy of learners. Hancock (1990) described how teachers increased their computer self-efficacy by listening to their peers describe their accomplishments with computers. Olivier and Shapiro (1993), in contrast, reviewed available literature on computer self-efficacy and concluded that research in the area has not been extensive. They emphasized the importance of computer self-efficacy and expressed the need for mechanisms that enhance the computer self-efficacy levels of novices. However, they did not specify what mechanisms should be used. The methodology chosen for enhancing computer self-efficacy was an inservice program. The authors adopted an inservice model for three reasons. First, we wanted to create a community that would support its members in the integration of computers in the everyday work of the faculty. It was hoped that faculty would """"network"""" with one another, discover who was concerned with similar issues, and identify who might be able to answer questions likely to arise in the future. Secondly, faculty working to integrate the use of computers in the classroom need the support of the university. The inservice was a tangible demonstration of this support. Third, the An inservice rnodel for enhancing faculty computer self-eficacg 2 1 7 inservice model was thought to be cost-effective for the university. Rather than sending individual faculty to attend a variety of workshops across the country, the Office of Academic Affairs could offer many workshops locally, thereby saving money which would otherwise be spent on travel, lodging, and registration. The money saved could be used to upgrade computers, purchase software and documentation, as well as to obtain site licenses for popular software in laboratories and local area networks. Description of inservice programs Bandura (1982, 1986) identified four sources of information that humans use to judge their self-efficacy: performance attainments; vicarious experiences of observing the performances of others; verbal persuasions that one possesses certain capabilities: and physiological states by which people judge their capability, strength and vulnerability. Using these as a guide, we developed a strategy consisting of four activities: 1) showcases, 2) seminars, 3) workshops, and 4) funding. Showcases and seminars provided verbal persuasion and vicarious experience. The workshops allowed faculty to practice and gain confidence in the use of computers. The funding activities made it possible for faculty to obtain hardware and software for use in the classroom. Showcases The purpose of the showcases was twofold: to determine the extent of faculty interest in using computers and to provide vicarious experiences of observ"""	computer hardware;documentation;experience;gist;information revolution;performance;software incompatibility	Sunday Faseyitan;Josue Njock Libii;John J. Hirschbuhl	1996	BJET	10.1111/j.1467-8535.1996.tb00688.x	psychology;social science;simulation;computer science;service-oriented modeling;competence;multimedia;higher education;management;world wide web;pedagogy	HCI	-79.3864793931707	-35.43567546549494	63936
a6d473f9d91cf8bf9c9801ec8fe2178369ef1807	computer education technology (cet)	software engineering;industrial education;computer science	Computer Education and Computer Based Education are becoming more and more complex. The theory part is well taken care of by ACM curriculum. However, the practical laboratory aspect of the ACM curriculum is left wide open for individuals to decide. This leads to the widespread variations and limitations in the practicum indicating that computer science is not treated as a science, rather as an art. This problem is related to another basic problem regarding what aspect of the computer science should be treated as a science. To teach or get trained in computer science, we need to provide 'paradigms' (and not mere syntax and semantics of programming languages). The construction of paradigms is fluid at the present. There is a need to investigate the theory of 'paradigms', their construction and use in computer science.  The purpose of the panel is to identify some key aspects of 'paradigms', their nature and their application and the type of ongoing research in this direction.	care-of address;computer science;programming language;semantics (computer science)	N. Ramasubramanian	1980		10.1145/800176.809942	simulation;computer science;software engineering;programming language theory;philosophy of computer science;information and computer science	Theory	-83.23873520234912	-36.375802914547855	64281
208cd7784cdb28f1a482932d6524a0f3ebfa24ce	the development of a concept inventory for engineering graphics	graphics;solids	A concept inventory is an instrument that helps identify concepts that students do not understand, and identify which misconceptions are the most prevailing. Concept Inventories can also be used in course design to identify potential topics and aid in assessment. Misconceptions can be deep-seated ideas and therefore challenging to overcome in terms of learning. The use of a quality inventory in engineering graphics may help address such matters. Presently, there exists no nationally normed and validated instrument that can be used in engineering graphics courses to assess misconceptions and competencies. In a previous project, a Delphi Study was used to help identify fundamental topics in the area of engineering graphics. The research team collaborated to produce items that attempted to address these concepts. Piloting these initial items helped improve the item stems and provided a starting point on the formation of distractors. Revised items were compiled into a trial instrument, from which data is being collected at the time of paper submission. Analysis will be conducted on the results of the trial instruments and further refinement will occur.	compiler;engineering drawing;graphics;inventory;object pascal;refinement (computing)	Steven Y. Nozaki;Sheryl A. Sorby;Nancy E. Study;Heidi M. Steinhauer;Mary Sadowski;Ronald Miller	2016	2016 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2016.7757430	simulation;computer science;management science;operations research	SE	-81.36385375873162	-31.94906867918998	64588
02efcefa536b369b4307593b654709c48686544d	the feasibility of automatic assessment and feedback	learning experience;automatic assessment;learning environment;computer science education;web based system;automatic assessment feedback computer science education evaluation;data structure	In this study, we report on the results of studies in which two randomized groups of students are monitored while they solved exercises in a Data Structures and Algorithms (DSA) course. The first group did the exercises on the web and the second one in the classroom sessions. A web based system was employed that was able to give feedback and automatically assess the exercises. The research question was to find out how we should introduce the self study material and automatically assessed exercises to the students in order to maximize their learning experience and to avoid drop outs. In addition, we surveyed the students’ attitude towards www-based exercises by using questionaries. The students were asked what kind of exercises they would prefer to do in DSA courses as well as how they would assess their own learning experience in the three different setups (human guided, web based or mixed). All these studies were carried out simultaneously in two different universities. It is not surprising that the results suggest to introduce easy and human guided exercises at the very beginning of the course. However, we conclude that currently there is an emerging need for both webbased and classroom exercises. The recommended way to introduce the web-based exercises in DSA courses is by combining these two approaches. There is a set of exercises that are best suitable to be solved and automatically assessed on the web while the rest of the exercises are best suitable for traditional classroom sessions. We believe that the results of this study can be generalized to cover also other similar learning environments than that used in this research to give automated feedback for the students, and thus improve the learning experience.	randomized algorithm;web application;world wide web	Mikko-Jussi Laakso;Tapio Salakoski;Ari Korhonen	2005			simulation;human–computer interaction;computer science;online assessment;multimedia;formative assessment	HCI	-80.60910867891472	-37.974277930341025	64924
e0b581572bd24b3fdbc15313a2f6ec4b73f16273	managing international student collaborations: an experience report	project management;complexity theory;open ended group project;collaboration;computer and information science;collaboration educational institutions context complexity theory international collaboration cultural differences organizations;international student collaboration management international collaborative project engineering students global market learning environment skills development;experience report;international student collaboration;project management engineering education international collaboration;engineering education;utbildningsvetenskap;experience report international student collaboration open ended group project;organizations;educational sciences;data och informationsvetenskap;context;cultural differences	Knowledge and experience from working in international collaborative projects prepares engineering students for their future careers in a global market. Hence this is an important element in higher education, although seldom provided in the curriculum. One reason for this lack might be uncertainty in how to manage international collaborations and to create a good learning environment for the development of skills related to international collaborations. Therefore this article describes our experiences from managing international student collaborations including theoretical underpinning for our choices when relevant. Having given the context of, and the strategies for running our two collaborations, we provide an analysis of our experiences. This includes observations of differences in the two collaborations, both when due to use of different strategies and when due to different contexts, as well as observations of similarities. With this in mind, we present recommendations for running international student collaborations.	mind	Åsa Cajander;Mats Daniels;Can Kültür;Lori Russell-Dag;Cary Laxer	2012	2012 Frontiers in Education Conference Proceedings	10.1109/FIE.2012.6462413	engineering management;knowledge management;political science;management science	Visualization	-82.91382501175696	-33.154335094716735	65357
c2502dd6f7fc2e85c50e81c5aebead1923421442	software engineering projects with social significance: an experience report at a minority university	software engineering computer science education educational courses educational institutions professional aspects social aspects of automation;social aspects of automation;software engineering;computer science education;professional aspects;educational courses;project based software engineering course software engineering projects minority university computer science underrepresented minority students professional career academic achievement self reliance community engagement;communities software engineering educational institutions software libraries computer science portable document format	Recent research indicates that women and minority students find computer science more meaningful and engaging when they have a chance to apply their knowledge within communal and societal context. We report the experience gained while incorporating a software engineering project that aid community and society at a university that predominantly serves underrepresented minority students. The project that we utilized allows the students to apply the theories and principles of software engineering on a real life scenario while keeping them engaged and motivated, addresses the needs of community and society, and better prepares the minority students for their professional career through improved academic achievement, enhanced self-reliance and community engagement. The project can easily be replicated and adopted to any project-based software engineering course taught at any university and likely to generate similar benefits to students and society that we noticed.	computer science;experience;real life;software engineering;theory	Debzani Deb;Luel Gonzales;Michael Geda	2013	2013 26th International Conference on Software Engineering Education and Training (CSEE&T)	10.1109/CSEET.2013.6595268	engineering management;personal software process;software engineering process group;computer science;engineering;knowledge management;software engineering;software engineering professionalism;management	SE	-82.89607490028699	-33.8570497165481	65984
35ceb4fef299a800cd62f3a66cc095b2002fc47c	rethinking pedagogy for teaching pl with more than pl concepts in mind	programming language;computer science education;programming languages curriculum	"""Individual department goals drive undergraduate computer science educators to teach with varying priorities on preparing students for continuing to graduate school or embarking on a career that leverages their education immediately after college. Programming languages play a key role in that education for both student profiles, even in curricula that include no core programming language concepts course. The """"fattening"""" of our discipline into many subareas has prompted curricula reviews and rethinking of the undergraduate CS content, including programming language concepts (PL) and where they are taught in the curriculum. This paper proposes that we also rethink the pedagogy for teaching PL with diversity in mind."""	computer science;programming language	Lori L. Pollock	2008	SIGPLAN Notices	10.1145/1480828.1480850	computer science;programming language	PL	-80.08946774215327	-34.906507097134565	66137
8ceb003daa222a84eb0d388eaa14e563f25d7cb4	design of school news information system for cz college	databases;information resources;information systems;logic design;database management systems;software systems;maintenance engineering;tree data structures;computer architecture;function design;physical design school news information system design cz college demand satisfaction system architecture function tree function model idef0 method database conception design logic design;educational administrative data processing;tree data structures database management systems educational administrative data processing educational institutions information resources information systems;system architecture design;database design siphonic school news information system system architecture design function design;educational institutions information systems databases computer architecture logic design maintenance engineering software systems;database design;siphonic school news information system	School news information system breaks through and exceeds the traditional news communication conception, and provides audiences with new taste in vision, hearing and sense. CZ college has excellent conditions in many aspects, but lack of school news information system has become the development obstacle of CZ college. School news information system for CZ college is regarded as research object in the paper, and a school news information system is designed to satisfy the demand and characteristic of CZ college. System architecture of school news information system for CZ college is designed, and system architecture figure is finished. The function of school news information system for CZ college is designed, and the function tree is established, the function model is set up with IDEF0 method. The database is design based on above result, and database conception design and logic design are implemented, and physical design is discussed.	haplogroup cz (mtdna);information system	Jianguo Yu;Huaqing Min;Zhipin Cao;Shaowu Peng;Shichao Hu	2012		10.1109/ICDMA.2012.79	computer science;systems engineering;data mining;database	NLP	-84.79931847115746	-31.388737224195435	66533
2981d281db16df3f58daea516d72130f5b7b7691	an education-oriented iso 26262 interpretation combined with constructive alignment	elektroteknik och elektronik;electrical engineering electronic engineering information engineering	Safety standards (e.g., ISO 26262) define safety life-cycles to be adopted for the development of safety-critical systems. Professionals (i.e., safety engineers, safety managers, and, more broadly safety cultureaware personnel) who are responsible of the development of such systems can be, in turn, considered as safety-critical systems. Coursemodules aimed at forming such professionals are critical. Given the criticality of such modules, the intended learning outcomes, before being constructively aligned [Biggs07] with teaching / learning / examination activities, should be derived by applying an education-oriented risk-driven process. The typical “what if” questions aimed at brainstorming on what if something goes wrong become essential to establish the expected stringency related to the knowledge and skills that personnel involved in the development of safety-critical systems should have. ISO 26262 defines a risk-driven safety life-cycle for developing safety-critical systems. In this paper, we give an educationoriented ISO 26262 interpretation and then we combine it with constructive alignment principles and we introduce SCA, Safetycritical Constructive Alignment, a new process to design Master’s level safety-critical courses or modules. To illustrate SCA and its potential effectiveness, we then apply it to design a specific module. Key-words: Safety standards, ISO 26262, Automotive Safety Integrity Levels, safety-critical systems, safety life-cycles, Education Safety Integrity Levels, education, Safety Element out of Context, Safety Educatee out of Context, Structure of Observed Learning Outocomes (SOLO) taxonomy, interactive lectures, constructive alignment.	avionics;heart rate variability;iso/iec 15504;online and offline;relevance;requirement;spice 2;self-organized criticality;shortest seek first;v-model;what if	Barbara Gallina	2015			reliability engineering;systems engineering;engineering;computer engineering	SE	-85.16022084919018	-32.397568032824296	66575
e97513e3ef472d4ddb91f55ae2088888ca5d2878	middle school students' conceptions of engineering	k 12 engineering education;standards;k 12 engineering education middle school middle grades conceptions of engineering;prosthetics;engineering education;interviews;behavioural sciences;middle grades;middle school;k 12 engineering education middle school students conceptions afterschool engineering clubs students engineering conceptions students attitudes engineering majors engineering careers;conceptions of engineering;buildings;engineering education behavioural sciences;educational institutions interviews buildings knowledge engineering engineering education standards prosthetics;knowledge engineering	This study investigated middle school students' conceptions of engineering. Participants were sixth through eighth grade members of afterschool engineering clubs. Thus, the study contributes to understanding middle school students' knowledge of engineering, and also to how afterschool activities shape students' conceptions of engineering. Researchers have increasingly attended to students' perceptions of themselves as engineers, and their attitudes towards engineering majors and careers. However, little research has investigated middle school students' conceptions of engineering- what engineering is and what engineers do. The purpose of this study was to understand how middle school students who join afterschool engineering clubs conceptualize engineering and how engineering afterschool club experiences influence students' conceptions of engineering. The results of our study indicate that many participants had limited conceptions of engineering and suggest a need to connect design activities with knowledge of engineering.	experience	Michelle E. Jordan;Jan Snyder	2013	2013 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2013.6685174	mathematics education;engineering;engineering physics;pedagogy	SE	-83.18119618664714	-31.805843677131058	66649
f5686e7203d67b283170c2ffebe3d2cb2e8c65bb	observing students electronically as they learn (poster)	internet;intelligent agent;world wide web;teaching	We have just begun the first presentation of a new introductory course, Computing: An object oriented approach to over 5,000 students studying at a distance. The course teaches Smalltalk using the LearningWorks system [l]. Practical work is divided into components called learningbooks where instructional material is interleaved with practical activities via hyperlinks. A major research project is underway which examines how students learn in this environment.	hyperlink;smalltalk	Pete G. Thomas	1998		10.1145/282991.283640	the internet;simulation;computer science;multimedia;world wide web;intelligent agent	HCI	-80.93129495701538	-37.03167990310979	66740
b11b50a039eb6cdd2727c5e003a205b1673f1937	bricklayer: elementary students learn math through programming and art		As computer science becomes more prevalent in the K-12 world, elementary schools are increasingly adopting computing curricula. Computer scientists have recognized the connection between math and computer science, but little work has demonstrated how and whether computer science can support improved learning in math. This paper reports on a project in which elementary students in a gifted program used Bricklayer, a functional programming environment that supports artistic and mathematical expression. A pre- and post-test design demonstrates significant learning gains in coordinate graphing and visual-spatial skills.	computer science;computer scientist;functional programming;integrated development environment;test design	Michèlle Friend;Michael Matthews;Victor Winter;Betty Love;Deanna Moisset;Ian Goodwin	2018		10.1145/3159450.3159515	curriculum;multimedia;bricklayer;functional programming;computer science;expression (mathematics)	Theory	-82.32573196795786	-37.09170225113616	66788
be21abff850f7a4b024b87bd0118fb9b29255734	fusion education by humanities and sciences in the case of e-learning and hands-on	teleenseignement;sciences humaines;young children;divertissement;ciencias humanas;hombre;robotics;enfant;unification;gestion ressources humaines;internet;humanities;nino;human resource;human;child;robotica;teleensenanza;robotique;enseignement;educacion;remote teaching;entertainment;human resource management;unificacion;teaching;homme;ensenanza	This paper is an interim report on the project to develop and evaluate the curricula in which the unification of rudimentary robotics and English education is aimed for. The intended goal of this project is to turn out the young children that are conversant with the adequate, basic knowledge of robotics and competent in the practical use of English skills. We like to call such children “would-be super engineers”. The “would-be super engineers” will be our nation's valuable human resources in future.	hands-on computing	Masayuki Hata;Masato Honma;Hitoshi Matsubara;Taku Osanai;Takeshi Osanai	2006		10.1007/11736639_22	entertainment;the internet;simulation;el niño;computer science;artificial intelligence;unification;human resource management;advertising;robotics;programming language;law;pedagogy	NLP	-87.92233918473359	-32.434941766337154	66861
53b33d9dbfb69d262d0fb674bc8f07602b28fd84	a simulation-based led design project in photonics instruction based on industry–university collaboration	software;photonics;constructivist project based learning environment survey led design project photonics instruction industry university collaboration light emitting diode simulation based learning;light emitting diodes computer aided instruction electronic engineering computing electronic engineering education;computer model;computer aided instruction;light emitting diodes;creative problem solving;higher education;light emitting diode;indexing terms;inquiry learning;peer assessment pa;physics;computational modeling;simulation based learning sbl light emitting diode led peer assessment pa project based learning pbl;light emitting diodes education photonics computational modeling physics software teamwork;peer assessment;electronic engineering education;simulation based learning sbl;electronic engineering computing;project based learning pbl;professional skills;article;project based learning;teamwork;light emitting diode led	In response to the growing industrial demand for light-emitting diode (LED) design professionals, based on industry-university collaboration in Taiwan, this paper develops a novel instructional approach: a simulation-based learning course with peer assessment to develop students' professional skills in LED design as required by industry as well as to enhance cognition and metacognition in students in higher education. The simulation-based learning course enables students to understand the influences on LED performance of the variation of different parameters and to seek the best design through comparing the effectiveness of different combinations of parameters. The evaluation results of pre- and post-test knowledge maps and a photonics scoreboard indicate that this project-based instruction may help students understand the operating principles of LEDs and enhance their skill in LED design. The Constructivist Project-based Learning Environment Survey is adopted to demonstrate that the proposed project-based learning environment is beneficial in cultivating student inquiry learning, reflective thinking, teamwork, and skills in creative problem solving.	cognition;cognitive map;diode;oled;problem solving;simulation	Shu-Hsuan Chang;Mei-Ling Chen;Yen-Kuang Kuo;Yung-Chi Shen	2011	IEEE Transactions on Education	10.1109/TE.2010.2098877	computer simulation;simulation;computer science;engineering;knowledge management;multimedia;light-emitting diode	HCI	-78.93091592740713	-37.555698564406036	67107
7a5e1df426e9bcf90bef93fb0cf50438c6131370	impact of personality on task selection in crowdsourcing software development: a sorting approach		Growing demand for software has attracted the attention of the software development industry. Crowdsourced software development has provided a new method for the software industry to produce quality software based on an open-call format. Selecting an appropriate task to develop (developer-end) or evaluate (platform-end) is one of the primary problems in this type of open-call format. Receiving or assigning an improper task to an improper crowdsource (CS) developer does not only decrease the quality of the software deliverables, but also causes overburden on both the platform and the developers. To solve this problem, sorting the tasks based on the developers’ human characteristics may increase task relevancy for developers, which can accelerate efficiency and lessen complexity. Thus, this paper has conducted an empirical experiment to measure the influence of personality on task selection based on the important characteristics of a task: money, time, and type. A total of 83 students from the University of Sindh voluntarily participated in four different short-duration rounds of task development using the developed CS platform. The personality types of the participants were measured based on the Myers-Briggs type indicator. In addition, a complex network technique called weighted degree centrality was applied to identify the most suitable personality for task sorting based on money or complexity attractions (i.e., time or type). Based on the results, it can be observed that personality has a significant relationship with task selection. For instance, developers with intuitive (N) and feeling (F) personality traits are primarily focused on the time duration of a project.	centrality;complex network;crowdsourcing software development;relevance;software industry;sorting	Muhammad Zahid Tunio;Haiyong Luo;Wang Cong;Zhao Fang;Abdul Rehman Gilal;Ahsanullah Abro;Shao Wenhua	2017	IEEE Access	10.1109/ACCESS.2017.2747660	human–computer interaction;task analysis;centrality;distributed computing;computer science;software development;software;artificial intelligence;personality;sorting;crowdsourcing software development;machine learning;crowdsourcing	SE	-90.61522953270817	-34.6124646196699	67311
047403903e611d146630c202752f9ff5121242ce	the year in review: changes and lessons learned in the design and implementation of the ap cs exam in java	interfaces;programming language;object oriented design;computer science curriculum;advanced placement computer science;development process;interface design;marine biology simulation case study;high school;design and implementation;lessons learned;high school teachers;inheritance;advanced placement;ap cs development committee;java exam;ap cs;collection classes;ap;java	The 2004 school year marked significant changes in the Advanced Placement (AP) Computer Science curriculum. Most visibly, Java replaced C++ as the exam-testable programming language. More fundamentally, however, the AP CS curriculum now places a greater emphasis on object-oriented design than in previous years. Students are expected to be able to implement interfaces, design and implement class hierarchies using inheritance, analyze the tradeoffs between alternative designs and their associated efficiencies, and make use of Java Collection classes where appropriate. This special session is intended to inform both high school and college teachers as to the extent of these changes and how they affected the development and grading of the 2004 AP CS exams. In addition, it will provide practical insights as to how the new curriculum can be taught in high schools, and how teachers can better prepare their students for the exams.The AP CS Development Committee's charge is not only to provide a comprehensive testing mechanism, but also to recommend a direction that high school teachers should take in preparing a foundation for more advanced student studies during college. This special session will bring together two college and two high school members of the AP CS Development Committee to share some of their insights into the AP program.AP teachers will learn valuable information to continue to support their shift to Java in the classroom and about the exam for which they are preparing their students. College teachers will learn more about the AP CS curriculum and test development process, which may aid them in similar course redesigns and in the placement of students with AP credit.Time will be provided to discuss participant's questions.	ap computer science;c++;cs games;class hierarchy;java collections framework;programming language	Robert L. Scot Drysdale;Judith Hromcik;David Reed;Reg Hahne	2005		10.1145/1047344.1047355	simulation;ap environmental science;advanced placement exams;computer science;interface design;object-oriented design;software engineering;ap computer science;interface;multimedia;programming language;java;anatomical pathology;software development process;advanced placement	HCI	-80.90379259265296	-34.34474675838196	68057
2869eb857cee5b9811621ac9997a231b284a4346	investigation and research on physical education informationization in higher institutions	computer science education educational institutions educational programs information analysis statistical analysis memory data engineering costs hospitals medical treatment;educational institutions computer aided instruction;universities;pediatrics;physica education;standards;certification;computer aided instruction;training;college students;higher education;physics education;higher institutions;monitoring;sports teaching method physical education informationization colleges universities higher institutions;colleges;computer application;multimedia teaching physica education diversification;diversification;multimedia teaching;physical education informationization;teaching methods;sports teaching method	This paper analyzed the physical education informationization with literature, questionnaires, interviews, statistics for the number of regular colleges and universities, The results showed that the current physical education in higher education informationization infrastructure is inadequate; less attention to diversified physical education; gap between physical education informationization and other disciplines teaching; teachers of physical education have to enhance their own capacity of computer applications; gap between sports teaching method and the current requirement of college students. Therefore, all colleges and universities should strive to improve the methods of physical education so as to upgrade the level of modernization.	computer;teaching method	Tao Zhang	2010	2010 International Conference on Data Storage and Data Engineering	10.1109/DSDE.2010.40	diversification;teaching method;certification;higher education;physics education	DB	-83.68894239320308	-32.45509633890889	68081
219c9e76ab55c5d259927bb86c0e057cca6675de	key principles for user-centred systems design	developpement logiciel;europa;sweden;ucsd;project;concepcion sistema;proyecto;computer and information science;recommandation;definicion;development process;suede;suecia;definition;user centered;system design;desarrollo logicial;software development;oriente utilisateur;utilisabilite;recomendacion;system development;recommendation;information system;europe;usabilidad;projet;computer mediated work;data och informationsvetenskap;usability;travail mediatise ordinateur;conception systeme;systeme information;sistema informacion	The concept of user-centred systems design (UCSD) has no agreed upon definition. Consequently, there is a great variety in the ways it is applied, which may lead to poor quality and poor usability in the resulting systems, as well as misconceptions about the effectiveness of UCSD. The purpose of this paper is to propose a definition of UCSD. We have identified 12 key principles for the adoption of a user-centred development process, principles that are based on existing theory, as well as research in and experiences from a large number of software development projects. The initial set of principles were applied and evaluated in a case study and modified accordingly. These principles can be used to communicate the nature of UCSD, evaluate a development process or develop systems development processes that support a usercentred approach. We also suggest activity lists and some tools for applying UCSD. 1. Purpose and justification This paper describes the results of our current research on UCSD and our experiences of applying UCSD in software development projects. Our purpose has been to compile knowledge and experiences of UCSD, in order to give the concept a more precise meaning and to increase its power. The main point in our paper is that applying UCSD requires a profound shift of attitudes in systems development, and our main goal is to promote that attitude shift.	compiler;experience;linked list;software development process;systems design;usability	Jan Gulliksen;Bengt Göransson;Inger Boivie;Stefan Blomkvist;Jenny Persson;Åsa Cajander	2003	Behaviour & IT	10.1080/01449290310001624329	simulation;usability;definition;project;computer science;systems engineering;engineering;software development;management;software development process;information system;systems design	SE	-89.60828507864012	-30.821563817701495	68300
b66565d784083261e7f639835b671740d5c4ba86	multimedia program graphs and its benefit	virtual study environment multimedia program graph theory;graph theory;delphi environment;virtual study environment;mathematics;multimedia program graphs;history;computer aided instruction;automatic testing;multimedia computing computer aided instruction educational administrative data processing graph colouring;materials testing;electronic equipment testing;multimedia computing;virtual groups;educational administrative data processing;visual representation;graph algorithm;multimedia program;educational programs;education multimedia program graphs visual representation graph algorithms graph colouring delphi environment;graph algorithms;teamwork;graph colouring	The main purpose of the program graphs that is a visual representation of basic graph-concepts and graph-algorithms using a colouring process on graphs created within the program. The program was created in the Delphi environment by our student for his thesis, and enables the teacher to complete his/her lectures so that topics can be more comprehensible as well as saving the teacherpsilas time when he/she prepares text materials and presentations. Students using this program can revise subject-matter and understand it more deeply. They can easily prepare their assignments with the aid of program as well. This paper explores just a few ideas that have proved successful in enhancing education and optimization of studentspsila study habits.	algorithm;graph theory;handy board;mathematical optimization	Eva Milková;Martin Pozdilek;Jiri Haviger	2008	ITI 2008 - 30th International Conference on Information Technology Interfaces	10.1109/ITI.2008.4588468	teamwork;computer science;artificial intelligence;graph theory;theoretical computer science;operating system;machine learning;database;mathematics;multimedia;programming language;world wide web	SE	-83.88298590192267	-36.831285300594395	68353
1b97d3ebd5b70c8b149e4a61b0ac590654db0fd5	cybertech-itest: an nsf-funded initiative to attract and prepare underrepresented students for tomorrow's careers in the computing sciences	cs1;distance education;high school students;diversity in cs;ap computer science;cs0;high school student;careers in computing sciences	This session describes an NSF-funded initiative 3,4 to introduce underrepresented students to the numerous and varied career opportunities in the computing sciences, and prepare them to succeed in college degree programs as well as prepare their teachers to be effective in the computer science class room. The initiative involves the design, development, implementation and evaluation of curricula for teaching computer science in high schools that will prepare students to succeed in taking and completing the AP Computer Science course and exam. The three presentations include: 1) An overview of the CyberTech-ITEST program along with the many challenges of implementation in ten different high schools without being a regularly scheduled course, 2) CyberTech I (Principles of Computing): An online introductory course for second-semester sophomores including curriculum, delivery issues and student attitudes survey, and 3) CyberTech II: An on-campus June-based intense introduction to computer programming using Visual Basic.NET as the object-oriented language to prepare students for AP Computer Science (using Java as the programming language).	ap computer science;computer programming;ibm notes;java;programming language;visual basic	Laurence I. Peterson;Dale Benham;Amy B. Woszczynski;Rich Schlesinger	2006		10.1145/1121341.1121445	distance education;computer science;ap computer science	PL	-80.3214606799433	-34.55662592527402	68491
3676471ff7ea06ab637f68c2d519eac679b9ec2c	launching curricular guidelines for computer engineering: ce2016	computers;history;standards;computer architecture;guidelines;algorithm design and analysis;knowledge engineering	ACM and the IEEE Computer Society plan to re-lease their computer engineering curriculum guidelines at the end of this calendar year. The curricular report, tagged CE2016, reflects the state-of-the-art in computer engineering education and practice that would be relevant for the coming decade. This panel presentation provides an overview of the report and it also provides unique perspectives from some steering committee members and other interested parties. The authors and participants will en-gage in discussions on ways to implement the guidelines to form new programs or to modify existing programs. The authors wel-come all audience participation including overall comments and targeted editing assistance from the computer engineering education and industry communities.	computer engineering	John Impagliazzo;Susan Conry;Eric Durant;Joseph L. Hughes;Russ Meier	2016	2016 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2016.7757433	simulation;human–computer interaction;computer science;software engineering	Visualization	-80.44764044064408	-31.047945752962967	68622
c77fd6353faa950db5b150e1b15fc7981f536a96	a group support systems approach to cognitive mapping	cognitive map;group support system;complexity;group support systems;object oriented systems;cognitive mapping	Cognitive maps are valuable tools for understanding individual and group perceptions. But developing such maps is a resource intensive activity. To reduce required resources, group support system (GSS) technology is proposed as an aid in uncovering cognitive maps. A GSS session was used to develop a cognitive map of users' of object-oriented (OO) techniques perceptions of OO system complexity. Seven participants identified concepts and categories, categorized the concepts, rated category importance, and defined relationships between categories. The data collected and analyses performed provide the basis for a cognitive map of the participants' perceptions of OO system complexity. A comparison with similar individual cognitive mapping results supports further investigation of using the GSS approach for identifying perceptions of complexity.	categorization;cognitive map	Steven D. Sheetz;David P. Tegarden;Kenneth A. Kozar;Ilze Zigurs	1994	J. of Management Information Systems	10.1080/07421222.1994.11518029	cognitive map;computer science;knowledge management;artificial intelligence	HCI	-89.85198108157364	-33.552596938622834	68635
fc4dbf299d8143aa84f4f8cb58fd61323cbe41ae	an analysis of kanban as a project monitoring tool in undergraduate courses		Project monitoring poses a relevant role for project success and it is considered more fundamental in a distributed environment since it confronts additional risks such as culture, geographical, and temporal barriers. Recognizing the complexity and importance of a distributed project, it is vital that undergraduate students receive practical experience and are trained to face the obstacles this form of development imposes, as well as be able to monitor the project progress. The challenge is to take all of these concepts and apply them to a technology course that will not only provide a mechanism for teachers to monitor the evolution of students' projects but also expose students to a production environment for the application of Kanban in monitoring projects in a distributed environment. To validate the efficiency of the technique introduced in this paper, an experimental test was carried out with undergraduate students from different careers, skills, cultures, personalities, and professional experiences to enhance the obstacles encountered in a real distributed environment. The outcome demonstrates the students are partially able to monitor their project and based on the results, some recommendations were made for the use of the Kanban tool in project monitoring during the education process.	business process model and notation;complexity;deadlock;deployment environment;document structure description;experience;kanban (development);relevance;temporal logic	Heydi Miura Machado;Alexandre L'Erário;Alessandro S. Duarte	2017	2017 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2017.8190478	sociology;engineering management;kanban;unified modeling language;software;development environment;schedule;partially able;distributed computing environment	SE	-83.55171986550987	-33.83213321837275	68650
7af8fad640e0f383da455e224044fb588af71dff	on the students' perceptions of the knowledge formation when submitted to a project-based learning environment using web applications		Abstract This work presents a statistical analysis of the views of Electrical Engineering students, regarding the knowledge formation process in a Project-Based Learning application, as a complement to classical teaching methods. In order to assess this approach, an active learning methodology developed especially for part-time degree courses, called Project-Based Learning Agile (PBL A ), has been proposed and implemented at the Regional University of Blumenau (FURB), Brazil. Through the analysis of questionnaire responses obtained over four consecutive semesters, using partial least squares path modeling (PLS-PM), it was possible to understand statistically how the learning process is connected to PBL A . The data analysis suggests that the educational process applied in this work is rooted in a humanist basis, formed by Ego and Cooperation among students. The PBL A approach, sustained by this Humanization, serves as a basis for the Learning. Thus, the results suggest that humanization is an important part in the education process of a new electrical engineer.	web application	Laio Oriel Seman;Romeu Hausmann;Eduardo Augusto Bezerra	2018	Computers & Education	10.1016/j.compedu.2017.10.001	project-based learning;knowledge management;partial least squares path modeling;computer science;pedagogy;web application;teaching method;agile software development;active learning;perception	Web+IR	-78.69459544601953	-37.031970305321636	68740
5785724d094f41d966639237a041636719115355	developing an educational medical game using agilepassi multi-agent methodology	medical theory educational medical game development agilepassi multi agent methodology health education learning motivational improvement clinical performance improvement health care agent oriented methodology multi agent system development agent oriented development medical educational game development multidisciplinary team user involvement game requirement mutuality mededuc development educational system technology pulmonology multimedia presentation;educational medical games multi agents systems agilepassi methodology agile methodologies;educational medical games;agile methodologies;agilepassi methodology;games unified modeling language multi agent systems encoding medical services ontologies electronic mail;teaching biomedical education computer aided instruction computer games educational aids further education health care lung medical computing multi agent systems multimedia systems software agents software engineering;multi agents systems	Games applied to health education have emerged as a motivational improvement in learning and clinical performance of students from the health care area. Currently, there are several agent oriented methodologies that support the multi-agent systems development. However none are specific to the domain of medical and health education. Agent-oriented development of medical educational games must have special features such working with a multidisciplinary team, have a high degree of user involvement and allow a mutuality of game requirements. Within this context, this paper presents the development of MEDEDUC, an educational systems technology applying agile development through the AGILE-PASSI methodology. This game, which has five levels of difficulty, allows the student to study pulmonology answering questions that explore multimedia presentations. The results of this study stressed the advantages of the agile development methodology game that combines medical theory and multi-agent.	agile software development;code;feedback;graphical user interface;multi-agent system;pedagogical agent;requirement;software development process;tracing (software);usability	Vitor Manuel Fragoso Ferreira;Julio Cesar Cavalcanti Carvalho;Rosa Maria Esteves Moreira da Costa;Vera Werneck	2015	2015 IEEE 28th International Symposium on Computer-Based Medical Systems	10.1109/CBMS.2015.81	simulation;knowledge management;agile software development;game developer;multimedia	HCI	-83.88203988502082	-34.54454968168199	68753
1a2362d34ac7fe3b5a9b781474a8e5be12501c2c	robolift: engaging cs2 students with testable, automatically evaluated android applications	test first coding;test driven development;unit testing;android;automatic evaluation;teaching methodology;graphical user interfaces;apps;mobile development;gui;graphic user interface;smartphone;junit;student engagement;tablet;student performance;tdd	"""Making computer science assignments interesting and relevant is a constant challenge for instructors of introductory courses. Android has become popular in these courses to take advantage of the increasing popularity of smartphones and mobile """"apps."""" This has been shown to increase student engagement but it is only the first step, and we must continue to provide support for teaching methodologies that we have used in the past, such as test-driven development and automated assessment. We have developed RoboLIFT, a library that makes unit testing of Android applications approachable for students. Furthermore, by supporting existing automated grading techniques, we are able to sustain large student enrollments, and we evaluate the effects that using Android has had on student performance."""	android;computer science;smartphone;test-driven development;unit testing	Anthony Allevato;Stephen H. Edwards	2012		10.1145/2157136.2157293	simulation;human–computer interaction;computer science;operating system;software engineering;graphical user interface;multimedia	SE	-82.87583974738756	-36.31177033688875	69130
0df1fdcd4c93dfee56eca62d24319c545dd6274a	using non-profit partners to engage students in re		To improve requirements engineering education and training, experience reports serve as guidance on how courses can be taught and which methods and approaches work with specific types of audiences. One problem when teaching undergraduate audiences is often a lack in motivation for the course because of misconceptions about requirements engineering as well as simple work overload by the curricula or other imposing constraints with regard to the students’ time budget. A way to overcome this motivational problem and to make students want to actively contribute to a requirements engineering class project is to let them perform a case study on a socially relevant system in collaboration with an industrial partner. This paper provides an experience report of such an in-class project on an online-learning platform for civic engagement in cooperation with the Story of Stuff Project. We provide the structure of the course as well as the assignments, excerpts from the students’ results, and observations made throughout the course, all of which may serve as input for other instructors.	requirements engineering	Birgit Penzenstadler;Debra J. Richardson;Beth Karlin;Allison Cook;David Callele;Krzysztof Wnuk	2014			civic engagement;pedagogy;curriculum;requirements engineering;political science	SE	-79.91882223858732	-34.88360713813169	69444
59fe5c621c61f9c55ab4b3b739dcb3ca5f42ec6b	"""university centre - a """"slightly surround"""" concert hall"""	instruments;musical instruments;loudspeakers;human voice;cities and towns;fasteners;music	"""A number of modern concert halls are so designed that the audience surrounds the performance area. Although this disposition of audience with respect to performance enhances the sense of intimate involvement between audience and musicians, this advantage is achieved at a cost: the orchestral balance suffers in the seats behind the stage because the musical instruments and the human voice project the sound forward, not backward. Some concert halls, currently being designed, provide for a limited number of seats behind the stage to accommodate a chorus when needed, and to hold more audience when no chorus is involved. Correct orchestral balance in the seats behind the stage is helped by a carefully designed array of sound reflecting panels above the stage. An example of such a """"slightly surround"""" concert hall is described in this paper."""		Theodore J. Schultz	1980		10.1109/ICASSP.1980.1170993	speech recognition;human voice;music	Vision	-78.65947536288027	-30.552074129396814	69479
ddb7e2c6619c23b4adb9e502b502942eeb738110	introduction to the special section	human factors;distributed programming;verification;software/program verification;reliability;testing and debugging	The papers in this section are based on presentations from the international conference of the Italian Statistical Society (SIS) ‘‘Advances in Latent Variables: Methods, Models and Applications’’. The conference was held in Brescia, Italy, on June 19–21, 2013, and included talks, posters, and symposia on topics related to the latent variable approach, from both methodological and applied points of view. The latent variable approach has a relevant role in theoretical and application contexts. The recent methodological developments allow to analyze complex problems typical of social and behavioral research. It is challenging to share with a broad scientific community the potentiality of these methods. A selection of extended papers is published in the Springer book Advances in Latent Variables, belonging to the series ‘Studies in Theoretical and Applied Statistics’ and in the following Springer Journals: Quality u0026 Quantity, Stochastic Environmental Research and Risk Assessment, Advances in Data Analysis and Classification. This special section collects both theoretical and applied contributions in the field of latent variable models. In particular, some of the articles tackle problems arising in model specification and estimation, some are devoted to the class of IRT models, and others deal with models for ordinal responses. The applications are mainly in the educational setting, spatial econometrics and sensorial data analysis.		Richard A. DeMillo	1994	IEEE Trans. Software Eng.	10.1109/TSE.1994.10005	psychology;social science;medicine;counselor education;nursing;sociology;psychotherapist;social psychology;law;anthropology;clinical psychology;pedagogy	SE	-79.22867740039882	-25.36692845689632	70052
860b4977bd6f2d1487aeb1c87f1525575059d0f6	programming examples analysis of commercial vocational high school textbooks in taiwan	computers;debugging;program coding programming example analysis commercial vocational high school textbooks taiwan programming textbooks problem analysis solution planning program testing program debugging;programming profession problem solving education computers debugging planning;computer science education;programming profession;planning;vocational training computer science education educational courses program debugging program testing;programming;computer science education programming textbook;problem solving;textbook	This study aims to analyze the programming examples of commercial vocational high school textbooks in Taiwan. Five programming textbooks widely adopted by schools were reviewed to examine the presentation of programming examples' problem-solving steps: problem analysis, solution planning, coding and testing/debugging. It is found that the examples lack abundant guidance of problem-solving steps for students, especially little attention was paid to problem analysis, solution planning and testing/debugging step. Most examples focus on the description of program codes rather than the detail steps of problem-solving.	code;computer programming;debugging;problem solving	Chiung-Fang Chiu	2015	2015 International Conference on Learning and Teaching in Computing and Engineering	10.1109/LaTiCE.2015.51	mathematics education;computer science;pedagogy	SE	-81.99651061096004	-36.93938408705555	70103
8c553a499dbac65848fbd8802dd4d0562cb65689	teaching the unknown and the unknowable in requirements engineering education	system analysis and design;biological system modeling;classroom experiment;computer science education;computational modeling;engineering education system analysis and design systems engineering and theory uncertainty design engineering risk analysis biomedical engineering engineering management immune system software design;guidelines;systems design requirements engineering education teaching;systems analysis;system design;requirement engineering;manufacturing;teaching computer science education systems analysis;modeling;teaching	"""A challenge in teaching students about the """"realities"""" of requirements engineering (RE) in systems design involves managing requirements change and uncertainty, with all the associated unknowns and unknowable. This paper aims to inspire a discussion for why knowing the unknown and unknowable of RE is a critical design skill. We describe how we might go about fostering an attitude of acceptance versus resistance and fear of the unknown and unknowable in RE, and help develop an important skill in systems design students. The classroom experiences, successes and challenges are described, and suggestions offered for future work."""	experience;requirement;requirements engineering;systems design	Raymond J. Barnes;Donald C. Gause;Eileen C. Way	2008	2008 Requirements Engineering Education and Training	10.1109/REET.2008.6	biological systems engineering;requirements analysis;health systems engineering;system of systems engineering;systems engineering;engineering;knowledge management;requirements engineering;computer engineering	SE	-83.89631246494007	-31.949235431663244	70224
269f97053fa29f20b498cc8abba907469666fafd	the software design studio: an exploration	continuing education computer science education teaching software engineering professional aspects;software engineering;continuing education;software design proposals computer architecture control engineering education reflection engineering education psychology prototypes fellows time factors;computer science education;professional aspects;teaching;design patterns software design studio software designers building design development practices studio course project based work open ended problems very rapid iteration design solutions informal critique heterogeneous issues design media software practitioners software professionals software practice usability user needs nontechnical aspects work practices software implications	"""Some software designers have recently turned for inspiration to the process of building design to improve development practices and increase software's usefulness and effectiveness. Architects' education revolves around the studio course, which promotes: project based work on complex and open ended problems; very rapid iteration of design solutions; frequent formal and informal critique; consideration of heterogeneous issues; the use of precedent and thinking about the whole; the creative use of constraints; and the central importance of design media. M. Kapor (1991) suggested that software practitioners needed to """"rethink the fundamentals of how software is made"""" and proposed the architect's role in building design as a fruitful analogy for software professionals seeking to reform software practice. This analogy helps us focus on usefulness, usability, user needs and practices, and other technical and nontechnical aspects of good software design. It highlights concerns about people's lives and work practices and how people """"inhabit"""" systems. Several authors have explored similarities and differences between software design and building design, including some who have pursued the software implications of architect Christopher Alexander's design patterns."""	software design	Sarah Kuhn	1998	IEEE Software	10.1109/52.663788	education;personal software process;software engineering process group;software project management;computer science;systems engineering;engineering;knowledge management;software design;social software engineering;software development;software design description;software engineering;software construction;software technical review;software walkthrough;software documentation;resource-oriented architecture;management;software requirements;software peer review	Embedded	-84.47624307946577	-33.710873146800914	70291
177b2af58937702df00b9391e132f85abb8bd468	“architectural robotics”: an interdisciplinary course rethinking the machines we live in	control engineering education;robot sensing systems;robotics innovations architectural robotics multidisciplinary graduate level course;pediatrics;architectural robotics;service robots;computer architecture;shape;lessons learned;educational courses;robot sensing systems computer architecture rehabilitation robotics service robots orbital robotics educational robots robotics and automation legged locomotion technological innovation intelligent robots;robotics innovations;lighting;service robots control engineering education educational courses;multidisciplinary graduate level course	We discuss disciplinary barriers which have traditionally prevented robotics from significantly impacting the built (architectural) environment we inhabit. Specifically, we describe the implementation of, and lessons learned from, a multidisciplinary graduate-level course in Architectural Robotics. The results from class interactions and projects provide insight into novel ways in which robotics expertise can be effectively leveraged in architecture. Conversely, our outcomes suggest ways in which the knowledge and perspective of architects could stimulate significant innovations in robotics.	interaction;robotics	Apoorva Kapadia;Ian D. Walker;Keith Evan Green;Joseph Charles Manganelli;Henrique Houayek;Adam M. James;Krishna Teja;Tarek H. Mokhtar;Ivan Siles;Paul Yanik	2010	2010 IEEE International Conference on Robotics and Automation	10.1109/ROBOT.2010.5509821	outline of robotics;simulation;shape;computer science;systems engineering;engineering;robotic paradigms;geography of robotics;lighting;future of robotics;educational robotics;developmental robotics;cognitive robotics;mechanical engineering	Robotics	-83.65329338097193	-32.03973357657031	70765
c20057cf4215960542e506b98bf7a158db523221	from mini rover programs to algebraic expressions	robot sensing systems;program diagnostics;second year;mini rover programs;computer aided instruction;learner centered education programming inquiry based science education generalization;programming activity;integrated development environment;computer science education;standard school curricula;associative algebra;high school;algebra;inquiry based science education;programming profession;logo like language;constructionist learning tool;elementary algebra;robot programming algebra computer aided instruction computer science education program diagnostics;algebraic expressions;science education;programming activity mini rover programs algebraic expressions junior high school autonomous mini robots logo like language integrated development environment static analysis elementary algebra standard school curricula constructionist learning tool;static analysis;educational institutions robot sensing systems programming profession;programming;generalization;learner centered education;autonomous mini robots;robot programming;junior high school	During their second year of a junior high school, pupils wrote programs for autonomous mini robots using a Logo-like language supplemented by an integrated development environment specifically implemented for them. Then pupils and teachers together performed a static analysis of programs in order to specify the length of the paths each robot covers when programs are run. If a robot mounts sensors and the analyzed program uses them, the path covered during each run generally changes and has a different length. Pupils found that it can be specified with an expression containing variables. This analysis associating algebraic expressions to robot programs provided teachers for a support motivating elementary algebra, a typical subject addressed in junior high schools. Thus it is an example of how robotics can be used as means to introduce and concretely manipulate topics of traditional disciplines. It can be integrated in standard school curricula and become a constructionist learning tool for pupils involved in programming activities.	autonomous robot;integrated development environment;linear algebra;logo;robotics;rover (the prisoner);sensor;static program analysis	G. Barbara Demo	2010	2010 10th IEEE International Conference on Advanced Learning Technologies	10.1109/ICALT.2010.95	associative algebra;generalization;programming;simulation;science education;computer science;elementary algebra;artificial intelligence;multimedia;algebraic expression;static analysis;pedagogy	Robotics	-83.16670996587496	-37.458783461418925	70936
82e529a458f0b55e7c3d479420d3a91c54802904	closing the gender gap in an introductory programming course	teaching learning strategies;gender studies;programming and programming languages;improving classroom teaching	Although there is a growing interest in learning to program, the number of women involved in programming remains surprisingly low. We don't understand completely the causes but it has become clear that men and women have different perceptions of programming. The pedagogy of introductory programming courses should take these differences into account. In this study we analyze gender differences in an introductory programming course at the university level. Our results indicate that male and female students have different perceptions and learning outcomes: male students find programming easier, have a higher intention to program in the future and show higher learning outcomes than female students. To reduce these differences we have designed and implemented several learning modules using the principles of physical computing. The physical computing approach aims to take computational concepts out of the screen and into the real world so that students can interact with them. We have applied these modules in a MATLAB introductory programming course in a biology degree. When using these modules both male and female students showed similar results in perceptions and learning outcomes. The use of physical computing principles in combination with the traditional methodology reduced eactually closede this gender gap. © 2014 Elsevier Ltd. All rights reserved.	closing (morphology);computer programming;matlab;physical computing	Miguel Angel Rubio;Rocío Romero-Záliz;Carolina Mañoso;Angel Pérez de Madrid	2015	Computers & Education	10.1016/j.compedu.2014.12.003	mathematics education;simulation;computer science;multimedia;sociology;pedagogy	HCI	-80.12887138920566	-37.66039966771063	71088
d0a8ded43c4cc300e89b59570f28324b134942f2	programming languages in a liberal arts education	programming language;teaching programming;professional training;programming languages curriculum;art education;high light	Liberal arts curricula emphasize breadth of a student's educational experience, critical reasoning, and intellectual discourse to a greater degree than pre-professional training or engineering programs. This substantially impacts how the topic of programming languages (and computer science in general) is taught. We highlight some key aspects of teaching programming languages in a liberal arts program, and we discuss why we believe this approach prepares students for problems they will encounter throughout their careers.	computer science;programming language	Kim B. Bruce;Stephen N. Freund	2008	SIGPLAN Notices	10.1145/1480828.1480837	professional development;computer science;multimedia;programming language theory;programming language;visual arts education	PL	-80.5883938431999	-35.58858437194173	71245
346cf327ea7d31e066706c4bd3438e785597e263	breadth and depth of coverage in is areas for curriculum accreditation: a national study	curriculum development;model curriculum;is accreditation;is2002	Using the six information systems core areas for accreditation and the IS 2002 model curriculum as a framework, this paper proposes and uses metrics for reporting the breadth and depth of coverage across content areas, using data from a sample of 18 four-year IS degree programs. The results indicate that analysis and design and role of IS in organizations are covered in the greatest breadth, according to aggregate mappings of local courses to IS 2002 learning units and IS core accreditation areas. Networks and telecommunications and hardware and software are covered in the least breadth and depth. The remaining two areas— data management and modern programming language— are covered in the most breadth and depth as a percentage of core area size and total coverage, respectively. The results provide IS institutions with a basis for comparing their IS curricula both in terms of accreditation standards and the IS model curriculum.	aggregate data;core (optical fiber);hoc (programming language);information system;partial template specialization;programming language;web application	Jeffrey P. Landry;J. Harold Pardue;John H. Reynolds;Herbert E. Longenecker	2005			engineering management;medical education;medicine;curriculum mapping;pedagogy	HCI	-79.7774280943534	-27.189247558495694	71432
c1c804f62e66cedeb39d350f2752892327a2f5e4	learning and practicing object-oriented programming using a collaborative web-based ide	debugging;atmospheric measurements;particle measurements;collaboration;programming profession;message systems	Collaborative programming is an effective approach to software development, improving software quality, programmer's satisfaction and shortening delivery time This study examines the application of a collaborative Web-based IDE named IDEOL to execute a four-week multi-submission programming assignment in an introductory object-oriented programming class. Forty eight students forming 24 two-member groups in class used the IDE to interact and write source code required by the project. All collaborative and programming activities performed by students were recorded by IDEOL. The results of the study shows that students tend to postpone their programming work until the submission dates. This study also provides an approach to designing and executing an extended programming exercises, which receives high student satisfaction. Our results imply that IDEOL is a useful environment for students to collaborate, learn, and practice programming to improve their learning satisfaction. In addition, as students tend to procrastinate, IDEOL is a useful tool to facilitate, monitor, and report student progress in extended programming exercises.	integrated development environment;programmer;software development;software quality;web application	Vu Nguyen;Hai H. Dang;Kha N. Do;Thu D. Tran	2014	2014 IEEE Frontiers in Education Conference (FIE) Proceedings	10.1109/FIE.2014.7044141	simulation;computer science;extensible programming;multimedia;world wide web	HCI	-82.79018254985002	-35.22707450212531	71922
3e84d77f34dc259cd0be698ec43d4d2783aab56b	using kiva.org to develop critical student employability skills	kiva;higher order thinking employability skills business simulation kiva gulf;gulf;employability skills;higher order thinking;business simulation;decision making skills kiva org critical student employability skills business simulation course higher order thinking skills nonprofit organization business loans kiva website critical reasoning;education decision making organizations industries cognition investment;web sites business data processing inference mechanisms	This article explains the use of Kiva.org in a business simulation course to help students develop higher order thinking skills. Kiva, a nonprofit organization, facilitates business loans for entrepreneurs in developing countries. To attract lenders, the website features the personal stories of loan seekers. These stories often create a clash between making sound business decisions and emotional reasoning. Students reviewed projects featured on the Kiva website and developed the rationale for projects they considered fundable. This learning experience allowed students to apply business concepts while testing their own critical reasoning and decision making skills as they explored alternative viewpoints and potential consequences. Students also gained a better understanding of emerging markets and base of pyramid conditions.	design rationale;objectivity/db;simulation	Pedro Coelhoso;Mamie Griffin	2015	2015 International Conference on Information Technology Based Higher Education and Training (ITHET)	10.1109/ITHET.2015.7218018	engineering;knowledge management;management;employability;pedagogy	HCI	-84.65902065954468	-27.68526846563944	72101
31c8122f05b86fa524caeef2fbcab980546efa73	practice + paradigms: experience with a first-year programming workshop	first year	T hroughout the 1970's and early 1980's, the computer science sequence at Loyola Marymount University began with a traditional course in programming one semester using, for example, Pascal followed by a course in data structures and algorithms. Each course had a lecture-type format; assignments involved the design and implementation of self-contained programs, in the first course, and abstract data types (packages) plus programs in the second course. Instructors had almost no direct involvement in the student's programming process; rather, the instructor always graded a finished program, with little effect on whether the student used sensible structures, or careful design methodology, or, at a more mundane level, whether the student indented statements and made liberal use of comments. About ten years ago we inserted a new course between the two: a programming workshop, conducted in the lab, one student per workstation, with the teacher circulating continually among the dozen or so students, offering real-time instruction. Teachers in the subsequent data structures course have reported a qualitative improvement in the programming styles and skills of the students. As the course has matured, a theme has emerged for selecting problems for the class: with each new assignment we try to introduce a new programming or design paradigm.	abstract data type;algorithm;computer science;data structure;programming paradigm;real-time transcription;workstation	Philip M. Dorin	1997	SIGCSE Bulletin	10.1145/271125.271152	computer science;software engineering	PL	-81.30637014618596	-35.86866505035353	72153
ae57ef0d06f62bec29afcac8fd1f416e29ffba5f	preparing data managers to support open ocean science: required competencies, assessed gaps, and the role of experiential learning	big data education;ocean data management;data policy;experiential learning;open science	Ocean science is experiencing an explosion of data as researchers employ a widening variety of sensors, operating at higher fidelity and frequency, to inform our understanding of the global ocean. This is further complicated by the increasing integration of open science data from other disciplines to analyze complex systems, like climate change, animal migration, and sea/air interaction. This shift has been unplanned, chaotic, and emergent, and has placed the onus on researchers to stay current with best practices for managing, analyzing, and sharing data. Ocean scientists who do not have the technical skill to manage this data are turning to technologists, on the assumption they have the expertise required to help. To test this assumption, we examined an experiential learning program that placed technologists at ocean data centres in Canada, conducting interviews with students and employers to identify the competencies they believed were required to manage ocean data, which were missing in students' education up to that point, and which students gained during the work term placement.	best practice;big data;chaos theory;complex systems;database;emergence;faceted classification;sensor	Lee Wilson;Adrienne Colborne;Michael Smit	2017	2017 IEEE International Conference on Big Data (Big Data)	10.1109/BigData.2017.8258412	data mining;knowledge management;complex system;computer science;experiential learning;best practice;fidelity;chaotic;open science;competence (human resources)	Robotics	-77.96849100536183	-26.242453272975165	72199
563a3b713cd28c2e68efc6671b04930178c0facf	challenge based learning applied to mobile software development teaching		The growth of the mobile device market has generated a demand for specific applications and the consequent need for labor training to develop them. Such demand has as a direct consequence, a growing need for training of application developers. This work presents the use of the active learning methodology Challenge Based Learning (CBL) for the teaching of software development for mobile devices. The use of CBL for little more than a year in four classes of a free course with 110 students is presented. Some difficulties appeared and were solved with proposed actions. The results are obtained from objective and subjective evaluations and analyzed through thematic networks. Among the positive results CBL helps in understanding the problems to be solved and in its solution and has motivated students more than other methods. CBL showed to be an interesting active learning methodology for teaching Mobile Software Development and promising to be applied in other areas.	composite blocking list;evasion (network security);failure;mobile app;mobile device;requirement;software developer;software development;software development process	Fabio Vinicius Binder;Mark Nichols;Sheila S. Reinehr;Andreia Malucelli	2017	2017 IEEE 30th Conference on Software Engineering Education and Training (CSEE&T)	10.1109/CSEET.2017.19	computer science;systems engineering;active learning;software development;software;mobile device	SE	-83.86873949033637	-35.38829757530338	72359
3c5ba4644fde5458d30bd49b8ba8a12702531f51	dsp for practicing engineers: a case study in internet course delivery	digital signal processing dsp internet course delivery online education institutions planning distance learning online course practicing engineers;digital signal processing;course development;computer aided instruction;distance learning;online education;online course;computer science education;internet;signal processing;online courses;educational courses;electrical engineering education;computer science education distance learning educational courses computer aided instruction educational institutions signal processing internet electrical engineering education;dsp;computer aided instruction signal processing internet electrical engineering education computer science education	With the explosion of the Internet and the desire of many institutions to disseminate courses across the world, many students look to online education with promise. However, institutions planning to provide distance learning opportunities may wish to have a model to analyze before venturing forth. There are many factors that ultimately influence the methods of delivery, content, length, and technical support for an online course. This paper presents the design, implementation, and evaluation of an online course titled DSP for Practicing Engineers at the Georgia Institute of Technology, Atlanta, and analyzes feedback from students who have taken the course and the staff who administered it. Different aspects of course development are discussed at length, including curriculum and media type.	algorithm;hands-on computing;internet;technical support	Paul S. Hong;David V. Anderson;Douglas B. Williams;Joel R. Jackson;Thomas P. Barnwell;Monson H. Hayes;Ronald W. Schafer;John D. Echard	2004	IEEE Transactions on Education	10.1109/TE.2004.825571	simulation;computer science;engineering;electrical engineering;digital signal processing;signal processing;multimedia;computer engineering	Visualization	-78.64537855377039	-34.18855811119114	72559
c0e5ccb8d8ef0bba5292ef57bf13a6b84b31a1f0	an agile conversion masters degree programme in software development		The Information and Communications Technology (ICT) industry in New Zealand is growing rapidly. The traditional university courses are preparing an insufficient number of graduates to sustain the growth. Many of the traditional graduate students lack key soft skills that are important in team based software development. This paper reports on the development of a conversion Master of Software Development degree. The students are all graduates with little or no computer science degrees, are taught key programming skills, with a focus on agile development. The programme begins by focusing on individual programming skills through solving problems. Later industrial partners are engaged by providing industrial problems to agile teams of students. The industrial partners are active partners in the agile teams as product owners. By solving the problems, the students develop both technical and non-technical skills while utilizing the skills obtained from previous studies. The results from the first year of the programme are encouraging. A key result is that a high number of students found work in paid IT positions before graduating. The main issue of the first year was introducing too many topics at the same time, over-assessment, not enough communication and contact time, little opportunity for the students to make their own experiences, and learning by making mistakes. The programme has been changed for the next year/s cohort to introduce less topics at once, provide time and space for learning, and a redesign of scheduling assessments.	agile software development;experience;lambda calculus;scheduling (computing);warez	Karsten Lundqvist;Craig Anslow;Michael Homer;Kris Bubendorfer;Dale Anthony Carnegie	2018		10.1145/3159450.3159540	knowledge management;software development;internship;agile software development;soft skills;computer science;information and communications technology	HCI	-82.5225749127855	-33.147891304227265	72763
4c0fea27ddbb7f793c5af8c6f49f64b229576148	early childhood teachers' thoughts and practices about the use of computers in early childhood education	early childhood;teacher education;cognitive development;early childhood education;computers in education	This study was conducted to determine the thoughts and practices of early childhood teachers about the use of computers in early childhood education. The study has been carried out with 100 early childhood teachers who attended to a seminar about the early childhood education in Eski ehir and Afyon. To collect data, a “General Information Form” was used to determine the general characteristics of the teachers and their classroom, and a “Thoughts and Practices about the Use of Computers Questionnaire” was developed by the researchers and used in this study. The questionnaire includes a total of 11 questions related to the experiences, the purposes and the frequency of computer use; classroom assessments for activities with computer, thoughts about the status of children participate in activities and achieve goals of activities with computer. The results of the study show that the majority of the teachers acquire their information and skills of computer all by their experiences and state that computer use is appropriate in early childhood education. It is also stated that a major part of the teachers use the computer to support the activities in daily plans and include the computer 1-2 times at a week in their curriculum. Moreover, it is indicated that the teachers use the computer mostly in their music activities and intend to support children’s cognitive development by activities with computer. In addition, suggestions were made regarding the correct and effective use of computers in education programs.	cognitive science;computer;experience	Özlem Yurt;Nilgün Cevher-Kalburan	2011		10.1016/j.procs.2011.01.050	mathematics education;early childhood education;cognitive development	HCI	-78.8678836498867	-37.89960963294444	72816
d2c8e62ddbeae9812629eeb7631c9aa8db9ff201	getting started in teaching and researching computer science in the elementary classroom	outreach;k 12;curriculum;computer science education	The recent growth of interest in computer science has created a movement to more readily introduce computer science in K-12 classrooms. However, little research exists on how to successfully bring computer science to lower grade levels. In this paper, we present advice for researchers and curriculum developers who are getting started working with computer science in elementary schools. Specifically, we focus on practical tips for studies of this nature, developed from our experiences piloting a computational thinking curriculum with 4th-6th grade students. We address issues arising in elementary school classrooms such as recruiting and interfacing with teachers and schools, classroom management strategies, student computer literacy and developmental stages, and curriculum life cycles.	computational thinking;computer science;experience	Diana Franklin;Charlotte Hill;Hilary A. Dwyer;Ashley Iveland;Alexandria Killian;Danielle B. Harlow	2015		10.1145/2676723.2677288	curriculum;computer science;pedagogy	Logic	-79.5865305007687	-35.497967462633206	72986
c01360a1cb20abd7df8db56944e83d0b47ae3f1d	automated generation and grading of programming assignments (abstract only)	assignments;grading;computer science education;assessment	A problem with teaching large classes of introductory programming students is that students need copious practice but instructors do not have time to grade thousands of student programs. Large classes might require the instructor to restrict the graded programs to a handful. However, students need much more practice than this, and experience shows that if an assignment is not being graded then many students will not do it. Also, if the same problem is assigned to all students, copying of answers will occur. Programs that generate unique assignments and automatically grade submissions have been developed. Beginning with a brief example, this session will focus on experiences attendees have had with such approaches, and what an idealized system might look like, including exemplar use cases.	assignment (computer science);experience	Steven C. Shaffer;Clifford A. Shaffer	2013		10.1145/2445196.2445463	grading;computer science;educational assessment;pedagogy	ML	-81.04377462274908	-36.1207441091186	73098
8c56bc51fe5a5789563b18ed6ed00bf13a63acb0	challenges to computer science education research	qualitative method;quantitative methods;qualitative methods;research methods;computer science education research;research in computer science education;quantitative method	present 122 99.2 98.4 100.0 Problem is introduced 119 96.7 94.3 99.2 Literature review present 89 72.4 65.9 78.1 Purpose/rationale stated 45 36.6 30.8 42.3 Research questions/hypotheses stated 27 22.0 16.3 27.6 Participants adequately described 56 45.5 39.0 52.0 Setting adequately described 79 64.2 58.5 69.9 Instrument adequately described 66 58.4 52.2 64.6 Procedure adequately described 46 37.4 30.9 43.9 Results and discussion separate 36 29.3 23.6 35.0 Note. Column marginals do not sum to 144 (or 100%) because more than one methodology type per article was possible. a Of 113. Kinnunen’s Content Categories Table 4 shows how the articles were distributed according to Kinnunen’s (n.d.) categories for describing the content of computer science education articles. It shows that the most frequently occurring type of content had to do with a new way to organize a course. Note that the interrater reliability for this variable was poor. Table 4. Proportions of Articles Falling into Each of Kinnunen’s Categories Content category n % Lower CI 95% Upper CI 95% New way to organize a course 175 49.7 45.7 54.0 Tool 66 18.8 15.3 22.2 Other 56 15.9 13.1 19.0 Teaching programming languages 31 8.8 6.5 11.4 Parallel computing 10 2.8 1.4 4.3 Curriculum 6 1.7 0.6 2.8 Visualization 6 1.7 0.6 2.8 Simulation 2 0.6 0.0 1.1	computer science;design rationale;inter-rater reliability;parallel computing;programming language;simulation	Justus J. Randolph;George Julnes;Erkki Sutinen;Steve Lehman	2005		10.1145/1047344.1047415	educational research;quantitative research;qualitative research;management science;online research methods	HCI	-79.26326873542456	-37.12780208308167	73346
0f993c48db0ca5799a79a14554e3a201219fd3f7	global awareness for computing educators and scholars: (abstract only)		"""SIGCSE members are part of a worldwide community of computing educators and professionals. This discussion provides participants an opportunity to share global differences in vocabulary and interpretation of idioms and assumptions that pervade teachers and researchers. Lack of cultural knowledge can hinder understanding meaning of terms; communication among colleagues can be confusing. Lack of understanding also inhibits the leveraging of scholarly work and cooperation among colleagues from different cultures. E.g., information technology in Australia means the field of computing, and the baccalaureate degree """"Computer Science and Technology"""" in China is equivalent to a degree in computer engineering. Terminology that Americans use such as AP for Advance Placement or K-12 for pre-undergraduate education is meaningless in many parts of the world. This discussion is an outgrowth of an ad hoc subcommittee formed by the ACM Education Council on global issues. Serving as a reference for the discussion is the seminal article by Clear, A. et al. """"What's in a Name?: International Interpretations of Computing Education Terminology,"""" in The Proceedings of the 2015 ITiCSE on Working Group Reports. Attending this BOF should heighten awareness of what changes might lead to a truly global computing education community. In addition to Owens, Alison Clear from New Zealand, Ming Zhang from China, and John Impagliazzo from the USA have agreed to help lead the discussion."""	computer engineering;computer science;hoc (programming language);sigcse;vocabulary	Barbara Boucher Owens;Alison Clear;John Impagliazzo;Mirella M. Moro;Ming Zhang	2018		10.1145/3159450.3162174	knowledge management;engineering ethics;terminology;computer science;zhàng;baccalaureate degree;china;information technology;vocabulary	HCI	-77.57830827091661	-25.498580813124832	73396
fcd8513b2ba26689db7cc2e3b87875f3f9509cc9	an approach to design curricula to build competencies for employability - a case for it industry	motivation holistic learning employability pedagogies competence skills curricula design learning experience taxonomy;taxonomy;employment computer science education design dp industry;education program curricula design employability it industry curricula definition;economics;buildings;education buildings taxonomy economics recruitment;recruitment	Curricula definition is a key driver of the effectiveness of any Education program. It enables the identification of the right content that the students must become proficient in. This paper is based on the idea that education must impart both `knowledge' as also competence to deliver, in the work that he applies his learning on. What they must be able to do after the Education (outcomes) and the pedagogies used to impart education - all these are key inputs to the design of curricula. We find this reference to the idea of competence not reflected in literature on curricula design. This is important since employers tacitly look for is competence that derives out of knowledge. Therefore, the effectiveness of curricula derived on this basis and deployed through the defined pedagogy will be visible as good employability. Curricula design is therefore driven by these four parameters - knowledge, competence pedagogy and outcomes. This paper examines the design of curricula with employability and Competence as the key parameters. Literature has a lot of work on curricula design, most of these base the curricula on imparting related knowledge with little focus on building ability to do or Competence. This is potentially a reason for poor effectiveness and employability. Research done by the authors and the Pilot results achieved will be used to validate.		Ravi Shankar Pillutla;M. G. P. L. Narayana	2014	2014 Information Technology Based Higher Education and Training (ITHET)	10.1109/ITHET.2014.7155688	engineering management;engineering;knowledge management;management;taxonomy;pedagogy	HCI	-77.9826787597902	-33.3353833768031	73599
12853566dd19a3438c10bcf86e9969da27a69aeb	conflict resolution	british; dental; journal; british; dentistry; clinical; practical; caries; bdj; bda; association	If a dispute or concern arises between a graduate student and advisor with respect to the mentoring relationship, the student and advisor should try first to resolve any difficulties amicably between themselves. If informal discussion does not resolve the problem, there are several avenues to pursue within the graduate group: in most cases, the graduate group chair should be consulted first. If the graduate group chair is unable to find a satisfactory solution, advice may be sought from the relevant associate dean of the student’s school or from the University Ombuds (http://www.upenn.edu/ombudsman), which is a confidential, off-the-record resource that can help the student or the advisor explore options, identify resources, manage expectations, and express frustrations. Additionally, the University Ombuds (http:// www.upenn.edu/ombudsman) offers informal mediation services provided by a professionally trained and certified mediator.	confidentiality	Kenneth P. Monteiro	2017		10.1007/978-3-319-17885-1_100191	remote sensing;conflict resolution;political science	HCI	-78.91461829037829	-25.960232586078707	73800
9b3bc4fc2aa45da559314e603a89df213909a85f	teaching theoretical computer science using a cognitive apprenticeship approach	pedagogy;theoretical computer science;high failure rates;theory of computation;cognitive apprenticeship	High failure rates in introductory courses on theoretical computer science are a common problem at universities in Germany, Europe, and North America, as students often have difficulties coping with the contents of such courses due to their abstract and theoretical nature. This paper describes modifications to the pedagogy of a theory course held at the University of Potsdam, Germany that are motivated by a cognitive apprenticeship approach and have led to a significant reduction of the course's failure rates. Since our approach is based on the typical infrastructure for teaching introductory computer science courses and does not require additional expenses or special resources, it can be replicated by other institutions. We believe that it is a serious contribution to better support teaching as well as student learning success in this field.	theoretical computer science	Maria Knobelsdorf;Christoph Kreitz;Sebastian Böhne	2014		10.1145/2538862.2538944	simulation;theory of computation;computer science;software engineering;pedagogy	ML	-80.60435368898821	-35.40930775592987	73970
e267cb771a86c7fbe2235b10a3ec7baf9f3a5091	using online gaming as a teacher test prep model for mathematics		In 2015, North Carolina’s Division of Teacher Licensure instituted a new licensure examination modeled after the MTel for all elementary education majors. With the new examination came a new minimum passing score of 227. The importance of having a thorough understanding of the mathematics content is expected, yet teacher preparation programs struggle to help elementary pre-service teacher candidates who enter undergraduate programs without the solid mathematics foundations needed to be successful in passing the North Carolina General Curriculum Mathematics Licensure test. With this problem serving as the backdrop, the purpose of this quantitative study was to examine if utilizing Lost Functions, an online gaming program developed by ATLT Gaming (2010), could serve as an innovative methodology to prepare teacher education candidates for the General Curriculum Mathematics Licensure test in elementary mathematics, possibly resulting in improved performance outcomes. KeywORdS Gaming, Mathematics, Online Tutorials, Teacher Preparation, Testing, Video Gaming		Shirley A. Disseler;Tawannah G. Allen	2016	IJSITA	10.4018/IJSITA.2016070104	simulation;computer science;pedagogy	HCI	-79.47910154087529	-31.93257363702083	73976
1e5403bbe96f9e899474f8e57198845cef3ffc95	applying measurement principles to improve hypertext authoring	garzotto f;teoria cognitiva;representation theory;measurement;software measurement;flexibilidad;fletcher t;estudio comparativo;scientific method;yamada s;conception;cognitive theory;possibility measure;methode;conceptual framework;theorie cognitive;etude comparative;hypermedia;medida;theory;botafogo r a;teoria;comparative study;diseno;hatzimanikatis a e;design;flexibilite;evaluation;mesure;evaluacion;metodo;empirical evaluation;method;hipermedia;fortes r p m;flexibility;theorie	Employing scientific investigation is essential to understanding hypermedia processes and products, making hypermedia authoring a science rather than an art. This paper describes a case study aimed at validating empirically metrics proposed to measure the development effort involved in authoring a hypermedia application. The case study is one of the empirical evaluations that we have conducted and it has been planned according to a scientific method of research. Our objective is to improve hypermedia authoring by measuring some quality characteristics of hypermedia applications and the processes involved in developing hypermedia applications. The metrics proposed here adhere to the representational theory of measurement and all the measurement activities have been developed according to Fenton and Pfleeger's Conceptual Framework for Software Measurement and the guidelines from the DESMET project. The theoretical validation of the metrics proposed is also described. Results have shown that several of our metrics have been confirmed as possible measures of development effort.	hypertext	Emilia Mendes;Wendy Hall;Rachel Harrison	1999	The New Review of Hypermedia and Multimedia	10.1080/13614569908914710	design;method;representation theory;simulation;scientific method;computer science;artificial intelligence;evaluation;conceptual framework;software measurement;theory;measurement	OS	-89.70430302921245	-30.896928250907617	73994
239ea65ce8df69206e6a5088709874392c35c365	commercial web sites made accessible for all	electronic commerce	The auditor general shall conduct post audits of financial transactions and accounts of the state and of all branches, departments, offices, boards, commissions, agencies, authorities and institutions of the state established by this constitution or by law, and performance post audits thereof. established the Renaissance Zone Program to foster economic opportunities in the State; facilitate economic development; stimulate industrial, commercial, and residential improvements; prevent physical and infrastructure deterioration of defined areas; and provide for the reuse of unproductive or abandoned industrial properties. Audit Objective: To assess the effectiveness of the Michigan Economic Development Corporation's (MEDC's) efforts to evaluate the Renaissance Zone Program's impact on creating new jobs, retaining jobs, and stimulating capital investment within the State. Audit Conclusion: We concluded that MEDC's efforts to evaluate the Renaissance Zone Program's impact on creating new jobs, retaining jobs, and stimulating capital investment within the State were not effective. We noted one material condition (Finding 1) and one reportable condition (Finding 2). Material Condition: MEDC had not established a comprehensive process to evaluate the effectiveness of the Renaissance Zone Program (Finding 1). Reportable Condition: MEDC did not ensure that all information required by statute in relation to the Renaissance Zone Program was completely and accurately reported to the Michigan Legislature (Finding 2). Audit Objective: To assess the effectiveness of MEDC's efforts to monitor Renaissance Zones for compliance with development agreement requirements. Audit Conclusion: We concluded that MEDC's efforts to monitor Renaissance Zones for compliance with development agreement requirements were moderately effective. We noted one material condition (Finding 3) and one reportable condition (Finding 4). Material Condition: MEDC did not adequately monitor Renaissance Zones' compliance with the requirements of their development agreements (Finding 3). Reportable Condition: MEDC had not established a structured process to ensure that instances of Renaissance Zones' noncompliance with development agreement requirements were appropriately addressed (Finding 4). Agency Response: Our audit report contains 4 findings and 4 corresponding recommendations. MEDC's preliminary response indicates that MEDC agrees with all of the recommendations and either has taken steps to comply or will comply with them. Our comments, findings, and recommendations are organized by audit objective. The agency preliminary responses were taken from the agency's response subsequent to our audit fieldwork. The Michigan Compiled Laws and administrative procedures require that the audited agency develop a plan to comply with the audit recommendations and submit it within 60 days after release of the audit report …	economic development;field research;job stream;moderate response;norm (social);occupations;renaissance;requirement;reuse (action);stimulation (motivation)	Jean Vanderdonckt	1985	British medical journal		computer science	SE	-79.95724402542062	-27.008505520391733	74195
ffe37d1a1db6e5511dc33dc26efb9b460e82eff3	"""clinical study reflections: another view - commentary on: """"raising suspicions with the food and drug"""	federal regulations;institutional review boards;innovation in clinical research;whistle blower;study subject input	Federal regulations are the minimum requirements for conducting clinical studies. Some innovation would improve the situation of many involved in these studies, including: study subjects, those who monitor studies, and clinical investigators as well as Institutional Review Boards. Respecting patient and whistle-blower input; appreciating research staff contributions; and implementing a systems and partnership approach would foster quality and advance clinical research.		Patricia Spitzig	2010	Science and engineering ethics	10.1007/s11948-010-9235-1	accounting;public relations;medicine;engineering;management;law	SE	-79.67376271608204	-26.40086645882861	74362
21aff591e27d23587cee2dce7b93cf32a14fccac	teaching cad at the university: specifically written or commercial software?	learning process;computer aided design;first year;intelligent tutoring system;interactive learning environments;graphical interface;college students;computer system design;computer assisted design;statistical analysis;student surveys;intelligent tutoring systems;computer software;interactive learning environment;program specification;teaching methods;multimedia hypermedia systems;human computer interface	At most Universities throughout the world Computer Aided Design is taught using commercial programs more suitable for business and industry than for teaching. This led us to write our own design program (GIcad) starting from the best-known standards on the market, but always avoiding unnecessary commands in the first steps of the learning process. GIcad constitutes a tool with a multitude of help messages to facilitate student self-training, it is very intuitive and has an attractive and dynamic graphic interface with a design that does not put off the beginner with a lot of options and commands. For three years - and with the collaboration of over 400 students in the first year of their course - we have been carrying out trials, experiments and tests of all kinds with GIcad and other commercial programs. The statistical analysis of the results obtained in the surveys show us that the personal preferences of the students and their learning times are very similar with both GIcad and commercial programs. But have we achieved our objective of dethroning the commercial programs? We can deduce that the students are aware of the importance of mastering the commercial programs they will encounter at work. Nevertheless, a large percentage of them prefer to consolidate the theoretical concepts and acquired practice with a program specifically written for that purpose and developed by our department. This program allows the students to indirectly learn the basis of CAD, so that the subsequent use of commercial tools poses no difficulty.	commercial software;computer-aided design	Ramón Rubio García;Javier Suárez Quirós;Ramón Gallego Santos;Pedro I. Álvarez Peñín	2007	Computers & Education	10.1016/j.compedu.2005.11.013	simulation;human–computer interaction;computer science;computer aided design;teaching method;graphical user interface;multimedia;communication;world wide web;pedagogy	Arch	-79.47854830767305	-37.8066458157689	74401
54c6560d4559fe19f9654fbac8de24b387665193	computer symbolic math & education: a radical proposal	programming language;computer education;elementary school	None of the commonly-taught programming languages is very relevant to the typical elementary-school through college math curriculum, but computer symbolic math is relevant to most of that curriculum. Consequently, a vast opportunity for beneficial mutual reinforcement and cross-motivation between math and computer education is being squandered. This paper substantiates these claims, explains their major causes, then proposes remedies.	programming language;symbolic computation	David R. Stoutemyer	1979	ACM SIGSAM Bulletin	10.1145/1089170.1089173	mathematics education;computer science;mathematics	PL	-80.34755605005026	-35.90619431746068	74462
954a5bfaf3ce9e10c7cbeb874e3fdd66d8cd8421	computing in the arts: a model curriculum	creativity;art;computing;curriculum;theatre;game programming;degree;major;design;music	In this paper, we describe Computing in the Arts (CITA), an innovative interdisciplinary major, which combines computer science with artistic theory and practice. CITA is relatively easy to implement across a variety of higher education institutions, because it repurposes existing courses and resources in computer science and the arts. CITA is relatively easy to implement across a variety of higher education institutions, because it repurposes existing courses and resources in computer science and the arts. At our institution, this involves three tracks (music, visual art, and theatre). CITA incorporates four synthesis courses, one per academic year, which help students interweave the two distinct curricular experiences into a cohesive whole in preparation for their capstone project. CITA has been fully implemented at the authors' institution. In the three years of its existence, it has increased participation in computer science by 23% mainly from an underserved population (students interested in the arts). Approximately 40% of these students are women. While these students are not necessarily strong in mathematics, they tend to be strong in design and creativity, thus enriching the pool of computing professionals with people able to envision new technologies and surprising innovations. Such people are fully versed in computer science so they can easily collaborate with more traditional computing professionals such as software engineers and scientific programmers. We discuss our successes, and provide pointers for others to establish similar degree programs, including potential challenges and lessons learned.	capstone (cryptography);computer science;experience;programmer;software engineer	Bill Z. Manaris;Renée A. McCauley;Marian Mazzone;William H. Bares	2014		10.1145/2538862.2538942	curriculum;design;computing;theatre;computer science;software engineering;music;multimedia;creativity;game programming;degree;pedagogy	HCI	-79.74168457467782	-34.89481454152832	74505
2b05b7876158676bd0a5beeb82ff8158a414b02b	visual instructional design languages	instructional design	Submission Deadline: December 14, 2009 The Journal of Visual Languages and Computing (http://www.elsevier.com/locate/jvlc, impact factor: 0.863) invites authors to submit papers for the special issue on Visual Instructional Design Languages. This special issue follows up the VIDLATEL 2009 workshop (http://elearn.pri.univie.ac.at/vidlatel/) on the same topic, but it is open also to contributions that were not presented in the workshop. The special issue is scheduled to appear in December 2010. Background Many human activities are supported by the use of visual representations, which enable us to manage complex problems by enhancing our limited cognitive capabilities. Architects, musicians, surgeons and engineers use visual artifacts in their daily practice to plan, design and carry out their endeavors, in the form of music scores, images, diagrams, charts, etc. Visuals can support imagination, creative thinking, communication, discussion, organization, documentation, and formalization of ideas, plans or anything related to the tasks to be accomplished. Similarly, learning experiences, and in particular the difficult process of design and implementation of learning environments could be supported by the appropriate use of visual artifacts. Achievement of learning is pursued through activities using learning objects, resources and tools. The ever increasing number of existing Technology-Enhanced Learning (TEL) tools, standards, and applications (e.g., Moodle, dotLRN, RELOAD, LAMS, to name a few) provide academic staff with lots of useful functionalities to design their TEL environments. There are a number of specifications that allow formal representation of learning processes and contents (e.g., SCORM, IMS LD, IMS CP, IMS QTI, etc.) intended to facilitate reuse and interoperability of solutions. Nevertheless, it is well known that these specifications are complex and difficult to work with by the average practitioners, i.e., teachers, instructional designers, facilitators. This special issue intends to explore the use of visual design methodologies and artifacts (languages, notation systems, standards, frameworks, tools, metaphors, applications) to support teaching practitioners in their daily work, and to enhance the quality of TEL systems, facilitate sharing ideas, collaboration, reuse, and learning from experience. Topics We solicit manuscripts that provide original contributions to advance practice and/or theory of visual instructional design languages. Submissions are expected in, but not limited to, the following topics: • Visual design languages and notation systems for instructional design • Visual design applications and editing/authoring tools for instructional design • Narrative techniques and instructional design • User studies and case studies involving visual instructional design languages and applications • Computational modeling in visual instructional design languages • Human factors using visual instructional design languages • Pattern-based visual instructional design • Meta-models for visual instructional design languages • Other topics of relevance to the special issue theme Please notice that the special issue will not include papers about the use of visuals in learning (e.g., related to image-text relationship or cognitive load). Also note that manuscripts are not limited to any particular category, i.e., submissions may be empirical studies, case studies, state-of-the-art reviews, methodological or theoretical, etc. However, each submission must clearly demonstrate its (a) practical value to the practitioner community or (b) sound advancement of theory. Submissions Only original papers will be considered. Manuscripts are accepted for review with the understanding that the same work has not been, will not be, nor is at present submitted elsewhere, and that its submission for publication has been approved by all of the authors; further, that any person cited as a personal communication has approved such citation. If your submission is an extended version of one or more conference/workshop papers, please include the original publication(s) in your submission and indicate the changes/improvements made for this special issue. Manuscripts and inquiries should be sent electronically to vidlatel@gmail.com, indicating in the subject headers that the submission is intended for the Special Issue on Visual Instructional Design Languages. Manuscripts should be in PDF and follow the formatting instructions of the Journal of Visual Languages & Computing as indicated at http://www.elsevier.com/wps/find/journaldescription.cws_home/622907/authorinstru ctions. We limit the length of the articles submitted to this special issue to 40 double-spaced pages with 3 cm (1.18 in) margins, including figures, tables, references, etc. To help us organize the review process, please indicate your intention to submit a manuscript by sending an abstract to vidlatel@gmail.com by 14 December 2009. Schedule Prospective authors are invited to make themselves known to the editors ahead of time by sending an abstract of the planned manuscript to facilitate the management of submissions and ensure that the authors will be informed of any change. • Abstract submission: December 14, 2009 • Full manuscript submission: March 1, 2010 • Notification of review results: April 30, 2010 • Revised manuscripts due: June 14, 2010 • Notification of final decisions: July 9, 2010 • Camera ready submissions due: August 9, 2010 • Papers sent to publisher: August 15, 2010 The special issue is scheduled to appear in Journal of Visual Languages and Computing, Vol. 21, No. 6, December 2010. Further Information Please, contact the special issue editors at vidlatel@gmail.com for any inquiries.	cp system;chart;computation;diagram;documentation;emoticon;experience;human factors and ergonomics;information management system (ims);interoperability;portable document format;prospective search;qti;relevance;the european library;visual artifact	Manuel Caeiro;Michael Derntl;Luca Botturi	2010	J. Vis. Lang. Comput.	10.1016/j.jvlc.2010.08.005	computer science;knowledge management;instructional design;multimedia	HCI	-81.0264806887564	-30.91720316251937	74546
aed32f97183e2643ff5e1dafa862817ca5659358	ensemble: the sharing community (abstract only)	computing education	The Ensemble computing portal originated under the NSF NSDL program and enjoys the respect and continued interest of the computing education community. The project has reached a maturity level at which it is time to focus on the long-term viability of the activity. The original proposal included a commitment from the Villanova University library to adopt the system and keep in running in perpetuity. However, merely keeping the system running will not preserve nor extend the true promise of the project. That requires an active, engaged community. The leaders of the Ensemble project invite our partner projects and the SIGCSE community to join us in an initial meeting of an organization devoted to the continued development and support of the Ensemble vision: that of a community of educators sharing their best efforts, showcasing the best resources, and archiving materials that deserve long term preservation.	archive;capability maturity model;case preservation;ibm notes;national science digital library;sigcse	Lillian N. Cassel;Lois M. L. Delcambre;Gregory W. Hislop	2014		10.1145/2538862.2544252	simulation;computer science;knowledge management;software engineering;world wide web	AI	-79.99668339150905	-31.367248025878844	74553
7bfdd4413636f334e04ee33e4567c50c8d6a0189	determination of competency of programmers by classification and ranking using ahp	programming competency learning analytics educational data mining analytic hierarchy process;programming analytic hierarchy process computer science education data mining educational administrative data processing educational courses;analytic hierarchy process;sensors;educational data mining programmer competency ahp analytic hierarchy process programming proficiency programming course multicriteria decision making problem mcdm problem;sensors programming profession analytic hierarchy process data visualization object oriented modeling;programming profession;data visualization;object oriented modeling	Evaluating the learners to determine their proficiency in programming is a challenging task. In this paper, we attempt to automate this task by analyzing dynamic data collected from programming platform through sensors. Since the performance of students in programming course and their assessment depend on multiple criteria, we model the problem of finding the proficiency of student as a Multi Criteria Decision Making (MCDM) problem. We present a novel solution using Analytic Hierarchy Process (AHP) with which each student is classified into one of the expertise levels which represent their competency in a particular programming language. This competency based approach will help course instructors to grade the students. This grading helps the teachers to identify students who are facing difficulties in learning and to guide them to improve their technical skills. We validate our results by comparing them with marks scored by the students in the examination of that course.	dynamic data;programmer;programming language;sensor	Thamarai Selvi Somasundaram;Usha Kiruthika;M. Gowsalya;A. Hemalatha;Anna Philips	2015	2015 IEEE International Conference on Electro/Information Technology (EIT)	10.1109/EIT.2015.7293340	analytic hierarchy process;computer science;systems engineering;knowledge management;sensor;data science;machine learning;inductive programming;data visualization;analytic network process	Robotics	-84.6452466943957	-35.35993838735306	74556
7ba7265236429136137fd553cb4bd94393e4459b	solving the cs1/cs2 lab dilemma: students as presenters in cs1/cs2 laboratories	programming evaluation;programming ability;introductory computer science	In our quest to modernize our CS1/CS2 curriculum, we ran into several problems in the effective delivery of the courses and their associated laboratories. We have developed a teaching model in which students become the presenters for the hands-on laboratories. In order for this approach to be effective, the laboratories must be reused from semester to semester, so that student presenters are truly knowledgeable. The student-presenter model also requires more detailed supporting material and a rethinking of course grading policies.	hands-on computing	Kay A. Robbins;Catherine Sauls Key;Keith Dickinson;John Montgomery	2001		10.1145/364447.364575	computer science	AI	-80.00605811627162	-35.29608301081391	74656
2b4b87e52800d7db980d584f544ca4aa9213817a	internet-based performance support systems in engineering education	analytical models;training;computational modeling;engineering education;context;problem solving	This paper is about the “Internet-based performance support systems with educational elements” model. The theoretical foundations and characteristics are analyzed together with their application being to check the model’s effectiveness by means of a mixed research approach with university students. Measuring instruments consisted of questionnaires on attitude about learning through the use of computers as well as reflection on the learning methods, and achievements on practice tests. The results showed that students had positive attitudes and good results on achievement in performance. We recommend the use of educational platforms that are performance learning-centered in universities and for continuing training, as a necessary answer to current workplace demands.	autonomous robot;bus mastering;experiment;internet;personal computer;programming paradigm;rationality;transmitter	Catalina Martínez-Mediano;Nuria Rioperez Losada	2017	IEEE Revista Iberoamericana de Tecnologias del Aprendizaje	10.1109/RITA.2017.2697778	simulation;engineering education;computer science;engineering;knowledge management;electrical engineering;artificial intelligence;computational model;mechanical engineering	Visualization	-79.002811924225	-37.47379686097948	74727
0969d099c246e42ad45423cb0443bf1288978f95	motivational elements in user instructions		N ic o le Lo o rb a c h Nicole Loorbach (1977) completed her PhD at the Department of Communication Science Corporate and Marketing Communication (Faculty of Behavioural Sciences), at the University of Twente in the Netherlands. Her main research interests include document design and technical communication. Nicole is currently self-employed as an information designer, localization expert, and trainer of best practices in collaboration. UITNODIGING	best practice;information design;xojo	Nicole Loorbach	2013			simulation;computer science;multimedia;social psychology	DB	-78.07157954756379	-31.868750243451178	74835
5dc49cd63519087e7feb2c574b0e874a92606b6b	computer science curricula for high schools (a panel discussion)	software engineering;industrial education;computer science	This Panel consists of discussions of current efforts underway to design and test textbooks, lesson plans and teaching strategies for the teaching of computer science in high schools. Most high school curriculum development concerning computing has been directed toward the teaching of traditional subjects (physics, chemistry, math) with computers.  The Panelists will have just finished a site visit with HSCS, the National Science Foundation High School Computer Science Project at the University of Tennessee. They will offer a critical look at its promises and problems compared to other approaches to teaching high school computing, such as the LOGO project, and the use of BASIC.	basic;computer science;logo	Michael Moshell	1980		10.1145/800176.809948	mathematics education;science education;computer science;ap computer science;engineering physics;pedagogy	Theory	-79.87230076733007	-32.81240505142187	75053
54b57e56b3ca77b88af718c20a2788ec4e28c001	information systems and decision processes in higher education	information resources;legislation;art;information systems;resource allocation;higher education;federal government;continuing education;computer science education;information systems art humans information resources us government computer science education continuing education proposals management information systems personnel;personnel;management information systems;decision process;humans;information system;information need;proposals;us government	Increasing demands are being made on higher education by faculty, students, and state and federal governments in a time of diminishing resources and increasing complexities. The internal needs of management and the external requirements of a multitude of constituencies demonstrate the need for data that are not only accurate and relevant but also timely. One institution's approach to decisionmaking and to the use of the computer in the very human enterprise of education are given. Various complexities¿such as shifting student interests, increasing legislative demands, and intensifying management concerns¿are examined as they impact decisionmaking and create greater demands on decisionmakers. Examples include an intent structure for information needs, the impact of an enrollment shortfall, and the structure of a resource-allocation model.	information needs;information system;requirement	James D. Palmer;Betty K. Keena	1978	IEEE Transactions on Systems, Man, and Cybernetics	10.1109/TSMC.1978.4310015	computer science;knowledge management;management information systems;management science;information system	Visualization	-84.60394753623905	-31.22714353609477	75293
1e00841de4eeadcd5132829d35fbf9a035f27115	a suggested strategy for teamwork teaching in undergraduate engineering programmes particularly in china	training;technical coursework teamwork teaching strategy undergraduate engineering program china learning outcome engineering graduates british university chinese university personal development plan module team performance academic performance technical module;software engineering;team working engineering education further education teaching;engineering students;improved mechanism teamwork engineering education china technical module;teamwork training educational institutions software engineering engineering students cultural differences;teamwork;cultural differences	"""Teamwork has been considered as an important learning outcome for engineering graduates. A pilot study on teamwork training was conducted in a joint degree programme between a leading British university and a top Chinese university in 2011. A supplementary experiment in the module """"Personal Development Plan"""" was carried out using a large sample (624 students) to compare different methods for forming groups, taking into account both team and academic performance. For the first time this work has attempted to introduce some tests and checks in the group project of a technical module. This paper reports the new findings from the supplementary experiments in the Personal Development Plan module and the technical module. An improved strategy for teamwork teaching in undergraduate engineering programmes, particularly in China, is now suggested: students would learn teamwork skills in the PDP module in the first year of the university; attend selective workshops for the practical instruction to transfer knowledge into action; and complete some technical coursework in groups in senior technical modules."""	experiment;programmed data processor	Dan Zhang;Na Yao;Laurie G. Cuthbert;Steve Ketteridge	2014	2014 IEEE Frontiers in Education Conference (FIE) Proceedings	10.1109/FIE.2014.7044077	engineering management;teamwork;engineering;knowledge management;pedagogy	Vision	-79.19810587171936	-33.22760360548328	75345
143b3b7655360433a30c8fd378ce5682bc0cbd6e	assessing student preparedness for introductory engineering and programming courses		Our introductory electrical engineering courses still have high attrition rates which raises the question of how to identify students who may be at risk of failing or withdrawing from engineering courses and programs. We have experimented with two different approaches: one is to develop tests that are deployed early in student engineering coursework, and another is to measure student success in prior math courses. Math preparation is the basis of two of the tests, with one also including logic and algorithmic thinking. Preliminary results indicate that purely math-based tests did not correlate well with success in either an introductory problem-solving and programming course, or a sophomore circuits course. A test that includes logic and algorithmic thinking correlated better, but not as well as prior math GPA. All methods currently suffer from large scatter and relatively small correlation factors.	algorithm;attrition (website);electrical engineering;failure;problem solving	Branimir Pejcinovic;Melinda Holtzman;Phillip K. Wong;G. Recktenwald	2017	2017 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2017.8190539	grading (education);preparedness;engineering management;applied mathematics;coursework;mathematics	DB	-81.0572287191631	-37.34166790780356	75348
29f30cd905a76652de765e3167896c817a719862	peering through a glass darkly: integrative evaluation of an on-line course	distance education;programming environment;spectrum;satisfiability;smalltalk;computer conferencing;evaluation studies	In this study we describe a wide-spectrum approach to the integrative evaluation of an innovative introductory course in computing. Since both the syllabus, designed in consultation with industry, and the method of presentation of study materials are new, the course requires close scrutiny. It is presented in the distance mode to a class of around 5,000 students and uses a full range of media: paper, broadcast television, interactive CD-ROM, a Web-oriented programming environment, a Web site and computer conferencing. The evaluation began with developmental testing whilst the course was in production, and then used web-based and paper-based questionnaires once the course was running. Other sources of data, in the form of observation of computing conferences and an instrumented version of the Smalltalk programming environment, also provide insight into students’ views and behaviour. This paper discusses the ways in which the evaluation study was conducted and lessons we learnt in the process of integrating all the information at our disposal to satisfy a number of stakeholders.	cd-rom;integrated development environment;online and offline;peering;smalltalk;terrestrial television;web application;while	Josie Taylor;Mark Woodman;Tamara Sumner;Canan Tosunoglu Blake	2000	Educational Technology & Society		distance education;spectrum;simulation;human–computer interaction;telecommunications;computer science;engineering;electrical engineering;operating system;multimedia;management;world wide web;satisfiability	HCI	-78.05154242824591	-37.63902200583766	75542
a667c892bed22cddb18b8da5d4de82831c3e5224	the challenges faced by academia preparing students for industry: what we teach and what we do	academia;industry;practice;teaching;teaching practice	This workshop re-opens the discussion of the challenges faced by academia when preparing students to take jobs in industry. The workshop's goal is to develop a framework by which academia and industry can better communicate and resolve their differing needs and goals. The workshop will provide practical guidance for academia and industry to take forward and continue the dialogue.		Lidia Oshlyansky;Paul A. Cairns;M. Angela Sasse;Chandra Harrison	2008		10.1145/1531826.1531890	engineering management;engineering ethics;engineering;management	HCI	-80.34551692804452	-31.755529080927932	75587
72ccab03dbdd17cf1138eb2397c2a05d17217a1e	viewpoint: linking education with practice: involving software engineering educators and researchers in the profession	operating system;software engineer;engineer educator;involve software		software engineering;viewpoint		1998	Empirical Software Engineering	10.1023/A:1017105420743		SE	-82.21250729949784	-33.076565889054756	75633
378c620aa2d9777e8583cb6710bed8e1bc367b30	environment for problem solving in engineering higher education	analytical models;problem solving solid modeling education courses computational modeling knowledge engineering analytical models;teaching computer aided instruction educational courses engineering computing engineering education further education;computational modeling;solid modeling;teaching problem solving environment engineering higher education high level theoretical knowledge problem solving skills virtual engineering system problem solving centered engineering process higher education engineering courses virtual environment;education courses;problem solving;knowledge engineering	Industry demands engineers who are in possession of high level theoretical knowledge and at the same time skill in problem solving. This demand recently comes from virtual engineering system where theoretically and methodologically grounded environment provides effective tools for problem solving centered engineering process. In this paper, new approach is introduced to analyze possibilities for the application of virtual engineering systems as environment for higher education courses in engineering. After an outline of the recent problem solving in virtual environments, related work of academicals and professionals is compared. Following this, new education aspects in engineering systems are revealed. As main contribution of this paper, new methodological elements are provided for higher education courses which are organized in virtual environments. Finally, a possible way of definition for teaching program elements is explained.	high-level programming language;mit engineering systems division;open content;problem solving;virtual engineering;virtual reality	Rita Osz	2015	2015 IEEE 13th International Symposium on Intelligent Systems and Informatics (SISY)	10.1109/SISY.2015.7325388	applied mathematics;system of systems engineering;computer science;systems engineering;knowledge management;engineering mathematics	SE	-85.13004779575564	-34.52300304863176	76097
4cb094097010d26bf8b0df93afae7f03987ae25a	technological viewpoints (frames) about electronic prescribing in physician practices	health information technology;qualitative analysis;decision maker;perceived value	OBJECTIVE Physician practices may adopt and use electronic prescribing (eRx) in response to mandates, incentives, and perceived value of the technology. Yet, for the most part, diffusion has been limited and geographically confined, and even when adopted, use of eRx in many practices has been low. One explanation for this phenomenon is that decision-makers in the practices possess different technological viewpoints (frames) related to eRx and these frames have formed the basis for the adoption decision, expectations about the technology, and patterns of use. In this study eRx technological frames were examined.   DESIGN Focus groups, direct observation, and semi-structured interviews were conducted with physicians, practice managers, nurses, and other medical staff.   MEASUREMENTS Focus groups were observed, taped, transcribed, and analyzed to reveal themes. These themes guided the observational visits and subsequent interviews. A triangulation process was used to confirm the findings.   RESULTS Seven frames emerged from the qualitative analysis ranging from positive to neutral to negative: (1) eRx as an efficiency and effectiveness enhancing tool; (2) eRx as the harbinger of new practices; (3) eRx as core to the clinical workflow; (4) eRx as an administrative tool; (5) eRx: the artifact; (6) eRx as a necessary evil; and (7) eRx as an unwelcome disruption.   CONCLUSION Frames provide a unique perspective within which to explore the adoption and use of eRx and may explain why perceptions of value vary greatly. Some frames facilitate effective use of eRx while others impose barriers. Electronic prescribing can be viewed as a transitional technology on the path to greater digitization at the physician practice level. Understanding the impact of technological frames on the effectiveness of eRx use may provide lessons for the implementation of future health information technology innovations.	am broadcasting;best practice;denial-of-service attack;electronic health records;email;entity name part qualifier - adopted;focus group;frame (physical object);information sciences;objective-c;peer review;posters;published comment;semiconductor industry;triangulation (geometry);usability;benefit;interest;message	Ritu Agarwal;Corey M. Angst;Catherine M. DesRoches;Michael A. Fischer	2010	Journal of the American Medical Informatics Association : JAMIA	10.1136/jamia.2009.001826	decision-making;medicine;knowledge management;qualitative research;nursing;management science	HCI	-79.94938308823507	-26.10691470211777	76285
3fad70585ebb67a0846e37c9bdd0d4c8b7d50b2e	improving teaching quality through the conversion of research production	databases;software;instruments;computer special field student;comprehensive development;home appliances;testing;software development of test system;scientific research achievement;teaching computer science education program testing;the conversion of research production;computer science education;program testing;software development;hardware device;teaching quality;programming;scientific research;research productivity;comprehensive development research production computer special field student scientific research achievement software development hardware device;software development of test system teaching quality the conversion of research production;research production;teaching;education production system testing software testing application software programming home appliances embedded computing databases displays	The training student’s application practice ability plays an important role in improving the quality of culture of computer special field student. In this paper, the process of converting the scientific research achievement of test system software development to teaching cases and the production of related experimental hardware devices are proposed. We can see from the teaching effectiveness that the interest in learning was excited by teaching cases which were closed to the practical application as so as the advancement of the comprehensive development ability of student.	software development	Zhongwen Guo;Yongguo Jiang;Yuan Feng;Feng Hong;Jinfeng Dou	2009	2009 International Conference on Scalable Computing and Communications; Eighth International Conference on Embedded Computing	10.1109/EmbeddedCom-ScalCom.2009.97	computer science;systems engineering;software engineering;teaching method;computer engineering	Robotics	-83.81384719409206	-32.684590860666425	76416
23b0e955602993bf0929ebb877a9a7ee72e3724c	an experience report on cross-semester student critique and action in an integrated software engineering, service learning course	student critique;computer aided instruction;software engineering computer aided instruction computer science education educational courses;service learning;software engineering;experience report;computer architecture;whole class software improvement;computer science education;code reuse;games educational institutions software software engineering computer architecture portable computers;educational courses;whole class software improvement student critique code reuse service learning;multiple semesters experience report cross semester student critique integrated software engineering service learning course software engineering process;software engineering practices	This paper reports our experience developing a product for a real-world client using a software engineering process across multiple semesters with different students each semester. New student teams test, debug, deploy, and critique previous semesters' software and then continue its development. Students are motivated to think critically about and experience real-world software engineering practice. We describe how students in one semester collectively identified the software engineering problems that could be resolved in the current semester, how the students proceeded to tackle those problems, and the impacts of their actions for future semesters.	code reuse;crash (computing);integrated software;real life;software architecture;software bug;software development process;software engineering;software propagation;urban dictionary	Richard Burns;Terry Harvey;Lori L. Pollock	2012	2012 First International Workshop on Software Engineering Education Based on Real-World Experiences (EduRex)	10.1109/EduRex.2012.6225700	personal software process;computing;software engineering process group;computer science;systems engineering;software design;social software engineering;component-based software engineering;software development;software engineering;software construction;software walkthrough;computer engineering;software peer review	SE	-82.94326684837279	-34.670113428357666	76662
a001056ce584adb0641d2c4dbfac3ecd65cbe949	virtual team role play using second life for teaching business process concepts	virtual reality computer aided instruction enterprise resource planning management education teaching;the australian standard research classification 210000 science general;information systems;computer aided instruction;virtual reality;software systems;companies;erp system;second life marketing and sales avatars companies information systems virtual groups;conference paper;virtual groups;management education;distributed environment;virtual team;enterprise resource planning;avatars;second life;information system;australia virtual team role play business process concepts teaching virtual world environment enterprise resource planning erp software solutions distributed environment second life virtual presentation virtual meeting virtual team collaboration norway;virtual environment;business process;avatars companies information systems marketing and sales second life virtual groups;teaching;marketing and sales;virtual worlds;role play	This paper describes the use of a virtual world environment to facilitate a role play assignment for buying and selling Enterprise Resource Planning (ERP) software solutions in a distributed environment. The exercise involved the use of Second Life to facilitate the virtual presentation and meeting among the vendors and the purchaser of the software. Students playing vendors and purchase roles were organized into teams who meet, collaborate, and negotiate business transactions in the virtual environment. The aim of the experiment was to introduce students to properties of ERP-systems which are the most common software systems used by businesses, and at the same time introduce tools for virtual team collaboration in an international setting between students in Norway and Australia. This paper reports the experiences from the students' and teachers' perspectives and we give recommendations regarding the use of Second Life in role-playing exercises.		Amit Rudra;Bjørn Jæger;Ashley Aitken;Vanessa Chang;Berit Helgheim	2011	2011 44th Hawaii International Conference on System Sciences	10.1109/HICSS.2011.484	simulation;computer science;knowledge management;marketing;software engineering;virtual reality;multimedia;management;world wide web;information system	SE	-83.83523155880279	-33.75691612699936	76925
91732fb8fdc82503b292a7ebaf3d32214b6c9bf2	writing across the computer science curriculum	concurrent programming;computer science curriculum;object oriented programming;communication skill	At our university, as at many others across the country, there is a movement to integrate the common core subjects with the disciplinary studies. While in the past writing has been a domain of English departments, the new trend is 'writing across curriculum'. It is clear that effective written and oral communication skills are critical for the successful computer professional.We present suggestions for writing assignments that complement the main themes of computer courses from introductory to advanced levels. While some of these have appeared in the literature, others are new. We report on our experience with these assignments and reflect on how they enhance the computer science curriculum.	computer science	Harriet J. Fell;Viera K. Proulx;John Casey	1996		10.1145/236452.236540	concurrent computing;computer science;software engineering;multimedia;programming language;object-oriented programming	PL	-80.93100308395559	-35.031008594029	77424
cd86865937fe619bcb45bd4b68a9edfcf17849d4	challenges and lessons learned on preparing graduate students for gse work: brazilians' perceptions on a multi-site course experience	software engineering software collaboration schedules computer science training;challenge;challenge global software engineering software engineering education teaching dose project;software engineering education;software engineering computer science education educational courses further education;global software engineering;dose project;distributed and outsourced software engineering project graduate students gse work multisite course experience global software engineering computer science course brazilian perception dose project;teaching	Global Software Engineering (GSE) has became a part of the academic curricula in Computer Science courses. However, training students for GSE inherits the challenges of teaching Software Engineering (SE) in globally distributed environments. Furthermore, the most related experience in teaching graduate students reveals difficulties in developing GSE competencies. In this paper, we report the Brazilians' perceptions in performing SE activities in a globally distributed environment. We collected data from a collaborative project developed as part of the DOSE (Distributed and Outsourced Software Engineering) project. As a result, we identified 12 challenges and 7 lessons learned on preparing graduate students for GSE. Our results are helpful for practitioners and researchers in supporting new strategies for training students in the future.	computer science;experience;futures studies;generic stream encapsulation;software engineering	Josiane Kroll;Caroline Q. Santos;Leticia S. Machado;Sabrina Marczak;Rafael Prikladnicki	2016	2016 IEEE 11th International Conference on Global Software Engineering Workshops (ICGSEW)	10.1109/ICGSEW.2016.17	engineering management;education;personal software process;software engineering process group;economics;software project management;systems engineering;engineering;social software engineering;software engineering;software peer review	SE	-82.76341199589241	-33.60537645674671	77576
fe4c4639048b69a1dcb1212d1514a6344d7bfc42	practical assignments in it security for contemporary higher education	annan data och informationsvetenskap;higher education;it security;background knowledge;other computer and information science	Modern university studies cater to large groups of students with consideable variation in background knowledge. This creates problems when designing viable practical exercises, not least for the subject of IT Security. We address these problems by creating a study environment within which students have the freedom to design and execute their own exercises. We suggest and test ideas for providing sufficient motivation and structure for student activity while minimising the need and cost for	computer security	Alan Davidson;Kjell Näckros	2007		10.1007/978-0-387-73269-5_4	mathematics education;library science;computer science;multimedia	HCI	-78.62070857448735	-36.35396877641752	77851
cd5bb7a18998d32c39bd395dbf197c7df345867e	power efficiency improvements for wireless transmissions	nonlinear;power amplifiers;dissertation;ofdm;peak to average power ratio crest factor selected;linearization;cdma;memory effects;predistortion;signal to noise and distortion ratio	To my parents, and my wife Lin Sun. iii ACKNOWLEDGEMENTS I would like to express my gratitude to all whose direct and indirect support helped me complete my thesis. First, I would like to thank my advisor, Prof. G. Tong Zhou who has continuously supported my work and ideas throughout my studies at Georgia Institute of Technology. I appreciate her close guidance and great efforts to prepare me to become a mature researcher.		Hua Qian	2005			electronic engineering;signal-to-crosstalk ratio;telecommunications;control theory;mathematics	Vision	-87.53155427532595	-29.591624620055654	78078
6f4d7b7e8e0b5fef2779d8fb621f764d22b0ea0a	promoting diversity in computing		In this paper we present a pilot program at San Francisco State University, Promoting INclusivity in Computing (PINC), that is designed to achieve two goals simultaneously: (i) improving diversity in computing, and (ii) increasing computing literacy in data-intensive fields. To achieve these goals, the PINC program enrolls undergraduate students from non Computer Science (non-CS) fields, such as, Biology, that have become increasingly data-driven, and that traditionally attract diverse student population. PINC incorporates several well-established pedagogical practices, such as, cohort-based program structure, near-peer mentoring, and project-driven learning, to attract, retain, and successfully graduate a highly diverse and interdisciplinary student body. On successful completion of the program, students are awarded a minor in Computing Applications. Since its inception 18 months ago, 60 students have participated in this program. Of these 73% are women, and 51% are underrepresented minorities (URM). 74% of the participating students had nominal or no exposure to computer programming before PINC. Findings from student surveys show that majority of the PINC students now feel less intimidated about computer programming, and vividly see its utility and necessity. For several students, participation in the PINC program has already opened up career pathways (industry and academic summer internships) that were not available to them before.	align (company);computer programming;computer science;data-intensive computing;diversity in computing;structured programming	Anagha Kulkarni;Ilmi Yoon;Pleuni S. Pennings;Kazunori Okada;Carmen Domingo	2018		10.1145/3197091.3197145	computer science;medical education;knowledge management;internship;pinc;career pathways;literacy;underrepresented minority;computer programming;population	HCI	-79.2660017612013	-33.287305867745204	78084
ba1faabad741d4dbfbedf8185043b36f0c5753d3	mobile instant messaging used to provide support and advice to south african youth	mobile instant messaging mim;mixed methods triangulation;qa75 electronic computers computer science;he transportation and communications;mobile health m health call centres;mxit;drug advice support das;rlabs;community informatics	Drug Advice Support DAS, via mobile instant messaging originated in RLabs, South Africa. The question in this research was could DAS be scaled up in different geographical and ethnic areas in Cape Town? An investigation using mixed methods and triangulation of data sources compared performance and outcomes over five areas. Results showed that calls were classified into relationship, sex information and drug advice, There are statistical differences in outcomes across the five areas. It was discovered that some calls required intervention by statutory agencies. The research demonstrated that DAS can be used beyond RLabs if proper pre-requisites and training are put in place.	instant messaging	Marlon Parker;Julia Wills;Lucille Aanhuizen;Lester Gilbert;Gary B. Wills	2012	IJICTRDA	10.4018/jictrda.2012070102	public relations;telecommunications;marketing;multimedia;advertising	SE	-82.25759939712292	-24.490336374903833	78174
f5cb833fe2212aeddab8891eb3b979ebf0c285fb	implementing cs principles as a breadth-first survey course (abstract only)	non majors;survey course;cs principles;curriculum;breadth first;cs0	With the recent launch of AP CS Principles in 2016-17, many efforts are currently underway to share curriculum resources and prepare new teachers. The community has primarily focused on high school implementations, which have different situational factors than university courses (e.g., amount of class time). In this poster, we present the design of a survey course that aligns with CS Principles and also continues the long tradition of breadth-first introductions to computer science at the college level. We describe the instructional strategies, assessments, and curriculum details, providing a model for how to modify existing CS0 courses. We also outline twelve lab activities that support the computational thinking practices and learning objectives of the AP curriculum framework. All instructional materials including activities, labs, performance tasks, and rubrics are freely available on the course website: https://w3.cs.jmu.edu/cs101. Quizzes, solutions, and other materials are also available to instructors upon request. The course has run successfully for the past four years at two universities and three high schools via dual enrollment. Initial results suggest that the curriculum has a positive impact on student confidence levels and attitudes toward computer science.	ap computer science principles;breadth-first search;cs games;computational thinking	Chris Mayfield	2017		10.1145/3017680.3022411	curriculum;simulation;breadth-first search;computer science;software engineering;multimedia;pedagogy	AI	-79.40906087154784	-35.11195989894362	78324
9c0f736297b3a45e4ddf0424dc595978ab919d61	alternative ways of connecting it researchers with target public audiences	it personnel research;communicating it research;it research dissemination	PANEL SUMMARY There is a growing need for the CPR community to connect to a variety of public audiences in furtherance of communicating IT personnel research: students (K-12, undergraduate and graduate), parents, teachers, guidance counselors, practitioners, policy makers (others?). There are both practical and scholarly reasons why the CPR community would want to communicate its research results more broadly. The publication of our research in SIGMISCPR proceedings and the ACM digital library is not be the only effective way to reach our audience; many have no access to them. At the initial stages of planning any research study, we need to incorporate dissemination strategies. We need ask the following questions: Who are our target audiences and how are we going to reach them? Who will be responsible for the dissemination effort? What are our dissemination goals? What resources are available? Finally, did our dissemination effort produce the intended results?	digital library	Conrad Shayo;Eileen M. Trauth;Kate M. Kaiser;Frank Lin	2012		10.1145/2214091.2214122	public relations;knowledge management;political science;management science	HCI	-79.02019445708788	-30.20297334160269	78439
92bd067f50572caecc537db9b86469ebae9ef351	the european dictionary of skills and competencies (disco): an example of usage scenarios for ontologies			dictionary;ontology (information science)	Heidemarie Müller-Riedlhuber	2009			ontology (information science);competence (human resources);knowledge management;computer science	ML	-88.5236025642763	-30.064589129994964	78917
a645723732be625bf5b5c1868bc1c9f5a89f6398	educational business process model skills improvement		We found fundamental problems with the quality of business process models designed by students during education. Their design very often miss particular quality (from the business point of view). To ensure high quality of the designed process models opportunity should be given in order to use the mathematical expression’s qualitative characteristic of the process model (i.e. quality measures of the process model). To improve their knowledge, we are trying to find metrics for quality process measurement. These metrics must be able to influent the quality of the model. This quality is affected by the experiences and knowledge of the process designer, mainly students. That’s why the process creation is immediately followed by the quality control. The quality control shows if the modelled process models are created according to the expected quality. We develop the software to an educative tool to support a quality of designed process model. This tool serves as a very important educative tool for the teaching of the process modelling and to get feedback from students works. The goal of this paper is to describe how to improve the business process model educative skills, using quality measures of the process model.	business process;process modeling	Josef Pavlícek;Radek Hronza;Petra Pavlickova	2016		10.1007/978-3-319-49454-8_12	business analysis;knowledge management;process management;skills management;pedagogy	ML	-84.75128666429397	-33.54155162342235	78927
143b9114dd818c75654a3261c3054d567562ed3a	central hospital — master of resuscitation: an immersive learning approach	serious games;games training educational institutions hospitals program processors;on line gaming;pre and postgraduate lifetime education central hospital resuscitation master immersive learning approach medical knowledge healthcare professionals medical education medical training problem based learning student centered pedagogy medical instruction video games educational purposes stand clear online game based learning tool serious games concept casual games concept clinical simulation problem centered approach;training;hospitals;digital game based leearning medical education problem based learning serious games casual games on line gaming clinical simulation;medical computing;internet;medical computing biomedical education computer based training computer games digital simulation internet;games;computer based training;digital game based leearning;biomedical education;problem based learning;casual games;computer games;clinical simulation;program processors;medical education;digital simulation	Medical knowledge has increased exponentially in the last decades. Healthcare professionals face a life-time challenge in medical education right from the beginning of medical school. They experience serious difficulties to keep updated. Traditional adult education, largely used in medical training, shows little effectiveness. Problem-based-learning has been proposed as a student-centered pedagogy to overcome failure of traditional medical instruction. In recent years there has been a growing interest in using video games for educational purposes. Stand Clear is developing an on-line, game-based learning tool for medical education and training. These games combine the concepts of serious games with the concepts of casual games. By associating clinical simulation and a problem centered approach to whenever-wherever-availability, it will perfectly fit into what the authors believe will be the future of pre- and postgraduate lifetime education.	online and offline;simulation	Micaela Seemann Monteiro;Ana Sofia Corredoura;Fernanda Sande Candeias;Pedro Kaliambai David Morais;Jaime Hellmuth Diniz	2011	2011 IEEE 1st International Conference on Serious Games and Applications for Health (SeGAH)	10.1109/SeGAH.2011.6165438	simulation;computer science;knowledge management;multimedia	Vision	-78.11681768334965	-36.353908143470214	79116
de992e4297940c2fbc00da8fbc2c1f25ab4a8f10	internet-based distance learning: a multi-continental perspective	distance learning	~!~i~! ~ii iiiiii ~I~+I~ i ! i !ii i i Columnist Note The distance learning column in this issue compares and contrasts two applications of internet-based distance learning in computing. It also attempts to determine the general direction of distance learning and the global effects. The author has the perspective of teaching using two diistance learning approaches originating from two continents. ---Gordon Davies Computing Department Faculty of Mathematics and Computing The Open University Milton Keynes MK7 6AA UK <G.Davies@open.ac.uk>	internet;köppen climate classification	Dale Shaffer	2000	SIGCSE Bulletin	10.1145/369295.369314	distance education;computer science;synchronous learning	ML	-77.74839330416435	-32.09303379104054	79171
598f6bf89528180a5178b95b8eb09e9cb1555207	enhancing participation and education in cs through guided research projects in underserved communities	multidisciplinary team;guided research;internship education;distributed team;multidisciplinary teams;globally distributed team	While the needs and applications for computing technology have been growing, the enrollment and interest in Computer Science (CS) at the university level has not been growing in proportion. Moreover, the increasing prevalence of globalization requires a new set of skills for future technology leaders. These skills include the ability to work well in multidisciplinary and globally distributed teams, cross cultural boundaries with ease, create innovative solutions for problems that arise in unfamiliar settings, and think outside the box to solve a variety of problems while building effectively upon related work in the literature. These changes are also reflected in the growing interest among youth in global issues and how we can make a difference in underserved communities. This paper reports on our experience in designing and deploying an innovative internship that addresses these issues and seeks to enhance participation and education in CS through guided research projects in underserved communities.	computer science;futures studies;thinking outside the box	Yonina Cooper;M. Bernardine Dias;Ermine A. Teves;Sarah Belousov;M. Freddie Dias	2011		10.1145/1953163.1953324	simulation;knowledge management;pedagogy	HCI	-78.84019726659132	-28.148256529836893	79230
e363fd5a47606962afaecfd33bd130cd98d21012	decision support systems in academic planning: important considerations and issues	databases;administrative organization;educational quality;educational administration;enseignement superieur;predictive measurement;graduate level education;higher education;literature reviews;ensenanza superior;planificacion;decision support system;budgeting;decision support systems;planning;departments;information system;sistema de informacion;planification;educational planning;computer simulation;prediction;models;systeme information	Academic planning is becoming a very complex problem due to a variety of changes that have impacted the availability of funds for education. Some of these changes such as demographic shifts, social pressures and technological advances are external to the academic institution affected. These factors make planning increasingly important. This paper describes the use of technologically available tools to combat the problems faced in the planning activities at universities. It proposes the use of mathematical models and forecasting techniques to predict and therefore plan for change with enough leadtime so as to make these changes effective. This paper describes how administrators can allocate limited resources to where they are most effective. A model-based decision support system which is used by the decision-maker in planning and responding quickly to changes is presented. The system includes a number of alternative quantitative techniques that vary in complexity to suit the decision-maker’s needs of forecasting change before it happens so as to plan for it. The changes insure the requisite quality of graduates. The system also identifies popular software packages referred to as spreadsheets to evaluate “what if” scenarios of budgets and enrollments.	complexity;decision support system;desktop computer;game-maker;information system;mathematical model;microcomputer;spreadsheet;what if	Suleiman K. Kassicieh;John W. Nowak	1986	Inf. Process. Manage.	10.1016/0306-4573(86)90074-9	planning;decision support system;prediction;computer science;higher education;operations research;information system;statistics	AI	-87.57855098499091	-26.488567800925487	79255
e05a6af07d4a025fa1a86d424a70d369b1274db6	incidental and state-dependent phenomena in robot problem solving		Institute of Mathematics of the Academy of Sciences of the Czech Republic provides access to digitized documents strictly for personal use. Each copy of any part of this document must contain these Terms of use. This paper has been digitized, optimized for electronic delivery and stamped with digital signature within the project DML-CZ: The Czech Digital Mathematics Library An attempt at a unifying, formal, approach to robot problem solving is outlined. Various new ideas are presented and analyzed. Important among them are the concept of incidental pheno­ mena, which enables us to cope with side-effects of the robot's actions, and an approach dealing with objects identifiable only in certain specific situations.	academy;cr rao advanced institute of mathematics, statistics and computer science;data manipulation language;digital signature;haplogroup cz (mtdna);problem solving;robot	Olga Stepánková;Ivan M. Havel	1977	Kybernetika		mathematical optimization;computer science;artificial intelligence	AI	-90.39592109239189	-27.842946110069544	79326
07a505693086b7716c9ebff7867987bda18a1a1e	hci testing in laboratory or field settings		This paper presents perspectives from both academia and practice on how an HCI testing is to be conducted and the deliberations that go into the testing. HCI testing can be conducted in closed-door laboratory or in a field setting. While there is an increased interest in field testing of an HCI artifact, there is always an enduring concern over how to administer a field testing given that the testers will have less control over the course of testing. In this paper, we cover HCI testing deliberation as well as the operational issues of field testing, and conclude the paper with an exemplary case of a large-scale field testing conducted in Taiwan.	human–computer interaction	Chuan-Hoo Tan;Austin Silva;Rich Lee;Kan-Liang Wang;Fiona Fui-Hoon Nah	2016		10.1007/978-3-319-39399-5_11	systems engineering;simulation;engineering;deliberation	HCI	-81.60440780634515	-33.22171085128392	79428
8454086a26691d92de5a18fcd206d76b3829252f	a computer program to aid assignment of student project groups	group project;cs1;computer program;student project;computer science curriculum;karel the robot;group formation;cs2;group work;software tools;bloom s taxonomy;inside out pedagogy	Group projects are a valuable part of the computer science curriculum. Group work can be enhanced if formation of groups is not via self-selection by the students themselves. Students who are assigned to groups are more likely to be exposed to other students with different backgrounds and abilities from which they can learn new things. However in a university with students having a wide mix of schedules, a crucial aspect of successful group formation is compatible time-schedules within a group. This paper describes a computer program designed to aid assignment to groups while helping to ensure that groups have suitable outside-of-class meeting times.	computer program;computer science;schedule (computer science)	Michael A. Redmond	2001		10.1145/364447.364562	simulation;computer science	HCI	-80.22355997664157	-35.38239103852194	79441
8bf4238f561488f54064c51ad8c446fd383b07ae	web-based thermodynamics tables wizard	tecnologia electronica telecomunicaciones;psicologia y educacion;online thermodynamic tables;didacticas aplicadas;thermodynamics;tecnologias;grupo a	This paper presents the Web-based Thermodynamics Tables Wizard and how it can be used for online courses or web-teaching to accommodate the need of students at different levels in looking up thermodynamics properties. It can be used as a stand-alone study aid or an add-on component for any online Thermodynamics course. The implementation of this Web-based module has greatly enhanced the learning experience of students in the study of Thermodynamics. 2002 Wiley Periodicals, Inc. Comput Appl Eng Educ 10: 137–143, 2002; Published online in Wiley InterScience (www.interscience.wiley.com.); DOI 10.1002/cae.10022	add-ons for firefox;eng-tips forums;john d. wiley;world wide web	C. C. Ngo;F. C. Lai	2002	Comp. Applic. in Engineering Education	10.1002/cae.10022	computer science;electrical engineering;artificial intelligence;thermodynamics	Web+IR	-86.7459270734355	-37.862422835836306	79568
8106ff920cb82c6c85fc040634a7aed4095e499b	a pilot “big data” education modular curriculum for engineering graduate education: development and implementation		Engineering higher education increasingly produces data in the volume, variety, velocity, and need for veracity such that the output of the research is considered “Big Data”. While engineering faculty members do conceive of and direct the research producing this data, there may be gaps in faculty members' knowledge in training graduate and undergraduate research assistants in the management of Big Data. The project described herein details the development of a Big Data education module for a group of graduate researchers and undergraduate research assistants in Electrical and Computer Engineering. This project has the following objectives: to document and describe current data management practices; to identify gaps in knowledge that need to be addressed in order for research assistants to successfully manage Big Data; and to create curricular interventions to address these gaps. This paper details the motivation, relevant literature, research methodology, curricular intervention, and pilot presentation of the module. Results indicate that, generally, students involved in Big Data projects need comprehensive introduction to the topic, which will be most effective when contextualized to the work that they are performing in the research or classroom environment.	big data;computer engineering;velocity (software development);veracity	Megan Sapp Nelson;Line Pouchard	2017	2017 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2017.8190688	documentation;knowledge management;curriculum mapping;curriculum;engineering management;curriculum development;big data;data management;undergraduate research;higher education;engineering	DB	-80.79948081129048	-32.3146196712409	79889
e7b089f84d7f4c107ae7a552b7e8895199205ec9	cultural consensus analysis & citizen-centered e-government evaluation	design anthropology;ethnography;e government;culture;public libraries;quantitative method	"""The discrepancies between e-government users' observed and self-reported behaviors are explored here in relation to e-government evaluation and citizen-centered research. In this aim, a more ethnographic and empathetic approach that engages users is offered based on the literature of cultural anthropology. This article reports on 12 months of fieldwork, using qualitative and quantitative methods commonly found in cultural consensus analysis (CCA). The research focused on the experiences of applicants and employees at public libraries and NGOs in the US state of Florida who use an online application for food, medical and cash assistance known as """"ACCESS."""""""	cultural consensus theory;e-government;field research;library (computing);public library;web application	Marc K. Hébert	2012		10.1145/2132176.2132219	library science;public relations;social science;cultural analysis;political science	HCI	-82.04885871001878	-24.602507372256657	80079
c721c8a2e9e866cf3937958143fd97a29bf0b711	an evaluation of an online student portfolio for the development of engineering graduate attributes	graduate attributes;faculty of science environment engineering and technology;online portfolio;journal article;science technology and engineering curriculum and pedagogy;evaluation;assessment;130212	An online student portfolio was evaluated as a means for engaging students with the concept of graduate attributes, and for documenting student attainment of graduate attributes. Students rated the portfolio system as easy to use, and indicated that it helped them to appreciate the skills and knowledge they had developed.		Stuart R. Palmer;Dale M. Holt;Wayne Hall;Clive Ferguson	2011	Comp. Applic. in Engineering Education	10.1002/cae.20324	engineering management;engineering;evaluation;engineering physics;educational assessment;statistics	AI	-78.77950337711015	-37.30749207653927	80476
2f7c917780ebfcb03487a626ab7edd5ddf7f85b1	lego-based active learning exercises for teaching software development: (abstract only)		LEGO is a construction toy familiar to many students. Creating software, regardless of scale, is often similar to building with tangible objects, such as houses or bridges--an analogy that is often used in the classroom. In this workshop, we will show how to use LEGO bricks as a surrogate representing the lines of code, software objects, or other artifacts in the process of constructing software systems. LEGO-based analogies and case studies enacted as hands-on exercises for student teams help develop a better understanding of the underlying concepts, while keeping students deeply engaged in the course material. This workshop is intended for faculty teaching undergraduate and graduate courses focusing on software development, software engineering, and related concepts. This workshop will also benefit other educators looking for ways to supplement their courses with engaging and playful hands-on activities aimed to strengthen the teamwork, oral communication, problem solving, and design skills of students. We will practice several hands-on LEGO-based activities during the workshop. Specific topics of these activities will include change management and object-oriented interfaces, as well as activities specific to the phases of software development. Workshop participants will learn about other LEGO-based activities that focus on a broad range of topics including requirements engineering, architectural design, and software dependability. A laptop is not required for this workshop. This work is supported in part by the National Science Foundation Awards 1611905, 1709244 and a 2015 ACM SIGCSE Special Project grant. For more information visit http://www.cs.ccsu.edu/~stan/sigcse2018/	change management (engineering);dependability;hands-on computing;laptop;problem solving;requirement;requirements engineering;sigcse;software development;software engineering;software system;source lines of code	Stanislav Kurkovsky;Stephanie Ludi	2018		10.1145/3159450.3162357	multimedia;mathematics education;active learning;software system;computer science;software development;requirements engineering;software;teamwork;source lines of code;dependability	SE	-81.27727058771639	-34.08253296770777	80775
aa984f3ce67278df20d34f8efb7d748443c8d9ff	in at the deep end: an activity-led introduction to creative computing with interactive computer graphics	computer graphic	Misconceptions about the nature of the computing discipline(s) pose a serious problem to faculties that offer computing degrees, as students enrolling on their programmes come to realise that their expectations are not met by reality. This frequently results in the students’ early disengagement from the subject of their degrees which in turn can lead to excessive ‘wastage’, i.e. reduced retention. In this paper we report on our academic group’s attempts within creative computing degrees at a UK university to counter these problems through the introduction of a six week long project that newly enrolled students embark on at the very beginning of their studies. This group project provides a breadth-first, activity-led introduction to their chosen academic discipline, aiming to increase student engagement while providing a stimulating learning experience with the overall goal to increase retention. Having run in two iterations, we believe that this approach has been successful, with students showing increased interest in their chosen discipline and noticable improvements in retention following the first year of the students’ studies.	breadth-first search;computer graphics;iteration	Eike Falk Anderson;Christopher E. Peters;Fotis Liarokapis;John Halloran	2011		10.2312/EG2011/education/001-007	computing;interactive visualization;human–computer interaction;computer science;computer graphics lighting;real-time computer graphics;multimedia;graphics software;computer graphics;3d computer graphics;computer graphics (images)	HCI	-79.41393494971118	-35.54637555576835	80788
02af48b8abd3ff2219884a52e7d1537f8ab15628	assessing process and product - a practical lab exam for an introductory programming course	simulation;computer architecture;benchmarks;undergraduate teaching	Testing students' programming skills remains a challenge for courses that teach beginning programming. This paper describes the introduction of a laboratory final examination into a CS1 course. We present our approach to a lab final and present initial evidence indicating the effectiveness of the lab final. We also describe the problems encountered and solutions to those problems, which may benefit others interested in instituting a similar exam.		Mary Elaine Califf;Mary Goodwin	2002	Proceedings. Frontiers in Education. 36th Annual Conference	10.1145/563340.563425	simulation;computer science;multimedia	PL	-80.92979565290214	-35.98592717831092	81227
a5a5b0e8ef3ae163f3bfb03df00dc8c26ec730ee	"""collaboratives tools for the main actors of a university the first step to a """"shared and broadcast information"""" culture"""	broadcast information;main actor;collaboratives tool	The Pierre Mendès France University (Social Sciences, Grenoble, France) is setting-up an intranet intended for three kinds of users : students, teachers and staff. It will provide them with informations and services that fit their needs : information broadcast, shared documents and resources, cooperative spaces. Better than launching a huge and heavy project for analyzing all the needs and all the processes in the university (1500 teachers and staff, 19000 students), we chose to start several small projects with a strong addedvalue based on motivated actors.	intranet	Thierry Aguéda	2001				Web+IR	-77.57367362286472	-30.94500291485084	81460
ee933809681bebd462b82f63ffb940d2ce865a8e	sigcse special project grants	clear benefit;sigcse special project grant;good practice;sigcse board;next round;new knowledge;special project grants;computing education community	Since 2003, SIGCSE has awarded a limited number of Special Projects Grants each year. These grants help SIGCSE members investigate and introduce new ideas in the learning and teaching of computing. Projects must provide some clear benefit to the wider disciplinary community in the form of new knowledge, developing or sharing of a resource, or good practice in learning, teaching, or assessment. The next deadline for submissions is November 15, 2016. See http://sigcse.org/sigcse/programs/special/ for additional information. Questions are welcome and should be sent to apply@sigcse.org. Proposers must be ACM/SIGCSE members.	sigcse	Sue Fitzgerald	2016	SIGCSE Bulletin	10.1145/2993223.2993224	knowledge management;engineering management;computer science	NLP	-79.81106940888964	-30.99377459305362	81607
9a91c0e219ba3355d03bc60de0d377656acdd9b3	modelo de inferencia difuso para clasificación de estilos de aprendizaje con base en el test de honey-alonso		For Higher Education Institutions is fundamental to improve their students’ academic achievement level by offering them attention and support services. At the Technological Institute of Tlalnepantla, Mexico, programs of personalized attention preparing academic tutors have been implanted. So far, a problem without a total	naruto shippuden: clash of ninja revolution 3;personalization	Alvaro de Reza Estrada;Sandra Silvia Roblero Aguilar;Héctor Rafael Orozco-Aguirre;Saturnino Job Morales Escobar	2017	Research in Computing Science			ML	-88.09295011833645	-32.08493028249139	81842
529ca7c6ac6afd5d5669e625038747288c4bd567	anatomy of a tone: a highly functional web-based interactive learning module	experiential learning;anatomy frequency music timbre educational technology collaboration computer science education keyboards project management technology planning;project manager;acoustics;distance learning;instructional design;acoustics engineering education educational courses teaching distance learning internet;internet;artists anatomy of a tone web based interactive learning module usa university content development instructional design embedded learning module nsf national science foundation science teaching multimedia studies;design and implementation;educational courses;engineering education;national science foundation;interactive learning;educational technology;teaching	Northeastern University’s Education Technology Advisory Committee (ETAC) consists of faculty who are specialists in bridging the gap between content development and instructional design. “Why does the note ‘A’ sound different on a flute compared to a violin?” is an interactive learning module that tackles the elusive concept of musical timbre. This is an example of an Embedded Learning Module (ELMO) that recently received a NSF (National Science Foundation) grant to explore a variety of methods to break down the barriers to teaching science to artists. Issues of planning, design, effective project management, interdisciplinary methodology and the integration of media are discussed, and the finished project presented. Anatomy of a Tone demonstrates an effective collaboration between students in Northeastern’s flagship multimedia studies program, faculty mentors, experiential learning and successful integration of content development and instructional design, the result of a 20-week long planning, design and implementation project. Anatomy of a Tone may be viewed at: http://elmo.neu.edu/elmo_html/demos/beta music.html. Planning, Implementation and Design The Multimedia Studies program is a state-of-the-art dual major combining skills in music technology, animation, graphic design and digital imaging at Northeastern University in Boston. Students attend for five years, and work on the job (called “co-op”) for up to eighteen months prior to graduating. As seniors, these students must complete a 20-week long experiential capstone program in order to satisfy their graduation requirements. Anatomy of a Tone is an interactive learning module based on current research in educational technology and learning behavior. It seeks to teach a complex and abstract concept via a series of integrative text -sound-image steps that allow the user (learner) to fuse difficult concepts in a manner that is extremely difficult to do in a lecture based setting. It is the process of student self-discovery that is investigated in this project. Students, or any successful instructional designer, must collaborate with experts in the field they are illustrating. In order to understand the concept of timbre, the instructional designer is challenged to illustrate supportive scientific concepts such as wave properties, vibration, amplitude, wavelength and frequency. Proceedings of the International Conference on Computers in Education (ICCE’02) 0-7695-1509-6/02 $17.00 © 2002 IEEE Interactive Functionality Two of the most effective interactive pages of Anatomy of a Tone are the “Frequency as Pitch” and “Qualities of Timbre” modules.	bridging (networking);capstone (cryptography);digital imaging;embedded system;ibm notes;interactivity;music technology;planning;requirement;web content development	Anthony Paul De Ritis	2002		10.1109/CIE.2002.1185864	distance education;educational technology;the internet;simulation;engineering education;human–computer interaction;computer science;engineering;electrical engineering;experiential learning;instructional design;multimedia;pedagogy	HCI	-78.93725367177865	-34.25968630728164	82168
a85c96fff6451218f95122b480bdd3e6e0383e5f	learning along with your students: projects from the graduate diploma of computer education		This Chapter deals with the early development of Computer Education for teachers in Victoria, Australia, through a set of Research and Development (Ru0026D) Projects that formed a large part of a Graduate Diploma in Computer Education (GDCE) at Melbourne State College, later part of The University of Melbourne. The early years of the GDCE, coincident as they were with the advent of the microprocessor and the desktop computer, reflected and indeed influenced the development of Computer Education in Victorian schools. The Projects provide an informative insight into the teachers Professional Development in Information Technology, the state of educational computing, and the uses to which computers were being put in Victorian schools in the 1980s and early 90s.	diploma	John S. Murnane	2014		10.1007/978-3-642-55119-2_3	engineering management;medical education;pedagogy	HCI	-78.92391955784434	-31.816758220038377	82228
7fefa2e08e1f9396b948440faa1a0e13f4c55ec0	web-based laboratories in the introductory curriculum enhance formal methods	parallel computing;new technology;programming environment;online material;formal method;visualization;world wide web;laboratory;formal analysis;experimental measurement;object oriented paradigm	"""In order to be effective, the content of the introductory curriculum must strike a proper balance between the highly motivating (i.e. """"fun"""") aspects of programming and the development of sound scientific background and analytical thinking. As part of an NSF-funded Education Infrastructure project at Oberlin College, we have developed a curriculum that maintains a high level of scientific rigor, while making use of the new technology of HTML and the World Wide Web to instruct and motivate. We provide our students with an integrated experience which includes web-based guided-study laboratory materials, an interactive programming environment and a syllabus which emphasizes the interplay between abstract and formal concepts on the one hand, and concrete implementations and experimental investigations on the other. Scheme is used as the primary programming environment, to illustrate the salient features of the imperative and the object-oriented paradigms, along with the functional paradigm with which it is usually associated. We believe that our approach: 1) revitalizes the material for students who expect a more modern presentation; 2) provides a balanced view of competing perspectives on programming style and methodology; and 3) provides a well-balanced mixture of formal analysis and experimental measurement.In order to produce laboratory materials without the overhead entailed by creating them directly in HTML, we have developed a tool capable of abstracting the functionality and style of HTML documents; thus we can engage both faculty and student authors in the development of laboratories with a uniform style. The very tools used to develop the online materials are themselves an excellent illustration of the empowerment which results from a thorough understanding of the principles of abstraction."""	formal methods;functional programming;html;high-level programming language;ibm notes;imperative programming;integrated development environment;interactive programming;overhead (computing);programming paradigm;programming style;web application;world wide web	Rhys Price Jones;Fritz Ruehr;Richard M. Salter	1996		10.1145/236452.236531	simulation;formal methods;visualization;computer science;software engineering;multimedia;programming language;laboratory	PL	-81.96287688174263	-36.1899973874244	82752
3fef1fb960f1c1e04435bf4f991039f39c72d32e	using an isolated network laboratory to teach advanced networks and security	cs1;network security;active learning;karel the robot;computer security;cs2;software tools;bloom s taxonomy;inside out pedagogy;role play	This paper discusses the use of an isolated network laboratory to teach computer security using persistent cooperative groups and an active learning approach. Computer security and computer security education are areas of increasing importance as computer systems become more interconnected. When offered, undergraduate and graduate computer security courses are routinely taught using a traditional lecture format. If the course includes a class project, the class project is limited in scope and constitutes a relatively small portion of the student's grade. This paper examines a different approach in which the class project is the dominant factor in the student's grade. The students work in persistent cooperative teams as either a black or gold team. Black teams attempt to break into other black team computers or attack the gold team. The gold team operates Windows NT, LINUX, and Solaris-based servers and attempts to defend their servers and role-play system administrators. The entire exercise takes place in an isolated lab so as to separate student class activities from the rest of the departmental intranet. Four years of experience running the class with this format suggests that the use of persistent cooperative groups and active learning are effective approaches for teaching network security and are preferred over a lecture-based course.	computer security;intranet;linux;network security;system administrator;windows nt	John M. D. Hill;Curtis A. Carver;Jeffrey W. Humphries;Udo W. Pooch	2001		10.1145/364447.364533	simulation;computer science;network security;software engineering;multimedia;active learning;world wide web	Security	-81.13538103558513	-28.393117031727385	82793
326213a484e92791c55669313e06bd66fd50e488	problems in choosing tools and methods for teaching programming	needs assessment;teaching models;educational practices;educational principles;design requirements;integrated activities;higher education;labor market;barriers;media selection;educational environment;foreign countries;fundamental concepts;performance factors;educational technology;programming;selection criteria;teaching methods;instructional material evaluation;student needs;delivery systems;programming languages	The paper analyses the problems in selecting and integrating tools for delivering basic programming knowledge at the university level. Discussion and analysis of teaching the programming disciplines, the main principles of study programme design, requirements for teaching tools, methods and corresponding languages is presented, based on literature overview and author‘s experience. A pressure from labor market, students and other sources to emphasize practical skills over deeper, long-term programming concepts is described. A model of teaching introductory programming disciplines at a higher logical level, using C#, is presented as a summary of the accomplished analysis, and also taking into account the recommendations of the ACM (Association for Computing Machinery) association for typical teaching programs. Also, design principles for building introductory programming courses, aligned with such teaching approach, are presented. This model has already been trialed at Vytautas Magnus University.	basic programming;computer programming;java;organizing (structure);programming language;programming paradigm;requirement;software engineering;structured programming	Daiva Vitkute-Adzgauskiene;Antanas Vidziunas	2012	Informatics in Education		mathematics education;computer science;pedagogy	PL	-80.55703963175696	-34.670538534285456	82871
681012d3b42266400be00839d2c698f0b74eab4b	msis 2006 curriculum preview		The MSIS 2000 curriculum is now over 5 years old. That curriculum (the first revision for the MS program since 1982) was widely adopted by IS departments throughout the world. A committee established jointly by AIS and ACM started working in summer 2003 on revising and updating the MS curriculum based on the experience of the adopting schools. The work is nearing completion. This paper describes the state of the revisions as of April 2005.		John T. Gorgone;Paul Gray;Edward A. Stohr;Rolf T. Wigand;Joseph S. Valacich	2005	CAIS		engineering;curriculum;medical education;knowledge management;first revision	AI	-79.3579117222508	-30.409820120748495	82942
8fc60a7489b76641ceee5da9180a3ca76b18560d	ai fairness for people with disabilities: point of view		We consider how fair treatment in society for people with disabilities might be impacted by the rise in the use of artificial intelligence, and especially machine learning methods. We argue that fairness for people with disabilities is different to fairness for other protected attributes such as age, gender or race. One major difference is the extreme diversity of ways disabilities manifest, and people adapt. Secondly, disability information is highly sensitive and not always shared, precisely because of the potential for discrimination. Given these differences, we explore definitions of fairness and how well they work in the disability space. Finally, we suggest ways of approaching fairness for people with disabilities in AI applications.	applications of artificial intelligence;edge case;fairness measure;machine learning;manifest (transportation);point of view (computer hardware company);population;race condition;scientific literature	Shari Trewin	2018	CoRR			HCI	-84.5560032913435	-24.278087228677204	82975
7e3553709c09da6473ff6abb5da1b83a1c0571a0	the technologist's guide to setting up an eldercare field study		One problem facing researchers trying to find technology solutions for eldercare is how to create a successful field study. Many interesting care solutions are being developed, but few have had successful field trials. In this paper, we describe some of the issues to consider when designing a field study so it will be relevantto the community and provide valid results. We discuss how to select a problem that will impact the community, how to ensure that the data you collect can be used, and how to select, recruit, and retain subjects.	cardiovascular technologist;field research;solutions	Karen Zita Haigh;Liana Maria Kiff;Kathleen E. Krichbaum;Janet Wuorenma	2005			management science;machine learning;find technology;computer science;artificial intelligence	HCI	-78.92653966123618	-27.669518481101566	82994
7b3f6c571a68b14b8263fa6f50b51efe503551c9	function probe	function probe	OUR goal in designing Function Probe was to encourage students to enter advanced mathematical thinking by using a tool built for them to investigate and model phenomena using mathematical functions. The software was designed to be used in courses on algebra, trigonometry, and precalculus starting from 14-to-18-year-old students and undergraduate college instruction. It has also proved effective in enhancing secondary teachers’ understanding of these topics.		Jere Confrey;Alan Maloney	1996	Commun. ACM	10.1145/232014.232036	theoretical computer science;computer science	HCI	-84.46624162806538	-37.27098080424417	83421
c85a991a56fc3f0211a0be5daa858395d4ed8f8b	using open-source robocode as a java programming assignment	learning experience;java programming;robocode;insights and surprises;java;open source	This paper is a teacher-researcher's reflection upon the use of open-source Robocode as a Java programming assignment. Following the educational perspectives of Parker Palmer and Elliot Eisner, it is a qualitative inquiry into the learning experiences of the students as well as the inner journey of a teacher. The design of the assignment may be validated by the ITiCSE 2007 Working Group's matrix taxonomy.	experience;java;open-source software;programming game	Peter L. Liu	2008	SIGCSE Bulletin	10.1145/1473195.1473222	real-time computing;computer science;software engineering;real time java;programming language;java	HCI	-82.8692087592451	-37.730109472675764	83666
66a4b6b42ba7fd013f48be6e8e3362d4ac55b2f6	experiences teaching a course in android game development		A one-semester undergraduate course in Android game development is described. The course has been taught six times at two different universities. We describe our experiences and lessons learned so far. Student feedback has shown the course to be popular and an important component in students’ graduation portfolios, enabling many to get jobs immediately after graduation. Local industry has also responded well and has helped drive the outcomes of the course to some extent.	android software development;experience;video game development	Timothy E. Roden;Rob LeGrand	2014			simulation;android (operating system);multimedia;human–computer interaction;computer science;video game development	OS	-82.2485037544984	-35.7758600185924	84342
98019d8c133ef796e66065984f7c99fa5f5f35d3	teaching note - some practical issues with excel solver: lessons for students and instructors	model assumptions;excel solver;sensitivity analysis;spreadsheet implementation	Spreadsheets have become the principal software application for teaching decision models in most business schools. In particular, Excel Solver is used extensively for solving and analyzing optimization models. However, there are a number of important issues in using Solver of which many users are unaware. These include the impact of spreadsheet design and cell formatting on Solver reports, handling of lower and upper bound constraints, and dealing with the implications of implicit assumptions in spreadsheet models when interpreting Solver sensitivity reports. Students and instructors, as well as most popular textbooks, rarely pay sufficient attention to these issues. This article summarizes these important issues, provides guidelines for avoiding problems, and offers examples that can be incorporated into the classroom.	linear programming;mathematical optimization;problem solving;recommender system;solver;spreadsheet	James R. Evans	2008	INFORMS Trans. Education	10.1287/ited.1070.0006	computational science;simulation;computer science;mathematics;sensitivity analysis;statistics	AI	-87.84056443035554	-37.654933534101	84505
2f5398411918b72c093f469ec686437e84f8088d	we claim this class for computer science: a non-mathematician's discrete structures course	discrete mathematics;discrete mathematics curriculum	We have recently launched a reorganized discrete structures course being taught in the computer science department for computer science majors. The main idea of the reorganization is to make the course relevant and productive for the computer science students. During the Spring of 2003, students who were taking both discrete structures and CS2 commented that taking both courses at the same time was helpful. An empirical investigation was conducted to see if there was a benefit to students taking both courses concurrently. The results show that there was a benefit to students taking both courses. The students who were taking both courses were performing better in discrete structures than those students who were not.	computer science;discrete mathematics	Adrienne Decker;Phil Ventura	2004		10.1145/971300.971448	simulation;computer science	Logic	-80.26080466802578	-30.866297058285046	84513
40046fb3a6d4ac6934cc7dcba1c79bbf22d18d54	serious games education for working life needs - a pilot study		Serious games possess huge market opportunities and offer possible solutions for various real-life challenges in different fields of businesses. Although the potential of serious games is well recognized, the educational and training possibilities in the field are scarce. Through cooperation and multiform learning solutions, the lack of education particularly around serious games could be filled in to answer the requirements of the future job descriptions. This paper presents results of student feedback (n=27) around a pilot study of a serious games course that bases on the survey of actual working life needs (company interviews) and was designed to bring closer the substance experts and the game development experts.	real life;requirement;video game development	Chen Meng;Teija Ravelin;Lars-Daniel Ohman;Pauliina Tuomi;Sari Merilampi;Andrew Sirkka	2017				HCI	-77.84152379452514	-36.84430681208593	84637
06cfe8652755414dd85695ec6f6d8816fb70c7b1	a fundamentals-based curriculum for first year computer science	programming evaluation;first year;programming ability;collaborative learning;student perception;introductory computer science	At Wits we are concerned about offering a good computer science degree but at the same time making our degree programme accessible to all students who have the potential or ability to cope with the material. This paper discusses a new first year curriculum which has been developed to address some of the problems which the course that we offered from 1990 to 1998, with minimal changes, has begun to encounter. The most important of these problems is that of student perceptions of our old course. The new course stresses fundamentals of computer science and is structured around teaching basic principles and competencies.	computer science	Ian Douglas Sanders;Conrad Mueller	2000		10.1145/330908.331860	collaborative learning;computer science;ap computer science;pedagogy	Theory	-79.01611732558531	-35.94282838101565	84682
f431699ede6e15f7d63cc4f6c80b4bf162b8e255	multimode solution for the reflection properties of an open-ended rectangular waveguide radiating into a dielectric half-space: the forward and inverse problems	nondestructive dielectric material evaluation;infinite half space;dominant mode field distribution;boundary conditions;tm higher order modes;dielectric half space;frequency of operation multimode solution reflection properties open ended rectangular waveguide dielectric half space inverse problems nondestructive dielectric material evaluation infinite half space waveguide aperture reflection coefficient dominant mode field distribution permittivity dielectric properties upper frequency portion evanescent higher order modes dominant mode basis functions fourier analysis boundary conditions te higher order modes tm higher order modes;permittivity measurement;dielectric constant;indexing terms;frequency of operation;multimode solution;dielectric measurement;te higher order modes;reflection properties;low loss;waveguide theory;dominant mode;higher order mode;inverse problem;boundary condition;microwave measurement;dielectric loss measurement;nondestructive testing rectangular waveguides microwave measurement dielectric measurement inverse problems permittivity fourier analysis;basis functions;evanescent higher order modes;waveguide aperture;fourier analysis;upper frequency portion;dielectric materials;dielectric measurements;dielectric properties;frequency;extraterrestrial measurements;reflection apertures dielectric materials dielectric loss measurement frequency dielectric measurements permittivity measurement rectangular waveguides extraterrestrial measurements waveguide theory;reflection coefficient;reflection;rectangular waveguides;apertures;nondestructive testing;inverse problems;permittivity;open ended rectangular waveguide	S ection chiefs and department chairs are often recruited for leadership positions as external candidates. These leaders try to adapt to increased responsibility while trying to understand an unfamiliar organization. Established leaders may also find their own familiar organization changing, either intentionally or unintentionally. These all can be considered examples of transitional leadership. Section chiefs, such as a neuroradiology section chief, may step into a position requiring strategic direction setting, service schedule formulation and maintenance, professional development of their sectional faculty, and interfacing with non-neuroradiologists where policy and process are concerned. Department chairs will often be responsible for the same responsibilities on an expanded departmental rather than sectional scale, in addition to having greater budgetary and financial responsibilities. New section heads may be challenged by the increased responsibility they face where scheduling and the professional development of others are concerned, typically not having had to bear such responsibilities. In such cases, new section heads may need to learn about new domains of knowledge such as mentoring systems and approaches. New department chairs similarly need to learn about a new and expanded domain of financial management, in addition to assuming responsibility for strategy setting in areas that they may be unfamiliar with. A department chair who is a neuroradiologist still assumes responsibility for the institutional strategy where musculoskeletal imaging is concerned, necessitating effective and expanded delegation. Delegation itself is an essential task for leaders who may have received little formal attention in new leaders’ preceding posts. Promotions in the case of both section chiefs and department chairs can happen internally or externally. An individual promoted internally may be seen as being given systemic endorsement for an existing strategy and culture, whereas new imported leaders may believe they carry a more substantial change mandate. Similarly, an internal promotion may be seen as undervalued and therefore securing a lesser recruitment package. Presumably, an outsider in most instances necessitates a higher minimum activation energy than an insider to motivate the outside candidate’s move to a new institution and possibly a new geographic location. To an even greater degree, a temporary or ad interim position is considered limited in negotiating ability, because the negotiation position is even weaker than a permanent internal candidate. Acad Radiol 2017; ■:■■–■■	geographic coordinate system;introspection;mike lesser;nonlinear gameplay;scheduling (computing)	Karl J. Bois;Aaron D. Benally;Reza Zoughi	1999	IEEE Trans. Instrumentation and Measurement	10.1109/19.816127	electronic engineering;inverse problem;waveguide;optics;physics;dielectric	AI	-90.63912785324092	-26.1156948457632	85303
3d26bbe537209a717b49106f6b8ab54ef1d65d7c	scaling: a design pattern in introductory computer science courses	first year;design technique;teaching techniques;introductory courses;introductory computer science;design pattern;large courses;course management	We present a series of programming exercises that use scaling as a theme for teaching design techniques in the introductory computer science course sequence. All exercises are on the level easily mastered in the first year of programming. Additionally, the exercises introduce a rich variety of applications of computer science.	computer science;image scaling;software design pattern	Harriet J. Fell;Viera K. Proulx;Richard Rasala	1998		10.1145/273133.274323	computer science;teaching method;design pattern;programming language	Theory	-82.22707143653376	-37.235479130784235	85324
fcb00b67adf7269022506ea142ef84bce08f963c	the innovative practice system of bme program at zhejiang university	teaching biomedical education educational institutions teacher training;laboratory team;technological innovation;education biomedical engineering design engineering technological innovation production systems knowledge engineering educational programs biomedical measurements systems engineering and theory manufacturing processes;training;student creativity;construction industry;hospitals;practice platform;experimental devices;biomedical engineering;zhejiang university innovative practice system practice teaching undergraduates student creativity comprehensive education practice platform practice content experimental devices laboratory team biomedical engineering program;practice teaching;education for all;teacher training;biomedical engineering program;practice content;innovative practice system;comprehensive education;biomedical education;zhejiang university;undergraduates;teaching	Practice teaching is a key form of teaching for the undergraduates and plays an important role in training the student’s creativity and comprehensive education for all-round development. The practice teaching involved practice teaching system, practice platform, practice content, experimental devices, the laboratory team and practical teaching base is completely explored in this paper, which constructs the innovative practice system of Biomedical Engineering program for undergraduates at Zhejiang University. Keywords-Biomedical Engineering program; Practice teaching system; Practice platform construction; practical teaching base.	microsoft outlook for mac	Shunren Xia;Hang Chen;Huilong Duan;Xiaoxiang Zheng	2009	2009 2nd International Conference on Biomedical Engineering and Informatics	10.1109/BMEI.2009.5304920	education;medical education;construction	SE	-83.6474047072632	-32.4964563304	85388
85b778d24c61a2b1be3eba01f075035d43966ce7	supercomputing in plain english: teaching cyberinfrastructure to computing novices	parallel computing;inexperienced programmers;parallel computer;scientific programming;english teaching;education research	"""The field of Cyberinfrastructure (CI) has experienced rapid and exciting progress in enabling technologies, but much slower improvements in application codes, largely because of the ongoing disconnect between the CI and application research communities. At the University of Oklahoma, the OU Supercomputing Center for Education & Research (OSCER) is addressing this issue using a multipronged pedagogical strategy that combines workshops, tours, question-and-answer and """"rounds"""" (one-on-one interactions), with minimal jargon, using storytelling and analogies to capture the essential properties of Cyberinfrastructure."""	acm/ieee supercomputing conference;code;cyberinfrastructure;essence;interaction;jargon;organizational unit (computing);supercomputer	Henry Neeman;Horst Severini;Dee Wu	2008	SIGCSE Bulletin	10.1145/1383602.1383628	simulation;human–computer interaction;computer science;software engineering;programming language	HCI	-80.49040039315972	-34.1927887994216	85395
cc3739fc3b4e1eb1825c4552dc40f17f95c60139	social desirability responding on world wide web and paper-administered surveys	world wide web;questionnaires;higher education	Social desirability responding (SDR) on surveys administered on the World Wide Web and on paper was examined, with 178 graduate and undergraduate students as participants. To assess the extent to which participants would demonstrate SDR, this study used the Balanced Inventory of Desirable Responding (BIDR) (Paulhus, 1993). The BIDR consists of 40 items states as propositions. Respondents rate their agreement with each statement on a seven-point scale. Using a true experimental design, the study examined the impact of two independent variables, the participants' identifiability level (anonymous and non-anonymous) and the survey's administration mode (World Wide Web-administered and paper-administered), on one dependent variable, the participants' social desirability response levels measured by the BIDR. Findings reveal no differences in SDR between the Web and the paper-administered survey conditions, and no differences in SDR between the anonymous and non-anonymous conditions. These findings and potential explanations are examined for consideration by anyone interested in using the Web to obtain accurate information from survey participants. (Contains 35	design of experiments;etsi satellite digital radio;world wide web	Dawson Hancock;Claudia Flowers	2000			world wide web;multimedia;higher education;business	HCI	-86.11897185801952	-25.026241387634983	85685
4523658bd1d0e4fde295edf6074091ea898825b8	structure, scoring and purpose of computing competitions	informatics olympiad;algorithm contest;programming contest	We identify aspects of computing competition formats as they relate to the purpose of these competitions, both stated and tacit. We consider the major international competitions – the International Olympiad for Informatics, the ACM International Collegiate Programming Contest, and top coder – and related contests whose format merits consideration. We consider the operational impact and possible outcomes of incorporating several of these aspects into scholastic competitions. We advocate, in particular, that contests be designed so as to provide a rewarding experience and opportunity for achievement for all competitors; not just the winners. Specific contest elements that should be considered are: (1) real-time scoring and feedback, (2) rewards for testing and test case creation, (3) tasks with graduated difficulty, (4) collaborative tasks, (5) practice contests and entry-level contests for novices, and (6) inclusion of spectators.	acm international collegiate programming contest;international olympiad in informatics;real-time clock;test case	Gordon V. Cormack;J. Ian Munro;Troy Vasiga;Graeme Kemkes	2006	Informatics in Education		simulation;engineering;artificial intelligence;operations management	SE	-81.61742605894658	-31.075582361718013	85909
1af6bd92b7df0044c29153901953a4753c38e6d2	storytelling alice motivates middle school girls to learn computer programming	computer program;3d animation;programming environments;programming environment;alice;gender;computer science education;children;motivation;learning to program;programming	We describe Storytelling Alice, a programming environment that introduces middle school girls to computer programming as a means to the end of creating 3D animated stories. Storytelling Alice supports story creation by providing 1) a set of high-level animations, that support the use of social characters who can interact with one another, 2) a collection of 3D characters and scenery designed to spark story ideas, and 3) a tutorial that introduces users to writing Alice programs using story-based examples. In a study comparing girls' experiences learning to program using Storytelling Alice and a version of Alice without storytelling support (Generic Alice), we found that users of Storytelling Alice and Generic Alice were equally successful at learning basic programming constructs. Participants found Storytelling Alice and Generic Alice equally easy to use and entertaining. Users of Storytelling Alice were more motivated to program; they spent 42% more time programming, were more than 3 times as likely to sneak extra time to work on their programs, and expressed stronger interest in future use of Alice than users of Generic Alice.	alice;basic programming;computer animation;computer programming;experience;high- and low-level;integrated development environment	Caitlin Kelleher;Randy F. Pausch;Sara B. Kiesler	2007		10.1145/1240624.1240844	programming;simulation;motivation;human–computer interaction;computer science;computer animation;multimedia;management;computer graphics (images)	HCI	-82.47231537772639	-37.37062171239521	85957
4ab90346264f0f0b6483d6ab3c21c54ef4cfbced	harmonizing abet accreditation and the certification of systems engineers	accreditation of systems engineers;abet;certification of systems engineers	The ever-increasing complexity of technology-based systems that are conceived, designed, constructed, operated and maintained, and managed places heavy civic and professional responsibilities on engineers of all disciplines. Furthermore, the ubiquitous involvement of systems engineers in almost every sector of the economy and in government attests to the growing recognition of their pivotal contributions to systems' safety and effectiveness. For example, the expertise of systems engineers is commonly required in the planning, design, testing, operation, and maintenance of most physical and cyber-based infrastructures (e.g., transportation, telecommunication, and electric power). This paper explores the needs, requirements, and challenges associated with the academic-baccalaureate and professional certification of systems engineers, given the breadth and depth required of them, and especially the specific domain knowledge and expertise required to supplement their competence in systems engineering. The authors of this paper take no position on the repeated reference made by several certification organizations to the requirement of being a licensed professional engineer (PE). Finally, a closer partnership between ABET and the two major professional societies—INCOSE and the IEEE—would enable us to reach agreement on what constitutes a Body of Knowledge (BoK) in systems engineering at the baccalaureate level, which would provide an invaluable benchmark to colleges and universities that offer such degrees. The joint initiative by ABET and the two societies would (a) harmonize and solidify the specific requirements for the accreditation of systems engineering programs in colleges and universities in the United States and abroad, and (b) guide the development of BoK requirements for any certification of systems engineers beyond the baccalaureate level. © 2010 Wiley Periodicals, Inc. Syst Eng 14 © 2011 Wiley Periodicals, Inc.	systems engineering	Clyde Chittister;Yacov Y. Haimes	2011	Systems Engineering	10.1002/sys.20176	engineering management;systems engineering;engineering;software engineering;certification and accreditation;management;mechanical engineering	SE	-77.92018340420215	-29.42865862665628	86517
0dd862ba1bc1d496958f780063498a53487cda1b	predict dem bones!	bin packing problem;higher education;computer science education;computer assisted instruction;games;algorithms;computer software;programming;data structure;prediction;puzzles;problem solving	IN A COLLEGE LEVEL DATA STRUCTURES or Algorithms course, students are often asked to write computer-based solutions to a variety of problems. When discussing trees and tree traversals, the topic of backtracking as a programming technique often arises. Certain classics, such as the 8-queens problems, graph-map coloring problem, or knapsack-bin packing problem are often used to elucidate the topic. The author presents a detailed analysis and computer-based solution of a puzzle addressing the arrangement of dominioes on a grid. Like its more famous brethren, the solution makes use of backtracking to generate all possible answer to the problem. Details of how to approach the analysis of a problem requiring backtracking as well as methods and techniques that can be used to map the abstract problem solution into an actual C program code are presented.		John S. Gray	1994	J. Computing in Higher Education	10.1007/BF03035481	games;programming;bin packing problem;data structure;prediction;computer science;theoretical computer science;mathematics;higher education;algorithm	HPC	-84.05123302794141	-37.57102945583439	86564
f6bdadfdfac629bc561211021b96809592db5732	what does squeak provide students with?--- a comparative study of squeak etoy and excel vba as tools for problem-solving learning in high school---	horikawa high school squeak etoy excel vba problem solving learning high school education information science education computer programming programming environments;computer program;horikawa high school;programming environments;programming environments computer aided instruction information science education programming;programming environment;computer aided instruction;information science education;informing science;problem solving information science educational institutions educational programs computer science education programming profession programming environments seminars informatics computer simulation;high school education;computer programming;high school;excel vba;problem based learning;problem solving learning;programming;problem solving;student achievement;squeak etoy	We have designed a problem-based learning (PEL) curriculum called ISEC-SeT, which is designed for information science education in high schools using computer programming as a tool for problem solving. We adopted Squeak eToy and Excel VBA as programming environments for the PBL, and have practiced ISEC-SeT at Horikawa High School in Kyoto, Japan, from October 2004 to September 2005. Evaluation by teachers and students focused on the students' presentations and essays on the projects shows that the students achieved problem solving abilities through the curriculum and that Squeak eToy provides them with a better environment for PBL than Excel VBA.	computer programming;information science;problem solving;squeak;visual basic for applications	Takeshi Fujioka;Hideyuki Takada;Hajime Kita	2006	Fourth International Conference on Creating, Connecting and Collaborating through Computing (C5'06)	10.1109/C5.2006.43	programming;simulation;human–computer interaction;computer science;computer programming;programming language;management	HCI	-81.84137195709567	-37.13569420105249	86655
98e42964386fb1e679f6ac775ab223082e946ccc	the evolution of the master of science in information technology curriculum		This paper describes an ongoing process of assessment that lays the foundation for the success of the Master of Science in Information Technology degree (MSIT). It also presents a plan for a complete revision of the MSIT program using a proposed methodology - a data-driven 360 Degree Review. This methodology provides resources for those interested in program improvement.	master of science in information technology	Svetlana Peltsverger;Lei Li;Rebecca H. Rutherfoord	2017		10.1145/3125659.3125706	pedagogy;engineering management;curriculum;engineering;information technology	AI	-80.69021826030928	-31.007182757062182	87745
f4ca33b40d444c3b19af3c8f95a9f26c309b1048	supervision for critical thinking: challenges and strategies	computing professionalism;software engineering;history and expectations	DEVELOPING STUDENTS’ CRITICAL THINKING ABILITIES is a goal of most universities and degree programs. This goal may be demonstrated through the standard technical or written expressions that evidence insights derived through study. But, apart from the usual general platitudes or more deliberate formal statements expressed in terms such as graduate outcome statements, course goals and graduate profiles, are we really engaging in a form of wishful thinking here? Do we actually know how to teach critical thinking in its various forms? Is the usual ‘problem solving’ approach adopted in CS education equivalent or not? Does it really produce actively critical thinkers and reflective professionals [7]? This column originates from a few recent supervision experiences that have caused me to reflect upon strategies that might help students develop a critical mindset. Broadly stated, a challenge for supervisors in the computing disciplines is devising a strategy that might help students navigate from mere description of a phenomenon, project, design or artefact, to a deeper and more critical analysis and interpretation. So what are the challenges facing supervisors and what approaches might help? There is of course a large body of literature related to the teaching of critical thinking, and problem solving as generic skills [8,12], and arguments about the extent to which they can be taught independently or in the context of a particular course. Paul advocates “a ‘both-and’ rather than an ‘either –or’ approach to these issues” [12]. Grant relates Paul’s definition of critical thinking to ‘problem solving’ in programming classes: Critical thinking, also referred to as problem solving, reasoning, higher ordering thinking skills, can be defined as a disciplined, self-directed thinking which exemplifies the perfections of thinking appropriate to a particular mode or domain of thinking [8].	experience;halting problem;problem solving;reflection (computer programming);visual artifact	Tony Clear	2014	Inroads	10.1145/2667234	knowledge management;political science;management science;pedagogy	PL	-80.0766929136433	-34.87355855237314	87767
c14657bfcd6acc69983f09208de73d22c46227a5	innovative curriculum to enhance the learning experience of electrical and mechanical engineering students		This paper presents an integrated engineering enrichment program for the electrical and mechanical engineering students at polytechnic level. This program promotes design thinking and problem based learning and it is spread into three years of engineering education. The entire program is founded upon design-and-build type of projects where students get to practice engineering design process with increasing complexity in each semester. It is implemented in a studio environment equipped with necessary technical tools such as prototyping machines, 3D printers, soldering stations and so on. At the beginning, forty students enrolled to the program; it is now expanded to accommodate eighty students. A detailed description of the program and its structure are presented together with our evaluation of results and observations.		M. Fikret Ercan;Denis Sale;Noel Kristian	2016	iJEP		engineering management;systems engineering;engineering;pedagogy;mechanical engineering	HCI	-78.66429166341257	-33.38712714985027	87911
56b1bdf88c3e857aac0836657a23f8246252aca5	simulation of real-world development processes in computer science classes	real-world development processes;computer science classes;development process	Educators have long recognised that learning takes place most effectively in an environment in which the student is engaged in the process of their own education. One method for doing so is to put more control over the teaching and learning of course material into the hands of the students themselves. This paper describes an approach to learner-centred learning that involves the simulation of industrial software development practices as the central teaching technique. Our initial experiences with two courses — Web programming and systems analysis — are discussed in this paper.	computer science;simulation	Paula Gabbert;Kevin Treu	2001			simulation;computer science;systems engineering;pedagogy	Logic	-84.11159667478769	-34.50691735066918	88110
e4d8006bb2906192dd74a957af688d5eb8ba9eb2	workshop - developing cross-disciplinary collaborations for engineering education research	disciplinary cultures;engineering education research;disciplinary cultures engineering education research cross disciplinary collaboration;national science foundation;education research;cross disciplinary collaboration;technology education;graduate student	More and more engineering faculty are moving beyond developing effective classrooms practices to conducting educational research, but this move is not without significant challenges. One set of challenges has to do with forming cross-disciplinary research collaborations. This involves attending to differences in disciplinary cultures and language, building trust, learning how to translate across cultures, and committing to an exploration of synthesis across different perspectives. It also requires knowing where to find collaborators to build networks of expertise. This workshop is designed for engineering education researchers who wish to forge cross-disciplinary partnerships. At the end of the workshop, participants will be able to (1) identify complementary expertise needs and communities for finding collaborators, (2) craft messages about research interests in everyday language that can spark the research interests of potential collaborators, and (3) describe strategies for making the most of first “cultural” exchanges in crossdisciplinary research collaborations. Participants are encouraged to bring their research ideas and questions to the workshop as the basis for working in small groups. This workshop is sponsored by the National Science foundation through Expanding and sustaining research capacity in engineering and technology education: Building on successful programs for faculty and graduate students (DUE – 0817461).	forge	Robin S. Adams;Wendy C. Newstetter	2011		10.1109/FIE.2011.6142999	engineering management;engineering ethics;engineering;knowledge management;technology education	HCI	-79.21117516481779	-31.37126667509688	88734
7f1b96ef7bc02d82354e6445b30e5ba17a54b6cb	evaluation plan and preliminary evaluation of a network of remote labs in the maghrebian countries	computer and information science	The need for adopting virtual and remote labs in engineering education is high in Algeria, Morocco and Tunisia. This paper proposes the evaluation plan of a network of remote labs in the Maghrebian countries. This plan is based on the significant research that has been done until now concerning the evaluation of remote labs. More specifically the proposed evaluation strategy of the project will focus on five different but interrelated directions (a) usability of remote labs; (b) learners’ attitude towards remote labs; (c) technical evaluation of remote labs operation; (d) evaluation of the e-learning content namely the teaching units previously described; and (e) learning outcome. Furthermore, this paper presents preliminary evaluation results based on this evaluation plan and resulted from a pilot case study.	emoticon;plan 9 from bell labs;usability	Thrasyvoulos Tsiatsos;Stella Douka;Apostolos Mavridis;Stergios Tegos;Ahmed Naddami;Thomas Zimmer;Didier Geoffroy	2014	iJOE		engineering management;simulation;computer science;engineering;information and computer science	NLP	-77.69674630685046	-35.91913154929053	88940
3c2011dead63057240c0b220ea849ddaf0b6d48d	distance education network for strengthening the education movement in nigeria	distance education;natural resource	Nigeria is the largest race in African continent with a population of 140,000,000 people. It also contributes to the high rate of illiterates among the nine populous countries of the world. Existence has always meant for man, a succession of challenges. Moreover, the preservation and utilization of natural resources can only be assured through heavy investments in knowledge and ability aimed at all inhabitants of our country Nigeria. Education represents the conscious, deliberate and well equipped aspect of that steady progression which is the law of all human beings. Challenges are still with us and have not loss nothing in each particular life or given community they arise in different combination and obey a different order of priorities.		Ezeja Ogili	2008		10.1007/978-3-540-85170-7_41	mathematics education;distance education;computer science;natural resource;pedagogy	HCI	-81.12738969034619	-25.434781165340183	88972
b777499af55c4a490bc7062babd56745b505103b	yes you can: offer a comprehensive set of technologies to enhance teaching and learning	lecture capture;instructional technology;open courseware;learning;blog;wiki;itunes;support;budget;personal response system;teaching	The wide array of educational technologies available today has evolved substantially in the past few years. Tools which had been released just a few years back, are now more feature rich, easier to use, are able to integrate into campus portals. More importantly the systems have become more affordable -- in that most are now hosted in the cloud, not needing developers and technical staff to maintain; thereby allowing instructional designers, media and content specialists to concentrate their work on assisting faculty to use these technologies. UMass Boston has over the past 4 years, has taken advantage of these developments and is able to offer the community a wide variety of options for engaging students. The presentation will show how a public university like UMass Boston has been able to offer a wide variety of systems, extended hours support, Wiki's, Blogs, classroom capture systems, iTunes U, personal response systems and other services with a small staff and limited budgets. Offering wide choices allows faculty to teach with tools that suit their teaching styles, but more importantly allows students who become aware of these tools to demand that their faculty adopt them, because the way students learn today has changed dramatically. It is our obligation to meet their learning needs.	blog;cloud computing;itunes store;portals;wiki	Apurva Mehta	2012		10.1145/2382456.2382462	simulation;engineering;knowledge management;multimedia	HCI	-78.15597045838221	-36.807169927231435	89083
5c8e22d78697d615648b41632f752c11cc7b9577	goal-oriented laboratory development in cs/ee	goal orientation	The IEEE Computer Society's Educational Activities Board with the strong support of the ACM is tackling the problem of laboratory development, maintenance and support. The LABORATORY MONOGRAPH SERIES is intended to provide help to those setting up laboratory programs and as an outlet for those who wish to publish in a practical-oriented educational area.	cs games	Keith Barker;A. Wayne Bennett;Gordon E. Stokes;Mike Lucas;Maarten van Swaay	1988		10.1145/52964.53030	simulation;computer science;software engineering;goal orientation;operations research	Visualization	-80.33529457020163	-31.328194778190486	89090
eed9f83d2373e946b6b0990728d789563c6be774	improving awareness of running code: the implementation status section		This document describes a simple process that allows authors of#N#Internet-Drafts to record the status of known implementations by#N#including an Implementation Status section. This will allow reviewers#N#and working groups to assign due consideration to documents that have#N#the benefit of running code, which may serve as evidence of valuable#N#experimentation and feedback that have made the implemented protocols#N#more mature.  The process in this document is offered as an#N#experiment. Authors of Internet-Drafts are encouraged to consider#N#using the process for their documents, and working groups are invited#N#to think about applying the process to all of their protocol#N#specifications. The authors of this document intend to collate#N#experiences with this experiment and to report them to the community.		Yaron Sheffer;Adrian Farrel	2013	RFC	10.17487/RFC6982	simulation;computer science;data mining;world wide web	OS	-81.31201071242943	-28.861124172072422	89319
70f4e23df9312bd4e2b2c3a10a89d6ebc4004bc5	open source technical support: a look at peer help-giving	manuals;text;discussion board;software libraries;help giving;null;telephony;books;open source software usability telephony software libraries peer to peer computing computational efficiency costs linux manuals books;linux;peer to peer computing;computational efficiency;usability;open source software;open source	We explore online technical support of open source software by a study of postings to discussion boards. Our results indicate that there are several types of detail that are required by the help-givers to be able to diagnose and remediate help-seekers’ difficulties. As a result help interactions may iterate somewhat inefficiently. These findings are compared with studies of telephone technical help lines for commercial software, and library reference interviews. By considering certain rather problematic interactions we can identify ways to improve the process.	commercial software;interaction;iteration;open-source software;technical support	Vandana Singh;Michael Twidale;Dinesh Rathi	2006	Proceedings of the 39th Annual Hawaii International Conference on System Sciences (HICSS'06)	10.1109/HICSS.2006.370	usability;computer science;operating system;software engineering;database;software technical review;software walkthrough;telephony;programming language;world wide web;linux kernel;software peer review	SE	-88.33983141289828	-34.14600643381226	89376
52323d084cc5d71968054d3596933ca309daa259	finding a balance: centralized it support for decentralized units and the liaison program at tulane university	centralized support;process improvement;technology support	"""Finding a balance: """"centralized"""" IT support for decentralized units and the liaison program at Tulane University.In most universities, there is a tension between the local technology support needs of individual colleges, schools, and departments and the demands of the entire community. We have all witnessed attempts to overcome this tension by centralizing and decentralizing support like a pendulum.Two years ago, the central technology organization created a new liaison program at Tulane University to find a balance between the demands on central technology support and the needs of the individual school, department, or division. We created a system in which there is local control--decentralized units fund the partial or whole position--and centralized management and integration into the support structure. The program has exploded over the past years, growing from one liaison to seven."""	centralisation;centralized computing	Adam Krob	2006		10.1145/1181216.1181257	simulation;engineering;operations management;operations research	Arch	-77.76862063163527	-29.32964757683409	89435
80fa73caeb1a1e5757cd1f1b4d1e58b9a3a997a3	some misunderstandings and reflections on multi-media cai	computers;courseware computer aided instruction;computer aided instruction;reflection computer aided instruction courseware computer science education humans application software computer science software engineering educational technology mirrors;speech;visualization;teaching computer aided instruction;multimedia communication;teaching reform;multimedia computer aided instruction;courseware;teaching practice multimedia computer aided instruction teaching reform;teaching;teaching practice	CAI (Computer-aided Instruction) is one of the most important means of teaching reform in 21st century. However, there are some misunderstandings in its applications under the influence of tradition education ideas, and thinking patterns. It becomes an important topic to avoid or surpass these misunderstandings in new century. The common problems in the applications of CAI are discussed and some reasonable suggestions on using CAI are made based on teaching practice.	amiga reflections	Peihe Tang;Jun Li;Qiong Wei;Yousuo J. Zou	2008	2008 International Conference on Computer Science and Software Engineering	10.1109/CSSE.2008.121	education;visualization;computer science;speech;multimedia	SE	-80.98837287201476	-36.09116585913267	89744
404ef8af532833463f0bc8a40a7da7ed947c321d	the importance of formative assessment in science and engineering ethics education: some evidence and practical advice	research ethics;ethics education;computational modeling cases;assessment	Recent research in ethics education shows a potentially problematic variation in content, curricular materials, and instruction. While ethics instruction is now widespread, studies have identified significant variation in both the goals and methods of ethics education, leaving researchers to conclude that many approaches may be inappropriately paired with goals that are unachievable. This paper speaks to these concerns by demonstrating the importance of aligning classroom-based assessments to clear ethical learning objectives in order to help students and instructors track their progress toward meeting those objectives. Two studies at two different universities demonstrate the usefulness of classroom-based, formative assessments for improving the quality of students' case responses in computational modeling and research ethics.	computation;david levy (chess player);departure - action;evaluation procedure;muscle weakness;norm (social);poppy seed (dietary);sequence alignment;universities;funding grant	Matthew W. Keefer;Sara E. Wilson;Harry Dankowicz;Michael C. Loui	2014	Science and engineering ethics	10.1007/s11948-013-9428-5	applied ethics;engineering ethics;research ethics;management science;information ethics;educational assessment;pedagogy	HCI	-79.19338287187037	-35.78529640384805	90028
611eccab425bebd1ff308a7fd2407316e60ddd0c	"""planning and implementation of the project """"cloud services to each school"""""""		"""This article raises up the issue of creating the cloud-based learning environment through the collaboration of several age groups. Authors of the article share the experience of designing, deploying, configuring and maintenance of G Suite and Microsoft Office 365 cloud services at schools of the Ternopil region (Ukraine). Authors offer to use public cloud technologies to support the teaching process. The project """"Cloud Services to each school"""" was defined as a method of obtaining the practical results and forming the cooperation between scientists, teachers and students. Authors believe that deployment of cloud services is possible at any secondary school."""	cloud computing;computer science;electronic organizer;g suite;interconnection;platform as a service;software deployment	Vasyl Oleksiuk;Olessia Oleksiuk;Mykola Berezitskyi	2017			cloud computing;construction engineering;business	Web+IR	-77.70604683604134	-29.387790536545246	90509
4b93a0c2f68a92fca8004ec608bd64c09f53e977	software engineering programs at the wang institute of graduate studies	master of software engineering;software engineering	This paper describes the educational programs in software engineering at Wang Institute of Graduate Studies. Programs discussed are the Master of Software Engineering degree program, the Eastern Institute in Computer Science, the Distinguished Lecturer series, the Corporate Associates Program, and the Wang Institute Software Environment Project. Major emphasis is placed on the Master of Software Engineering program. The paper provides a definition of software engineering, states the goals and objectives of the Masters program, outlines admission requirements, presents an overview of the curriculum, and relates the admission requirements and curriculum to the goals and objectives of the program. The Eastern Institute and Distinguished Lecturer programs are non-credit educational programs open to the software community. The Corporate Associates Program and Software Environment project are software related service programs. The nature of these programs and their relationships to the Master of Software Engineering program are discussed.	computer science;requirement;software engineering;wang institute of graduate studies	Richard E. Fairley;Nancy Martin	1983		10.1145/800173.809743	engineering management;personal software process;software engineering process group;software project management;computer science;social software engineering;software development;software engineering;software walkthrough;software requirements;computer engineering;software peer review	SE	-80.7387822485303	-30.816995899124155	90611
2b8f7150a3ebc8d5bd18a39bd888fe16a3f65076	quality assurance for a general education course at the university of california, davis	quality assurance;quality assurance education courses programming profession graphics electronic mail automatic testing educational technology production performance analysis visualization;course design;course development;computer aided instruction;distance learning;university of california;interface design;conceptual design;internet;lessons learned;online courses;educational courses;quality control educational courses distance learning computer aided instruction internet;usa mediaworks online course quality assurance distance education cai interface design features functionalities performance media allocation course evaluation course presentation university;course evaluation;educational technology;quality control	This paper discusses how a Mediaworks (Educational technology arm of UC Davis), online course was checked for quality assurance focusing on interface design, features, functionalities, and performance. The features section focused on media allocation, course evaluation and course presentation while the functionality section covered the overall performance of the course design when viewed online. A brief discussion of course development procedure at Mediaworks touched on conceptual, design and development briefly discussing how tasks were assigned to each member of the team. After discussion at the course development stage, the QA procedure for Anthropology 15 is described. A section on how these requests were finally implemented in the course before final production followed. Lessons learned and thoughts to ponder conclude the paper.		Maria Lorna A. Kunnath	2002		10.1109/CIE.2002.1185995	distance education;quality assurance;quality control;educational technology;the internet;simulation;human–computer interaction;computer science;engineering;electrical engineering;interface design;conceptual design;multimedia;pedagogy	Crypto	-80.15335476580336	-36.25786831772296	90667
63efb215a2330cfdc63d998ba2c2d9e6511119c5	collaborative tool to enhance quality evaluation of higher education programmes	quality assurance;collaborative evaluation process collaborative tool quality evaluation higher education programmes monitoring process master instructional process support tool;collaborative tools;education quality assurance monitoring collaborative tools multimedia communication;learning analytics quality assurance evaluation collaborative tool;groupware educational administrative data processing further education;monitoring;multimedia communication;quality assurance evaluation;learning analytics;collaborative tool	The monitoring process and evaluation of an official higher education degree or master is performed by an annual report based on a set of requirements defined by the quality agencies which are responsible to evaluate such quality. Taking into account that these reports are made up by a set of evidences that are gathered during the whole instructional process, we propose the use of a support tool. This tool will allow the improvement of the efficiency of the process and will facilitate the quality evaluation. This paper introduces the collaborative evaluation process applied in our faculty and how the supportive tool helps to enhance the evaluation process.	requirement	David Bañeres;Montse Serra;M. Elena Rodríguez	2015	2015 International Conference on Intelligent Networking and Collaborative Systems	10.1109/INCoS.2015.33	quality assurance;knowledge management;multimedia	SE	-78.29152739703491	-37.871309969921384	91005
95adcc53bcacbcff56e16c9fb446c2f9cc340584	incremental game development in an introductory programming course	independent reference model;incremental development;functional equivalence;game development;introductory programming;space time product;object oriented;trace driven simulation;problem solving;computer game;variable memory management	The enthusiasm students have for playing computer games can be used in an introductory programming course to increase the enthusiasm and attention that students have for developing problem solving and programming skills. This paper reports on a successful experience using incremental development of two computer games, Master Mind and Minesweeper, in the programming assignments of such a course. By the end of one semester of programming instruction the students are able to design and implement programs of functionality equivalent to well-known commercial games. The incremental game development technique can be used either in a procedure-oriented course or in an object-oriented course; assignment sequences for both type courses are presented.	iterative and incremental development;pc game;problem solving;video game development	Mark A. Holliday	1995		10.1145/1122018.1122049	simulation;programming domain;reactive programming;computer science;multimedia;programming paradigm;inductive programming;game programming	PL	-82.58772777086591	-36.93579247328198	91445
fd843afdb9e7d12a875f93224e5c9963eb081da5	mobile application development classes for the mobile era	application development;upper division;elective;computer science education;mobile computing	There are many flavors of upper division elective classes that cover subjects related to mobile technologies and application development. However, there is a general lack of publications discussing the philosophy, implementation, and results from these classes. When researching for a new upper division mobile application development elective class, based on our students' needs and state of the mobile technologies, we consulted the extensive online information, and drafted guidelines and desired learning outcomes. In the subsequent years, we implemented two versions of mobile application development classes based on the guidelines and learning outcomes. The first, focused on the development of practical mobile applications while the second studied design issues surrounding modern mobile applications and their development. Both classes are project based where students build mobile applications to demonstrate their understanding, and both classes were well received. This paper describes our efforts and the classes, summarizes the results from the classes, and discusses the merits of implementation vs. design based mobile application development classes.	mobile app	Kelvin Sung;Arjmand Samuel	2014		10.1145/2591708.2591710	simulation;computer science;operating system;software engineering;mobile business development;rapid application development;mobile computing	HCI	-80.88638871117028	-34.01011520628027	91472
0966794117f2c63537c3239214456e26a52bf750	measuring climate change knowledge in a social media game with a purpose	prototypes;virtual reality;visualization;three dimensional displays;games;games cities and towns visualization virtual reality prototypes educational institutions three dimensional displays;cities and towns	Layperson's knowledge on climate change is highly relevant for the communication and public acceptance of climate policy. However, international surveys demand considerable efforts. As an alternative, player statistics obtained in games with a purpose may circumvent costly and self-aware survey settings, and allow collecting longitudinal measures. The social media game Climate Quiz is presented as an instrument to measure climate change knowledge. Players gain points by choosing the same ontological relations between term pairs related to climate change as the majority of co-players. Using game data obtained from 193 players, the game point score is shown to have satisfactory reliability, criterion validity and discriminant validity as an indicator of climate change knowledge. However, self-selection of environmentally conscious players implies limited representativeness for the general population. Suggestions for improving game design are given. The game score may represent climate change knowledge accurate enough for many applications in the social sciences and in risk communication which need continuous and current data.	discriminant;human-based computation game;risk management;self-awareness;social media;video game design	Sebastian Seebauer	2013	2013 5th International Conference on Games and Virtual Worlds for Serious Applications (VS-GAMES)	10.1109/VS-GAMES.2013.6624236	simulation;geography;knowledge management;game mechanics;game developer;social psychology	AI	-88.50335892197958	-25.61245790697411	91514
e212d5f46fe5e8e9095d5ed9c0418ba4b437d7a7	deconstruction kits for learning: students' collaborative debugging of electronic textile designs	debugging;electronic textiles;maker movement	Learning to use a construction kit to design, make, and program electronic textiles (e-textiles) has been found to be a rich context for students' learning of crafting, engineering and programming. We propose the development of what we call a 'deconstruction' kit---the design of faulty e-textile artifacts that students need to de- and reconstruct---as an alternative to gain insights into students' learning. We designed e-textile projects with strategically poor crafting, non-functional circuitry, and insufficient coding to investigate high school students' understanding of coding, circuit design and creation (through sewing) with the LilyPad Arduino. We videotaped and analyzed ten students collaborating in pairs as they engaged in debugging, or fixing, various problems in provided e-textile artifacts. Our findings indicate that these deconstruction kit projects are not only promising tools for evaluating students' understanding of e-textiles but can also become valuable learning tools on their own, especially when peer collaboration is taken into account.	arduino;circuit design;debugging;e-textiles;electronic circuit	Deborah A. Fields;Kristin A. Searle;Yasmin B. Kafai	2016		10.1145/3003397.3003410	simulation;engineering;computer engineering	HCI	-79.9407987959983	-36.10545123392115	91617
8dad51ecd76a6c3ff82f04d0d349504ee7e301f0	work in progress: engaging faculty for program improvement via evaltools®: a new software model	faculty engagement;quality assurance;instruments;computer aided instruction;collaboration;vectors instruments springs collaboration educational institutions software tools;program evaluation;springs;vectors;abet;educational courses;engineering education;software tools;teaching computer aided instruction educational courses engineering education;faculty engagement quality assurance abet program evaluation evaltools;evaltools;teaching;abet standards program improvement evaltools program assessment program evaluation engineering programs learning effectiveness	In this paper we present our experiences with a new software-tool model for program assessment and evaluation, and engineering programs improvement in assessing learning effectiveness. In the past, the assessment plan was based on the typical practice of assigning a person in the department for overseeing the whole process. The non-collaborative evaluation that is managed by a single program leader is not effective and problematic. To involve more faculty and in an effort to prepare for the most recent ABET visit, we decided to adopt EvalTools® in fall of 2010. EvalTools® is designed and developed according to ABET standards to provide a mechanism for collecting and analyzing data about the program, students' performance and their learning achievements. In addition, EvalTools® is instrumental in providing a mechanism to simplify the process of inspecting the assessment results as well as identifies strengths and shortcomings of the program before ABET review. More importantly getting faculty members excited about results and involved in the process of program improvement is a major accomplishment. Our experience via first-time implementation of EvalTools® shows very useful results for this model that can be easily disseminated for various programs in various disciplines. In this paper we will show: process of best use of relevant features in aid of streamlining faculty's time in data collection as well as evaluation was achieved; our results and how we succeeded in improving our program quality in an effective, efficient and systematic way; that simple curriculum revisions for multiple programs as a result of using EvalTools® for programs under going ABET is possible; that capturing the process of effective trainings needed for faculty and staff in a simple manner; faculty's experience in a constructive and engaging manner.		Mohammed E. Eltayeb;Mak Fong;Oguz Soysal	2012	2012 Frontiers in Education Conference Proceedings	10.1109/FIE.2012.6462443	engineering management;systems engineering;engineering;computer engineering	SE	-81.79154708647386	-34.635949476918796	91789
a1b60c727027fb9762002710209686b9f2d02101	team-based software/system development in a vertically-integrated project-based course	vertical integration;software;virtual machine;servers software programming documentation teamwork machine learning;learning process;file servers;virtual machines computer aided instruction computer science education educational courses file servers social networking online software development management;project based learning software development virtual machines peer based learning;computer aided instruction;best practice;production system;software systems;technical continuity team based software system development vertically integrated project based course per student virtual machines server configuration complex estadium system student learning production machines estadium game day environment student mentoring best practice software peer evaluations social network studies cross experience level learning process team continuity;software development process;peer based learning;social network;computer science education;servers;machine learning;virtual machines;educational courses;software development;social networking online;system development;student learning;programming;project based learning;software development management;teamwork;documentation	We use per-student virtual machines to allow new students to configure servers, thus enabling them to develop an understanding of the complex eStadium system. The outcomes include: student learning as the per-student virtual machines progress into software development and production machines supporting the eStadium game-day environment; the teamwork and leadership skills that evolve as students progress from initial learning to leadership roles in the creation of sophisticated applications; guidelines for instructors mentoring students through the process of building and maintaining a working production system; and, parallels with best-practice software and system development in industry. The use of peer-evaluations and social-network studies enable us to determine how the students interact with and learn from each other across years (sophomores through seniors). This cross year, cross experience-level learning process is essential for maintaining the technical and team continuity of the project. It also prepares students in a very realistic way for the software-development process in industry.	integrated project support environment;parallels desktop for mac;production system (computer science);real life;scott continuity;secure digital;social network;software development process;system administrator;virtual machine	Randal T. Abler;Edward J. Coyle;Agrita Kiopa;Julia Melkers	2011	2011 Frontiers in Education Conference (FIE)	10.1109/FIE.2011.6142974	simulation;computer science;knowledge management;virtual machine;software engineering;world wide web;computer engineering	HCI	-83.84316269523204	-33.86800770424773	91914
fad24262661546ceaf2bb59ae60b45c35a894253	fourth workshop on teaching computational science (wtcs 2010)	curriculum development;modeling and simulation;introductory programming;industrial relations;self directed learning;model simulation	Abstract   The Workshop on Teaching Computational Science (WTCS), taking place within the International Conference on Computational Science (ICCS), is a platform for discussing innovations in teaching computational science in its various aspects, e.g. modeling and simulation, at all levels and contexts. Innovations may cover the context of formal courses or self-directed learning, involving, for example, curriculum development, introductory programming, service courses, specialist undergraduate and postgraduate topics, as well as industry-related short courses. This editorial provides an introduction to the work presented during the sessions in Amsterdam.	computation;computational science	Alfredo Tirado-Ramos;Angela B. Shiflet	2010		10.1016/j.procs.2010.04.093	autodidacticism;applied mathematics;computer science;modeling and simulation;industrial relations	NLP	-81.08587264330703	-31.11136920421764	91974
9a23e815969e132fd6e8db4c7583242480810b1f	introducing secondary education students to algorithms and programming	programming environment;design education;information technology;educational programming environments;basic education;educational software;secondary education;computer science education research;algorithms;science education;primary education;didactic scenarios;problem solving;novice programmer	In Greece, the development of the teaching of Information Technology (IT) in schools has been greatly influenced by the rapid development of technology, making IT literacy a priority for all individuals. Consequently, the teaching of algorithms and programming, with the ulterior motive of teaching modeling as well as problem solving, has been greatly limited in Secondary Education. However, we strongly believe that algorithms and programming constitute an important intellectual tool and should be included in basic education. In any case, both the research literature findings, as well as, our own experience confirm the fact that novice programmers come up against many mental obstacles in their attempts to understand the functioning of programs or the construction of algorithms. In order to deal with these difficulties and successfully teach the elementary concepts of algorithms and programming, we have developed didactic scenarios, which are based on specially designed educational software. In conjunction with this, we are attempting to develop a program for the systematic training of those students who will become IT teachers in Secondary or Primary Education. The most significant findings of our research are summarized as follows: (a) The development of educational software and its experimental use in the teaching process allow us to formulate several general rules related to the specific didactic characteristics, which these environments should include. (b) Educational software is effective only when it is incorporated within the framework of the didactic scenarios that the teacher organizes and which are supported by the software. (c) Teachers do not spontaneously use educational software in the context of this rationale. Therefore, specific training is required so that they adopt and use such software in didactic scenarios.	algorithm;design rationale;didactic organisation;emergence;emoticon;experience;graphical user interface;pedagogical agent;problem solving;programmer;programming language;programming paradigm;scientific literature;usability;virtual reality	Vassilios Dagdilelis;Maria Satratzemi;Georgios Evangelidis	2004	Education and Information Technologies	10.1023/B:EAIT.0000027928.94039.7b	mathematics education;simulation;science education;computer science;software development;primary education;sociology;educational software;design education;law;information technology;pedagogy	HCI	-80.04074151731798	-37.535700368351236	92269
48ebbeebdceb374a8df57669410fac54507fafdf	emergence of automated assignment conceptions in a functional programming course	functional paradigm;functional programming;assignment command;high school student	"""This paper reports a research into the performance of high school students while they were first exposed to the paradigm of functional programming. The findings have been organized using three categories. In this paper we will concentrate on the """"Automated assignment to parameters"""" conception which was the most widespread conception found in the research. We will describe the conception and will discuss some possible factors that could influence its development."""	emergence;functional programming;programming paradigm	Tamar Paz;Tami Lapidot	2004		10.1145/1007996.1008044	computer science;artificial intelligence;programming paradigm;programming language;functional programming;algorithm	HCI	-83.32566332536356	-36.269941839774866	92325
7a088f3e291a01d786e4028135c8d2082a1edbb6	analysis of a c language teaching example based on the arcs model: the basic concept and use of structure	education educational institutions concrete psychology information analysis computer languages programming problem solving lead testing;c language classroom instructional design;teaching example;c language teaching;presses;instructional design;teaching c language computer science education;arrays;computer science education;arcs model;c language;c language classroom instructional design c language teaching arcs model learning motivation;chapters;programming profession;teaching example the arcs model learning motivation c language analysis;the arcs model;learning motivation;analysis;language learning;programming;language teaching;teaching	Learning motivation is the key to the success of C language learning. How to arouse students' learning motivation and let students follow the teaching thoughts designed by their teachers from beginning to the end is a key issue. This paper draws lessons from Keller's ARCS model of motivational design. Based on a concrete teaching example, it describes the authors' basic ideas of C language classroom instructional design.	arcs (computing)	Min Lu;Xiaoyu Jin	2008	2008 The 9th International Conference for Young Computer Scientists	10.1109/ICYCS.2008.531	mathematics education;programming;computer science;analysis;instructional design;multimedia	Robotics	-83.63422924605258	-36.91736825116962	92489
28c71d83fb910163cc0154c34067e8770eb3e93f	reform and practice on ito talents training of software-related specialties in applied-oriented undergraduate universities	information technology outsourcing ito;software;outsourcing;formal specification;aouu ito talent training model computer software related specialties applied oriented undergraduate universities information technology outsourcing talents level requirements knowledge requirements ability requirements quality requirements computer software related requirements seamless university enterprise connection top level design academic years curriculum systems practical teaching teaching team construction occupational qualities zhejiang shuren university;training;application oriented undergraduate universities aouus;teaching computer science education educational institutions formal specification further education industrial training outsourcing;indium tin oxide training educational institutions outsourcing software industries;industries;software related specialites;indium tin oxide;computer science education;industrial training;further education;talents training model application oriented undergraduate universities aouus software related specialites information technology outsourcing ito;talents training model;teaching	In this paper, we analyze the requirements of information technology outsourcing (ITO) talents, e.g. in levels, knowledge, abilities and qualities. We also discuss contradictions between traditional teaching in computer software-related specialties and requirements for ITO talents. And then, we propose a training model for ITO talents as Seamless University-Enterprise Connection. According to the top-level design, we expound the model's reform thoughts from five aspects, such as arrangement of academic years, curriculum systems, practical teaching, teaching team construction and occupational qualities. Finally, we prove the effectiveness of this training model through successful practices in Zhejiang Shuren University.	complex system;indium tin oxide;level design;outsourcing;requirement;ubuntu	Shiping Ye;Chaoxiang Chen;Binbin Zhou;Guoyong Dai	2012	2012 IEEE 14th International Conference on High Performance Computing and Communication & 2012 IEEE 9th International Conference on Embedded Software and Systems	10.1109/HPCC.2012.242	education;further education;indium tin oxide;computer science;knowledge management;formal specification;outsourcing	Robotics	-84.24453313290367	-31.97227954896563	92578
e9d283cd4bc1df4e094f6e09d0eeec0daa2a301f	faculty training initiative at the indiana university school of education: a paricipative effort	new technology;faculty development;training;technology training;satisfiability;laptop;educational technology;faculty	Studies show that for university faculty members, the effort to keep pace with new technology has created a significant rise in stress, and this technology-induced strain can contribute to increased exhaustion and reduced workplace satisfaction. Studies also show that professors are more satisfied with technology if they have received training. In addition, professors are more likely to accept technology training if provided with an incentive.During the fall semester of 2001, the Dean of the Indiana University (IU) School of Education proposed a laptop-for-training project for School of Education faculty. Participants-who must be full-time faculty-would take possession of a new laptop computer after completion of a prescribed course of technology training. In conjunction with an advisory group, the IU School of Education Technology Services and Instructional Consulting decided on 16 hours as a requirement and began offering a multitude of technology training sessions. Of 197 professors in the IU Bloomington School of Education, 60 applied in the first round. (Enrollment will be offered once per semester.In addition to the workshops offered by the two technology services, the training committee has identified faculty participants who would be able and willing to teach workshops. The targeted instructors are offered two hours of laptop credit for every hour spent in the classroom. Faculty response has been positive; thus far, of the 33 internally-produced workshops, faculty members have taught 18. All Laptop Initiative participants have been given a choice of enrolling in offerings in-house or elsewhere in the University.The Faculty Laptop Training Initiative continues to be in full operation as of this writing. With the assistance of the committee members, faculty participants are continuing to enroll in technology workshops. Given the enthusiasm for training, and considering the rapidly developing technology environment, committee members hope to make the training effort an ongoing program that outlasts the immediate laptop initiative project.	instruction unit;laptop	Carol Rhodes;William Goveia	2002		10.1145/588646.588671	engineering management;simulation;engineering;pedagogy	HCI	-77.88826998267405	-30.58105827312744	92608
0074cd2b5b2eee7cd2ef1b35c61533842aee1364	a taxonomy and mapping of computer-based critiquing tools	engineering;software;technology;software engineering computer science education programming;computer science software engineering;swinburne;software engineering;journal article;computer science education;critiquing systems;science technology;software tool support;critics;environment;support;unified modeling language;taxonomy;survey design critics critiquing systems critic taxonomy software tool support;critic taxonomy;design;computer science;design critics;engineering electrical electronic;survey;programming;recommender systems;programming education tasks computer based critiquing tool taxonomy computer based critiquing tool mapping computer mediated tasks computer supported critics digital artifacts critic taxonomy software engineering;taxonomy software recommender systems programming software engineering unified modeling language java;java	Critics have emerged in recent times as a specific tool feature to support users in computer-mediated tasks. These computer-supported critics provide proactive guidelines or suggestions for improvement to designs, code, and other digital artifacts. The concept of a critic has been adopted in various domains, including medical, programming, software engineering, design sketching, and others. Critics have been shown to be an effective mechanism for providing feedback to users. We propose a new critic taxonomy based on extensive review of the critic literature. The groups and elements of our critic taxonomy are presented and explained collectively with examples, including the mapping of 13 existing critic tools, predominantly for software engineering and programming education tasks to the taxonomy. We believe this critic taxonomy will assist others in identifying, categorizing, developing, and deploying computer-supported critics in a range of domains.	categorization;digital artifact;evolutionary taxonomy;feedback;linnaean taxonomy;list of educational programming languages;software engineering;taxonomy (general)	Norhayati Mohd. Ali;John G. Hosking;John Grundy	2013	IEEE Transactions on Software Engineering	10.1109/TSE.2013.32	unified modeling language;programming;design;support;human–computer interaction;computer science;engineering;artificial intelligence;software engineering;programming language;java;management;taxonomy;technology	SE	-84.92157189091715	-33.93784947652077	92772
de93e9d41d7f5062c6ed82903350c84f011d7c4f	practice and transfer of learning in the teaching of software testing	software testing;classroom lecture;mathematics;practice exercises;application software;cognitive tasks software testing teaching commercial training courses classroom lecture practice exercises domain testing;on the job training;domain testing;education software testing performance analysis tv mathematical model mathematics on the job training application software cultural differences taxonomy;commercial training courses;program testing computer science education educational aids educational courses;computer science education;educational aids;program testing;cognitive tasks;educational courses;taxonomy;performance analysis;mathematical model;transfer of learning;tv;student learning;teaching;cultural differences	Many university classes and commercial training courses rely on classroom lecture and practice exercises to help students learn new skills. The thesis work described in this paper sought to create an optimal set of lecture notes and practice exercises to teach a software testing technique, domain testing. The new materials were successful at teaching students to consistently and meticulously execute the procedures they learned. To the surprise of the authors, the students were unable to apply their new skills to a more applied task that was similar to those practiced. The results of this study provide a striking example of the limitations inherent in traditional instruction. They motivated Kaner to reconceptualize his instructional practices toward helping students deepen their appreciation of the complex cognitive tasks of the craft rather than procedurally-focused practice of new skills.	cem kaner;domain testing;software testing	Cem Kaner;Sowmya Padmanabhan	2007	20th Conference on Software Engineering Education & Training (CSEET'07)	10.1109/CSEET.2007.38	simulation;computer science;multimedia;pedagogy	SE	-81.020626442549	-36.768893016900165	93136
81a97e8b331c18e32664a668f3da08ff05a323b1	primo: peer-reviewed instructional materials online		2 Peer review is the most common indicator of quality used in academic disciplines. It is primarily employed in the review of research submitted as articles or books. While peer review for research is the mainstay in academia, there is no corollary process for reviewing practice: in other words, the evaluation of practice or instruction does not usually follow an objective peer review model. In spite of the fact that “best practice” is a term that is widely used in a variety of settings, it has very little meaning. It may be done in the course of an annual review by a supervisor or in a classroom by a colleague or department or in the course of tenure and promotion review. However, each of these uses local norms or standards that may or may not be consistent with disciplinary values and priorities. Identifying best practices is a significant endeavor; having an explicit and consistent standard that is applied evenhandedly across the discipline or profession is invaluable. The ACRL Instruction Section’s Peer-Reviewed Instructional Materials Online Committee has developed a standard and process that provides a model for instructional materials in librarianship; it is a model that could effectively be adopted for other areas of practice in the profession. ~Wendi Kaspar		Wendi Arant-Kaspar;Jodie Borgerding;Megan Hodge;Bill Marino	2017	C&RL	10.5860/crl.78.1.2	art;performance art;cartography	AI	-78.52486190433012	-28.75050909205766	93232
323926205bf106a2348579d5cf784d54577507d5	creative collisions: meet and create: and other “re interactive” suggestions	focusing;formal specification;communities conferences educational institutions organizing collaboration knowledge engineering focusing;re interaction;collaboration;formal verification formal specification;creative collisions international ieee requirements engineering conference international forum re interactive program;formal verification;organizing;re4re;re4re re interaction;communities;conferences;knowledge engineering	The International IEEE Requirements Engineering conference (RE) is the premier international forum for requirements engineering. However, participant interaction mechanisms have not received significant recent attention and conference attendees have suggested that interaction support could be improved. The “RE Interactive” program is a first implementation step to increase the level and quality of interaction at RE. We present here a brief background to the initiative, describe in greater detail those initiatives being introduced this year and summarize possible initiatives for future years. We describe in greater detail the focal “RE Interactive” session: Creative Collisions. This session aims to explore the power of combinatorial creativity to create unexpected ideas for the RE community by promoting creative engagements between individuals, focusing on forging new relationships within the community.	focal (programming language);interactivity;requirement;requirements engineering	Martin Mahaux;David Callele	2013	2013 21st IEEE International Requirements Engineering Conference (RE)	10.1109/RE.2013.6636756	simulation;human–computer interaction;formal verification;computer science;engineering;knowledge management;software engineering;knowledge engineering;formal specification;programming language;management;collaboration	Visualization	-81.59433133634425	-30.400881047380093	93319
2f36938b71584279992a4cd4a0d4866b9ca04b08	exploring the effect of a robotics laboratory on computational thinking skills in primary school children using the bebras tasks		This paper presents preliminary findings from a project-based learning laboratory of robotics aimed at stimulating computational thinking processes in primary school students. The laboratory was carried out within the context of an ongoing project funded by the Italian Ministry of Education, University and Research. The aim of the project is to activate a national network for the enhancement of students' technological and scientific skills in school and extra-school settings. A group of 51 students, engaged in the robotics laboratory, were compared to a comparison group of 32 students in order to evaluate the impact of programming WeDo robotics artefacts on the development of computational thinking skills. Overall, the results showed that programming robotics artefacts may exert positive effects on children's acquisition of computational thinking skills.	computation;computational thinking;robotics	Giuseppe Chiazzese;Marco Arrigo;Antonella Chifari;Violetta Lonati;Crispino Tosto	2018		10.1145/3284179.3284186		HCI	-78.58229235999087	-33.580000439316585	93382
9c66233b2495d22b2979b4b34340d216d42c19b7	principles of a debugging-first puzzle game for computing education	computers;debugging;teaching computer games computer science education program debugging;computational thinking;games debugging programming profession educational institutions computers;user study;computer science education;educational game;programming profession;user study computer science education debugging summer camp educational game computational thinking;games;loops concept debugging first puzzle game computing education programming teaching gidget programming concepts conditional concept;summer camp	Although there are many systems designed to engage people in programming, few explicitly teach the subject, expecting learners to acquire the necessary skills on their own as they create programs from scratch. We present a principled approach to teach programming using a debugging game called Gidget, which was created using a unique set of seven design principles. A total of 44 teens played it via a lab study and two summer camps. Principle by principle, the results revealed strengths, problems, and open questions for the seven principles. Taken together, the results were very encouraging: learners were able to program with conditionals, loops, and other programming concepts after using the game for just 5 hours.	algorithm design;alice;computer programming;control flow;debugging;entity;lambda calculus;level design;program comprehension;scratch (programming language)	Michael J. Lee;Faezeh Bahmani;Irwin Kwan;Jilian LaFerte;Polina Charters;Amber Horvath;Fanny Luor;Jill Cao;Catherine Law;Michael Beswetherick;Sheridan Long;Margaret M. Burnett;Andrew Jensen Ko	2014	2014 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)	10.1109/VLHCC.2014.6883023	simulation;computer science;game developer;multimedia;game programming	SE	-82.37660502145683	-37.546727433229734	93630
0776426869189bd84975cd6eb2533ba9cf660562	lectures abandoned: active learning by active seminars	active learning;software engineering;educational software;software architecture;curriculum design	Traditional lecture-based courses are widely criticized for being less effective in teaching. The question is of course what should replace the lectures and various active learning techniques have been suggested and studied. In this paper, we report on our experiences of redesigning a software engineering course in software architecture to employ a range of active learning techniques. The course was constrained by the study administration's traditional assignment of a three hour lecturing slot and as such we had to make techniques that fitted this imposed constraint. Our contribution is active seminars as a replacement of traditional lectures, an activity template for the contents of active seminars, an account on how storytelling supported the seminars, as well as reports on our and the students' experiences.	active learning (machine learning);experience;software architecture;software engineering	Henrik Bærbak Christensen;Aino Vonge Corry	2012		10.1145/2325296.2325304	software architecture;simulation;computer science;artificial intelligence;software engineering;multimedia;active learning;educational software;pedagogy	SE	-80.59255467122145	-35.48541151732618	93923
fdeae4d0ba72ab09a331b3a5afcb83144a0e2d74	beyond the library: using multiple, mixed measures simultaneously in a college-wide assessment of information literacy	assignments;information literacy;evaluation methods;skill development;teacher surveys;content analysis;scoring rubrics;check lists;two year college students;community colleges;academic libraries;librarians;college faculty;documentation;likert scales	Brandy Whitlock is Professor and Instruction Librarian at Anne Arundel Community College, e-mail: bmwhitlock@aacc.edu; Dr. Nassim Ebrahimi is currently Associate Vice President of Institutional Research, Effectiveness and Planning at Baltimore City Community College, formerly Director of Learning Outcomes Assessment at Anne Arundel Community College, e-mail: nebrahimi@bccc.edu. © 2016 Brandy Whitlock and Dr. Nassim Ebrahimi, Attribution-NonCommercial 3.0 (http://creativecommons.org/licenses/ by-nc/3.0/) CC BY-NC 3.0. To get the best sense of how graduating students demonstrate information literacy skills and how the institution can improve student learning, the Assessment in Action (AiA) project at Anne Arundel Community College (AACC) deployed a combination of indirect measures and authentic assessment of student work, utilizing assessment tools flexible enough to be deployed across the college. The results of AACC’s AiA project have provided college practitioners and stakeholders with evidence of the extent to which graduating students demonstrate crucial information literacy skills and with data that can inform decisions about how to foster more effective teaching and learning.	email;information literacy;librarian	Brandy Whitlock;Nassim Ebrahimi	2016	C&RL	10.5860/crl.77.2.236	mathematics education;library science;content analysis;documentation;computer science;information literacy;sociology;pedagogy	ML	-77.70493590861658	-32.50173179872402	94393
1cb827b9c96ca85ac5090e73d221ca90f5d18183	the development of a working undergraduate research project - lessons from the ip challenge	curriculum development;image processing research training course undergraduate engineering research program ip challenge curriculum development;undergraduate research curriculum;image processing;ip networks laboratories interviews educational institutions writing training;computer aided instruction;managing research undergraduate research undergraduate research curriculum;undergraduate student;educational courses;engineering education;undergraduate research;managing research;image processing computer aided instruction educational courses engineering education	In this paper we describe the development of a unique undergraduate engineering research program that has been run for two years. It has focussed on the proposition that undergraduate students if properly trained and adequately mentored can produce publishable results while still at the undergraduate level. The aims, curriculum development and preliminary results of students that have attended the course are discussed. Proposals for changes during the 2011/2012 IP Challenge (the marketing name for the Image Processing Research Training Course) are also discussed.	image processing	Andre L. Nel;W. A. Clarke;Norah Clarke	2012	Proceedings of the 2012 IEEE Global Engineering Education Conference (EDUCON)	10.1109/EDUCON.2012.6201117	engineering management;medical education;computer science;pedagogy	DB	-80.35782140270037	-32.740912072287486	94525
2f50143d4b391eb8b3e19cf00e062f99e34847bb	running research-oriented final year projects for cs and is students	research in undergraduate projects;final year projects;examiners;critical thinking;process;information system;supervisors	In this paper we discuss the difficulties of designing and running a final year project course for computer science and information systems students. In particular, we present the design of a research-oriented final year project course, where the aim is to develop the student's critical thinking and research skills. We also discuss the lessons learnt during the seven years that the course has been given.	computer science;experience;information system;security technical implementation guide	B. Olsson;Mikael Berndtsson;Björn Lundell;Jörgen Hansson	2003		10.1145/611892.611938	simulation;computer science;operating system;critical thinking;information system;process	DB	-80.81355057532981	-32.4515406003662	94603
7f62f79a2a2b4b43f6c40061b1e1975e78ab5da6	loop exits and structured programming: reopening the debate	dynamic programming;permutation graph;control structure	Internal exits from loops represent a critically important control structure that should be taught in the introductory CS1 curriculum. Without access to those facilities, students are often incapable of solving simple programming problems that occur frequently in applications. This paper reviews the existing evidence in support of such facilities and argues that it is important to reconsider our traditional pedagogical approach as we adopt new languages of instruction.	control flow;structured programming	Eric S. Roberts	1995		10.1145/199688.199815	simulation;computer science;artificial intelligence;dynamic programming;permutation graph;programming language;control flow;algorithm	PL	-81.4921952784177	-35.79235039918576	94920
a0ad0668afd4e42a959d4f223a6e731d718e6b2f	considerations in automated marking	programming assessment;assessment design;automated marking	With large classes and high demands on the time of teaching academics, (as well as the need to keep marking budgets under control) evaluating the functional correctness of programming assignments can be challenging. Entirely automating the evaluation process may seem desirable but that would deny students formative feedback from more experienced programmers. This in turn reduces their opportunity to correct errors in their practice. Instead, this paper contains a discussion of marking processes where much of the “heavy lifting” or repetitive work is automated but still allows for human feedback. We discuss the impact of automated marking on assessment design, students, and where the hard work is hidden. The literature contains descriptions of many projects for automating various parts of the process with varying interfaces and levels of integration with external systems. In the author’s opinion though, that they are not strictly required, and we describe a simpler set of requirements.	correctness (computer science);interaction;item unique identification;lambda lifting;programmer;requirement;side effect (computer science)	Joel Fenwick	2015			simulation;computer science;operations management	HCI	-85.43247175743917	-36.42318246953405	95267
b63570a7afeef577bad8d0839edaedb115d88005	nifty assignments	pedagogy;nifty;homeworks;education;assignments;object oriented programming;repository;minesweeper;library;examples;recursion;cards;pirate	"""Every time I re-use a handout, I look it over and make a few little """"improvements"""". I play around with code demos and entertain myself with different slide transitions. However, inevitably, I return to the conclusion that most of what my students learn in my course comes from the assignments. Great assignments are hard to dream up and time-consuming to develop. With that in mind, the Nifty Assignments session is all about promoting and sharing the ideas and ready-to-use materials of successful assignments."""		Nick Parlante;Julie Zelenski;Michelle Craig;John DeNero;Mark Guzdial;David J. Malan;Aditi S. Muralidharan;Eric Roberts;Kevin Wayne	2013		10.1145/2445196.2445356	library science;engineering;management;operations research	PL	-80.45696136086677	-35.205235236606406	95332
c534dbdd10419e462f1e537d1b81404fcc4aab95	creating pathways to develop student professionalism: a new direction	recruiting;career development;first year;coaching;help desk;mentoring;management;student training;student employment	The 2007-2008 academic year brought a new program of student employment to our IT department called IT Fellows. This program brings together the technological skills of IT along with soft business skills to assist our student employees in becoming well-rounded individuals fully prepared for life after college. In previous years our primary area of student employment was the Help Desk in which there was a tiered system in place with opportunities for resume and interview experience, raises, and promotions. The area of training needed further development and the move to the new program provided enhanced opportunities for training at all levels of employment. First-year candidates attend a week-long Leadership Academy, followed by a full year of training in four six-week rotations of their choice, after which they interview for year-long assignments as interns. Internship opportunities are provided in all areas of the department as well as some campus departments outside of IT, and provide transcript credit for them to carry forward in their prospective careers. As they progress, some upper-class Fellows become mentors, coaches, managers, and trainers themselves. All Fellows participate in educational seminars throughout the year which address many areas of technology and professionalism. Come journey with us as we explore the new terrain of students as colleagues, and the benefits of expanding skill sets, both in full-time staff as well as student employees.	academy;prospective search	Jennifer McIntosh-Elkins;Rebecca Klein	2008		10.1145/1449956.1449972	medical education;medicine;management;pedagogy	HCI	-78.49018737015444	-30.952474269163893	95373
f61d2c41a1e7b06d6a39389fed65cc32e7e5b144	balancing work life issues: a two dimensional/two generation perspective	electronics industry engineering gender issues professional aspects employment human factors;engineering;stress;employment;work life issues;daughter;quality time;pediatrics;spouse;refrigeration;family illness;engineering profession stress pediatrics quality management electronics industry cities and towns roads educational institutions refrigeration protection;working hours;two dimensional two generation perspective;electronics industry executive;protection;management education;gender issues;human factors;roads;engineering profession;home management;professional aspects;science career work life issues two dimensional two generation perspective professional women business demands working hours stress domestic demands quality time spouse child care family illness home management educational decisions electronics industry executive daughter;electronics industry;educational decisions;professional women;business demands;cities and towns;domestic demands;child care;science career;quality management	Summary form only given. A key issue for technical and professional women that is raised year after year is the necessary trade-off between devotion to spouse and family vs. to career. And, year after year, we learn of unique solutions to help balance this trade-off-from women who have been there and done that. We are now even beginning to hear about how men are considering and responding to this balance. The article identifies a number of issues that need to be dealt with to achieve a desired balance. These include business demands like travel, working hours, stress and others as well as domestic demands like quality time for spouse and children, child care, family illness, home management, educational decisions and others. For each issue, a mother with 22 years of experience, who is also an electronics industry executive with over 30 years, presents actual solutions to these issues, along with her judgment on how suitable they were. For the second dimension, her daughter of 18 years, herself the living subject of these solutions, will provide her perspective (and those of her two brothers) of suitability. The daughter will be entering a university this fall, contemplating a career in science herself.		Diana J. Bendz;Katherine A. Bendz	1999		10.1109/ISTAS.1999.787336	medicine;operations management;nursing;management	NLP	-83.00990063192239	-28.17983554127636	95523
8a8462f997556f284ec7d4e0d01d2123249652f4	multimedia curriculum for an introductory course for information technologist	discussion board;first year;information technology;english as a second language;teaching material;second language;information technology curriculum and english as a second language;information technology curriculum;multimedia curriculum	First year, tertiary courses have many teaching related challenges. Lecturers need to engage students with mixed educational backgrounds, abilities and study habits. Moreover, some students studying first year subjects may already know some of the material, but not all, and as a consequent find traditional teaching material uninteresting and boring. These complications can be compounded with other issues relating to students being taught in a second language.  This paper reports on the use of multimedia for student-centered delivery of theory, problem classes exercises, laboratories and assessments with a first year, tertiary course on information technology to Vietnamese students whose English is their second language. The new course material was developed and designed to be entertaining and educational. The students' survey and discussion board comments suggest the teaching related challenges have been met by introducing multimedia delivery material, exercises and assessments. The evidence suggests that students prefer learning with multimedia.	cardiovascular technologist	Tony de Souza-Daw;Ondris Pui;Ngoc Hoang Le	2011		10.1145/2095697.2095748	computer science;multimedia;information technology	HCI	-77.91434882351243	-37.636922172309994	95657
05640aaca06c13335d454faa94960bd681fd888c	exploration of computational thinking based on bebras performance in webduino programming by high school students		The 12-year Basic Education Curriculum Guidelines by the Ministry of Education in Taiwan includes learning performances related to computational thinking and programming languages in technology courses. The students will develop other important competence through programming. Learning a programming language should not only involve focus on writing the programs, but should also stimulate students’ computational thinking competence and allow them to solve daily problems through information techniques. Situated learning emphasizes students’ learning in real scenarios where knowledge is applied as the tool in these real situations. Without such scenarios, the tool has limited value. Likewise, computational thinking competence can be translated as effective problem-solving by the means of information technology. Hence, the thinking process involves analyzing the problems resulting in answers. In addition, the Bebras learning model is based on a concept of informatics which supports comprehension of information science phenomenon and development of computational thinking. This study explored the effects of computational thinking competence on the Bebras test performance. The study targeted senior high school students’ who learned program design using a situated learning strategy.	computation;computational thinking	Jian-Ming Chen;Ting-Ting Wu;Frode Eika Sandnes	2018		10.1007/978-3-319-99737-7_47	thinking processes;management science;curriculum;situated learning;program design language;computational thinking;informatics;information science;computer science;phenomenon	HPC	-79.79309289691163	-37.727726829043824	95908
92e5214cee773929fd72b036bc35f223dc1d82be	encouraging teamwork in an undergraduate software engineering course	groupware;design and development;team learning;learning outcome;computer aided instruction;soft skills;software engineering;teamworking undergraduate software engineering course collaborative learning environment;team working computer aided instruction computer science education educational courses groupware software engineering;team working;collaborative learning environment;large scale;undergraduate software engineering course;computer science education;computer self efficacy;computer experiment;teamwork software engineering computer science collaborative work information technology collaborative software employment humans large scale systems computer industry;educational courses;teamworking	"""Students typically do not like to work in teams, especially computer science majors. Computer science is often perceived as an """"asocial"""" discipline that does not foster teamwork, interactivity, or collaboration. Yet, teamwork and collaboration are the very characteristics that the workplace demands, particularly when designing and developing large scale software projects. Therefore, being able to effectively work in teams is an essential learning outcome for software engineering students and as educators, we must ensure that students not only possess technical skills, but soft skills as well. The goal of the research in progress was to create a collaborative learning environment that fostered teamwork and team learning for students enrolled in an undergraduate software engineering course. The paper summarizes how previous computing experience, background, and computer self-efficacy were used to create teams that represent those found in today's workplace. Implications and suggestions for future research are also provided."""	computer science;interactivity;software engineering	Cynthia Y. Lester	2007	International Conference on Software Engineering Advances (ICSEA 2007)	10.1109/ICSEA.2007.31	collaborative learning;team learning;simulation;computer experiment;teamwork;computer science;systems engineering;engineering;knowledge management;software engineering;soft skills	SE	-83.08420645057514	-34.32832080682075	95953
77cec6c66c06275f5cf0a0f12ab64bc58db69043	a mid-career review of teaching computer science i	professional practices;pedagogy;program design;computer science i;assessment;problem solving	A mid-career review is presented, of how the teaching of Computer Science I has changed for this instructor over the last two decades. The content of the course has evolved to include algorithm development and program design. Assessment in the course has gone online and moved away from testing how clever the student is, to how much the student has learned in the course. Professional practices are now covered that help students understand and incorporate preferred practices of the discipline. Changes incorporated into the pedagogy include going from using anthropomorphic and ad-hoc to discipline-specific and consistent vocabulary, and from writing code in the class like an experienced programmer to writing it to suit a beginning learner. It is hoped that this review will help new Computer Science I instructors avoid some misconceptions with which this instructor started out.	algorithm;computer science;hoc (programming language);programmer;vocabulary	Amruth N. Kumar	2013		10.1145/2445196.2445352	simulation;computer science;software engineering;program design language;multimedia;educational assessment;pedagogy	PL	-81.81386428796189	-36.527977390817945	96038
401612cb466a79309f447937c5f3df24982f3485	aeta: algorithm explanation teaching agent	tree oriented algorithm representation algorithm explanation teaching agent computer science algorithm visualization structured hypermedia algorithm explanation system;dynamic change;structured hypermedia algorithm explanation system;computer aided instruction;algorithm explanation teaching agent;algorithm visualization;null;computer science education;education programming profession computer science data visualization computer languages artificial intelligence testing intelligent agent productivity proposals;computer science;tree oriented algorithm representation;student performance;computer science education computer aided instruction	"""Understanding of algorithms is one of the most challenging aspects of the study of Computer Science. Over two decades of research has been devoted to improving algorithm visualization and algorithm explanation techniques. The structured hypermedia algorithm explanation system (SHALEX) is our implementation of an algorithm explanation environment. SHALEX facilitates understanding of algorithms using a tree-oriented representation of the algorithm. To evaluate student performance, each algorithm explanation has an author model of an """"ideal"""" student. However, there is currently no facility in SHALEX for using these data or for providing individually tailored help to students. Our paper presents an algorithm explanation teaching agent (AETA) which aids in student understanding of algorithm explanations in SHALEX. To evaluate the student progress, the AETA monitors the completion rate and compares it against the author model. As the student studies an algorithm explanation the AETA dynamically changes its interactions"""	algorithm;computer science;experiment;hypermedia;interaction;meld (software);solver	Brian Demmings;Elhadi M. Shakshuki;Tomasz Müldner	2007	Fourth International Conference on Information Technology (ITNG'07)	10.1109/ITNG.2007.28	simulation;computer science;artificial intelligence;theoretical computer science;software engineering;machine learning	Robotics	-82.72480490829153	-37.808455838406346	96561
7bb94556132267afc939ff1826aa905050d486eb	what do students and professionals think of bim competence?		Building Information Modeling (BIM) can have significant positive influence on the productivity and efficiency of construction projects. Hence, BIM competence is increasingly important in Architecture Engineering and Construction education. This paper aims to build a better understanding of BIM skills requirement to help the planning and implementation of BIM curriculum. A literature review was conducted initially to identify a set of BIM skills reported through previous studies. Thereafter, a questionnaire-based survey was conducted with students, researchers, and industry professionals to validate the identified set of skills, and assess respondents’ perception of BIM competence and requisite skills. This paper presents the results from the survey.	4d bim;building information modeling;information model	Manish Yakami;Vishal Singh;Sunil Suwal	2017		10.1007/978-3-319-72905-3_32		HCI	-81.67983800613112	-32.523482774097324	96566
9657d9d2cc7fb0f3a63050e5ce3bd55b234c5fd6	the effectiveness of junior companies from the viewpoint of engineering students at a brazilian university	professional profile junior company knowledge management;companies educational institutions knowledge engineering engineering education knowledge management;knowledge management;training educational institutions engineering education;internship recommendations junior companies engineering students brazilian university college of technological science cct santa catarina state university udesc professional profile academic training;junior company;professional profile	This paper analyzes the effectiveness of the activities of Junior Companies (JCs) at the College of Technological Science - CCT at the Santa Catarina State University (UDESC) as projects that give students real-world experience with the goal of describing these experiences from their own point of view. The observations were carried out in two junior companies, where one is mainly characterized by preparing projects and providing services to the community, and the second is focused on the provision of services related to quality tools and industrial management. It is believed that the junior company is a supplement to the classroom and provides experience in technical projects and developing human behaviors. Understanding the experience of the students as members of a JC is effective, allowing the university to assess whether there is value for the academic formation of the professional profile of future engineers, as well as to demonstrate to the students the contribution to their academic training. The methodology adopted in this research is descriptive and quali-quantitative. A survey was carried out with current students and alumni to identify the contribution to their academic training. Exploratory analysis was used to find the results of the effectiveness of the contributions of JCs in the formation of the professional profile from the point of view of the students. The results show student satisfaction regarding acquired knowledge, networking, obtaining internship recommendations, participation and the best time of admission to the JCs.	computational complexity theory;experience;exploratory testing	Adelaide Maria Bogo;Elisa Henning;Alan Christian Schmitt;Rodrigo Gehlen De Marco	2014	2014 IEEE Global Engineering Education Conference (EDUCON)	10.1109/EDUCON.2014.6826177	engineering management;engineering;knowledge management;pedagogy	SE	-80.22918412895226	-32.7764279393328	96625
7dfde2c6400b29bef0c1c25c179d4307ea425f64	teaching how to program using automated assessment and functional glossy games (experience report)		Our department has long been an advocate of the functional-first school of programming and has been teaching Haskell as a first language in introductory programming course units for 20 years. Although the functional style is largely beneficial, it needs to be taught in an enthusiastic and captivating way to fight the unusually high computer science drop-out rates and appeal to a heterogeneous population of students.   This paper reports our experience of restructuring, over the last 5 years, an introductory laboratory course unit that trains hands-on functional programming concepts and good software development practices. We have been using game programming to keep students motivated, and following a methodology that hinges on test-driven development and continuous bidirectional feedback.   We summarise successes and missteps, and how we have learned from our experience to arrive at a model for comprehensive and interactive functional game programming assignments and a general functionally-powered automated assessment platform, that together provide a more engaging learning experience for students. In our experience, we have been able to teach increasingly more advanced functional programming concepts while improving student engagement.	aap;arcade game;computer science;feedback;functional programming;game programming;gamification;hands-on computing;haskell;plug-in (computing);software development;test-driven development	José Bacelar Almeida;Alcino Cunha;Nuno Macedo;Hugo Pacheco;José Proença	2018	PACMPL	10.1145/3236777	computer science;programming language;haskell;mathematics education;restructuring;first language;game programming;functional programming;software development;population;student engagement	PL	-81.94303876519338	-36.02468164433883	96738
31330649ba743fb55843b36c149c32c66439a9fe	reading types in c using the right left walk method	necessary discussion;c programming language;introductory c programming course;walk method;verbalize type;execution environment;object type	We describe a technique for beginning students to read and verbalize a declarator in the C programming language. Once learned, students will be able to easily state the type of an object without hesitation. It is suggested that this technique be taught to students during the first week of an introductory C programming course. Getting students to correctly read and verbalize types hastens their learning of the language and supports necessary discussion of a program's translation and execution environments.	the c programming language	James Canning;William Moloney;Ali Rafieymehr;Demetrio Rey	2004		10.1145/1044550.1041656	computer science;theoretical computer science;object type;programming language;algorithm	PL	-82.1965400651234	-37.416084912111224	96780
43f87d87eb073c581d9e450444a372cb2f995918	a laboratory based capstone course in computer security for undergraduates	exercise;capstone course;computer security;curriculum;tools and techniques;laboratory;cybersecurity;security	We describe a laboratory based capstone course in computer security for undergraduates. The course is based on a sequence of hands-on laboratory exercises for four teams of students. It emphasizes defensive tools and techniques at the expense of attacks; it also takes a network centered view where student teams set up and configure entire networks. In this paper, we describe the course, how it fits into the curriculum, and the laboratory facilities we have developed. We then present the details of some of our lab exercises, and discuss the lessons that we have learned.	capstone (cryptography);computer security;fits;hands-on computing	Mike O'Leary	2006		10.1145/1121341.1121346	curriculum;simulation;computer science;information security;software engineering;laboratory	DB	-81.62332432547029	-29.258459634984717	97392
0c8f62c6915b798709c55ce54266eb66fa758c3a	cs 0.5: a better approach to introductory computer science for majors	cs 1;retention;curriculum;introductory computer science;computer science major	There are often problems when students enter a course with widely different experience levels with key course topics. If the material is covered too slowly, those with greater experience get bored and lose interest. If the material is covered too quickly, those with less experience get lost and feel incompetent. This problem with incoming students of our Computer Science Major led us to create CS 0.5: an introductory Computer Science course to target those CS majors who have little or no background with programming. Our goal is to provide these students with an engaging curriculum and prepare them to keep pace in future courses with those students who enter with a stronger background.  Following the lead of Mark Guzdial's work on using media computation for non-majors at Georgia Tech, we use media computation as the tool to provide this engaging curriculum. We report here on our experience to date using the CS 0.5 approach with a media computation course.	computation;computer science	Robert H. Sloan;Patrick Troy	2008		10.1145/1352135.1352230	curriculum;simulation;computer science;multimedia;pedagogy	AI	-78.78155392897223	-30.221145878922098	97760
228fc3b5067c53cf9962a8210fb50dd6d247b7d6	a collection and delivery method of contents in tourism with location information	development;tourism;point of interest	"""Tourism resources are one of the most significant resources in Japan. It is necessary for the continuation of continuous sightseeing industry to utilize the attractive point in an area in which I have such diversity. However, maintenance and management are not accomplished to utilize such contents as a tourist spot. It is hard to the cost and hand's point by a conventional way by a local resource to dig contents with diversity up, manage and report it to a significant person. So we have developed LodeStar Platform, which registers time-spatial information and contents easily for everyone using ICT. LodeStarPlatform makes it possible that a highly motivated resident sends """"charm in an area"""" freely. It is possible to offer collected """"charm in"""" an area according to the visitor's interest including an inbound. In this paper, we introduce the concept, outline, design and implementation of LodeStar Platform, and report the result of a case study using a sample system with LodeStar Platform."""	continuation;inbound marketing;platform-specific model	Go Hirakawa;Ryoichi Nagatsuji;Yoshitaka Shibata	2016	2016 19th International Conference on Network-Based Information Systems (NBiS)	10.1109/NBiS.2016.91	point of interest;simulation;telecommunications;tourism;computer security	EDA	-91.97155587637695	-25.658973975399572	98012
26350275fa0504fcf6be80516b3711d02690782e	the object is objects	student management teams;software engineering;introductory computer science;software development;individual evaluation;group work;novice programmer	Teaching objects early requires different pedagogy. It isn't especially difficult, but it is different. Four presenters will explain and demonstrate different methodologies for introducing objects early in introductory computer science courses. The propose is to provide teachers with ideas that they can use or modify to successfully introduce objects and classes to novice programmers.	computer science;programmer	Joseph Bergin;Richard Kick;Judith Hromcik;Kathleen Larson	2002		10.1145/563340.563438	simulation;human–computer interaction;computer science;knowledge management;software development;software engineering;object-orientation	HCI	-82.28635034068542	-35.78074287277678	98258
306532513cac5030cc49b5c01af636e59ec12732	communicating what liberal arts colleges contribute to computer science (abstract only)	liberal arts colleges;public relations;communication	How can CS faculty at liberal arts colleges better communicate with colleagues and the public about the value our institutions offer? Liberal arts colleges play an important role in undergraduate CS education. Liberal arts skills are widely valued in the tech industry, many liberal arts undergraduates go on to earn Ph.D.s in STEM, and many of the educational innovations presented at SIGCSE are developed by liberal arts faculty. Yet, our colleagues at research universities often misunderstand what we do at liberal arts colleges. And while we see the liberal arts and computer science as supporting each other, the popular media tends to portray them as diametrically opposed. These misconceptions limit our opportunities to attract new students and colleagues, as well as opportunities to contribute to public discourse about the important role of information technology in our society. In this BoF, we aim to collaboratively develop communication strategies for individual participants and for the liberal arts CS community as a whole.	computer science;sigcse	Janet Davis;Angela Berardinelli;Amanda M. Holland-Minkley;Ellen Lowenfeld Walker	2017		10.1145/3017680.3022357	arts in education;liberal education;critical social thought;pedagogy	HCI	-79.27346880718349	-34.317592277134615	98438
0c6e3bd7f74004aca6f339267960a7bf718f63a7	barriers and opportunities for research in publishing studies	cultural and media studies;communication	This paper reports fi ndings from an international survey into the research involvement and support of university teaching staff in a relatively new profession-orientated discipline, publishing studies (PS). It uses these fi ndings to consider barriers and opportunities for academic research both specifi cally in PS and more broadly in other profession-orientated disciplines. Greater understanding was felt to be of value as universities internationally are increasingly being pressurized to create close links with the wider economy, produce employable students, and encourage relevant and implementable research. The survey suggests that while there is strong agreement among respondents that it is benefi cial for those teaching PS to be research-active, there was considerable variation in current levels of research activity. Respondents rated their research activity highest in departments with an active research culture and effective research support processes. Lack of time was the main reason cited for reduced or non-involvement in academic research and while this is a common issue for academics, PS respondents isolated a number of exacerbating factors. Suggestions are offered for addressing identifi ed barriers and pursuing new opportunities for research. The paper argues that as research outputs of academics are increasingly monitored it is important to consider how the full range of disciplines housed within institutions can be accommodated within research support. Overall, the research has a strong relevance for interdisciplinary areas, and other professionand practice-orientated subjects within universities. Introduction There is a growing awareness among university staff from all disciplines of the signifi cance of research as an indicator of the quality of their establishment, its staff, and the education on offer to those who enrol. Involvement in research is increasingly identifi ed as what separates higher education from further education and other organizations offering education or training. Within the university sector, however, there is currently discussion about what constitutes research, and how it should be both defi ned and documented. Up to now universities have tended to record traditional academic/theoretical research, from a range of long-established disciplines, largely disseminated through academic conferences and journals; the pedigree of the publication and its associated peerreview processes provide a measure of the value of the associated research. Times are changing. The range of disciplines now available through universities means that colleagues are research-active in previously unanticipated fi elds and in new ways; their ability to affect thinking within their discipline is achieved through an expanded range of media and formats. At the same time, a general economic recession combined with the substantially increased costs associated with university education have meant that those deciding on/funding higher education are entertaining new criteria for choosing both institutions and courses; the practical connectedness of teaching staff may be more signifi cant to potential students and those resourcing them than their academic research. It follows that the involvements of staff within industry, which indicate the extent to which they are up-to-date in their fi eld, whether captured as practice-orientated research or commentary in professional publications, can both ensure the organization’s research reputation and support recruitment. Internationally, governments are also adapting the metrics by which they appraise © Alison Baverstock and Jackie Steinitz 2014 Jackie Steinitz Alison Baverstock 208 Alison Baverstock and Jackie Steinitz LEARNED PUBLISHING VOL. 27 NO. 3 JULY 2014 the success of higher education. In addition to excellence in research, new indicators are being introduced such as the employability of emerging students (as evinced by their success in fi nding graduate-level jobs), the extent to which research can be put into practice (often more easily achieved in disciplines that relate to a specifi c profession), and opportunities for (paid) knowledge transfer partnerships between universities and the wider economic environment. Within the discipline of publishing studies (PS), these issues are being explored within a context of huge change within the publishing industry. For example, just within universities, the importance of always offering printed materials is declining as new generations of students arrive already accustomed to accessing information online rather than assuming a printed format, and pressure on library budgets mean economies are consistently looked for – often achieved by buying resources in a digital format. A move to digital materials is similarly supported by growing environmental pressures, a desire for greater speed of dissemination and the sharing of access to academic work through new ways such as social media. Within this context, and having outlined the idea within a group of professionorientated colleagues attending a meeting of the UK Association of Publishing Education (APE),1 a research project was suggested within PS to consider how those involved in profession-orientated subjects are supported and encouraged to develop their research, to report their outcomes and to measure their effectiveness. Within the UK, this was a particularly timely exercise given preparation was going on for the 2014 Research Excellence Framework (REF), an exercise to gather, assess and note excellent research within UK universities over the last fi ve years. The objectives of this research were twofold. Firstly to investigate opportunities for involvement in academic and professional research in the fi eld and to consider associated barriers. Secondly to research how PS, as a relatively new academic discipline, is being accommodated and welcomed within existing institutions and their research support processes. This paper will deal with the fi rst objective, providing information on the location of related courses as context. It is anticipated that a subsequent paper will consider the second objective in more detail.	emma;evert willem beth;information science;job stream;librarian;printing;relevance;social media;steiner tree problem	Alison Baverstock;Jackie Steinitz	2014	Learned Publishing	10.1087/20140307	social science;computer science;media studies;sociology	HCI	-77.50971634952587	-28.773993152592865	98670
42c1aea439e89fd5648e392c53ce1d89e7397820	cheating and plagiarism: perceptions and practices of first year it students	spectrum;software engineering;information technology	A study of cheating and plagiarism using a scenario based format, has provided an insight into attitudes towards questionable work practices of first year information technology students' within the School of Computer Science and Software Engineering of Monash University, and the School of Information Technology of Swinburne University. Students at both institutions showed similar responses to a range of cheating behaviours, in line with other literature. Plagiarism and cheating are widely tolerated and commonly practised, at least on the lower end of the spectrum of seriousness. However there were some areas of significant difference between the two student samples that warrant further research to develop strategic approaches for limiting cheating practices.	computer science;software engineering	Judithe Sheard;Martin Dick;Selby Markham;Ian MacDonald;Meaghan Walsh	2002		10.1145/544414.544468	spectrum;software engineering;information technology	HCI	-81.67859825566116	-33.92897500766047	98771
b1f7af259165405f0679ba824cb2bb875edb30bb	technical profiles for mexican internet user to improve informatics security	cybercrime technical profile mexican internet user informatics security academic formation high school schedule mexican universities technical training;informatics security;social aspects of automation computer crime educational institutions internet;prevention;internet;technical profiles;prevention informatics security technical profiles internet cybercrime;cybercrime	In this work we present technical profiles for computer and Internet user. These profiles are made taking in account academic formation from high school to undergraduate studies in Mexico. We have analyzed high school schedules from the most important Mexican Universities. We made a similar task with undergraduate studies considering engineering, social and humanistic careers and also medical and health studies. We consider to do this work technical training, international standards about Informatics Security, Data Centers installation and operation standards. We propose four profiles including knowledge, competence for computer and Internet users to improve the Informatics Security and to prevent risks about cybercrime.	cybercrime;informatics;internet;schedule (computer science)	F. D. Felipe;F. Ch. Noya;I. S. Martinez	2016	2016 8th Euro American Conference on Telematics and Information Systems (EATIS)	10.1109/EATIS.2016.7520147	the internet;preventive healthcare;software engineering;informatics;management;law;world wide web;computer security	DB	-83.25919322710322	-27.576625193442002	98947
08352b9f81935c7a5c84c6f093a530a5adee1353	student and school performance across countries: a machine learning approach		Abstract In this paper, we develop and apply novel machine learning and statistical methods to analyse the determinants of students’ PISA 2015 test scores in nine countries: Australia, Canada, France, Germany, Italy, Japan, Spain, UK and USA. The aim is to find out which student characteristics are associated with test scores and which school characteristics are associated to school value-added (measured at school level). A specific aim of our approach is to explore non-linearities in the associations between covariates and test scores, as well as to model interactions between school-level factors in affecting results. In order to address these issues, we apply a two-stage methodology using flexible tree-based methods. We first run multilevel regression trees in the first stage, to estimate school value-added. In the second stage, we relate the estimated school value-added to school level variables by means of regression trees and boosting. Results show that while several student and school level characteristics are significantly associated to students’ achievements, there are marked differences across countries. The proposed approach allows an improved description of the structurally different educational production functions across countries.	machine learning	Chiara Masci;Geraint Johnes;Tommaso Agasisti	2018	European Journal of Operational Research	10.1016/j.ejor.2018.02.031	boosting (machine learning);multilevel model;machine learning;mathematics;covariate;artificial intelligence	Metrics	-85.27096539520575	-27.547058521499782	99242
c0af674f9a69efbc23b2cc45bb7dd428fd414956	competences of cyber physical systems engineers — survey results		Cyber physical systems (CPS) consist of physical and cyber components seamlessly integrated with each other. Being a core and an essential component within the digitalization process, CPS are becoming pervasive in all spheres of modern society. Understanding CPS structures and associated functionalities requires a multidisciplinary body of knowledge and engineering capabilities. Moreover, they are laying on the edge of a broad spectrum of methodologies and technologies, from mechatronics, communication, control and automation to information technologies, which are penetrating each corner of the society. It is obvious from the lifecycle of CPS, i.e., life cycle of the physical-part and the digital thread of the cyber-part, that developers, operators and managers of CPS have to acquire an essential interdisciplinary engineering qualification and a combination of skills and competencies from many different disciplines, including social and psychological aspects, among others. In order to develop and implement an adequate educational programme, two major aspects have been analysed in this paper: (i) identification and understanding of the minimal set of multidisciplinary competencies and qualifications needed and (ii) identification and classification of the critical gaps in the existing engineering curricula. The analysis is based on the findings of a survey conducted in two IEEE conferences closely related to the engineering disciplines associated with CPS.	cyber-physical system;mechatronics;pervasive informatics;systems engineering	Elena Mäkiö-Marusik;Bilal Ahmad;Robert Harrison;Juho Mäkiö;Armando Walter	2018	2018 IEEE Industrial Cyber-Physical Systems (ICPS)	10.1109/ICPHYS.2018.8390754	automation;control engineering;spheres;systems engineering;multidisciplinary approach;cyber-physical system;body of knowledge;information technology;engineering;mechatronics;competence (human resources)	SE	-85.53735311243821	-31.865401835257764	99274
d55ac3cca5a4e5e3225ada28aa776919bef6c479	earth observation capacity building activities - the czech republic case study	the czech republic;geoinformation earth observation capacity building activities czech republic esa ad 2008 charles university scientica agency czech space office european space agency remote sensing education eo gis tools;educational institutions training buildings europe tutorials joints;physics education;gis;geographic information systems;remote sensing;earth observation;gis capacity building earth observation education the czech republic;remote sensing geographic information systems physics education;capacity building	Since the Czech Republic joined ESA in 2008, the Charles University in Prague, the Scientica Agency, the Czech Space Office and the European Space Agency (ESA) have started several joint activities for the promotion of EO techniques and applications, in order to create awareness and build up capacity and skills for the use of remote sensing in the country. Main activities are focused on the education of young generations, who should become from their early age naturally familiar with EO/GIS tools and data in order to be eager to use them later in their own research or in their profession, whenever making use of geoinformation. Capacity building activities have been oriented on the cooperation with the potential users of EO data and technologies as well, e.g. institutions of nature protection, public administration services. Several joint quick-win projects have been carried out for implementing EO into the decision-making processes at these institutions. Quick-win projects have been based on the close cooperation between EO experts and public servants in the Czech Republic.	eo personal communicator;esa;geographic information system	Premysl Stych;Lucie Kupková;Francesco Sarti;Garik Gutman	2012	2012 IEEE International Geoscience and Remote Sensing Symposium	10.1109/IGARSS.2012.6351930	earth observation;geology;physics;physics education;remote sensing	Embedded	-80.49188809503174	-28.806056129488333	99454
260e31e96f539f10fae6c087d1afb6cd02220dc7	electronic laboratory notebooks in a public-private-partnership		This report shares the experience during selection, implementation and maintenance phases of an electronic laboratory notebook (ELN) in a public–private partnership project and comments on user’s feedback. In particular, we address which time constraints for roll-out of an ELN exist in granted projects and which benefits and/or restrictions come with out-of-the-box solutions. We discuss several options for the implementation of support functions and potential advantages of open access solutions. Connected to that, we identified willingness and a vivid culture of data sharing as the major item leading to success or failure of collaborative research activities. The feedback from users turned out to be the only angle for driving technical improvements, but also exhibited high efficiency. Based on these experiences, we describe best practices for future projects on implementation and support of an ELN supporting a diverse, multidisciplinary user group based in academia, NGOs, and/or for-profit corporations located in multiple time zones. Subjects Computer Education, Mobile and Ubiquitous Computing, Network Science and Online Social Networks, Social Computing	best practice;network science;out of the box (feature);social computing;ubiquitous computing;vaxeln	Lea A. I. Vaas;Gesa Witt;Björn Windshügel;Andrea Bosin;Giovanni Serra;Adrian Bruengger;Mathias Winterhalter;Philip Gribbon;Cindy J. Levy-Petelinkar;Manfred Kohler	2016	PeerJ PrePrints	10.7287/peerj.preprints.2325v1		HCI	-79.2449905329556	-29.340370201927012	99958
5bfd4dc7bf9e62a2e02249bb093cc920aacfad15	changes in the social responsibility attitudes of engineering students over time	engineering;social responsibility;professional responsibility;ethics	This research explored how engineering student views of their responsibility toward helping individuals and society through their profession, so-called social responsibility, change over time. A survey instrument was administered to students initially primarily in their first year, senior year, or graduate studies majoring in mechanical, civil, or environmental engineering at five institutions in September 2012, April 2013, and March 2014. The majority of the students (57 %) did not change significantly in their social responsibility attitudes, but 23 % decreased and 20 % increased. The students who increased, decreased, or remained the same in their social responsibility attitudes over time did not differ significantly in terms of gender, academic rank, or major. Some differences were found between institutions. Students who decreased in social responsibility initially possessed more positive social responsibility attitudes, were less likely to indicate that college courses impacted their views of social responsibility, and were more likely to have decreased in the frequency that they participated in volunteer activities, compared to students who did not change or increased their social responsibility. Although the large percentage of engineering students who decreased their social responsibility during college was disappointing, it is encouraging that courses and participation in volunteer activities may combat this trend.	attitude;engineering;environmental illness;impacted tooth;surveys	Angela R. Bielefeldt;Nathan E. Canney	2016	Science and engineering ethics	10.1007/s11948-015-9706-5	public relations;professional responsibility;ethics;social responsibility;sociology;social psychology;law	HCI	-79.54260877758541	-24.2895096312555	100041
856b0817332b614ed7dec441ba486890287b9911	the blue track sustainability in the study programs of mechanical and electrical engineering	sustainable development educational courses electrical engineering energy conservation mechanical engineering renewable energy sources;energy efficiency;energy conservation;renewable energy;educational institutions electrical engineering mechanical engineering ethics renewable energy sources conferences;sustainable product development;renewable energy sources;technical journalism;climate change;e mobility;sustainability;ethics;renewable energy sources blue track sustainability mechanical engineering electrical engineering applied science bonn rhine sieg university germany climate change fossil resources limitations energy efficiency technical journalism e mobility smart grids sustainable product development;mechanical engineering;germany;smart grids;teaching topics;educational courses;fossil resources limitations;electrical engineering;blue track sustainability;recycling;teaching topics sustainability renewable energy recycling;applied science bonn rhine sieg university;sustainable development;conferences	At the Bonn-Rhine-Sieg University of Applied Science, Germany, students now learn about sustainability in each semester. Climate change and limitations of fossil resources are demanding problems engineers have to solve today and much more in future. They will be asked to find solutions for providing energy from renewable sources, reducing consumption of resources and enhancing efficiency of energy and material input. To prepare the students for this challenging work, the department of Mechanical Engineering, Electrical Engineering and Technical Journalism (EMT) has decided to educate their students of electrical and mechanical engineering in every semester in topics of sustainability and the students of Technical Journalism in ecology and environmental sciences. This continuous sequence of topics in the curriculum is called the “Blue Track“. Contents are e.g. E-Mobility, Smart Grids, sustainable product development and renewable energies.	ecology;electrical engineering;fossil;new product development	Iris Gross;Horst Rörig;Dieter Franke;Katharina Seuser	2014	2014 IEEE Global Engineering Education Conference (EDUCON)	10.1109/EDUCON.2014.6826218	engineering;civil engineering;mechanical engineering	DB	-78.55029819817541	-29.927682135495353	100205
f1b6c5cd0ced18f3bcb4d83a7205fc6636317bae	using pencil code to bridge the gap between visual and text-based coding (abstract only)	k 12;visual programming;curriculum;computer science education;pencil code;coffeescript;javascript	This workshop introduces a new educational programming environment Pencil Code, which helps bridge the learning gap between visual programming and text-based coding. The free open-source online tool allows students to work with programs using either blocks or Coffeescript or Javascript text code. Students can switch between visual and text modes at any time.  The workshop will begin with a collaborative discussion of the opportunities, challenges, and differences presented when learning with block code and moving to text code. Then we will give a short presentation of how Pencil Code is used in classrooms, with some preliminary findings.  The main part of the workshop is a hands-on activity where participants gain experience with Pencil Code. Participants will use the tool with lessons in a curriculum framework, for teaching functions and interactivity using both text code and block code. Finally, there will be a discussion of best practices for teaching students in the transition, and an opportunity to create your own lessons using Pencil Code or other tools.  Attendees will come away with an understanding the issues faced by students transitioning to text code for the first time, and they will gain practical experience with teaching lessons with Pencil Code. Participants will receive curriculum material appropriate for middle-school and high-school classrooms. The tool is open-source and free to use at http://pencilcode.net/.	best practice;block code;coffeescript;hands-on computing;integrated development environment;interactivity;javascript;open-source software;pencil code;text-based (computing);visual programming language	David Bau;Matthew Dawson;Anthony Bau	2015		10.1145/2676723.2678293	curriculum;simulation;computer science;operating system;software engineering;multimedia;javascript;visual programming language;programming language;source code	HCI	-82.8232942071177	-37.643977346238444	100232
39bbf27b2151fb9530c71ff6f12ad11590b532a3	tracing back the chain: cognitive pre-requisite analysis for cis capstone project		When teaching the first part of the capstone project to the senior students at the College of Computer Sciences and Information Technology, some problems have been reported for the past few semesters. This paper aims to identify the cause of the problem by comparing necessary skills for the capstone project to skills acquired in prior courses, tracing back through the pre-requisite dependency chain. The comparison is set between the Course Learning Outcomes identified in the capstone project and the Course Objectives of courses offered in previous years. The analysis revealed two main discrepancies, namely: several mismatches and missing links that explained the problems initially observed. It also led to identifying a weakness in one of the previous courses and triggered an adjustment in the course content.	capstone (cryptography);computer science;hyperlink	Mariam Elhussein;Dilek Düstegör	2017		10.1145/3175536.3175537	systems engineering;course evaluation;capstone;information technology;cognition;computer science;tracing	Theory	-82.00182860604887	-30.12063308839871	100268
7a7cb04846c94495a205953d1001a7f492a870a9	are children more motivated with plugged or unplugged approach to computational thinking?: (abstract only)		"""In recent years, we have seen an increasing interest in bringing programming back to K-12 education. Many educators begin to recognize the necessity of helping children develop computational thinking (CT) as an essential skill to address 21st century challenges. In this poster, we report the preliminary findings from the first year of a 3-year longitudinal study based on a coding curriculum for Grade 4 to Grade 6. This 3-year study aims to gain an understanding of how coding activities helps children at upper primary school ages develop CT for problem solving, and if this problem-solving mindset is transferrable to other contexts, for example, daily life scenario and mathematical field. A part of the research focuses on a comparative study between students' intrinsic motivation of coding (i.e. """"plugged"""") activities and """"unplugged"""" activities (i.e. learning concepts from computer science through paper-based games without programming), which helps us understand the advantages and disadvantages of different learning approaches to CT. At the end of the first year, around 600 fourth graders"""" were assessed with their CT competence and affective tendency through: (1) a pre/post-test on the CT skill and mathematical ability; (2) a questionnaire on intrinsic motivation in plugged and unplugged activities. The preliminary findings indicate that students have gained a good programming-related knowledge and improved problem-solving skills through our curriculum. They were intrinsically motivated to participated in both types of activities. However, students did not show the ability to transfer computational thinking to mathematical context."""		Shan Jiang;Gary K. W. Wong	2018		10.1145/3159450.3162270	curriculum;instrumental and intrinsic value;coding (social sciences);knowledge management;mindset;computer science;affect (psychology);computational thinking;longitudinal study	ML	-78.7536464787606	-37.97852595145269	100301
c597770925889264b00a251762dde09e4b844030	providing new graduate opportunities: experiences with a uk master's level computing conversion course	software engineering;software engineering education;software industry	The forces that operate within the software industry are outlined and the case is made for postgraduate software engineering education that is  ̄exible in terms of attendance patterns and responsive to the market in terms of curricula. The developments within a postgraduate ``conversion'' course at the University of Sunderland over a 9 year period with regard to both patterns of delivery/ attendance and curricula are then described (including the origins of the course and the development of ®ve dierent delivery modes). The pro®le of graduates at entry to the course is illustrated, and thumbnail sketches of several graduates from the course are drawn to re ̄ect the diversity of their subsequent careers. The content of the original and revised versions of the course are outlined, and comparison is made of the approaches adopted towards the treatment of Software Engineering (SE) in the two versions. Finally, a critical appraisal is presented with regard to the changes introduced in the course. Ó 1999 Elsevier Science Inc. All rights reserved.	experience;software engineering;software industry;thumbnail	J. Barrie Thompson;Helen M. Edwards	1999	Journal of Systems and Software	10.1016/S0164-1212(99)00086-2	engineering management;computer science;engineering;software engineering;management;mechanical engineering	SE	-79.55552256601383	-29.649463114721186	100369
cab90b960c56ffd32029817835c9ebce8fca056f	designing a game for occupational health and safety in the construction industry	occupational health and safety;constructive induction;learning;construction industry;hazard identification;knowledge transfer;serious game	Safety in the construction industry is important because people continue to be injured on construction sites. To address this, the Australian construction industry and its regulator, the Office of the Australian Building and Construction Commissioner, have required that anyone who intends to work on a construction site must complete an Occupational Health and Safety (OH&S) construction induction process.  One quite complex section of the construction induction training deals with the identification of hazards and the management of hazards through controls to prevent workers from injury. There is a multitude of worksite hazards and many OH&S controls.  A key challenge for OH&S training is to engage learners. Serious Games are a promising vehicle to engage learners and enhance their retention of important concepts. This paper reports on the design decisions and the development of an informative and entertaining game, which is intended to motivate users to learn about workplace hazards. The game is also intended to help users retain their knowledge of workplace hazards and their management, and to assist with knowledge transfer into the real world.	information;mathematical induction;powerset construction;the australian	Stefan Greuter;Susanne Tepe;J. Fiona Peterson;Frank Boukamp;Kimberley d'Amazing;Kalonica Quigley;Rhys van der Waerden;Thomas Harris;Tim Goschnick;Ron Wakefield	2012		10.1145/2336727.2336740	simulation;construction engineering;engineering;operations management;construction management	HCI	-84.07956337506825	-28.381739677868676	100807
5003c57cd4c02f90fd60ffca98f77a9955c7bc75	"""improvements on teaching methods and contents for the """"computer organization and architecture"""" curriculum"""	computers;software;computer science engineering;computer science student training;computer organization and architecture;computer architecture;computer science education;computational science and engineering;educational courses;fundamental course;curriculum content improvement;teaching method;teaching methods;pipeline processing;teaching;concrete;hardware	“Computer Organization and Architecture” is one of the most important fundamental courses for those majoring in computer science and engineering. The contents of the curriculum are crucial for entire computer discipline and computer systems. As a result, the curriculum plays an important role in training computer science students. This paper begins with the discussion on principles and goals of the curriculum. Then, it describes teaching philosophy and methods, improvements of contents, along with their effects, for lectures and experiments of the curriculum. Finally we review some experiences from the development and teaching of the curriculum. This paper intends to share experiences in teaching the curriculum with other institutes in China and provide them with a potentially useful instructional model.	central processing unit;computer science;computer-aided design;experience;experiment;microarchitecture;progressive enhancement	Chunfeng Yuan;Yihua Huang;Zhesheng Zhang;Guihai Chen;Wan-Chun Dou	2009	2009 International Conference on Scalable Computing and Communications; Eighth International Conference on Embedded Computing	10.1109/EmbeddedCom-ScalCom.2009.110	emergent curriculum;computer science;curriculum mapping;software engineering;pedagogy;curriculum theory;computer engineering	Robotics	-79.66421520843494	-34.43117995589312	101015
0142ab145d39ef1f71729ba37c55029675b06efc	teaching and learning computing via social gaming with pex4fun (abstract only)	debugging;dynamic symbolic execution;programming language;real time;teaching and learning;testing;program evaluation;symbolic execution;high school;social experiment;educational technology;social gaming;programming;serious game;problem solving	Pex4Fun (pexforfun.com) is a web-based serious gaming environment for teaching computing at many levels, from high school all the way through graduate courses. Unique to the Pex4Fun experience is a cloud-based program evaluation engine based on dynamic symbolic execution and SMT-solving, which provides customized feedback to the student and automated grading for the teacher. Thus, Pex4Fun connects teachers, curriculum authors, and students in a social experience, tracking and streaming progress updates in real time. In particular, Pex4Fun finds interesting and unexpected input values that help students understand what their code is actually doing. The real fun starts with coding duels where students write code to implement a teacher's specification. Pex4Fun finds any discrepancies in behavior between the student's code and the specification. Then based on the reported discrepancies, the student improves his or her code towards the specification. Pex4Fun can be used to develop interesting, engaging, and demanding class materials on mathematics, algorithms, programming languages, or problem solving in general. A teacher can use an integrated wiki to author these class materials for students to work through. This workshop involves creating and teaching course materials at Pex4Fun. Participants should bring a laptop computer. The intended audience includes all levels of CS educators who are interested in integrating educational technology in their teaching environments.	algorithm;cloud computing;laptop;problem solving;programming language;symbolic execution;web application;wiki	Nikolai Tillmann;Jonathan de Halleux;Tao Xie;Judith Bishop	2012		10.1145/2157136.2157340	programming;educational technology;simulation;social experiment;program evaluation;computer science;theoretical computer science;operating system;software engineering;multimedia;software testing;programming language;debugging;pedagogy	SE	-82.61365575819656	-37.4458923864374	101209
4cc57e148543d24600c4df0242eeb908c9be3005	a tutorial proposal on: advanced technical communications for esl engineers and ooi	technical writing and presentation;english as a second language esl	A recent IEEE course authorized for granting CEU credits, titled: Advanced Technical Writing & Presentation Skills, is designed for English-as-a-Second-Language (ESL) Engineers and Others of Interest (OoI). This course was offered in the Global Conference on Consumer Electronics (GCCE-2015) in Osaka, Japan; the International Conference on Consumer Electronics, ICCE-Taiwan-2016; and twice at the National Central University in Zhongli, Taiwan, in February and June, 2016, respectively. Feedback from participants has rated the course at 97% satisfaction. Demonstrations with grammatical subtlety, cultural difference, cognitive style, and logical thinking are shown with graphical illustrations to breakdown the language barrier.	authorization;feedback;graphical user interface	Narisa N. Y. Chu	2017	2017 IEEE International Conference on Consumer Electronics (ICCE)	10.1109/ICCE.2017.7889235	telecommunications;computer science;engineering;electrical engineering;multimedia;algorithm	Robotics	-77.53815966557225	-31.251810220371265	101273
dfa6e83370af16dff4701c33f6884e7f515f64ca	fine tuning online faculty development workshops	blackboard vista;online course development;faculty development;e learning;blackboard learn 9;wimba classroom	At West Virginia University (WVU), the Office of Information Technology and the Instructional Technology Resource Center (ITRC) have been teaching a variety of online faculty development workshops since the spring of 2008. We currently use Blackboard Vista and Wimba Classroom as our platforms to deliver self-paced workshops and synchronous live webinars. This paper summarizes refinements we have made over the past four years based on lessons learned while developing our current program. Issues include managing enrollment and providing follow-up support in addition to workshop design and delivery. Future challenges face our online workshop development efforts as WVU prepares to migrate to Blackboard Learn 9 and Blackboard Collaborate products over the next two years.	blackboard system	Kathryn Fletcher	2012		10.1145/2382456.2382512	simulation;engineering;multimedia;mechanical engineering	HCI	-78.50039939589621	-32.71767357352307	101403
ae45481c78a5e32896b1fda73dafc481912ca927	project management 101: plan well, communicate a lot, and don't forget acceptance criteria!	project management;digital library;digital libraries;project manager;best practice;software development;digitization;project planning;design methodology	Purpose – The purpose of this paper is to describe basic and simple practices for technology project management. These practices are the ingredients for all successful software development and digitization projects.Design/methodology/approach – Using project management best practices and personal experience, the paper describes three factors on which a successful technology project must be based.Findings – Whether they are full‐time professionals or part‐time novices, managers for successful technology projects ensure that their project is well planned, and that all stakeholders communicate clearly and frequently.Originality/value – Librarians often lack formal training in project management and learn project management skills on demand. The paper gives essential tips for project success.	software project management	Frederick Zarndt	2011	OCLC Systems & Services	10.1108/10650751111164542	basis of estimate;project management;extreme project management;digital library;program management;project stakeholder;earned value management;project;design methods;software project management;opm3;computer science;knowledge management;project sponsorship;software development;project risk management;project management 2.0;project management triangle;management;project charter;world wide web;schedule;project planning;best practice;project portfolio management	AI	-82.06165418596841	-31.95407453719555	101675
e6536211caf2e2864cebc87c1f5ebf96297bcef6	initiating pilot research on enhanced physics 1 for electrical and electronic engineering students		Worldwide, Electrical and Electronic Engineering (EEE) students experience difficulties when studying enhanced physics courses. This situation has also been encountered in a prestigious college of engineering in the north of Israel over the last 25 years. The EEE students' grades in physics courses are dramatically lower than in other courses, even when compared to very complicated courses For example, the average grade on the final exam in enhanced physics 1 of the last semester is 34 (out of 100). Therefore, the authors of the current paper continue to search for efficient methods to improve the student achievements and reduce the number of failures. We believe the current research, in which physicists and EEE lecturers work together to find efficient methods to cope with a worldwide difficulty (improving the students' achievements in physics) deserve to report at an international conference.	asus eee pc;electrical engineering;electronic engineering;final exam	Nissim Sabag;David Pundak;Elena Trotskovsky	2018	2018 IEEE Global Engineering Education Conference (EDUCON)	10.1109/EDUCON.2018.8363257	engineering education;engineering;electronic engineering	DB	-79.9577618056943	-32.65167046396525	101830
c378fc0567e765f82e0943ab3483f23ffb4838ce	a five-year analysis of university initiatives to increase faculty engagement	educational needs;seminars;technology development;course content;higher education;immersion programs;academic achievement;skill development;educational technology;models;college faculty;grants	"""D ATA from the educational technology development initiatives (technology grants and technology-immersion seminars) were used to map trends in the technology development of faculty at a large, research-one, public university. The study's populations are described by gender, appointment status, and disciplinary area. Changes over a five-year period (1999-2003) in faculty baseline technology skills and interests are tracked; the success of programs in increasing faculty technology use are measured; and effects of institutional supports on the continued development of faculty competencies are discussed. An analysis of data showed that faculty maintained consistent interest in and need for baseline skill development and that these instructional needs were well met by the technology immersion programs. The faculty-grant program demonstrated gradual progress in baseline skills from simple Web-based dissemination of course content to more interactive modalities. It supported best the """"early adopter"""" faculty, whereas the immersion seminars served best the needs of novice users. Both programs resulted in successful educational technology implementations, however, all participants required ongoing support. Program successes substantiate continued support for educational technology instruction for faculty that accommodates faculty culture by providing broad-based and diverse models. ("""	baseline (configuration management);ce-ata;immersion (virtual reality);population;serial ata;web	Carole Ann Fabian	2006	J. Computing in Higher Education	10.1007/BF03032696	psychology;educational technology;higher education;world wide web;pedagogy	HCI	-77.74202550117202	-34.72640392708215	101930
ddc52418dc5a8cd57da96a905d1685e072867c4e	instructional technology software reuse: a case study		Software reuse is a major issue in information systems research; it has become a particularly important area of focus recently with regard to instructional software. We report here on an experiment in which a set of three Web-based interactive labs developed by researchers at one university for a course at that university, were modified and reused in a similar course at another university. The paper focuses on implementation details of the project, assessment results, and observations regarding guidelines for successful reuse of non-commercial instructional technology.	code reuse;information systems research;information system;systems theory	Rob R. Weitz;Viswanathan Kodaganallur;David Rosenthal	2004			human–computer interaction;systems engineering;engineering;software engineering	SE	-81.65118071543449	-32.42340975264159	102357
32e7baa88519346367930d95ac24329552bb1b3f	designing programming tasks to elicit self-management metacognitive behavior	first year;data gathering;information technology;programming profession education conferences information technology slabs books monitoring educational programs cognition problem solving;introductory programming;computer science education;educational courses;educational courses computer science education programming teaching;information technology degrees programming tasks design self management metacognitive behaviour introductory programming courses first year students;programming;teaching	In most introductory programming courses tasks are given to students to complete as a crucial part of their study. In this paper, a set of guiding principles is presented for designing programming tasks aimed to elicit metacognitive behaviours in first year students. The main source of data gathered for this study is provided by first year programming students that studied in two different Information Technology degrees.	self-management (computer science)	Angela Carbone;Ian M. Mitchell;Dick Gunstone;A. John Hurst	2002		10.1109/CIE.2002.1185998	programming;computer science;multimedia;law;information technology;pedagogy;data collection	HCI	-79.59092840781	-37.70633442574829	102613
ce68ea8b348d5e2a394aee3e6cc566875b10497c	reflections on software engineering education	developpement logiciel;education software engineering;user interface;educational software program;didacticiel;software engineering;user interfaces computer science education educational courses software engineering;software engineering education;educational software;computer science education;desarrollo logicial;swebok represent;educational courses;software development;genie logiciel;swebok represent software engineering education industrial project user interface low level design;industrial project;programa didactico;reflection software engineering educational institutions electrical capacitance tomography engineering education organizing knowledge engineering guidelines educational programs humans;educacion;ingenieria informatica;user interfaces;low level design	"""The """"engineering"""" focus in software engineering education leaves instructors vulnerable to several traps. It also misleads students as to SE's essential human and social dimensions. Here, the author discusses how this limited conception of SE contributes to five assumptions that can trap SE educators: (i) an SE course needs an industrial project. (ii) SE is like other branches of engineering. (iii) Planning in SE is poorly done relative to other fields. (iv) The user interface is part of low-level design. (v) SWEBOK represents the state of the practice"""	amiga reflections;software engineering	Hans van Vliet	2006	IEEE Software	10.1109/MS.2006.80	human–computer interaction;computer science;systems engineering;engineering;software engineering;user interface	SE	-83.03572760054001	-34.24819397918797	102919
79ab14fcaf65a6deb86077abd11ae90fa6b78c13	technology workshops by in-service teachers for pre-service teachers	instructional technology;technology;professional development;pre service teachers;teaching	This project was an initiative through university courses to have graduate in-service teachers, who have learned the use of technology for classroom instruction, offer workshops to undergraduate pre-service teachers. The goals of the project were two-fold. One was to prepare in-service teachers for collegial leadership in using instructional technology through experience in planning and offering workshops to pre-service teachers, and the second was to prepare pre-service teachers for the instructional use of technology in the classroom. To accomplish these objectives, a multiple sections undergraduate professional development course for pre-service teachers was given during a 14 week semester. Forty-three pre-service teachers were in the course. The pre-service teachers were required to develop in conjunction with a classroom teacher a lesson that could be given to elementary or secondary students. Concurrently, a graduate course on using technology in the classroom was offered to the in-service teachers, who were giving the workshops to the pre-service teachers. Twelve in-service teachers administered the workshops. Surveys on all aspects of the project were given to the undergraduates, graduates and cooperating teachers.On a scale from 1 to 4 the undergraduate pre-service teachers' average rating of the success of the workshops given by the graduate in-service teachers was 3.34. The graduate in-service teachers' average rating on the same scale with respect to the success of their experiences with technology and the workshops was 3.40.Finally, 18 cooperating classroom teachers mentored the pre-service teachers' technology lessons in the schools. Their average rating of the success of the pre-service teachers' lessons was 3.79. Evaluation of the successes of the project and weaknesses discovered will be discussed.		John H. Durnin	2001		10.1145/500956.501013	mathematics education;cognitively guided instruction;medical education;engineering;pedagogy	HCI	-78.77972933910729	-33.81548057814186	103151
dc0b5bfd108cc8436fa8ab778d0d3dc2c1f504c4	computational art: introducing high school students to computing via art	k 12 education;introductory programming;computer science education;applied computing fine arts	Introducing computer science to high school students in a creative context, and fitting such a course into an overly packed high school curriculum, is a challenge. This paper describes a fruitful collaboration to create and teach an alternative introductory computing curriculum for high school students targeted at introducing students to computing via an artistic context. This curriculum allows students to be introduced to computing in a highly interest based context, attracting diverse student body participation (25% female students in the first offering and 38% female students in the present 2015-16 offering). This curriculum also fulfills student's fine art course requirement making it more readily accessible to a wide audience to `try out' CS while making progress on their academic goals. This curriculum has been used as a successful introduction to computing at the Santa Barbara High School CS Academy in the 2014-2015 school year and is currently being offered again this year. In this paper, we present the curriculum and evaluation of this initial offering.	academy;computation;computer science;requirement	Zoë J. Wood;Paul Muhl;Katelyn Hicks	2016		10.1145/2839509.2844614	computer science;multimedia;pedagogy	HCI	-79.50949054750276	-34.818272663161785	103217
6031e13dea4cd4dbd32f4f6b61fc1dad48e772fd	enabling and encouraging productive student collaboration online	taulbee survey;computing trends;computing survey;computing education data and analysis	38 acm Inroads 2013 September • Vol. 4 • No. 3 ph o to : © fr o x x f o to li a .c o m Enabling and Encouraging Productive Student Collaboration Online [3] — a free online service — to support this course. i am pleased that i did so because the intensity of student engagement and the depth of exploration that emerged from the online interaction on piazza clearly exceeded my expectations.1 for me, the total of 1013 student and faculty contributions in a semester-long course of 24 students was already an excellent outcome, but even more importantly was the exploratory problem-solving nature of the communication exchanges that took place. Based on publicly available information, only a few faculty members at business schools or other typical homes of iS programs have adopted piazza (or another tool with similar capabilities). this is a missed opportunity, and i would like to use this column to encourage my iS faculty colleagues to give piazza a try.	online service provider;problem solving	Heikki Topi	2013	Inroads	10.1145/2505990.2505995	computer science;knowledge management;data science;world wide web	Theory	-78.85556997169283	-30.167322228439566	103244
52323e87723f6a8da69995a2620e399fd3d95fe2	student-directed learning: hong kong experiences	learning process;future directions student directed learning city university of hong kong education instructional methods educational technology prototype environment graduate course student feedback data;teaching educational courses educational technology;learning environment;student feedback;educational courses;educational technology;education information systems prototypes feedback problem solving computer networks multimedia systems electronic mail web sites information analysis;teaching	Many departments and individuals are considering adopting a problem-based learning (PBL) approach in their programmes. It may be helpful for teachers to hear about our experience with the design and implementation of a pilot project using PBL in Speech and Hearing Sciences. We were attracted to PBL because we face two major problems: teachers are required to ensure coverage of an ever-expanding knowledge base, and students are required to integrate content across subjects. PBL specifically addresses these issues as it is based on studentcentred learning whereby students identify their learning goals, learning resources and learning pace, and evaluate their learning, with teachers acting as guides in the process. Over several years we had tried various modifications to our curriculum to include case studies, multi-media learning packages, and hybrids of problembased learning. Although these modifications helped somewhat, both staff and students were frustrated by the piece-meal implementation of innovations within an existing curriculum. We recognized the need for a complete revision of the teaching/learning paradigm, possibly to a PBL approach and instigated a pilot project as a first step. The pilot was motivated by reports of the effectiveness of PBL at the University of Hong Kong (Dixon, 1996; Kwan, 1996; Stokes, 1994) and elsewhere (e.g., Dolmans, 1994; Ma, 1996; Mullins, 1995; Simsen, 1996; Woodward, 1989).	dixon's factorization method;knowledge base;navier–stokes equations;programming paradigm	Douglas R. Vogel;Christian Wagner;Louis C. K. Ma	1999		10.1109/HICSS.1999.772812	educational technology;blended learning;learner autonomy;computer science;knowledge management;experiential learning;learning sciences;teaching and learning center;multimedia;open learning;synchronous learning	AI	-78.13961173808667	-35.7630971279297	103316
1c73213fb06f43e04a205f81e7a40c1819912e15	student beliefs about learning communication skills	employment;communities educational institutions abstracts engineering education employment;natural language processing educational computing engineering education;student beliefs communication situated learning;abstracts;open coding procedures communication skills learning student beliefs engineering students engineering education focus groups;engineering education;situated learning;student beliefs;communities;educational computing;communication;natural language processing	Communication remains an essential skill for engineering graduates in both academic and industry settings, and ABET considers it a key student learning outcome for accreditation. Despite numerous studies of effective approaches to integrating communication into disciplinary courses, few engineering courses apply those approaches. To address this gap, we have undertaken a multi-year mixed methods study to explore faculty and student beliefs about communication. Faculty beliefs have been reported elsewhere; this paper focuses on student beliefs. We analyzed five focus groups conducted with engineering students at partner schools. The focus groups sought to uncover students' beliefs about where and how they learned communication skills within their engineering education. Focus groups were recorded and transcribed verbatim, then coded using standard open-coding procedures. The findings indicate that while students do have opportunities to practice communication in engineering courses, they may not always have optimal opportunities to learn communication in those courses. Most notably, students desired more examples and direct instruction for communication skills, including not only samples of “good” documents but also explanations about why they were good. Identifying pedagogical gaps between faculty practice and student experiences can help us develop targeted strategies to help creatively integrate these critical skills into an already packed engineering curriculum.	experience;focus group	Kelly J. Cross;Marie C. Paretti;Holly Matusovich	2013	2013 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2013.6684827	computer science;knowledge management;multimedia;pedagogy	HCI	-77.89686920060515	-35.901493534057956	103482
8a41e871dfff3c876f03f752d961869c6be17f7c	artificial intelligence research in statistics	artificial intelligent	THE INITIAL RESULTS from a few AI research projects in statistics have been quite interesting to statisticians: Feasibility demonstration systems have been built at Stanford University, AT&T Bell Laboratories, and the University of Edinburgh. Several more design studies have been completed. A conference devoted to expert systems in statistics was sponsored by the Royal Statistical Society. On the other hand, statistics as a domain may be of particular interest to AI researchers, for it offers both tasks well suited to current AI capabilities and tasks requiring development of new AI techniques. Statisticians do a variety of tasks, some of which can now be assisted by expert system techniques. One common task is data analysis-application of statistical tools to a particular set of data to reach some conclusion. Another is experiment design-planning the collection of data so that it can be easily analyzed to reach a conclusion. These tasks are frequently done in a consulting environment. Expert system techniques have recently been applied to these two tasks. The statistics discipline has been developing for the past 100 years, most dramatically since the widespread availability of modern computers. Some of the knowledge developed by research statisticians is regularly taught-for example the lore of the normal distribution, student’s t-test, analysis of variance methods, and linear regression analysis. But some statistical knowledge is not yet so formalizedspecifically how these and other methods are chosen and applied to analyze data in practice (which process we call strategy). The formalized knowledge indicates depth in the domain, while the informal knowledge indicates an opportunity for AI techniques. Specifically, it appears that expert system techniques can provide a framework for formalizing strategies of data analysis, thereby opening the subject to research by statisticians. This prospect has excited many statisticians. The existence of extensive statistical packages suggests that AI contributions to data analysis will be intelligent interfaces, an area of little development. These interfaces could provide guidance, interpretation, and instruction, which are needed by novice users and are not available in current packages. Like AI, statistics is a study of tools for use in other domains. This attribute implies that knowledge from three domains impinges on intelligent statistical analysis systems--AI, statistics, and the “ground” domain. While current systems suggest it is possible to rely on a user to supply ground	artificial intelligence;computer;design of experiments;expert system;interpretation (logic);list of statistical packages;nouvelle ai;runge–kutta methods	William A. Gale;Daryl Pregibon	1985	AI Magazine		applications of artificial intelligence;computer science;engineering;artificial intelligence	AI	-88.60601480211044	-36.17718149315215	103631
7ed49a534851599bbe789e745363edff3e3cc814	social networks of researchers and educators on nanohub.org	social network services;nanohub user;citation network;formal classroom education;citation analysis;document handling;technological innovation;social networking online citation analysis document handling educational administrative data processing nanotechnology natural sciences computing;citations document;bepress selected works;simulation;collaboration;quantitative metrics;nanotechnology;automated usage analysis;nanohub org;communities education computational modeling nanotechnology social network services technological innovation collaboration;social network;computational modeling;author network;educational administrative data processing;hubzero technology;simulation program;social networks;social networking online;knowledge transfer;nanohub;publication network;resources document;scientific literature social networks simulation program nanohub user automated usage analysis formal classroom education resources document research collaboration author network publication network capacity building knowledge transfer citations document quantitative metrics hubzero technology user focused design nanotechnology user facility science gateway nanohub org;communities;natural sciences computing;user focused design;grid computing nanotechnology simulation citation network nanohub science gateway cloud computing;scientific literature;grid computing;nanotechnology user facility;science gateway;cloud computing;capacity building	The science gateway nanoHUB.org is the world's largest nanotechnology user facility, serving 167, 196 users in 2010 with over 2,300 resources including 189 simulation programs. Surveys of nanoHUB users and automated usage analysis find widespread simulation use in formal classroom education, thereby connecting recent research more rapidly and closely to education. Analysis of 719 citations in the scientific literature by over 1,300 authors to nanoHUB.org resources documents use of simulation programs by new research collaborations, by researchers outside of the community originating the program, and by experimentalists. The publication and author networks reveal research collaborations and capacity building through knowledge transfer. Analysis of secondary citations documents the quality of the conducted research with an h-index of 30 after just 10 years of operation. Our analysis proves with quantitative metrics that impactful research can be conducted by an ever growing research community. We argue that HUBzeroTM technology and the user-focused design and operation of nanoHUB.org are keys to success that can be transferred to other science gateways.	code;scientific literature;simulation;social network;usage analysis;nanohub.org	Gerhard Klimeck;George B. Adams;Krishna P. C. Madhavan;Nathan Denny;Michael G. Zentner;Swaroop Shivarajapura;Lynn K. Zentner;Diane L. Beaudoin	2011	2011 11th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing	10.1109/CCGrid.2011.33	computer science;knowledge management;data science;operating system;database;citation analysis;world wide web;social network	Arch	-80.77298362410323	-24.42137704073294	103685
bb96e716f96fb8dbd9a299cd1d47bcd92fb2c41c	development of power assist on omni-directional mobile wheelchair considering operationality and comfort		s of Postgraduate Dissertations .................................................... 27 Abstracts of Final Year Project Dissertations ............................................. 29s of Final Year Project Dissertations ............................................. 29 Copyright © 2007 Centre for Intelligent Information Processing Systems. All rights reserved DIRECTOR’S REPORT 2006 The year 2006 was another busy year for CIIPS with many and varied projects carried out as part of the Centre’s active research programme. The Centre also hosted a diverse group of international visitors and scholars in 2006 from Germany, Japan and Korea. The year 2006 also saw some changes and new faces at CIIPS and we welcome our new administrative secretary Ms Linda Barbour and congratulate Dr Terry Woodings on his successful PhD and appointment as an adjunct Associate Professor. The Centre has also maintained its success at attracting a large cohort of finalyear project students involved with projects covering a range of discipline areas in intelligent control, information systems and signal processing. This has been complemented by students from the MEICT and DEICT programme undertaking their dissertation component with CIIPS which is expected to strengthen over the coming years. In 2006 the Centre was also successful in securing a significant industry grant ($130,000) through the ISER Group. Once again 2006 was an uncertain year in terms of undergraduate student numbers entering the discipline. The BE(IT) programme, which has been under annual review in response to decreasing enrolments, was renamed the BE(CE) programme to better reflect its emphasis. Due to efforts of the School’s marketing current indications are for a turnaround in numbers across all the programmes offered by the School. Even so, there is expected still to be a drop in the number of final-year project students in 2008 which may affect the Centre. Other challenges to be faced by the Centre over the coming year are consequences arising from the 2006 School review and the renewal of the Centre which is due at the end of 2007. Given the research strength and diversity enjoyed by the Centre it should be well placed to meet the coming challenges and adapt accordingly and ensure that CIIPS continues to play an important role in the IT education of all engineers at UWA and remains a significant partner for research in academia and industry.	information processing;information system;intelligent control;linda (coordination language);report;signal processing	Juan Urbano;Kazuhiko Terashima;Takahiro Nishigaki;Takanori Miyoshi;Hideo Kitagawa	2005			engineering;simulation;control engineering;wheelchair	AI	-78.43226180589959	-29.84553845412356	103716
c5c122ee0d57d160aff4e6c6df8ee78930e4a85d	overstating summer reading impact: the dominican study	experimental design;programa;impact assessment;treatment effect;program;north america;america del norte;amerique du nord;amerique;efficiency;reading;influencia;etats unis;estados unidos;treatment effects;internal validity;influence;eficacia;lecture;effectiveness evaluation;programme;efficacite;ete;evaluation;evaluacion;lectura;america;public libraries;summer;summer reading programs;quasi experimental design;verano	In the field of program evaluation there is a difference between assessing a program’s outcomes and assessing its impacts. Outcomes are characteristics of program participants that reflect benefits that a program is designed to produce. Outcome studies report observed changes in these characteristics. Due to their data-collection methods, outcome studies are usually insufficient bases for concluding that a program is the sole cause of any changes observed. Consider the example of a university program designed to increase retention of freshmen students. The program’s outcomes would be whether students drop out of the university before completing their freshmen year. Suppose researchers find that the dropout rate decreased this year compared with last year. This decrease could be explained by events other than the university’s retention program. Maybe an economic downturn limited the student’s options, keeping freshmen in school longer. Or perhaps a large proportion of displaced and highly motivated workers entered the freshman	dropout (neural networks)	Ray Lyons	2011	Public Library Quarterly	10.1080/01616846.2011.548183	internal validity;economics;environmental protection;impact assessment;evaluation;efficiency;average treatment effect;quasi-experiment;design of experiments;management;reading;statistics	HCI	-79.29342108031231	-24.470899331834158	103901
a1fe6aae23c2548f3097b8104c107c63e02e1cbf	curricular syncopations: using the hill-climbing algorithm with curricula and courses		Many readers of ACM Inroads may be familiar with the Hill-climbing Algorithm. After a quick review of the algorithm, this column notes common uses of the algorithm in curricular development and course refinement. At first, little of this discussion may appear new or different—except the jargon of hill climbing may seem unusual. However, details of hill-climbing and its inherent limitations may yield insights into curricular and course development. Throughout, the column presents examples in which well-meaning faculty have applied hill-climbing to curricula and/or courses—sometimes with great success (soaring with eagles) and sometimes with less than optimal results (watching the building burn).	algorithm;hill climbing;jargon;refinement (computing)	Henry MacKay Walker	2016	Inroads	10.1145/2897737		Graphics	-80.87337916159878	-33.41942164955427	103925
3a93ea7b545fd813ceecd598cf71862a0b623de1	sharing instructional materials for it degree programs	sharing instructional materials;digital library;time sharing;software engineering;it education;computer education	The goal of this session is to start a discussion among IT educators about the value and possible approaches to sharing instructional materials.  IT is the computing discipline for which the community of educators has most recently organized (as measured by milestones such as accreditation and development of a curriculum model). Sharing instructional materials and providing broader access to materials is an important step in continuing to develop a cohesive community of IT educators.  At the same time, sharing materials is very difficult to do well. Faculty reward systems generally do not give much weight for any efforts that faculty members make to share their instructional materials with others. In addition, it is difficult to find the right form so that materials are easy to locate, and useful in contexts beyond the course for which they were developed.   As organizer of this session, my interest in this topic is driven by the experience of leading an effort to create a BSIT degree program and obtain accreditation for it. My interest is also driven by current and prior work in several areas including:  SWENET - SWENET is an NSF-funded repository of instructional materials related to software engineering. SWENET is a possible model for an IT materials collection. SWENET is located at http://swenet.org.  IT 2008 - With the release of this curriculum model, there is a framework that could provide a basis for developing and organizing shared instructional materials.  Ensemble - Ensemble is an NSF-funded effort to create a digital library to support all of computing education, including IT. Additional information about Ensemble can be found at http://computingportal.org	bachelor of science in information technology;digital library;electronic organizer;ibm notes;organizing (structure);software engineering	Gregory W. Hislop	2009		10.1145/1631728.1631792	digital library;simulation;computer science;knowledge management;multimedia;world wide web;time-sharing;pedagogy	HCI	-79.56427283601568	-30.88629711577742	104498
55f62b016ede2b4c08e5d94ff485a5e5c13d23b5	cluster security - the paradigm shift	teaching grid computing course;structure course material;grid computing;paradigm shift;grid protocol;cluster security;grid programming;graduate computer science student;educational material;clark college;undergraduate computer science student;grid computing course	Grid protocols and technologies arc being adopted in a wide variety of academic, government, and industrial environments, and there is a growing body of research-oriented literature in grid computing. However, there is a need for educational material that is suitable for classroom use. This paper describes our topics, exercises and experiences of teaching grid computing courses in the fall semester, 2004. to undergraduate computer science students at Lewis & Clark College and to a mix of undergraduate and graduate computer science students at the University of Arkansas. We identify a set of six knowledge areas that can help to structure course material in grid computing. In conclusion, we recommend that a grid computing course cover, or have as prerequisites, material on (1) remote method invocation and (2) security and certificates. Finally, student comments indicate the need for a series of grid programming exercises of increasing complexity.	programming paradigm		2005	CCGrid 2005. IEEE International Symposium on Cluster Computing and the Grid, 2005.	10.1109/CCGRID.2005.1558536		Arch	-79.96011189325021	-32.74498586569558	104569
b2ebcd7c01a4628ba241ee9cf071559544e1b9ab	analysis of program outcomes in project bee - outreach together 2012	outreach together 2012 project bee program outcomes analysis pusan national university training model advanced engineering students engineering service design program multidisciplinary teams korean students indonesian students surabaya orphanages global capability technology appliance interpersonal skill synthetic thinking communication skill self management capability innovation center for engineering education;training;abeek project bee engineering service learning program outcomes basic job ability innovation center for engineering education abet;training educational institutions engineering education innovation management;innovation management;engineering education educational institutions prototypes materials communities writing;engineering education	Innovation Center for Engineering Education at Pusan National University has been developing a training model for advanced engineering students to globally involve themselves. We developed the engineering service design program which is Project BEE - Outreach Together for multi-disciplinary teams of Korean and Indonesian students. In February 2012, students found local issues, derived ideas for solving problems, made products and installed them at orphanages in Surabaya of Indonesia. All participants increased the program outcomes like as global capability, technology appliance, interpersonal skill, synthetic thinking, communication skill and self-management capability. Above all, they increased the global capability and communication skill than the other program outcomes.	self-management (computer science);synthetic intelligence	Young Bong Seo;Jiin Eom;Min Jeong Jeong;Yang Eun Kim;O. Kaung Lim	2013	2013 IEEE Global Engineering Education Conference (EDUCON)	10.1109/EduCon.2013.6530093	engineering management;engineering;knowledge management;pedagogy	SE	-79.06412689306563	-33.05550205087083	104639
ed52be77a21c494a52bdd75e33c8e5d1178addf4	fair division as a means of apportioning software engineering class projects	student project;student projects;software engineering;software engineering education;student teams;fair division	In a junior- or senior-level undergraduate software engineering course that uses real-world projects for real clients, different parts of a project are inherently unequal in difficulty, time requirements, and desirability. A perennial problem is assigning portions of the project to student teams equitably. Fair division is a highly effective strategy for making an equitable, proportional, and envy-free assignment of tasks and in serving as the basis for fair grading of assignments which vary in difficulty, desirability, and time requirements.	requirement;software engineering	Jon Beck	2008		10.1145/1352135.1352161	fair division;software project management;software engineering	SE	-82.51774942055339	-33.79458869485209	105109
4e9e16c6a8d5a5c21b9ed26284397db5281d122a	information security education – towards a cybersecure society		Many people know how to compromise existing systems, and capture-the-flag contests are increasing this number. There is a dearth of people who know how to design and build secure systems. A collaborative contest to build secure systems to meet specific goals—a “make-the-flag” exercise—could encourage more people to participate in cybersecurity exercises, and learn how to design and build secure systems. This paper presents a generic design for such an exercise. It explores the goals, organization, constraints, and rules. It also discusses preparations and how to run the exercise and evaluate the results. Several variations are also		Alexander I. Tolstoy	2018		10.1007/978-3-319-99734-6		HCI	-81.61851269098712	-28.594966461131452	105229
057a2457c67fc71f6b86366c9ca1a3fa2fdb9b11	prediction markets for education: an experimental study	prediction markets	In this letter, we report the results of a quasi-experimental study of prediction markets as a pedagogical tool in an undergraduate setting.	experiment	Cali Mortenson Ellis;Rahul Sami	2011	SIGecom Exchanges	10.1145/2325702.2325709	simulation;actuarial science;economics;computer science;marketing	ECom	-83.78759316512088	-29.050391034565703	105352
9fba6160f61622a871aa847ce686b73ad35228c1	methodology of teaching software engineering: game-based learning cycle	conflict resolution software engineering game based learning cycle education process computer game teaching learning process software development life cycle software design software testing debugging open source libraries version control system domain specific programming language team working project management;games software computer languages programming profession educational institutions;computer learning games teaching learning strategies software development;computer aided instruction;teaching learning strategies;software engineering;computer learning games;computer science education;program testing;software development;software engineering computer aided instruction computer games computer science education program debugging program testing;program debugging;computer games	Teaching software engineers presents some specific problems. There are modern approaches that may make the education process easier and more appealing. A remarkably promising example of this is the use of computer games in the teaching and learning process. We suggest a methodology of two-fold use of learning games for teaching software engineers. Students, experienced in programming, develop learning games, and then we use the games that are developed for teaching the next generation of students. After gaining skills in basic subjects these students are involved in the development of new learning games. Teachers in our department play the role of customer, as they are interested in getting new effective tools for teaching and are ready to participate in our work. Students developing games learn all the software development life cycle phases including testing, deployment and maintenance, they contact real customers (teachers of corresponding subjects) and real users (students, learning these subjects). Student teams have developed several games that are used for teaching new students. Students, who participated in game development, gained such important professional skills as software design, testing, debugging and development, working with open source libraries, version controls systems, other modern tools and domain-specific programming languages. Students were also trained in soft skills such as team working, project management, and conflict resolution. Teachers, using games as learning systems, notice an improvement in students' motivation in learning and their will to be involved into the learning process. Our experience of using computer games shows that this approach is very effective for improving students' skills and motivation to study.	debugging;domain-specific language;library (computing);open-source software;pc game;programming language;software deployment;software design;software development process;software engineer;software testing;video game development	Olga Shabalina;Natalia Sadovnikova;Alla Kravets	2013	2013 3rd Eastern European Regional Conference on the Engineering of Computer Based Systems	10.1109/ECBS-EERC.2013.22	personal software process;educational technology;computing;simulation;software engineering process group;computer science;engineering;social software engineering;software development;software engineering;teaching method;software construction;multimedia;active learning;software development process;game testing;software peer review	HCI	-82.56268554361502	-35.71258026587294	105459
2e75de20249ac5b4984ea6aaccf722e85c3f3687	der berufswahlprozess von informatiklehrkräften	fakultat fur mathematik und naturwissenschaften mathematik und informatik dissertationen;500 naturwissenschaften und mathematik 510 mathematik	For years, the shortage of computer science teachers has been a known issue discussed among specialists in the field and policy-makers alike. Due to the low number of students seeking licensure as computer science teachers, one can expect this shortage to become further exacerbated. This raises the question: why do so few students choose to major in the teaching of computer science? The aim of this work is to research how and why current computer science teachers chose this profession by considering their individual backgrounds and identifying factors which had a positive or negative effect on their choice of a career. The research focuses on the qualitative empirical study of the career choice process, while a quantitative survey of active computer science teachers provides more in-depth information into the process that leads to choosing this career. The qualitative study has a research concept based on grounded theory. Prospective computer science teachers were interviewed regarding their career choice process, with data collected using interviews, group discussions, and written biographical statements concerning their career choice process. The data analysis uses the documentary method developed by Ralf Bohnsack. The results show that prospective computer science teachers frequently came upon this career choice through a circuitous route involving detours and changes in major. In addition to their image of computer science as a discipline and the role they envisioned themselves playing in it, their experiences of computer science instruction from their own years in school play an important role in the process. Research into the career motivations of teachers has shown that it was teachers and their experiences of instruction that were decisive to prospective teachers’ decision to enter the field at university. This is confirmed in the biographical statements written by this study’s participants, where they reported positive memories of computer science classes during their own years at school. It is these who tend to enrol in computer science education programmes as their first degree choice. While in school, they had a positive image of computer science as a discipline and the role they envisioned themselves playing in it. They frequently consider their computer science teachers as professional role models. However, most of the prospective computer science teachers surveyed either had no computer science classes in school or had negative memories of them. These respondents’ decisions to train as computer science teachers often came after detours pursuing other degrees, mostly from a teaching degree in other subjects or a computer science degree. Those who came to university intending to major in computer science usually had a positive image of computer science and their potential role in the field, but lacked any positive image of computer science teaching as a career option. Their decision to change from a pure computer science degree to one in computer science education is usually triggered by the desire for a greater social commitment in their future careers. Among student teachers who often initially have a negative image of computer science and/or their potential role in that field, their decision to switch over to the computer science education programme often comes from positive experiences in coursework with some IT component. For those switching their majors, the final decision to pursue a career in computer science education is often correctly perceived as having been driven by coincidence.		Dorothee Müller	2016			history;performance art	Logic	-84.76762544936626	-26.461114877493802	105561
3689ecad02f0edfb804e9fa709aa1857778bbf0b	integration of the model based design - industrial approach - for teaching engineering science	engineering science teaching model based design industrial approach mbd french engineering gap analysis approach engineering workflow v cycle;teaching computer aided instruction engineering computing engineering education stem;project based learning model based design stem v cycle gap analysis approach;mathematical model dc motors software packages education analytical models computational modeling numerical models	This paper will describe the association of the Model-Based Design (MBD) with the recent French Engineering Gap Analysis approach, which enables students not only to learn the Engineering workflow (or V-cycle) but also learn disciplines relevant to the selected course. We will emphasize the MBD concepts for teachers responsible for designing a MBD curriculum.	gap analysis;model-based definition	Ivan Liebgott;Ascension Vizinho-Coutry	2016	2016 IEEE Global Engineering Education Conference (EDUCON)	10.1109/EDUCON.2016.7474626	mechanical engineering technology;mechatronics;systems engineering;engineering;engineering mathematics;computer engineering;mechanical engineering	DB	-85.01440380385536	-32.73987567704942	105724
366b0e0f90ca25b9c97095f48c1df65c66ccc53b	repackaging signals, systems and circuits in the core ece curriculum	distance learning;distance learning educational courses electrical engineering education signal processing educational computing;electrical and computer engineering;distance learning ece curriculum circuits systems dsp teaching electrical and computer engineering georgia tech educational course introductory material first course computer enhanced course materials signal processing;signal processing;educational courses;electrical engineering education;circuits computer science education educational technology educational programs educational institutions signal processing digital signal processing computer aided instruction switches image processing;educational computing	For several years, we have been teaching DSP as a first course in Electrical and Computer Engineering at Georgia Tech. Such a dramatic rearrangement of the introductory material requires a new organization of topics and courses when teaching circuits and systems. In addition, the use of computer-enhanced course materials has a profound impact on the systems courses, which are quite mathematical and abstract in nature. This paper addresses some of the issues encountered when adopting a signal processing first approach.		Thomas P. Barnwell;James H. McClellan;Russell M. Mersereau;Ronald W. Schafer	1999		10.1109/ICASSP.1999.758325	distance education;computer vision;simulation;computer science;signal processing	Theory	-79.02256463167845	-34.419014167157144	106649
40e66b05d2a098c2950725b979db7f51d385f66b	designing internet instructional environments (poster)	application development;designing instruction;data storage;conceptual schema;internet;instructional environments;world wide web	In the last 15 years, there has a sea change in technology-based instructional environments. Early and simple environments such as Hypercard stacks have given way to richer interactive instructional environments where the learner is relatively free to explore at her own pace and to construct meaningful conceptual schema within the context of that environment.Transferring these new and rich environments to the Internet pose significant problems among which are security, interactive communication, data storage and bandwidth.The purpose of this poster session is to present an example of how an instructional environment can be delivered via the World Wide Web. The purpose is to identify strategies for the deliver of instructional materials and environments over the Internet. In doing so, the author hopes to open the door to discussion and to the development of well-defined tools for instructional application development.	computer data storage;conceptual schema;hypercard;internet;world wide web	Peter A. Cooper	1998		10.1145/282991.283584	the internet;simulation;computer science;conceptual schema;instructional simulation;computer data storage;multimedia;rapid application development;world wide web	DB	-77.75576411081785	-37.1176572493435	106670
4969168ec9f83e774467522b3d7986cb14711409	enhancing the computer networking curriculum	active learning;computer network	"""An increasing number of students in computer science are requesting advanced study and active learning experiences in computer networking. Employers need graduates who not only understand the fundamentals of networking but those who can quickly be involved in network administration. Meeting these demands in the curriculum suggests that new and well-planned laboratory and internship experiences should be incorporated into the computer science curriculum. However, there are some major challenges in providing these experiences; it is much more complex than just adding another compiler or server to a laboratory. This paper describes several efforts the authors are making to meet these challenges.The environment in which these efforts have been studied is a small state-supported university, Northwest Missouri State University, in rural Missouri. Northwest has over 6,200 students pursuing baccalaureate, masters and specialist degrees. The networking environment at Northwest is more robust than one might expect. In 1987, the University became the first public institution in the United States to develop an """"Electronic Campus"""" featuring University-provided, networked computing stations located in every residence hall room and faculty office. Then in 1999, each faculty member was issued a personal notebook computer and the residence halls were upgraded to Windows-based, networked desktop computers. [9]"""	compiler;computer science;desktop computer;experience;laptop;microsoft windows;server (computing)	Jon Rickman;Merry McDonald;Gary McDonald;Phillip J. Heeler	2001		10.1145/377435.377672	simulation;human–computer interaction;computer science;operating system;software engineering;active learning;pedagogy	Networks	-77.84886296094129	-29.656827685536808	107020
fc56a9a49bc83e0f1da93ecf878bfd3557610982	is changing pedagogy a good bait in attracting students to engineering?	problem based learning engineering pedagogy engineering attractiveness;standards;gender issues educational courses educational institutions engineering education further education;investment;engineering attractiveness;engineering students australia investment knowledge engineering standards;engineering students;problem based learning;engineering pedagogy;australia;melbourne engineering pedagogy pedagogical innovation victoria university policy problem based learning pbl pedagogy undergraduate engineering programs engineering courses equivalent national tertiary entry ranking enter cut off scores gender imbalance aalborg university denmark;knowledge engineering	In line with the new policy on pedagogical innovation adopted by Victoria University (VU) Policy in 2005, engineering schools at VU decided to introduce Problem-Based Learning (PBL) into their undergraduate engineering programs. It was hoped that such an action would attract more students to engineering courses at VU with higher equivalent national tertiary entry ranking (ENTER) cut off scores, be more attractive to girls and therefore address the predominating gender imbalance in engineering professions. The introduction of PBL was followed by intense publicity in secondary schools and vocational colleges. The management of both engineering schools at VU decided base their PBL model on one adopted on and used for a number of years at Aalborg University in Denmark. The initial implementation begun in some subjects in 2006 and by 2007 half the subjects in engineering curricula were designated for PBL delivery. Yet, despite the substantial investment in human resources and capital dedicated to the construction of PBL learning studios, there was little to show for the investment. There was a relatively little increase in popularity in attracting greater number of students to engineering at VU, which in terms of attractiveness remaining lowest in the packing order among engineering education providers in Melbourne. The proportion of girls selecting VU engineering as their course of study remained low. Surveys taken since 2008 among second year engineering students were part of a study to determine students' perceptions and motivations for choosing engineering as their course of study, and choosing VU engineering. The study hoped also to explore the effect PBL had on popularity of studying engineering at VU. This is the subject of this paper. The survey results revealed a mixed-bag. There was some good news. Over the seven years, the awareness of PBL at VU amongst final year secondary students has risen. More students indicated that knowledge of PBL would be more likely to attract them to VU engineering than act as a disincentive. It must also be noted that almost half of students were neutrally disposed towards PBL. Despite the liking PBL pedagogy, large proportion of students felt preferred the subject delivery was to be done in more traditional pedagogies. It suggested that students liked constructivist approaches within a more accessible framework. The relative high proportion of students indicating their desire to transfer to another university or course is a concern and needs to be addressed by the curriculum planners.	flaming (internet);problem solving;set packing;teaching method;victoria (3d figure);vu+	Josef Rojter	2015	2015 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2015.7344093	mathematics education;simulation;engineering;pedagogy	DB	-78.3420855603001	-31.231540943898832	107721
2401ae841a8db1d7eaed1bd7bbb0439607468575	ipead a/b test execution framework		This paper is aimed to propose and exemplify an A/B test execution framework. The proposed framework, that was named IPEAD (acronym for Ideation, Prioritization, Execution, Analysis and Documentation), was based on Sean Ellis' High Tempo Testing framework and in the concepts explored by Eric Ries on its Lean Startup book. A real case study is presented to illustrate each step of the proposed framework as well as the tools used on the process. The proposed framework could be used by companies or institutions that wish to improve their results through the use of A/B tests.		Jorge Gabriel Siqueira;Melise Maria Veiga de Paula	2018		10.1145/3229345.3229360	documentation;software engineering;ideation;lean startup;prioritization;data analysis;acronym;computer science	SE	-81.54332305180397	-31.606260519336853	107801
ec8aaff635ca320f0f3c4d89cb6117e41074a3d5	planning online degree programs: the stakeholders? perspectives	computer aided instruction;distance learning;educational courses distance learning internet computer aided instruction;internet;qualitative case study online degree program planning stakeholder perspective;educational courses;process planning power system modeling power system planning lenses portals network on a chip urban planning energy management power system management educational programs	In 2003 Penn State's Department of Geography submitted a proposal to the University's Graduate School to create a new professional masters degree program in geographic information systems that enables students to participate at a distance. The proposed new degree program builds upon a successful certificate program offered entirely online since 1999, in response to frequent requests by its students and an evident need in the field. An advisory board consisting of industry experts as well as university faculty members guided the design of the expanded curriculum. This paper describes the curriculum, explains the process by which it was designed, as well as how continuous program improvement will be informed by regular feedback from stakeholders. The role of the GISCI certification framework as a vehicle for students’ professional development planning is also discussed. Introduction The changing needs and expectations of a changing society pose challenges for Penn State and many other universities. One sign of change is the aging of the student body. Nationwide, between 1970 and 2000, the proportion of college students aged 18 to 21 years enrolled in college declined 24 percent, from 58.4 percent to 44.2 percent (U.S. Bureau of the Census 2001). Most college freshmen now aspire to a master’s degree as their ultimate educational goal (LaPidus 2000). Today’s “typical” graduate student “is female, in her thirties, married with dependents, and takes classes on a part-time basis while also holding a full-time job” (Kohl 2000, p. 18). Acknowledging the public’s frustration with universities’ perceived unresponsiveness to such changes, members of the Kellogg Commission on the Future of State and LandGrant Universities has argued that With a more diverse and older student population, we need a more diversified set of educational offerings. As people mature and move through successive careers, we need to be there to help them retool and retread, with special courses available at their convenience (Kellogg Commission, 1999, p. 8). The Department of Geography at Penn State’s University Park campus contributes to the University’s engagement with communities and its responsiveness to stakeholders in many ways. In 2003 the Department proposed to the University’s Graduate School an ambitious new contribution: a Master of Geographic Information Systems (MGIS) degree program to be offered through Penn State’s World Campus. The proposed MGIS will be a professional degree that complements the Department’s existing academic Master of Science degree. The MGIS will address the needs of adult professionals who aspire to leadership in the GIS profession, but whose commitments to family, career and community permit them to study only part-time and at a distance—needs not well met by the Department’s existing residential masters	apevia;certificate authority;emoticon;geographic information system;responsiveness	Angela D. Benson	2003		10.1109/ICALT.2003.1215089	distance education;environmental design and planning;the internet;simulation;knowledge management;network resource planning;law;transportation planning	HCI	-77.53269080782624	-30.830400687370254	108718
b2fa59d2b238e74569eded2d6f835d51496fe707	work in progress — technical freehand sketching	design automation;art;bicycles art engineering students design automation visualization conferences lead;drafting drawing sketching design;cad;computer aided instruction;drafting;professional development;visualization;drawing;specific activity;lead;engineering education cad computer aided instruction educational courses;bicycles;educational courses;engineering education;suny adirondack technical freehand sketching technique drafting class engineering students t squares architectural scales pounce eraser shields bow compasses engineering programs computer based cad course science students 3d diagrams one semester minicourse professional development committee;engineering students;design;work in progress;sketching;conferences	In the past all engineering students took a drafting class. This involved the use of T-squares, triangles, architectural scales, pounce, eraser shields, bow compasses, pencils, and patience. It gave students a sense of how drawings and diagrams are made and used. As new subjects have come into the curriculum most engineering programs have dropped the drafting requirement, or at least replaced it with a computer-based CAD course. Also dropped, as a consequence, is the ability of engineering students to visually express the ideas they see in class and those that form in their heads. This paper describes the effort to address this change. This project is the result of a joint effort between an engineering and an art professor to empower students with the simple skills of producing reliable hand drawings for their notes and when expressing their design ideas. The result is a one-hour, lunch-time seminar open to engineering and science students to improve their technical freehand sketching techniques. They were coached by both professors in the techniques of hand sketching, including drawing straight and orthogonal lines, circles and ellipses, 2- and 3-D diagrams, graphs and charts, and labeling and lettering. Specific activities were used to gauge the improvement by the students as they progressed through the one-semester mini-course. This paper shares the best and the worst of this endeavor. This work was supported in part by a grant from the Professional Development Committee of SUNY Adirondack.	adobe freehand;chart;computer-aided design;diagram	Kenneth S. Manning;John Hampshire	2011	2011 Frontiers in Education Conference (FIE)	10.1109/FIE.2011.6142732	professional development;design;lead;simulation;engineering education;visualization;computer science;engineering;electrical engineering;artificial intelligence;software engineering;specific activity;cad;management;world wide web;drawing;pedagogy;mechanical engineering	SE	-85.98705980717997	-34.59597520027607	108820
1b54da1de8915b86fc391f60ce5e1ecfc4b8c29f	a case study of e-tutors' training program	training interviews face educational institutions computers context;teacher training intelligent tutoring systems;tpack e tutoring teacher training;intelligent tutoring systems;teacher training;e tutor training program e tutoring environment technological knowledge pedagogical knowledge pilot e tutoring program blended learning environment tpack framework technological pedagogical content knowledge framework in service secondary educators	In the present study the training program of four in-service secondary educators to undertake the role of e-tutor is presented. The training program was based on the Technological Pedagogical Content Knowledge (TPACK) framework and realized via a blended learning environment. After the completion of the training program the educators acted as e-tutors in a pilot e-tutoring program. Once the pilot e-tutoring was finished the educators gave semi-structured interviews and participated in a focus group, where issues raised during the implementation of the pilot program were discussed. The analysis of the interviews highlighted how important the educators considered the understanding of the different context in which e-tutoring is taking place in contrast with that of a conventional classroom. They also pointed out the technological and pedagogical knowledge that e-tutors need to have so that they can work on the e-tutoring environment.	documentation;focus group;semiconductor industry	Doukakis Spyros;Koutroumpa Cleo;Despi Olga;Raffa Elissa;Chira Theodora;Michalopoulou Georgia	2013	2013 12th International Conference on Information Technology Based Higher Education and Training (ITHET)	10.1109/ITHET.2013.6671052	engineering;knowledge management;multimedia;pedagogy	SE	-77.7614101811422	-36.24341433753086	108966
2335f13b4ae1dc693a489794607d922a19aa0933	teaching supply chain management using an innovative practical game	supply chain cost;supply chain games;teaching method;board game;supply chain management;logistics management	This paper presents a new practical game which helps undergraduate students to understand how the concept of supply chain management SCM works. The game uses a simple supply chain structure incorporating three entities of the supply chain: supplier, plant, and customer. The game employs a set of toy building blocks such as LEGO® blocks and has the rules of the game, responsibility of each player, product descriptions and bill of materials. This competitive game is used supply chain cost as the measuring to determine the winner team of the game and the Bloom's taxonomy as guidelines to develop the assessment testing based on the learning objectives of courses. This proposed board game has been tested by many undergraduate students who are taking SCM and Logistics Management courses. The results show that the students who played the game reached the higher scores of assessment testing than students who didn't play the game. Furthermore, most students have also positive view about this game.		Iwan Vanany;Ahmad Syamil	2016	IJISSCM	10.4018/IJISSCM.2016100105	game design;supply chain management;simulation;economics;marketing;operations management;teaching method;game developer;business;simulations and games in economics education;game design document;game testing	ECom	-83.3366017669992	-29.87589333118197	109166
7759ac33b24d121e31eb0086873f85c24c52debb	access to computing education for students with disabilities: (abstract only)		Approximately 10% of computer science and engineering majors have a disability. Students with disabilities are more likely to drop out of the major than those without disabilities. At the K-12 level, many tools used to teach computing have limited accessibility to students with disabilities. This BOF will bring together individuals who are interested in increasing the representation of students with disabilities in computing and improving their success. Participants will share strategies to help each other do a better job of including these students in our classes and research projects. Resources, including those produced by AccessComputing and AccessCSforAll, will be shared.	accessibility;computer science	Richard E. Ladner;Brianna Blaser;Daniela Marghitu	2018		10.1145/3159450.3162166		HCI	-79.46689529870358	-35.406486731253686	109669
c6cbead800e79a48c7768f1df928387ab716889a	pbl-test: a model to evaluate the maturity of teaching processes in a pbl approach	teaching computer science education;problem based learning pbl test maturity evaluation teaching processes student centered teaching approaches computing education;training context monitoring computational modeling collaboration analytical models;computer science education;teaching	The increasing application of student-centered teaching approaches to solve real problems, driven by the market's demand for professionals with better skills, has prompted the use of PBL in different areas, including in Computing. However, since this represents a paradigm shift in education, its implementation is not always well understood, which adversely affects its effectiveness. Within this context, this paper puts forward a model for assessing the maturity of teaching processes under the PBL approach, the PBL-Test, with a view to identifying points for improvement. The concept of maturity is defined in terms of teaching processes adhering to PBL principles, taken from an analysis of the following authors: Savery & Duffy (1995), Barrows (2001) Peterson (1997) and Alessio (2004). With a view to validating the applicability of the model, an empirical study was conducted by applying the PBL-Test to three skills in the Computing area. Results showed that although the model has shown it needs further enhancement, it has already been possible to identify improvements in PBL teaching processes that clearly affect the effectiveness of the approach.	capability maturity model;graph coloring;peterson's algorithm;programming paradigm;turing test	Simone C. dos Santos;Caliane O. Figuerêdo;Fernando Wanderley	2013	2013 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2013.6684894	mathematics education;simulation;computer science;pedagogy	SE	-81.59504329287931	-32.92520222827751	109780
e4a1d6a50727f1f2cc209e4e2aca5cebd089b23d	the textbase project-implementation of a base level message supporting electronic patient record transfer in english general practice		The TextBase project is a laboratory experiment to assess the feasibility of a common exchange format for sending a transcription of the contents of the Electronic Patient Record (EPR) between different general practices, when patients move from one practice to another in the NHS in England. The project was managed using a partnership arrangement between the four EPR systems vendors who agreed to collaborate and the project team. It lasted one year and consisted of an iterative design process followed by creation of message generation and reading modules within the collaborating EPR systems according to a software requirement specification created by the project team. The paper describes the creation of a common record display format, the implementation of transfer using a floppy disk in the lab, and considers the further barriers before a national implementation might be achieved.		Nick Booth;Nilesh L. Jain;Bob Sugden	1999	Proceedings. AMIA Symposium			SE	-78.20558826572079	-32.40296271889952	110228
bc362588fcd43e97e217dd8ef17849f80dbfc8e7	a systematic literature review of assessment tools for programming assignments	programming courses computing education programming assessment tools;mapping study assessment tools programming assignments;programming computer science education educational courses;programming profession education systematics bibliographies databases data mining	The benefits of using assessment tools for programming assignments have been widely discussed in computing education. However, as both researchers and instructors are unaware of the characteristics of existing tools, they are either not used or are reimplemented. This paper presents the results of a study conducted to collect and evaluate evidence about tools that assist in the assessment of programming assignments. To achieve our goal, we performed a systematic literature review since it provides an objective procedure for identifying the quantity of existing research related to a research question. The results identified subjects in the development of new assessment tools that researchers could better investigate and characteristics of assessment tools that could help instructors make selections for their programming courses.	correctness (computer science);curve fitting;digital single-lens reflex camera;management system;personalization;software product line;systematic review;the superficial	Draylson Micael de Souza;Katia Romero Felizardo;Ellen Francine Barbosa	2016	2016 IEEE 29th International Conference on Software Engineering Education and Training (CSEET)	10.1109/CSEET.2016.48	computer science;data science;programming language theory	SE	-84.59108271182289	-35.276042637330924	110415
15f098b3dbac9594404910c4ceb83c307bd7a75b	a hierarchy model of assessment for curriculum improvement	outcomes;objectives;assessment;quality of education services qoes	In this paper we present a formal model of assessment to improve the quality of both traditional university curricula and e-Learning programs. The model is useful in addressing the challenges and issues of curriculum improvement in many institutions. We report on our experiences with one of our undergraduate courses, database, taught both in the traditional classroom and via e-learning, offered to students at the College of Staten Island and Shanghai TV University. We also discuss the usefulness of the model in developing formal procedures of assessment which were important for the ABET accreditation of the B.S. degree in computer science at the College of Staten Island.	computer science;experience;mathematical model;process modeling	Zhanyang Zhang;Roberta Marsha Klibaner;Emile Chungtien Chi	2006			engineering management;curriculum;accreditation;engineering ethics;hierarchy;engineering;curriculum improvement	AI	-80.56054283459915	-32.58273010356817	110909
980291bf8012ac7c358ef7b0e9e5546dab179032	abstract (2012) showcase of learning: towards a pattern language for working with electronic portfolios in higher education	pedagogy;e learning;e portfolios;pattern language;pedagogical design patterns	Like a shop window facing the street and displaying delicate or valuable articles, an electronic portfolio showcase required skills of students and demonstrates that they understand how to apply their prowess. However, the work with electronic portfolios is complex and demanding. Compared to experts, novice users -- teachers as well as students -- face a number of challenges when they try to draw on the experience of others, especially when they want to implement e-portfolios in their university or college courses and when they try to create their first own e-portfolio views respectively. Even for experts on e-portfolios it is sometimes hard to explain how to best use e-portfolios for learning purposes. There are a few guidelines which help with the basics, but what is missing is a common language for describing e-portfolio practice. This paper, making use of Christopher Alexander's work on patterns and pattern languages, and drawing on pedagogical design patterns which already exist, presents the author's first steps towards a pattern language for working with e-portfolios in higher education combining different theoretical and practical approaches and, particularly, own experiences of e-portfolio use.	design pattern;microsoft office project portfolio server;pattern language	Reinhard Bauer;Peter Baumgartner	2011		10.1145/2396716.2396722	computer science;knowledge management;pattern language;multimedia;pedagogy	HCI	-78.49281532238825	-36.483851665298715	110955
c22cfeda2517887e6ba146ce588d25f1ddf0766b	extended game platform for novice programmers		In an attempt to recruit and retain computer science majors, game design courses have become increasingly popular in academia. Game design encompasses multiple stages of product development, takes an average of two or more years and includes a team of individuals who possess strong programming abilities. Additionally, game development platforms consists of complex architectures that are difficult for novice programmers to comprehend let alone navigate. Due to this complexity, game design courses are typically taught as capstone courses intended for students who have intermediate or advanced programming skills. Consequently, introductory computer science courses do not include game development as typical programming assignments. We introduce a learning model that employs team-based pedagogy as the basis for students acquiring object-oriented programming skills, equipping programmers with the ability to design 3D games. Furthermore, we modify an existing game platform to include built-in scaffolds that assist students with the comprehension and application of object-oriented concepts. In response to the criticism that sustained hours of game-play contribute to physical inactivity and the growing obesity epidemic affecting America, novice programmers are given the creative task of designing a physically interactive game module that aids the player in meeting fitness goals and provides a source of entertainment.	capstone (cryptography);compiler;computer science;debugging;microsoft research;new product development;programmer;video game design;video game development	Yolanda A. Rankin;Thomas Lechner	2007		10.2312/eged.20071015	simulation;human–computer interaction;multimedia;game design document	HCI	-82.47669039785914	-36.85352183817304	111030
b62440e00a51b867c71d7d1b3914527e29201134	being a professional	life style;professional development	Various aspects of being a professional are discussed in this paper. These include personal qualities, lifetime professional development, professional responsibilities, job responsibilities, service, and a balanced life style.		Robert G. Sargent	1991	The New Zealand nursing journal. Kai tiaki		professional development;computer science;professional studies	HCI	-78.10860881031795	-29.015305033808733	111182
7882ac4cf89bf97b1939dcfa59c482697103761f	a computer-aided drug discovery system for chemistry teaching	drug discovery;za4050 electronic information resources;computer programs;computers in chemistry;rs pharmacy and materia medica;qd chemistry	The Schools Malaria Project (http://emalaria.soton.ac.uk/) brings together school students with university researchers in the hunt for a new antimalaria drug. The design challenge being offered to students is to use a distributed drug search and selection system to design potential antimalaria drugs. The system is accessed via a Web interface. This e-science project displays the results of the trials in an accessible manner, giving students an opportunity for discussion and debate both with peers and with the university contacts. The project has been implemented by using distributed computing techniques, spreading computer load over a network of machines that cross institutional boundaries, forming a grid. This provides access to greater computing power and allows a much more complex and detailed formulation of the drug design problem to be tackled for research, teaching, and learning.	computation (action);discovery system;distributed computing;drug design;e-science;interface device component;malaria;substance abuse detection	Robert J. Gledhill;Sarah Kent;Brian Hudson;W. Graham Richards;Jonathan W. Essex;Jeremy G. Frey	2006	Journal of chemical information and modeling	10.1021/ci050383q	pharmacology;chemistry;computer science;bioinformatics;drug discovery	HPC	-89.78085389440824	-36.4138120894864	111481
ceca2f2892118daa48165796b1672c4dbbfea980	mrivis: medical image visualization library for neuroscience in python		Neuroscience research routinely demands a variety of visualization tasks, ranging from a simple 2D image to custom-built composite stacks. Different academic laboratories attend to this need differently, from being users of existing solutions to being developers of new software. The majority of them tend to be mostly users of what’s already available, even though the current solutions are suboptimal or inefficient for the task at their hand. Some laboratories, when resources and skills permit, engage in in-house software development to try solve their problem. The resulting software are often either not open source at all, nor made with the intent to be reliable or distributed widely. We aim to address this need with a fully-open-source and pure-python visualization library.		Pradeep Reddy Raamana;Stephen C. Strother	2018	J. Open Source Software	10.21105/joss.00897	computer graphics (images);visualization;python (programming language);computer science	Visualization	-81.11160950211635	-35.90134688447624	111570
beb19f4fc1c3a870efd01c7bd8e960b3957404d4	computer science program accreditation: the first-year activities of the computing sciences accreditation board	computer society;computer industry;force feedback;computer science education;accreditation;educational programs;computer science;machinery;accreditation computer science educational programs computer society computer science education force feedback professional societies machinery computer industry solids;professional societies;solids	This report summarizes the activities of the Computing Sciences Accreditation Board from its inception in 1984 through its first accreditation cycle completed in June 1986. The major activities during this period were directed at developing the CSAB structure necessary to carry out the accreditation process, and at conducting the first round of accreditation visits and actions.	computer science	Taylor L. Booth;Raymond E. Miller	1987	IEEE Computer	10.1109/MC.1987.1663567	professional association;machine;computer science;artificial intelligence;software engineering;solid;accreditation;haptic technology	Visualization	-80.11725466118625	-30.824151009058703	111715
41c3781dd2f8256da0ee3a3f9c3eaab0c773a78e	quality measures incorporated in the re-engineering of an undergraduate computer science degree program		This paper reports on the re-engineering process, and its quality control, leading to accreditation of an undergraduate program in Computer Science at the School of Sciences and Engineering of the University of Nicosia. It presents how quantitative assessment tools have been used to re-engineer a Computer Science program, while maintaining a balance between the requests of a Visiting Team of academics that was appointed by the Cyprus Evaluation Committee for Private Universities (the national body supervising private universities), the university officials trying to minimize costs/maximize income in a recessive economic environment, and other constraints imposed by the regulatory framework of the University while maintaining high quality assurance standards.	computer science;display resolution	Florent Domenach;Andreas Savva;Vasso Stylianou;George Portides	2018	2018 IEEE Global Engineering Education Conference (EDUCON)	10.1109/EDUCON.2018.8363416	quality assurance;accreditation;knowledge management;engineering management;engineering	DB	-78.44500695262754	-28.812966526950053	112241
f20860242d4dea8b13d74d63a792f225e9c51910	benchmarking academic programs in business analytics	benchmarking;certificate;selected works;analytics programs;bachelor of science;curriculum;bepress;master of science	Interest in business analytics (BA) is currently popular. Professional consultancies and software houses are both touting it as the next wave in business, claiming that the need for BA skills is large and growing. Universities are beginning to respond by offering undergraduate majors and minors, Master of Science degrees, certificates, and concentrations within their Master of Business Administration programs. But what subjects are being covered in these programs? We surveyed some of the largest, most established, and best-known programs (predominantly in the United States, but some international) and interviewed representatives of these programs to better understand the requirements for students entering, the required and elective course topics covered, and job opportunities for graduates. In this article, we summarize our findings and provide some conclusions about analytics programs, including the current landscape, suggestions for development, and our vision for the future. We believe this report is useful to institutions that offer analytics programs, to those considering such offerings, and to the employers who are hiring analytics professionals. These employers need to better understand the skills that professionals are acquiring. Finally, it should help prospective students who seek to understand the analytics programs being offered to find the best match for their skills and interests.	business analytics	Michael F. Gorman;Ronald K. Klimberg	2014	Interfaces	10.1287/inte.2014.0739	curriculum;simulation;economics;computer science;engineering;knowledge management;marketing;mathematics;certificate;management;operations research;benchmarking	DB	-78.11285869478577	-27.38860490644247	112260
59765479f353412b8d458d017ae1cde960176bfe	rubric use in technical communication: exploring the process of creating valid and reliable assessment tools	writing assessment assessment interrater reliability rubrics;assessment tools;comunicacion tecnica;education accreditation;performance evaluation;site specific criteria;interrater reliability;professional communication writing education accreditation performance analysis feedback industrial training communication industry performance evaluation cultural differences;technical communication;reliability assessment;communication industry;construct validity;feedback;industrial training;writing assessment;engineering education;communication technique;performance analysis;accreditation;writing;student efforts;rubric usage;evaluation;evaluacion;accreditation mandates rubric usage technical communication assessment tools student efforts undergraduate project evaluation site specific criteria;communication professionnelle;undergraduate project evaluation;assessment;accreditation mandates;rubrics;professional communication;cultural differences	Assessing the quality of student efforts and products is a continual necessity for academics and practitioners in technical communication; however, the process of constructing valid and reliable rubrics remains an underexplored topic in the field. This paper first addresses some of the assessment concerns and then describes a case study that documents the development and implementation of one holistic and five analytic rubrics to evaluate undergraduate projects. The discussion focuses on identifying site-specific criteria and training effective raters and is intended to help academics respond to their required accreditation mandates and offer practitioners alternatives for evaluating products and services.	holism	Ryan K. Boettger	2010	IEEE Transactions on Professional Communication	10.1109/TPC.2009.2038733	engineering education;technical communication;rubric;systems engineering;engineering;knowledge management;evaluation;construct validity;feedback;accreditation;inter-rater reliability;management;writing;cultural diversity;educational assessment;statistics;pedagogy	Visualization	-83.99279210837341	-33.001636884810154	112596
516ed615966f414d2ab154f90911a26141015f8a	10,000 microcomputers for french secondary schools	computers;computer languages;microcomputers educational institutions computer science computer science education natural languages computer languages decision making programming profession computational modeling;secondary school;teacher education;technological advancement;natural languages;computer science education;computational modeling;foreign countries;computer assisted instruction;teacher developed materials;programming profession;policy formation;computer science;educational technology;instructional innovation;microcomputers;program descriptions	Few projects compare in scope to Franceu0027s first CAI experiment. An even more ambitious plan, now in its initial stages, will be implemented by 1985.	microcomputer	Jacques Hebenstreit	1980	Computer	10.1109/MC.1980.1653701	educational technology;computer science;operating system;software engineering;microcomputer;natural language;programming language;computational model	NLP	-83.99492014396537	-36.65201965596026	113258
da008940aa406a38ebfdf3c7b2623b9065b0facf	fc portugal 2001 team description: flexible teamwork and configurable strategy	aptitud;europa;aptitude;portugal;fc portugal 2001 team;striation;cooperation;entrenador;sonorisation film;sonorizacion pelicula;agarrotamiento;entraineur;cooperacion;coach;simulation league;scoring;estriacion;scuffing;grippage;europe;ability	FC Portugal is a cooperation project between the Universities of Aveiro and Porto in Portugal. FC Portugal 2001 is our second step towards the creation of a flexible RoboSoccer team, with tactical changing abilities, that may be coached at any level, before and during the games, by human or automatic coaches. Although having the best goal average in the competition (scoring 150 goals in 13 games), the team was not able to score against the good defenses of Tsinghuaeolus and Brainstomers and finished third in RoboCup 2001.		Nuno Lau;Luís Paulo Reis	2001		10.1007/3-540-45603-1_72	simulation;aptitude;cooperation	AI	-83.0245035578333	-29.758108375485243	113572
6bdbbb2a1fd7bca3ef8e67ee294b567552b0cc26	teaching programming to large student groups through test driven development - comparing established methods with teaching based on test driven development		This paper presents an approach for teaching programming in large university classes based on test driven development (TDD) methods. The approach aims at giving the students an industry-like environment already in their education and introduces full automation and feedback programming classes through unit testing. The focus for this paper is to compare the novel approach with existing teaching methods. It does so by comparing introduction to programming classes in two institutions. One university ran a TDD teaching process with fully automated assessments and feedback, while the other ran a more traditional on-line environment with manual assessments and feedback. The TDD approach has clear advantages when it comes to learning programming as it is done in the industry, including being familiar with tools and approaches used. However, it lacks ways of dealing with cheating and stimulating creativity in student submissions.	online and offline;teaching method;test-driven development;unit testing	Morten Goodwin Olsen;Tom Drange	2016		10.5220/0005789502810288	mathematics education;simulation;computer science;pedagogy	AI	-82.02000426905988	-36.06749473819704	113584
27e93edaf85e5572be365d5fd0c4214b36a21a16	examining student performance and attitudes on distributed pair programming		Pair programming (PP) has become popular in the research and software industry as well as being studied for a number of years in computer science courses with positive findings on student performance and attitudes. Advantages of PP reported in the literature are satisfaction, design quality, code productivity, team building, and communication. More recently, distributed pair programming (DPP), which enables two programmers to work remotely, has also attracted the interest of researchers and instructors. The difference between DPP and PP is that the former allows geographically distributed teams to collaborate and share program code. Such collaboration is, thus, only feasible if an underlying infrastructure supports all necessary interactions. The integrated development environments (IDEs) for DPP should cover the basic requirements for remote software development as well as address common PP problems, such as unequal contributions from each member of a pair, feedback during DPP sessions, and communication problems. This paper presents the findings of a study on student performance and attitudes towards DPP in an object-oriented programming (OOP) course. The factors examined were student performance, in terms of assignment grade, exam grade and implementation time in relation to students’ programming experience, and confidence, as well as student attitudes towards DPP, i.e., the feelgood factor, working alone or with a partner, and the perception of their partner’s technical competence. The results suggest that a students’ performance is associated with their programming experience and confidence in programming but not with how comfortable they feel during DPP sessions. Students evaluate the DPP sessions positively regardless of their confidence on programming or their perception of their partners’ technical competence. Students who consider themselves to have about the same programming competence as their partners tend to be more satisfied with DPP sessions. Overall, students prefer working with a partner regardless of their confidence on programming.	pair programming	Maria Satratzemi;Stelios Xinogalos;Despina Tsompanoudi;Leonidas Karamitopoulos	2018	Scientific Programming	10.1155/2018/6523538	pair programming;mathematics education;speech recognition;software development;perception;software;computer science;object-oriented programming	HPC	-82.80334247998344	-34.911844575083954	113882
98d6147e76a65077cb596fb50bc4059bc6ba6d5b	constructing a core literature for computing education research	computing education research;evaluation methodology;computer education;classification criteria;core literature	After four decades of research on a broad range of topics, computing education has now emerged as a mature research community, with its own journals, conferences, and monographs. Despite this success, the computing education research community still lacks a commonly recognized core literature. A core literature can help a research community to develop a common orientation and make it easier for new researchers to enter the community. This paper proposes an approach to constructing and maintaining a core literature for computing education research. It includes a model for classifying research contributions and a methodology for determining whether they should be included in the core. The model and methodology have been applied to produce an initial list of core papers. An annotated list of these papers is given in appendix A.		Arnold Pears;Stephen Seidman;Crystal Eney;Päivi Kinnunen;Lauri Malmi	2005	SIGCSE Bulletin	10.1145/1113847.1113893	computer science;software engineering;management science	Web+IR	-79.6519589734328	-29.250078819518535	114125
5614a3903aa9ce33bfcc5cf79c1d7643af0f4ae8	work in progress: putting control engineering in middle school girls' futures	control engineering education;robot sensing systems;conferences educational institutions control engineering robot sensing systems optics engineering profession purification;girls;optics;design engineering;communal goals k 12 initiatives control engineering gender;communal goals;control engineering;gender;gender issues control engineering education design engineering educational institutions;gender issues;engineering profession;purification;engineering design process control engineering female student engineering device technological device project activity middle school class;middle school;k 12 initiatives;conferences	The purpose of the project described in this paper is to increase the number of female students in middle school who have a basic understanding of control engineering principles and how these apply to modern engineering and technological devices. Project work is being implemented within a local girls' school in Hobart, the capital city of the state of Tasmania, Australia. Project activity has included running a series of hands-on workshops for two separate middle school classes. These workshops have introduced control engineering principles and the engineering design process. Project experiences so far are discussed and recommendations for future project work are outlined.	control engineering;engineering design process;futures and promises;hands-on computing	Sarah Lyden;William Colvin;Bernardo A. León de la Barra	2012	2012 Frontiers in Education Conference Proceedings	10.1109/FIE.2012.6462308	engineering management;engineering;electrical engineering;software engineering;management;pedagogy;mechanical engineering	SE	-83.08599415834696	-31.45418814285504	114393
8bd7d39cef681216455b2618092934bd9ec6d943	what is the most suitable english test for the graduate school students in research university in japan?		To correspond to drastic change in international society such as globalization, graduate education plays a key role in development of human resources. The new trans-graduate-school education program called Nitobe School was launched in 2015 as one of the main education projects of Top Global University Project in Hokkaido University. This is a trial case report of the comparison of commercial English test for the Graduate School students. We employed about 50 students from the various graduate schools in Hokkaido University, and they took same commercial English tests (TOEIC and TOEFL), then its result is discussed in here. As a result, it was turnout that students need to take same type of English placement test before and after the program. Also depend on the students future career and/or English ability, student themselves need to choose TOEIC or TOEFL as a placement test at the beginning.	interactive theorem proving (conference);source-to-source compiler;turing test	Michiyo Shimamura;Yasuhiro Yamanaka	2017	2017 6th IIAI International Congress on Advanced Applied Informatics (IIAI-AAI)	10.1109/IIAI-AAI.2017.188		SE	-77.60339195504541	-30.739706167873177	114432
2caf94bccebf4d5f3993af622bfd65ca1a0ffae8	the fall		The course format is a seminar that will meet weekly. During those sessions the students will share their research with other students and present their results from the assignments as well as receive feedback. We will use writing materials samples (thesis proposals, thesis, papers) that will be obtained on Moodle. The most important part of the course is the individual work by the student for the assignment of the week.	feedback	James Willingham	2004		10.1145/1186015.1186066	meteorology;history	HCI	-79.28543312873306	-33.93277776719244	114748
2077d1557170c18168cf220e37952045934aac81	library not found - the disconnect between gaming research and development		Video games clearly have great educational potential, both for formal and informal learning, and this avenue is being thoroughly investigated in the psychology and education literature. However, there appears to be a disconnect between social science academic research and the game development sector, in that research and development practices rarely inform each other. This paper presents a two-part analysis of this communicative disconnect based on investigations carried out within the H2020 Gaming Horizons project. The first part regards a literature review that identified the main topics of focus in the social sciences literature on games, as well as the chief recommendations authors express. The second part examines 73 interviews with 30 developers, 14 researchers, 13 players, 12 educators, and 4 policy makers, investigating how they perceived games and gaming. The study highlights several factors contributing to the disconnect: different priorities and dissemination practices; the lag between innovation in the games market and research advancements; low accessibility of academic research; and disproportionate academic focus on serious games compared to entertainment games. The authors suggest closer contact between researchers and developers might be sought by diversifying academic dissemination channels, promoting conferences involving both groups, and developing research partnerships with entertainment game companies.	accessibility;video game development	Marcello Passarelli;Jeffrey Earp;Francesca Maria Dagnino;Flavio Manganello;Donatella Persico;Francesca Pozzi;Thomas P. Buijtenweg;Mata Haggis;Chris Bailey;Carlo Perrotta	2018		10.5220/0006773601340141	multimedia;computer science	HCI	-80.16689172608328	-24.538904279426117	114905
75b083c2ad0d746cb3ad467400dc0f4b4cc5c187	creating an authentic learning experience in introductory programming courses	dynamic programming;computer program;teaching programming;authentic learning;introductory programming;permutation graph;data analysis;mathematical model;laboratory experiment;data handling;applied research;word processing	We have developed an integrated, software-based course in scientific and statistical programming consisting of an introduction to computer programming and data analysis concepts. This course is being taught in an innovative way to non-majors: “stretched” over two quarters rather than taught in a single term. Classes meet in a computer classroom so students have a seamless lecture/laboratory experience to reinforce the concept that the computer should be made use of whenever needed, rather than only at specified lab times. In addition to presenting key programming and data analysis concepts, we are giving the course an applied research focus to illustrate to students the importance and utility of programming and statistical concepts to their own fields. This focus provides motivation for students to learn material they often perceive to be difficult and not relevant to them. It also provides a mechanism for addressing the increasing perception of faculty in a variety of technological fields that many students have problems with abstraction, the use of symbolic notation to understand or express ideas (e.g., through mathematical models), the interpretation of graphical information, and written communication, since all of these skills are needed in applied research. The software-based approach to teaching programming concepts dovetails nicely with the applied research orientation of the course in that the software we use is widely applicable to a variety of activities, from word-processing to data handling and analysis.	algorithm;computer programming;graphical user interface;mathematical model;seamless3d	Nira Herrmann;Jeffrey L. Popyack	1995		10.1145/199688.199780	intentional programming;computer science;theoretical computer science;extensible programming;software engineering;dynamic programming;group method of data handling;permutation graph;mathematical model;computer programming;programming paradigm;procedural programming;symbolic programming;inductive programming;fifth-generation programming language;programming language theory;data analysis;programming language	PL	-83.78328028069929	-37.01807148629474	114929
22bb7f124a64247fa80d1b826343fcdaf5d7f336	work in progress: creativity, mindset, and implications for engineering design instruction	creativity;engineering design;art;mindset;technological innovation;design engineering;talent engineering design instruction design based profession creative skills intelligence;psychology;springs;educational courses;engineering education;educational institutions psychology technological innovation springs art engineering education;mindset creativity engineering design;engineering education design engineering educational courses	As a design-based profession, advances in engineering rely, in part, on the creativity of its practitioners. Therefore, it is important to explore means by which creativity, along with other critical skills, can be nurtured. As part of our research on the teachable nature of creativity, we are investigating the relationship between a person's belief that intelligence and talent are either fixed or can be developed and his/her assessment of changes in his/her creative skills. Preliminary findings indicate that, as may be expected, students with a fixed mindset report no changes. Possible pedagogical implications are discussed.	engineering design process	Susan K. Donohue;Whitney G. S. Hunter;Larry G. Richards	2012	2012 Frontiers in Education Conference Proceedings	10.1109/FIE.2012.6462474	engineering management;creativity technique;engineering;knowledge management;pedagogy	HCI	-83.19470133830228	-32.097871447535994	115006
8232ed9c627e00ee3e057a56802ea15d7acc7163	the validation of the e-victimisation scale (e-vs) and the e-bullying scale (e-bs) for adolescents	factor structure;cyber bullying;peer reviewed;aggression;psychometric;assessment;victimisation	This study investigates the psychometric properties of the E-Victimisation Scale (E-VS) and E-Bullying Scale (E-BS) designed to assess Cyber Bullying among Chinese adolescents. Participants were 484 adolescents aged between 11–16 years randomly recruited from high schools within a region. Exploratory Factor Analysis (EFA) and Confirmatory Factor Analysis (CFA) were applied to investigate the factorial structure of these scales. Reliability was examined by Cronbach’s alpha coefficients by sex. The convergent validity was investigated by correlations among these scales and the Centre for Epidemiological Studies-Depression for Children as well as the Zung’s Anxiety Scales. A single-factor model for the EVS and a 2-factor model for the E-BS were resulted from the EFA with large factor loadings and about 47% and 56% of variance explained respectively. Cronhach’s alpha values provided evidence for good internal reliability with values ranging from 0.55 to 0.96. Correlations between the E-VS and Depression as well as Anxiety scales showed positive and significant relationships, however, the E-BS was only related to Depression. Psychometric evidence has shown that both E-VS and E-BS are valid instruments for measuring Cyber bullying behaviour and victimisation. Further studies are required on the test–retest reliability, discriminate validity, responsiveness, as well as normative information for standardisation. 2012 Elsevier Ltd. All rights reserved.	coefficient;confirmatory factor analysis;cyberbullying;exploratory factor analysis;exploratory testing;graph factorization;randomness;repeatability;responsiveness	Lawrence T. Lam;Yongxin Li	2013	Computers in Human Behavior	10.1016/j.chb.2012.06.021	psychology;peer review;developmental psychology;social psychology;clinical psychology;educational assessment;statistics	HCI	-87.38894191209373	-24.08134718813403	115075
615c4725507cc3e5cbde9e07a117631b668f6897	a practice for training it engineers by combining two different types of pbl		PBLs signifies both problem-based learning and project-based learning; we clearly distinguish between the two types of PBLs. The former PBL involves finding ways to solve problems under unfavorable conditions. In the curriculum at our institute, problem-based learning has been conducted since 2006. By contrast, project-based learning involves a student team undertaking an actual project, devised by a company. We did not adopt project-based learning in our curriculum. In 2016, our institute joined the Education Network for Practical Information Technology project of Japan’s Ministry of Education, Culture, Sports, Science and Technology. In that project, around 40 universities are engaged in developing a cooperative network. Each university develops practical education using PBL; its knowledge and resources obtained are shared among other universities in the network. For our part of the project, we added 3 practical exercises based on project-based learning. By combining the two different types of PBL, our curriculum provides exercises that introduce better problem-solving skills, instill a challenging spirit, and provide practical experience for students. In this paper, we report our exercises and practical results for 2017.		Kazuhiko Sato;Yosuke Kobayashi;Takeshi Shibata;Hidetsugu Suto;Shinya Watanabe;Shun Hattori;Sato Saga	2018		10.1007/978-3-319-75420-8_15	science, technology and society;knowledge management;curriculum;data mining;project-based learning;engineering education;problem-based learning;autodidacticism;computer science;information technology;proactive learning	NLP	-79.46776066083034	-33.29437809882108	115096
740c7a59b5f50ce4dc449746960ae5e8c6245224	army eeducation: the distance learning approach	distance-learning format;article discusses;united states army command;available technology facilitators;robust learning environment;army eeducation;general staff college;delivery method;different delivery method;advance operations course curriculum;distance education	The United States Army Command and General Staff College s Department of Distance Education delivers the Advance Operations Course curriculum in a distance-learning format. This article discusses how instructors facilitate learning through different delivery methods (synchronous and asynchronous) to a student body geographically dispersed worldwide. Using a combination of delivery methods and available technology facilitators achieve a robust learning environment comparable to resident studies.	synchronization (computer science)	Jack Judy	2012	eLearn Magazine	10.1145/2371029.2371030	simulation;operations management;operations research;synchronous learning	AI	-77.76029059062829	-32.96524276424641	115788
91655d11735b5e2ef85c67f5a135cec3df4a1417	"""teaching outside the box: arl librarians' integration of the """"one-box"""" into student instruction"""		Christina Kulp is Sciences Librarian and Assistant Professor of Bibliography, Cheryl McCain is Library Instruction Coordinator and Associate Professor of Bibliography, and Laurie Scrivener is History and Area Studies Librarian and Associate Professor of Bibliography at University of Oklahoma Libraries; e-mail: ckulp@ou.edu, clmccain@ou.edu, lscrivener@ou.edu. © 2014 Christina Kulp, Cheryl McCain, and Laurie Scrivener, Attribution-NonCommercial (http://creativecommons.org/licenses/by-nc/3.0/) CC BY-NC This article reports the results of a survey that targeted reference and instruction librarians who work at libraries that are members of the Association of Research Libraries (ARL). Respondents were asked to indicate whether or not they teach students to use the one-box tool, and why or why not. Based on the responses of the 352 librarians who participated in the study, the researchers found that most reference and instruction librarians at ARL libraries are “teaching outside the box.”	email;librarian;library (computing);thinking outside the box	Christina Kulp;Cheryl McCain;Laurie Scrivener	2014	C&RL			Visualization	-77.59620706532897	-31.66932541436914	115961
cdcb90c5b52ecec614546b0a54e63d55e61f75f7	successful implementation factors for using computers in iranian schools during one decade (1995-2005)	socioeconomic influences;data collection;country specific developments;gender studies;educational history;computer uses in education;politics of education;social influences;foreign countries;secondary education;political issues;technology integration;interviews;developing country;cultural influences;social change;questionnaires;educational technology	The main purpose of this paper is to identify factors and conditions that are important for successful Implementation of computers in Iranian schools during one decade from 1995 to 2005. The second focus of this paper is to examine how these factors relate to models of implementation in other countries such as developed countries. This paper is written based on the results of three studies which had been done in 1995, 2000 and 2005. Participants were samples of different groups involved in the implementation process during these years. The data collected consisted of questionnaires, semi-structured interviews, policy documents. The results indicate that some factors were reported very important during one decade such as the role of situational factors such as traditional societies in transition. The most important factors of traditional societies in transition were included: socio-economic, socio-cultural factors and political stability.	computer;iranian.com	Bibi Eshrat Zamani	2010	Computers & Education	10.1016/j.compedu.2009.07.004	psychology;questionnaire;educational technology;social science;interview;developing country;social influence;socioeconomics;social change;sociology;statistics;pedagogy;data collection	HCI	-82.04632304993257	-25.656239671297815	115993
1e33c372a2aaace9b908224c9735ff2fb66ee942	testing cognitive science principles in a middle school mathematics curriculum		Is student learning enhanced when a math curriculum is revised using research-based principles? The National Center for Cognition and Mathematics Instruction, funded by the US Department of Education, aims to determine whether and how applying research to practice improves student outcomes. A full year of student and teacher materials for Grade 7 math were revised according to principles of visual mapping, using worked examples, spacing learning over time, and formative assessment. Ninety-one teachers at 64 schools with a total of 6,541 students participated in the study. Classes were randomly assigned to either the revised or existing materials at the school level. Data sources included demographic data, pretest, attitudes survey, teacher pedagogical content knowledge, teaching logs, unit posttests, and an end of year measure. Complete data were available for 4,749 students. We will report results from HLM analyses and discuss practical considerations for applying research to practice.	cognition;cognitive science;randomness	Jodi L. Davenport;Yvonne Kao;Aleata Hubbard;Steven Schneider	2014			cognitive science;formative assessment;curriculum;psychology;pedagogy;mathematics education;cognition;reform mathematics	HCI	-77.5276822177362	-32.877691616760586	116026
95b1b33032e7163f9f2217b1f396da675892b44d	modelling variables that contribute to faculty willingness to collaborate with librarians: the case of the university institute of lisbon (iscte-iul), portugal	competence;european higher education area ehea;cooperation;collaboration;knowledge society;higher education;focus groups;ciencia;foreign countries;projetos;librarian faculty relationships;investigacao;publicacoes;librarian teacher cooperation;academic library;iscte iul;academic libraries;article;librarians;college faculty;surveys	This article discusses key variables that shape the willingness of faculty to work with librarians in higher education establishments. We use the Librarian-Library/Faculty Relationship Model to highlight the variables which faculty members consider to be the most relevant in that relationship. The article begins with a discussion of the causes of tensions between faculty and librarians. This is followed by a descriptive and co-relational study of the ISCTE-IUL University Institute of Lisbon library. The study uses qualitative and quantitative methods, namely a focus group and a survey. There was a good fit between the Librarian-Library/Faculty Relationship Model and the data (CMIN/DF=4.067), and the model explained 58% of the dependent variable, namely faculty willingness to collaborate with librarians. Our final model confirmed the relationships proposed in our initial model, and allowed us to identify a range of new relationships, which may contribute to a deeper understanding of the dynamics of different socio-cultural processes (included as variables in the model) affecting the relationship between faculty and librarians, so as to what factors shape the willingness of faculty to collaborate with librarians. The model shows that 14% of the willingness of faculty to collaborate with librarians can be attributed to key attributes of faculty, namely gender, age, department, academic qualification, professional category, and the length of career.	focus group;librarian	Maria João Amante;Ana Isabel Extremeño;António Firmino da Costa	2013	JOLIS	10.1177/0961000612457105	library science;economics;focus group;competence;higher education;management;cooperation;pedagogy;collaboration	ML	-77.80084612313154	-31.88562735072277	116073
543c92696b479c6a8eae9436c4ddd44d520ac619	a conference's impact on undergraduate female students	computational science and engineering;undergraduate student	In September of 2000, the 3rd Grace Hopper Celebration of Women in Computing was held in Cape Cod, Massachusetts. Along with a colleague from a nearby university, we accompanied seven of our female undergraduate students to this conference. This paper reports on how the conference experience immediately affected these students --- what impressed them, what scared them, what it clarified for them. It also reports on how the context in which these students currently evaluate their ability, potential and opportunity in computer science is different now from what it was before the conference. Hopefully, by understanding their experience, we can gain some insight into things we can do for all of our undergraduate female students to better support their computer science and engineering education.	computer science;hopper;women in computing	Joan M. Francioni	2002	SIGCSE Bulletin	10.1145/543812.543833	computer science;computational science and engineering	Visualization	-78.98004612162302	-30.473642289053874	116158
b2bafab8d571f7bbb8d1cc4fd4f7a67a202b1436	cooperative thinking, or: computational thinking meets agile		In this paper, we propose the Computational Thinking concept, which is obtained by enhancing by merging the values of Computational Thinking and Agile. We analyze four existing teaching models for training Cooperative Thinkers, supported by experimental data, and propose an educational path that can promote the early development of this complex skill.	agile software development;computation;computational thinking	Marcello Missiroli;Daniel Russo;Paolo Ciancarini	2017	2017 IEEE 30th Conference on Software Engineering Education and Training (CSEE&T)	10.1109/CSEET.2017.37	computer science;systems engineering;merge (version control);experimental data;agile software development;computational thinking	SE	-81.95299148274619	-33.10824380126545	116230
af62d8f2766502ab9c00ffb42520b4ae451f4524	broadening participation in computing: the multi-tiered approach	diversity;mentoring;computer science education;national science foundation;workforce	Broadening Participation in Computing (BPC) is a national effort led by the National Science Foundation (NSF) to increase post-secondary enrollment of underrepresented groups in the computing disciplines. Under BPC funding from the NSF, a multi-tiered mentoring model (M3) was created to foster excellence in grades 5-20 computer science education in the Birmingham area. The goal of the BPC-M3 program is to provide sequential tiers of mentoring, by which the learner in one tier becomes the mentor teacher to the next tier down. This model focuses on providing a more effective pathway for students from underrepresented backgrounds to pursue careers in computing. In this poster abstract, we describe in detail how the multi-tiered model is being implemented and summarize some of the benefits and challenges related to the M3 model.	computer science;gene regulatory network;ibm notes;multitier architecture;smart-m3	Dalorion Johnson;J. Michael Wyss;Jeffrey G. Gray;Shaundra Daily;Alan Shih;Gypsy Abbot	2012		10.1145/2184512.2184610	library science;simulation;political science;pedagogy	Theory	-79.12392415001068	-32.91292538587583	116817
583cb1ab72843c472d23e3e39500a13439a2668b	aligning is curriculum with industry skill expectations: a text mining approach		Digitalization offers both great opportunities as well as new challenges and uncertainties. In particular, students in their role as future employees will have to cope with the new digital environments, which makes lifelong learning and up-to-date skills even more important than they already are. Key players in this long-term development are the universities as providers of the necessary skills and knowledge. By now, it is clear that digitalization will have a broad impact on the future conditions of universities. But are they already prepared for it? Against this backdrop, we present an approach to combine universities’ offerings with the required industry job skills to identify potential curricular gaps at course level that arise through ongoing digitalization and, as a consequence, changing skill requests for employees. We identify an appropriate set of methods for our project including text mining methods, an expert survey and an interview phase for evaluation. We illustrate our approach using a large data set of German IS curricular module descriptions and offers for IS job starters.	backdrop cms;text mining	Patrick Föll;Frédéric Thiesse	2017			knowledge management;curriculum;data science;computer science;text mining	ML	-77.4986458510093	-27.024880197852298	116897
cbfede4a1ccc4044944151a56b30889d7e91c749	computing in the arts: curricular innovations and results	interdisciplinary education;computational thinking;computing in the arts;media computation	Computing in the Arts (CITA) is an innovative, interdisciplinary curriculum model which integrates computer science and information technology with traditional art theory and practice. At the College of Charleston, implementation of an undergraduate CITA degree program resulted in an increase in the number of female and minority students pursuing computing-related degrees. [14] With the support of the National Science Foundation (DUE 1323605) and two partner institutions, we are building a community of educators who are creating innovative instructional materials that synthesize computing and the arts. Three faculty summer workshops (Wake Forest University in 2014, College of Charleston in 2015, and University of North Carolina at Asheville in 2016) involved over 70 computer science and arts faculty from across the U.S. What has emerged are various ways of synthesizing computer science and arts, including creation of new synthesis courses, modifications to traditional computing courses, development of new CITA-like curricula, design of CITA-like project experiences for undergrads, and other creative endeavors combining computer science techniques and traditional art practices and theory. During the session, we will discuss steps involved in moving forward and keeping this community growing. The session will involve audience participation, including exchanges between the session presenters and other audience members. The goal is to share our results, hear about results from other non-presenting colleagues, and to continue to grow the teaching of computer science and computational thinking to the arts and humanities masses, as well as to further enrich traditional computer science courses with creative applications, assignments, and projects.	computation;computational thinking;computer science;experience;session id;arts	Renée A. McCauley;Bill Z. Manaris;David Heise;Cate Sheller;Jennifer Jolley;Alan Zaring	2017		10.1145/3017680.3017807	arts in education;computer science;software engineering;multimedia;pedagogy	AI	-79.29586560665287	-34.526247442296246	117434
9c3dc92d10e24e5f411d4b25851ce62be39be759	a laboratory for teaching object-oriented language and design concepts with teachlets	object oriented language;pedagogy;classroom management;object oriented programming;development environment;design pattern;design patterns;teachlet;courseware;teaching methods	Teachlets are a new method originally developed to teach design patterns. Based on executable code, a problem is set that is to be solved collaboratively and interactively by all the participants of a teaching unit. A moderator is on hand to operate the computer, the development environment and video projector when called upon to do so. While deployable in themselves as an innovative teaching method, teachlets can also be used as a design object in seminar-like workshop events. In the course on advanced concepts of object-oriented programming described here, the participants themselves developed and used teachlets in a so-called teachlet laboratory.	design pattern;executable;google moderator;interactivity;teaching method;video projector	Axel Schmolitzky	2005		10.1145/1094855.1094969	simulation;computer science;multimedia;programming language;object-oriented programming	HCI	-82.76997294883365	-37.81270028498362	117440
995da2601dec10745f14f9e5865b0dc560320b76	enhancing electrical troubleshooting skills in a computer‐coached practice environment	university student;experimental group;field study;problem solving	Abstract This article describes a project that resulted in the development and testing of a computer‐coached practice environment for enhancing electrical troubleshooting skills. Students were presented with problem scenarios which they tried to solve by collecting and interpreting information, developing a graphical problem space, and selecting procedures to test potential faults. During the problem solving activity, students were coached to think and perform like experts. Student actions were compared to expert actions, and feedback and guidance were provided as needed. A quasi‐experimental field study of the troubleshooting tutor involved 32 university students enrolled in a second level aircraft electrical systems course. The experimental group (N= 18) used the Technical Troubleshooting Tutor in addition to the regular laboratory activities completed by both groups. At the end of the semester, all the students		Scott D. Johnson;Jeff W. Flesher;Jihn-Chang J. Jehng;Ahmed Ferej	1993	Interactive Learning Environments	10.1080/1049482930030303	simulation;computer science;knowledge management;artificial intelligence;sociology;pedagogy;field research	HCI	-79.10138977715873	-37.79740802191563	117741
00e1fc7ad6305ea9021026145e49c4a52e0fb94b	designing, deploying, demystifying electronic class/instructor evaluations	on line;feedback;evaluation;analysis;course;information service;course evaluation;scanning;faculty;survey	Here at Information Services and Resources, we are working on a new process to get course evaluations done electronically to reduce the amount of work on our staff and especially for the campus academic assistants. This new process is with Class Climate, a software product that is web-based. This will replace the current, inadequate, manual process. It will streamline the time it takes to develop evaluations, take evaluations, and create reports from the results and then saved/archived in order to be reused and/or compared across semesters/professors. The evaluations can be taken on-line securely and confidentially and/or hand written and the results will be tallied electronically and reported back to the academic assistants much faster than in the past. Even students' comments will be seen in the electronic reports and the academic assistants will not have to type them by hand any more! Quite a time-saver in itself, let alone all the tallying the assistants had to do by hand! Each academic assistant will be able to design questionnaires according to the faculty members' particular questions in various formats along with any number of open-ended questions. We have ten departments trying it as a pilot this semester with a full push to all of campus this coming fall with training to be offered this summer to all of the academic assistants. We are very excited to offer this new process to the campus to help them streamline their work in this very hectic and time critical aspect of their job.	adobe streamline;archive;nonlinear gameplay;online and offline;report;web application	Schelly B. Homan	2008		10.1145/1449956.1450051	simulation;engineering;multimedia;mechanical engineering	HCI	-78.18857854549547	-32.69093217564184	117814
1e7c42d494a09381b8442a6ada4f0f4d6fd6a389	interactive support for planing visual programs in the problem solving monitor absynt: giving feedback to user hypotheses on the language level	visual programming;problem solving	For approximately ten years computer aided knowledge communication disappeared from the research scene. Today it has been reestablished under the abbreviations of ICAI (Intelligent Computer Aided Instruction), PSM (Problem Solving Monitors) or/TS (Intelligent Tutoring Systems) with regular conferences, research journals and textbooks [1,2,3,4,5]. The difference between ICAIflTS and CAI/TS was pointed out by [6]:	planning;problem solving	Claus Möbus;Heinz-Jürgen Thole	1990		10.1007/BFb0020870	simulation;computer science;artificial intelligence;theoretical computer science	AI	-85.4909626136599	-36.882716211892635	117830
1e4fdb3bfe42bcf3e2cd6a3b3582f080ccd048d1	how to attract women into the field of computing	tuple space;transputer;speculative processing;parallel lisp	Women make up about half the population of this country while they account for a small percentage of the scientific community. Upon entering college, only one third of those choosing science ate women and even a much smaller percentage complete their PhDs [2], The teason for the reluctance of women to choose scientific fields seems to stem from the fact that from early childhood, girls are generally discouraged from choosing science and mathematics majors and are steered towards more traditional career paths. Falsely presumed and publicized innate inferiority of females’ analytical ability has possibly contributed to the females’ (and, by and large, the society’s) perception of gender differences [5], Comparative evaluation of academic achievements of school children in other cultures do not endorse the innate differences expressed by researchers in this country [6]. Mccoby and Jaklin of Stanford University, in a study entitled The Psychology of Sex differences [5], conclude that girls have a stronger verbal ability while boys perform better in visual-spatial and mathematical problems and are more aggressive. In a similar study by Benbow and Stanley of Johns Hopkins University [1], the authors claim to have established innate differences in 12-year-old girls’ and boys’ abilities. What these studies do not take into consideration is the effect of differences -that may well be insignificant individuallyin developmental patterns and formal training of girls and boys. A teacher may perceive a boy’s courage in shouting out a correct answer as a sign of acceptable male aggressiveness, but may admonish a girl for exhibiting a similar behavior. While at home, girls are encouraged to spend quiet times reading and enjoying books, while boys are encouraged to select more exploratory pastimes. It is the cumulative eflecr of differences, each of which seem insignificant in isolation, that can affect the females’ decisions for choice of career paths and objectives. More studies are necessary that address the diffenmces in socialization and cultural and family expectations of the females and males. New investigations related to Computer Science education are beginning to emerge (e.g., see [4]). The small percentage of women who choose to enter scientific fields are faced with numerous obstacles throughout their training and careers. Computer Science women in general, rate graduate school to be a “chilly” climate that does not offer them the same nourishing support thfit their male classmates get from the maledominated faculty and fellow-graduate-student networks [3]. Presence of positive “role models” has a significant effect on attracting women into scientific fields [7]. Such role models also play an important role in retaining the women who have already entered the field as professionals. Fewer women PhDs choose to go to Academia and Shll fewer women hold positions in research universities. This has been reported mainly to be	book;computer science;exploratory testing;goto;socialization;the stanley parable	Farideh A. Samadzadeh	1992		10.1145/131214.131285	computer architecture;parallel computing;computer science;tuple space;programming language	HCI	-85.04892575100327	-24.864238947386347	118078
37dce137581fd8b6dc306a3e958cc240611d7e0f	poster: a matrix for analyzing projects in software engineering courses		1 The careful selection of a project for Software Engineering courses is important from the point of view of the student, the teacher and the project user or client -if available. But, how do you determine whether to develop a complex fictional case, or a simple real-world project with a considerable amount of learning about the software lifecycle? How do you determine whether or not to develop a social project aimed at the community?  In order to analyze project characteristics a framework was elaborated, based in a matrix with attributes found in different academic projects carried out over 10 years, and weighted according to certain criteria.  It is expected that the result of this analysis will help professors choose the most appropriate software project to develop in class, depending on the characteristics of each project.	software development process;software engineering;software project management	Jakeline Marcos-Abed	2018	2018 IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion)	10.1145/3183440.3195053	computer science;software development process;software engineering;systems engineering;software;matrix (mathematics);project management;teamwork	SE	-83.02462728851059	-33.32108521634891	118810
5593d19d84c50f290445d837f45332930138d2f9	mechanics of undergraduate research at liberal arts colleges: lessons learned	lessons learned;undergraduate research	The benefits of engaging undergraduate students in research are numerous and well-known. Therefore, many schools are encouraging undergraduate research. However, carrying out undergraduate research in a liberal arts school can be challenging – liberal arts schools usually lack the resources typically available in larger research universities; the research programs of faculty at such schools are often insular; undergraduates may not always be adequately prepared or motivated for research; and research is only one of the many activities competing for the time and energy of undergraduate students. The objective of this panel is to discuss how undergraduate research can be successfully carried out in liberal arts schools in spite of all these constraints. We want to examine the mechanics of undergraduate research in such an environment which practices work and which do not.	arts	David R. Musicant;Amruth N. Kumar;Doug Baldwin;Ellen Lowenfeld Walker	2007		10.1145/1227310.1227334	computer science	HCI	-79.90545791178444	-34.33279080970322	118885
89fcd0afad4d7af9f158f9ce69dc825d74aba855	implementation issues for cs majors and nonmajors in a senior cs capstone sequence	network design;introductory courses;introductory computer science;large courses;course management;electrical engineering	We face a need for undergraduate instruction in networking and telecommunications. The Computing Research Association has identified both web-specialists and network-designers as being among the seven occupations where there is a clearly established shortage of professionals [2]. Even with the recent softening of the economy, individuals in the networking and telecommunications field are highly sought after as attested to by surveys such as RHIConsulting's® recent survey of 1400 CIOs nationwide [4]. It is imperative to ask how these individuals will be educated.Historically, telecommunications has been hardware oriented. Consequently, it has been in the domain of Electrical Engineering. The ongoing convergence of communications and computing, however, has drastically shifted the focus of telecommunications and considerably broadened the field. Many of the new areas of telecommunications will not fit neatly into old categories. Some are much closer to Computer Science than Electrical Engineering.Schools wishing to address this need must begin by deciding what should be taught. For two-year schools, the ACM has issued guidelines for several programs [1]. For four-year institutions, the curriculum remains an open question. The primary guidelines for four-year institutions are the dated 1991 Computing Curricula [5] and the emerging Computing Curricula 2001 Computer Science [3]. As the goal of these documents is to define the core needs of the CS discipline, understandably, neither goes beyond outlining an introductory course in networking. Schools interesting in educating professionals in networking and telecommunications will need to go beyond this first course. A key question would seem, then, in teaching networking, what should be taught beyond the first course?Our panel presents three quite different positions---that the basic need can be met with a single well-designed course, that a few advanced courses will meet the need, and that a collection of courses constituting a minor is called for.	capstone (cryptography);computer hardware;computer science;electrical engineering;imperative programming;softening	Joseph D. Sloan;Andy Lopez;Randy K. Smith;Dick Mowe	1998	FIE '98. 28th Annual Frontiers in Education Conference. Moving from 'Teacher-Centered' to 'Learner-Centered' Education. Conference Proceedings (Cat. No.98CH36214)	10.1145/563340.563449	network planning and design;simulation;computer science;software engineering;multimedia	Theory	-78.0280670107164	-29.614723317588673	119043
60bd6e9eda72d438406bd92aa419ea365e2cc429	hci and education: a blended design experience	settore inf 01 informatica	Teaching HCI in an undergraduate course for computer scientists is often a challenging experience, because the skills that characterize HCI are different from scientific and computational thinking that are the focus of most subjects of the curriculum. Often HCI teaching is organized as a set of lectures that are useful to learn concepts, but don’t increase the design skills of the students. This work reports the results of an educational experience where both learners and teachers were actively involved in a process of knowledge construction and design. This process usually happens in other domains, such as architecture or industrial design, but is not part of most computer science curricula. We chose as project a challenging theme: the design of eco-feedback interfaces that inform people about the consequences of their actions for the environment and help to take decisions for lowering energy consumption. Eco-feedback interfaces are also representative of the gap between the products available on the market and the results of scientific studies, evidenced also by a recent workshop about HCI education. The workshop evidenced a number of pitfalls in HCI education that in our educational experience we tried to overcome with appropriate methodologies. An additional challenging task was the attempt to organize all the design activities taking advantage of a platform for remote learning, stressing its limits. The paper will discuss all these issues, evidencing where the applied methodologies gave good results and where they need further improvements, with the final goal of giving useful advices for HCI educational experiences to come.	computation;computational thinking;computer architecture;computer science;computer scientist;experience;human–computer interaction;knowledge management;report;user interface	Fabio Pittarello;Tommaso Pellegrini	2016	Multimedia Tools and Applications	10.1007/s11042-016-3782-7	simulation;human–computer interaction;computer science	HCI	-79.09675299129724	-36.18925823287697	119085
1b0ee9064945e0b1b62a5b77c6ef4f147287cceb	curriculum development and studio based information approach for teaching information systems in uganda		Curriculum at Doctoral Information Systems (IS) level is complex, advanced and unique in context. The Uganda National Council of Higher Education requires of all Universities to come up with teaching curricular for PhD students. At Mbarara University of Science and Technology, this is totally new with no contextual example to suite our dynamic information systems world. At this conference we hope to get feedback from IS and IT experts on PhD research curricular as professional expertise in handling curriculum issues. Additionally, Information Systems curriculum at graduate level of learning especially its experimental components continue to lag behind in a resource constrained environment is faced with a gap on innovative interactive ways of teaching versus a dynamic IS world. A studio-based approach of teaching has shown fruitful results in developed countries in MonashAustralia (Lynch et al., 2002). It has widely been used in various teaching areas such as (Moody, 2011; Welch, 2007). It merges collaborative, problem based, learning as an approach for modern teaching and learning information system. However little is known of the conditions, consequences and acceptance as a teaching method of graduate Information Systems in a Ugandan case. At the TREO AMCIS 2016 conference, we will seek to learn from Information systems and information technology experts on its feasibility within a unique context.		Annabella Habinka	2016			engineering management;engineering;knowledge management;pedagogy	AI	-80.26368235536239	-32.51098481201077	119089
0b8d286cccfbfc3a39622db19e7add7c51043b69	reading a computer science research paper	paper review;research paper;undergraduate student;reading research papers;graduate education	This tutorial article highlights some points that a graduate or senior undergraduate student should bear in mind when reading a computer science research paper. Specifically, the reading process is divided into three tasks: comprehension, evaluation and synthesis. The genre of paper review is then introduced as a vehicle for critical reading of research papers. Lastly, guidelines on how to be initiated into the trade of conference and/or journal paper review are given. Designed to be used in a graduate course setting, this tutorial comes with a suggested marking scheme for grading paper reviews with a summary-critique-synthesis structure.	computer science;item unique identification;sigcse	Philip W. L. Fong	2009	SIGCSE Bulletin	10.1145/1595453.1595493	computer science	Logic	-79.2593851427712	-29.915998305827284	119340
ded3fd3be4ebe3b621630737606c12be8b6fa483	securing organizational internal e-learning development	electronic learning;training methods;application software;geographically dispersed workforce;computer aided instruction;distance learning;electronic learning educational technology computer aided instruction distance learning internet application software education educational institutions business information management;distance learning organisational aspects security of data management training computer based training;organizational internal e learning development;internet;academic institution;information management;business;computer based training;academic institution organizational internal e learning development geographically dispersed workforce training methods;training program;educational technology;management training;security of data;knowledge base;organisational aspects	Organizations worldwide are now seeking more innovative and efficient ways to deliver training to their geographically dispersed workforce, and with traditional training methods, companies generally spend more money on transporting and housing trainees than on actual training programs. E-learning has the capacity to reduce these costs significantly and enabled organizations to secured their product or service knowledge. This paper focuses on how organization can secure their internal e-learning development and advocate combination of technological approaches. It also provides a framework on how organization /or academic institution should make a rational decision regarding the implementation of e-learning. The question posed by this paper is that: can organizations improve their e-learning while also securing higher level of knowledge based?.	money;rationality	Charles A. Shoniregun;Paul Smith;Alex Logvynovskiy;Vyacheslav Grebenyuk	2005	Fifth IEEE International Conference on Advanced Learning Technologies (ICALT'05)	10.1109/ICALT.2005.235	distance education;knowledge base;educational technology;application software;the internet;simulation;computer science;knowledge management;artificial intelligence;management science;information management;management;law;world wide web;pedagogy	Robotics	-84.32277569565305	-30.931397425397115	119649
2012cb73304372ccb847ed24f016f55f481d039c	by students, for students: a production-quality multimedia library and its application to game-based teaching	teaching programming;object oriented programming;software engineering;game development;game programming;software development;curriculum design;product quality;knowledge modeling	The attractive idea of using game development for teaching programming can only meet student expectations and modern software engineering requirements if it uses advanced multimedia technology, at the level of the best commercial solutions. In implementing novel pedagogical techniques, we have developed a powerful multimedia library, with major contributions from students, and used it to offer games as course projects. More than 150 games have been developed, many of very high quality, and publicly available for everyone’s enjoyment. This experience combines advanced software development with student participation, strong O-O software engineering principles, and the excitement of one of the coolest areas of technology.	display resolution;multimedia library;requirement;software development;software engineering;video game development	Till G. Bay;Michela Pedroni;Bertrand Meyer	2008	Journal of Object Technology	10.5381/jot.2008.7.1.a5	game development tool;simulation;level design;extreme programming practices;computer science;software design;social software engineering;software framework;component-based software engineering;software development;software engineering;software construction;game developer;multimedia;object-oriented programming;resource-oriented architecture;video game development;game programming;software development process;game testing	SE	-82.75353803977272	-36.145478803995495	119842
d8f6049cbd1ba74839b0d36a8566e856d48e5ce6	partial solution for a problem of developing a large number of elearning resources	joint development of teaching resources;learning objects;distance learning;ecourse development;teaching resources creation;elearning resources	Through a careful organization of a teaching curriculum at their Department, the authors managed to organize nice and fruitful cooperation with their students in the eLearning area. In particular, what they find as the most positive result is the fact that an excellent cooperation between students and lecturers was developed. This cooperation lead to creation of digital learning objects by the students, as a result of the requirements for passing an exam dealing with eLearning. The authors' experience is limited to the students of the computer science study program, since only a small number of students of other study programs elected this course, but the number of students they observed is large enough for qualitative conclusions. Based on a static teaching material, students developed several types of eLearning resources for various subjects, not restricted to computer science courses. Developed materials usually required some additional work to make them fully usable as a part of university courses. Still, generally, all of the technical work was performed, a large part of texts, images, assessment questions, and other learning objects were created, and resources typically were very usable after some additional polishing. Yet, what is probably of even a greater value is the fact that the authors managed to join several important things within this one course. First of all, and probably the most important, students were introduced to principles and methodology of eLearning in some real situation, preparing some practically usable material, thus being able to see all of the problems they might encounter in the future. Secondary, as a result, the authors received a lot of draft versions of teaching materials to improve it further, thus relaxing efforts for eLearning material creation. Finally, the most creative part of the result is the fact that these resources introduced the authors to different, sometimes rather interesting views on problems and materials in question, or on teaching methodology. Essentially it offers them new ideas, notions, and concepts to work with.		Zoran Putnik;Mirjana Ivanovic;Zoran Budimac;Klaus Bothe	2016	IJHCITP	10.4018/IJHCITP.2016070105	psychology;distance education;simulation;computer science;engineering;knowledge management;multimedia;management	AI	-78.76802987347216	-35.70414958348533	119990
3e3902cff3a4435b2b64d8e7787f5ff5931eb742	applying blended learning in an industrial concept - an experience report	blended learning	This paper, describes the experience made with coaching enriched blended learning in the context of industrial technology transfer projects. Based on numerous applications of our modular blended learning approach for teaching object-oriented software development with UML, an attempt has been made to improve the design, the organization and the execution of the blended learning arrangement. Therefore, we collected data on the learning environment, the learners ́ behavior and preferences. The results from the questioning in an industrial setting, although far from being representative because of the small number of respondents, give some interesting insights in the needs and expectations of learners and the usage of different elements of blended learning arrangements which could serve as hypotheses for later in depth studies	software development;unified modeling language	Silke Steinbach-Nordmann	2006				SE	-83.57173451660285	-34.94041425512322	120081
f488cbc8ff7236fb56f598331a4da2210a32f87c	wireless technology in educational institutes	wireless networks;access point;wireless growth;service provider;mobile computing educational computing educational institutions;wireless network;educational institutes;wireless services;higher education institution;coverage wireless lan impact on education wireless growth security;wireless communication;research paper;internet;portable computers;educational technology wireless networks communication system security wireless lan electronic learning europe educational institutions computer science software engineering north america;impact on education;coverage;wireless services wireless technology educational institutes;wireless lan;wireless technology;educational computing;mobile computing;security;communication system security	This research paper examines the standing of wireless technology in higher education institutes located in a number of regions around the world. In this paper 33 higher education institutes have been surveyed to find out the current level of wireless development. Institutes were surveyed on wireless services provided, the number access points, the coverage area, level of growth, the impact of installing wireless, and future plans of the wireless network.	internet access;wireless access point	Samad S. Kolahi;Ranjana Shukla;Avikash Kumar;Robert Freeth	2008	2008 International Conference on Computer Science and Software Engineering	10.1109/CSSE.2008.697	telecommunications;computer science;operating system;wireless network;mobile computing;computer security;computer network	Robotics	-83.53393991969497	-27.576525223515723	120139
3f2b88b117ae4391b9838129bba5a81f5188453a	engineering of computer-based systems-a proposed curriculum for a degree program at bachelor level	automotive engineering;working group;reliability engineering;communication system traffic control;computer based systems engineering;control systems;undergraduate education;technical committee;education and training;industrial training programs computer based systems engineering master level degree program ecbs master program courses;computer science education systems engineering training educational courses;training;systems engineering;systems engineering and theory;systems engineering and theory biomedical engineering control systems communication system traffic control medical control systems reliability engineering hardware automotive engineering computer science education educational programs;computer science education;biomedical engineering;engineering of computer based systems;educational courses;training program;educational programs;ecbs master program;courses;industrial training programs;master level degree program;hardware;medical control systems	This paper presents a curriculum proposal for an Engineering of Computer-Based Systems (ECBS) Bachelor program from the Working Group on Education and Training of the IEEE Computer Society ECBS Technical Committee. It explains the need for a formal undergraduate education of engineers in this discipline and describes courses required for such a program.		Jonah Z. Lavi;Bonnie E. Melhart;Ian Pyle	1997	IEEE Transactions on Education	10.1109/ECBS.1997.581788	engineering management;working group;systems engineering;engineering;control system;software engineering;computer engineering	Visualization	-81.92037100467499	-30.64548744476563	120171
77e5f43a937a0da3cc0129ecbe64a6e4cf5a5e79	gss to support classroom discussion: opportunities and pitfalls	groupware;group support system;application software;gss;information technology;appropriate technology;computer science education;feedback;human factors;future research;classroom discussion;process losses;environmental economics;future research classroom discussion gss information technology group support system college classroom educators participation discussion experience process losses classroom climate;communications technology;educational technology;educational institutions application software information technology collaborative software educational technology appropriate technology environmental economics communications technology computer science education feedback;college classroom;classroom climate;discussion experience;courseware;participation;user interfaces;user interfaces courseware teaching groupware human factors;teaching;educators;collaborative software	Interest in the use of collaborative learning strategies in higher education has been manifested in recent years as educators are constantly challenged to seek new ways to prepare students for the workplace, where teamwork and technological innovation are the norm. Technological tools that support group processes, including brainstorming, voting, and group writing, are currently available within group support systems (GSS). However, the use of such tools in a collaborative learning setting in higher education has not been fully explored. Using Johnson and Johnson’s stages of development of learning groups (1997) as the conceptual framework, the impact of GSS on the group development process of two separate graduate student groups was explored. Johnson and Johnson’s seven-stage model expanded upon Tuckman’s (1965) four-stage schemata of group development. High-performing groups reach the sixth stage, functioning maturely and productively. Two groups (Group A and Group B) formed by the instructor of a graduate class on workplace education discussed and analyzed two journal articles in order to write reviews. All sessions were highly structured and both groups collaborated with and without GSS. Findings demonstrated that Group A developed very differently from Group B in both environments. Group A’s pattern of development was erratic and, in contrast to Group B, they never evolved into a high-performing group. During their second session in the traditional classroom, Group B spent most of the time functioning maturely and productively. Charts depicting the stages of development were based on the coding of session transcripts. A comparison of the charts showed that the technology had little impact on group development; however, the GSS-supported sessions were accompanied by reduced rebelling and differentiating (Stage Four). Recommendations for future research are discussed.	chart;color gradient;divergence (computer science);recommender system	Craig K. Tyran	1997		10.1109/HICSS.1997.665772	educational technology;human–computer interaction;computer science;knowledge management;operating system;software engineering;multimedia;management;law;information technology;collaborative software	HCI	-82.93008530468396	-34.297787671045015	120184
b68db50083cbbdd5022fd18aa16a4760d6afc82d	teaching project management skills: an example of collaboration between a university and the local pmi chapter	project management;teaching;collaboration	The demand for project management skills in industry is increasing; however the number of individuals who can meet the demand is decreasing. Universities are addressing these changes by developing project management degree programs. In this paper we describe the experience of a collaborative effort between one University and a local chapter of the Project Management Institute (PMI). The result is a popular and highly successful program in which project management professionals from the PMI are engaged in student learning by providing a guest lecture series, serving as mentors for class projects, providing actual organizational projects for students to analyze and apply class concepts, and serving as judges on student team project competitions. The results are students who receive a rigorous education, hands on experience in industry, form relationships with, and learn practical skills from PMI volunteers; grounding their formal education in practical industry experience.		Robin S. Poston	2010			project charter;computer science;program management;knowledge management;opm3;project management;project management 2.0	SE	-80.7469610617366	-31.9850918732308	120423
cebf2bf22a493086da8d8a90f1a1d43b6291eb9f	a software tool that helps teachers in handling, processing and understanding the results of massive exams	statistics;document processing;programming;exam processing	During the last decade, at the University of Belgrade, School of Electrical Engineering, various tools have been developed and used for automation of preparation, grading and results processing of programming exams. Those exams consist of multiple-choice questions that represent sophisticated programming puzzles, and coding problems that require students to write solutions to the given problem. In order to get better understanding of student's achievements, there was a need for statistical analysis of the exam results. We have developed a new tool in aforementioned tool chain that processes exam results and presents various statistical parameters in tables and graphs. The purpose of the project is to help teachers in handling massive exams with more than 500 students, and to provide them with information on students' knowledge in various parts of the programming course, specific algorithms etc.	algorithm;electrical engineering;graph (discrete mathematics);programming tool;table (database);toolchain	Marko Misic;Marko Lazic;Jelica Protic	2012		10.1145/2371316.2371370	programming;simulation;document processing;computer science;artificial intelligence	HPC	-84.06278769909242	-36.77657038331692	120457
179071b3e0ce1d735a61a5cfda9c61a651a7b5b4	robotics and ai as a motivator for the attraction and retention of computer science undergraduates in canada		Since the burst of the dot-com bubble in 2000, computer science has seen a significant decrease in enrollment in universities across North America. While this has been well-publicized in the media in the United States, Canada’s numbers in this regard have been significantly worse. Within Canada, however, the Department of Computer Science at the University of Manitoba has been relatively fortunate: while a noticeable decrease has occurred, it is statistically much less than has occurred across Canada and the U.S. There are a number of reasons for this, one of which is the use of artificial intelligence (AI), and robotics in particular, as a tool for student recruitment and retention. In this paper, we examine enrollment trends of our university compared to the rest of the continent, discuss some of the reasons behind these trends, and describe how we use AI, and robotics in particular, as tools to attract and retain computer science students. Introduction: CS Enrollment Decline in	artificial intelligence;computer science;dot-com bubble;robotics	John Anderson;Jacky Baltes	2008			simulation;human–computer interaction;artificial intelligence	AI	-78.78417104072594	-30.17509234038277	120965
db4ea7019ad72e0ca64782a281caf680af398e89	a reflecting and/or refracting pool: when a local community becomes autonomous online		The Pool is an online project developed by faculty and students in the New Media Program at the University of Maine that aims to facilitate the sharing of skills and ideas among its users. Still in the development phase, while performing the “release early, release often” ethic of open source software development, The Pool’s sources are mostly limited to a steady stream of students from the New Media Program. That The Pool to date, is limited to geographically local, and contextually specific use might engender answerable questions about the nature of evolving collaborative systems. This study explores where local context influences Pool development dramatically and where it appears to make little difference by focusing on three main themes: 1) collaboration; 2) student attitudes and strategies of resistance to The Pool; and, 3) licensing trends in The Pool. One of the most interesting aspects of the study shows that as a project develops, users tend to lessen the controls of attribution, and non–commerciality, while increasing the controls of no–transformations and no–combinations. This phenomenon reveals a surprising, anti–intuitive shift in emphasis during the creative process.	autonomous robot	Margaretha Haughwout	2006	First Monday		simulation;knowledge management;multimedia;world wide web	Theory	-80.07958070983013	-31.612640206841714	121209
bd18e58c18cf4d75aba4ab843fe3929816abdfba	lessons in teaching game design	outreach;game design and development;lesson plans;design and development;university of california;project based course;game design;video game;educational game;high school;games;computer science fluency	In this paper, we describe a video game design and programming class offered as part of the California Summer School for Mathematics and Science (COSMOS) program at University of California, Santa Cruz. The authors have co-taught this class for four years, and have had an opportunity to iteratively explore a number of approaches in teaching the class. The course has evolved a great deal over the last four years; this paper presents a post-mortem of the program so far, describes our different approaches, and provides insight into the game design process for students.	video game design	Anne Sullivan;Gillian Smith	2011		10.1145/2159365.2159421	video game design;game design;games;simulation;level design;computer science;artificial intelligence;game mechanics;game developer;multimedia;game design document;video game development;game testing	HCI	-80.66637079644835	-34.059259458068716	121483
cce60ff911563cab1d6964266664036d105b9b7b	individual-centered education: an any one, any time, any where approach to engineering education	group centered activity;engineering degree structure;individual centered education;engineering education educational institutions acoustical engineering knowledge engineering design engineering educational products councils courseware productivity asset management;design engineering;asset management;helium;educational multimedia;computer aided instruction;distance learning;engineering computing;degree structure;higher education;courseware engineering education educational technology multimedia systems;indexing terms;multimedia systems;systems engineering and theory;para professional model;continuing education;enabling technologies;multimedia computing;engineering education acoustical engineering knowledge engineering courseware educational products systems engineering and theory councils computer aided instruction productivity;educational material;acoustical engineering;engineering education;enabling technologies individual centered education engineering education american industry fundamental restructuring para professional model engineering degree structure higher education group centered activity individual centered approach educational material multimedia courseware;fundamental restructuring;councils;individual centered approach;distance learning engineering education engineering computing teaching courseware multimedia computing;productivity;educational technology;courseware;educational products;american industry;multimedia courseware individual centered education engineering education para professional model degree structure higher education;teaching;multimedia courseware;knowledge engineering	Engineering education is beset by many of the same challenges that have affected American industry. Much has been recommended and implemented to improve engineering education. However, the traditional structure of engineering education remains, even though current exigencies require a fundamental restructuring. In an earlier paper, the author proposed a para/professional model as an alternative to the traditional engineering degree structure. At a more detailed level, this paper proposes to restructure the very nature of how higher education is delivered—from a group-centered activity to an individual-centered approach that would allow any one to access educational material or multimedia courseware at any time and from any where. Fortunately, the enabling technologies for such an individual-centered approach are, for the most, available. Nevertheless, several challenges must be addressed before individual-centered education can become a reality.		James M. Tien	2000	IEEE Trans. Systems, Man, and Cybernetics, Part C	10.1109/5326.868443	distance education;educational technology;productivity;engineering education;index term;acoustical engineering;computer science;knowledge management;artificial intelligence;knowledge engineering;multimedia;helium;higher education	SE	-84.5445014185991	-31.550056411782887	121819
df266410b8a878767fdef3613e167bc5e30d6c22	a relationship analysis tool among j07, jitee and job type utilizing i-competency dictionary	learning outcomes in it domain;qualification;certification;job analysis;dictionaries government industries qualifications standards;relationship analysis tool japanese government i competency dictionary it domain icd it professionals job types japan it engineer examination jitee j07 college level it education ictbok quantitative analysis mece principle;learning technology;body of knowledge;certification learning technology learning and knowledge management learning outcomes in it domain body of knowledge curriculum analysis job analysis qualification;curriculum analysis;learning and knowledge management;professional aspects computer aided instruction educational institutions government policies knowledge management	Japanese government developed the i-Competency Dictionary (iCD) to define number of abilities such as knowledge, skill and task in order to clarify relationship among various activities in IT domain. Icd contains (1) required abilities for various job types of IT professionals, (2) requirement of Japan IT Engineer Examination (JITEE) and (3) requirement of various BOKs such as J07 for college level IT education. However the abilities of iCD are not mutually exclusive so that systematic comparison is impossible. In this paper, we develop a tool to analyze relationship among various activities explained above. In order to achieve this goal, we define a mapping between the knowledge of iCD and the ICTBOK which we have proposed in our previous work. Quantitative analysis and comparison then becomes possible in order to clarify the relationship through the mapping which follows the MECE principle.	dictionary;high-level programming language;mece principle	Tetsuro Kakeshita;Mika Ohtsuki	2015	2015 IIAI 4th International Congress on Advanced Applied Informatics	10.1109/IIAI-AAI.2015.202	engineering;knowledge management;management science;job analysis;pedagogy	AI	-83.55394622385387	-32.64905848674541	122363
b4e258ccbf726d909b6fc19ff75534a3b04d8b05	special session: engaging mathematical reasoning exercises	verification;discrete structures;specification;invariants;induction;programming by contract;correctness proofs	SIGCSE has for a long time nourished an audience excited about teaching mathematical reasoning principles across the curriculum through the Math Thinking Birds-of-a-Feather session and panels on mathematical reasoning. While these forums are useful for discussing reasoning topics, they do not provide a consistent venue for sharing math-reasoning activities to be used in the classroom. Therefore, SIGCSE attendees interested in math thinking have routinely wished for a place for discussing engaging math reasoning examples and assignments. Providing such a forum is the purpose of this session. The exercises and assignments will help faculty find ways to incorporate mathematical reasoning in CS1, CS2, data structures and algorithms, discrete math, and software engineering courses.	algorithm;data structure;discrete mathematics;sigcse;software engineering;venue (sound system)	Joseph E. Hollingsworth;Murali Sitaraman	2014		10.1145/2538862.2538989	case-based reasoning;verification;simulation;computer science;software engineering;invariant;multimedia;programming language;specification;pedagogy	AI	-84.5758595178902	-37.248095955776044	122387
b88c1c679651679d2c65ca1b8501ea6cd8460fb3	stock exchange game model as an example for graduate level distance studies	tecnologia electronica telecomunicaciones;psicologia y educacion;distance studies;stock exchange;didacticas aplicadas;games;optimization;equilibrium;tecnologias;grupo a	This paper deals with the development of a Web-based integrated system for distance graduate studies of theories of optimization, games, and markets, which is aimed to support core curriculum and to provide students with hands-on experience on effective use of software tools. The main objective is to stimulate and develop creative abilities to work as independent researchers. This can be explained by detailed description of a typical example: the Stock Exchange GameModel (SEGM). That is the purpose of this paper. The web-site http:// mockus.org/optimum includes SEGM and accompanying models. 2003 Wiley Periodicals, Inc. Comput Appl Eng Educ 10: 229 237, 2002; Published online in Wiley InterScience (www.interscience.wiley.com.); DOI 10.1002/cae.10027	hands-on computing;john d. wiley;mathematical optimization;siam journal on scientific computing;theory;world wide web	Jonas Mockus	2002	Comp. Applic. in Engineering Education	10.1002/cae.10027	games;stock exchange;simulation;computer science;engineering;electrical engineering;artificial intelligence;operations research;world wide web;mechanical engineering	SE	-86.91970414492587	-37.76785145823378	122420
74de81ed14760262187874836b0673b1f3dfde02	a longitudinal study of i/s careers: synthesis, conclusion, and recommendations	longitudinal study;cultural factors;organizational commitment;asian women in it education;female participation in it education	Nearly eight years ago, a longitudinal study was undertaken, involving 1018 graduating I/S students from 38 colleges and universities. After these graduates entered their I/S careers, follow-up surveys were conducted at 22 and 46 month intervals. This paper has three purposes: to synthesize the previously published findings into an integrated coherent overview of the entire study; to report some additional, as yet unpublished, results dealing with organizational commitment; and to provide recommendations that may be of interest to I/S academics, employers, and professionals.	coherence (physics)	Stanley J. Smits;Ephraim R. McLean;John R. Tanner	1997		10.1145/268820.268865	political science;nursing;management;pedagogy	HCI	-79.85231103826325	-26.108315745358293	122736
923dc5821fa38aa3bf1fc65c269ae6cc8cb66d05	engineering and computer science community college transfers and native freshmen students: relationships among participation in extra-curricular and co-curricular activities, connecting to the university campus, and academic success	educational institutions communities organizations computer science engineering profession joining processes analysis of variance;analysis of variance engineering community college transfer computer science community college transfer native freshmen student extracurricular activity cocurricular activity university campus academic success undergraduate student social engagement activity academic engagement activity social integration public university undergraduate research experience;persistence;retention;social sciences;computer science education;academic success;statistical analysis;engineering profession;engineering education;analysis of variance;joining processes;college adjustment;organizations;computer science;communities;academic success college adjustment retention persistence;statistical analysis computer science education educational institutions engineering education social sciences	Research studies have shown the importance of the relationship between “a sense of belonging” and successfully adjusting to college life for undergraduate students. Few studies, however, have compared if native freshmen and transfer students connect to the campus in similar ways. The purpose of this study was to examine the relationships among participation in social and academic engagement activities, social integration, and academic success for students graduating with engineering or computer science Bachelor's degrees at a large, public university. An additional area of interest was the role of undergraduate research experiences (UREs) in making friends on campus. Using analysis of variance, 1,042 responses were analyzed from senior exit survey questions and cumulative GPA from student records. Students who reported higher levels of social integration on average had higher GPAs. Seven activities were found to be strongly associated with social integration for native freshmen, and three activities for transfer students. Three activities - organizations in their major, experiential learning, and intramural sports - were common to both groups. Surprisingly, given the cohort experience structure of UREs, no significant relationship was found for social integration in this study. This finding may be limited by the sample size or other factors such as self-selection bias.	computer science;selection bias;social engineering (security)	Lisa Massi;Patrice Lancey;Uday Nair;Rachel Straney;Michael Georgiopoulos;Cynthia R Young	2012	2012 Frontiers in Education Conference Proceedings	10.1109/FIE.2012.6462276	engineering management;political science;engineering physics;pedagogy	HCI	-83.011941968929	-27.383307087334057	122775
a5da935fc20608b18ea754d818cee70a1da839b5	sustainable construction - the use of case studies in civil engineering education	educational experience higher education sustainable construction;educational experience;construction industry;higher education;materials;sustainable construction;teaching civil engineering construction industry educational courses educational institutions engineering education further education;civil engineering;civil engineering construction industry knowledge engineering educational institutions meteorology materials;meteorology;civil engineering degree course sustainable construction civil engineering education teaching techniques sustainability knowledge construction industry civil engineering curriculum undergraduate students civil engineering projects sustainable agenda;knowledge engineering	Civil engineering educators need to develop effective teaching techniques in order to prepare the current students with the necessary sustainability knowledge. In view of its importance, aspects of sustainability are broadly integrated into existing civil engineering modules at the University of Nottingham Malaysia Campus. Furthermore, specific modules focusing in sustainability issues, principles and aspects in the wider construction industry were designed and incorporated in the civil engineering curriculum. In order to enhance our undergraduate students' understanding and learning experience, an additional module was incorporated for the past four years that is substantially devoted to investigate major civil engineering projects employing sustainable agenda. The students are free to choose case studies and are required to find, sort, synthesize and present information relating to the main issues surrounding sustainability of major civil engineering projects. The students report/present their findings in the form of essays. In this paper, the effectiveness of the use of major civil engineering projects employing sustainable agenda as case studies and the students' appreciation of sustainable practice in civil engineering are investigated. Furthermore, the lecturers' and students' views on the extent of coverage of the key elements of sustainability in the civil engineering degree course are evaluated. The outcomes indicate that the use of major civil engineering projects employing sustainable agenda as case studies develops the students' appreciation of the contemporary engineered environment and sustainability in civil engineering. It, furthermore, develops their appreciation of the continual developments and improvements in civil engineering knowledge/practice. A common view by the lecturers and students, as indicated from this study, is that the degree course needs to further cover the key issues of sustainable construction.		Wael Elleithy;Lau Teck Leong	2014	2014 International Conference on Teaching and Learning in Computing and Engineering	10.1109/LaTiCE.2014.37	biological systems engineering;aquatic and environmental engineering;engineering management;health systems engineering;construction engineering;systems engineering;engineering;civil engineering;civil engineering software;transport engineering	SE	-78.65291172640418	-33.23765623859243	122872
b7077d041ed66621487d3fbc8f223e6e54587f6c	proposal to apply a code of good teaching practice in engineering		Excellence is one of the goals of higher education. One possible way to achieve this objective is by applying a culture based on the concepts of quality and innovation. However, the real-world application of these concepts in higher education teaching is a difficult task. In this paper, we present a Web tool to help teachers apply a code of good teaching practice based on the aforementioned concepts. This code has been used for several years in electrical engineering, electronics and computing courses, although it could be applied to any other area. To assess this code, objective and external metrics have been used. Results show that the code helps to improve students’ satisfaction as well as their academic results. Teachers’ views on the code are also moderately positive.	apply	Esther Sainz-Martin;Raúl Igual;Inmaculada Plaza;Iván García-Magariño;Francisco Ibanez-Alvarez;Francisco J. Arcega Solsona	2017	IEEE-RITA	10.1109/RITA.2017.2735518	knowledge management;computer science;management science;higher education;systems engineering;code (cryptography);excellence	SE	-81.44282478952806	-33.07988669939755	122901
8091d2637a803205563541668ab6a57953a3f0f1	diversity of individual research disciplines in scientific funding	disciplinary diversity;research discipline;nsfc;scientific funding	Given the development in modern science and technology, scientists need interdisciplinary knowledge and collaborations. In the National Natural Science Foundation of China (NSFC), more than 59 % of individuals change their disciplinary application codes to pursue interdisciplinary applications for scientific funding. An algorithm that classifies interdisciplinary applications and calculates the diversity of individual research disciplines (DIRD) is proposed based on three-level disciplinary application codes. Using a sample of 37,330 unique individuals at the NSFC from 2000 to 2013, this research analyzed the DIRD of all sponsored individuals and found that DIRDs differ significantly among scientific departments, research areas, and universities. Sponsored individuals prefer not to engage in cross-research-fields or interdisciplinary applications. In addition, top-class universities in China exhibit stronger ability to carry out interdisciplinary research than do other universities. This thorough investigation of interdisciplinary applications in a scientific foundation provides new insights in managing scientific funding.	algorithm;code	Jiang Wu;Miao Jin;Xiu-Hao Ding	2015	Scientometrics	10.1007/s11192-015-1549-y	management science	HPC	-78.17739971905236	-24.16450325117929	123314
9b787890fe4c18d4fe91718c78d1e908675475eb	interactive engagement methods in teaching electrical engineering basic courses	educational institutions collaboration laboratories engineering education antennas electrical engineering;teaching educational courses electrical engineering education electromagnetic field theory;group work interactive engagement peer instruction motivation;electromagnetic field theory;educational courses;electrical engineering education;lecture course interactive engagement methods electrical engineering basic courses teaching active learning project based teaching student collaboration engineering education epop aalto university school of electrical engineering obligatory basic courses circuit analysis electromagnetic field theory interactive engagement;teaching	Active learning, project-based teaching, and student collaboration are current trends in engineering education. Incorporating these have also been the goal of the basic studies development project EPOP started at the Aalto University School of Electrical Engineering in 2011. In the project, two obligatory basic courses in circuit analysis and electromagnetic field theory have been taught using interactive engagement during the spring of 2012. This paper presents the implementation of the teaching, including methods and evaluation with several concrete examples. As a result of the novel teaching, motivation and the engagement of students were at a high level during the whole course and learning results were better than those of the students participating the traditional lecture course.	electrical engineering;experience;high-level programming language;network analysis (electrical circuits);quantum field theory	Anu Lehtovuori;Mikko Honkala;Henrik Kettunen;Johanna Leppävirta	2013	2013 IEEE Global Engineering Education Conference (EDUCON)	10.1109/EduCon.2013.6530089	mathematics education;engineering;engineering physics;pedagogy	SE	-78.70616584696103	-33.96569300832288	123533
21a68c1795be95ec89fd82133e6acec81fcbceac	one year of ictp diploma courses on-line using the automated eya recording system	scientific application;energy;mathematics;webcasting;computer aided learning;physics;internet;student feedback;high energy physics;online courses;rich media scientific applications;science dissemination;earth science;science education;students;feedback response	The 12-month pre-Ph.D ICTP Diploma Courses in the fields of Condensed Matter Physics, High Energy Physics, Mathematics, Earth System Physics and Basics Physics have been recorded using the automated, low cost recording system called EyA developed in-house. We discuss the technical details on how these recordings were implemented, together with some web usage statistics and students feedback. As yet, no similar endeavor has been made to put on-line a complete high-level Diploma Programme, due to the high costs involved when using alternative recording solutions. These recordings are freely available on the website www.ictp.tv MIRAMARE – TRIESTE March 2009		Enrique Canessa;Carlo Fonda;Marco Zennaro	2009	Computers & Education	10.1016/j.compedu.2009.01.011	the internet;simulation;energy;science education;computer science;webcast;multimedia;law;world wide web;pedagogy	AI	-86.98070500439493	-37.30299263038636	124120
403461e39c27c7d2106c1b7ff355bc6c488f0af7	empowering early mastery of spatial visualization skills in under represented minority engineering students	visualization;biomedical engineering;three dimensional displays;engineering students;context;knowledge engineering	Students entering university-level engineering programs must be adept at spatial visualization and reasoning. The Cornell University Engineering Success (CUES) program used the NSF ENGAGE curriculum to introduce spatial visualization basics through an innovative project-based course to a select group of first year students. Students in the course were chosen to participate based on multiple background characteristics that place them at risk and may hinder their persistence in engineering. Course results were strong, with an overall 13% improvement in tested skills. Additionally, our teaching team believed that skills application in authentic spatial visualization projects would provide deeper learning. Student teams worked with biomedical researchers who asked for professional-level visualizations. We employed an action research methodology (observations, instructor journals, expert responses, and e-portfolios), tracking their acquisition of spatial concepts, representations and critical stances. Our hope was to give students a competitive edge, taking advanced visualization techniques and professional skills into future projects.	ibm notes;iteration;mind;norm (social);persistence (computer science);programming tool;relevance;scientific visualization;systemverilog	Olufunmilayo O. Adebayo;Emily J. Farrar;Rick Evans;Tyi Lindsey McCray;Traci M. Nathans-Kelly	2014	2014 IEEE Frontiers in Education Conference (FIE) Proceedings	10.1109/FIE.2014.7044161	simulation;engineering;knowledge management;multimedia	Visualization	-79.77725309649331	-34.001296482962104	124204
633c82c0a419a8021d19977a81c209e1cf72bac4	new organizational and assessment frameworks for company internship programs		Old company internship programs in the pre-Bologna degrees dealt mainly with helping the students find a suitable company to stay for a time interval outside the academic periods. No assessments were implemented to evaluate the acquired competences and no especial procedures were required since these internships were not included in the student academic curricula. The new requirements for company internships in emerging European Higher Education Area make it necessary to lay down new organizational frameworks and stablish clear and efficient assessment procedures. This paper describes the initiatives carried out within the Engineering Degrees of the Public University of Navarre. The Degree in Engineering in Industrial Technologies is shown as a good example of the program. Results achieved so far are very satisfactory for both the companies participating in the program and the students taking part in the internships.	requirement	Pablo Sanchis;Antonio Lopez-Martin;G. Perez-Artieda;E. Gubia;D. Astrain;Jesús López Taberna;Edurne Barrenechea Tartas;Alfredo Ursua;Ignacio R. Matías	2017	2017 IEEE Global Engineering Education Conference (EDUCON)	10.1109/EDUCON.2017.7942951	engineering management;internship;knowledge management;curriculum;engineering;higher education;competence (human resources)	SE	-77.43005263412194	-31.22827825177204	125278
eefc557022f2c4f0882bd119d3b51bc66ed0bdfe	work based learning combined with e-learning for acquisition of management competences		Partners in E-View project developed and piloted a European Virtual Campus aimed at learners in the work place which focused on enhancing their management skills and competences within a European context. The project began with a needs analysis followed by the creation of the Virtual Campus Framework. This framework utilized a customised open source delivery methodology and a workbased learning module based on the needs analysis aimed at training managers in European enterprises. The module with an emphasis on working within Europe was piloted with about one hundred employees in the UK, Poland, Portugal and Ireland involving four employers. Concrete outcomes from E-View included a Virtual Campus Framework for Work-based learning (WBL) with a sample undergraduate module, two rounds of pilot courses and an online handbook with a description of the experiences gained in creating and delivering this course in the Virtual Campus Framework for Work-based Learning. Webinars were delivered and recorded to illustrate the procedures.	3d modeling;biconnected component;experience;needs analysis;open-source software	Alfredo Vieira Soeiro	2013	iJAC		educational technology;simulation;knowledge management;management;pedagogy	Visualization	-77.65700333167841	-34.883644498563	125474
766226d7740a3d18a9b7e145f1df699491d866bf	attitudes toward computers: when do they predict computer use?	use;prediccion;comportement;information technology utilization attitudes behavior computer literacy control;bepress selected works;sistema informatico;information technology;computer system;technologie information;controle;utilizacion;computer literacy;utilisation;conducta;regresion multiple;control;systeme informatique;actitud;behavior;attitudes;tecnologia informacion;regression multiple;prediction;attitude;information technology utilization;check;multiple regression	Many people in the MIS ®eld have accepted the idea that attitudes affect the frequency and type of computer use but research has provided inconsistent results. This paper, therefore, explores the conditions under which attitudes can predict computer use, investigating both workers' volitional control and their knowledge of the technology. Analyses are based on responses of 168 white-collar employees in 77 computer-using work groups. Attitudes were found to predict the number of hours of computer use for all workers, but only predicted the extent of job computerization for those who had real freedom of choice and knowledge about their computer system. # 1998 Elsevier Science B.V. All rights reserved	computer;management information system	Susan J. Winter;Katherine M. Chudoba;Barbara A. Gutek	1998	Information & Management	10.1016/S0378-7206(98)00065-2	attitude;simulation;computer science;engineering;artificial intelligence;operations management;social psychology;information technology;statistics	HCI	-87.52066502223612	-26.36176148214569	125632
538dd2f6f8fafc1dccead8e09137bb159ae65b97	proven practices that can reduce stereotype threat in engineering education: a literature review	social sciences engineering education;standards;faculty development stereotype threat achievement gap testing classroom intervention race gender women underrepresented minorities lgbtq stem diversity;educational institutions engineering education standards psychology computer science context calculus;psychology;self evaluative threat stereotype threat engineering education social scientists;calculus;engineering education;computer science;context	"""""""Stereotype threat"""" is a term used by social scientists to describe the anxiety one feels when one fears that he or she will confirm a negative stereotype about his or her own group. This anxiety impairs performance and reduces motivation by introducing a self-evaluative threat. More than 300 studies have verified that people underperform when put in situations that cause stereotype threat. Documented consequences of stereotype threat include decreased performance; blaming failure on internal, rather than external, causes; and distancing oneself from a setting that generates stereotype threat (e.g. changing one's major from engineering or computer science). Given the plethora of research available on practices that increase or reduce stereotype threat, a set of recommended practices can now be used in engineering education to reduce stereotype threat and thereby increase the performance of potentially threatened groups. In this paper, we provide an easy to use and research supported list of best practices to reduce stereotype threat in engineering education."""	best practice;computer science;stereotype (uml)	Elizabeth A. Eschenbach;Mary Virnoche;Eileen M. Cashman;Susan M. Lord;Michelle Madsen Camacho	2014	2014 IEEE Frontiers in Education Conference (FIE) Proceedings	10.1109/FIE.2014.7044011	psychology;applied psychology;social psychology;pedagogy	SE	-85.5779312626509	-24.565887484980454	125755
c90958b1fe008ae8e79bc94866d7fa8afa645ffd	teaching c after miranda	first year;functional language	Read the letter below and then answer the questions that follow. [1] I am writing to inquire about obtaining emploiment this summer within your organization. [2] I am a 15-year-old student with 11 years of gymnastic experience. I strongly believe that I possess the ability to teach other students. [3] I spent seven years learning gymnastics at the Capitol City club. [4] This club is located in Annapolis, Maryland and is owned and operated by the world-renowned gymnast Sara Wells. [5] Over the years, I have become very skilled on the balance beam, the uneven bars, and my floor routine is outstanding. [6] I am very excited about teaching these skills that I have acquired through my own training. [7] For the last four years I have studied gymnastics with Miranda Towles at your club. [8] Miranda and me have worked hard these four years to improve my skills. [9] I have learned a lot about performing and teaching gymnastics. Miranda is an outstanding teacher. [10] Her example has taught me to work diligently to be the best that I can be. [11] Please consider I for a position at your club.	miranda;r.c. pro-am;sara (computer)	Andrew Davison	1995		10.1007/3-540-60675-0_37	computer science;linguistics;communication	Web+IR	-77.98039017032852	-30.41091584845117	125819
fbe11a692511ebf246adfe6054a0f06c255ca94b	experimenting with a computer-mediated collaborative interaction model to support engineering courses	tecnologia electronica telecomunicaciones;psicologia y educacion;didacticas aplicadas;web based learning;computer mediated collaborative interaction model;interaction model;tecnologias;grupo a;cscl	Abstract#R##N##R##N#Many of the engineering education lecture courses are taught only with the support of a board or transparencies. In both cases, the students have to copy the material passed in class, including additional annotations and comments. We performed a controlled experiment to measure the impact of the insertion of a computer mediated collaborative interaction model to support the teaching/learning process in such scenarios, using a Web-based computer application. Our experiment was done during two consecutive semesters of a First Year Programming Engineering course, with 447 enrolled students where 234 students were surveyed. In this paper, we describe the design and execution of the experiment, and show the obtained results. Based on our results, we conclude that there are advantages of using a collaborative interaction model supported by a collaborative software tool in an Engineering course such as the experimented. © 2004 Wiley Periodicals, Inc. Comput Appl Eng Educ 12: 175–188, 2004; Published online in Wiley InterScience (www.interscience.wiley.com); DOI 10.1002/cae.20012	experiment	David A. Fuller;Andres F. Moreno	2004	Comp. Applic. in Engineering Education	10.1002/cae.20012	simulation;human–computer interaction;computer science;engineering;electrical engineering;artificial intelligence;multimedia;world wide web;mechanical engineering	DB	-80.70434390853666	-37.00654341858161	125959
56b415a0c04b81a6e267fb11d5834ac19ec897cc	development of web-based engineering numerical software (wens) using matlab: applications to linear algebra	linear algebra;tecnologia electronica telecomunicaciones;eigenvalue problem;eigenvalue problems;numerical software;psicologia y educacion;matlab web server toolbox;distance learning;didacticas aplicadas;tecnologias;grupo a;web based education	In this article, we present Web-based Engineering Numerical Software (WENS) developed using MATLAB and its Web Server Toolbox (WST) in order to provide basic solution tools in linear algebra, including eigenvalue problems, which are extensively used in engineering applications and education. 2003 Wiley Periodicals, Inc. Comput Appl Eng Educ 11: 67 74, 2003; Published online in Wiley InterScience (www.interscience.wiley.com); DOI 10.1002/cae.10038	eng-tips forums;john d. wiley;linear algebra;list of numerical analysis software;matlab;web application;web server	Albert S. Kim;Chanho Park;Si-Hwan Park	2003	Comp. Applic. in Engineering Education	10.1002/cae.10038	distance education;computational science;computer science;theoretical computer science;linear algebra	SE	-86.92893851658104	-37.79183087072353	126239
0ae330bb4e32e5db64cfdf69e38e1728f3614786	portos: an educational operating system for the post-pc environment	mobile device;learning styles;student profiling;distributed computing;software engineering education;introductory programming;operating system;file system;peer to peer;diagnostic testing	In this paper, we describe PortOS, an educational operating system designed to complement undergraduate and graduate level classes on operating systems. PortOS is a complete user-level operating system project, with phases covering concurrency, synchronization, networking and file systems. It focuses particularly on ad hoc and peer-to-peer distributed computing on mobile devices. This paper discusses alternative approaches to operating system projects, and presents our particular design point along with pedagogical justifications.	concurrency (computer science);distributed computing;hoc (programming language);mobile device;operating system projects;peer-to-peer;post-pc era;synchronization (computer science);user space	Benjamin Atkin;Emin Gün Sirer	2002		10.1145/563340.563384	real-time computing;computer science;operating system;software engineering;mobile device;distributed computing;diagnostic test	OS	-84.91699085086263	-36.16519863136444	126319
85742f943fecbc329f64b3a05300a0ecd569dbb1	graduate education in human-computer interaction	human computer interaction;digital library;curricula;hci;teaching materials;teaching material;course outlines;degree programs;graduate education	PREVIOUS WORK Perhaps the best-known work on HCI education is the 1992 report of the SIGCHI Curriculum Development Group [1]. At the time of that report, few if any graduate programs were dedicated to the study of human-computer interaction; since that time, many programs have been developed. The HCI Bibliography lists over 60 programs (http://www.hcibib.org/education/#PROGRAMS) of which well over half are graduate programs.	hci bibliography;human–computer interaction;sigchi	James D. Foley;Michel Beaudouin-Lafon;Jonathan Grudin;James D. Hollan;Scott E. Hudson;Judy Olson;Bill Verplank	2005		10.1145/1056808.1057112	curriculum;digital library;human–computer interaction;computer science	HCI	-80.56809782719237	-34.56027481886052	126536
033e223bc42d02273334f815f18c6e2a0b2aa0b6	university curricula modification based on advancements in information and communication technologies		This paper discusses the main methods for modification of university curricula for graduate students based on advanced research results in information and communication technology (ICT), artificial intelligence, control, and decision making. Special attention is paid to classifications of the approaches and their evaluation. Examples from the Washkewicz College of Engineering at Cleveland State University, and Black Sea State University, show the efficacy of the authors’ proposals, approaches, and classification results.	artificial intelligence	Yuriy P. Kondratenko;Dan Simon;Igor P. Atamanyuk	2016			curriculum;systems engineering;engineering management;engineering;information and communications technology	AI	-80.05073152769518	-32.203489006269905	126641
f9865ac027804bdd48eaea711743665db12f8750	redesigning the assessment of an entrepreneurship course in an information technology degree program: embedding assessment for learning practices	alignment education;entrepreneurship;innovation management educational institutions information technology australia conferences;information technology;commerce;instructional design;learning assessment constructive alignment course design curriculum entrepreneurship higher education information technology it;educational change;computer science education;foreign countries;management education;task analysis;educational strategies;educational courses;curriculum design;change strategies;student evaluation;further education;program effectiveness;teaching;science course improvement projects	Entrepreneurship is a novel course in the curriculum for students in the Information Technology (IT) degree program at La Trobe University, Bundoora, Australia. In comparison to other IT-related courses, the Entrepreneurship course seeks to develop business management knowledge and skills; its learning design is thus different to that of other courses in the IT program. The concept of constructive alignment for curriculum renewal suggests that there are several components of good course design. In this paper, we use the principles of constructive alignment to analyze and redesign several components of the Entrepreneurship course. The focus is on reviewing and aligning the assessment tasks to ensure an effective evaluation and the achievement of student learning outcomes. Since assessment drives student learning, we describe the innovative assessment tasks that were implemented to enhance student learning, provide the rationale for the design of these tasks as supported by the current literature, and reflect on possible future improvements. The course redesign process and the constructive alignment and innovative assessment can be applied to other courses in the field, and more broadly to curriculum, teaching, and learning in higher education.	declarative programming;design rationale;experience;manifold alignment;peer-to-peer;sequence alignment	Eric Pardede;Judith Lyons	2012	IEEE Transactions on Education	10.1109/TE.2012.2199757	engineering management;further education;computer science;engineering;knowledge management;task analysis;instructional design;information technology		-80.49445119275828	-32.785566553895144	126658
2f752e2048da2c4550768e813f571412ca50dd60	designing, implementing, and analyzing a placement test for introductory cs courses	data collection;placement examination;design and implementation;education research;bloom s taxonomy;student learning	An introductory CS1 course presents problems for educators and students due to students' diverse background in programming knowledge and exposure. Students who enroll in CS1 also have different expectations and motivations. Prompted by the curricular guidelines for undergraduate programs in computer science released in 2001 by the ACM/IEEE, and driven by a departmental project to reinvent the undergraduate computer science and computer engineering curricula at the University of Nebraska-Lincoln, we are currently implementing a series of changes which will improve our introductory courses. One key component of our project is an online placement examination tied to the cognitive domain that assesses student knowledge and intellectual skills. Our placement test is also integrated into a comprehensive educational research design containing a pre- and post-test framework for assessing student learning. In this paper, we focus on the design and implementation of our placement exam and present an analysis of the data collected to date.	chao (sonic);chuck;computer engineering;computer science;entity–relationship model;fink;flynn's taxonomy;java;problem solving;pseudocode;test automation	Leen-Kiat Soh;Ashok Samal;Suzette Person;Gwen Nugent;Jeff Lang	2005		10.1145/1047344.1047504	simulation;computer science;software engineering;multimedia;data collection	AI	-80.66809424941965	-37.297022880735234	126824
418916ac2d5e542193c98a3d9a23ff240876c2df	implementing km/om: building and recognizing knowledge cultures and other issues	continents;memory management;knowledge management memory management continents force measurement learning systems area measurement particle measurements diversity methods manufacturing joining processes;particle measurements;knowledge management;learning systems;manufacturing;force measurement;joining processes;area measurement;diversity methods	This is the third mini-track of the Knowledge Management, Organizational Memory, and Organizational Learning cluster. The mini-track focuses on issues related to the implementation of Knowledge Management, Organizational Memory, and/or Organizational Learning systems or initiatives. Key issues looked at included the impact of culture, management support, creating a learning organization, and measuring the success and/or effectiveness of KM, OM, and/or OL systems or initiatives. Metrics and success measures were a particularly strong area for submissions and half the accepted papers are in this area. The mini-track reviewed 23 papers and accepted 12. The acceptance rate is not reflective of the quality of the submittals, but the result of constraints on how many papers could be presented. The profile of accepted papers reflects the breadth and diversity of methodologies and the research domain that this mini-track supports. An examination of topic areas of the accepted papers shows that the emphasis is on Knowledge Management, but that Organizational Memory and Organizational Learning are related topics of interest. Also, the submissions focused heavily on measuring the success and performance of KM, OM, and OL. Finally, from the standpoint of location, papers were submitted from 11 countries on 4 continents and accepted from 6 countries on 4 continents. The accepted papers are organized into four sessions of three papers each. The first session explores measuring KM, OM, and OL effectiveness. The second session focuses on metrics for KM, OM, and OL. The third session is concerned with the impact of culture on KM, OM, and OL initiatives. The fourth session explores KM, OM, OL implementation issues such as sustainability, who profits, and international alliances. Session 1: Zhang Li, Tian Yezhuang, and Qi Zhongying (Harbin Institute of Technology, Peoples’s Republic of China), discuss the impacts on organizational performance from the use of OM in a manufacturing enterprise. Martin Smitts and Aldo de Moor (Tilburg University, Netherlands) discuss KM effectiveness in a community of practice. Murray E. Jennex and Lorne Olfman (San Diego State University, Claremont Graduate University, United States) provide a framework for assessing KM effectiveness models. Session 2: Young-Gul Kim, Sung-Ho Yu, and MinYong Kim (Korea Advanced Institute of Science and Technology, Republic of Korea) explore linking KM drivers to KM performance. William Money and Arch Turner, George Washington University, United States) discuss metrics for assessing user acceptance of KM systems. Atreyi Kankanhalli and Bernard C.Y. Tan (National University of Singapore) review KM metrics. Session 3: Daniel T. Holt, Summer Bartczak, Stephen Clark, and Martin Trent (United States Air Force Institute of Technology) report on the development of an instrument to measure an organization’s readiness to implement KM. Jing Zhang and Sue R. Faerman (Clark University) explore issues related to creating a knowledge sharing culture through a case study on the building and implementation of the MACROS system. Pierre A. Balthazard and Robert A. Cooke (Arizona State University West, United States) look at the behaviorperformance continuum as a method for assessing an organization’s culture on KM success. Session 4: Lynne P. Cooper, Rebecca L. Nash, TuAnh T. Phan, and Teresa R. Bailey (Jet Propulsion Laboratory-NASA, United States) present a case study on using a KMS to support organizational learning. Dong-Gil Ko and Alan Dennis (Indiana University, United States) discuss who actually profits from KM. Eliot Rich and Peter Duchessi (University of Albany, United States) present a model that looks at the sustainability of KM programs. As always, we appreciate the efforts of all our colleagues who submitted papers, the 74 persons who faithfully served as referees for the submitted papers, and those who will attend the sessions. Without you we could not hold this mini-track. Through your efforts, we continue to see these interrelated research domains grow and flourish. Proceedings of the 37th Hawaii International Conference on System Sciences 2004	apache continuum;google summer of code;jing;knowledge management;learning organization;nash equilibrium;os-tan;participatory culture;tian yuan shu	Murray E. Jennex;Anne P. Massey;Francois Therin	2004	37th Annual Hawaii International Conference on System Sciences, 2004. Proceedings of the	10.1109/HICSS.2004.1265568	organizational learning;computer science;knowledge management;artificial intelligence;marketing;operations management;software engineering;database;manufacturing;management;operations research;world wide web;memory management		-79.67008579036107	-28.628248691403613	126916
de1e029147c407c3a9aa447eec95a1e9a0cc6f49	supporting undergraduate learning through the collaborative promotion of e-journals by library and academic departments	lb2300 higher education;z665 library science information science	The introduction of electronic journals into Higher Education institutions in the United Kingdom has been relatively well documented, in terms of their purchase, management and uptake. However, the impact on learning, other than trends in usage and some indications of students' and researchers' attitudes, has not been quantified. This paper evaluates a project designed with the primary aim of testing a hypothesis that learning can be enhanced by promoting the use of e-journals. It was run jointly by a member of the library staff and an academic within the Business School. A Research quotient was developed to measure a student's ability to carry out appropriate research to support their learning. Research quotients scores were analysed along with journal bibliographic citations in students' assignments. Analysis of the results indicated that effective collaboration between academic and library staff, the timely embedding of e-journal induction into the learning process and associating it with the assessment process, can significantly enhance the learning of students. It was also recognised that students need be encouraged to see beyond assignments and adopt an holistic approach to learning.		John Colvin;Judith Keene	2003	Inf. Res.		library science;cooperative learning;educational technology;social science;computer science;knowledge management;learning sciences;teaching method;sociology;active learning;learning development;world wide web;open learning;pedagogy	NLP	-77.58739443903806	-32.87497748953825	126938
c876c83f7c4c85c0cf436c156e1107757588adae	from the manager's perspective: classroom contributions to open-source projects	open source software educational institutions programming encyclopedias conferences;software development management computer science education educational courses public domain software;software engineering;public domain software;computer science education;educational courses;open source curriculum;software engineering h foss project open source curriculum open source software;encyclopedias;h foss project;programming;student contributions classroom contributions manager perspective computer science courses open source project development faculty oss projects;software development management;conferences;open source software;open source	For the past several years, students in computer-science courses have been assigned work on open-source project development. The literature is replete with examples. Yet an instructor desiring to incorporate OSS into a course often has difficulty finding a suitable project and developing a fruitful interaction with its personnel. This paper reports on a survey of managers of OSS projects on how they have interacted with classes and students, and on what faculty can do to work with them effectively. Our findings indicate that instructors need to seek out projects weeks or months in advance, and need to be personally involved in OSS development themselves, and that they need to give their students a good background in design and testing. As a help for instructors looking for a project, we describe several OSS projects that have benefited from student contributions.	computer science;fail-safe;iteration;open sound system;open-source software;patch (computing);tucker decomposition	Edward F. Gehringer	2011	2011 Frontiers in Education Conference (FIE)	10.1109/FIE.2011.6143028	programming;computer science;systems engineering;knowledge management;software engineering;management;public domain software;encyclopedia	SE	-82.67945228568168	-33.9218617749425	127366
12e2f6258853bbefd6552dd0f692585e019d7a4b	design and implementation of business process management curriculum: a case in dutch higher education		This paper describes a joint effort by two educational and scientific institutes, the HU University of Applied Sciences and Utrecht University, in designing a BPM course that not only transfers theoretical knowledge but lets students also experience real life BPM-systems and implementation issues. We also describe the implementation of the developed module with an indication of its success: it is now running for the fifth time, and although there continue to be points for improvement, over the years several scientific papers in the BPM domain resulted from the course, as well as a reasonable amount of students started their final thesis project in the BPM-domain.	beam propagation method;business informatics;business process;expect;experience;microsoft outlook for mac;organizing (structure);real life;schedule;scientific literature;simulation;software as a service	Pascal Ravesteyn;Johan Versendaal	2010		10.1007/978-3-642-15378-5_30	engineering management;systems engineering;engineering;management science	HPC	-80.65962559581737	-31.855022520194954	127763
534c55bbafd8d95d12bdbdd99ab1167640a67cbc	work in progress — peer-directed learning in a project based model	iron;iron educational institutions industries knowledge engineering engineering education physics;learning methods;engineering education;teaching further education;problem based learning;student learning;work in progress;metacognitive knowledge peer directed learning project based model iron range engineering undergraduate program problem based learning method self directed learning one on one faculty directed learning industry mentored learning high level learning opportunity;further education;student engagement;student engagement model eliciting activities peer teaching problem based learning;self directed learning;model eliciting activity;teaching;knowledge engineering	Iron Range Engineering is a new, unique, undergraduate program using problem-based learning. One guiding principle is student responsibility for learning. In order to facilitate learning, faculty and students alike have come up with several learning methods. Learning modes may include self-directed learning, peer-directed learning, one-on-one faculty-directed learning, or industry mentored learning. Peer-directed learning often manifests in the form of learning groups (a group of students learning similar competencies), led by either a faculty member or a student who has previously excelled in that competency and has taken an interest in pursuing advanced credit. Recently, Iron Range Engineering has begun to incorporate student written and student led model eliciting activities. These show promise for creating engagement, exposing misconceptions, and providing high-level learning opportunities for peer-students and peer-teachers. The initial results of these methods have been very positive. A high level of engagement and a high level of desire to complete self-directed learning have been observed from peer-teachers and students. Students getting the opportunity to lead these learning groups comment on a newfound interest and clarity in the subject matter. Both sides are able to gain metacognitive knowledge which will help them as a student, engineer, and in future academic careers.	high- and low-level;high-level programming language;subject matter expert turing test	Andrew McNally	2011	2011 Frontiers in Education Conference (FIE)	10.1109/FIE.2011.6143117	psychology;professional learning community;collaborative learning;cooperative learning;educational technology;team learning;simulation;adult education;blended learning;knowledge management;experiential learning;student engagement;learning sciences;teaching and learning center;teaching method;active learning;action learning;open learning;synchronous learning;pedagogy	AI	-78.9015024012814	-36.84153349343689	127820
f9418b46228ce597a1ff3c4d867b4364d13f30e0	integrating performance measurement and program evaluation to promote understanding	evaluators;program evaluation;evaluation methods;program improvement;performance indicators;performance measurement	In this extended abstract, we describe the trend in reporting performance assessments of publicly funded social programs as a result of public demands for accountability and its effect on evaluation. XSEDE's Training, Education, and Outreach Services (TEOS) external evaluation team outlines the differences between performance measurement and program evaluation, makes a case for their integration, and describes their effort to design and implement such an evaluation within XSEDE. Plans for integrating the developing performance measurement system and program evaluation within TEOS are discussed as well as initial steps toward integration to date.	system of measurement	Lorna Rivera;Lizanne DeStefano	2014		10.1145/2616498.2616577	systems engineering;engineering;knowledge management;management science	Metrics	-79.82831573440875	-28.604817865155596	129016
50e01275d2a21347313a308f6f8a1397ea24037a	inversion of technical and communication emphasis in an engineering product design class	technical writing;engineering design;first year;product design educational courses engineering education further education mechanical engineering;team project work technical writing student engineering practice massachusetts institute of technology experimental study group scientific writing and new media mechanical engineering product design esg 21w 732 curriculum design cycle humanistic aspects of engineering team based communication project based communication hands on communication communication instruction technical content learn;prototypes;mechanical engineering;project work;educational courses;engineering education;teamwork communication first year engineering exploration multidisciplinary project based learning;schedules;writing;cities and towns;multidisciplinary;product design;first year engineering exploration;communication;further education;new media;project based learning;teamwork;product design writing conferences cities and towns education prototypes schedules;conferences	In order to situate first year technical writing students in engineering practice, the Massachusetts Institute of Technology's Experimental Study Group (ESG) has piloted a section of a first year writing curriculum subject, 21W.732, Scientific Writing and New Media, in which the communication deliverables are based on mechanical engineering product design. The ESG section of the 21W.732 writing subject inverts the communication and technical emphases found in upper-level engineering design subjects: in the ESG 21W.732, the emphasis is on communication rather than product design. The ESG 21W.732 curriculum asks students to work together both individually and in teams to conceive, design, prototype, and evaluate products; the communication assignments are coupled directly to this design cycle or to the humanistic aspects of engineering. Results suggest that students are engaged in this novel subject and value the experience. This interdisciplinary, hands-on, project-based, team-based communication class offers students a number of benefits above and beyond situated communication instruction, including the opportunity for first year students to explore engineering as a major, to learn (some) technical content driven by the projects, and to engage in genuine team project work.	engineering design process;hands-on computing;new media;prototype;situated;space: above and beyond	Dave Custer	2011	2011 Frontiers in Education Conference (FIE)	10.1109/FIE.2011.6142979	technical writing;engineering management;further education;engineering education;teamwork;new media;technical communication;schedule;computer science;systems engineering;engineering;knowledge management;electrical engineering;artificial intelligence;software engineering;prototype;multidisciplinary approach;product design;management;writing;pedagogy;mechanical engineering	HCI	-78.54844649237985	-33.8622627270854	129222
4446966f2a17061ddded7a25c20ed0287839e9f3	an environment for cs integrating hypertext, program design and language facilities (abstract)	libraries;multimedia;program design;parallel programming;software engineering	Introductory computer science courses must provide a sound foundation for developing advanced programming skills as well as the more concrete skills necessary to implement programs: general problem solving skills, algorithm design, and an implementation language Software engineering and program design techniques should be learned from the outset. Maintaining a balance and perspective among these somewhat disparate skills is one of the principal challenges of these courses. This presentation demonstrates a suite of closely integrated tools designed to support a pedagogy focusing on the independent mastery of each of the skills necessary for programming. A student oriented CASE program, Design Tool, is closely integrated with the student’s Pascal programming environment. It is used to develop the students’ problem solving and software project management skills by providing a visual environment in which to design solutions. A hypertext serves to integrate concepts introduced in the classroom with the design and progr amming environment. Associated laboratory exercises are based on directly tmnsfernng designs and progpirns from the hypertext notebook to the programming enviromnent. Over the past two years we have used student questionnaires to assess student response to the tools and attitudes towards design and implementation concepts, as well as preand post-tests, and a standardized series of assignments and exams to evaluate student progress. “We have seen an nnprovement in modular design and an increased overall utilization of the laboratory. While less time is spent in implementation (attributed to early and better designs), more time is spent in exploring programming concepts.	algorithm design;computer science;design tool;hypertext;integrated development environment;modular design;object language;pascal;problem solving;software engineering;software project management	Wendy A. Lawrence-Fowler;Richard H. Fowler	1994		10.1145/191029.191216	human–computer interaction;computer science;software development;software engineering;program design language;programming language	PL	-82.15151051660435	-37.41331712198602	130350
0af1cb65603f6767a74702ce94e898a9446ab4f8	using the internet to teach the internet	first year;image processing;prolog;metrics;testing;complexity;style;computer graphic;computer vision;artificial intelligent;correctness;internet computing;parallel computer;automatic marking;design methodology	In recent years a methodology for Courseware design together with a number of Web based courses have been developed at Cardiff. A variety of disciplines have benefited notably C programming, X Window/Motif programming, Computer Vision, Image Processing, Computer Graphics, Artificial Intelligence and Parallel Computing. The range of provision of on-line support included access to lecture notes, exercises and their solutions to more interactive packages suited primarily for teaching and demonstration packages.This last academic year a totally new course, Internet Computing, was introduced as a first year undergraduate course at the University. This paper details the implementation of this new course within the courseware design methodologies already developed at Cardiff. In particular, it highlights some interactive features used to illustrate parts of the course and also how automated feedback and marking have been incorporated into the courseware.	artificial intelligence;computer graphics;computer vision;image processing;interactivity;internet;item unique identification;motif;online and offline;parallel computing;x window system	David Marshall	1998		10.1145/282991.283109	correctness;complexity;simulation;design methods;image processing;computer science;operating system;software engineering;multimedia;software testing;programming language;prolog;metrics	Graphics	-85.44881586237005	-37.63907801646103	130673
d4c5c141125e9b76b8a59e1dac97c65d2cd40374	engineering virtual studio online context and community for underclassmen engineers	materials communities educational institutions buildings training investment;underclassmen;computer aided instruction;further education computer aided instruction educational courses engineering education;integrative thought;engineering virtual studio course design evs integrative extracurricula integrative curricula stem undergraduate training underclassmen engineer;educational courses;engineering education;cyberlearning;identity;further education;underclassmen integrative thought identity cyberlearning	Myopia on foundations early in undergraduate work is pandemic throughout STEM undergraduate training. This “sink or swim” foundational approach begets attrition and reduced motivation, engagement, and performance for those rugged students who stay in the major. Current approaches to alleviating this myopia, including integrative curricula and extracurricula, provide some context and community, but require great faculty and staff effort, and often requires onerous changes to the base curriculum, while leaving students stranded segueing into the sophomore year. Here we introduce and report on an initial pilot of an online alternative. Our one-credit, pass/fail course, Engineering Virtual Studio (EVS), provides explicit connections between foundational courses and real-world products and problems. The course also fosters both scholarly and pre-professional identity building as constant processes. We report on the course design, work in progress in our pilot year, and opportunity for improvement.	attrition (website);rugged computer;sink or swim;virtual studio	Kurt A. Thoroughman;Alessandra A. Hruschka;Kathryn E. Ruzicka;Patricia L. Widder	2013	2013 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2013.6685104	simulation;engineering;pedagogy;mechanical engineering	Visualization	-79.04448988169251	-31.300198807046574	130784
9ff0122ddad47d2c03849a9101067b6f7a6c6d6d	towards a data archiving solution for learning analytics		Data solutions in the teaching and learning space are in need of pro-active innovations in data management, to ensure that systems for learning analytics can scale up to match the size of datasets now available. Here, we illustrate the scale at which a Learning Management System (LMS) accumulates data, and discuss the barriers to using this data for in-depth analyses. We illustrate the exponential growth of our LMS data to represent a single example dataset, and highlight the broader need for taking a pro-active approach to dimensional modelling in learning analytics, anticipating that common learning analytics questions will be computationally expensive, and that the most useful data structures for learning analytics will not necessarily follow those of the source dataset.	analysis of algorithms;archive;big data;data structure;management system;research data archiving;time complexity;velocity (software development)	Sarah Taylor;Pablo Munguia	2018		10.1145/3170358.3170415	data science;data retention;scale-up;data management;big data;learning management;data structure;computer science;dimensional modeling;learning analytics	ML	-90.06429731621024	-29.088907824088714	130803
c3b07c7b78bbfc2458bf6dbd5c87d11db3252734	lego robot programming exercise support for problem solving learning with game strategy planning tools	robot sensing systems;robot programming problem solving strategic planning educational institutions programming profession robot sensing systems concrete educational robots infrared sensors technology planning;c programming exercise;goalpost;program implementation;lego robot programming exercise support;college students;educational robots;strategic planning;technology planning;group programming exercise;computer science education;c language;group programming exercise lego robot programming exercise support problem solving learning game strategy planning tools c programming exercise algorithmic thinking program implementation game programming exercise robot kit lego mindstorms goalpost;visual representation;game programming;programming profession;game strategy planning tools;robot kit;game programming exercise;group work;student learning;problem solving learning;computer games;lego mindstorms;infrared sensors;algorithmic thinking;problem solving;robot programming;concrete;robot programming c language computer games computer science education	In an introduction to C programming exercise, it is important for college students to promote their interest and motivation. The goal of programming exercise is to obtain the skill for problem solving by algorithmic thinking and program implementation. A teacher must give them attractive and concrete subjects. Robot contest and group collaboration is one of the suitable styles for the purpose. We propose a game programming exercise using a simple robot kit LEGO Mindstorms. We are developing support environment GoalPost. In this paper, we introduce a framework of group programming exercise as a competition event with game-like problems for LEGO robot. Students learn to design their game strategy and realize it as an effective program. We discuss the four support levels of strategy design based on stepwise refinement. We offer support tools corresponding to visual representation product for each level. The aim of our research is to improve applicative ability and challenging activity of students through group works for the goal.	applicative programming language;autonomous robot;design tool;friendly artificial intelligence;game programming;java;lego mindstorms;problem solving;prototype;refinement (computing);robot kit;stepwise regression;top-down and bottom-up design	Hiroyuki Tominaga;Yohei Onishi;Toshihiro Hayashi;Toshinori Yamasaki	2007	2007 First IEEE International Workshop on Digital Game and Intelligent Toy Enhanced Learning (DIGITEL'07)	10.1109/DIGITEL.2007.32	simulation;strategic planning;concrete;computer science;artificial intelligence;multimedia;educational robotics;game programming	Robotics	-83.0415389014409	-37.05068541363398	131001
5e8961a2f7eee3f4d912e9d049ad18bedb3ae9b4	teaching introductory programming with popular board games	cs1 2;assignments;video game;introductory programming;computer science education;adaptation;games;background knowledge;assessment	Games assignments are increasingly popular in computer science education. This paper advocates and analyzes the inclusion of board, card, and dice games as programming assignments in introductory programming courses (CS1/2). The simple interface and strategy-based play of these types of games complement the immersive multimedia and agility-based play of video games. The implementation of board, card, and dice games typically demands less background knowledge from the instructor and offers fewer opportunities for extraneous work by the students. The paper lists 32 specific games that are suitable for teaching the major topics in CS1/2 and discusses the implementation of some of these games and their successful use as programming projects.	computer science	Peter Drake;Kelvin Sung	2011		10.1145/1953163.1953338	video game design;games;simulation;4x;turns, rounds and time-keeping systems in games;computer science;emergent gameplay;game mechanics;multimedia;educational assessment;pedagogy;adaptation	AI	-80.2696912297052	-37.022780134876086	131108
b4d9526d051e4243a52df45b7ae90131248deac7	research priorities for youtube and video-sharing technologies: a delphi study	video technology;research needs;selected works;educational research;delphi technique;computer assisted instruction;internet;web sites;bepress;questionnaires;expertise;feedback response	Online video-sharing services, particularly YouTube, have gained an audience of billions of users including educators and scholars. While the academic literature provides some evidence that YouTube has been studied and written about, little is known about priorities for YouTube research. The study employed the Delphi method to obtain a consensus from experts about areas that are most in need of research in video-sharing technology (particularly YouTube). An expert panel, identified from a comprehensive review of the literature, participated in a three-round Delphi process involving two cycles of online questionnaires and feedback reports. Participants responded to the question, ‘What should be the research priorities in video-sharing technologies (particularly YouTube) over the next 5 years?’ Seven research priority categories were identified and ranked in order of priority: (1) users, groups and communities; (2) teaching/learning; (3) social/ political impact; (4) video creation/production; (5) legal/ethical; (6) media management; and (7) commercial interests. Introduction Since its creation in 2005, YouTube (http://www.youtube.com) has grown to become a prominent online video-sharing destination. At the end of its first 5 years of service, YouTube was receiving more than 2 billion views per day (YouTube, 2010), users were uploading more than 35 hours of video per minute (Walk, 2010) and Alexa (2010) ranked it among the top five most highly visited websites. The millions of video clips on YouTube represent a broad spectrum of user interests including those of educators, scholars and researchers. YouTube EDU (http:// www.youtube.com/edu) illustrates a portion of the growing academic presence on YouTube as colleges and universities establish institutional channels through which they share videotaped lectures and campus events. YouTube has become a topic of discussion and inquiry within the scholarly literature as educators and researchers grapple with questions about the possibilities and problems associated with social media (Chenail, 2008; Snelson, 2009, 2010). Yet, while a body of ‘YouTube literature’ has begun to emerge, little is known about priorities for YouTube and video-sharing research. Given that the Delphi method (Linstone & Turoff, 1975) has been used previously to respond to similar questions, including the identification of research priorities in educational technology (Pollard & British Journal of Educational Technology Vol 43 No 1 2012 119–129 doi:10.1111/j.1467-8535.2010.01168.x © 2011 The Authors. British Journal of Educational Technology © 2011 BERA. Published by Blackwell Publishing, 9600 Garsington Road, Oxford OX4 2DQ, UK and 350 Main Street, Malden, MA 02148, USA. Pollard, 2004) and K-12 online education (Rice, 2009), it was selected as an appropriate methodology for the present study of priorities in video-sharing (YouTube) research. Methodology The study employed the Delphi technique to obtain a consensus from experts about areas that are most in need of research in video-sharing technology (particularly YouTube) over the next 5 years. The design of the study incorporated the key features of a classical Delphi (Rowe & Wright, 1999): 1. Anonymity of Delphi participants allowing free expression of ideas and opinions; 2. Iteration allowing participants to examine and/or modify their views based on the views of the expert group; 3. Controlled feedback informing participants of the other participant’s ideas and opinions; 4. Statistical analysis allowing for a quantitative analysis of data. The expert panel participated in a three-round Delphi process involving two cycles of online questionnaires and feedback reports. Procedural steps were as follows: Round 1 Participants responded to the question, ‘What should be the research priorities in video-sharing technologies (particularly YouTube) over the next 5 years?’ Round 1 statements were categorized according to research focus and used to develop the Round 2 instrument. Round 2 Participants rated the research statements and categories identified in Round 1 as to importance and ranked the major research categories in order of their perceived importance. Once returned, descriptive statistics for the group ratings were calculated. Round 3 Descriptive statistical information about how the group responded, as a whole, was provided. Participating experts were asked to review each item and ranking, consider the group response and then re-rate the items taking the information into account. The three-round Delphi process enabled the participants to generate their own opinions about necessary research areas, prioritize research focus categories and then to finalize their views based upon consideration of the entire group’s opinions. This process, engendering the dynamics of effective group interactions, enabled researchers to gain a consensus from a panel of expert participants in diverse geographical locations about video-sharing research priorities for the next 5 years. Delphi panel experts The process for identifying experts began with a comprehensive search of the literature to determine the leading researchers in this new field. A content analysis of 188 refereed articles and academic conference papers, with ‘YouTube’ in the title, revealed 315 international scholars of multiple disciplines who are actively investigating the myriad aspects of YouTube. Of those scholars, 35 had conducted empirical research studies and/or provided theoretical discussions. Each member of this sample of 35 scholars had multiple publications about YouTube and had been first author on at least one article or conference paper. This group of 35 researchers was invited to participate in a Delphi study to determine YouTube research priorities with 17 initially agreeing to take part in the study. Sixteen experts completed Round 1, 15 completed Round 2 and 14 completed Round 3. Table 1 presents the demographic characteristics of the Delphi panel experts who completed all three rounds of the study. 120 British Journal of Educational Technology Vol 43 No 1 2012 © 2011 The Authors. British Journal of Educational Technology © 2011 BERA. There is some question as to the optimal number of Delphi participants to include on an expert panel with suggestions of from 10 to 30 (Anderson & Kanuka, 2003) and from 10 to 15 (Delbecq, Van de Ven & Gustafson, 1975). ‘No optimal number of panel members is dictated in the literature; however, a key variable in the use of the Delphi is a sufficient number of representative experts in each field’ (Weatherman & Swans, 1974, p. 104). The group of 14 experts completing Round 3 of this Delphi study represents 40% of the most prolific researchers identified in the review of academic literature with ‘YouTube’ in the title. Findings For Round 1, participants responded to the question, ‘What should be the research priorities in video-sharing technologies (particularly YouTube) over the next 5 years?’ In all, 63 statements were generated by the group. These responses were consolidated and organized into seven research priority categories: users, groups and communities, teaching/learning, social/political impact, video creation/production, legal/ethical, media management and commercial interests (see Table 2). For Round 2, participants were asked to rate the 63 statements on a Likert-type scale as to the degree of importance (1 = No Importance, 5 = High Importance). Additionally, experts were asked to prioritize the seven research categories (1 = Highest Priority, 7 = Lowest Priority). The Round 3 Table 1: YouTube scholars demographic overview (Round 3 participants, n = 14) Demographic item n % Gender Male 8 57 Female 6 43 Education PhD 8 57 EdD 1 7 Masters 5 36 Current position held University professor 7 50 PhD students/postdoctoral 4 29 Other 3 21 Discipline area Education 3 21 Communications 2 14 Computer science 2 14 Media studies 2 14 Cultural studies 1 7 Health education 1 7 Family therapy 1 7 Forensics 1 7 Information science 1 7 Geographical location USA 9 64 China 2 14 South America 1 7 Europe 1 7 Canada 1 7 Note: Percentages are rounded and may not total 100% for some groups of demographic items. YouTube research priorities Delphi study 121 © 2011 The Authors. British Journal of Educational Technology © 2011 BERA. Ta bl e 2 : R es ea rc h pr io ri ty ca te go ri es ra nk ed by m ed ia n va lu e: R ou nd 3 C at eg or y St at em en ts ge ne ra te d P ri or it y ra nk in g, f (% ) M dn (I Q R )	blackwell (series);categorization;computer science;delphi method;embarcadero delphi;finalize (optical discs);geforce 9 series;grapple;gustafson's law;information science;interaction;iteration;lu decomposition;object pascal;problem solving;procedural programming;report;social media;upload;ven (currency);video clip	Chareen Snelson;Kerry Rice;Constance Wyzard	2012	BJET	10.1111/j.1467-8535.2010.01168.x	questionnaire;the internet;simulation;educational research;delphi method;computer science;multimedia;sociology;world wide web;statistics	HCI	-78.5081216108713	-24.69373198339032	131171
61b8857c08d6843d7cca00fca7cbc83a75483286	the university of durham bsc in software engineering and proposed meng in software engineering: a position paper	electrical capacitance tomography;computer society;industrial economics;computer industry;software engineering;law;legal factors;engineering management;computer science;proposals;software engineering computer science electrical capacitance tomography computer industry computer society proposals industrial economics law legal factors engineering management	In recent years, there has been a growing recognition of the importance of engineering principles to practising and applied Computer Scientists. The granting of Chartered Engineer status to professionally qualified members of the British Computer Society (BCS) has reinforced this position. The Computer Science BSc degree programme at the University of Durham has been accredited by the BCS for a number of years as is the more recent Software Engineering BSc degree programme. The first cohort of 16 students to complete this three year Software Engineering BSc programme graduated in July 1998, followed by 27 students in July 1999.	computer science;computer scientist;software engineering	Cornelia Boldyreff	2000		10.1109/CSEE.2000.827038	engineering management;engineering ethics;engineering;social software engineering;informatics engineering;civil engineering software;railway engineering;software engineering;requirements engineering;computer engineering;mechanical engineering	SE	-81.92599973660771	-30.576122459835155	131622
89446ac162902ebcb2f7afef889ee20cdee36bc0	computer-aided problem solving - part 1: objectives, approaches, opportunities		Among the different aims and scopes of Computer-Aided Innovation (CAI) systems a relevant topic is the support of inventive problem solving tasks. The paper presents the research activity developed by the authors in this domain, encompassing the review of the distinctive features of problems encountered by designers and the common approaches employed to overcome them. A further thread of the investigation carried out in this paper concerns the limitations of computer-based approaches exploiting acknowledged models for problem solving. Downstream of the performed analysis the authors highlight the requirements that a novel CAI application should fulfil, supporting the opportunities for building a dialogue-based system.	algorithm;downstream (software development);natural language;problem solving;requirement	Niccolò Becattini;Yuri Borgianni;Gaetano Cascini;Federico Rotini	2011		10.1007/978-3-642-22182-8_10	engineering;artificial intelligence;management science	AI	-85.14884635451732	-29.706410230464268	131785
a984e2b49e6a4f6fb3d06318c24c371bbf961169	in-service teachers learning of a new paradigm: a case study	oop paradigm;qualitative analysis;high school;pedagogical content knowledge;polymorphism;teacher learning	Due to a reform in the Israeli CS high school curricula, in-service teachers who studied and taught procedural programming are now required to cope with the new paradigm of OOP. In this paper we describe a case study in which we traced the difficulties of one in-service teacher as she taught the topic of inheritance and polymorphism for the first time. We noticed a growth in her knowledge in the laboratory problem-session, whereas in a similar pen-and-paper session no substantial knowledge growth took place. A qualitative analysis enabled us to discern how the combined factors of the teacher's experience, the presence of the computer, and students' expectations for workable solutions, pressured the teacher to seek to resolve difficulties through trial and error, which facilitated knowledge growth. We argue that all these factors have to be fulfilled in order for teacher learning to happen.	computer;experience;procedural programming;programming paradigm;sampling (signal processing)	Neomi Liberman;Yifat Ben-David Kolikant;Catriel Beeri	2009		10.1145/1584322.1584329	psychology;mathematics education;polymorphism;developmental psychology;computer science;knowledge management;qualitative research;programming language;social psychology;pedagogy	Web+IR	-79.02907090366675	-36.26981371202113	131852
4a11cbbba8dfd683dd769c60511699d478aefc3c	promoting the use of open government data: cases of training and engagement		Abstract In the last decade, governments around the world have created open government data (OGD) repositories to make government data more accessible and usable by the public, mostly motivated by values such as improved government transparency, citizen collaboration and participation, and spurring innovation. The basic assumption is that once data are more discoverable, accessible, available in alternative formats, and with licensing schemes that allow free re-use, diverse stakeholders will develop innovative data applications. Despite OGDu0027s potential transformative value, there is limited evidence for such transformation, particularly due to scarce data use, which is partly attributable to the lack of technical skills and user training. To advance the dialogue around methods to increase awareness of OGD, improve usersu0027 skills to work with OGD, and encourage data use, the paper compares and contrasts how three training interventions in Spain, Italy, and the United States have sought to increase awareness of OGD, improve usersu0027 skills and potentially engage them in their use of OGD. We report three main findings. First, introduction and analysis skills are taught in combination to encourage use of open data. Being aware of OGD and its benefits is insufficient to promote use. Second, OGD training seems to be more effective when complemented with knowledge about context and interactions with government. Finally, embedding the training interventions in the specific contexts and considering the unique characteristics, interests, and expectations of different types of users is critical to success.		Mila Gascó-Hernández;Erika G. Martin;Luigi Reggi;Sunyoung Pyo;Luis F. Luna-Reyes	2018	Government Information Quarterly	10.1016/j.giq.2018.01.003	open government;open data;public relations;usable;psychological intervention;transformative learning;government;economics	HCI	-80.44730204612944	-26.349377649014418	131920
16f14da05302cd4d620158fb840ac499ffc8e215	planning for the twenty-first century: the california state university	higher education;educational technology;distance education;computer networks	The San Jose State University School of Library and Information Science and the Office of the Chancellor in cooperation with industry partners designed and implemented a broadband network prototype to explore leveraging human and instructional resources among the 22 campuses of the California State University. With its current OC-3 capacity, the prototype network is capable of supporting near-broadcast quality two-way interactive video with simultaneous access to multi- and hypermedia resources across the network. Faculty and student collaborative work is facilitated by desktop video teleconferencing from faculty offices and student computer labs.		Stuart A. Sutton	1996	JASIS	10.1002/(SICI)1097-4571(199611)47:11%3C821::AID-ASI5%3E3.0.CO;2-4	library science;distance education;educational technology;social science;information science;computer science;media studies;prototype;sociology;higher education;management;operations research;law;information technology	NLP	-77.47268362997521	-33.20255703716575	132039
8a0ca7f71c1516b5e1a4d2ca3c91f943378e54f0	the candle scheme for creating an on-line computer science program - experiences and vision		Distance learning programs have rapidly increased during the past few decades. In fall 2000 the University of Joensuu started to offer distance Computer Science (CS) studies to the high school students in surrounding rural areas of Joensuu. In this program high school students study the first year’s university level CS studies over the web simultaneously with their regular high school studies. We describe the creation process of our virtual curriculum which is based the so-called Candle scheme. The Candle scheme search the most essential principles needed in online course design, supporting a student locally in her authentic learning needs via electronic tools in a light way. With the Candle scheme we have successfully focused in our design process on the most essential parts of the virtual study process. Our experiences of the Candle scheme in the creation process of the on-line CS program during years 2000–2002 indicate that the scheme is the functional one and expandable to other contexts as well.	care-of address;computer science;online and offline;online machine learning;scheme	Erkki Sutinen;Sirpa Torvinen	2003	Informatics in Education			HCI	-78.03178613486429	-36.7627915484562	132053
2b58e54b4f8c0941826ebbf7c3602104055ca2e9	one freshman studies program which improved student retention in the first year computer science sequence for majors	data dependency;first year;multiprocessor;statement parallelism dynamic detection;social system;pascal like program;parallel execution;student retention;problem solving;group interaction	At the University of Tennessee at Martin (UTM), freshman computer science majors were being successful in their first quarter in computer science, but many majors were not completing the year sequence (Programming Concepts and Problem Solving I, II, and III). This study describes a freshman studies program that helps increase student retention in the first computer science course. Two populations were used in this study. The first population (Group A) consisted of 25 freshman computer science majors (16 men and 9 women) enrolled Fall Quarter 85 in freshman orientation General Studies GS1000 for one quarter hour credit. The second population (Group B) consisted of 17 freshman computer science majors (12 men and 5 women) enrolled the Fall Quarter 86 in freshman orientation General Studies GS1001 for two quarter hours credit. Both groups were placed in the first course in computer science using the cutting scores ACT English > 17 or 0.78 (ACT English) + 0.49 (UTM Math Placement) > 33. Both Groups A and B had an average ACT English score of 20 and an average UTM Math Placement score of 55. Each quarter during the freshman year, the computer science major enrolls in calculus (4 hrs.), Programming Concepts and Problem Solving (3 hrs.), a laboratory science (4 hrs.), English (3 hrs.), and a humanities course (3 hrs.). Group A was offered a freshman orientation program that involved a pass/fail one quarter hour credit GS1000 which met one hour each day during freshman studies week. Each section consisted of twenty-five heterogeneously grouped students. The course content was review of study skills. Group B was offered a freshman orientation program that involved a pass/fail two quarter hour credit GS1001 which met one hour each day during freshman studies week, plus one hour each week during the first quarter. Each section consisted of only students of a particular major (computer science) and was taught by a faculty member of that department. The topics of this course consisted of a review of study skills, discussions of student problems, special academic speakers, field trips to professional sites, cultural events, meetings with deans and department heads, and a follow-up on study skills. In the meeting before the final exam week, the faculty member dealt specifically with suggestions on preparing for finals. Groups A and B were enrolled in the same first computer science sequence (Programming Concepts and Problem Solving I, II, and III) their freshman year. Both groups had the same instructors, text (Introduction to Computing and Computer Science with Pascal by H. Walker), and course syllabus for this sequence. Both groups carried the same academic course load their freshman year. However, in Group A only 20% (5 out of 25) of the students completed the first computer science sequence with a grade of C or better, while in Group B 41% (7 out of 17) completed the same sequence with a grade of C or better. Student retention is achieved through the students' integration into the academic and social systems of the college by two factors: (1) faculty-student interaction and (2) peer-group interaction. Although the population of this study was small, I believe GS1001 provides one way of increasing student retention in computer science.	amiga walker;computer programming;computer science;final exam;population;problem solving;social system	Emery Gathers	1988		10.1145/322609.323194	multiprocessing;simulation;computer science;artificial intelligence;operating system;software engineering;social system	Theory	-81.08759493108283	-34.89182718021398	132181
2f840d6b2333be0def5c4c149487015d6be7e3b3	object-oriented sokoban solver: a serious game project for ooad and ai education	games artificial intelligence educational institutions computer science materials australia;materials;conference paper;games;teaching application program interfaces computer aided instruction object oriented methods serious games computing;game projects object oriented sokoban solver serious game project ooad ai education serious games computer science areas teaching learning assistant educational materials educational game projects educational resources game development project educational materials documented system design object oriented analysis and design api;artificial intelligence;computer science;sokoban solver artificial intelligence ai object oriented analysis and design ooad serious game;australia	Serious games are beneficial for education in various computer science areas. Numerous works have reported the experiences of using games (not only playing but also development) in teaching and learning. Considering it could be difficult for teachers/students to prepare/develop a game from scratch during one semester, assistant educational materials would be crucial in the corresponding courses. Unfortunately, the literature shows that not many materials from educational game projects are shared. To help different educators identify suitable courseware and help students implement game development, it is worth further investigating and accumulating the educational resources from individual game projects. Following such an idea, this paper proposes a game development project of an object-oriented Sokoban solver, and exposes relevant educational materials. The documented system design can be viewed as a ready-to-use resource for education in object-oriented analysis and design (OOAD), while the Sokoban solver itself may be used as an assignment platform for teaching artificial intelligence (AI). Further documentation, platform, and APIs will be realized and shared in the future to facilitate others' educational activities. Overall, this work is supposed to inspire and encourage other researchers and educators to post available materials of more game projects for the purpose of sharing and reuse.	application programming interface;artificial intelligence;computer science;documentation;semiconductor industry;sokoban;solver;systems design;video game development	Zheng Li;Liam O'Brien;Shayne Flint;Ramesh Sankaranarayana	2014	2014 IEEE Frontiers in Education Conference (FIE) Proceedings	10.1109/FIE.2014.7044115	game design;game development tool;games;simulation;human–computer interaction;computer science;engineering;artificial intelligence;game mechanics;software engineering;game developer;multimedia;game design document;world wide web;game programming;pedagogy;mechanical engineering	AI	-82.63563081833264	-36.6229219524149	132190
c17daaebc87c673d0312f220849c03d4b18931bc	motivating and preparing first-year students in computer and engineering science	first year student;computers educational institutions mathematics history programming profession;course modules first year students computer science engineering science universities united states western european countries sweden introductory course first year engineering students master of science program 10 week course;retention;retention engineering education computer science education motivation preparation first year student freshman education;freshman education;further education computer science education educational courses engineering education;preparation;computer science education;educational courses;engineering education;motivation;further education	During recent years the interest in Engineering Studies has declined at universities both in the United States and in many Western European countries including Sweden. In addition, among those students that do enroll, an increasing number drop-out. This paper presents an attempt to mitigate these worrying problems in the form of a new kind of introductory course for first-year engineering students studying on a 5-year long Master of Science program in Computer Science and Engineering. The course is novel in that it takes a holistic approach to motivate and prepare students for their further studies. Core subjects and useful tools are mixed together into an intense 10-week course with 12 separate course modules on different topics, often running in parallel. The course has a total of 21 individual examinations to take, tasks to carry out, and deadlines to meet. The examinations and tasks are chosen among those common in our School of Engineering. Evaluations show that, although demanding for the students, the course works well and fulfills its goals.	computer engineering;computer science;holism;software engineering	Håkan Jonsson	2013	2013 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2013.6684997	mathematics education;science education;engineering;academic standards;engineering physics;pedagogy	DB	-79.4341815367615	-32.38572511128271	132214
5b33f21e9b68f8a16debbd2bc22080feb28c58c3	'diy' research data management training kit for librarians		This paper discusses extended professional development training in research data management for librarians piloted at the University of Edinburgh. This is framed by the evolving research data management Roadmap at the University, national and international initiatives in managing research data by bodies such as Jisc and LIBER, and the subsequent need to ‘up skill’ information professionals in the emerging area of academic research data management. This knowledge-transfer exercise includes independent study based on the research data MANTRA course and reflective writing, face to face sessions with different speakers giving short presentations followed by discussion, and group exercises. The resultant training ‘kit’ was released in Spring 2013 with an open licence for other institutions, particularly those without local research data management expertise, to utilise for ‘DIY’ RDM training.	librarian;open content;resultant	Stuart Macdonald;Robin Rice	2013			professional development;independent study;engineering management;rdm;data management;engineering;knowledge management;reflective writing	DB	-78.46722160757857	-32.17350710640455	132257
4729ff2eadf9c4b0f5374db6bba41ded944e218e	a guide to teaching data science		Demand for data science education is surging and traditional courses offered by statistics departments are not meeting the needs of those seeking training. This has led to a number of opinion pieces advocating for an update to the Statistics curriculum. The unifying recommendation is computing should play a more prominent role. We strongly agree with this recommendation, but advocate the main priority is to bring applications to the forefront as proposed by Nolan and Speed (1999). We also argue that the individuals tasked with developing data science courses should not only have statistical training, but also have experience analyzing data with the main objective of solving real-world problems. Here, we share a set of general principles and offer a detailed guide derived from our successful experience developing and teaching a graduate-level, introductory data science course centered entirely on case studies. We argue for the importance of ​statistical thinking ​, as defined by Wild and Pfannkuck (1999) and describe how our approach teaches students three key skills needed to succeed in data science, which we refer to as ​creating ​, ​connecting ​, and ​computing ​. This guide can also be used for statisticians wanting to gain more practical knowledge about data science before embarking on teaching an introductory course.	data science;microsoft forefront	Stephanie C. Hicks;Rafael A. Irizarry	2016	CoRR		computer science;knowledge management;data science;management science	ML	-78.57944436900446	-28.08475943313098	132703
e33b683c6ff31cd2dc06d5e78833f62fcabd07b4	developing computational thinking via the visual programming tool: lego education wedo	computational thinking;collaborative learning;introductory programming;natural sciences;visual programming tool	This study seeks to extend the existing research on the use of visual programming tools to work and develop computational thinking. We show the primary education students' perceptions of the use of the software Lego Education WeDo in the subject of natural sciences to promote the computational thinking. We tried to test the following hypotheses: Students will learn to build and program 3D models with Lego Education WeDo (H1), students will think creatively to solve the problems (H2), Lego Education WeDo will help pupils to know the relationship between cause and effect (H3), and the tasks developed will allow pupils to reflect about the possibilities they have and to find the correct answer (H4). Based on the result analysis there were evidences of the effectiveness of the project to increase the participants' awareness of the computational thinking. The research also concluded that according to learners' perception, the way in which activities were designed provided them possibilities to learn to build models in 3D and program them. Moreover, the findings of the study also demonstrated that the success of the project also depended on the teacher's role as a guide in the teaching-learning process.	computational thinking;programming tool;visual programming language	Ana M Pinto-Llorente;Sonia Casillas Mart&#237;n;Marcos Cabezas Gonz&#225;lez;Francisco Jos&#233; Garc&#237;a-Pe&#241;alvo	2016		10.1145/3012430.3012495	mathematics education;simulation;computer science;pedagogy	HCI	-79.88993545616032	-37.34635967543884	132722
3b04d604795ee30ae5a4d4f14d22f71d44590576	a plan to improve learning of requirements elicitation in an is curriculum	is curriculum;requirements elicitation;systems development	In this paper, we present our plan to integrate requirements elicitation concepts and learning assessments into an Information System curriculum. Both contemporary research and practitioners have noted deficiencies in the abilities of entry-level IT consultants to effectively evaluate new information system needs in business environments. Thus, the ability to professionally and effectively elicit new IS requirements adds significant value to students seeking an IS degree.	information system;requirement;requirements elicitation	Jeremy D. Ezell;Diane Lending;S. E. Kruck;Thomas W. Dillon;Jeffrey L. May	2016		10.1145/2890602.2890621	requirements management;systems engineering;engineering;knowledge management;requirements elicitation;management science	Robotics	-82.10110491014218	-31.81058850838637	132930
15831bc594dd9f8e4328e7e25cc3c98001a229cf	using an active learning environment to increase students' engagement	education videos multimedia communication streaming media computers creativity software engineering;teaching computer science education educational courses further education software engineering;teaching active learning environment undergraduate software engineering course problem based learning pbl;multimedia creation active learning problem based learning learning by teaching	In this paper, we describe a learning environment that is being used to engage and empower students' learning in a undergraduate software engineering course. The methodology is a joint of Problem Based Learning (PBL) with Learning by Teaching idea - someone can learn better if he has to teach someone else the same concept. In addition, the students must produce videos and questionnaires present their studies. In the last year and a half, the environment is been used and tested in different classrooms of the same discipline. Finally, we compare the performance of students in this period with the two years before the introduction of the methodology.	continuation;gamification;software engineering;video	Sérgio Antônio Andrade de Freitas;Wander C. M. P. Silva;George Marsicano	2016	2016 IEEE 29th International Conference on Software Engineering Education and Training (CSEET)	10.1109/CSEET.2016.24	cooperative learning;educational technology;simulation;computer science;experiential learning;learning sciences;teaching and learning center;teaching method;multimedia;active learning;open learning;synchronous learning	SE	-78.64545551804453	-37.37691499337286	133536
aa398df5e9f5c7b2b0d41f26ef12c93d8f6bb2cb	cognitive apprenticeship-based object-oriented software engineering education support environment	skills acquisition;collaborative work;information science;computer aided instruction;object oriented programming;learning environment;inspection;software engineering;software engineering programming object oriented modeling collaborative work feedback inspection information science education proposals guidelines;computer science education;feedback;guidelines;object oriented software engineering education support environment;educational courses;software development;object oriented software engineering;cognitive apprenticeship;object oriented software development;project based exercises;proposals;software engineering computer science education computer aided instruction object oriented programming educational courses;programming;object oriented modeling;learning environment cognitive apprenticeship object oriented software engineering education support environment collaborative work project based exercises skills acquisition object oriented software development;object oriented paradigm	Software development is knowledge-intensive as well as collaborative work carried out by several persons. In this type of education, project-based exercises are conducted in order to acquire skills. Object-oriented software development has recently emerged as the primary branch of learning. However, it is difficult for novice students to develop software using the object-oriented paradigm. This paper proposes a method of education and a learning environment for object-oriented software engineering based on the cognitive apprenticeship model.	programming paradigm;software development;software engineering	Atsuo Hazeyama;Yoshihide Ohgame;Masato Miura	2005	Fifth IEEE International Conference on Advanced Learning Technologies (ICALT'05)	10.1109/ICALT.2005.83	programming;personal software process;software engineering process group;object-oriented software engineering;inspection;crowdsourcing software development;information science;computer science;knowledge management;social software engineering;software development;feedback;software walkthrough;object-oriented programming;management;software development process;software peer review	SE	-83.93264136326724	-35.231256807366776	133573
9fd8bcb9020705c07e9ea6ea7860100f25502146	reviewing the curriculum of software engineering undergraduate courses to incorporate communication and interpersonal skills teaching	software engineering;extreme programming;computer science education;professional communication software engineering educational courses teaching programming computer science education;extreme programming software development projects interpersonal skills teaching communication skills teaching software engineering undergraduate courses curriculum sociological problems university professional skills teaching;educational courses;software development;software engineering business communication programming profession computer science humans employment teamwork computer science education information systems australia;professional skills;programming;professional communication;teaching	The major problems of software development projects are not so much technical as sociological in nature. The industry seems to agree very much with this statement while the university seems to give it little importance. The article begins analyzing some related work and proposes changes in software engineering undergraduate courses to accommodate new ways of teaching and to incorporate professional skills teaching. It also describes a course on extreme programming where some techniques will be used and evaluated.	extreme programming;software development;software engineering	Vinícius Manhães Teles;Carlo Emmanoel Tolla de Oliveira	2003		10.1109/CSEE.2003.1191373	engineering management;personal software process;software engineering process group;computer science;social software engineering;software engineering;software engineering professionalism;software walkthrough;pedagogy	SE	-83.1432669649445	-33.534068192680415	133665
dcc90e0a059a9ab66036d99fb6afe1ea61a3f802	exploring students' experiences in using a physical laboratory for computer networks and data security	students experiences;qualitative study;engineering education;computer networks security;data security	Data and computer network security issues have become increasingly important in professional engineering practice, requiring educated engineers capable to solve the real security problems. This strongly emphasize the importance of including courses dedicated to data and computer network security in information technology curricula, and providing real first-hands experiences with physical equipment to students. This article presents a qualitative study aimed at exploring students’ experiences in a physical laboratory for computer network and data security. Identified experiences were organized into a conceptual framework, providing a base for improvement of learning materials and the laboratory. Benefits and implications for students, lecturers, and researchers are also discussed. 2017 Wiley Periodicals, Inc. Comput Appl Eng Educ 25:290–303, 2017; View this article online at wileyonlinelibrary.com/journal/cae; DOI 10.1002/cae.21797	data security;experience;john d. wiley;network security policy	Zeljko Stojanov;Dalibor Dobrilovic;Tamara Zoric	2017	Comp. Applic. in Engineering Education	10.1002/cae.21797	engineering education;human–computer interaction;computer science;engineering;qualitative research;electrical engineering;software engineering;data security;computer engineering	HCI	-82.04775041726627	-29.187542652495022	133758
5b8cceaaf5cb4ec471ba6dc3051380ad39a10498	experiences of prospective high school teachers using a programming teaching tool	teachers;java programming;teaching tool;data collection;simulator;information and communication technology;high school;simulation analysis;high school student;programming;teaching;java	During their time at school few high school students are exposed to basic computing concepts as Computer Science (CS) is not considered to be an important part of the curriculum. As a result many high school students do not encounter programming during their studies. In the UK, despite newly qualified CS and ICT (Information and Communication Technology) teachers having specific subject knowledge, in recent years schools have steadily 'watered down' the content of CS courses and have aligned the subject with disciplines such as Business Studies. This has distanced Computing from the other sciences whilst adding to students' confusion about what the subject actually entails. This paper presents the results of a study which involved 23 trainee CS/ICT teachers. The study took the form of a day-long workshop session and had the objectives of determining what perceptions and opinions the trainee teachers held in regards to programming as well as to discover the effectiveness and potential of a programming teaching tool based on the concept of a robot simulator. Analysis of data collected during the session shows how, despite the majority of trainees having some programming experience, a number of trainees had difficulty completing basic programming challenges. This displays how some CS/ICT teachers may lack fundamental programming knowledge. Moreover, whilst most of the trainees felt programming should be taught to high school students studying a CS or ICT course, fewer than half of the trainees said they had the confidence to teach the subject. An evaluation of the effectiveness of the robot simulator as a teaching tool is also presented as is a discussion on the implications which these findings may have.	basic programming;cs games;competitive programming;computer science;electronic circuit simulation;prospective search;robot;while	Louis Major;Theocharis Kyriacou;Pearl Brereton	2011		10.1145/2094131.2094161	simulation;computer science;multimedia;pedagogy	HCI	-80.12625206202954	-36.919638495991926	134090
c2fa2b233c4eb732ddc44ed941b7637cca300299	sigplan programming language curriculum workshop: discussion summaries and recommendations	programming language	A college education has two goals. First, to produce intellectually mature, sophisticated leaders who can think deeply and productively in a range of fields and contexts. Second, to provide students with skills that they can apply successfully throughout a long career in their chosen profession or professions. Programming language concepts and ways of thinking can be a critically important part of the successful education of virtually any college student, regardless of discipline. For computer scientists these concepts and ways of thinking are indispensible.	computer scientist;intellect;programming language	Eric Allen;Mark W. Bailey;Rastislav Bodík;Kim B. Bruce;Kathleen Fisher;Stephen N. Freund;Robert Harper;Chandra Krintz;Shriram Krishnamurthi;James R. Larus;Doug Lea;Gary T. Leavens;Lori L. Pollock;Stuart Reges;Martin C. Rinard;Mark A. Sheldon;Franklyn A. Turbak;Mitchell Wand	2008	SIGPLAN Notices	10.1145/1480828.1480831	natural language processing;computer science;programming language theory;programming language	HCI	-80.16166046437725	-35.19649550086437	134133
13e8f91adec308334025d55f37d8e4ddca21588d	understanding engineering transfer students: demographic characteristics and educational outcomes	databases;engineering;transfer students;electric shock;part time students engineering transfer student demographic characteristics educational outcomes longitudinal data under represented minority group black transferee;persistence;higher education;stem;educational institutions engineering students sociology statistics electric shock databases switches;engineering education;statistics;engineering students;prejudicial factors;switches;student retention;prejudicial factors engineering education;higher education engineering transfer students persistence student retention stem;sociology	Transfer students make up a significant share of engineering college graduates, yet their persistence is seldom studied, largely because of the lack of longitudinal data. This analysis used longitudinal data from 11 universities enrolling large numbers of engineering students to investigate the demographic characteristics and educational outcomes of transfer students in engineering relative to non-transfers. We find that students who transfer to four-year engineering programs are more likely to come from under-represented minority groups (URMs) and less likely to be women, although both groups are over-represented at two-year colleges. The findings confirm existing research indicating that, on average, non-transfers outperform transfer students, and non-URMs outperform URMs. But we also find that URM transfers, and especially Black transfers, are no less successful than nontransfer students - indicating that the transfer pathway is an effective bridge to a four-year degree. This is partly true for women transfers who do as well as men but are outperformed by women non-transfers. Finally, we find significant variation in outcomes between full- and part-time students, which may be driving the observed differences by transfer status. Our results should inform debates regarding the efficacy of the transfer pathway in engineering, particularly for women and URMs.	gene regulatory network;persistence (computer science)	Margaret D. Sullivan;Clemencia Cosentino de Cohen;Michael J. Barna;Marisa K. Orr;Russell A. Long;Matthew W. Ohland	2012	2012 Frontiers in Education Conference Proceedings	10.1109/FIE.2012.6462442	mathematics education;engineering;pedagogy;mechanical engineering	HCI	-78.80361095471892	-34.92891184629024	134317
e97fd4580f3c4f00833ced0257d278db7620f68d	acm model high school computer science curriculum (abstract)	computer science curriculum;high school	A task force of the Pre-College Committee of the Education Board of the ACM has been working on a proposal for a high school course in computer science since 1989. Three drafts have been distributed to reviewem throughout the country and the world. The task force identified seven areas to be included in such a course. The seven areas are: Algorithms Programming Languages Operating Systems and User Support Computer Architecture Social, Etilcal, and Professional Context Computer Applications Advanced Applications A list of topics is given for each area. These are divided into those essential for all coutxes, those recommended for inclusion but not essential, and optional topics. In addition, the task force recognized a spectrum of delivery methods, ranging from a concentration on applications to a concentration on intensive programming. The models include Applications based Breadth approach using applications and programming modules Breadth approach intenveaving applications, computer science topics, and programming Project development approach using a programming language Apprenticeship model Advanced placement (AP) computer science. Course descriptions and syllabi are included as appendices to the report. From the comments received from reviewers and those expressed at previous panels and workshops, the need for such a course seems clear. High school teachers in particular welcomed thk effort. However, the task force recognizes the barriers that may hinder the implementation of such a course and continues to work on solutions.	ap computer science;apl;algorithm;computer architecture;programming language	Susan M. Merritt;Charles J. Bruen;J. Philip East;Darlene Grantham;Charles Rice;Viera K. Proulx;Gerry Segal;Carol E. Wolf	1993		10.1145/169070.169545	computer science;comprehensive school mathematics program	PL	-80.71380392514234	-33.706600442394354	134503
5ef629453046599678672d45fdb26faeffdbb670	dynamic simulation of a national resource sharing computer network	simulation game;decision maker;computer network;resource sharing;dynamic simulation;technical report;simulation model	"""A national computer network for research and educational institutions has frequently been proposed as a means for meeting selected computing needs in an effective manner. Although many technical problems remain, it is generally believed that the most difficult issues facing such a network revolve around economic, political, and organizational considerations. In order to investigate these issues, a model of a computer network was developed to test a variety of networking alternatives, and to evaluate the ways in which a network would impact its member institutions.This paper describes the use of the simulation model in a three day gaming exercise by sixteen institutional teams who made decisions about their likely participation in a network that """"progressed"""" through several years of simulated time. Participants were able to interact dynamically with the decisions and actions of other participants, to deal with a variety of network issues, and to explore the relative advantages and disadvantages of various modes and levels of network participation.This project represented an unusual and different application of a simulation game in that it concentrated on the policy and behavioral aspects (i.e., people concerns) of what is usually considered to be a technical design problem. The players were real decision makers, playing themselves as they relate to their own institutions, rather than students. Consequently, it was possible to focus on learning about the implications of national networking, rather than merely demonstrate or teach known principles."""	dynamic simulation;experience;requirement	Ronald Segal;Beverly O'Neal	1978		10.1145/1102802.1102809	organizational network analysis;shared resource;decision-making;dynamic simulation;simulation;computer science;knowledge management;technical report;simulation modeling;management science;computer network	Networks	-89.8224661418178	-23.98923342554969	135217
d780d28191224f3ceb546d8280a6a1efc374d636	stem education - students touch space through free robotics programming competition		This position paper discusses the use of the Zero Robotics Summer Program competition as a tool to teach programing to students in middle school (ages 11-14). The benefits of teaching programing at that age are discussed, including grasping the student attention early on and providing a useful skill. Zero Robotics is a free programming competition where students program microsatellites to compete with other studentprogrammed satellites in a virtual game using an online simulation. The finalists see their code compete on the SPHERES satellites aboard the International Space Station, during a final competition transmitted live. The game and curriculum teaches students physics, mathematics, and programming concepts. This position paper argues that it is possible to engage students in programing by providing the right incentive (space) through a competitive environment where teachers have a curriculum to back them up, without becoming a standard classroom exercise.	communications satellite;competitive programming;heavy bullets;mind;robotics;web-based simulation;zero	Jenny Liu;Wendy Feenstra;Alvar Saenz-Otero;Kathleen Magrane	2014		10.5220/0004944802700274	psychology;mathematics education;simulation;computer science;artificial intelligence;software engineering;multimedia;management;pedagogy	HCI	-79.90022472649568	-33.60342963258939	135471
4c44cdc563a3098bd73e1636df98eaef8be15ec1	evaluating recommender systems for technology enhanced learning: a quantitative survey	k 3 1 computer uses in education;market research;k 3 1 d distance learning;technology enhanced learning;k 3 1 d distance learning recommender systems evaluation survey technology enhanced learning k computing milieux k 3 computers and education k 3 1 computer uses in education;recommender system evaluation tel recommender systems quantitative survey technology enhanced learning;recommender systems market research life testing prediction algorithms;prediction algorithms;recommender systems computer aided instruction;life testing;k computing milieux;evaluation;k 3 computers and education;survey;recommender systems	The increasing number of publications on recommender systems for Technology Enhanced Learning (TEL) evidence a growing interest in their development and deployment. In order to support learning, recommender systems for TEL need to consider specific requirements, which differ from the requirements for recommender systems in other domains like e-commerce. Consequently, these particular requirements motivate the incorporation of specific goals and methods in the evaluation process for TEL recommender systems. In this article, the diverse evaluation methods that have been applied to evaluate TEL recommender systems are investigated. A total of 235 articles are selected from major conferences, workshops, journals, and books where relevant work have been published between 2000 and 2014. These articles are quantitatively analysed and classified according to the following criteria: type of evaluation methodology, subject of evaluation, and effects measured by the evaluation. Results from the survey suggest that there is a growing awareness in the research community of the necessity for more elaborate evaluations. At the same time, there is still substantial potential for further improvements. This survey highlights trends and discusses strengths and shortcomings of the evaluation of TEL recommender systems thus far, thereby aiming to stimulate researchers to contemplate novel evaluation approaches.	book;e-commerce;recommender system;requirement;software deployment;the european library;trusted computer system evaluation criteria	Mojisola Erdt;Alejandro Fernandez;Christoph Rensing	2015	IEEE Transactions on Learning Technologies	10.1109/TLT.2015.2438867	market research;simulation;prediction;human–computer interaction;computer science;knowledge management;artificial intelligence;evaluation;data mining;multimedia;world wide web;statistics	Web+IR	-86.73533243087589	-33.77379899216928	135657
77cf04ea9326d1c7456114ff79dd43c810c4f75b	the librarian leading the machine: a reassessment of library instruction methods	library research;instructional design;information literacy;educational change;library role;intermode differences;experimental groups;online courses;student surveys;instructional effectiveness;blended instruction;hybrid instruction;academic libraries;article;online instruction;information literacy instruction;teaching methods;control groups;library instruction	Katie Greer and Amanda Nichols Hess are Assistant Professors and Elizabeth W. Kraemer is Associate Professor in Kresge Library at Oakland University; e-mail: greer@oakland.edu, nichols@oakland.edu, kraemer@oakland.edu. © 2016 Katie Greer, Amanda Nichols Hess, and Elizabeth W. Kraemer, AttributionNonCommercial (http://creativecommons.org/licenses/by-nc/3.0/) CC BY-NC. This article builds on the 2007 College and Research Libraries article, “The Librarian, the Machine, or a Little of Both.” Since that time, Oakland University Libraries implemented changes to its instruction program that reflect larger trends in teaching and assessment throughout the profession; following these revisions, librarians undertook a new study to assess the effectiveness of online library instruction in face-to-face courses in comparison to the hybrid model that had been in place. The study’s design and its results serve to contribute to discussion of best practices in information literacy pedagogy, online learning, instructional design, and the role of the librarian therein.		Katie Greer;Amanda Nichols Hess;Elizabeth W. Kraemer	2016	C&RL	10.5860/crl.77.3.286	library science;computer science;information literacy;teaching method;instructional design;multimedia;pedagogy	HPC	-77.62843638211345	-32.83542796822131	135800
818147326c9fb8a479b9fe97171505cfd0b18693	evaluating the role of face-to-face residencies in cross-national, accessible cyberlearning	instruments;computer aided instruction;residencies;training;educational institutions communities public policy best practices iterative methods training instruments;residencies cyberlearning accessibility asean cross national learning;iterative methods;accessibility;best practices;cyberlearning;asean;public policy;online masters program face to face residencies cross national cyber learning accessible cyber learning graduate degree programs international disability policy comparative disability policy;communities;further education;cross national learning;interactive programming;interactive programming computer aided instruction further education	This paper provides an analysis of the role face-to-face residencies play in online, cross-national, graduate degree programs. In 2011, taking a cyber learning approach, the IDPP developed the world's first fully online masters program in international and comparative disability policy, focused on students with disabilities in the ten countries of Southeast Asia. Using this online masters program as a case study, and incorporating pre-and post-residency survey data, the paper explores the impact of its face-to-face residency in building a sense of community, achieving learning outcomes, and highlight the role of culture and trust within the student cohort as a foundation for the online graduate learning experience. Finally, the paper discusses best practices in evaluating online graduate degree programs, emphasizing the importance of an evaluation committee and an iterative evaluation model. Using pioneering research on evaluating accessible cyber learning, it identifies what works in such settings as well as identifying future research needs.	best practice;iteration	Jennifer Ellis;Marilyn Arnone;Nanette S. Levinson;Derrick L. Cogburn	2014	2014 47th Hawaii International Conference on System Sciences	10.1109/HICSS.2014.17	public policy;further education;simulation;computer science;knowledge management;accessibility;software engineering;iterative method;management;world wide web;best practice	AI	-79.09153037776665	-33.139616179147055	136594
292193385c2eed8d33cceaca61a3ed9ec1af318e	factors affecting perceived satisfaction with a bpm tool: a student perspective		This pedagogical study is an innovative collaboration with a vendor to analyze factors affecting students' perceived satisfaction with the vendor’s Business Process Management (BPM) tool. Although BPM tools potentially enhance organizations’ productivity, dissatisfied users will diminish such outcomes. Users were thirty students in eight teams who participated in an assignment that required a description of their experience with the BPM tool. Preliminary analysis of students' comments using grounded theory result in eight propositions regarding factors. User knowledge and the quality of the documentation affect perceived ease of use and the skills in report generation. Specifically, dissatisfied students remarked on difficulties with process modeling and simulation report generation. Feedback to the vendor may result in future modifications to the BPM tool. Improved perceived satisfaction with the modified tool will potentially lead to higher productivity in organizations that employ graduating students. Implications for educational research include suggestions for teaching future BPM courses.	beam propagation method;business process;documentation;process modeling;simulation;usability	Judy E. Scott;Jae Hoon Choi	2012			reliability engineering;systems engineering;knowledge management	HCI	-82.17190080203378	-33.10299793559635	137133
6256a0f0923c28c5a19afece627fde5b55261c10	computer science program accreditation: the first-year activities of the computing sciences accreditation board	first year	This report summarizes the activities of the Computing Sciences Accreditation Board from its inception in 1984 through its first accreditation cycle completed in June 1986. The major activities during this period were directed at developing the CSAB structure necessary to carry out the accreditation process, and at conducting the first round of accreditation visits and actions.	computer science	Taylor L. Booth;Raymond E. Miller	1987	Computer	10.1145/22899.22902	computer science;accreditation;certification and accreditation	AI	-79.94112197335483	-30.811709635081808	137387
0043985d9323ffeed0296661739e2b047993ab50	handling very large lecture courses: keeping the wheels on the bus iii (abstract only)		As classes grow beyond hundreds or even a thousand students, instructors must come to grapple with handling course logistics at scale. Otherwise mundane tasks can no longer be handled in an ad hoc way, and standard course design challenges become more acute. Just to name a few issues, the instructor might have to contend with: Providing timely effective feedback to students, exam scheduling, recruiting and managing a teaching staff that consists of dozens of people, ensuring consistency of grading, identifying and providing interventions for struggling students, providing a consistent policy for makeup work, and creating many types of course content (e.g. lab, HW, discussion section) that allows for an efficient path to mastery for each student regardless of diverse backgrounds and ability. If you have good ideas for handling these issues you'd like to share, or just want to learn what others are doing, come join us! Discussion will ideally include staffing techniques, technologies (including automated assessments), and ways of developing course content. A master list of such tips, as well as a retrospective summary, will be compiled and provided to the SIGCSE community at http://tinyurl.com/wotb2017.	compiler;grapple;hoc (programming language);logistics;sigcse;scheduling (computing);wheels	Josh Hug;Cynthia Lee	2017		10.1145/3017680.3022374	simulation;computer science;software engineering;multimedia;pedagogy	HCI	-80.43756871651358	-35.41777797885175	137550
3c6b419b25dfeb3dcad27203a2a1dae5e22576ea	the issue of robot education in china's basic education and its strategies	educational robots educational institutions service robots computer science education technological innovation educational technology laboratories concrete costs artificial intelligence;it strategy;robot sensing systems;innovation education;competitive strategy;educational robotics;virtual robot;china basic education;strategies robot education robot competition virtual robot basic education;robot competitions;service robots;robot teaching robot education china basic education innovation education quality oriented education robot competitions;materials;basic education;robot competition;robots education;programming profession;robots;robot education;quality oriented education;technology education;robot teaching;strategies	Recently, People pay more and more attention to the robot education. Experts at home and abroad in education proposed that education robot could serve as an effective platform for implementing innovation education, quality-oriented education, and technology education. This paper will elaborate the development of robot education in China's basic education, analyze problems along with several strategies from the following three perspectives: robot competitions, robot teaching, and researches on robot education.	robot	Guomin Zhang;Jianping Zhang	2008	2008 IEEE Conference on Robotics, Automation and Mechatronics	10.1109/RAMECH.2008.4681440	robot;robot learning;simulation;strategy;computer science;engineering;knowledge management;artificial intelligence;technology education;educational robotics;competitive advantage	Robotics	-83.42858528829184	-31.79402168043282	138550
89f811371805731c075698b8f8fa2fda81bce0ec	empowering interviews : narrative interviews in the study of information literacy in everyday life settings	females;qualitative research;information sources;research design;information literacy;empowerment;information literacy practices;biblioteks och informationsvetenskap;contraception;interviews;visual aids;research interviewing;methodology;sexual and reproductive health	Introduction. This paper presents a way to design and conduct interviews, within a sociocultural perspective, for studying information literacy practices in everyday life. Methods. A framework was developed combining a socio-cultural perspective with a narrative interview was developed. Interviewees were invited to participate by talking and using visual tools (deck of cards of information sources, maps, and horizons of information sources). Five young women were interviewed about how they chose contraceptives and how they in the process engaged in information literacy practices. Analysis. A qualitative analysis was carried out, using transcripts of interviews, visual tools supplemented with observations, field notes and transcripts of conversations during counselling meetings before the interviews. Results. The interviews became “empowering” arenas, providing opportunities for interviewees and interviewer to reflect on and ponder over what it means to choose and use a contraceptive. The information literacy practices of evaluating information sources about contraceptives became a part of a story to tell about what it means to be a Page 1 of 16 Empowering interviews: narrative interviews in the study of information literacy in every... 11/12/2013 http://informationr.net/ir/18-3/colis/paperC10.html young woman, expressing oneself as leading a sexually active life. Conclusion. The proposed narrative interview design, in which interviewees are invited to take active part in the interview, proves itself fruitful within a sociocultural perspective.	information literacy;map	Johanna Rivano Eckerdal	2013	Inf. Res.		library science;empowerment;social science;interview;knowledge management;qualitative research;information literacy;methodology;sociology;social psychology;pedagogy	HCI	-79.71416986448948	-25.7617357204692	138657
9987ce9beb5c2baaef6a8112d6194e1111184126	big data's little brother: enhancing big data in the social sciences with micro-task marketplaces	mturk;big data;crowdsourcing;mechanical turk	Some claim that “Big Data” will fuel a revolution in the social sciences, while skeptics challenge Big Data as unreliably measured, decontextualized, and lacking content validity. We argue that Big Data projects can be enhanced through data augmentation with crowdsourcing marketplaces like Amazon Mechanical Turk (MTurk). Following a content analysis of academic applications of MTurk, we present three empirical cases to illustrate the strengths and limits of crowdsourcing and address social science skepticism. The case studies use MTurk to (1) verify machine coding of the academic discipline of dissertation committee members, (2) link online product pages to an online book database, and (3) gather data on mental health resources at colleges. We consider the costs and benefits of augmenting Big Data with crowdsourcing marketplaces and provide guidelines on best practices. We also offer a standardized reporting template that will enhance reproducibility. This study expands the use of micro-task marketplaces to enhance social science acceptance of Big Data.	amazon mechanical turk;best practice;big data;convolutional neural network;crowdsourcing;online book;the turk	Nathaniel D. Porter;Ashton M. Verdery;S. Michael Gaddis	2016	CoRR		big data;computer science;artificial intelligence;data science;data mining;management;world wide web;computer security;crowdsourcing	ML	-78.1722095614957	-26.98015895682975	138660
9f86a1218f90e8a3a6e747751e4b3a1af5cf8e9b	comparative methods and analysis for creating high-quality question sets from crowdsourced data	item analysis;mcq;crowdsourcing	Online assessment has grown beyond the confines of conventional educational testing companies. Assistance in creating high-quality exams is welcomed by educators who do not have direct access to the proprietary data and methods used by educational testing companies. Using aspects of accepted educational approaches to measure question difficulty and discrimination power, this paper covers two methods for building exams composed of high-quality multiple choice questions (MCQs) from sets of crowdsourced data.	crowdsourcing	Sarah K. K. Luger;Jeff Bowles	2016			computer science;data science;data mining;world wide web;crowdsourcing	NLP	-79.38388390631356	-36.08963491455195	138778
32875d2f494b86363494ee45ff286bb89b5f82d7	a joint first year program for computer science and information systems	dynamic programming;first year;permutation graph;information system	The Marist College Division of Computer Science and Mathematics offers undergraduate degrees in both Computer Science (CS) and Information Systems (IS). Prior to the fall of 1992, the two programs shared only two computing courses and one math course. Today, however, students who enter Marist with either major take the same courses during their fkeshman year. This common foundation for both CS and IS has provided a better background for students, enhanced their enthusiasm for their chosen fields, increased the retention of students in the major, and helped ensure that students are pursuing the major for which they are best suited. This paper looks at the two majors before the initiation of the joint first yea program and examines the problems with the course sequences identified by faculty and students, It then looks at how the joint first year program, through the restructuring of the course sequence and the introduction of a freshman lecture series, has solved some of those problems.	computer science;information systems;information system	Jan L. Harrington;Helen M. Hayes	1995		10.1145/199688.199750	computer science;theoretical computer science;machine learning;dynamic programming;permutation graph;information system	Theory	-79.98171595421599	-30.952324302191133	138788
9b5f5956870f33dd9c955a06d62ae09d61e6f70c	a two-course sequence of real projects for real customers	software engineering;real world projects;real world clients	"""Since 2012, over 1,100 students at our institution have participated in software engineering courses in which they had the opportunity to partake in """"real projects for real customers."""" Unlike typical one-semester courses or yearlong capstones, our approach is unique in that we offer a two-course sequence in which one group of students develops the initial implementation in the first course and different students maintain and improve the code in the second. This paper presents our experiences in teaching these courses and serves as a blueprint for other educators who wish to create similar interventions for their students over a two-course sequence. In addition to describing our motivation and the structure of the courses, we discuss how we address issues of scale by using students as Project Managers and the benefits of doing so. We also present empirical evidence that the projects help students feel more confident working in groups, using the agile development process, and working with a real-world customer."""	agile software development;blueprint;scalability;software engineering	Christian Murphy;Swapneel Sheth;Sydney Morton	2017		10.1145/3017680.3017742	simulation;knowledge management;software engineering;pedagogy	SE	-82.5178955804352	-33.3919287262591	139319
1f38af75facc6d55d7613f3128d5f57f35f84188	development of an e-learning system for ip-routing based network education	e learning system beginning course technical course classroom lectures routing mechanism packet transmission animation easy drawing network topology internet protocol web based e learning tool self learning oriented facility network and communication learning information engineering higher education ip routing based network education;education open source software ip networks animation;animation;ip networks;open source software;transport protocols computer aided instruction computer networks computer science education educational courses internet routing protocols telecommunication engineering education	Recently, as Internet becomes over ground and most effective for our lives, in higher education, especially information engineering, network and communication are ones of the most important and indispensable subjects for almost all the students to learn in a short period. There are many trials to teach and educate some theoretical and practical understanding of network and communication. In fact, however, network and communication, particularly a viewpoint of Internet, have a very huge scope and include a lot of themes to understand in a relatively short period. So we have developed a limited scope and self-learning oriented facility of application program for e-Learning tool for network/communication study. Our key topics are as follows: Web-based e-Learning tool, Focusing of IP(Internet Protocol), Easy-drawing network topology, Animation of Packet transmission, Illustration of routing mechanism, and so on. We have applied our e-Learning tool into real classroom lectures and had some questionnaires for technical course and beginning course after trial questionnaire for laboratory members. It is confirmed that our e-Learning tool has been significant for learning network/communication based on the above questionnaire.	information engineering;internet;network topology;routing;web application	Chiaki Kawanishi;Yukio Hori;Yoshiro Imai	2014	2014 Information Technology Based Higher Education and Training (ITHET)	10.1109/ITHET.2014.7155667	anime;the internet;simulation;dynamic circuit network;computer science;engineering;electrical engineering;artificial intelligence;theoretical computer science;operating system;multimedia;world wide web;internet connection sharing;internet traffic engineering;pedagogy;computer network	Security	-86.1184623960386	-35.51644763924222	139542
99bc17c68fa1525e2ea569eebea36bbd1b3ac53c	learning computer programming with autonomous robots	informatica;lenguaje programacion;langage commande;computer program;lenguaje control;programming language;autonomous system;robotics;it education;sistema autonomo;programmation robot;ciencias economicas;high school;systeme autonome;langage programmation;robotica;informatique;robotique;sciences economiques;enseignement;computer science;economics;educacion;control language;autonomous robot;robot programming;teaching;generic programming;ensenanza	This paper reports on a programming lesson using autonomous robots in junior high school. First, the design of the low cost circuit board for the lesson is described. The structure of a general programming language “Dolittle” which controls a robot is also explained. Then, we introduce lessons of manufacturing and controlling robots in “Information and Computer” area of “Technology and Home Economics” subject for students (from 14 to 15 years old). From the result of the lessons we found that (1) learning programming is “hard fun” for students and (2) robot programming is effective for students those who have difficulties in learning. We propose introduction of learning programming with autonomous robots to IT education of junior high school.	autonomous robot;computer programming;printed circuit board;programming language	Shuji Kurebayashi;Toshiyuki Kamada;Susumu Kanemune	2006		10.1007/11915355_13	simulation;computer science;autonomous system;artificial intelligence;robotics;programming language;generic programming;algorithm	AI	-88.15597523301348	-32.34951664539838	139780
e35a744a8659bd1ce00636f93c6e6f1ce9423eb0	information literacy across the university and workplace reality		This paper reveals the results of the “Information Literacy across the university and workplace reality” survey. This study revealed which are the most needed information skills for the faculty at the workplace. The questionnaire was addressed to Masters students from two universities in Romania and Moldova, who have a job or have their own business. The results of this study will be taken into account in the improvement of the discipline of Information Literacy and Project Management. The survey targeted a pool of 66 individuals from Transilvania University from Brasov and 53 individuals from the Academy of Economic Studies of Moldova. This study utilized the questionnaire survey method as a research tool, using SurveyMonkey online.	information literacy	Angela Repanovici;Natalia Cheradi;Ane Landøy;Silvia Ghinculov	2017		10.1007/978-3-319-74334-9_6	engineering management;questionnaire;project management;information literacy;political science	HCI	-77.63698422237397	-31.620977694968857	139867
c07b5830881da659c1ba52e2d254e27037791211	the use of cellular automata in the classroom	cellular automata;diffusion;electrical engineering;fluid dynamics;genetic drift;glider;interior design;nucleation;percolation;simulated annealing;soil erosion;temperature;cellular automata;diffusion;electrical engineering;fluid dynamics;genetic drift;glider;interior design;nucleation;percolation;simulated annealing;soil erosion;temperature	The paper explains what a cellular automaton is and why schools would want to integrate the study of cellular automata into their curricula. Examples are given and suggestions for sample exercises follow. Each example is given a title, a discipline to which it relates, a source from which the example or the motivation for the example was taken, and a recommended grade level--middle school or high school. Source code in Microsoft's FORTRAN PowerStation, Version 1.0 is available for all of the examples. Each of the programs show a visualization of a particular cellular automaton over time. A cellular automaton is a modeling tool that can be used in the classroom with either pencil and paper or on computers. Cellular automata can be important in motivating students, reaching students with certain learning styles, helping students develop modeling skills, and in the development of curricula for teaching certain computer technologies.	cellular automaton;computer;fortran	H. Albert Lilly	1995	Proceedings of the IEEE/ACM SC95 Conference	10.1109/SUPERC.1995.76	cellular automaton;interior design;simulation;visualization;simulated annealing;erosion;temperature;shape;computer science;artificial intelligence;theoretical computer science;nucleation;percolation;genetic drift;diffusion;glider;source code	Metrics	-86.45460227385423	-37.719407617298295	139899
da4f9be2bd5a5bf8adebed49aad83780af81b3e7	a comparison between lecturers' and students' concept maps related to the input/output topic in computer architecture	input output topics;evaluation;concept maps	The Input/Output topic is mandatory in the Computer Architecture branch of the computing curricula. However. in our experience it is a rather complex topic for students to understand.  This paper presents the process followed to produce some concept maps that represent the theory we, as lecturers, would like students to learn, and shows the differences found between these concept maps and the concept maps produced by several representative students selected among the students attending the course during the school year 2011-2012.  There is also a comparison made between the scores obtained by these representative students in the exam and the results of the concept maps.  Finally, a discussion is proposed. This type of study is new to the researchers and the objective of the discussion is to gather knowledge on how well the research has been developed so far, and how to continue.	computer architecture;concept map;input/output	Edurne Larraza-Mendiluze;Nestor Garay-Vitoria	2012		10.1145/2401796.2401803	mathematics education;applied mathematics;computer science	Web+IR	-81.03050317508666	-35.064920945544436	139931
c222d3b9137b7fbc79db486f4c6ad9e119e3988f	napp: connecting mentors and students at técnico lisboa		In the past five years, a successful first-year mentoring programme at Tecnico Lisboa’s Taguspark campus promoted by Nucleo de Apoio ao Estudante - Taguspark (NAPE-TP) was brought into play. Nevertheless, the relationship between mentors (mostly second-year students) and mentees (first-year students) tends to weaken after the first academic weeks of the semester. This problem can be addressed with the creation of a consistent and unique communication channel between all the parties involved in this programme. This work presents NAPP, a novel mentoring software solution for first-year mentorship programmes, that enhances the communication between mentors and mentees while providing study guidance tools for mentees. NAPP is composed of two key components, a cross-platform mobile application and a web application that is used as a high level performance analysis tool by the programme’s coordinator. These components were developed using state of the art technologies like the Ionic Framework using AngularJS, and the NoSQL databases CouchDB and PouchDB.		Pedro Veiga;Alberto Sardinha;Ana Moura Santos;Carla Boura	2017		10.1007/978-3-319-66610-5_74	knowledge management;nosql;computer science;web application;mentorship;software	Vision	-82.24818016439703	-33.74469671630513	140053
116c5a5352548eddeee017ee996f15ee5d976ce6	software security testing of an online banking system: a unique research experience for undergraduates and computer teachers	software testing;bepress selected works;mutation analysis;cybersecurity security testing software testing access control security attacks mutation analysis;security attacks;access control;cybersecurity;security testing	This paper presents a unique summer project for a group of undergraduate students and high school computer teachers to gain research experiences in the area of cybersecurity. The students and teachers were selected from the participants in the NSF REU and RET programs at the host institution. Through the research on security testing of a real-world online banking system, the students and teachers have not only learned about the cutting-edge security testing techniques, but also made publishable contributions to the research base. The two collaborating graduate assistants served as an immediate role model for the undergraduates and an indirect role model for high school students through the teachers. With the help from the graduate assistants, the students and teachers were able to work effectively toward achieving their research objectives. The internal competition helped the participants get a better sense of achievement and satisfaction. The research experiences also prepared the teachers with the necessary knowledge for introducing cybersecurity topics (e.g., secure programming) into future classroom activity. As such, the project described in this paper provides a model summer program for undergraduate and/or K-12 teachers to gain research experiences.	application security;commodore reu;computer security;experience;ibm notes;online banking;resolution enhancement technology;security testing;world online	Dianxiang Xu	2013		10.1145/2445196.2445400	simulation;computer science;access control;software engineering;mutation testing;software testing;security testing;computer security;pedagogy	HCI	-81.42858146300479	-29.765204269915863	140153
7b76c618bdfcc96ae0bfd093b93b935b2dfdefce	technical committee on biological and medical measurements [tc-25update]	instruments;time measurement;instruments medical diagnostic imaging biology medical services time measurement;biology;medical services;medical diagnostic imaging	"""All medical applications include a measurement component connected to the acquisition, correction, and validation of the medical data. Medical measurements have to deal with the measurand variability, both over time and between patients, being caused by a multitude of intrinsic and extrinsic factors, some known and some unknown. The goal of the Technical Committee on Biological and Medical Measurements (TC-25) is to establish, develop, promote, and support the cooperation among researchers involved in the different fields of medical measurements, so that instrumentation and measurement, medical and biological fields all become highly aware of these problems. In this effort, the Committee promoted the development of the P1721 draft standard on """"Objective Measurement of Systemic Arterial Blood Pressure in Humans,"""" which is now on the way for the first ballot. This is an example of fruitful cooperation within the medical field: blood pressure was measured in an empirical way since 1905, and the instrumentation and measurement field aimed at understanding its reliability, i.e., the uncertainty, of the blood pressure measurement."""	heart rate variability;humans;repeatability	Marco Parvis	2014	IEEE Instrumentation & Measurement Magazine	10.1109/MIM.2014.6825390	engineering;electrical engineering;biological engineering;physics;quantum mechanics;time	Metrics	-87.22017786329138	-31.171424246027023	140247
a17bb0fa6f8b4018850e445ab5682d12927282ee	team learning program for information technology engineers using project-based learning - case study of the “upper process” in it engineering		This paper reports the case of an educational practice and evaluation of team learning in an Engineering course. This course uses project-based learning and is supported by a learning management system. Its subject is the “Upper Process” of Information Technology systems development. The course was conducted at a computer college which trains information technology engineers to meet the demands of industry. The course content consists of team practice sessions to understand “requests for proposals” (RFP) and to learn how to propose “requirement definitions”. Student’s communication skills are also taught throughout the team learning sessions. To assess what was learned, the results of the team learning sessions were evaluated and self evaluations of learning activities were conducted. After this, a feasibility study of the team learning activity was discussed. Also, the evaluation scores of the functions of the learning management system were correlated with the assessment scores.	request for proposal;software development process	Minoru Nakayama;Manabu Fueki;Shinji Seki;Toshikazu Uehara;Kenji Matsumoto	2012			educational technology;knowledge management	HCI	-80.7837990921086	-33.0824848839661	140346
78ce7bbb626d3255bf35d839dc24e9e2c1a93139	design and implementation of electronic lesson preparation system	electronic lesson preparation;subject management;lesson plan management;online editing	In order to solve the problems of manual and time-consuming lesson preparation among middle and primary school teachers and improve the quality and speed of lesson preparation, design and implementation of electronic lesson preparation system is an efficient way. This paper firstly aimed at the actual problems that primary and secondary school teachers encountered in the process of lesson preparation, determined the design principles of electronic lesson preparation system, researched the basic framework of the system, analyzed each function of the system in detail, and then completed and realized the system.		Min Hu;Qingtang Liu;Hao Li	2012		10.1145/2382336.2382366	simulation;engineering;multimedia;pedagogy	AI	-78.04027482908636	-35.96158430422585	140427
0c453c1c9d7184a79e76f05405d68d0940fa6c56	informal learning at the workplace via adaptive video		Learning at the workplace is to a large extent informal. Trainees often need consultations with more experienced colleagues who can answer their questions or demonstrate certain practice. This process is usually very time consuming for the more knowledgeable ones, who often need to repeat their explanations for various trainees. There is a high potential to make this process more efficient by means of technology, especially by using the power of multimedia. In this paper, we present a vision and work in progress for enhancing informal learning at the workplace by using video annotation and video adaptation techniques. This is part of the research and development in the Learning Layers project.		Milos Kravcik;Petru Nicolaescu;Ralf Klamma	2014			work in process;informal learning;knowledge management;annotation;computer science	HCI	-77.65267424903693	-36.55017399604769	140443
f8233f79039f14b27c217de235c0465b6ca68b5b	teaching computer programming using moocs in multiple campuses: challenges and solutions	computers;computational modeling;tutorials;synchronization;programming profession	In recent times MOOCs has become a technology enabled platform which allows delivery of content in locations geographically separated out. In Birla Institute of Technology and Science (BITS), Pilani the EdX platform has been successfully used to deliver content over multiple campuses namely Pilani Campus, Goa Campus, and Hyderabad Campus. We present in this paper challenges faced in implementing this pedagogy, solutions attempted, and other tools required to make learning of Computer Programming course, a better experience. In particular, we have described how it was handled in BITS Pilani, Hyderabad Campus	computer programming;massive open online course;edx	Tathagata Ray;Aruna Malapati;N. L. Bhanu Murthy	2016	2016 IEEE Eighth International Conference on Technology for Education (T4E)	10.1109/T4E.2016.041	simulation;human–computer interaction;engineering;multimedia	Visualization	-77.69207429155632	-37.315987278285164	140470
7263e2543feef42e2c05512ca30545c68105f225	the role of the family in the it career goals of middle school latinas	girls;career;family;career choice;latinas	Little is known about the role of family in middle school Latinas’ pathway to an IT-related career. This paper will present findings on how rural, Latina girls are thinking about the role of family in their career interests. The 77 participants range in age from 12-13, and most have parents who were born in Mexico and work in service-related jobs. Students described their career goals, influences on their goal(s), how their parents would feel if they chose to be a computer scientist, and whether their goal would be different if they were a boy. Few described an IT-related goal, and parent support was not a factor. Most students reported that parents were the primary influence on their goals, and most said that their parents would be supportive IF they chose to be a computer scientist. One third said that their career choice would change if they were a boy.	computer scientist;gene regulatory network;job stream	Jill Denner	2009			applied psychology;political science;clinical psychology;pedagogy	HCI	-84.60460903174835	-25.441309721622662	140527
7f5a146ae77cd61b590d95ef7e832e4661953114	crcd in machine learning at the university of central florida preliminary experiences	engineering education;computer science education.;central florida preliminary experience;curriculum development;learning;computer science education;machine learning	"""We will present work in progress on a Combined Research and Curriculum Development (CRCD) project at the University of Central Florida entitled """"Advances in Machine Learning in Engineering and Science Education"""". The project is funded by a grant from the National Science Foundation and involves the development of a curriculum model for the integration of machine learning research into science and engineering disciplines. This is a two-phase project. The first phase, which is where we are now, involves the integration of such modules into the lower level science and engineering courses, while the second phase involves the introduction of upper level machine learning courses."""	machine learning;two-phase commit protocol	Michael Georgiopoulos;José Castro;Annie S. Wu;Ronald F. DeMara;Erol Gelenbe;Avelino J. Gonzalez;Marcella K. Kysilka;Mansooreh Mollaghasemi	2003		10.1145/961511.961608	educational technology;engineering education;computer science;learning sciences	AI	-80.12002507910886	-32.52135974205209	140641
554cf4a03d1edfefb2ba6f699a91fcd4cf0016fc	how instructional feedback has been employed in instructional units for teaching software project management tools: a systematic literature review		The software industry has a growing demand for project managers which has leveraged the efforts to improve the teaching of project management competencies in higher education computer courses. Part of these efforts has been concentrated on improving instructional feedback when teaching these competencies. Instructional feedback is essential in order to help the students to learn based on an evaluation of their actions and decisions. However, so far there is few information available on how to provide this instructional feedback when teaching software project management. Therefore, we performed a systematic literature review that aims at providing an overview on existing feedback strategies, specifically when teaching the use of project management tools, such as MS Project or dotProject. As result we identified 8 relevant studies. Their results are systematically presented and a discussion is carried out, identifying the most adopted feedback strategies, how they were implemented, as well as their effects on student learning. These results may be useful for software engineering instructors to decide on the adoption some of the strategies as well as for instructional designers that may employ some of these feedback strategies when developing new instructional units. Keywords-Project Management; PMBOK; PM tool; Instructional feedback;Instructional Unit; SLR.	comparison of project management software;feedback;futures studies;software engineering;software industry;software project management;systematic review;dotproject	Rafael Queiroz Gonçalves;Christiane Gresse von Wangenheim	2016		10.18293/SEKE2016-023	simulation;systems engineering;engineering;knowledge management	SE	-82.00547326136012	-33.24480817179793	140726
5e9f66ca849f378e33af2ec9820e0da44d1f048a	do students really understand the difference between simulation and remote labs?		Laboratory experiments play a crucial role in engineering education as they strongly contribute to the development of important skills for the professional practice. This paper addresses a students' understanding gap between simulations and remote labs. These two resources (and namely the remote laboratory VISIR - Virtual Instrument Systems in Reality) have been commonly used on several didactical implementations, along with other didactical resources in different Engineering degrees at the Federal University of Santa Catarina and Polytechnic of Porto School of Engineering. This work, developed in the scope of the VISIR+ Project, intends to evaluate students' perceptions considering simulation and remote lab results. Quantitative and qualitative data were analyzed to better understand how deeply students realize the differences between these resources and their type of data. Preliminary results indicate that a considerable number of student's don´t have a clear idea of these differences, even though sometimes they know their definition. Furthermore, this gap does not seem to differ much with the context (country, course, academic year, course content), students' final grades, teacher approach or implemented tasks.	experiment;simulation	Natércia Lima;Maria Clara Viegas;Marcelo Zannin;Arcelina Marques;Gustavo Ribeiro Alves;Manuel C. Felgueiras;Ricardo Costa;André V. Fidalgo;Susana Marchisio;Federico Lerro;Claudio Merendino;Juarez Bento da Silva;Maria Isabel Pozzo;Elsa Dobboletta;Ingvar Gustavsson;Kristian Nilsson	2017		10.1145/3144826.3145362		HCI	-79.90153392570109	-32.84147093187954	140778
2ed87756928573cc7d5773b4244e330b5b85aa90	studios in software engineering education: towards an evaluable model	art;computer science education;software engineering;teaching;arts;design;digital technology;peer-based learning;physical home;problem-based learning;qualitative analysis;software engineering education;studio education;studio-based teaching;atelier;collaboration;collocation;creativity;design;software engineering education;software studio;studio	"""Studio-based teaching is a method commonly used in arts and design that emphasizes a physical """"home"""" for students, problem-based and peer-based learning, and mentoring by academic staff rather than formal lectures. There have been some attempts to transfer studio-based teaching to software engineering education. In many ways, this is natural as software engineering has significant practical elements. However, attempts at software studios have usually ignored experiences and theory from arts and design studio teaching. There is therefore a lack of understanding of what """"studio"""" really means, how well the concepts transfer to software engineering, and how effective studios are in practice. Without a clear definition of """"studio"""", software studios cannot be properly evaluated for their impact on student learning nor can best and worst practices be shared between those who run studios. In this paper, we address this problem head-on by conducting a qualitative analysis of what """"studio"""" really means in both arts and design. We carried out 15 interviews with a range of people with studio experiences and present an analysis and model for evaluation here. Our results suggest that there are many intertwined aspects that define studio education, but it is primarily the people and the culture that make a studio. Digital technology on the other hand can have an adverse effect on studios, unless properly recognised."""	experience;interviews;software engineering;visual artifact	Christopher Bull;Jon Whittle;Leon Cruickshank	2013	2013 35th International Conference on Software Engineering (ICSE)		education;studio art;simulation;software engineering process group;human–computer interaction;computer science;engineering;social software engineering;software development;software engineering;multimedia;software walkthrough	SE	-82.7687686870097	-34.30694303591637	141700
f4f5f14be5a9f4c14e00014460e68e8654b23251	computers come of age in writing instruction	textual analysis;teaching assistant;international students	During its first three years of use at CSU, thewriter's workbench system enjoyed such success with students, faculty, teaching assistants, and administrators that the project now includes the entire composition program—basic, college, and advanced writing, more than 4000 students per year. Faculty in the College of Business have adaptedworkbench for the needs of their students. Faculty in the Intensive English program have adapted it for international students learning English. As the result of a slight increase in tuition, the English Department's Center for Computer-Assisted Writing is now free to all composition students. As the project continues to expand, the laboratory will become a textual-analysis and writing center, soon CSU hopes, open at no charge to all students writing papers for any instructor on campus who agrees to spend lecture, office or grading time helping students with writing problems.		Charles R. Smith;Kathleen E. Kiefer;Patricia S. Gingrich	1984	Computers and the Humanities	10.1007/BF02267225	mathematics education;multimedia;pedagogy	NLP	-77.48481839806044	-30.549701686099194	141748
fb636cdaab4064d605c6c3584eec90210fdd0c05	the principle of pattern-oriented curriculum and its implementation in a computer science module for high school students	teaching and learning;learning environment;computer science education;high school;computer science educational institutions educational technology computer science education programming profession pattern recognition organizing student activities collaborative work research and development;educational courses;algorithmic patterns pattern oriented curriculum computer science module high school students teaching educationally disadvantaged students learning environment israel programming tools;high school student;programming;programming tool;teaching computer science education programming educational courses;teaching	"""An approach to the teaching and learning of high school computer science (CS) to and by educationally disadvantaged students (EDS) is described. We begin by outlining six pedagogical principles for designing learning environments appropriate for EDS. Then, the implementation of one of these principles is presented. Results from years of using the CS module developed based on these principles in Israeli schools show that at the end of the module, the students master basic programming tools and recognize basic algorithmic patterns. These findings indicate the potential contribution of the approach outlined here for EDS. 1. Principles of a CS Curriculum for the EDS CS courses designed for the high school population are challenging, since the students may not have elected to study CS and they often exhibit low motivation for learning CS ideas and concepts. In order to deal with such a challenge, a CS curriculum that is tailored to the needs of high school students is a must. A somewhat neglected aspect of the above challenge is a specific portion of the high school population, which can be referred to as ’educationally disadvantaged students’, or in short, EDS. As we elsewhere described in details [4], one can find in classes of EDS a unique combination of characteristics that are not common in regular high school classes. When designing a CS module for EDS, the main goal is to develop a learning environment that will suit these students’ characteristics and make the basic CS concepts more accessible for them. The list below describes six principles we 1 found useful for designing such a CS module. 1. Decomposition: This principle calls for organizing the learning material in small and focused content units that would help learners cope with the need for immediate satisfaction. 2. Experience-oriented learning environment: This constructivist principle [1] calls for using student activities in the computer laboratory as the basis from which conceptual understanding can emerge (as opposed 1 The development of the presented approach was led by Dr. Tami Lapidot, whom the authors collaborated with in “Migvan – R&D in CSE”, at the Technion–Israel Institute of Technology. to using computers for practice per se). An experienceoriented learning environment avoids situations in which students are merely passive readers or listeners. This principle can help students who are capable of working individually to progress at their own rate and be active in their learning, no matter what the others are doing. 3. Project-based learning: The main idea of this principle is that learning should be accompanied by a requirement to design, implement and present some 'mini' programming projects. This principle can help elevate students’ low selfestimation and enable students to show initiative by allowing them to choose their own topics for programming projects. 4. Pattern-oriented curriculum: This principle calls for arranging the curriculum around a set of basic programming patterns. In the software design community, patterns are considered a way of documenting experience by capturing successful solutions to recurring problems [5], but even what is regarded in this community as ‘elementary patterns’ can hardly suit the needs of EDS. Thus, our module is arranged around the most basic programming patterns such as Average and Maximum. A pattern-oriented curriculum might help EDS, who find it easier to pull out a ready-made pattern than to develop one from scratch. 5. Spiral learning path: Following this principle, the learning process is organized in gradual stages, through which a specific concept is repeatedly developed. Each stage helps to foster further understanding of the abstract concept and at the same time helps those students who missed a previous stage. 6. Natural programming: This principle leads one to use the students’ natural language instead of, or in addition to, the English-like formal languages usually used for programming. These six principles were implemented in two versions of the CS module developed for EDS in Israel. One version uses the Pascal programming environment and for the other version a special Hebrew programming language has been developed, based upon Logo [2]. Due to space limitations, the following section focuses only on one principle in the Pascal version; More can be found in [2,4]. 2. Designing a Pattern-Oriented Curriculum At first glance, the Pascal programming environment might seem less accessible to EDS, for several reasons. One major reason is the lack of immediate feedback from Proceedings of the 2005 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC’05) 0-7695-2443-5/05 $20.00 © 2005 IEEE the computer; another reason is the fact that the environment does not provide detailed error messages. Still, following the required CS curriculum in Israel even the CS module for EDS must include Pascal programming. Our Pascal version for EDS rose to the challenge, while implementing all of the above six principles. As an example, we will here focus on the implementation of the fourth principle – designing a pattern-oriented curriculum. In the CS module for EDS, the concept of 'algorithm' becomes important only when learning about conditionals and loops. Although the algorithms in this learning phase are very simple and involve only basic arithmetic calculations, EDS students might need special support in constructing them properly using a formal language. Following the identification of 5 types of basic computing problems: Print, Sum, Count, Average, and Extreme Value, the curricular design proceeded with the development of learning materials designed to help EDS in the gradual construction of the algorithms needed to solve such computing problems (each problem can appear either in a non-conditional version or in a conditional version). Based upon the principle of a pattern-oriented curriculum, we chose to match each type of computing problem (ten in all) with the algorithmic pattern used to solve it. As a result, the learning process is organized around ten patterns, which are general descriptions written both in natural language and in programming language. The learning process, using any of the ten patterns, develops through three stages. These stages emerged as a result of a field research that described the process by which EDS solve programming problems [3]. 1. In the identification stage the students are presented with a set of real life problems, and are requested to classify these problems. The classification is open, especially in the beginning of the learning spiral, when the class deals with the first pattern. The students offer their different classifications, and discuss the criterions for each classification. The discussion finally converges towards an expression of the computational criterion, which is the kind of computing problem implied by each real life problem. Throughout the discussion, an emphasis is placed on the computational differences between problems. Among the real life problems, there are problems in which different settings are represented by the same computational problem, while others share the same setting but represent different computational problems. Throughout the classification process, the students do not engage in solving the problems, and at this identification stage, they do not know what the algorithms look like or what the program components will be; but in the end of this stage they should be able to recognize problems that """"fit"""" the pattern under discussion. 2. In the construction stage the learners construct a description, in the form of a verbal algorithm, in order to solve the recognized computational problem. In this stage, it helps to engage the students in a kind of roleplaying exercise, in which they can dramatize the sequence of acts needed to solve the problem. Such activity should be followed by the generalization of the students' concrete acts into a set of consecutive descriptions, using less “natural” language and more abstract description (towards the pure formal language in the next stage). 3. In the implementation stage the students translate the informal algorithm into a programming language. Here, we further decompose the learning process into three sub-stages, with different learning activities in each sub-stage. First, the learners analyze the components of a given Pascal program, written for solving a specific computing problem. For example: “Mark the instruction for initializing the counter in the given program”. Second, they continue with learning tasks in which they complete several missing parts in a given Pascal program, written using the same for pattern as in the first sub-stage (most of the missing parts are related to the setting rather than to the pattern). Third, the most advanced learning tasks are those in which students write a complete Pascal program from scratch. In the overall learning process, patterns are constructed along with the learners, first using their mother tongue and later the programming language, and the concept of algorithmic patterns is repeatedly developed. Thus, although some of the EDS do not possess the ability to develop the required algorithms, they can still successfully use given patterns and implement them in the programming language. Furthermore, other principles like the decomposition principle and the principle of spiral learning are intertwined into the principle of a pattern-oriented curriculum. As a consequence, even the most advanced parts of the CS module can better fit the needs of EDS."""	apl;algorithm;basic programming;cs games;computation;computational problem;computer lab;computer science;dr. web;electronic document system;error message;extended data services;field research;formal language;gradual typing;in the beginning... was the command line;integrated development environment;logo;natural language;organizing (structure);pascal;programming language;programming tool;real life;requirement;software design;software documentation	Dalit Levy;Tamar Paz	2005		10.1109/VLHCC.2005.63	mathematics education;applied mathematics;computer science;ap computer science;pedagogy	ML	-81.71737542908505	-36.42752478843587	142116
10970ba90c39198fd2de29b3d9aede3429e9fe35	facing challenges and having fun	computers;software;project management;diversity in computing;gender issues computer science education engineering profession programming profession equal opportunities project management professional aspects;computer science education;equal opportunities;gender issues;computing milieu;engineering profession;professional aspects;programming profession;computers and society;computing milieu educational institutions computers engineering profession programming profession software project management computers and society diversity in computing	Reflections on a 15-year career reveal that following your heart and mind will ensure that you're in the right place with regard to school and career choices. This is one of five articles providing personal perspectives on gender diversity in computing. The Web extra at http://youtu.be/WjRPdyxgl0o is a video interview in which Annie Ant&amp;#x00F3;n, chair of the School of Interactive Computing at Georgia Tech, discusses the importance of gender diversity in computing with Alfred C. (Alf) Weaver, the director of the University of Virginia's Applied Research Institute.	amiga reflections;diversity in computing;interactive computing;interactivity;mind;world wide web	Annie I. Antón	2013	Computer	10.1109/MC.2012.427	project management;computer science;knowledge management;software engineering;management	NLP	-81.40609100981213	-34.10131735532637	142197
307876ced072de60d0906dddff5d4a12e84aa95b	is engineering ethics optional?	ethics differential equations acoustical engineering engineering education engineering students knowledge engineering educational institutions societies standards cultural differences;differential equation;engineering system;engineering ethics;socio economic effects engineering education teaching government policies professional aspects;professional responsibility engineering schools us engineering world engineering ethics engineering education practical academic discipline practitioners real engineering cases cultural effects social effects engineered systems engineering students college ethical principles classroom practice	than a third of a representative sample of U.S. engineering educators considered the study of differential equations to be necessary for an engineer’s education. When the Society for the Promotion of Engineering Education surveyed over 500 teachers of engineering during the 1920s, it found that only 29% of the instructors believed that differential equations were of primary importance in the standard engineering curriculum [1].		Karl D. Stephan	2001	IEEE Technol. Soc. Mag.	10.1109/44.974502	engineering management;engineering ethics;health systems engineering;engineering;differential equation;environmental engineering law	DB	-83.22932579270224	-31.444306929787068	142406
af0f39e84637466be546c9243506f302e39161da	critical skills of is professionals: a model for curriculum development	curriculum development;information systems skills;analyst skills;user support;end user support skills;programming skills;information systems knowledge;information system;programming	Executive Summary In the rapidly changing field of Information Systems, educational programs must be continually reevaluated and revised. This can be a daunting task. To make this process more manageable and to create programs that more accurately reflect the demands of the marketplace, a curriculum revision process is presented. As part of the curriculum revision process, a study was conducted to determine the expected skills and knowledge required for Information Systems professionals in three general staffing groups: programmers, analysts, and end-user support. A survey instrument was developed asking respondents to rate the importance of each knowledge/skill area three years from now for each of the staffing groups. The results show that Information Systems knowledge relating to the entire organization and overall business knowledge will be important with less emphasis on advanced IS applications. The so-called ‘soft skills’ such as teamwork and collaboration, planning and leading projects, presentation delivery, and writing skills will be critical for success in the Information Systems profession. More importance will be placed on web-based languages rather than more traditional languages such as COBOL. Based on the analysis, a skills matrix is presented that can be used as a foundation for developing courses. This paper also describes a curriculum development model that can be used as a guide for curriculum revision.	cobol;information system;programmer;web application	Cheryl L. Noll;Marilyn Wilkins	2002	JITE		programming;social science;simulation;computer science;engineering;knowledge management;electrical engineering;management;information system;pedagogy	HCI	-82.60717294008901	-31.86765839548739	142953
32534404bfef1dc1a89095c85eee76da02cb1651	why do students take programming modules?	curriculum development;university student;changing motivations;programming	Programming jobs are increasingly scarce and yet an increasing number of students are taking IT and computing courses containing programming. It may therefore be that many will never need to write programs themselves. Instead the knowledge and skills may be primarily of indirect use in other IT areas. If being able to program is not the ultimate objective of students taking such modules, then the aims and objectives of curriculum developers may need to be changed accordingly. In this paper, we investigate the motivations that University students have for taking programming modules, and look at how those motivations change over time.	job stream	Paul Curzon;Janet Rix	1998		10.1145/282991.283022	programming;simulation;computer science;management	AI	-79.63255504243533	-35.83076444864982	143163
ef2c5931957eae1bc86c48134da876e5c30cca03	the manuscript as question: teaching primary sources in the archives - the china missions project		Michelle McCoy is the Bibliographic Assistant at DePaul University Special Collections and Archives and will graduate with her MLIS from Dominican University in spring 2009. She has undergraduate degrees in Art and Education. ©Michelle McCoy The collaborative effort between two Special Collections librarians and a history professor at DePaul University led to a quarter-long undergraduate project in the archives using China Missions Correspondence. In a reversal of traditional methods that assumes archival use to answer a question, this project looks at the document as the source of the questions. A qualitative analysis of student responses from these class sessions between 2002 and 2008 reveals the impact that direct experience has on primary source education and how outreach and user instruction in the archives can transform research, education, and the place of special collections within the institution. As a case study, this paper examines planning, administration, identification, instruction, and assessment of the project from the librarians’ perspective.	archive;automated planning and scheduling;librarian;michelle hinn;primary source	Michelle McCoy	2010	C&RL			Web+IR	-78.40135867661051	-32.33528048327797	143276
fb5d8128cd76bb5b7e2eddd08d9b0ca879a216f3	curricular guidance for associate-degree transfer programs in computer science with contemporary cybersecurity concepts (abstract only)	associate degree;curricular guidance;transfer programs;community colleges;cybersecurity	In 2015, under the auspices of the ACM Education Board the Committee for Computing Education in Community Colleges (CCECC) began an effort to update the ACM Computing Curricula 2009: Guidelines for Associate-Degree Transfer Curriculum in Computer Science with inclusion of contemporary cybersecurity concepts. To this end, the CCECC established a task force of community college educators to review the ACM/IEEE Computer Science Curricula 2013 (CS2013) and identify foundational material in CS2013 that is appropriate for the first two years of a computer science education. To further inform the guidance, the CCECC administered surveys to a global audience of computer science educators to solicit input related to CS2013 knowledge areas (KAs) and knowledge units (KUs) and on cybersecurity topics, which are appropriate for associate-degree computer science transfer programs. The guidance has been through two rounds of public review and comment	computer science;computer security	Cara Tang;Cindy Tucker;Elizabeth K. Hawthorne;Christian Servin;Teresa Moore	2017		10.1145/3017680.3022398	simulation;computer science;software engineering;pedagogy	Logic	-79.39870724341586	-30.900324783623635	143340
feb305e9d22ba055bc693a1015819a2dd6d7923d	a systemic mentoring model in computer science	cs1 2;course related;pedagogy;undergraduate peer mentoring;graduate;systemic mentoring	In recent years, mentoring has been widely discussed as a highly effective technique to improve students' learning in all fields of science. In this paper, we present a systemic mentoring model that helps computer science students, in particular those at the early stage of their study, more effectively learn concepts, write better programs, and conduct quality projects. The model takes advantage of faculty mentors and undergraduate and graduate peer-mentors to establish early contacts with mentees and to maintain systemic mentoring through which both the mentee and peer-mentor will learn. The mentoring relationship between mentors and mentees is established early in the semester and will continue for as long as the need for such a relationship exists. A unique feature of this model is that the mentee-mentor role might be switched depending on the problem or concepts at hand.	computer science;mentor routing algorithm	Rahman Tashakkori;James T. Wilkes;Edward G. Pekarek	2005		10.1145/1167350.1167453	medical education;simulation;medicine;pedagogy	AI	-79.0859381026129	-34.71238158828836	143417
7c1fb853a6ab67ca747b465aa0c998b70cc9a21e	it leadership in higher education: the cio candidate	personnel dp management educational institutions further education;chief information officer;employment;information systems;it leadership profiles;information technology;higher education;it executive;personnel;medical information systems;medical information system;cio;it leadership profiles higher education chief information officer university;university;information system;dp management;further education;human resource management;educational institutions employment information systems medical information systems personnel human resource management education;information technology chief information officer cio it executive higher education	What key qualifications do universities seek when hiring chief information officers, and do the responsibilities differ from ClOs in other industries? A shortage of ClOs in higher education warrants a closer look at this position. This paper explored what universities seek in and expect from a CIO candidate. We reviewed CIO advertisements to determine the key qualifications sought, the expected roles, and whether the ads included sufficient information. Our findings offer a benchmark that universities can use to build their IT leadership profiles and compare them to other industries.	benchmark (computing);chief information officer	Adam Marks;Yacine Rezgui	2011	IT Professional	10.1109/MITP.2010.102	public relations;human resource management;management;law;information technology;information system	HCI	-80.25095667573652	-27.155210568196342	144050
30be9765fdb265c9187b6888f5ace1137b433a59	design and implementation of a decision support system for academic scheduling	support system;design and implementation	The task of scheduling, especially when it affects the performance of people, is a very complex endeavor. Satisfying a variety of needs and requirements while maintaining standards for efficiency and effectiveness is difficult due to political pressures exerted by those who are scheduled. The assignment of courses to professors, timeblocks, and classrooms impacts strategic planning issues such as the need for new buildings, expansion of course offerings and admission policies. This paper describes an interactive computer system made of three interrelated subsystems: the database which stores the course, professor, and classroom information; the modeling subsystem which includes all of the mathematical models used to produce the schedules, and the dialog subsystem which is designed to allow the user to change the database, execute the models to change assignments at any time, and input priorities or other subjective inputs to produce schedules. This paper also describes analysis, design, and implementation issues that arose during the creation of a Decision Support System (DSS) to aid administrators in course scheduling activities. The constraining effects of the political environment upon decision-making and DSSs are treated through the discussion of policies and their effect on DSS design. Examples from the Spring 1985 schedule of the Anderson Schools are used to expound on the issues.	decision support system;dialog system;mathematical model;requirement;schedule (computer science);scheduling (computing)	Suleiman K. Kassicieh;Donald K. Burleson;Rodrigo J. Lievano	1986	Information & Management	10.1016/0378-7206(86)90035-2	simulation;computer science;systems engineering;engineering;electrical engineering;artificial intelligence;marketing;operations management;management;social psychology;world wide web	HCI	-86.849327611787	-27.505551172528865	144094
30c9686f8a76bdf4c1a5d39f64571bfcf5df9934	the linköping approach to technology transfer in knowledge engineering	technology transfer;knowledge engineering	A technology transfer programme, where people from industry have been educated and trained in knowledge engineering on a project basis, has been in operation since 1984 in the Computer and Information Science Department at Linkoping University. This review presents the background for the programme, its organization, examples of training projects, educational activities and plans for the future development.	information and computer science;information science;knowledge engineering	Sture Hägglund	1987	Knowledge Eng. Review	10.1017/S0269888900000898	computer science;artificial intelligence;knowledge engineering	AI	-81.60329644965115	-30.917188122158716	144199
c54a51a9ae53a9e4434b1405a81b2bd3b7fd3d12	performance testing		Performance tests are used in training evaluation to (1) certify student achievement, and (2) diagnose weaknesses in the instructional system. Proficiency measures that focus on task outcomes (product) normally provide data relevant to the first purpose, whereas measures of how the tasks are carried out (process) pertain to the second. Time or cost factors sometimes preclude the use of product measures, leaving measures of task process as the only available criteria for evaluating training outcomes. Instances in which process measures are typically substituted for product measures are described in this paper with reference to the types of tasks for which the substitution is valid and those for which it is Theoretical and practical issues pertaining to the use and misuse of process measures are discussed. (Author) Professional Paper 18-74 HumRRO PP.16.74 BES1 tO1 MIkithirit HumRRO		William C Osborn	2009		10.1007/978-0-387-73003-5_2382		ML	-85.81778189537388	-36.28327955783473	144230
035af23db57e5b1ca0532d0cd79d8f88a753e9fb	building dispositions towards models and model-based reasoning in engineering education	analytical models;model based reasoning cognitive systems decision making educational courses engineering education;first year course model based reasoning engineering education free form sketch formal diagram computational model decision making cognitive dimension student modelling;inference mechanisms;computational modeling mathematical model analytical models atmospheric modeling inference mechanisms inductors equations;computational modeling;inductors;mathematical model;atmospheric modeling;aerospace engineering modeling model based reasoning capstone design chemical engineering	This panel will address the challenge of promoting dispositions towards and mastery of model-based reasoning and modeling practices. Free-body, circuit, and multi-unit process diagrams are fundamental engineering tools for transforming poorly articulated and ill-constrained problems into manageable, solvable problems. For engineers in industry or research, free-form sketches commonly inform back-of-the-envelope estimations and calculations, while more formal diagrams and computational models are essential to design decision-making. This panel will explore the cognitive dimensions and learning challenges associated with modeling as a way of engaging and understanding the world. The panel will start with unpacking the cognitive demands/loads associated with transforming a text to a diagram. We will then present research on student modeling across a spectrum of first year courses to capstone design and across three sub-disciplines - biomedicai, chemical and aerospace engineering.	capstone (cryptography);cognitive dimensions of notations;complex systems;computation;computational model;decision problem;diagram;iterative method;list of concept- and mind-mapping software;mathematical model;model-based reasoning;pedagogical agent;simulation;software prototyping;solver	Alexandra E. Coso;Joseph M. Le Doux;Wendy C. Newstetter;Alisha A. Waller;Milo D. Koretsky;Audrey B. Champagne	2014	2014 IEEE Frontiers in Education Conference (FIE) Proceedings	10.1109/FIE.2014.7044419	simulation;computer science;artificial intelligence;management science	SE	-85.37448710637003	-34.579998850387234	144882
177a0f61d2a8002acf3d032eee556d8d49000024	workshop 2: first year software engineering	first year;software engineering	We envisage this workshop as a chance for Software Engineering Educators to share their challenges, successes and failures in teaching Software Engineering concepts to First Year (or beginning) students The specifics of the workshop will depend to some extent on the interests of the participants, but as a basis for organisation and discussion we will ask all participants to fill in a questionnaire to be provided in the conference registration kits. We will begin the workshop by sharing the basic results of the questionnaires and then ask participants to share their biggest challenges in teaching Software Engineering to beginners, what they have done that has been successful (and any things they have tried that didn't work), what students have trouble understanding, what topics may not even fit in an introductory course, ... We will then break the group up into interest groups on particular topics (eg. reuse, programming, professionalism, design, testing...) and those groups will brainstorm about one particular issue. The workshop will end with the groups sharing ideas. Our hope is that this workshop will not only be useful in and of itself but will also provide a springboard for participants to find colleagues with similar interests and enthusiasms Proceedings of the 15th Conference on Software Engineering Education and Training (CSEET02) 1093-0175/02 $17.00 © 2002 IEEE	brainstorm;software engineering	Lynda Thomas;Mark Ratcliffe	2002		10.1109/CSEE.2002.995221	engineering ethics;computer science;engineering	SE	-81.48636030178665	-34.07687214468264	144996
0a08ca5569a53bc0337ad6787bb6382532ac0a07	how developers acquire floss skills		With the increasing prominence of open collaboration as found in free/libre/open source software projects and other joint production communities, potential participants need to acquire skills. How these skills are learned has received little research attention. This article presents a large-scale survey (5,309 valid responses) in which users and developers of the beta release of a popular file download application were asked which learning styles were used to acquire technical and social skills. We find that the extent to which a person acquired the relevant skills through informal methods tends to be higher if the person is a free/libre/open source code contributor, while being a professional software developer does not have this effect. Additionally, younger participants proved more likely to make use of formal methods of learning. These insights will help individuals, commercial companies, educational institutions, governments and open collaborative projects decide how they promote learning.	download;formal methods;open collaboration;open-source software;software developer;software release life cycle	Ann Barcomb;Michael Grottke;Jan-Philipp Stauffert;Dirk Riehle;Sabrina Jahn	2015		10.1007/978-3-319-17837-0_3	knowledge management;computer science;learning styles;source code;formal methods;software;social skills;download;informal learning;competence (human resources)	HCI	-83.02690693992736	-34.124566505558136	145159
8cfa8604079d52887515eb6f3b9c4a684f79f0e9	an algebraic formula manipulation system for education and its implementation on different pcs	algebraic formula manipulation system;miyagi prefecture society;nihongo apl;high school education;mathematical concept;mathematical education;different pcs;actual use;porting study file;apl study file;computer model;computer study group;mathematics education;compiler;object oriented programming;machine code;c;mathematical modelling	When studying the application of APL to high school education to help students in their understanding of mathematical concepts, many teachers encountered difficulties in that the result of their study could not be used in their classes because schools had provided them with computer models which can not run APL. The authors and their co-workers of the Computer Study Group of MiYagi Prefecture Society of Mathematical Education found a way to solve such a difficulty by porting study files from NiHonGo APL to I-APL. This paper discusses the problems encountered in classrooms, the new system applied to three popular models of personal computers, the actual use of the APL study files in eight schools for learning polynomial factorisation, and evaluation of both teachers and students.	apl;computer simulation;factorization of polynomials;monoid factorisation;personal computer;polynomial	Makoto Kikkawa;Koichi Sugawara;Yukio Washio	1994		10.1145/190271.190289	computer simulation;mathematics education;compiler;machine code;computer science;artificial intelligence;theoretical computer science;operating system;mathematical model;mathematics;programming language;object-oriented programming	HCI	-84.64445944113953	-37.62773312184609	145419
6fa70687b074850a7371af87b20f5dacbc0e9f53	closing the gender and underrepresented minority gap in cs: uteach computer science principles ap assessment results (abstract only)		Gender and racial/ethnic participation gaps in computing is a well-documented problem motivating several interventions aimed at attracting and retaining women and underrepresented students (Black or African American, Latinx, and Native American students) in this high-need area. One such effort is the College Board's Computer Science Principles (CSP) course, a survey course designed to engage students who have traditionally opted-out of computer science in secondary education. UTeach CSP is UTeach's Project-Based Learning (PBL) curriculum designed for the CSP course. Students learning from teachers implementing the UTeach CSP curriculum scored higher on the 2017 College Board AP CSP assessment, when compared with students taught with other curriculum. Scores were significantly higher for girls and Latinx students, even after adjustments were made to standardize the demographic characteristics of the schools where the UTeach CSP curriculum was implemented. This poster presents curriculum design research that suggests explanations for the higher results. The research can also provide CS teachers with ideas for moving beyond traditional lecture-based CS instruction for increased student performance and more diverse engagement. Handouts will be provided with a sample UT CSP project including lesson plan, student handout, video link, pacing guide, assessment, and rubric.	closing (morphology);computer science;the hitchhiker's guide to the galaxy;videotelephony	Carol Ramsey;Justin Cannady;Michael DeGraff	2018		10.1145/3159450.3162286	curriculum;knowledge management;lesson plan;medical education;rubric;computer science;equity (finance);underrepresented minority;ethnic group;design research;psychological intervention	AI	-79.40227789959184	-35.03035309167487	145420
14ce879cfe887229fb0b6c5a9c2a15288f79236d	evaluation of simulation games for teaching engineering and manufacturing	evaluation methods;manufacturing;engineering;evaluation	This paper reports on the evaluation methods and findings from serious games for teaching engineering and manufacturing. Two serious games are considered: Cosiga, a new product development simulation game and Beware, a risk management simulation game. These two games cover the front and middle parts of the engineering process from design to manufacture to sale. For the Cosiga simulation evaluations of the communication and cognitive change were performed. For the Beware game evaluation of communication, risk awareness and improvement of risk management skills were performed The findings from the evaluations showed that serious games deliver learning outcomes. However, there are drawbacks to their use that need to be taken into account. Principally the high cost of development and the need for expert facilitators for running game sessions. © 2012 The Authors. Published by Elsevier B.V. Selection and/or peer-review under responsibility of the scientific programme committee of VS-Games 2012 keywords: Serious Games; Evaluation; Evaluation Methods; Engineering; Manufacturing.	methods engineering;new product development;risk management;simulation	Jannicke Baalsrud Hauge;Johann c. k. h. Riedel	2012		10.1016/j.procs.2012.10.073	simulation;knowledge management;game developer	HCI	-83.32615823802229	-29.871321536426237	145580
79618bfced151cc0b4795d30049c0450c9f5f1f2	the training of teachers in the use of computers in the classroom.	computer program;data processing;special needs;fortran;teaching methods	Since the use of computers is increasingly common in school administrative and instructional programs, teacher and administrator training is of utmost importance. Teachers and administrators are being called upon, increasingly, to make important and costly decisions regarding curriculum content, computer languages, and equipment, as well as the administrative side regarding scheduling, trade reporting, budgeting, etc. Too often these teachers and administrators have had little or no appropriate preparation for this responsibility.  Traditional college and university courses in computer programming or data processing have not been suitable for the special needs of teachers or administrators. The typical course is FORTRAN programming with no exploration into the why or the how of computers, no discussion of appropriate teaching methods and materials, and no motivation in using the computer to extend instruction.	computer language;computer programming;fortran;scheduling (computing);teaching method	Pamela McGinley	1972		10.1145/800273.809358	mathematics education;computer science;multimedia;pedagogy	AI	-78.6667499912707	-35.47142362996228	145933
3613d13d5272fc7255f223cb4516180d177194aa	development of a classification scheme for “introduction to engineering” courses	first year;design engineering;robots educational institutions wheels cultural differences design engineering matlab algebra;forecasting theory;algebra;introduction to engineering classification scheme first year;educational courses;robots;engineering education;delphi analysis classification scheme introduction to engineering courses course learning objectives delphi procedure first year course delphi study;introduction to engineering;matlab;forecasting theory educational courses engineering education;classification scheme;wheels;cultural differences	“Introduction to Engineering” courses are often designed from scratch and can become a grab-bag of unrelated topics. They are often designed by instructors to cover what they feel is important. Therefore, while they may be prerequisites to second-year courses, first-year engineering programs are not necessarily integrated into the curriculum. Further, since they are often designed with little consideration for existing models, overall outcomes and content may vary widely. The results include an issue of course developers “reinventing the wheel” as successful models are not adequately disseminated. Results of multiple methods of investigation are presented. An analysis of syllabi for Introduction to Engineering courses identified course learning objectives, and these objectives were grouped to establish an initial classification scheme. A workshop in which objectives were discussed was held at a national conference and a separate draft classification scheme was proposed. A concurrent effort uses a Delphi procedure to define and categorize expected outcomes in first-year courses. Survey data from the Delphi study has been collected toward a single, final classification scheme. This paper will present results of the first two components of the study and the initial high level classification scheme identified as the Delphi analysis begins.	categorization;cellular automaton;embarcadero delphi;high-level programming language;reinventing the wheel	Kenneth J. Reid;David Reeping;Tyler Hertenstein;Graham Fennel;Elizabeth Spingola	2013	2013 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2013.6685101	simulation;engineering;mechanical engineering	SE	-81.81548659970287	-34.19436113833613	145995
dd2b13be350be2f59c7cdff6c01ede541440183f	model rocket workshop: a project-based learning experience for engineering students	rocketry;model rocket workshop;transversal skills;problem based learning;article;project based learning	A Problem-Based Learning (PBL) experience for undergraduate students of aerospace engineering is described in this paper. The experience allows the students to build a model rocket using materials which can be easily obtained. They also compute all the relevant quantities to design and characterize the rocket and they test the robustness of their design. They furthermore launch the rocket with the corresponding payload and verify the flight parameters using an on-board altimeter. Finally, they also compare the flight parameters with the theoretically expected values. Using this simple scheme the students are later introduced in the simulation of complex flows, using standard techniques. We find that our students get rapidly involved in the project, allowing them to acquire several practical abilities, besides developing an accurate knowledge of the physics of rockets and of fluid dynamics.	coherence (physics);design of experiments;on-board data handling;requirement;simulation	Jose I. Rojas;Xavier Prats;Adeline Montlaur;Enrique García-Berro	2008	iJET	10.3991/ijet.v3i4.290	simulation;computer science;artificial intelligence	HCI	-87.74613169807081	-36.48382711590415	146282
a0b7fe27600d9c0b28997f108d38c36baa52102c	student projects integration to university microsystem center	student experiments;electrical capacitance tomography;czech republic;student project;study attraction;czech republic microelectronics education student projects integration technical university teaching process efficiency study attraction postgraduate students undergraduate students;integrated optics;research and development;postal services;microelectronics education;chemical elements;student projects integration;electronic engineering education;teaching process efficiency;biological materials;microelectronics education electrical capacitance tomography chemical elements biomedical optical imaging integrated optics research and development postal services biological materials optical materials;microelectronics;biomedical optical imaging;student experiments integrated circuits electronic engineering education;optical materials;postgraduate students;integrated circuits;undergraduate students;technical university	Improvement of the teaching process efficiency and the study attraction is at present one of the most important problems of technical universities. This article states the possible solutions of the problem as a close contact between the scientific activity and teaching at universities. Undergraduate and postgraduate students take part in the scientific activity of the departments. The students have possibility to make use of the departments' contacts with other universities and institutes, including foreign ones. Centre of Microsystems (CEMIS) established at CTU Prague corresponds with these trends.		Miroslav Husak	1999		10.1109/MSE.1999.787039	engineering;electrical engineering;engineering physics;microelectronics;chemical element;mechanical engineering	NLP	-83.44742043832109	-31.685630921437703	146841
90ab8c8eb98e9e40f05b444d3c881c0b7c8a0ad2	acm core it learning outcomes for associate-degree programs	information technology;two year college	As directed by the ACM Ed Board, the ACM Committee for Computing Education in Community Colleges (ACM CCECC) is engaged in defining the core IT learning outcomes which should be common to all associate-degree IT programs, assembled into a framework of defined domains and accompanied by assessment rubrics. The results are now being made available.		Elizabeth K. Hawthorne;Robert D. Campbell	2013		10.1145/2462476.2465600	simulation;computer science;software engineering;information technology	Theory	-79.19733044665102	-32.055321845304476	146979
f75b0dc6a1452aef720e875d5adcd0b8b5e8b479	best practices in software engineering project class management	group project;best practice;software engineering;real projects;class management;group projects	An increasing number of institutions require software engineering as part of their computing curriculum. Technical managers and hiring personnel of many software development companies cite familiarity with software engineering principles among the top skills required for entry-level computing positions. Furthermore, technical managers and hiring personnel often consider experience with real-world group projects to be a necessary part of the computing background of prospective new hires. These conclusions are based on systematic discussions with technical and human resources personnel at 13 large Midwestern companies (50+ developers) over the past seven years (J. Beck, unpublished data, 2001–2008). Unfortunately, many computing students never benefit from the experience of a real project during their undergraduate studies. The experiences of many students are limited to toy textbook problems assigned to small groups, which means they miss out on a vitally important part of their computing education. Three areas of particular concern for providing students with class projects that incorporate real-world hurdles within the classroom are:	best practice;experience;prospective search;software development;software engineering	Jon Beck;Vicki L. Almstrum;Heidi J. C. Ellis;Massood Towhidnejad	2009		10.1145/1508865.1508939	project 112;project management;engineering management;team software process;extreme project management;program management;software engineering process group;extreme programming practices;software project management;opm3;systems engineering;social software engineering;application lifecycle management;project management 2.0;project management triangle;software development process;project planning;best practice;project portfolio management	SE	-82.5848639460135	-33.35685167094344	147108
557465486e280a6c5c018e5b8d3203c55a175708	"""restoring """"coding with intention"""" in introductory programming courses"""	cs 1;evolutionary computation;active learning;pair programming;introductory programming;live coding;constructive alignment;test harness;evolutionary epistemology;constructive alignment theory;introductory programming courses;evolutionary computing	"""This descriptive study discusses two conceptual difficulties encountered by students in introductory programming courses regardless of the chosen language or pedagogical approach (e.g. objects, classes or fundamentals first). Firstly, students tend to learn programming by memorizing correct code examples instead of acquiring the programming thought process. Secondly, they tend to read code by """"flying"""" over it at a comfortable altitude while thinking to its assumed intent. While relaxing, this practice fails to train students to develop the rigor to catch bugs in others' or their own code. Both trends result in an almost complete loss of intentionality in the programming activity; un-innovative code is generated by analogy with (or cut and paste from) existing solutions and is then almost randomly modified until """"it fits"""" the minimal tests requirements without real analysis of its flaws. We review and evaluate pedagogical strategies which can be leveraged by instructors to address the above mentioned issues. Namely, we discuss the benefits of various forms of """"Live coding"""" and test-driven pair programming active learning practices."""	cut, copy, and paste;fits;intentionality;live coding;pair programming;randomness;requirement;resource bounded measure;software bug	Alessio Gaspar;Sarah Langevin	2007		10.1145/1324302.1324323	simulation;pair programming;reactive programming;computer science;engineering;electrical engineering;artificial intelligence;theoretical computer science;active learning;programming paradigm;procedural programming;symbolic programming;inductive programming;management;pedagogy;evolutionary computation;test harness	PL	-82.4464565818423	-35.8533263310359	147308
474e4f5eefeb59c5e4a3dc6f40c4073cc1ed7f5b	student contributions to humanitarian free and open source software (hfoss) (abstract only)	humanitarian free and open source software	Can students contribute to HFOSS projects as part of their computing curriculum? How and at what level can HFOSS be integrated? What are the success stories and challenges? This BOF will be led by a diverse group of faculty who have incorporated HFOSS into their classes. They will lead a discussion on the various approaches, successes and challenges they have encountered. Their experiences will provide a backdrop for this BOF session, which should lead to a lively discussion of how and why to use HFOSS in computing courses. Faculty who are interested in HFOSS, but who are novices, will learn about potential projects and classroom materials as well as make connections with more experienced faculty in this area.	backdrop cms;lively kernel;open-source software	Lori Postner;Stoney Jackson;Ben Coleman;Suzanne Mello-Stark;Samuel A. Rebelsky	2015		10.1145/2676723.2691844	simulation;computer science;knowledge management;software engineering;management science;pedagogy	SE	-80.31705080496175	-32.195354652771094	147692
9fb5adb31fa9447a8c128df5de56506472e28f78	leveling the cs1 playing field	recruitment and retention;gender;is success;recruiting and retention;underrepresentation	This paper includes several reasons for the underrepresentation of women in computing, and then describes two low-cost project instances that address the reasons for the decline in women's enrollment in computing classes. One project spans seven semesters from fall 2000 to spring 2006 at a small liberal arts school; the other, the spring 2006 semester at a large research institution. Concluding sections provide anecdotal and statistical evidence that the project is successful over two time periods within two diverse schools.	critical section;women in computing	Gloria Childress Townsend;Suzanne Menzel;Katie A. Siek	2007		10.1145/1227310.1227428	simulation	HPC	-79.29048628306585	-32.13100967865948	147760
68442126b27b966eee990198f669ede45c3dbb99	teaching practical software engineering and global software engineering: evaluation and comparison	local group;positive feedback;software engineering;software engineering education;global software engineering;assessment methods;face to face;san francisco;teaching practice	"""Changes and globalization of software (SW) development urgently require new ways of teaching and training students in practical and global SW engineering (SE). In this paper we present the innovative methods and experiences from several years of teaching practical and global SW engineering at the Computer Science Departments of San Francisco State University (SFSU), USA in conjunction with the University of Applied Sciences, Fulda University, Germany. We also provide analysis and evaluation of class effectiveness based on several assessment methods including extensive student questionnaires, with our recommendations for teaching such SE classes. Our approach was to combine and synchronize class teaching about SW engineering methods and processes with actual SW development work in a setting designed to simulate a small SW company. Students were divided in """"local"""" groups of 4-6 members, each group forming small SW """"companies"""" in charge of developing a complete working WWW application as a final class project. Several smaller groups of students at SFSU were paired with groups of students at Fulda University, whom they never met face to face, to form """"global"""" groups, thus simulating global SW engineering in a realistic setting. Students developed their final project incorporating five well-defined milestones typical for full SW development lifecycle. Instructors spent considerable time supervising and interacting with student """"companies"""" in the role of company customers, CTO and VPs of engineering, marketing and sales. All student groups (including global ones) were able to produce impressive final project applications and provided very positive feedback for this class."""	computer engineering;computer science;final (java);interaction;positive feedback;shattered world;simulation;software engineering;www	Dragutin Petkovic;Gary D. Thompson;Rainer Todtenhoefer	2006		10.1145/1140124.1140202	simulation;positive feedback;computer science;software engineering	SE	-82.2319935926037	-34.18707830985906	147852
0b33691f2f3ef6bd87b66c01813eaecca8293234	the site machine computer-aided instruction in architectural education	architectural education;computer aided instruction;computer graphic;research and development;spatial model;problem solving	THE SITE MACHINE is one of two prototype, graphics-based programs written to evaluate the potential of computer-aided instruction (CAI) programs in architectural education. Some CAI systems are now highly developed but almost no use has occurred in architectural education. The special characteristics and diverse nature of architectural education as well as the requirement for fast, high quality graphics, especially in the design areas, requires special applications and consideration.  THE SITE MACHINE was a research attempt in open ended problem solving at the high end of a hierarchy of computer use in CAI in architecture. The major objectives of the test programs were:  1. To determine the feasibility of implementing viable CAI programs using existing computing resources at reasonable development and user costs and to determine the useability of existing developed programs, techniques, capabilities and algorithms from CAI, computer graphics, mathematical and spatial modeling.  2. Identify problems of acceptance and use by present faculty members, compatability and ease of integration in the curriculum, acceptance, use and motivation of student users.  3. Develop test programs that will identify student differences in learning, recognize subject mastery and demonstrate that learning has occurred.  4. Test initial ideas, concepts, instructional models and provide guidance and direction for future research and development efforts.	algorithm;computer graphics;display resolution;problem solving;prototype;usability	Edward F. Smith	1977			simulation;computer science;engineering;multimedia;programming language;computer engineering	Arch	-80.46058634139531	-36.53247027261538	147913
9939320a6bbcad4fe78fd31aa4e33b31d3c26453	research on the relevant issues of intellectual property management in colleges and universities	technological innovation;intellectual property;training;patent application intellectual property management colleges universities technological innovation china;law;intellectual property technological innovation personnel patents law training;personnel;patents;patents educational institutions innovation management;management system intellectual property management of intellectual property	As the main force of original innovation, the college is the source of technological innovation and the important subject in creating intellectual properties in China. In recent years, colleges in our country are paying more and more attention in intellectual property, what's more, the amount of patent application and authorization volume increased year by year. However, the colleges' management of intellectual property is still weak because the management system is not absolutely perfect and there is lack of attention on intellectual property. Therefore, strengthening the management of intellectual property is the urgent and core problem to be solved.	authorization;knowledge management	Jing Zhou;Juanjuan Du	2016	2016 International Conference on Logistics, Informatics and Service Sciences (LISS)	10.1109/LISS.2016.7854352	engineering management;actuarial science;business;management	EDA	-84.04384604864575	-30.68914664664542	147941
ba9fa06d17628a9ec02caae0be93da244cba522c	self-efficacy beliefs, computer training and psychological well-being among information and communication technology workers	computadora;information communication technology;belief;ordinateur;hombre;computer;travailleur;information and communication technology;croyance;efficacite personnelle;computer self efficacy;self efficacy;psychological well being;eficacia personal;computer attitude;bien etre psychologique;human;bienestar psicologico;actitud;worker;creencia;computer training;attitude;nueva tecnologia informacion comunicacion;technologie information communication;homme;trabajador	This study examines the factorial structure of self-efficacy and the relationship among different levels of self-efficacy (i.e., generalised, professional and computer) and psychological well-being and training among Information and Communication Technology (ICT) workers. The sample was made up of 496 workers from different occupational sectors using ICT in their jobs and a subsample of these workers who were trained in ICT. Results show that (1) the generalised-specific structure is maintained in the three levels as expected but in fours factors: i.e., generalised selfefficacy, professional self-confidence, achieving professional objectives and computer self-efficacy. (2) There is a negative and significant relationship between self-efficacy and different psychological well-being indicators. (3) Computer attitudes moderated the relationship between computer training (i.e., number of training hours) and professional self-confidence. So far, workers with high positive attitude towards ICT, when number of hours are high, their levels of professional self-confidence increase, but it depends on the number of training hours (i.e. more training hours, more selfconfidence). However, workers with low levels of positive attitude towards ICT experimented a decrease in professional self-confidence. In conclusion, training has not a direct influence on selfefficacy but moderated by type of training. Limitations of the study and practical implications of these findings are discussed. 2004 Elsevier Ltd. All rights reserved.	job stream	Maria Isabel Beas;Marisa Salanova	2006	Computers in Human Behavior	10.1016/j.chb.2004.03.027	psychology;information and communications technology;simulation;social psychology	HCI	-86.57554877269372	-24.014657840879003	148019
02fbc6a93a6e93ae25444b2f476738cb25cfe3ff	formal research experiences for first year students: a key to greater diversity in computing?		Underrepresented students in computing (women and non-White/non-Asian men) are known to feel a weaker sense of belonging than majority students (Asian/White men). This difference is important because a low sense of belonging can lead to disengagement and attrition in education settings. In the current study, we assessed whether and how early formal research experience might narrow this gap in sense of belonging. The sample for this study derives from a longitudinal study on undergraduate students affiliated with computing departments across the United States. We used propensity scores to generate an appropriate sub-sample of students to compare against formal research participants (n = 110 formal research students; n = 110 students with no formal research experience). We found formal research experience during students/ first year was associated with a strong sense of mentor support during their second year. Perceived mentor support predicted a strong sense of belonging for underrepresented students, but not majority students. Importantly, the typical gap in sense of belonging among underrepresented and majority students disappeared among students with high mentor support. Our work suggests that formal research, when introduced early, might promote greater diversity in computing in the long term. We present a model for early undergraduate research, and resources for readers who wish to adopt the model.	attrition (website);diversity in computing;propensity score matching	Jane Stout;N. Burçin Tamer;Christine J. Alvarado	2018		10.1145/3159450.3159472	knowledge management;disengagement theory;computer science;mentorship;pedagogy;undergraduate research;longitudinal study	HCI	-79.01683216909922	-35.0912828352908	148031
2e2a8efba5c07b9c40c4a76a7b38bc53e9b78e9f	the impact of new accreditation and certification standards for secondary computer science teachers on university computer science departments	technology in education;developing nations;teacher preparation;professional education	The establishment of accreditation and certification standards for secondary computer science teachers has been taking place over the past 5 years. The ACM has taken the lead in developing certification standards for adoption by states and the International Society for Technology in Education (ISTE) has taken the lead in developing national accreditation standards for teacher preparation programs through affiliation with NCATE, the accrediting body for professional education units in the USA. The impact of institutionalizing these new standards is discussed, and the role that university computer science departments should now take in the teacher preparation process is described.	computer science	Harriet G. Taylor;C. Dianne Martin	1992		10.1145/134510.134557	professional development;developing country;science education;accreditation;certification;certification and accreditation;national science education standards	Theory	-77.63575562325084	-30.9824721586878	148130
e435d02025c6fe595528d64d235e41838035cda1	six years of systematic literature reviews in software engineering: an updated tertiary study	tertiary studies;systematic reviews;systematic review;software engineering;systematic literature review;mapping studies	Context: Since the introduction of evidence-based software engineering in 2004, systematic literature review (SLR) has been increasingly used as a method for conducting secondary studies in software engineering. Two tertiary studies, published in 2009 and 2010, identified and analysed 54 SLRs published in journals and conferences in the period between 1st January 2004 and 30th June 2008. Objective: In this article, our goal was to extend and update the two previous tertiary studies to cover the period between 1st July 2008 and 31st December 2009. We analysed the quality, coverage of software engineering topics, and potential impact of published SLRs for education and practice. Method: We performed automatic and manual searches for SLRs published in journals and conference proceedings, analysed the relevant studies, and compared and integrated our findings with the two previous tertiary studies. Results: We found 67 new SLRs addressing 24 software engineering topics. Among these studies, 15 were considered relevant to the undergraduate educational curriculum, and 40 appeared of possible interest to practitioners. We found that the number of SLRs in software engineering is increasing, the overall quality of the studies is improving, and the number of researchers and research organisations worldwide that are conducting SLRs is also increasing and spreading. Conclusion: Our findings suggest that the software engineering research community is starting to adopt SLRs consistently as a research method. However, the majority of the SLRs did not evaluate the quality of primary studies and fail to provide guidelines for practitioners, thus decreasing their potential impact on software engineering practice. 2011 Elsevier B.V. All rights reserved.	software engineering;systematic review	Fabio Q. B. da Silva;Andre Luís de Medeiros Santos;Sérgio Soares;A. César C. França;Cleviton V. F. Monteiro;Felipe Farias Maciel	2011	Information & Software Technology	10.1016/j.infsof.2011.04.004	systematic review;engineering;management science;operations research	SE	-81.27924315129512	-26.740777511021182	148194
989631af413c4ef380b2b16a84d1d845fce1e874	experiences mapping and revising curricula with cs2013	computing curricula 2013;cs2013;computer science	1. SUMMARY Roughly once per decade, the ACM and IEEE-Computer Society form a joint task force to survey the discipline and produce curricular guidelines for undergraduate computer science programs. The latest guidelines document, Computer Science Curricula 2013 (CS2013), was released in the Fall of 2013 after multiple rounds of public review and feedback. A significant novel feature of CS2013 is the structuring of the Body of Knowledge core topics into two tiers. While Core-Tier1 topics are expected to be included in every undergraduate computer science program, individual programs may choose to cover only a subset of Core-Tier2 topics, depending upon institutional size, resources, and goals. CS2013 recommends at least 80% coverage of CoreTier2, which provides flexibility for designing curricula that meet institutional constraints while still maintaining disciplinary standards.	computer science	David Reed;Andrea Danyluk;Elizabeth K. Hawthorne;Mehran Sahami;Henry MacKay Walker	2014		10.1145/2538862.2538864	computational science;computer science	AI	-79.64885867602563	-30.019742582443616	148257
4995b81eb6f7a528bfbe4b6b66081aec9c74ec1b	bilingual triage (is there an app for that?)	medical services context computers cultural differences visualization software;healthcare;visual design;visual design digital applications healthcare translation;digital applications;translation;my professional communication students bilingual triage visual translation triage system mobile unit print visual aids digital interfaces;mobile computing computer aided instruction language translation	My Professional Communication students developed a visual translation triage system to assist non-Spanish-speaking health professionals delivering healthcare near farmworker camps via a mobile unit. The sites themselves presented challenges as well as the process of moving our applications from print visual aids to digital interfaces. 60 workers arrived at dusk, and one translator and 4 nursing practitioner students were to triage them for the physician and nurse in the mobile unit. Our best practices included researching sites prior to recruiting students, teaching foundational work in international and visual communication, building collaborative teams that included healthcare experts and native speakers of Spanish, and garnering institutional support from an on-campus clinic. Moving the translation system from print to digital presented other challenges. Our lessons learned included determining the most effective digital platforms, expanding our teams to include computer engineers, understanding the difficulties of an added layer of cross-disciplinary work and determining the fit of our project with NIH grants.	best practice;computer engineering;machine translation	Barbara A. Heifferon	2015	2015 IEEE International Professional Communication Conference (IPCC)	10.1109/IPCC.2015.7235816	translation;simulation;human–computer interaction;computer science;multimedia;world wide web	Visualization	-78.06870023381181	-35.468786101023234	148273
fe127c074a78e775543f2f013302f9830a8f555e	assessing teamwork performance in software engineering education: a case in a software engineering undergraduate course	collaborative learning;software engineering;software project management;software engineering education;team working;teamworks;teamwork skill assessment teamwork performance assessment software engineering education software engineering undergraduate course software engineering professional teamwork skill development;computer science education;educational courses;engineering education;team working computer science education educational courses software engineering;software engineering teamworks collaborative learning engineering education;teamwork software engineering software education project management collaborative work	Teamwork skills are important and even essential for software engineering professionals. Although there are rich research results on teamwork skill development and assessment in other engineering disciplines, more research is required on effective approaches in software engineering education as teamwork plays a more fundamental role with some special requirements. This paper presents a novel assessment approach for teamwork performance in software engineering education. The approach has been used in several software engineering courses and the results are positive and promising. A novel feature of the approach is that it encourages and supports student active and collaborative learning by using an approach specially assessing teamwork performance of a team and each team member of the team. Another feature is that it can be tailored to different requirements and software engineering courses. We illustrate the approach by a case that uses the approach in software project management course. Limitations of the approach and further work are also discussed.	requirement;software engineering;software project management	Jian Chen;Guoyong Qiu;Liu Yuan;Xiang Lin;Gang Lu	2011	2011 18th Asia-Pacific Software Engineering Conference	10.1109/APSEC.2011.50	engineering management;collaborative learning;personal software process;team software process;engineering education;software engineering process group;software project management;systems engineering;engineering;knowledge management;social software engineering;software development;software engineering;software walkthrough;software development process;software peer review	SE	-83.06778188071873	-34.14256336833159	148387
272a07829869ad076a1784a624be7eaa7353affb	analysis of water distribution networks using matlab and excel spreadsheet: q-based methods		The need for computer application for solving water distribution networks (WDNs) is inevitable for both educational and practical purposes. In this paper, three h-based methods for solving WDN including h-based Newton–Raphson method, finite element method, and gradient algorithm are implemented using MATLAB and Excel spreadsheet. The input data should be first inserted into Excel spreadsheet while MATLAB codes utilize this data to solve the pipe network. The output results are also presented in Excel for convenience. As educational facets of this application was the main focus of this paper, the details of this computer application were step-by-step explained with codes. Furthermore, a simple network selected from literature was analyzed using the three h-based methods. Finally, the presented codes and this computer application are believed to encourage many educators and applicants to assess them for both educational and practical purposes in this engineering field. © 2017 Wiley Periodicals, Inc. Comput Appl Eng Educ 25:129–141, 2017; View this article online at wileyonlinelibrary.com/journal/cae; DOI 10.1002/cae.21786	matlab;spreadsheet	Majid Niazkar;Seied Hosein Afzali	2017	Comp. Applic. in Engineering Education	10.1002/cae.21796	matlab;finite element method;computer science;theoretical computer science;computational science	AI	-87.09759100496187	-37.83675619815407	148976
80ebbeb41ed1a8a1ebf2480904aedc1372746e64	teaching research on data structure based on knowledge structure	computers;software;course design knowledge structure data structure teaching research;course design;science and technology;student motivation;students motivation teaching research data structure knowledge structure computer science and technology specialty courses;binary trees;computer science education;computer science and technology specialty courses;human factors;teaching computer science education data structures educational courses human factors;knowledge structure;data structures;educational courses;students motivation;computer science;education data structures computer science software engineering tree data structures operating systems algorithm design and analysis mathematics hardware organizing;teaching research;data structure;teaching methods;algorithm design and analysis;teaching	At first, this paper studies the status of data structure in the courses for computer science and technology specialty and its knowledge structure. Then, teaching method based on knowledge structure is proposed to raise students¿ motivation, to organize teaching contents reasonably, to select topic scientifically, and so forth.	computer science;data structure;teaching method	Gu Yue-sheng;Zhu Jia-yi	2008	2008 International Conference on Computer Science and Software Engineering	10.1109/CSSE.2008.168	mathematics education;algorithm design;data structure;applied mathematics;binary tree;computer science;knowledge management;teaching method;programming language;science, technology and society	SE	-83.7961876837247	-36.86817439602537	149042
c72e9dac0bceab7fb2f015571eff3cafe4270306	observations on teamwork strategies in the acm international collegiate programming contest	teamwork strategy;acm international collegiate programming	Thirty years ago, the first International Collegiate Programming Contest (ICPC) [5] was held by the Association for Computing Machinery (ACM) [1]. Since then, the number of universities participating in this challenge has increased each year. It is not just a programming contest; it challenges contestants' algorithmic knowledge, coding skills, ability to cope with stress, and ability to cooperate efficiently within a team.	acm international collegiate programming contest;algorithm;computer programming	Saman Amirpour Amraii	2007	ACM Crossroads	10.1145/1349332.1349341	simulation;multimedia	Graphics	-80.13483233488485	-31.421237192832862	149176
1f5b1fa9ada62a5ae150e76c5098a9b5a22913c3	socio-technical factors of scholarly communication in an institutional repository context		This exploratory study uses a phenomenological approach to examine faculty attitudes in an institutional repository context as well as the socio-technical factors that affect scholarly communication and data sharing practices. The author conducts interviews and observations with Environmental Studies faculty at two large public research universities. This article reports preliminary results, though data transcription and analysis are ongoing. The author plans to analyze interview transcriptions to find dominant themes. The themes will inform recommendations to improve institutional repository services for the stakeholders.	scholarly communication;sociotechnical system;transcription (software)	Nathan Hall	2013	TCDL Bulletin		sociotechnical system;institutional repository;business;scholarly communication;knowledge management	HCI	-80.01645680179051	-25.512420207380252	149268
a1de2b6d4fca75c987ad9c35056442cf430206e3	teaching entrepreneurship in computer science: lessons learned		Many Computer Science departments are offering courses in Entrepreneurship. Views vary widely on the purpose, appropriateness and value of this as a topic area for students majoring in Computer Science — hence the title of this paper. We begin by exploring the meaning of the term, and review representative examples of Entrepreneurship programs in different Computer Science departments, looking at their stated goals and outcomes. We then describe our own experience designing and teaching a new, two-part, yearlong course on “Software Entrepreneurship” at Brandeis University, we extensively explore important lessons learned from this experience. Our program includes two interlocking courses, one focused on the “discovery stage” and one focused on the “delivery stage”. We briefly describe the structure, learning objectives and overall flow of the courses. We then examine, in turn, a series of common challenges and our solutions and innovations in each: a) forming well-functioning student teams; b) choosing the appropriate size of teams; c) catalyzing innovation in the student teams; d) encouraging positive team dynamics and dealing with crises; e) defining the final deliverable; and f) deploying outside experts and g) assessments at the end of the course. To get a handle on the effectiveness of our approach we present a selection of student written reflections on their experience, how they felt it impacted them, and to what extent they see entrepreneurship in their own future. We conclude by identifying two broad areas for future work and study.	amiga reflections;computer science;crisis (dynamical systems);emoticon;norm (social);software entrepreneurship	R. Pito Salas	2017	2017 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2017.8190664	knowledge management;entrepreneurship;deliverable;software;teamwork;flow (psychology);computer science	DB	-80.48633854044772	-31.43313117704568	149441
050a172a796c7e337ad870512c214d1b7142ea9e	a practical approach for converting group assignments into team projects	team learning;perforation;student experience;teaching engineering education educational courses;indexing terms;computer architecture;educational courses;engineering education;senior level courses group assignments team projects engineering instructors students experience abet ec2000 criteria team learning experience training teaming;cooperative learning;teaching	Engineering instructors frequently use group assignments to provide students experience in dealing with complex open-ended problems. Usually, they do not worry about training or maintaining teams, evaluating the effectiveness of the teams, or assessing the contribution of each individual. With the establishment of the ABET EC2000 criteria, ignoring these aspects becomes unacceptable. This report describes a practical method for converting a standard “group” assignment into a meaningful “team” learning experience and presents data showing the effectiveness of the approach. The approach requires some class time (less than two class periods in total) for training teams, for monitoring weekly progress, and for evaluating individual efforts. Also, it requires some additional instructor time (less than 15 h) for preparing instructional material on teaming, for assigning teams, and for preparing and evaluating student report forms on team progress and individual effort. Data from a senior-level courses show an improvement in the quality of the technical work, in the students’ teaming skills, and in their attitude toward teaming that more than justify the class time and the extra instructor effort.	nonlinear gameplay	Russell L. Pimmel	2003	IEEE Trans. Education	10.1109/TE.2003.808913	cooperative learning;team learning;simulation;engineering education;index term;computer science;engineering;knowledge management;electrical engineering	SE	-81.7575886684556	-34.84980198748132	149689
d6e6b2a3e9aa4a466af03a45ce9ab2d34f1f9128	australian interventions for women in computing: are we evaluating	evaluation;intervention	There are many reasons why the gender imbalance in computing should be of concern to the profession. Over the last 20 years there have been many intervention programs which attempt to redress this situation and encourage more women into computing. To determine whether an intervention program has made a difference requires evaluation. Program evaluation is the careful collecting of information about a program so that those responsible can make informed decisions regarding the programs. This multi-case study investigation into 14 major programs conducted in Australia shows that many projects are not evaluated due to a lack of time, expertise and money. Without dissemination of detailed evaluations it is not possible to work out which intervention programs should be replicated and which should be modified or abandoned.	abandonware;higher computing;knowledge base;lazy evaluation;money;privacy law;theory;women in computing;word lists by frequency	Annemieke Craig	2014	Australasian J. of Inf. Systems		public relations;knowledge management;evaluation;intervention;management science;law	SE	-78.70609074243532	-25.57619235412484	149760
fddc19d06e300a5b000122e40fb5aea59b6044cc	global experiential projects with a manufacturer in india: insights from five years of experience	experiential projects;global;india	In 2006, a two-credit hour projects course was developed at the Krannert School of Management, Purdue University, in partnership with a manufacturer in India. The course was designed to provide experience of working on consulting projects with industry while exposing them to global best practices. A select group of undergraduate engineering and management, Masters in Human Resources, Masters/PhD's in engineering, and MBA students begin the five-month course in January each year to converge on the client facility in India in May for three weeks of fieldwork. The course ends about the middle of June after students have presented the results and recommendations to the company managers and have submitted the final reports. Year after year, improvements have been made to enrich students' experiences, which have lead to a well-structured program. In its fifth year of operation, the program has proved to be a win-win for both the students and the industrial partner. In this paper, we present key details of the design and delivery of these projects. We discuss the feedback mechanisms used to improve the course. We believe that the global setup of this projects course is unique and that our experience provides useful insights to those interested in developing such a course.		Mary K. Pilotte;V. Kovaichelvan;Suresh Chand;Ananth Iyer	2012	INFORMS Trans. Education	10.1287/ited.1120.0095	simulation;marketing;operations management;management;operations research	HCI	-79.18262186766644	-29.31779772660072	150073
c84964af14bb2d9827958482f56544d85e3d129d	why one-shot information literacy sessions are not the future of instruction: a case for online credit courses		Yvonne Mery is Instructional Design Librarian and Jill Newby is Associate Librarian at University of Arizona Libraries; e-mail: meryy@u.library.arizona.edu, newbyj@u.library.arizona.edu. Ke Peng is Assistant Professor in Asian Studies at Western Kentucky University; e-mail: ke.peng@wku.edu. © 2012 Yvonne Mery, Jill Newby, and Ke Peng, Attribution-NonCommercial (http://creativecommons.org/licenses/ by-nc-sa/3.0/) CC BY-NC This paper reports on a research project that examined the test scores of students who took part in an online information literacy course. Researchers analyzed the preand post-test scores of students who received different types of instruction including a traditional one-shot library session and an online course. Results show that students who participated in the online course demonstrated significant improvement in their test scores compared to the other students. This study shows freshman students’ needs for more comprehensive information literacy instruction. It also shows that information literacy instruction can be effective when delivered online.	email;information literacy;librarian;library (computing)	Yvonne Mery;Jill Newby;Ke Peng	2012	C&RL		mathematics education;library science;qualitative comparative analysis;computer science;information literacy;sociology;statistics;pedagogy	HCI	-77.71589195833302	-32.719787584288525	150136
e1cb74626532a21d31ff60101df1f97b9419524e	ethics and privacy in edm		Educational data mining is inherently falls into the category of the so-called secondary data analysis. It is common that data that have been collected for administrative or some other purposes at some point is considered as valuable for other (research) purpose. Collection of the student generated, student behavior and student performance related data on a massive scale in MOOCs, ITSs, LMS and other learning platforms raises various ethical and privacy concerns among researches, policy makers and the general public. This panel is aimed to discuss major challenges in ethics and privacy in EDM and how they are addressed now or should be addressed in the future to prevent any possible harm to the learners. Several experts are invited to discuss the potential and challenges of privacy-preserving EDM, ethics-aware predictive learning analytics, and availability of public benchmark datasets for EDM among others. Proceedings of the 8th International Conference on Educational Data Mining 13	benchmark (computing);educational data mining;massive open online course;predictive learning;privacy	Dragan Gasevic;Taylor Martin;Zachary A. Pardos;Mykola Pechenizkiy;John C. Stamper;Osmar R. Zaïane	2015			computer science;artificial intelligence;knowledge management;machine learning;internet privacy	DB	-78.18207784404103	-26.925260577826826	150314
b2a689b35a32517b84d9d40bf1941325e73709a9	designing programming assignments to reduce the likelihood of cheating	cheating;programming assignments;computing education;academic integrity;cryptography	Understanding that there will always be some students who would rather cheat on their assessments than complete them with integrity, a number of authors have proposed rules of thumb for writing assignments that will reduce the incidence of cheating. Unfortunately, these rules are so general as to be of little help when it comes to actually designing an assignment, and then varying it from one course offering to the next. This paper uses a case study, a programming assignment in cryptography, to propose specific guidelines that can be applied to the design of programming assignments to reduce the chance that students will be able to copy from students in prior offerings of the course, and to reduce the chance that students will be able to copy from programs found on the web. The guidelines illustrated by the case study are to begin with something basic, to add hidden complexity, to add manifest complexity, to add levels of complexity, to vary the assignment substantially in each successive offering, and to have multiple test plans.	cryptography;incidence matrix;test plan	Simon	2017		10.1145/3013499.3013507	simulation;computer science;theoretical computer science;algorithm	AI	-85.70581271154781	-36.19863045611818	150333
0a201d1c643b1432dda80e296b0cec6586c94f8d	recruit and retain women in undergraduate computing: success stories using research-based practices	diversity;retention;gender;research based practices;women;recruitment	Leisa D. Thompson (Moderator) National Center for Women & IT (NCWIT) University of Virginia 1-210-883-6204 leisadthompson@gmail.com Crystal Eney University of Washington Computer Science & Engineering 1-206-685-7571 ceney@cs.washington.edu Ruth Davis Santa Clara University Computer Engineering 1-408-554-4358 rdavis@scu.edu Tiffany Grady University of Texas Austin Computer Science 1-512-471-9523 tgrady@cs.utexas.edu	computer engineering;computer science;google moderator	Leisa D. Thompson;Crystal Eney;Ruth Davis;Tiffany Grady	2014		10.1145/2538862.2538865	pedagogy	Theory	-78.5242605163086	-31.367705697128134	150380
87942fa022c1466ae41fed5fe41c537a488448bf	work in progress — reporting s-stem retention: new diversity vs. supporting existing diversity	separated by commas for suggestions camera ready;academic programs s stem retention scientific leadership scholars sls program nsf s stem sponsored scholarship computer science environmental resources engineering mathematics humboldt state university;mathematics;group 1;second year;mathematics computer science education environmental engineering;educational institutions scholarships lead mathematics recruitment;or phrases;key words or phrases;preparation of papers;computer science education;two column format;two column format about four alphabetical order key words or phrases separated by commas for suggestions camera ready fie format preparation of papers;fie format;lead;about four;scholarships;environmental engineering;separated by commas;alphabetical order;work in progress;group 2;recruitment	The Scientific Leadership Scholars (SLS) Program is an NSF S-STEM sponsored scholarship for financially and academically eligible students in Computer Science, Environmental Resources Engineering and Mathematics at Humboldt State University. The scholarship has sponsored 57 students in these majors over the past 4 years. Of these students, 54% were underrepresented minorities and 70% were underrepresented in STEM. The first group (Group 1) of students recruited to the program brought additional diversity to the three academic programs. To fill the spots vacated by SLS students who no longer met the requirements of the SLS program after their first or second years, additional SLS students were recruited from existing CS, ERE and Math majors. This second group (Group 2) drew from existing diversity in the three SLS programs. The retention outcomes of these two groups are quite different due to the nature of the populations. As far as the authors know, no other work has operationalized the concept of supporting existing diversity in this way.	computer science;ibm notes;population;requirement;standard sea level	Mary Virnoche;Elizabeth A. Eschenbach	2011	2011 Frontiers in Education Conference (FIE)	10.1109/FIE.2011.6143114	mathematics education;lead;computer science;engineering;electrical engineering;artificial intelligence;software engineering;work in process;management;world wide web;pedagogy;mechanical engineering	ML	-79.06866100591415	-32.571707172914536	150486
d04fb3720e5122b44a30a00ab6bd9a86fe4b9d70	algorithmic thinking: program that solve well-defined visual problems (abstract only)	processing;pedagogy;visual art;cs0;computer science;algorithmic thinking;problem solving	In early 2014 I created and taught an introductory CS course for non-CS students at Mount Holyoke College. I chose to emphasize algorithmic thinking as a way of solving problems on and off the computer, so I needed concrete and appealing problems for the students to solve. Having the students create their own problems was my way of doing so.  Based on a one week introduction to visual design, each student designed the image or animation that they would later program. As they did so outside class, the students and I collaborated in class solving the problems of implementing a design I had chosen: solving design problems of their own overlapped with algorithmic solution of implementation problems in class. Subsequently, they applied the classroom lessons to their own designs. The result was a collection of programmed images and animations the students were eager to show their families and friends.  The dual nature of their practice appealed to the students: they were motivated to do the course-work; they took ownership of their work and of skills they acquired; they formed a cohesive community working together in the lab. Modeling on the classroom work in which they participated was effective in building programming skills. Most important several students expressed unprompted interest in taking a follow-on course.		Elodie Fourquet	2015		10.1145/2676723.2691935	simulation;computer science;processing;programming language;pedagogy	HCI	-81.31867551499816	-36.19332876628125	150765
f9308ee8953377dd642dbee6dcdc561da1bb5115	software engineering education (seed)		I am sure that many of you reading this column recognize and may even have had personal experiences dealing with the attitude expressed by the title, especially those with backgrounds intersecting academia. While I intend to comment on some of the possible reasons for this, the reasons themselves are not going to be my primary focus. The main points I wish to convey are twofold: (a) computer science programs seeking accreditation by ABET (Accreditation Board for Engineering and Technology) are required to satisfy several criteria integrating software engineering practices and principles into their curricula; and (b) describe approaches to implementing computer science courses that make them compliant with ABET requirements without having to significantly overhaul course content. A corollary to the ABET requirements is an implicit message to computer science faculty and administrators that software engineering skills are essential to the professional success of their graduates in software related industries, and it is time to quit whining about it and embrace this step-child as a full member of the academic family. Toward the end of this article I elaborate on four recommendations for creating a software engineering mind set in students and faculty throughout an undergraduate CS program: Write assignments following professional-style documentation standards; Give exercises writing professional-style software requirements specifications; Give at least two team-oriented software development projects with team size of four; Require students to capture data on their software process and the products they produce. My last major responsibility before retiring from the University of Central Florida School of Electrical Engineering and Computer Science was to organize, oversee and otherwise manage the process of preparing for an on-site ABET accreditation review of all degree programs offered by the School (Computer Science, Computer Engineering and Electrical Engineering). By far the most challenging task of each degree program was writing the Self Study Report. These reports were prepared and written over a period of 1.5 years in advance of the official accreditation visit, which, for us, occurred in the Fall of 2008. To give the uninitiated some idea of the magnitude of this effort, we produced three documents totaling some 2500 pages. Some parts of these documents were prepared by the college, some parts were common among the three degree programs, but most of the material was program specific. Many authors were involved in the writing process, and it was a project requiring a great deal of planning and coordination. It had all the complexity of many software development projects I have participated in. There are two points I wish to share about the accreditation experience. The Self Study Report in 2008 was the first such study where each degree program was required to provide: (1) a defined and institutionalized curriculum assessment process visible to the public, and (2) at least two years of assessment data demonstrating progress toward achieving documented course and curriculum objectives. In other words, ABET was requiring academic degree programs (and computer science programs, in particular) to be evaluated using a scientific method and discipline, set objectives, measure progress toward achieving stated objectives, review process and measures using collected data, make adjustments to process and measures and repeat endlessly! To most physical and social scientists and to most engineers (specifically including software engineers) this is standard operating procedure this is how they normally do	computer engineering;documentation;electrical engineering;emoticon;experience;requirement;requirements analysis;software development process;software engineer;software engineering;software requirements;standard operating procedure	Mark A. Ardis;Peter B. Henderson	2012	ACM SIGSOFT Software Engineering Notes	10.1145/2108144.2108162		SE	-80.99376603611552	-30.312484346650997	151027
6d6ddbf8dd868c847344a78b1860f9c03d393218	curiosity based learning: impact study in 1st year electronics undergraduates	impact;helium;transferable skills curiosity based learning auto didacticism impact engineering management;collaboration;auto didacticism;business interviews educational institutions collaboration helium knowledge engineering;management education;engineering management;business;engineering education;interviews;curiosity based learning;further education;student awareness curiosity based learning alternative teaching approach inquiry based learning studio based learning problem based learning first year engineering undergraduates auto didactic approach cbl phases business management module light touch approach cbl methods collaborative group studies enhanced student motivation student venturing self efficacy;teaching engineering education further education management education;transferable skills;teaching;knowledge engineering	There have been a number of reports over recent years on alternative approaches to teaching that concentrate on encouraging the student to take the initiative. These include but are not limited to problem-based, studio-based, inquiry-based and curiosity-based learning. The purpose of this focused study into curiosity-based learning (CBL) within a small class of first year engineering undergraduates is to develop an understanding of the way such an auto-didactic approach may affect or impact the way students achieve the required learning outcomes. By including CBL phases within the learning outcomes of a business management module, experienced teachers can motivate students to gather, analyse and present data without recourse to more established teaching methodologies. This `light touch' approach may encourage students to adopt CBL methods autonomously in future, enhancing personal and collaborative group studies, improving effective communication and their willingness to challenge conventional wisdom and generally improving a student's `softer' skills. This paper describes the module, its objectives, previous literature on the topic and the research methodology used before discussing findings and implications. The main findings are that the module has enhanced student motivation, has had a significant impact on student Venturing Self-Efficacy and a positive impact on student awareness of the importance of management to their future careers.	composite blocking list	Noel R. Jackson;Anthony E. Ward	2012	2012 International Conference on Information Technology Based Higher Education and Training (ITHET)	10.1109/ITHET.2012.6246005	transferable skills analysis;further education;simulation;engineering education;interview;engineering;knowledge management;artificial intelligence;teaching method;knowledge engineering;impact;helium;management;pedagogy;collaboration	HCI	-78.87592985486417	-36.864291395298594	151097
19c42358b3bf224b19204b219c9dd26aed7f05e5	does selection mechanism for temporary employees in public sector universities affect right selection?		Recruitment and selection of temporary and permanent employees have always remained one of a top priority ongoing function in public sector universities across the globe. Although temporary employees recruitment and selection facilitates effective screening of potential employees on permanent basis but the question is how does this take place in the public sector universities when it comes to the selection of permanent faculty members, this is main theme of this study to analyze the approaches of temporary selection and its impact on effectiveness of permanent selection. The data collection was made from the senior faculty members who had vast experience in the public sector universities. This study has identified that the temporary selections have influenced the right selection in two ways, the one these appointments were not based on merit and secondly these were preferred over permanent appointments as well. This is first such a study that has focused this phenomenon in non-English speaking countries, particularly in SAARC region of Asia. Does Selection Mechanism for Temporary Employees in Public Sector Universities affect Right Selection?		Ghulam Nabi;Song Wei;Muhammad Zubair Shabbir	2015	IJSSMET	10.4018/IJSSMET.2015070101	engineering;knowledge management;marketing	HCI	-79.43745044060321	-24.139008699266203	151393
f3d9f75084405f0432d7fd7943d518eae371478b	the impact of technology use and teacher professional development on u.s. national assessment of educational progress (naep) mathematics achievement	technology use;computers;calculators;mathematics;professional development	The purpose of this study was to determine the impact of technology use and teacher professional development on students’ mathematics academic achievement. The U.S. Department of Education National Assessment of Educational Progress (NAEP) published results for mathematics assessments for Grade 4 from the years 2005–2015 served as the dependent variable. Specific items related to technology use and professional development selected from both student and mathematics teacher questionnaires served as the independent variables. The Technological Pedagogical and Content Knowledge (TPACK) was used as a framework to guide this research. Data analyses revealed significant differences across multiple variables and multiple years.		Byron Havard;Giang-Nguyen Nguyen;Barbara Otto	2018	Education and Information Technologies	10.1007/s10639-018-9696-4	pedagogy;academic achievement;professional development;variables;computer science;mathematics	HCI	-77.52158673711816	-32.77521672003899	151503
e9d235c17c0c79b72350581dd8a19b7d9916fa3b	contextualizing digital technology within the professional communication classroom	professional communication computer aided instruction;computer aided instruction;professional development assessment certification credentialing computer documentation digital technology epubs;educational experience digital technology professional communication classroom programmatic problems expensive technology formal instruction textbook publishing companies;professional communication educational institutions certification publishing seminars software;professional communication	Professional communication has undergone a paradigmatic shift with the incorporation of digital technology such as ePubs into its instruction and practice. With these newer forms of professional communication come a new set of programmatic problems for educators: problems in receiving funding for the expensive technology necessary to create them; problems in finding the training necessary to prepare instructors to teach technologies that they themselves never received formal instruction in; and problems in supporting both the classroom and workplace instruction of these types of technical communication. Businesses, professional organizations, and even textbook publishing companies have begun to replace the traditional educational experience to answer this need. In addition to these problems, these new forms of professional communication require new methods of evaluation and assessment. In measuring the institutional and programmatic effectiveness of instruction in a rapidly changing, technology-intensive field is something professional communication programs may need to look closely at the assessment methodologies of other technology fields such as computer science and engineering technology.	computer science;digital electronics	Kenneth R. Price	2013	IEEE International Professonal Communication 2013 Conference	10.1109/IPCC.2013.6623899	professional certification;human–computer interaction;computer science;engineering;knowledge management;multimedia;professional studies;management;mechanical engineering	EDA	-78.59759958397422	-34.52568188144097	151889
689ee3a5613d6f1a20b147388be35e88ba5fe815	app inventor for android: report from a summer camp	outreach;programming language design;app inventor;college students;android;experience report;high school student;mobile application;summer camp;novice programmer	"""Google's App Inventor for Android (AIA) is the newest visual """"blocks"""" programming language designed to introduce students to programming through creation of mobile applications (apps). AIA opens up the world of mobile apps to novice programmers. Success stories of using AIA to introduce college students to programming exist. We used AIA in computing summer camps for high school students that we offer at our university. This paper is an experience report about using AIA in our camps. We provide a detailed description of designing our camps with AIA including the process of selecting and setting-up an Android device and instructional materials that we developed and made available to everyone. We evaluated our camps through surveys to determine the effects on the students. We found that there was mostly a slight increase in the favorable disposition towards computing. We also share our successes with using AIA and what still needs improvement for wider use."""	app inventor for android;intelligent agent;mobile app;programmer;programming language	Krishnendu Roy	2012		10.1145/2157136.2157222	simulation;human–computer interaction;computer science;operating system;software engineering;multimedia;pedagogy;android	HCI	-82.45700075879014	-36.78307059169018	152128
617a3b9b09ba57939312d9040bb18ae09bf19484	acm report: preparing students for computing workforce needs in the u.s	acm report;workforce need	A new ACM report confirms that few states are positioned to provide students with the computer science education required for rewarding careers and for ensuring future workforce needs. The report, Rebooting the Pathway to Success: Preparing Students for Computing Workforce Needs in the United States, urges state education and business leaders and public policy officials to work together to develop comprehensive computer science education and workforce development plans. The report provides recommends to help these leaders create pathways that will expose all K-12 students to computer science, provide expanded access to more rigorous computer science courses, offer increased opportunities for students to pursue postsecondary degrees, and align pathways with computing careers.	align (company);booting;computer science;gene regulatory network	Lisa C. Kaczmarczyk;Renee Dopplick	2014	SIGCSE Bulletin	10.1145/2620668.2620675	computer science;software engineering	HCI	-79.2922724551064	-30.359631788080254	152223
db2121a1581a67a8220b2dd074abf092b2c2c974	open ended group projects, motivating students and preparing them for the 'real world'	group project;project management;engineering drawings;reinforcement learning;computer industry;software engineering;engineering profession software engineering engineering drawings computer science large scale systems project management computer industry business knowledge engineering writing;large scale;undergraduate student;engineering profession;business;group projects;skill enhancement;writing;difference set;computer science;open ended;framework;large scale systems;knowledge engineering	This paper brings together three different sets of experiences of using large scale open ended group projects as a means of enhancing the skills of undergraduate students and preparing them for a career in Software Engineering. The paper commences by examining the circumstances in which open ended group projects have proved to be successful, briefly indicating the criteria that have been used to measure that success. It then examines some of the choices that must be made in designing and managing such projects, drawing on the different experiences of the three authors. It is argued throughout that open ended group projects are an effective way of developing and enhancing skills and of reinforcing learning in most knowledge areas. It is further suggested that open ended group projects offer a way of preparing students for their subsequent careers which is valued by industry and commerce and which also motivates and enthuses students.	experience;software engineering;the open group	Mats Daniels;Xristine Faulkner;Ian Newman	2002	Proceedings 15th Conference on Software Engineering Education and Training (CSEE&T 2002)	10.1109/CSEE.2002.995205	engineering management;systems engineering;engineering;knowledge management	SE	-83.11935869593557	-33.57172178488695	152402
bc849faf7a2c4ee965feedb1f61edde1b33556a8	a journey to a mathematical frontier with multiple computer tools		2 called the Golden Ratio. The goal of this article is to demonstrate how the integration of multiple software tools into a familiar educational context of Fibonacci numbers allows for the discovery of new mathematical knowledge. It is a snapshot of the authors’ recent work (Abramovich and Leonov 2008, 2009a, b) on the development of technology-motivated methods of teaching topics in discrete mathematics at the university level, including programs for secondary mathematics teachers (referred to below as teachers). The snapshot highlights the potential of the joint use of a spreadsheet and computer algebra systems for the discovery of cycles	computer algebra system;discrete mathematics;emoticon;snapshot (computer storage);spreadsheet	Sergei Abramovich;Gennady A. Leonov	2011	Technology, Knowledge and Learning	10.1007/s10758-011-9174-1	mathematics education;simulation;computer science	Graphics	-84.49013129781288	-37.261581157818334	152418
215eef4c3de8da9e866b4f37fdb4f275102f0831	discussion on the construction of e-commerce education program	teaching system;electronic commerce;information systems;subject construction;teaching e commerce subject construction;e commerce;information technology;construction industry;computer science education;course system;educational programs computer science education electronic commerce systems engineering education management information systems information technology technology management engineering management information management educational technology;educational courses;business;teaching system e commerce education program china course system;e commerce education program;china;electronic commerce computer science education educational courses;teaching	Though e-commerce education program has received a great development since it is launched in China, the characteristic and advantage of this education program is not obvious and the course system is not so reasonable, which affects the development of this education program. By taking advantage of the reform and development of colleges, author of this paper raises some opinions in terms of the construction and reform in e-commerce education program.	book;conformity;e-commerce payment system;organizing (structure);requirement	Jing Yang;Hua Jiang	2009	2009 Second International Conference on Education Technology and Training	10.1109/ETT.2009.55	e-commerce;engineering management;computer science;engineering;knowledge management;software engineering;china	SE	-83.9857739259195	-30.86072273030496	152984
5ad3a38fc65e4773ca1f218c1c5488a09f5e72f3	work in progress — the rod-spring approximation: an intuitive approach to the best-fit least-squares linear approximation	torque;least squares approximations;rods structures;conceptual understanding;linear approximation;force;data model;springs mechanical educational courses least squares approximations mechanics rods structures;springs mechanical;springs;educational courses;least square;linear model;mechanics;springs mathematical model educational institutions force equations torque data models;mathematical model;high school student;linear equations;work in progress;data models;high school students work in progress close fit rod spring approximation best fit least squares linear approximation bfls linear approximation stem subjects mechanics linear equations	Best Fit Least-Squares (BFLS) is a required technique for many STEM subjects. It is a method to compute a linear model for a set of data points. Due to its utility, BFSL is frequently taught to STEM students before they have sufficient mathematical experience to follow the mechanics of a derivation. Not only does this fail to produce procedural and conceptual understandings, but also it encourages students to view formulae and algorithms as things to be looked up, rather than derived. This is discourages students from developing productive dispositions. In this paper, we describe the “Close Fit Rod-Spring” (CFRS) approach to the problem. This approach computes the resting position of a rigid rod, which is connected by vertically oriented springs to a set of data points. This method of derivation results in two linear equations that may be solved for the slope and intercept of the best fit line. The result is equivalent to BFSL. However, it is achieved in an intuitively understandable and mathematically accessible way for high school students.	algorithm;best practice;curve fitting;data point;least squares;linear approximation;linear equation;linear model;procedural programming;visual intercept	Steven Gutstein;Eric Freudenthal;Ali Jamal-Kamali;Vladik Kreinovich;David Morgenthaler	2011	2011 Frontiers in Education Conference (FIE)	10.1109/FIE.2011.6142890	data modeling;mathematical optimization;data model;computer science;engineering;electrical engineering;artificial intelligence;calculus;linear model;work in process;mathematical model;mathematics;linear equation;torque;least squares;force;statistics;linear approximation;mechanical engineering	Vision	-86.1550974721854	-34.67841576773759	153106
8bc8315f168db8e42d6a454f969fd9b2ee41eadd	networking in the nineties (panel session)	home computing;program template;distance learning;microcomputer;teaching of programming	Universities, industries, and governments have made substantial investments in electronic networking. Electronic access to colleagues, information, and resources is now a requirement of faculty and students in every field. This panel will discuss recent developments in regional and national networks for research and education. The emphasis will be on how colleges and universities fit into the overall interconnection of networks what services are available, what resources are required, what are the risks involved, what is going to happen in the near future, and who pays the bills. Topics for discussion include	interconnection	Brent Auernheimer;Vinton G. Cerf;Susan Estrada;Russ Hobby;Craig Partridge;Eugene H. Spafford;Steven S. Wolff	1990		10.1145/323410.323412	distance education;real-time computing;computer science;operating system;software engineering;microcomputer	DB	-77.89220752795188	-29.55450519923195	154136
e7b767e2b78e385947467c3253a2be229cab79ae	crowdyq: a virtual crowdsourcing platform for question items development in higher education	crowd creation;higher education;large scale exam development;crowdsourcing	Developing large-scale exams for a massive number of preparatory year students by a small designated committee of exam developers is a common practice in colleges and universities around the world. However, in adopting this approach, some higher institutions might be confronted with some obstacles such as the unavailability of skilful exam developers and proper resources. To address this issue, we proposed CrowdyQ, a virtual crowdsourcing platform, to investigate the impact of involving a large number of same-subject university instructors in the creation and evaluation of question items in a collaborative manner for the purpose of developing high quality exams. This paper describes the development of CrowdyQ platform and it discusses briefly its potential significance in developing high quality large-scale exam questions in a university context.	crowdsourcing;display resolution;unavailability	Emad A. Alghamdi;Naif R. Aljohani;Abdallah N. Alsaleh;Wafi Bedewi;Mohammed Basheri	2015		10.1145/2837185.2843852	simulation;engineering;data science;multimedia	Web+IR	-79.48837348209815	-36.14555278182748	154155
3b745b1d1fc0990fdcb137677623d9e88ce7ca44	approaching subsaharan africa's educational dilemma with teleeducation	tele education project subsaharan africa ssa internet technology socio economic factor sound education;socio economic factors;information technology;africa internet educational technology educational institutions continents information technology business human immunodeficiency virus diseases space technology;internet educational computing distance learning socio economic effects;internet technology;rest of the world			Victor Wacham A. Mbarika	2003	IEEE Technol. Soc. Mag.	10.1109/MTAS.2004.1251383	simulation;socioeconomics;law;information technology;economic growth	Vision	-82.99223953866243	-26.579457248033016	154451
c59397f0929b8a343fcc7de4dbd2da01cdd6183d	data driven analysis on the effect of online judge system		"""Programming, which is a professional basic course of computer science major and software engineering major, has the characteristics of difficult entry and high practical requirements. In view of the problems in the teaching of curriculum experiment, we adopt the online evaluation method to carry on the teaching reform. This paper describes the specific methods and processes of online evaluation in the """"program design"""" experiment teaching, makes an in-depth analysis of the data generated by the online judge system and the student test scores, and then takes a questionnaire survey on the teaching effect. Data driven analysis and survey results show that online judge system can effectively improve students' programming abilities, and also play a positive role in promoting students' enthusiasm and knowledge. Finally, this paper summarizes the existing problems of the online judge system in the experimental teaching process of programming course and gives the countermeasures."""	computer science;online judge;requirement;software engineering	Xudong Lu;Dongyu Zheng;Lei Liu	2017	2017 IEEE International Conference on Internet of Things (iThings) and IEEE Green Computing and Communications (GreenCom) and IEEE Cyber, Physical and Social Computing (CPSCom) and IEEE Smart Data (SmartData)	10.1109/iThings-GreenCom-CPSCom-SmartData.2017.90	questionnaire;curriculum;online judge;management science;program design language;data-driven;computer science	SE	-81.36957717346364	-33.12031122420356	154735
49f7a42aa5d95014f5cc47678073c73f9c2f78e0	sprego, end-user programming in spreadsheets		The non-acceptance of end-user computing, especially end-user programming leads to misconceptions and consequently to the underdevelopment of the wide public in computer-supported problem solving. To find methods in connection with end-user computing, the available sources and their application and usage had to be analysed, from which a selection is presented in this paper. On the contrary to the surface navigation approaches, we provide the essence of Sprego programming, which is a high mathability, computer-supported real world problem solving approach in spreadsheet environments, along with its theoretical background and tools. Sprego heavily relies on the previously published results which proved that functional languages serve novice programmers better than imperative languages, the functional data flow modelling, Technological Pedagogical Content Knowledge in spreadsheets, the functional language built into spreadsheets, and their simple interface which lessens the coding burden. We have found and proved that Sprego is an effective programming approach in end-user computing and beyond that it supports knowledge transfer between the subfields of computers sciences and other traditional sciences. 1. The state of art 1.1. The acceptance of end-user computing “This paper presents a model for recognition of errors in documents ... This is a shame: I like the paper's subject matter; but this does not mean I believe that it belongs in a computing education conference.” (private collection) The above citation clearly describes the non-acceptance of end-user computing within computer science education, which is in accordance with the statement of Panko & Port (2013), who found that end-user computing seems invisible to IT professionals, corporate managers, and information system researchers. Beyond that we are faced with another misconception, namely that computer science is identified with computer driving license (Freiermuth et al., 2008; Hromkovič, 2009; Csernoch, 2017). Consequently, end-user computing is led by profit-oriented software companies, mostly proposing their belief in the fix nature of sciences (Wolfram, 2010, 2015; Chen et al., 2015; Csernoch, 2017), focusing on marketable software interfaces, which leads to secluded and mindless usage of tools, and ultimately to an extremely high number of error prone documents (Ben-Ari, 2011; Csernoch & Biró, 2014b, 2015e; Bewig, 2005; Burnett, 2009; EuSpRIG horror stories, 2015; Panko, 2008; Pemberton & Robson, 2000; Spreadshite, 2015; Thorne & Ball, 2008). In general, knowledge-transfer between the subfields of informatics/computer sciences and other traditional sciences is barely detectable. The wide public – end-users, not rarely over confident end-users (Panko 2015; SCF, 2016) – are not trained to use computers in real world problem solving but they are guided and specialized – if not self-taught – to pass exams and to carry out limited, problem oriented tasks. 1.2. Functions: a link between end-user programming, programming, and mathematics In the course of analysing the recommendations of the different national curricula and the practices, we have come to the conclusion that much less attention is paid to the notion of function in spreadsheet environments. The functional language of spreadsheets, the concept of function and the general behaviour of functions are not emphasized. This negligence of function has a noticeable consequence in that spreadsheets are not considered as a practicing field of calling, applying functions when dealing with real world problems. We can find sources which claim that functional modelling and functional languages can better serve as introductory languages than imperative languages, but these findings have not reached the wider public (Booth, 1992; Lovászová & Hvorecký, 2003; Hubwieser, 2004, Schneider, 2004, 2005, Sestoft, 2011; Warren, 2004, Kadijevic, 2013). Spreadsheet functions in general are n-ary, and in special cases variadic functions. Teaching them both in maths and in ICT/CS classes would be a great opportunity to introduce n-ary functions in practice, to give examples of how the arguments can be filled in, what role the order of the arguments plays, how the different data types can be taken care of, how composite functions can be created and evaluated, and how the arguments and the values of the embedded functions are connected. This approach is in accordance with long expressed results of research in developing functional thinking “Research, including early algebra research, suggests that students’ flexibility with multiple representations both reflects and promotes deeper mathematical insights (Behr et al., 1983; Brizuela & Earnest, 2008; Goldin & Shteingold, 2001). Brizuela & Earnest note that ‘the connections between different representations help to resolve some of the ambiguity of isolated representations, [so] in order for concepts to be fully developed, children will need to represent them in various ways’.” (Blanton & Kaput, 2011). 1.3. Technological Pedagogical Content Knowledge (TCPK) Our arguing considering the acceptance and utilization of end-user programming is in close connection with TCPK which clearly states that “...it is not sufficient for teachers to be knowledgeable about technology or pedagogy in order to use technology efficiently in the classroom. ... teachers need also to know how technology can be integrated with specific content in meaningful ways.” (Mishra & Koehler, 2006). Angeli went one step further and detailed the conditions in which TCPK can be used effectively in spreadsheet environments: “ teachers need to (1) develop educational rationale about why spreadsheet are important to teach, (2) understand the educational affordances of spreadsheet in teaching particular content domain, (3) identify content domains that can benefit from the use of spreadsheets, (4) be knowledgeable of students’ learning difficulties with spreadsheets, and (5) teach spreadsheets within the context of a meaningful curriculum topic” (Angeli, 2013). 2. Programming vs. “user-friendly” spreadsheet management “I think computers are the greatest tool for conceptually understanding math. ... they liberate you from calculating to think at a higher level. But like all tools, they can be used completely mindlessly...” (Wolfram, 2010). What we primarily experience in spreadsheet environments is the mindless usage of tools. Spreadsheet programs in general do not support functionality and programming. The software companies prefer to communicate the “user friendly” aspect of these programs and environments. They declare that there is no need for any background knowledge in order to use these programs, since the available software tools can fulfil the users’ aims perfectly. Unfortunately, this approach is almost unconditionally accepted in education, where most teachers and teaching materials communicate the software companies’ profit oriented slogans, instead of focusing on the algorithmic approach to problem solving in spreadsheet environments. The software companies’ user friendly slogans emphasize the role of the environments, and they introduce more and more novel surface tools which enchant end-users, without giving any further thought to the problems. Unfortunately, this approach is highly supported by the widely accepted ECDL exams (Csernoch, 2017), the recently published Spreadsheet Competency Framework (SCF, 2016), teaching and learning materials – including printed and online coursebooks, built-in wizards and helps, and various ICT/CS curricula. However, within spreadsheets there are tools available, although they are not emphasized, which serve high mathability problem solving, for short end-user programming. In this framework we have introduced Sprego – Spreadsheet Lego –, which fulfils all the requirements of high mathability, computer-supported real world problem solving in spreadsheet environments (Csernoch & Biró, 2013, 2014a, 2015a, 2015b, 2015c, 2015d, 2015e; Biró & Csernoch, 2014, Biró et al., 2015a, 2015b). Sprego matches the requirements of functional data flow modelling, takes further advantage of functional languages (Booth, 1992, Sestoft 2011; Hubwieser, 2004; Warren, 2004; Scheider, 2004, 2005), relies heavily on real world artefacts – authentic tables in the present environment –, the concept of function, Boolean expressions, n-dimensional vectors, and discussion and debugging. We claim that these concepts can be introduced as early as primary maths and ICT/CS classes, and show, on one hand, how teaching mathematics and ICT/CS can be reformed, in accordance with both Wolfram (2010) and Gove (2012), on the other hand, how we can provide various examples which can develop the students’ rule-recognition and rule-following skills, help building their concept of function (Blanton & Kaput, 2011; Skemp, 1987, Vuorikari et al., 2016), and teach them programming in enduser environments. These are the tools which end-users need to make fast but reliable decisions (Csernoch, 2017). 3. Sprego: end-user programming in functional languages 3.1. Problem solving in Sprego Sprego (Csernoch, 2014; Csernoch & Biró, 2015b, 2015c) focuses on the programming and data management aspects of spreadsheets, relies heavily on the concept of function, emphasizes the role of multilevel and multivariable – n-ary – functions, and applies them intensively. The concept and algorithmic aspects are at the centre of attention when using Sprego, similar to mathematics (Pólya, 1954) and to other programming and data management environments (Vuorikari et al., 2016). 3.2. Sprego functions Sprego declares that instead of the 500+ “user friendly” functions of spreadsheets, only a dozen general purpose functions – Sprego12 – would serve as the basis for an effective high mathability problem solving method (Csernoch, 2014; Biró & Csernoch 2015a, 2015b, Csernoch, 2017). This predicted number is in accordance with findings in program	autonomous car;ball tree;boolean expression;booth's multiplication algorithm;care-of address;cognitive dimensions of notations;computer science;dataflow;debugging;design rationale;embedded system;end-user computing;end-user development;entity–relationship model;european conference on digital libraries;functional programming;imperative programming;informatics;information system;intel turbo memory;printing;problem solving;programmer;pólya enumeration theorem;requirement;software industry;spreadsheet;subject matter expert turing test;usability;variadic function;warren abstract machine	Maria Csernoch;Piroska Biró	2017			end user;database;computer science	AI	-84.76754497856663	-36.65259577804894	154851
1e7a520160d24cfd8cfa0ad6229dcb99e4dae430	preparing technical communicators for future workplaces: a model that integrates teaming, professional communication skills, and a software development process	liability;software development process;technical documentation;documentation defects;communication skill;legal liability;subject areas;student performance	This paper outlines a model that uses teaming as a framework to support professional communication and process to improve student performance, as measured by the quality of output. It describes a pedagogical approach used in a computer science undergraduate senior class that integrates teaming, professional communication and a software development process. The approach demonstrates the importance of team instruction and monitoring to the overall success of projects. It discusses how effective teaming strengthens process and professional communication which, in turn, lead to the creation of a high quality product; it is believed that this model may be applied to a variety of subject areas.	computer science;display resolution;software development process	Margaret R. Heil	1999		10.1145/318372.318567	simulation;human–computer interaction;knowledge management;software engineering;technical documentation;legal liability;management;law;software development process	SE	-82.19071184017908	-32.982489984282324	154883
952ee1c7ca42e922f01ab2289ab2e579ff7a1d27	the learner experience of student-led international group project work in software engineering	agile software development;software;conference publications;project management;collaboration software educational institutions software engineering project management information technology agile software development;student led international group project work collaborative technology project management classroom based action research approach online collaboration tools semester globally distributed software engineering project;student experience;information technology;collaboration;employability;software engineering;global software engineering;collaborative technology;student experience international group project global software engineering collaborative technology employability;software management computer aided instruction computer science education educational institutions groupware project management software engineering;international group project	Software development has become increasingly globalized because of technological innovation, the evolution of work and business processes, as well as prevailing educational systems and national policies [1]. This paper addresses the challenges faced when creating realistic opportunities for students to participate in team working on a globally distributed software engineering project. We examine the experience of one set of students who undertook a single semester software development project, the technical objective of which was to create a product using online collaboration tools [2]. The students involved were studying at two widely-separated universities: Robert Gordon University (RGU), UK, and the International Institute for Information Technology, Bangalore (IIIT-B), India. A classroom-based action research approach has been used to evolve and reflect on the project [3]. Detailed student feedback was canvassed using an open-ended questionnaire. The students report favourably on acquisition of employability, collaboration and professional skills. A number of challenges remain in areas of project management, the use of collaborative technology and of scaling the project to larger classes, while retaining a manageable supervision overhead.	business process;computer-supported cooperative work;distributed computing;image scaling;naivety;nonlinear gameplay;overhead (computing);software development;software engineering;technical standard	Roger McDermott;Julian M. Bass;JayPrakash Lalchandani	2014	2014 IEEE Frontiers in Education Conference (FIE) Proceedings	10.1109/FIE.2014.7044181	engineering management;software project management;systems engineering;engineering;knowledge management;project management 2.0;project management triangle	SE	-81.61380273417868	-32.326643561352014	154997
21f6f79554c8d8e832b843c6a5453e677b85ceba	development of working competence items for mechatronics with graphical monitoring and control	graphical monitoring and control;competence analysis;delphi technique;mechatronics;monitoring and control	The purpose of this study was to identify the working competence items which considered important for mechatronics with graphical monitoring and control for industry requirements. The data were collected by document analysis, expert interview, and Delphi technique surveys. The Delphi technique involved three questionnaire surveys of field experts and scholars followed by Kendall coefficient of concordance analysis to evaluate the Chi-Square value and examine the consistency of respondent opinions to check the items whether reach the level of significance. Further, a Kolmogorov Smirnov one-sample test examined working competence items using 31 items divided into 7 domains. The survey items were selected according to consensus opinions of 10 experts by Delphi survey technique. The findings of this study provide guidelines for assessing professional working competence for mechatronics by applying graphical monitoring and control systems. The research findings reveal the practical competency requirements for students in a technology institute program, and a relevant curriculum is suggested. 2009 Wiley Periodicals, Inc. Comput Appl Eng Educ 20: 88 92, 2012; View this article online at wileyonlinelibrary.com/journal/cae; DOI 10.1002/cae.20376	chi;concordance (publishing);control system;delphi method;eng-tips forums;graphical user interface;john d. wiley;matthews correlation coefficient;mechatronics;requirement;requirements analysis	Wen-Jye Shyr	2012	Comp. Applic. in Engineering Education	10.1002/cae.20376	simulation;mechatronics;delphi method;computer science;engineering;electrical engineering;artificial intelligence;data mining;world wide web;statistics;mechanical engineering	HCI	-80.04407878312553	-27.91896500170178	155036
60d84136cd935843fe9f9e023882fba6467fccb8	starting out at university with team projects	collaborative work;social integration;communication skill;communication skills	In this work we describe the design and outcomes of a Starting-Out Project, which was conducted at the Universidad Politécnica de Madrid's School of Computing before students started their courses, as a welcoming and guidance activity. One goal is to motivate students, while, at the same time, familiarizing them with the institution, its services and associations, and fostering social integration. As an educational objective, the project intends to train and assess students in basic horizontal skills related to teamwork and effective oral communication.		Xavier Ferré;Antonio Giraldo;M. Gloria Sánchez-Torrubia;María Asunción Sastre	2010		10.1145/1822090.1822204	simulation;knowledge management;pedagogy	HCI	-78.4609902768265	-33.78006002463121	155138
3fd94109737695494b00d92b95a99f64c79136d2	using a machine language simulator to teach cs1 concepts	cs1;course design;pilot study;pedagogy;simulation;introductory programming;computer architecture;computer science education;c	The use of computer architecture simulators has become common practice in courses designed to teach computer organization. However, little research has been done to test the effectiveness of such simulators in learning introductory programming concepts. In this paper I will discuss the use of a simple architecture and machine language simulator to teach the CS1 concepts of conditional selection and iteration, along with the results of a pilot study on its effectiveness in a structural programming-based CS1 course. Possible other uses for the tool are also considered.	machine code	Jeffrey A. Stone	2006	SIGCSE Bulletin	10.1145/1189136.1189166	simulation;speed of light;computer science;pedagogy	Theory	-81.8929003163495	-37.84147566881056	155198
26efd8c45d4bc77b0f4cb4218cd69355d1d5e5c6	experiences in software testing education: some observations from an international cooperation	collaborative software engineering;software;international cooperation;software testing;international education collaboration;software testing computer science software engineering educational institutions computer science education collaborative software job shop scheduling programming profession international collaboration constraint theory;software engineering curriculum software testing education international education collaboration;international education;software engineering computer science education educational courses program testing;software engineering curriculum;testing;software engineering;computer science education;software engineering curriculum software testing education student learning;program testing;software testing education;educational courses;learning object;computer science;student learning;programming	This paper examines the outcomes of teaching a course in software testing in Ireland and China over a two-year period. In both institutions the delivery of the course is constrained to two-week duration. The learning objectives for this course are explained. The outcomes of the courses in terms of student learning are compared and analyzed. A number of observations are made that lead to recommendations as to how the educational experience can be improved for the students in both countries.	high-level programming language;software testing	Joseph Timoney;Stephen Brown;Deshi Ye	2008	2008 The 9th International Conference for Young Computer Scientists	10.1109/ICYCS.2008.209	computer science;software engineering;software testing	Robotics	-82.3311186406764	-34.499682327703184	155348
29251cdce2440dad80fc9bb1fcd3957d9d86faf3	leveraging ai's breadth in cs 1		Artificial Intelligence offers a compelling backdrop for student assignments and projects even very early in the computer science curriculum. We have leveraged so-called high-level AI, in the form of reasoning about language and game-playing to motivate students in CS 1. More recently we have added activities that might be described as “lower-level” AI: robotics programming via both simulated and real platforms and audio processing and classification. This work presents both student and faculty responses to this experiment and concludes that, with appropriate scaffolding, topics from AI’s full breadth succeed equally as hooks into early CS.	artificial intelligence;backdrop cms;computer science;high- and low-level;robotics	Zachary Dodds	2008			computer science;curriculum;machine learning;natural language processing;audio signal processing;artificial intelligence;scaffold;robotics	AI	-80.85353222245286	-33.85778526247892	155831
e1f670bf670b7d6de8f0b92dae5bddb71763684e	critical support for upper division transfer students in engineering and computer science	student experiments;transfer students;transfer center;professional development;computer science education;transfer students academic scholarship program professional development scholarships transfer center;educational institutions communities three dimensional displays scholarships;scholarships;student experiments computer science education educational institutions engineering education;engineering education;asap class critical support upper division transfer students computer science motivated engineering transfer students mets program arizona state university asu academic success and professional development;academic scholarship program	A Motivated Engineering Transfer Students (METS) Program at Arizona State University (ASU) was established to aid the transition, retention, and graduation of engineering and computer science community college transfer students. The METS Program provides critical support in the form of an Academic Success and Professional Development (ASAP) Class and a METS Center to help provide academic and social support, as well as scholarships. In this paper, we look specifically at the impact of the METS Center for transfer students and the impact on transfer students of the $4K per year scholarship funded by NSF grants.	computer science;ibm notes;metadata encoding and transmission standard;social support	Mary R. Anderson-Rowland	2013	2013 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2013.6685164	library science;engineering;engineering physics;pedagogy	DB	-79.12543306762342	-32.785275832034586	156131
245d03eb70a6ad06314257d997f570b1a71ab4cc	where is the evidence?: a call to action for learning analytics	reliability;access;learning analytics cycle;generalisability;evidence hub;ethics;validity;evidence	Where is the evidence for learning analytics? In particular, where is the evidence that it improves learning in practice? Can we rely on it? Currently, there are vigorous debates about the quality of research evidence in medicine and psychology, with particular issues around statistical good practice, the 'file drawer effect', and ways in which incentives for stakeholders in the research process reward the quantity of research produced rather than the quality. In this paper, we present the Learning Analytics Community Exchange (LACE) project's Evidence Hub, an effort to relate research evidence in learning analytics to four propositions about learning analytics: whether they support learning, support teaching, are deployed widely, and are used ethically. Surprisingly little evidence in this strong, specific sense was found, and very little was negative (7%, N=123), suggesting that learning analytics is not immune from the pressures in other areas. We explore the evidence in one particular area in detail (whether learning analytics improve teaching and learners support in the university sector), and set out some of the weaknesses of the evidence available. We conclude that there is considerable scope for improving the evidence base for learning analytics, and set out some suggestions of ways for various stakeholders to achieve this.	call to action (marketing)	Rebecca Ferguson;Doug Clow	2017		10.1145/3027385.3027396	engineering;knowledge management;data science;data mining	ML	-78.22432336785863	-27.03678336538561	156143
54ca8be18b1aee8cad66ad0f5bdcfb80f744f615	nifty assignments	nifty assignment;special session;student learning;successful assignment;actual assignment;great cs assignment;cs student;ready-to-use material	A great CS assignment is a delight to all, but the path to one can be most roundabout. Many CS students have had their characters built up on assignments that worked better as an idea than as an actual assignment. Assignments are hard to come up with, yet they are the key to student learning. The Nifty Assignments special session is all about promoting and sharing the ideas and ready-to-use materials of successful assignments.	roundabout	Nick Parlante;Julie Zelenski;Josh Hug;John Nicholson;John DeNero;Antti Laaksonen;Arto Vihavainen;Frank McCown;Kevin Wayne	2014		10.1145/2538862.2538995		Graphics	-79.97503713301334	-35.65573898988096	156180
b7b3df0d34407bfa1fe000686c99f0fbb20bd6ae	training: a view from the new kid on the block	new kid	I am the “new kid on the block” in our User Services Department. I am still in the midst of being trained. However, the idea of training is not new to me. I have trained individuals in other settings and I am in the process of completing a Master’s Thesis on the socialization (integration) of individuals into organizations. After a few months of training in User Services I became intrigued with the idea of comparing my training experience with concepts I learned in organizational communication. As I worked on this comparison, I realized that it may be informative to others.	academy;information;jones calculus;jones polynomial;organizational behavior;socialization	Janet Sedgley	1987		10.1145/41866.41949	computer science;multimedia;knowledge management	AI	-78.26811315158609	-31.541980404008257	156252
05414aa6018f9065e469b89995a508ff70b64588	iconic programming proves effective for teaching the first year programming sequence	first year;programming language;object oriented programming;undergraduate student	Research has been undertaken to answer the following question: Can icon-based programming languages be used to teach first year programming concepts to undergraduate students more effectively than text-based languages? BACCII++ is an iconic environment developed at Texas Tech University for teaching procedural and object-oriented programming concepts and languages. Course materials were developed and used under experimental conditions during the 1995-96 school year at Texas Tech University, with half using BACCII++ to generate C++ code, and the other half using only C++. For each course in each semester the experiment was run, the sections using BACCII++ did significantly better in overall performance.	c++;procedural programming;programming language;text-based (computing)	Ben A. Calloni;Donald J. Bagert;H. Paul Haiduk	1997		10.1145/268084.268189	simulation;computer science;software engineering;multimedia;programming language;object-oriented programming	PL	-81.92104997303967	-37.03482079459349	156343
3f8426133f8656b61d865bbd081bd72a27715a84	"""""""computer science, academia and industry"""" as pedagogical model to enhance computational thinking"""	computational thinking	The Computer Science, Academia and Industry extra-curricular program has been operated for Israeli high school students majoring in computer science. A case study was conducted aimed to identify computational thinking in students' project development processes.	computation;computational thinking;computer science	Orni Meerbaum-Salant;Bruria Haberman;Sarah Pollack	2015		10.1145/2729094.2754857	computer science;pedagogy	Logic	-80.48468378919748	-32.33171139565259	156482
c095f0d9b17cd9c2851000534740e7cc087253fa	factors affecting the perceived effectiveness of pair programming in higher education	data gathering;higher education;object oriented programming;pair programming	This paper reports the findings of a study conducted on postgraduate students of an Object Oriented Programming (OOP) course in which pair programming was applied as an educational technique. This study addressed the question Why is pair programming sometimes ineffective? The focus of the study was on exploring the factors that may affect the success of pair programming. We employed a combination of data gathering techniques and triangulated them to analyze the data. We observed, recorded and interviewed students who pair programmed. They also completed questionnaires. There was evidence that matching by skill level and the task in hand are the main factors in the success of a pair programming session.	pair programming;polygon triangulation	Edgar Acosta Chaparro;Aybala Yuksel;Pablo Romero;Sallyann Bryant	2005			simulation;human–computer interaction;computer science;multimedia	HCI	-82.48157324027653	-35.40755914919698	156597
ee72fa10fa4f6830c2028c6dc6a4b07516182fb4	asking difficult questions about institutional repositories: factors for success and new directions for development and research	social sciences;information and library science;computer science;institutional repository	Abstract#R##N##R##N#This interactive point/counter point panel session on institutional repositories will present current research and practice related to the factors for success of IR's. Difficult questions about the feasibility of investing in the development of an institutional repository will generate long overdue conversations about the future directions for research and development of institutional repositories.		June Abbas;Catherine Mitchell;Carole L. Palmer;Soo Young Rieh	2009		10.1002/meet.2009.1450460120	social science;computer science;knowledge management;management science	HCI	-78.49216823406547	-27.781726240786657	156645
055ff5f068050755ed3e8c2e73014fc0309cbfa6	are there competences every computer scientist should have?	software engineering computer science education educational institutions;computational modeling computer science educational institutions concrete computers conferences instruments;competence model computer science education competence measurement;competence model;computer science education;competence measurement;competence model computer scientist computer science competences software development software engineering programming industry university	Computer Science is a subject consisting of many different areas. Every computer scientist has his own focus. Nevertheless, we ask: Are there competences every computer scientist should have? This is an important question for industry and university. The reason is, with such a common knowledge we can expect these abilities from our students for example at the end of the bachelor or master phase. This paper presents a methodology to find out these competences and how to build a competence model accordingly. Such a competence model is necessary for our next step: Building an assessment to measure competences. Measuring competences is useful for example to value the benefit of interventions during educational processes.	computer science;computer scientist	Kathrin Bröker;Johannes Magenheim	2014	2014 IEEE Global Engineering Education Conference (EDUCON)	10.1109/EDUCON.2014.6826224	mathematics education;engineering management;computer science;pedagogy	DB	-83.26641508059363	-33.408945690528725	156674
911d2eac0b2c05ccfcf9972896de0037dde6dd66	perceptions of plagiarism by stem graduate students: a case study	plagiarism;research misconduct;stem;academic integrity;graduate students;honor codes	Issues of academic integrity, specifically knowledge of, perceptions and attitudes toward plagiarism, are well documented in post-secondary settings using case studies for specific courses, recording discourse with focus groups, analyzing cross-cultural education philosophies, and reviewing the current literature. In this paper, the authors examine the perceptions of graduate students in science, technology, engineering, and mathematics (STEM) disciplines at the University of Florida regarding misconduct and integrity issues. Results revealed students' perceptions of the definition and seriousness of potential academic misconduct, knowledge of institutional procedures, and views on faculty actions, all with a focus on divergences between U.S. and internationally-educated students. The open-ended questions provide anecdotal evidence to highlight personal experiences, positive and negative, aimed at the faculty, international students and undergraduates. Combined, these findings outline an important part of the campus academic integrity culture at a major American university. Recommendations for local actions also are discussed.	attitude;document completion status - documented;experience;focus group;nonlinear gameplay;philosophy;plagiarism;recommender system;review [publication type]	Michelle Leonard;David Schwieder;Amy Buhler;Denise Beaubien Bennett;Melody Royster	2015	Science and engineering ethics	10.1007/s11948-014-9604-2	biology;engineering ethics;scientific misconduct;medicine;pedagogy	HCI	-79.65110275700843	-25.778310038365102	156692
7a6980d0d49b5cba9d40eb5a3c7e09d2c85954d0	computer game programming course for art design students by using flash software	art programming profession job design games consumer electronics software tools electronics industry toy industry industrial electronics education;computers;software;computer program;art;learning by doing;computer aided instruction;design education;rpg game;teaching computer aided instruction computer games computer science education educational courses programming;game design computer game flash game rpg game;game design;development tool;computer science education;role playing game;programming profession;games;computer software science computer game programming course art design student flash software computer programming learning interactive media design education game design role playing game learning by doing programming skills;interactive media;educational courses;flash game;student learning;computer games;programming;computer game;teaching	"""It seems a difficult and unnecessary job for design students to learn computer programming. However, as the development and the needs of producing interactive media and computer games, the integration of different disciplines is a compulsive trend for training creative designers in design education. This study is to use Flash software as a game design and developing tool for designing extensive and complex story of role playing games. This integrated programming and design course adopts the theory: """"learning by doing,"""" in which the design students learn the role playing game design by acquiring the practical programming skills and knowledge of integrating computer software science and artistic designing. Such a integrating course, hopefully, can be established as a first model of integrated programming and art design courses."""	adobe flash;computer programming;game programming;interactive media;pc game	Chun-Hsiung Huang;Pei-Chi Ho;Szu-Ming Chung	2008	2008 International Conference on Cyberworlds	10.1109/CW.2008.120	game design;education;games;programming;software design pattern;computing;simulation;human–computer interaction;computer science;software design;software development;game developer;multimedia;interactive media;design education;game programming	HCI	-82.48771366798603	-36.69446354490179	156717
58dee948f9c0338d9ec2000fc6f900b14d88ba4e	developing a pedagogical infrastructure for teaching globally distributed software development	distributed software development;industry experience;collaborative education;globally distributed software development;distributed team;pedagogical resources;educational patterns	Teaching students about Globally Distributed Software Development (GDSD) is becoming increasingly important as a significant percentage of current projects are being developed by globally distributed teams. We discuss the pedagogical infrastructure used to teach GDSD at DePaul University and its partner institutions. We cover the educational, technical and institutional challenges that need to be resolved in order to successfully partner with globally distributed teaching institutions in order to teach GDSD in a realistic environment.	distributed computing;software development	Ed Keenan;Adam Steele	2011		10.1145/1984665.1984667	simulation;systems engineering;engineering;knowledge management	SE	-81.86585485451855	-32.504096909470384	156771
f09651bb3ccd87e5baf56715addb129f60ce94b5	effective active learning tools for an embedded systems course		This paper presents tools the author uses to enhance student motivation in a microcontroller-based embedded systems course. The course is offered as part of a requirement in a computer engineering degree program. In the traditional lecture-based teaching and learning process, information typically flows in one direction with very little active involvement by the students. There are a number of techniques available in the literature that present the use of active learning techniques in the classroom. To take this active learning approach to the next level, this paper presents three important tools that are utilized in a systematic way to further enhance the students' role in their learning. The first tool uses laboratory assignments for practical hands-on activities that help reinforce the theoretical concepts covered in the classroom. The second tool uses “peer-teaching” technique in which students take active role in learning a topic and present it to the class, followed by questions, discussions, and quiz. The third tool is “self-proposed” final course project in which students are expected to apply their creativity in coming up with a proposal for a project of their own choice (with the instructor approval), implement the project and present it to the class.	active learning (machine learning);computer engineering;embedded system;hands-on computing;microcontroller	Girma S. Tewolde	2017	2017 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2017.8190491	knowledge management;sociology;microcontroller;active learning;embedded system;creativity	Visualization	-79.81021164949495	-36.09343442544905	156849
70dc6c7f203ace256c9c92e5a5acbf580295910d	special section: linking academia with real world practice: student consulting projects benefit faculty and industry	professional or ms education philosophy of modeling;professional or ms education;philosophy of modeling	Student consulting projects require students to apply OR/MS tools to obtain insight into the activities of firms in the community. These projects benefit faculty by providing clear feedback on the real capabilities of students, a broad connection to local industry, and material for case studies and research. They benefit companies by stimulating new thinking regarding their activities and delivering results they can use. Projects provide insights into the end-user modeling mode of OR/MS practice. Projects support continuous improvement as the lessons gained from a crop of projects enable better teaching during the next course offering, which in turn leads to better projects and further insights into teaching.		Thomas A. Grossman	2002	Interfaces	10.1287/inte.32.2.42.66	engineering management;systems engineering;engineering;knowledge management;management	HCI	-80.32270727309947	-31.70342784850058	156976
6c8544713cde8a400e6fe109f62e659723e013f0	easyauthor: supporting low computer proficiency teachers in the design of educational content for adult illiterates	end user tools;computer aided instruction;adult illiterates;teacher authoring tools;educational content	It is inevitable to make use of technology to support 287 million adult illiterates of India spread across 22 Indian Languages and dialects. However, even with many advances in end-user software engineering and a multitude of authoring tools, teachers often have to spend considerable effort to design and use technology for developing educational content.  In this paper, we present EasyAuthor, a preliminary environment for end users (i.e., low computer proficiency teachers) to create and manage educational content for adult illiterates in India. The primary intent of EasyAuthor is to support teachers with the easy authoring of educational content and at the same time adhere to adult literacy learning methodologies. We describe the process of authoring educational content using EasyAuthor and the use of ontologies as a back-bone. We then briefly discuss a preliminary study of our tool with a few teachers and present some interesting aspects of EasyAuthor along with its limitations. Finally, we conclude with some promising future directions.	end-user development;ontology (information science);software engineering	Sridhar Chimalakonda;Kesav V. Nori	2013		10.1145/2468356.2468471	simulation;human–computer interaction;multimedia;world wide web	HCI	-78.03929363220439	-36.92670834145127	157062
09385c374face1b1c2df70ec75170dcbd7a1826f	a pilot study: the effect of using virtual laboratory on students’ conceptual understanding in mobile communications	wireless communication;mobile communication;writing;engineering students;matlab;hardware	Laboratory work is an integral part of science and engineering education. Traditionally hardware experiments dominate the electronics engineering laboratory work. Course on Mobile communications has problems due to limited scope of available hardware especially for students' conceptual learning. As a result, the lab work in the Mobile Communications course is carried out using simulation software such as Matlab, Scilab etc. Students are able to verify various concepts studied in theory using these simulations. The problem of using these software simulations is that the students focus shifts from understanding the concepts underlying the experiment to writing the Matlab or Scilab code. We carried out a pilot study to address this problem using the new technology Virtual Laboratories available online. In this paper we present the results of the pilot study carried out with 150 students at UG level and 18 students at PG level in an autonomous college under university of Mumbai using Mobile Communications Virtual laboratory. The results indicate an increase in the students' understanding of core concepts such as frequency reuse, channel fading and various handoff strategies. The students' have given a positive feedback in the course exit survey regarding their experience with the new lab format. They find working with these labs more interesting and motivating. The performance of students in the test at the end of semester has improved in questions related to the core concepts.	autonomous robot;electronic engineering;experiment;floor and ceiling functions;matlab;positive feedback;scilab;simulation software;three utilities problem	Swati Mahajan;Sangeeta S. Kulkarni;Anita S. Diwakar	2016	2016 IEEE Eighth International Conference on Technology for Education (T4E)	10.1109/T4E.2016.011	simulation;human–computer interaction;computer science;multimedia	SE	-85.70882098319034	-34.985666848754285	157205
716141f305c7efb2a253f65f097c1cc184c49f76	work in progress — a feedback system for peer evaluation of engineering student teams to enhance team effectiveness	team behaviors feedback system engineering student team peer evaluation team effectiveness enhancement students teaming skills engineering education pedagogical tool technical content learning professional practice engineering faculty self report team member peer evaluations dysfunctional team identification;reliability;instruments;theoretical framework;professional practice;rating bias;team working;educational administrative data processing;vectors;student feedback;professional aspects;instruments vectors engineering education cities and towns educational institutions reliability conferences;engineering education;rating ability;cities and towns;team working educational administrative data processing engineering education professional aspects;feedback system;work in progress;teamwork team effectiveness peer evaluation rating bias rating ability;teamwork;conferences;team effectiveness;peer evaluation	Developing students teaming skills has become common place in engineering education as a pedagogical tool to facilitate learning of technical content as well as to prepare students for professional practice. Engineering faculty typically determine the degree to which students have had an effective team experience by indirect methods such as homework or project grades along with self report team member peer-evaluations. Such methods tend to place a greater emphasis on the outcome (or product) of teaming rather than on the process of teaming itself. The use of standalone peer-evaluations to indirectly determine team effectiveness has also been shown to be problematic, since students are not typically taught how to properly evaluate their peers. This lack of training generally results in a significant amount evaluation bias. This research presents a theoretical framework to indirectly measure team effectiveness using a calibrated peer evaluation system The system provides students feedback on their rating ability as well as quantifies (as a 1st order approximation) their evaluation bias. The system can be used by faculty for early identification of dysfunctional teams as well as to determine the degree to which students are engaged in effective team behaviors.	approximation;feedback;pedagogical agent	Junqiu Wang;P. K. Imbrie;Joe J. Lin	2011	2011 Frontiers in Education Conference (FIE)	10.1109/FIE.2011.6143072	simulation;engineering education;teamwork;engineering;knowledge management;electrical engineering;team effectiveness;work in process;reliability;feedback;team composition;statistics;pedagogy	Web+IR	-79.02922516089694	-37.55853845625582	157234
98497af2f87f3a31fe1292261d0cece7c42bc5cd	data mining for education decision support: a review	data mining	Management of higher education must continue to evaluate on an ongoing basis in order to improve the quality of institutions. This will be able to do the necessary evaluation of various data, information, and knowledge of both internal and external institutions. They plan to use more efficiently the collected data, develop tools so that to collect and direct management information, in order to support managerial decision making. The collected data could be utilized to evaluate quality, perform analyses and diagnoses, evaluate dependability to the standards and practices of curricula and syllabi, and suggest alternatives in decision processes. Data minings to support decision making are well suited methods to provide decision support in the education environments, by generating and presenting relevant information and knowledge towards quality improvement of education processes. In educational domain, this information is very useful since it can be used as a base for investigating and enhancing the current educational standards and managements. In this paper, a review on data mining for academic decision support in education field is presented. The details of this paper will review on recent data mining in educational field and outlines future researches in educational data mining.	data mining	Suhirman Suhirman;Tutut Herawan;Haruna Chiroma;Jasni Mohamad Zain	2014	iJET		r-cast;data quality;decision support system;computer science;engineering;knowledge management;data mining;management science	HCI	-85.67467875692245	-29.121216645067253	157491
1d80ced70032efdcb27dabc54b902be6039c1160	the iscb student council internship program: expanding computational biology capacity worldwide		Education and training are two essential ingredients for a successful career. On one hand, universities provide students a curriculum for specializing in one's field of study, and on the other, internships complement coursework and provide invaluable training experience for a fruitful career. Consequently, undergraduates and graduates are encouraged to undertake an internship during the course of their degree. The opportunity to explore one's research interests in the early stages of their education is important for students because it improves their skill set and gives their career a boost. In the long term, this helps to close the gap between skills and employability among students across the globe and balance the research capacity in the field of computational biology. However, training opportunities are often scarce for computational biology students, particularly for those who reside in less-privileged regions. Aimed at helping students develop research and academic skills in computational biology and alleviating the divide across countries, the Student Council of the International Society for Computational Biology introduced its Internship Program in 2009. The Internship Program is committed to providing access to computational biology training, especially for students from developing regions, and improving competencies in the field. Here, we present how the Internship Program works and the impact of the internship opportunities so far, along with the challenges associated with this program.	complement system proteins;computation;computational biology;reside;universities;interest	Anupama Jigisha;Margherita Francescatto;Farzana Rahman;Nazeefa Fatima;Dan F. DeBlasio;Avinash Kumar Shanmugam;Venkata P. Satagopam;Alberto Santos;Pandurang Kolekar;Magali Michaut;Emre Guney	2018		10.1371/journal.pcbi.1005802	internship;curriculum;employability;biology;computational biology;competence (human resources);coursework	Comp.	-78.60828806230639	-30.985864915320903	157632
d9df017b0665ea289c1eb81b86427c8338790872	innovative agile project management curriculum for engineering education	engineering education conferences iron;engineering curriculum agile methods project management;computer information systems agile project management curriculum engineering education agile methodology applications traditional project management framework project planning technique project execution technique project control technique bradley university software systems;project management computer science education engineering education	The performed analysis of the current status of agile methodology applications in industry clearly shows that companies and businesses will soon need a significant number of well educated and highly skilled agile project managers in engineering/computing/IT areas. A shift from traditional project management framework (based on PMBOK) to agile project management requires project managers to be equipped with additional knowledge for project planning, execution and control techniques and tools to effectively manage the challenging projects. The findings and outcomes of performed analysis motivated the authors - faculty and graduate students at Bradley University (Peoria, IL, U.S.A.) - to work collaboratively, propose and design innovative academic curriculum - topics, tools, courseware, lab practicum - in Agile Project Management for engineering education with a focus on design and development of software and computer information systems.	agile software development;david w. bradley;management information system	Vladimir Uskov;Dayananda B. Krishnaiah;Rekha Kondamudi;Urvashi Singh	2016	2016 IEEE Global Engineering Education Conference (EDUCON)	10.1109/EDUCON.2016.7474594	project 112;project management;engineering management;extreme project management;program management;project;agile usability engineering;software project management;opm3;systems engineering;engineering;software engineering;applied engineering;project management 2.0;project planning	SE	-81.61673898888107	-32.364918916397386	157777
31df7428149a138ae2e1b66d748753b9d5f8d5b4	teaching cryptography activity in taiwan's high schools	course design;computer science concept;high school;cryptography activity	This article tries to experiment with a cryptography activity in Taiwan's high schools. In this activity it is unnecessary to use the computer; instead, the hand-on activity is used to teach the concepts of cryptography. We teach the “Can I do the cryptography as well?” and “Funny Code --The Dancing Men” in normal classrooms with activity-based course, and these concepts originally can only be taught in the university. The results of experiment show some positive facts. Before the learning activities, 60% students thought that cryptography was very difficult and 56% students thought that cryptography was not easy to understand. However, after the learning activities, 41% students like this new method; 44% students think that cryptography is simple; 24% students think that cryptography is easy to understand. These data show this pedagogy deserves further analysis and to be put into practice on a large scale.		Long-Yuan Yan	2007			simulation;computer science;multimedia;pedagogy	Crypto	-80.49611028338565	-37.19839717530578	157877
dad7eb0d442765fe7a46582f113779e94774deac	student communication challenges in distributed software engineering environments	distance learning;software engineering;software engineering environment;computer mediated communication;distributed software engineering;distributed collaboration;face to face	We investigate Non-Face-to-Face (NFtF) distributed collaboration in a population for which technology poses no barrier-students involved in distributed software engineering via Distance Learning. Our study finds students believe themselves significantly less effective in this environment because of lack of traditional non-verbal cues, in partial agreement with previous work. Based on our results, we identify potential problems and present activities to mitigate these so that NFtF oriented interactions may be made more effective for this group.	distributed computing;interaction;software engineering	Denise M. Woit;K. J. Bell	2005		10.1145/1067445.1067523	distance education;personal software process;computing;software engineering process group;human–computer interaction;computer science;knowledge management;social software engineering;component-based software engineering;software development;software engineering;middleware;distributed design patterns;software walkthrough;software analytics;resource-oriented architecture;software deployment;computer-mediated communication;computer engineering	SE	-83.9530325696379	-34.21812212430917	157956
c3494b3ca4041e6ce6f577271e9a09ccac080b6a	mentoring and research misconduct: an analysis of research mentoring in closed ori cases	mentor;research misconduct;opportunity theory;data integrity;trainee;research purpose;next generation;supervision;research mentoring	We are reporting on how involved the mentor was in promoting responsible research in cases of research misconduct. We reviewed the USPHS misconduct files of the Office of Research Integrity. These files are created by Institutions who prosecute a case of possible research misconduct; ORI has oversight review of these investigations. We explored the role of the mentor in the cases of trainee research misconduct on three specific behaviors that we believe mentors should perform with their trainee: (1) review source data, (2) teach specific research standards and (3) minimize stressful work situations. We found that almost three quarters of the mentors had not reviewed the source data and two thirds had not set standards. These two behaviors are positively correlated. We did not see convincing evidence in the records that mentors were causing stress, but it was apparent in the convicted trainees' confessions that over 50% experienced some kind of stress. Secondary data, while not created for this research purpose, allows us to look at concrete research behaviors that are otherwise not very researchable. We believe it is important for mentors and institutions to devote more attention to teaching mentors about the process of education and their responsibilities in educating the next generation of scientists. This becomes a critical issue for large research groups who need to determine who is in charge educating, supervising and assuring data integrity.		David E. Wright;Sandra L. Titus;Jered B. Cornelison	2008	Science and engineering ethics	10.1007/s11948-008-9074-5	public relations;scientific misconduct;medicine;data integrity;management;pedagogy	HCI	-80.17539804611073	-27.38047984872973	158219
76f83e45cebccb8a085ea055d497aba88f579413	utilizing reflection in projects for increased metacognition and enhanced learning	critical thinking active learning reflection;further education civil engineering engineering education;active learning;barium;civil engineering;barium mercury metals;mercury metals;engineering education;critical thinking;metacognition learning enhancement project based learning strategies pbl engineering skill critical reflection process civil engineering class student skill enhancement classroom practice critical reflection development;further education;reflection	Active and project-based learning (PBL) strategies provide a great means for students to enhance their learning and further develop critical engineering skills. In order to guide students to a higher level of learning, a critical reflection process has been incorporated into upper level and graduate civil engineering classes that utilize PBL. This paper presents a model for classroom practice for enhancing student skill development through critical reflection as part of PBL that is based on existing theory on learning.		Luciana R. Barroso;Jim Morgan	2012	2012 Frontiers in Education Conference Proceedings	10.1109/FIE.2012.6462335	mathematics education;simulation;engineering;experiential learning;pedagogy	HCI	-78.8446972720043	-36.87785075974221	158463
cb1fd905b05fcecb7499f6d48e1bf087c8e8ca0b	how to plan and run effective teacher professional development (abstract only)	diversity;advanced placement computer science;teacher professional development;computer science for all	To reach President Obama's vision of computer science for all, we will need to prepare many more secondary teachers to teach computer science. In 2015, less than 3,000 schools passed the College Board's audit to offer the Advanced Placement (AP) Computer Science (CS) A course, while close to 12,000 schools passed the audit to offer Calculus AB. The presenters have led teacher professional development workshops for many years and will share their knowledge and materials to help others offer effective teacher professional development. In particular they will cover how to plan a workshop, how to find funding, how to prepare materials for secondary teachers, what materials are available for teacher professional development, how to teach pedagogical content knowledge (how to teach computer science), and how to increase diversity in computer science classrooms. The presenters have free materials for the new Advanced Placement Computer Science Principles (CSP) course as well as the Advanced Placement Computer Science A course. These materials include free interactive ebooks for both CSP teachers and students to help them learn programming and a free interactive ebook for the AP CS A course. Participants will be encouraged to share their materials and strategies as well. Laptop Required.	ap computer science a;e-book;laptop	Barbara Ericson;Rebecca Dovi;Ria Galanos	2017		10.1145/3017680.3017824	simulation;computer science;software engineering;ap computer science;multimedia;pedagogy	AI	-79.70956283200067	-33.82895970765669	158471
8d9521296da2d98f2f5a9a738b6f51621a4db11e	the analysis of enrollment in polytechnic of zagreb in academic year 2010/2011	civil engineering;professional aspects;educational courses;engineering education;mathematics physics materials educational institutions informatics civil engineering;professional aspects civil engineering educational courses educational institutions engineering education;selected studies registration enrollment analysis polytechnic of zagreb enrollment prerequisite study program state graduation exam civil engineering professional study mathematics 1	Starting with the academic year 2010/2011, the prerequisite for the enrollment in a study program is sitting for and passing the state graduation exam. This paper presents the analysis of enrollment conducted for the first year of professional studies in Polytechnic of Zagreb. The analysis of success for the first time enrolled in Civil engineering professional studies was carried out for the course called Mathematics 1 and results were compared with corresponding result that were obtained for the same course by students enrolled in this program in previous academic year, but according to the other criteria. Also, we have processed the results of questionnaire in terms of relevance of the state graduation exam being a basic precondition for the selected studies registration, conducted on newly enrolled students in Civil engineering professional study.	precondition;relevance	Mandi Orlic;Marija Marinovic	2011	2011 Proceedings of the 34th International Convention MIPRO		engineering education	SE	-79.87094292379469	-33.22180549263163	158561
8ff7b81e6cad90d257fa6c7167e7bd6337a834fe	collecting requirements and ideas for architectural group decision-making based on four approaches		To collect requirements and ideas for architectural group decision-making (GDM), we present and analyze four different approaches to GDM that were developed by master’s students in a practical course at our university. The students involved had about five years of practical experience on average, and roughly 80 % of the students were working as software engineers while enrolled. We analyze the four approaches based on the criteria for evaluating approaches to architectural GDM defined by Rekha and Muccini; nearly all approaches fulfilled most criteria. Two criteria – support for conflict resolution and revisiting information – were partly addressed. The criterion of prioritizing group members was not addressed at all. The student-developed approaches provided some new ideas for architectural GDM, such as communication between stakeholders directly in the GDM tool and review of decisions after they have been made.	requirement	Iris Groher;Rainer Weinreich	2015		10.1007/978-3-319-23727-5_15	systems engineering;engineering;management science	SE	-82.49326575836119	-32.380108066011296	158646
c5c5f6dbc92b6fbd1f4871db4c7f92c0a038bce2	establishing a k-12 nanotechnology program for teacher professional development	engineering faculty;science and technology;k 12 education;teacher professional development engineering faculty k 12 education nanotechnology program development;nanotechnology;educational courses;teacher training;teacher professional development;ministry of education;taiwan k 12 nanotechnology program teacher professional development national science council taipei;program development;educational courses teacher training nanotechnology	Interest in science and engineering starts early. Opportunities need to be available for students to nourish their budding curiosity. In order to provide educational opportunities on the cutting edge of advanced technology, the National Science Council, Taiwan, R.O.C., established a nanotechnology program for K-12 teachers. Supported by the National Science Council and the Ministry of Education, the K-12 Nanotechnology Program was led by engineering faculty at National Taiwan University, Taipei, Taiwan, R.O.C. In about two years, 169 schools participated in five regional programs. The teachers began the program knowing little about nanotechnology. Survey results showed that participating teachers' attitudes and interests toward learning about science and technology increased through the involvement in the project. Issues about sustaining the effort and reaching out to students are also discussed.		Chih-Kuan Lee;Tsung-Tsong Wu;Pei-Ling Liu;Shihkuan Hsu	2006	IEEE Transactions on Education	10.1109/TE.2005.863429	engineering management;nanotechnology education;engineering;science, technology and society	SE	-79.31832443402648	-32.182191106390945	158702
072c87062bd7a16cbb073f32cec013f3439c03c7	programming web-course analysis: how to introduce computer programming?	visual programming computer aided instruction computer science education educational courses further education programming languages stem;introduction to programming visual programming textual programming mooc ivprog iassign moodle vpl nasa tlx mental workload web learning elearning;optical wavelength conversion;nasa tlx protocol computer programming logical thinking skills undergraduate stem courses science technology engineering and math courses programming logic programming language visual programming textual programming language traditional programming online course introductory programming	Nowadays, computer programming and logical thinking skills have been proposed as a fundamental knowledge, even to young learners. On one hand, in undergraduate STEM (Science, Technology, Engineering and Math) courses, the first contact of students with the logic of programming usually results in high failure rates. The literature and experiments conducted by the authors point out that this occurs regardless the adopted programming language. On the other hand, the literature presents some positive results when the paradigm used to introduce the subject is Visual Programming (VP), where the learners use icons to build their programs. This approach is successful even with young learners. In this context, a relevant question is whether, and how, the Visual Programming can help learners to understand a traditional textual programming language. The proposal of this work is to study differences between visual and traditional programming by analyzing the mental workload of using both paradigms during the introduction of algorithms and basic concepts of programming in the context of an online course of introductory programming. In order to perform such analysis, we adopted the NASA TLX protocol.	computer programming	Romenig da Silva Ribeiro;Leônidas de Oliveira Brandão;Tulio Vitor Machado Faria;Anarosa A. F. Brandão	2014		10.1109/FIE.2014.7044140	first-generation programming language;very high-level programming language;simulation;programming domain;computer science;extensible programming;functional logic programming;computer programming;programming paradigm;procedural programming;symbolic programming;inductive programming;fifth-generation programming language;programming language theory;programming language;comparison of multi-paradigm programming languages	Vision	-82.00467175475625	-37.474026738730686	159334
f5ba4e1e04ac4def19750e61b53223ea3decda0c	sexism: toxic to women's persistence in cse doctoral programs	attrition;doctorate;retention;sexism;longitudinal survey;women	Using longitudinal survey data from women in the CRA-W Graduate Cohort program, we measured the prevalence of observed or experienced sexism and its impact on departure from Computer Science and Computer Engineering (CSE) doctoral programs. Our data suggest that sexist behavior is perceived less often by these women than it is by women in general. In addition, few of the women who observe sexism are motivated by it to think of leaving their CSE doctoral programs. Nevertheless, when their reason for thinking of leaving is due to sexism they observed or experienced, the odds of women actually departing are at least 21 times greater than if they thought of leaving for any other reason.	computer engineering;computer science;credit bureau;persistence (computer science)	Joanne McGrath Cohoon;Zhen Wu;Jie Chao	2009		10.1145/1508865.1508924	applied psychology;knowledge management;computer science;cohort;survey data collection;persistence (computer science);odds	PL	-84.7292786214183	-25.378986317388513	159336
887336321d00d73307f20207102fe6de7cab0fa8	on project-based learning through the vertically-integrated projects program	vertical integration;video signal processing;hidden markov model;computer aided instruction;image annotation;materials;vertically integrated projects;data mining;video and image annotation project based learning and education vertically integrated projects;research and development;hidden markov models;undergraduate student;football;educational courses;transforms;video recording;project based learning and education;cities and towns;via vip course project based learning vertically integrated projects program georgia tech colleges of engineering and computing academic credit research and development issue multidisciplinary team vertically integrated team long term team video and image annotation vip project video mining algorithm football video football game;video and image annotation;hidden markov models cameras education transforms tracking materials cities and towns;project based learning;cameras;tracking;video signal processing computer aided instruction data mining educational courses educational institutions;graduate student	Georgia Tech's Colleges of Engineering and Computing initiated the Vertically-Integrated Projects (VIP) program in January 2009. Undergraduate students that join VIP teams earn academic credit for participating in design efforts that assist faculty and graduate students with research and development issues in their technical areas. The teams are: multidisciplinary — drawing students from around the university; vertically-integrated — maintaining a mix of sophomores through PhD students each semester; and long-term — each undergraduate student may participate in a project for up to six semesters. We describe the Video and Image Annotation VIP (VIA-VIP) project, which provides undergraduates unique opportunities to learn and apply state-of-the-art video-mining algorithms by processing a large archive of football videos recorded from GT football games. Their results are documented. Based on their feedback we believe the VIA-VIP course is on track to meet the needs of undergraduates in areas they don't usually see in the traditional undergraduate classroom.	algorithm;archive	Meredith Baxter;Byungki Byun;Edward J. Coyle;Tuan Dang;Thomas Dwyer;Ilseo Kim;Chin-Hui Lee;Ross Llewallyn;Nashlie Sephus	2011	2011 Frontiers in Education Conference (FIE)	10.1109/FIE.2011.6143064	simulation;engineering;data science;multimedia	HCI	-81.8104833472177	-31.315309488664315	159363
be6120cf79365280dd5054a2435e4c477d20a1b7	does process assessment drive process learning? the case of a bachelor capstone project		In order to see if process assessment drives processes learning, process assessments were performed in the capstone project of a Bachelor in Computer Science. Assessments use an ability model based on a small subset of ISO/IEC 15504 processes, its main Base Practices and Work Products. Students' point of view was also collected through an anonymous questionnaire. Self-assessment using a competency model helps students to recognize knowledge, skills and experience gained over time and in diverse contexts. The capstone project offered a starting point. Students' self-assessment and external assessment are correlated to some point but are not correlated for topics unaddressed in the curriculum or unknown by students.	bachelor of computer science;capstone (cryptography);iso/iec 15504	Vincent Leilde;Vincent Ribaud	2017	2017 IEEE 30th Conference on Software Engineering Education and Training (CSEE&T)	10.1109/CSEET.2017.39	computer science;curriculum;systems engineering;software;capstone;bachelor;competence (human resources)	SE	-81.05437679907448	-32.64362598133064	159431
8ccba3cb71c5135a9bffb37fb61754e3e15ab03b	virtual team tools: a case study of graduate student experiences and their perceptions of positive group work outcomes	dispersed mba group work;geographically dispersed teams;technology and teaming;managing virtual group work;virtual mba teamwork;virtual mba group projects;group work;virtual project teams;virtual team tools;mba student experiences;positive group work outcomes	This paper forms part of an exploration into how graduate business students in the USA experience group work within a part-time MBA programme. A single case, embedded study was conducted in 2011, which reveals new insight and understanding into the manner in which virtual team tools enhance the perception of positive group work outcomes for graduate business students. Study findings indicate the incorporation and teaching of virtual team tools enhances the perception of positive group work outcome for students. These benefits extended beyond the graduate classroom, with study participants reporting the value of these tools in relation to their world of work and professional life. Within this context, this paper also provides understanding into the manner in which educators can serve as facilitators of group work by the introduction of virtual team tools.	embedded system;experience	Patricia D. Rafferty	2013	IJSMILE	10.1504/IJSMILE.2013.055738	simulation;engineering;knowledge management;pedagogy	HCI	-78.84288523385723	-33.84369403037649	159457
6b2a653852036eefc631a296db8f78a9cc3f3037	desenvolvimento e avaliação de software para ensino de ciências: a farmacologia como modelo de interdisciplinaridade	software;tecnologia da informacao;thesis;aprendizagem;comunicacao interdisciplinar	Information technologies are increasingly embedded in the educational context. There is#R##N#great need for a deeper understanding of the impact of these technologies in the classroom#R##N#for teachers and students. The computers and educational software are an integral part of#R##N#the reality of many educational settings, however, more studies are needed for the#R##N#understanding the real benefits of the use these technologies. In this context, Pharmacology#R##N#is a central subject of the curriculum of all biological and health area and is a very#R##N#important subject for medical training. Literature data point to problems with the teaching#R##N#of this subject suggesting the need for change. Thus, this study consisted of a broad#R##N#description of the use of information technology in the educational environment, focusing#R##N#on the development and use of software for the teaching of pharmacology and their impact#R##N#on learning. The software was developed under an interdisciplinary perspective, grouping a#R##N#number of issues with various approaches and deeply rooted in pharmacology.#R##N#A number of gaps were found after a literature review on the use of information#R##N#technology in the Brazilian scene, as well as specific problems in the teaching of#R##N#pharmacology in medical schools in the state of Rio de Janeiro. On the other hand, the use#R##N#of the software showed positive results on learning this important subject within biological#R##N#and health curriculum.		Antonio Augusto Fidalgo-Neto	2009			humanities;engineering;biological engineering	Logic	-87.1782118900444	-31.900152684965935	159787
2abcc97ebd61e3f30f580f87b41dbf40ba76e144	interactive e-learning modules for teaching secure: a pilot study (abstract only)	cs1;feedback based learning;secure coding;security injections;cs2;e learning;cs0	Addressing the crucial need for cybersecurity learning materials, the Security Injections @ Towson project (towson.edu/securityinjections) has developed modules for CS0, CS1, CS2 and Computer Literacy courses that target key secure coding concepts including integer overflow, buffer overflow, and input validation. Assessment results indicate that these modules have led to an increase in students' security-awareness and their ability to apply secure coding principles. Each security injection module includes four sections - background, code responsibly (includes methods to avoid security issues), laboratory assignment with a security checklist, and discussion questions. In this study, we are proposing to enhance these modules by incorporating e-learning strategies including lesson segmentation, instant feedback, and self-paced lessons to increase student learning. In addition, we are designing a system with auto-grading functionality and dashboards to encourage adoption by instructors. Segmenting modules into smaller sections and including --gatekeeper questions will facilitate learning and reduce cognitive overload. Providing feedback on incorrect answers encourages students to revisit relevant sections. The goal of this feedback based approach is to improve student learning and content retention. The nature of the enhanced modules allows for self-paced learning which is applicable for online learning environments. We conducted a pilot study using a module in CS0 undergraduate computer science class that included 60 in-class and 9 online students. The results of the pilot study indicated increased attention towards the content and possible improvement in retention of concepts. This project is partially supported by NSF under grant DUE-1241738	buffer overflow;cognitive tutor;computer science;computer security;data validation;feedback;ibm notes;integer overflow;secure coding	Sagar Raina;Blair Taylor;Siddharth Kaza	2014		10.1145/2538862.2544289	simulation;computer science;knowledge management;operating system;software engineering;multimedia;secure coding;pedagogy	HCI	-80.4010904743128	-37.75837713594597	159995
35ea3abb55ceb40762355099215c05b538b7343e	an educational environment for training skills for global software development	software;teaching model;groupware;stakeholder involvement;training;virtual reality;virtual teams;groupware tools;remote sites;requirements elicitation;software engineering;virtual agents educational environment training skills global software development virtual teams remote sites groupware tools;virtual reality computer based training computer science education groupware linguistics multi agent systems software engineering;software engineering education;simulation software;training skills;simulators;computer science education;educational environment;multi agent systems;cultural differences training programming context software software engineering;virtual team;engineering education;computer based training;virtual agents global software development teaching model educational environment simulators software engineering education global requirements elicitation;global software development;global requirements elicitation;virtual agents;native english;programming;context;virtual agent;cultural differences;linguistics	Global Software Development (GSD) is a recent trend that allows team members to be located on different remote sites, thus forming a network of virtual teams working on the same projects which confront the typical problems caused by distance. The stakeholders involved in the project must be trained to deal with communication difficulties such as those related to cultural and language differences or the appropriate use of groupware tools when English is used as the lingua franca. We present a simulator which allows universities and companies to train students or inexpert engineers in the new challenges introduced by GSD, thus avoiding the problems that this activity entails in real settings. Our proposal places non-native English speakers in predefined virtual GSD scenarios in which they will interact with virtual agents of different cultures that play different roles in the project.	collaborative software;simulation;software development	Miguel J. Monasor;Aurora Vizcaíno;Mario Piattini	2010	2010 10th IEEE International Conference on Advanced Learning Technologies	10.1109/ICALT.2010.35	programming;simulation;engineering education;simulation software;computer science;knowledge management;artificial intelligence;requirements elicitation;virtual reality;management;cultural diversity	Robotics	-83.97015030995368	-33.970023371971116	160248
08e746f5c358491de74e8bfa1904a32e90b9274e	learnsat: a sat solver for education	detailed output;dpll algorithm;educational purpose;extensive research;sat solver;assignment tree;educational material;implication graph;prolog	The extensive research on SAT solving and the development of software for applications have not been matched by the development of educational materials for introducing students to this field. LearnSAT is a SAT solver designed for educational purposes. It implements the DPLL algorithm with CDCL and NCB. LearnSAT produces detailed output of the execution of the algorithms. It generates assignment trees and the implication graphs of CDCL which are rendered by dot. LearnSAT is written in Prolog so that the algorithms are concise and easy to read.	boolean satisfiability problem;solver	Moti Ben-Ari	2018	J. Open Source Software	10.21105/joss.00639	parallel computing;boolean satisfiability problem;computer science	SE	-83.99976773978108	-37.56673781614109	160680
48520ad6ca142114543cc25f1382bf8b0f2ff8e6	it in educational management: can it support solution of e-cheating problem?		The paper tries to answer the question – can IT tools help to solve e-cheating problem during the course of information technologies and computer sciences. The scale of e-cheating leads to the situation that dishonest students have better grades than honest ones. None of the simple solutions known from the literature helped to solve that problem, so IT tools were used. The first part of the paper gives a critical review of the literature of the subject. In the second one comparative analysis of results of the two surveys is performed. The first one was based on a survey conducted in United States, the second in Australia. This analysis shows that there are very big cultural differences in students’ attitude to cheating in different countries. The third part presents two software solutions of e-cheating problem investigated during research – monitoring software and safe exam browser. Final remarks are accompanied by raising an open question – will these IT solutions be valuable in the coming decade?		R. Robert Gajewski	2010		10.1007/978-3-319-54687-2_10	knowledge management;management science	DB	-79.15932299620255	-27.31170757224155	160838
67e7bc3f21f2cad14441f383bb6f1cdf479f07d7	educational microsoft excel add-ins - solving multicriteria decision making problems	analytic hierarchy process;multi criteria decision making;feedback;pair wise comparisons;analytic network process;fuzzy	There exists wide range of software products to support decision making. Main disadvantage of those#R##N##R##N#software products is that they are commercial and relatively expensive and thus it prevents them to be used#R##N##R##N#by students or researchers. Also they are not suitable from pedagogical point of view. This paper introduces#R##N##R##N#two Microsoft Excel add-ins DAME and FVK that were developed for students to help them understand#R##N##R##N#basic principles of Multicriteria Decision Making. They donât behave as a black box but display all results#R##N##R##N#of all intermediate calculations which are very important for educational purposes. The proposed software#R##N##R##N#packages are demonstrated on couple of illustrating examples of real life decision problems.		Radomír Perzina;Jaroslav Ramík	2015		10.5220/0005494005100515	fuzzy logic;analytic hierarchy process;simulation;computer science;artificial intelligence;operating system;software engineering;data mining;feedback;mathematics;management;world wide web;analytic network process	Logic	-87.49159963597508	-37.97343190745533	160951
0a4a10e401169dcfe5df2ab8be0e68cc81da529d	what motivates the authors of video game walkthroughs and faqs? a study of six gamefaqs contributors		Walkthroughs, also known as FAQs or strategy guides, are player-authored documents that provide step-by-step instructions on how to play and what to do in order to finish a given video game. Exegetical in their length and detail, walkthroughs require hours of exacting labor to complete. Yet authors are rarely compensated for work that markedly differs from other kinds of fan creativity. To understand their motivations, I interviewed six veteran GameFAQs authors, then inductively analyzed the transcripts. Open coding surfaced five themes attributable to each participant. Together, these themes constitute a shifting mix of motivations, including altruism, community belonging, self-expression, and recognition — primarily in the form of feedback and appreciation but also from compensation. These findings increase our understanding of the motivations that drive fan labor, even as they complicate assumptions about its exploitation.	first monday;software walkthrough	Michael J. Hughes	2018	First Monday		multimedia;altruism;open coding;computer science;creativity	HCI	-85.50930822538817	-33.05975350063082	160964
b18de177da99cd3685a69f4eae026271a279a56f	a university's educational program in computer science	north american;computer science education	After a review of the power of contemporary computers, computer science is defined in several ways. The objectives of computer science education are stated, and it is asserted that in a North American university these will be achieved only through a computer science department. The program at Stanford University is reviewed as an example. The appendices include syllabi of Ph.D. qualifying examinations for Stanford's Computer Science Department.	computer science	George E. Forsythe	1967	Commun. ACM	10.1145/363018.363038	mathematics education;science education;computer science	Logic	-79.40231920409761	-30.808902511785163	160971
60091a903d55ce7a846e2c9b0db624c7f22d404b	improving the bridge: making engineering education broader and longer	global communication;art;females;bridges engineering education art educational programs cultural differences maintenance engineering engineering management writing global communication qualifications;political aspects;bridges;maintenance engineering;sense of community;females engineering education cultural aspects political aspects social aspects engineering and society programme technical education educational courses surveys;social aspects;engineering management;qualifications;engineering and society programme;educational courses;engineering education;technical education;educational courses engineering education;writing;critical thinking;educational programs;cultural aspects;surveys;cultural differences	In response to the need to prepare engineers to be aware of and sensitive to the cultural, political, and social aspects of their work, McMaster University began a five-year Engineering and Society Programme in 1991. The complete technical education in a selected engineering discipline is supplemented with a set of seven courses which examine the complex interactions between technology and society. In addition, a series of focused elective courses are taken outside of the Faculty. The viability and success of the programme have been assessed through extensive surveys of in-course students, alumni and Engineering faculty members. Findings show that this Programme attracts a disproportionate number of females and, in general, students who prefer 'deep' learning. The Programme has been well received by students. Especially valued are: the freedom to take courses outside of Engineering; the learning of critical thinking, writing, and oral presentation skills; and the sense of community experienced. Overall assessment of the value of the Programme to the Faculty by faculty members is high.		Robert C. Hudspith	2000		10.1109/ISTAS.2000.915569	mathematics education;engineering management;engineering;pedagogy	HCI	-79.24030716633656	-32.66258826939397	161057
e9f02d3e2dc2178a2dd7e2104ba08db6a26eb28d	applications of specifications grading in computer science courses (abstract only)	mastery grading;grading models;specifications grading	Traditional, points-based grading poses several challenges to computer science educators. Students can lose focus on learning the material and instead focus on the game of trying to accumulate enough partial credit to get to the next grade tier. Faculty can waste large amounts of time obsessing over partial credit point assignment for a particular assignment. It can be difficult to use course grades to connect student performance with learning outcomes for the course and the program. This poster presents an overview of an alternative approach to traditional grading: specifications grading. Specifications grading is a points-free, mastery style of grading that replaces partial credit with quality feedback and revision opportunity. This model provides several advantages over the traditional grading approach. These advantages include better support for high academic standards and rigor, an increased focus for students on learning by removing the intrinsic motivation to earn points, and a stronger connection between student grade assessments and course learning outcomes. The poster will provide an overview of specifications grading and its benefits, along with details of implementation for an Android application development course and an introductory-level programming course. Additionally, the poster will include student evaluation data from previous offerings of the courses.	android;computer science;multitier architecture	Christian Roberson	2017		10.1145/3017680.3022403	simulation;computer science;artificial intelligence;multimedia;pedagogy	AI	-81.41119110880446	-36.552941273777506	161178
3c040c090fbe4cc9254e9bef48a2399604eabf40	information technology of web-monitoring and measurement of outcomes in higher education establishment		The given work considers a new methodology of higher education establishment management. According to the suggested approach decision-making in HEE must be based on information collected from both internal and external data sources. It is suggested to consider the web as an external data source for monitoring activities. In order to provide data collection from the web the information technology of web-based monitoring was developed. The described technology is realized on the basis of multiagent software paradigm. The business value of information collected with the help of the developed information technology was estimated in case study.		Olga Cherednichenko;Olha Yanholenko	2015		10.1007/978-3-319-24366-5_8	library science;engineering management;knowledge management;political science	EDA	-85.71784259326097	-29.07681157267785	161557
59c3288705c32d11b2aa6ef121d6b03e2d45709b	developing a web-based two-tier test for internet literacy	psicologia y educacion;grupo de excelencia;educacion;grupo a;editorial material	For the past three years we have provided our third year pharmacy students with an elective course in information literacy – “Pharmacology on the Internet”. The course intends not only to provide students with useful links to pharmacological information, but also continually stresses the need to view such material with caution. Thus, students become aware of the fact that even apparently authoritative sites may contain out-of-date information, not to mention the deceptions and deceits abounding in less reputable sites. The course has been well received by the students; numbers enrolling in the course have increased each year. The students state that after completing the course, they have a greater critical awareness of web-based material. We performed a pre-/post-course questionnaire on attitudes to different kinds of web based material. There were not many changes occurring which could be attributed to the course, but a statistically significant change was noted in their assessment of pharmaceutical company web sites. Prior to the course, they viewed these sites as less reliable than governmental agencies, but after the course they assessed them as being just as reliable, easy to use, up-to-date, “scientific” and useful in their future profession as sites run by public organizations.	information literacy;internet;multitier architecture;web application	Chien Chou;Chin-Chung Tsai;Pei-Shan Chan	2007	BJET	10.1111/j.1467-8535.2006.00644.x	the internet;web application;knowledge management;computer science;need to know;literacy	Web+IR	-79.92461570067711	-26.96547135320893	161787
5f7caefee72ce34bdf269e4fd215f1ebdcae544d	teaching programming in the context of solving engineering problems	computers;computer languages;electrocardiography;programming profession;context;matlab	This paper describes the course that was developed at the authors' University to introduce all first-year engineering students to the fundamentals of computer programming within the context of solving engineering problems. This two credit-hour, semester-long course incorporates the programming language MATLAB and is a required course for students who major in civil, electrical, and mechanical engineering. The course, which is usually taken during the second semester of their first year of study, was designed to utilize active learning techniques by having the students complete a series of laboratory exercises and projects that introduce computer programming and engineering applications. This paper describes the origins of the course, the laboratory exercises and projects, how the course was administered, and an assessment of how successful the course was based on student grades, student feedback, and a student survey. The results indicate that the course increased students' knowledge of programming in the context of solving engineering problems.	active learning (machine learning);computer programming;experiment;matlab;programming language	Joseph P. Hoffbeck;Heather E. Dillon;Robert J. Albright;Wayne Lu;Timothy A. Doughty	2016	2016 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2016.7757617	simulation;computer science;programming language theory;computer engineering	SE	-81.56064381455978	-37.009761718954465	162200
3a5de4df1828a21cb4909760312186c042984d56	civic action-driven information literacy instruction in taiwan		The purpose of this study was to investigate the feasibility for imple‐ menting a civic action-oriented information literacy plan across disciplines within an elementary school, including analysis, design, development and evaluation of the plan. The topic of the plan was the US-Taiwan Eco-Campus Partnership Program. A collaborative action research approach was used for this study. The researchers collaborated with a librarian who taught information literacy, as well as a science teacher and an English teacher. The civic action instruction lasted for ten months with two cycles. This study was conducted in an elementary school in the area of Chiayi, Taiwan. The data was gathered through participant obser‐ vations, tests, surveys, interviews, and document analysis. The results showed that it is feasible to promote the civic action-oriented information literacy curric‐ ulum in sixth grade class. Students’ problem solving skills, rational participation in public actions, and intercultural understanding improved through several strat‐ egies. They were progressive information literacy curriculum, collaboration among teachers, the support of school administration, and integration of infor‐		Lin Ching Chen;Yaw-Huei Chen	2016		10.1007/978-3-319-52162-6_51	curriculum;general partnership;action research;political science;information literacy;pedagogy;information technology	HCI	-77.94768090289709	-33.216209623411764	162425
bd859873ba9c973074f6659c58a423c7d4f61724	cyber defense competition: enhancing student competency in information security	curriculum development;learning experience;information security;cyber security;security education;pacific northwest	This poster presents the experiences of two teams at respective universities on preparing and attending Pacific Northwest Cyber Defense Competition. Both teams benefited from participating in the competition with students expressing positive learning experiences. Recommendations for other schools that may be interested in competing or setting up in-house cyber defense exercises will be presented.	experience;information security;recommender system	Yan Bai;Carol Taylor	2011		10.1145/2047594.2047675	simulation;computer science;information security;computer security	HCI	-81.08361363453321	-29.783828936319868	162555
b816d4bcfcb360cc42a9554a6a70f89842c2fbe4	the implementation of pneumatic training instrument in higher learning institutions: analysis of two institutions	laboratories training instruments engineering education knowledge engineering accreditation;instruments;comparative analysis;pneumatic systems educational courses educational institutions engineering education further education industrial training;practical assessment;training;pneumatic training instrument pti;mqa pneumatic training instrument pti comparative analysis course learning outcomes practical assessment;engineering education;accreditation;mqa;course learning outcomes;course syllabus pneumatic training instrument higher learning institutions teaching process learning process pti exercise based laboratory instrument technology programs engineering programs course learning objectives clo pneumatic laboratory;knowledge engineering	Research conducted on laboratory instrument is performed to pursue broader knowledge that can be generalized and systemized for practical application in the teaching and learning process. Pneumatic Training Instrument (PTI) is an exercise-based laboratory instrument which is employed to develop students' practical skills while conducting experiments in the laboratories. This paper highlights the practical skills stipulated for technology/engineering programs in the PTI laboratory. The laboratory tasks require the students to apply their knowledge and skills on PTI experiments. Students were exposed to the theoretical aspects of PTI through the lectures and later perform the experiments by completing the worksheet instructions on PTI. In regards to their practical skills, assessment is conducted during designations, demonstrations and installations employed by lecturer which must be aligned with the course learning outcomes and teaching and learning in the laboratory. This paper investigates the level of knowledge and practical skills expected of Diploma in Engineering Technology students in two institutions of higher learning. These institutions offer similar PTI course with comparable course learning objectives (CLO), teaching and learning activities and assessment techniques in the Pneumatic Laboratory. Pneumatic is a common module taken by all the technology/engineering students for the both case study institutions. In order to answer the research questions of the study, a qualitative approach was undertaken. The CLO and the course syllabus pertaining to the PTI experiments were analyzed to compare the structure of PTI practice in the institutions. The interface between the theories and practical skills sourced from the lectures, demonstration and practice on PTI will also be discussed in the paper. The finals section of the paper reports the distinctive PTI implementation in both institutions in regards to the teaching and learning activities, assessment and course learning objectives.	color light output;diploma;experiment;theory	Huzaimi Bin A. Hamid;Marlia Binti Puteh	2014	2014 International Conference on Teaching and Learning in Computing and Engineering	10.1109/LaTiCE.2014.54	simulation;engineering;pedagogy;mechanical engineering	Robotics	-80.39112194055267	-33.26632006236459	162570
415b3e1f059c089b6857c3cca4f57c9724c35537	m&s education: practical approach	undergraduate education;technician education;modeling and simulation;on the job training;courses;apprenticeship	As M&S work force needs increase, debate continues about what Modeling and Simulation (M&S) education should look like or where it belongs. Many schools are currently taking steps to develop undergraduate programs in M&S. This paper proposes a practical M&S curriculum that can be implemented as part of a two-year and/or four-year engineering program. The premise of this curriculum is to offer students generic M&S education and to provide a solid grasp of the M&S field. Equipped with this knowledge, a student may enter the work force as a technician prepared for further study in M&S. On-the-job training programs such as the M&S Apprenticeship at Northrop Grumman Shipbuilding - Newport News, presents an advantage by allowing the students to synthesize new knowledge immediately.	simulation	Irin Hall	2009			simulation;engineering;apprenticeship;modeling and simulation;management;mechanical engineering	SE	-78.28280914832449	-30.873881593774378	162614
ca8004ff7ec34c183721fe294f9c812db0aa7ee8	computer forensic projects for accountants	computer forensics;digital forensics	Digital attacks on organizations are becoming more common and more sophisticated. Firms are interested in providing data security and having an effective means to respond to attacks. Accountants possess important investigative and analytical skills that serve to uncover fraud in forensic investigations. Some accounting students take courses in forensic accounting but few colleges offer a course in computer forensics for accountants. Educators wishing to develop such a course may find developing the curriculum daunting. A major element of such a course is the use of forensic software. This paper argues the importance of computer forensics to accounting students and offers a set of exercises to provide an introduction to obtaining and analyzing data with forensics software that are available free online. In most cases, figures of important steps are provided. Educators will benefit when developing the course learning goals and curriculum.	computer forensics;data security;list of digital forensics tools	Grover S. Kearns	2015	JDFSL		accounting;engineering;world wide web;computer security;computer forensics	Security	-81.23443325470159	-28.09039726805981	162621
db79d9a3bcd0b95d9510eb79c48ce510ad7ae782	lessons from adopting a maker approach to teaching operating systems with raspberry pi		PurposernrnrnrnrnThis paper aims to propose a maker’s approach to teaching an operating systems (OSs) course in which students apply knowledge of OSs to making a toy robot by focusing on input/outputs, hardware devices and system programming.rnrnrnrnrnDesign/methodology/approachrnrnrnrnrnClassroom action research is involved in this study.rnrnrnrnrnFindingsrnrnrnrnrnAfter the course was taught in this maker’s approach in two consecutive school years, some observations were reported. Students were enthusiastic in doing a series of assignments leading to the completion of a toy robot that follows a black line on the ground. In addition to enjoying the learning process by making tangible products, the students were excited to be able to demonstrate the skills and knowledge they learned with the robots they made.rnrnrnrnrnResearch limitations/implicationsrnrnrnrnrnThe research results were based mainly on the instructor’s observations during the lectures and labs.rnrnrnrnrnPractical implicationsrnrnrnrnrnLessons from this study can inspire other instructors to turn traditional engineering courses into maker courses to attract students who enjoy making. Industry should welcome engineering graduates to join the companies with more hands-on experiences they have gained from maker courses.rnrnrnrnrnSocial implicationsrnrnrnrnrnAlthough the maker movement has attracted much attention in K12 education, there is little research that studies how this maker spirit can be incorporated in traditional engineering courses that focus mainly on theories or software.rnrnrnrnrnOriginality/valuernrnrnrnrnIncluding electronics and mechanical components in programming assignments would bring surprising effects on students’ motivation in learning.	operating system;raspberry pi 3 model b (latest version)	Wing-Kwong Wong	2018	Interact. Techn. Smart Edu.	10.1108/ITSE-12-2017-0064	curriculum;higher education;computer science;engineering education;operating system;action research;teaching method;originality;system programming;experiential learning	OS	-79.95250431392085	-34.748264070248105	162716
3266485361e7dfde2eeeeabfe783b4a853d87a30	integrating globally distributed team projects into software engineering courses	virtual team projects globally distributed software development student projects virtual teams;multilanguage setting globally distributed team projects undergraduate software engineering courses virtual environments 3 person virtual teams three year multiinstitution multiculture;virtual team projects;virtual teams;globally distributed software development student projects;software engineering;computer science education;virtual groups software engineering software cultural differences avatars education organizations;educational courses;software engineering computer science education educational courses	This paper describes a research program on the introduction of globally distributed teams into undergraduate software engineering courses. A pilot study, now completed, involved students at a single institution using two different virtual environments while cooperatively developing requirements artifacts in 3-person virtual teams. We describe the results of this pilot study and the plans for its extension to a three-year multi-institution, multi-culture, and multi-language setting.	apache continuum;computer science;computer scientist;distributed computing;experience;requirement;sociotechnical system;software development;software engineering;virtual reality;virtuality (gaming)	Steven Case;Sherry K. Schneider;Laura J. White;Steven J. Kass;Kelly Manning;Norman Wilde	2013	2013 3rd International Workshop on Collaborative Teaching of Globally Distributed Software Development (CTGDSD)	10.1109/CTGDSD.2013.6635242	personal software process;team software process;simulation;software engineering process group;systems engineering;engineering;knowledge management;social software engineering;software development;software walkthrough	SE	-83.49625113096968	-33.71669682782503	162829
ab775a17a6284885bfdca3627a801aac48d0e969	walking on 2 legs: 3d-structured method alignment in project management		This paper explores the possibility of the use of tangibles in the field of education and project management. We propose an interactive instrumentation based on specific building blocks referred to as W2L (Walking on 2 Legs) that can be used as a (pedagogical) practice to guide and facilitate method structuring and alignment in project design. The need for this instrumentation is motivated by a teaching approach where students are asked to select, assign, and adjust methods pertaining to a specific project design. In order to improve their respective skills, we have designed and implemented W2L for method chaining along project phases or milestones using Lego© bricks and adapting a table-top system. We could test W2L with Knowledge Management students when planning their project to evaluate the effectiveness of the approach. An analysis of feedback and results revealed positive impact on methodologically informed project design.		Christian Stary	2017		10.1007/978-3-319-76908-0_4	systems engineering;milestone (project management);project management;method chaining;project planning;engineering;instrumentation	NLP	-86.20900289709294	-31.6013343238127	163057
b5a4a0ebbe6376ec2d148d2e8554d029feb93113	gaming at work: a learning environment for synchronized manufacturing		This work addresses the challenges raised by the new work organizations to their personnel and points out the learning opportunities which the Internet media can bring to the process of continual development of people at work. We show how concepts of synchronized manufacturing could be achieved through a computerized game-based activity. The Dice Game is a synchronous simulation game which illustrates our discussion. ß2000 John Wiley & Sons, Inc. Comput Appl Eng Educ 8: 162±169, 2000	distributed computing;eng-tips forums;internet;john d. wiley;siam journal on scientific computing;simulation	Maria Cecília Calani Baranauskas;Nelson G. Gomes Neto;Marcos Augusto F. Borges	2000	Comp. Applic. in Engineering Education	10.1002/1099-0542(2000)8:3/4%3C162::AID-CAE5%3E3.0.CO;2-K	simulation;computer science;engineering;electrical engineering;artificial intelligence;mechanical engineering	HCI	-86.12824823970318	-30.094848435094583	163309
2dfb0eaee8d227276aca81145e2706031a89d545	development of a framework for the use of a tool for machine learning and data mining		The “Universidad Politécnica de Aguascalientes” is an institution who’s interested in quality education, ensuring the control of the subjects that are imparted in a long term in the mayor. Taking this on account, the design and development of a Moodle platform focused on data mining was planted, this subject is currently given to ninth quarter students. In order to re-inforce the knowledge that the course has to offer, it was decided to utilize as a support tool “Weka”, it is classified as an “intelligent software”. It provides a sustenance in different areas, such as, Marketing, Manufacturing, Health, Energy, Finance, Medicine, inter alia, for its application it must be taken in account the type of assignment it is wished to realize. The purpose of this course is for the student to obtain the necessary knowledge in this field and during this process the material developed can be of use as a tool for this.	data mining;lourdes;machine learning;weka	Jacqueline Ramos Landeros;Ma. De Lourdes Margain Fuentes	2016	Research in Computing Science		data mining;computer science	ML	-80.678275270526	-29.437209320584873	163349
94ea1440427ea047fe41d393c471878b3cbbf803	using game-based learning and simulations to enhance engineering and management education	engineering education game based learning simulations;equipment selection;measurement;costing;management education civil engineering computing computer aided instruction computer games construction industry costing digital simulation engineering education equipment selection further education;computer aided instruction;construction industry;companies;civil engineering computing;companies computational modeling educational institutions schedules construction industry measurement;computational modeling;management education;game based learning;engineering education;schedules;game based learning construction management students construction engineering students cal poly san luis obispo california polytechnic state university coins construction industry simulation technical knowledge management skills management professionals tool selection labor selection equipment selection cost higher education coursework training construction industry educational environment management education engineering education;computer games;further education;digital simulation	Simulations allow students in an educational environment to experience tasks and the results of their decisions, which they will be asked to perform upon graduation. In the construction industry, many employees are hired that do not have the training or coursework at the university level that provides them access to such simulations. Simulation and gaming is not new to higher education but in the past was done in a very narrow vein and because of the complexity and development time required to produce them. Most have not been robust enough to engage students. Managing engineering and construction involves being able to make decisions that involve balancing time, cost, quality, resources, and identifying and solving a variety of issues related to the selection of equipment, labor, and tools. The skills required of today's construction engineering and management professionals are a combination of management skills and technical knowledge. This paper describes the development and implementation of Construction Industry Simulation (COINS) designed and developed at California Polytechnic State University, San Luis Obispo (Cal Poly) to prepare construction engineering and management students for the real world.	computer simulation	Thomas M. Korman;Hal Johnston	2013	2013 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2013.6684916	engineering management;simulation;engineering;knowledge management;construction management	SE	-80.02053018021704	-33.18502420602978	163401
753e3d5ea144f1ff69ecbd7e9a5bc704c2b72ca6	programming should not be part of a cs course for non-majors	non major s course;algorithmic problem solving;programming	When discussing what should or should not be included in a university-level Computer Science (CS) course for non-majors, one is really defining the course’s learning outcomes. So the question regarding programming’s role in such a course is a question whether the course should have programming related learning outcomes—e.g. students should be able to trace code fragments containing selection and/or iteration constructs, or students can correctly construct programs to perform simple list processing; findSum, or generate interesting graphical outputs. These are excellent student outcomes. As Herbert and Stuart Dreyfus wrote in “Mind Over Machine:” Michael Goldweber	computer science;graphical user interface;hubert dreyfus's views on artificial intelligence;iteration;lisp	Michael Goldweber	2015	Inroads	10.1145/2727128	programming domain;computer science;theoretical computer science;programming paradigm;procedural programming;inductive programming;algorithm	ML	-83.82686064912176	-37.62445650435575	163793
b43e98bae78ec866e88dd5aa75163ac9a13d0d74	challenges and issues in the development of a software engineering simulation game	analytical models;software;investments;software engineering computer aided instruction computer science education educational courses iterative methods organisational aspects serious games computing;software process improvement;computer aided instruction;games software engineering software investments organizations education analytical models;simulation game;software engineering;software process improvement software engineering simulation game;iterative methods;computer science education;serious games computing;games;educational courses;educational simulation games software engineering simulation game software engineering courses team based project approach software development organization software applications organizational cultures iterative approach incremental approach;organizations;organisational aspects	In Software Engineering courses, students are introduced to important theories and concepts. However, these courses lack a practical opportunity for students to experience them more effectively. Even with the team-based project approach it is not possible to train students in all the real situations of a software development organization, due to the very nature of software applications and the large variety of organizational cultures. Simulation games are an appropriate complementary approach to the traditional educational techniques. Students' preparation can be improved by allowing them to practice, through a simulator, activities that are infeasible to practice during a Software Engineering course, due to restrictions of time and resources. Unfortunately, the creation of a simulation game is not a straightforward activity; it involves many different skills and addresses different viewpoints. In this work, we discuss the issues and challenges associated with the creation process of a Software Engineering simulation game. We adopted an incremental and iterative approach, where each step involves different knowledge, allowing us to point out a set of important aspects that should be taken into account during the development. These aspects can guide new developers and instructors in the design and selection of educational simulation games.	iterative method;simulation;software development;software engineering;theory	Daniela Cristina Cascini Peixoto;Rodrigo M. Possa;Rodolfo F. Resende;Clarindo Isaías Pereira da Silva e Pádua	2012	2012 Frontiers in Education Conference Proceedings	10.1109/FIE.2012.6462318	personal software process;team software process;simulation;software engineering process group;computer science;systems engineering;package development process;software design;social software engineering;software development;software design description;software engineering;iterative and incremental development;software construction;software walkthrough;resource-oriented architecture;goal-driven software development process;software development process;game testing	SE	-84.10790289119561	-34.425692309719295	164008
9cbe2837bdd1b8b30d96fbad62e272a1656014d2	the effect of students' educational background and use of a program visualization tool in introductory programming	distance education;program visualization;educational background;odl;tracing;odel;e learning;assessment	Introductory programming modules frequently have a low pass rate. This paper reports on an attempt to address this issue by introducing an interactive program visualization tutorial in the course material for an introductory programming module at the University of South-Africa (Unisa). The tutorial aimed to assist first-year programming students in an open, distance and e-learning (ODeL) environment in learning how to trace programs. To investigate the impact thereof students completed a questionnaire on their use of the tutorial, which were analysed in combination with their final marks for the module. This was repeated over two semesters.  The findings indicated that the tutorial did not have the desired effect in the ODeL environment. Students' educational background had a far larger impact on their final marks than their tutorial use, emphasising the real need to take educational background into account when developing course material, particularly in ODeL.	interactive computing	Marthie A. Schoeman;Helene Gelderblom	2016		10.1145/2987491.2987519	mathematics education;simulation;computer science;multimedia	HCI	-80.87188112749466	-37.92627943740018	164050
bd545239fc69342cc8c8ada7d898d41e196c3bda	online examination system and assessment of subjective expression	subjective expression;computers;it professional;subjective expression online examination system;certification;information technology;information science education;behavioral scientists;testing;companies;business organization;senior management position;online examination system;information technology continuing professional development educational administrative data processing information science education;information technology online examination system student learning behavioral scientists subjective writing skill senior management position higher level education business organization;educational administrative data processing;writing knowledge management testing technological innovation computer science education educational technology engineering profession memory management companies information technology;writing;higher level education;student learning;continuing professional development;subjective writing skill	Learning of student can be assessed by objective type and subjective type questions. Educationists and behavioral scientists declare subjective writing skills essential for senior management positions. Investigation revealed that IT professionals who qualified through objective type online examination and lack subjective writing skills could not earn rise in career to top management positions easily. The study considered ability of a student to express knowledge subjectively as the independent variable and higher management position requirements as the dependent variable. It hypothesized better the student of higher level education in his/her subjective expression, more considerable s/he will be for positions at senior management in business organizations.The study selected 100 private companies engaged in the field of Information Technology (IT) in Rawalpindi and Islamabad, Pakistan who seek OCP or MCSD or MCSE certified professionals. The study employed simple interviewing approach for collecting data from the HR departments of the selected companies about how many OCPs, MCSDs and MCSEs have been promoted to higher management positions and how their subjective expression skills were considered for promoting them to senior positions. It found that promotions were too few among the IT professional lacking subjective writing skills. The study reocmmended to ensure subjective expression writing skills during assessment.	open core protocol;requirement	Naveed Azim;Imran Naqvi;Kashif ur Rehman	2009	2009 International Conference on Education Technology and Computer	10.1109/ICETC.2009.28	knowledge management;continuing professional development;software testing;certification;management;writing;law;information technology;pedagogy	HCI	-82.83578490564756	-27.50002232648235	164054
f165f9ee24ced6702bde6b534b9081d9eb550809	seeing is believing: using computer graphics to enthuse students	mathematics computing;computer graphics engineering profession instruments cultural differences computer science australia surgery concrete employment collaborative work;computer graphics;computer aided instruction;computer graphics computer assisted instruction motivation students teaching;computer science education computer graphics teaching mathematics education;computer graphic;underrepresented groups;computer graphics education;computer science education;mathematics education;underrepresented groups education computer graphics;teaching;teaching computer aided instruction computer graphics computer science education mathematics computing	We believe that the visually rich medium of computer graphics is an excellent topic for teaching mathematics and computer science, and it can help to draw in students disaffected by traditional teaching approaches. Our argument is not that our current teaching approaches are invalid and we should abandon abstract thought in mathematics and computer science. Instead that we should broaden the appeal of these disciplines and seek to be more inclusive. Therefore, we discuss a couple of strategies we have applied that revolve around computer graphics as the topic and medium for retaining students and restoring interest in those students we have already lost	computer graphics;computer science	Peter D. Stephenson;Joan Peckham	2006	IEEE Computer Graphics and Applications	10.1109/MCG.2006.136	computer literacy;education;human–computer interaction;computer science;ap computer science;multimedia;computer graphics;philosophy of computer science;information and computer science;computer graphics (images)	Graphics	-81.18419480491333	-35.99299006159093	164170
f14e415cd45925380f9c0ece8af5037c5bfd96b9	an approach to teaching introductory programming for it professionals using games	serious games;programmatically controlled hardware devices;game programming;teaching introductory programming	This paper addresses the difficulties of teaching introductory programming to students in the field of information technologies and computer science. It reviews several existing approaches to make learning programming more attractive: using games or programmatically controlled hardware devices. The author believes that programming moving virtual actors motivates most of the students to learn programming. Moreover, seeing moving visual objects on the computer screen makes it easier for the students to perceive the mistakes in their code and correct them. However, writing such programs without any additional tools is not a task for a novice programmer. That is why this paper proposes an approach for teaching programming for IT professionals using a new game library, specially developed for training, which controls virtual models moving in a virtual environment. The system uses appealing 3D graphics to attract attention. Several sample programs, illustrating main features of this approach, are presented. Screenshots of the sample programs and results of teaching a pilot group of students are given at the end of the paper. Initial results show that the students enjoyed the course, most of them liked the game library approach better than the traditional one and do recommend using it in the future. More than half of the trainees improved their results. An Approach to Teaching Introductory Programming for IT Professionals Using Games	3d computer graphics;computer monitor;computer science;programmer;screenshot;virtual actor;virtual reality;visual objects	Tzvetomir Ivanov Vassilev	2015	IJHCITP	10.4018/ijhcitp.2015010103	simulation;computer science;multimedia;programming paradigm;game programming	HCI	-82.39535710093666	-37.03734389846748	164638
9f2ab2f9a76e78945f13c5ba90aae98d57e67c0a	effective electronic marking for on-line assessment	automated testing;symbolic computation;usability testing;user interface;collaboration;qa76 electronic computers computer science computer software;qa75 electronic computers computer science;virtual office hours;instructional computing	In response to the demands of increasing student numbers, the BOSS system for submission and assessment has been constructed to enable student programming assignments to be submitted and tested on-line. More recent developments of this system have been concerned with the addition of electronic marking facilities that incorporate both automated marking, resulting from the automated testing, and manual marking in a secure environment. This paper briefly reviews the system and describes in detail the electronic marksheets, their functionality, and their user-interface.	item unique identification;online and offline;secure environment;test automation;user interface	Mike Joy;Michael Luck	1998		10.1145/282991.283096	symbolic computation;human–computer interaction;computer science;operating system;software engineering;programming language;user interface;management;collaboration	HCI	-80.54613101816197	-37.30735417523454	164735
8b7bf2ad656a136e6e4ee908ed4ea145b2928bfd	the craft of programming interaction	computer science;human computer interaction	The creation of useful artefacts with rich experiential qualities required quality driven interaction designers and programmers with the ability to simultaneous problem setting and problem solving. Interaction design is a design practice that defines the appearance and function of digital artefacts. Bridging interaction design and engineering is problematic because design and engineering have different epistemology. Designers are trained to see a plethora of future designs for a situation and explains the phenomena of a context. Engineering focus on problem solving and depends on agreement about ends. In this paper I suggest that the poor state of designers and programmers who are not standing together can be avoided if we give up the claim that software development should be engineering or science, and instead see it as a quality-driven craftsmanship.	bridging (networking);interaction design;problem solving;programmer;software development	Rikard Lindell	2012			human–computer interaction;computer science;software development;experiential learning;interaction design;bridging (networking);interactive systems engineering;craft	HCI	-82.73439939818904	-35.498865251706064	164904
bf0f53d074aa008a41818f8e7e3e50b0ded6bf2b	model for rapid, large-scale development of learning objects in multiple domains	lo production process large scale development learning objects multiple domains lo educational resources instructional settings face to face communication instructional designers code developers;comparative analysis;learning objects;computer aided instruction;production learning objects asynchronous model;instructional design;production process;educational resource;large scale;asynchronous model;learning object;production;subject matter expert;production companies electronic mail animation analytical models educational institutions;face to face	Over the past few years, learning object (LO) repositories have become valuable educational resources in a variety of instructional settings. However, there is a lack of detailed documentation about the actual process to be adopted under different conditions to create such a repository. The commonly established process adopts a synchronous model in which there is continuous face-to-face communication between the various members of the team - the subject matter experts, the instructional designers, the code developers and the reviewers. The synchronous process has resulted in the production of good quality LOs but in restricted domains and in small numbers. This model is not suitable to scale the LO production process up along numbers and across multiple domains without compromising on quality. In this paper we propose an asynchronous model for rapid, large-scale development of LOs in multiple science and engineering domains at the tertiary level of education. We document the problems encountered in adopting a synchronous model of LO production, present a comparative analysis of different asynchronous models, and detail out the methodology for the successful asynchronous model that we adopted.	asynchronous i/o;core (optical fiber);documentation;qualitative comparative analysis;software repository;subject matter expert turing test;usability testing	Gargi Banerjee;Sahana Murthy	2011	2011 IEEE International Conference on Technology for Education	10.1109/T4E.2011.33	simulation;computer science;knowledge management;multimedia	Robotics	-79.85296466814617	-36.47675427298333	164955
9676f39521e81f2ab097294f48b24229cb3a4efb	a 12-year analysis of malmquist total factor productivity in dialysis facilities	total factor productivity;panel data;dialysis;efficiency;greece;technical efficiency;data envelopment analysis;malmquist productivity index;constant returns to scale;data envelope analysis;technological change;returns to scale	This study examined total factor productivity of dialysis facilities in Greece over a 12-year period, using nationally representative panel data. Data Envelopment Analysis (DEA) was used to compute Malmquist productivity indices, which were decomposed into technical efficiency change and technological change. The sample consisted of 73 dialysis facilities operating throughout the entire study period (1993–2004), corresponding to 97.3% and 58.9% of all facilities in the first and last study years respectively. Production variables were nursing staff and dialysis machines (inputs) and dialysis sessions (output). The DEA model was input-oriented allowing for constant returns to scale (CRS). Technical efficiency change was decomposed into scale efficiency change and variable returns to scale (VRS) “pure” technical efficiency change. Mean overall efficiency, throughout the study years, ranged from 39.6 to 63.1% with an all-time average of 56.7%, and only 2–4% of the facilities were fully efficient in each study year. Productivity indices indicated year-by-year progress or regress up to 5%, but the efficiency and technological components differed, in some cases, by as much as 30%. Although interesting subperiod effects were observed, conclusions could not be generalized for the entire study period due to alternating trends. We suggest that preliminary insight to productivity in this sector has been obtained, but particular subperiods must be isolated and further investigated.	algorithmic efficiency;common variable immunodeficiency;craniosynostosis;data envelopment analysis;fixed effects model;health care;panel data;technical standard;verbal rating scale;virtual reference station	Nick Kontodimopoulos;Dimitrios Niakas	2005	Journal of Medical Systems	10.1007/s10916-005-9005-9	returns to scale;econometrics;data envelopment analysis	SE	-89.55878985241812	-26.320882979128456	165102
c9397161ee44251d9c54e54a19959b9066a67523	ap cs a: sharing teching strategies and curricular ideas (abstract only)		This BOF will provide an opportunity for high school and college faculty to discuss the AP CS A curriculum and to explore possibilities for collaborations and outreach activities between high schools and colleges.	ap computer science a	Paul T. Tymann;Lester Wainright;Sandy Czajka	2015		10.1145/2676723.2691832		HCI	-78.2962000639299	-34.432879233331015	165265
1c2e9556f6ae77c6cb2713584bcc65f393a28848	icse 2015 sigsoft caps report		A mentor once told me that undergraduates explore the breadth of our field; while, in graduate school, we explore the depth of a particular topic. However, focusing on depth carries with it the risk of missing related advances. We adjust our focus by coming together at events like the International Conference on Software Engineering (ICSE) to share with and learn from others in our own and related fields. However, lack of adequate funding often constrains how fully students can take advantage of such opportunities.	icse;software engineering	Erica S. Mesh	2015	ACM SIGSOFT Software Engineering Notes	10.1145/2788630.2788648		SE	-79.59795794320054	-30.200603085338496	165292
4f4f116db7cbb34ebbb6ff266cf231eab3868c5e	educational experiences in electric machine fault diagnosis teaching	teaching electric machines fault diagnosis maintenance engineering power engineering education;maintenance engineering;maintenance engineering fault diagnosis education laboratories industries induction motors;maintenance engineering educational experiences electric machine fault diagnosis teaching industrial maintenance maintenance protocols;teaching platforms industrial maintenance electric machines collaborative work e learning;power engineering education;teaching;fault diagnosis;electric machines	Industrial maintenance is a field of rapidly increasing relevance. More specifically, maintenance of electric machines and installations is particularly important, since eventual failures in these elements may lead to significant losses in terms of time and money. Due to these facts, the investment and concern in developing proper maintenance protocols have been gradually growing up over these recent years. As a consequence, there is a need to provide future engineers with a solid background in the electric machines and installations maintenance area. The subject `Maintenance of Electric Machines and Installations' has been designed with this purpose. It is taught within an official master degree in Maintenance Engineering. The paper describes the educational experiences reached during the initial years of the teaching of the subject, emphasizing aspects such as the student profiles, the subject approaches, the design of the syllabus, the methodology and the structure of the laboratory sessions. Moreover, the paper discusses other educational strategies which are being introduced to increase the interest in the subject, such as integration of Information and Communication Technologies (ICT), promotion of the collaborative work, inclusion of the possibility of remote learning or development of new assessment systems.	coexist (image);experience;fast fourier transform;fault detection and isolation;maintenance engineering;relevance;steady state	Jos&#x00E9; Antonino-Daviu;Joan Pons-Llinares;Vicente Climente-Alarc&#x00F3;n	2013	2013 IEEE Global Engineering Education Conference (EDUCON)	10.1109/EduCon.2013.6530241	engineering;computer engineering;mechanical engineering	Robotics	-86.05226538174156	-30.406539892267094	165317
d49de2b1a423fa796913f45a723cce7812ff6b8d	improvement of a computer-based surveyor-training tool using a user-centered approach	incremental development;usability testing;computer aided instruction;software systems;user centered design;software engineering;surveyor training;engineering education;iterative and incremental development	1474-0346/$ see front matter 2008 Elsevier Ltd. A doi:10.1016/j.aei.2008.07.001 * Corresponding author. Tel.: +886 2 33664313; fax E-mail addresses: d91521014@ntu.edu.tw (C.(S.-C. Kang), shhsieh@ntu.edu.tw (S.-H. Hsieh), rex@c This paper presents the experiences of improving an existing surveyor-training tool, called SimuSurvey, using a user-centered approach. As few users were involved during the initial development of SimuSurvey, many instructors and students were skeptical about the innovative application of SimuSurvey in actual surveying classes. To address this problem, we proposed and applied an iterative and incremental user-centered design method to redevelop the tool. Three hundred and forty-six users including 5 instructors, 4 surveying experts, and 337 students, with different backgrounds were introduced at different stages of the redevelopment process. After two iterations of complete redevelopment cycles with five intermediate prototype systems generated, a much improved version of the tool, namely SimuSurvey R2, was developed. From the final interviews with students and the field observation on user groups, SimuSurvey R2 has been shown to be more practical for use in actual surveying classes. In addition, the proposed user-centered approach and several techniques it employs, such as storyboards and content diagrams, paper-based prototyping, high-fidelity prototyping, and usability tests, have been found to be effective for improvement (or redevelopment) of software systems. 2008 Elsevier Ltd. All rights reserved.	diagram;fax;iteration;iterative and incremental development;iterative method;prototype;software system;storyboard;usability;user-centered design	Cho-Chien Lu;Shih-Chung Kang;Shang-Hsien Hsieh;Ruei-Shiue Shiu	2009	Advanced Engineering Informatics	10.1016/j.aei.2008.07.001	simulation;engineering education;computer science;systems engineering;engineering;artificial intelligence;software engineering;iterative and incremental development;computer engineering	HCI	-83.93131894206086	-36.026035633991924	166265
32e4a283c7894e88ef89e1dc679c9d3ec4e0d613	online collaborative learning as a catalyst for systemic change in the teaching-learning process within a multi-campus institution of higher education	ut-itesm summer institute;face-to-face collaborative;teaching-learning process;collaborative learning;multi-campus institution;higher education;systemic change;key component;strategic cross-institutional collaborative project;change agent;institutional effort;monterrey institute;online collaborative	This presentation describes an innovative and strategic cross-institutional collaborative project to support systemic change in the teaching-learning process at a leading institution of higher education: Monterrey Institute of Technology and Higher Education System). The main purpose of the document is to share the scope, framework, content, and strategies for preparing faculty to serve as mentors and trainees of colleagues in the use of online and face-to-face collaborative learning strategies and tools. The paper includes three sections. The first section provides an overview of higher education’s trends and challenges to frame a meaningful context. Second, a brief background on ITESM mission, strategies and goals is provided. The remainder of the paper describes the University of Texas at Austin (UT)-ITESM Summer Institute on Collaborative Learning and planned follow-on activities with 50 faculty who will serve as change agents and mentors in the use of online and face-to-face collaborative learning.		Carlos Enrique Gonzalez;Paul Resta	2002			collaborative learning;knowledge management;pedagogy	HCI	-78.33831945318096	-32.193317112330575	166341
b7f867fdcd8f14486fc468eb988e661ddecd994c	reflections on a mentoring experience in an undergraduate computing course at victoria university	victoria university;it degree;school of engineering and science;computer;respubid14680;studies;1302 curriculum and pedagogy;9301 learner and learning;melbourne	A video signal processing arrangement for television signals encoded in digital form comprising means for compressing and/or expanding the size of the television picture represented by the video signal and means for rotating the television picture represented by the video signal is disclosed. The rotating means is separate from the compressing and/or expanding means and is switchable between a position prior to the compressing and/or expanding means in the video signal processing chain and a position subsequent to the compressing and/or expanding means. An arrangement having two separate video signal paths which are later combined to produce a composite picture is also described in which the rotating means can also be positioned after the combining means as well as before or after the compressing and/or expanding means in either path.	amiga reflections;victoria (3d figure)	Iwona Miliszewska;Anne Venables;Grace Tan	2008			engineering;media studies;engineering physics;pedagogy	HPC	-77.56723114424611	-33.920713550898164	166500
f725767de79d92e428216971a6a2869d157bc2a7	problem presentation in cs1 courses	teaching programming;problem presentation	Several research activities have been made related to the domain of computer science education, in order to increase learning effectiveness in CS1 courses. These works address the programming language used [1], the use of tools and environments [4], the human factor [2], the problem domain [3], and so on. Teaching programming presents several difficulties and one of the biggest obstacles to achieve a solution to the problem is its interpretation. In our opinion, the presentation of the problem is a very important issue in teaching programming. The problem must be attractive to the students [2], and should engage the students in structured reasoning. Although the diversity of forms in problem presentation could be an advantage, it may be an obstacle in CS1. It may pose difficulties to the easy understanding of the problem by the students, which, in our opinion, is one of the greatest obstacles in solving problems. In order to minimize the ”blank page trauma” on students and to maximize a good structuring of the proposed solutions, we defined a structured way to problem presentation. This presentation should focus mainly on: problem goals; problem concepts; and user interactions. The document describing a problem presentation must be composed by: (1) a title, (2) a short description of the problem goal, (3) a functionalities description, and (4) an application interaction description using scenarios as a way to illustrate application behaviors. We also give to the students a prototype so they can test user interactions and general behavior. Next we present an example of a simple problem, that was proposed to our CS1 students. Problem title: Coverage of the classroom floor. Problem description: Find out how many square tiles are needed to cover the largest possible square in the center of the classroom floor. Functionalities description: The floor of the classroom is a rectangular surface with a width and a length measured in centimeters. The tile is a square with side measured in centimeters, and is unicolor. Interaction description: At the beginning the user must provide the width and the length of the classroom floor, and the tile side, then the number of tiles needed to cover the largest possible square will be presented. Copyright is held by the author/owner(s). ITiCSE’12, July 3–5, 2012, Haifa, Israel. ACM 978-1-4503-1246-2/12/07. Interaction scenarios: Scenario 1 Classroom floor Tile Length (in cm): 40 Side (in cm): 20 Width (in cm): 30 Result : Number of tiles = 2 Our experience led us to conclude that a structured problem presentation helps students to increase high-level skills in programming activity, in order to propose structured problem solution. In a study conducted in our CS1 courses, we observed that the resulting problem solution was more structured when the presentation problem follows the rules defined above.	computer science;high- and low-level;human factors and ergonomics;intentionally blank page;interaction;problem domain;programming language;prototype;structured programming	Carmen Morgado;Fernanda Barbosa	2012		10.1145/2325296.2325412	computer science	AI	-85.03419057946029	-36.6995855514181	166565
04fe22fcb5d7309b222e4f0cce08cda1c25f148b	a model for competence gap analysis	competence;gap;learning;lifelong;competency;conference paper;human resource;gap analysis;analysis;lifelong learning	Modeling competences is an integral part of many Human Resource (HR) and e-Learning related activities. HR departments use competence descriptions to define requirements needed for performing specific tasks or jobs. The same competences are acquired by employees and applicants by e.g. experience or certifications. Typically, HR departments need to match such required and acquired competences in order to find suitable candidates. In e-Learning a similar situation arises. Curricula or training programmes need to describe prerequisites that must be fulfilled before joining and the competences that will be acquired after successful completion. This paper analyses the limitations and extends existing approaches for modeling competences in order to allow (semi-)automatic competence matching.	algorithm;altran praxis;artificial intelligence;consortium;de bruijn graph;design pattern;dictionary;floor and ceiling functions;gap analysis;information management system (ims);jacques gauthier;job stream;knowledge management;phil bernstein;requirement;semantic web;semantic integration;specification language;switzerland;vldb;wikipedia;xml namespace	Juri Luca De Coi;Eelco Herder;Arne Wolf Koesling;Christoph Lofi;Daniel Olmedilla;Odysseas Papapetrou;Wolf Siberski	2007			human resources;knowledge management;competence;lifelong learning;management	AI	-88.5558785775303	-30.115928332242376	166624
2211ed7947f6acd31869e4249b8d7af4a8dc8bf6	codeplus — designing an after school computing programme for girls	computers;programming computer science education educational courses educational institutions;computational thinking;problem solving ability codeplus after school computing programme computer science cs computer programming girl perception;scratch;collaborative learning;computing;engineering profession;programming profession;21c learning;computers programming profession engineering profession conferences education;programming;collaborative learning computing 21c learning programming scratch computational thinking;conferences	Women are underrepresented in the field of Computer Science. This project aims to help Secondary School girls develop an insight into the role computers play in society and to learn some of the key skills in computing including computer programming. Exposure to Computer Science, in home or school environments, and encouragement from family and peers are leading factors that influence girls' decisions to pursue careers in Computer Science. Other factors include the girls' perception of their own problem solving ability, an understanding of the diverse applications of Computer Science and related career paths and the potential for positive social impact. This paper describes the design of an after school computing programme, CodePlus, which uses a novel 21st Century learning model. Pre and post questionnaire are being used to explore girls intentions to study CS, their confidence to study CS, perception of CS as a career, gender perception of CS and IT profession and self-efficacy following participation in the CodePlus programme. Preliminary results comparing pre questionnaire results with a male control group highlight differences in how girls see themselves in terms of CS capabilities and their future potential. Initial post questionnaire findings show a significant increase in the participants' perceived programming ability.	computer programming;computer science;problem solving	Kevin J. Sullivan;Jake Rowan Byrne;Nina Bresnihan;Katriona O'Sullivan;Brendan Tangney	2015	2015 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2015.7344113	simulation;computer science;multimedia;pedagogy	AI	-79.2348939223724	-37.98119055693384	166649
684290706a6fda90373a29fc4644c77a6aa3b0d8	issues in using students in empirical studies in software engineering education	external validity;pilot study;empirical study;costs and benefits;software engineering educational institutions software quality solids software measurement software tools proposals computer science education computer science information science;software engineering;software engineering education;software houses;computer science education;col;educational courses;empirical studies;educational courses computer science education cost benefit analysis software engineering software houses;pilot study empirical study software engineering education college student instructor software industry cost benefit analysis;cost benefit analysis;pilot studies	Several empirical studies have been carried out with college students as subjects in the last few years. Researchers often use these studies to pilot experiments before they are carried out in industrial environments. Reports on these studies usually focus on the results obtained and issues such as their external validity. However, the effects and value of empirical studies with students may go beyond the contribution to scientific literature. For instance, the pedagogical challenges and value of these studies is hardly ever stressed. In this paper, we identify four primary actors that are involved in these empirical studies, i.e., researchers, students, instructors, and industry. We discuss the costs and benefits of empirical studies with students for these actors, which are different because of the actors' different goals, expectations, and constraints, which must be recognized to fully exploit empirical studies with students. We also provide some advice on how to carry out empirical studies with students based on our experiences	experience;experiment;external validity;pedagogical agent;scientific literature;software engineering	Jeffrey C. Carver;Maria Letizia Jaccheri;Sandro Morasca;Forrest Shull	2003		10.1109/METRIC.2003.1232471	economics;systems engineering;engineering;cost–benefit analysis;software engineering;management science;empirical research	SE	-83.15416996836508	-33.77606775995718	166789
5999a1e1a69669325af7d102bc2b80d815d2d4b8	virtual seminars and their impact on the rôle of the teaching staff	seminars;case studies;information technology;virtual classrooms;higher education;teaching and learning;educational theories;psychology;collaborative learning;computer supported collaborative learning;nontraditional students;teacher role;co operative and collaborative learning;transfer of training;small group teaching;educational technology;staff development	Teaching staff and academic researchers tend to cite the reasons for introducing computer supported collaborative learning in pedagogic terms, plus the need to provide transferable skills. The focus of this paper is the current demands on teaching staff in UK Higher Education and the impact these demands have when teaching through electronic resources. The reported research into the changing role of the tutor was initiated through work on the ASTER Project (Assisting Small-group Teaching through Electronic Resources) http://cti.psy.york.ac.uk/aster. The ASTER Project, funded through the UK Teaching and Learning Technology Programme (TLTP) phase 3, aimed to explore how Communication and Information Technology (C&IT) can assist students and lecturers in making the most of small group-based learning and to promote and support effective change in educational practice. Our conclusions and findings, based on the use of Virtual Seminars within a Higher Education Psychology department, suggest the need for increased financial support for additional staff development and training in the use of C&IT. It was also established that there is a need for tutors to maintain full support for students in the move to an increased use of technology in their learning.		Anne Jelfs;Chris Colbourn	2002	Computers & Education	10.1016/S0360-1315(01)00084-7	professional development;psychology;collaborative learning;educational technology;simulation;knowledge management;teaching and learning center;education theory;higher education;information technology;pedagogy	AI	-77.68435502658276	-33.02394335724523	167119
3d6fc86f24311f2fab27b8531df541c1f5de4800	a research project with important practitioner-oriented findings	important practitioner-oriented finding;research project	Exploring a standard that, in the end, ...fails to achieve its objectives and be useful to its users.		Robert L. Glass	2007	Commun. ACM	10.1145/1297797.1297811	management science	Networks	-78.81373696867169	-27.425456703924713	167170
f1aee11c9eb9393ef887a1d00f716cb960752d9a	developing a rubric for a creative cs principles lab	cs principles;its;rubrics	"""The """"Beauty and Joy of Computing"""" Computer Science Principles class has inspired many new teachers to learn to teach creative computing classes in high schools. However, new computer science teachers feel under-prepared to grade open-ended programming assignments and support their students' successful learning. Rubrics have widely been used to help teaching assistants grade programs and are a promising way to support new teachers to learn how to grade BJC programs. In this paper, we adapt general coding criteria from auto-graders to a lab where students write code to draw a brick wall. We tested the rubric on student assignments and showed that we can achieve high inter-rater agreement with the refined rubric."""	computer science;inter-rater reliability;nonlinear gameplay	Veronica Cateté;Erin Snider;Tiffany Barnes	2016		10.1145/2899415.2899449	rubric;computer science;multimedia;pedagogy	AI	-80.6819622261488	-36.15568279874474	167232
c93ffe428cbcd15ec5c37fdad0b02839aacf4a15	introducing secure coding in undergraduate (cs0, cs1, and cs2) and high school (ap computer science a) programming courses: (abstract only)		The ACM CS 2013 curriculum includes Information Assurance and Security as a pervasive knowledge area, the ACM Community College curricular guidelines, CSTransfer2017, places great emphasis on cybersecurity as well. However, introducing security in introductory programming courses is challenging because of lack of appropriate teaching resources and training. This workshop will provide a well-tested strategy for introducing secure coding concepts in CS0, CS1, CS2, and AP CS A classes. We will introduce attendees to secure coding through hands-on exercises, and provide self-contained, lab-based modules designed to be injected into CS0-CS2 with minimal impact on the course (www.towson.edu/securityinjections). Participants will be encouraged to bring in their own syllabus and labs to modify to include learning objectives focused on cybersecurity based on ACM and CAE guidelines. Laptop recommended.	ap computer science a;computer security;hands-on computing;information assurance;laptop;pervasive informatics;secure coding	Siddharth Kaza;Blair Taylor	2018		10.1145/3159450.3162366	software engineering;laptop;ap computer science a;knowledge management;information assurance;curriculum;computer science;secure coding;syllabus	Graphics	-81.48535335737293	-29.80332651404348	167421
a0f6a49bbd0341c4edfe9bbd72a8d0eee58736f7	indentifying latent classes and testing their determinants in early adolescents' use of computers and internet for learning	self control;early adolescents;learning;predictor variables;country specific developments;pedagogical issues;gender differences;foreign countries;secondary education;internet;statistical analysis;computer use;self esteem;games;media in education;elementary education	The purpose of the present study was to identify latent classes resting on early adolescents' change trajectory patterns in using computers and the Internet for learning and to test the effects of gender, self-control, self-esteem, and game use in South Korea. Latent growth mixture modeling (LGMM) was used to identify subpopulations in the Korea Youth Panel Survey (KYPS). Initial analyses revealed four latent classes: High Use Class, Increasing Class, Decreasing Class, and Low Use Class. Adding gender, self-control, self-esteem, and game use, we tested the effects of the independent variables on the latent classes using multinomial logistic analysis. Results from the second analyses indicated that gender, self-control, self-esteem, and game use were significant determinants of the latent classes. Findings suggest the need to consider heterogeneity in studies of early adolescents' use of computers and the Internet for learning in order to better target involvement programs.	computer	Gyun Heo	2013	Computers & Education	10.1016/j.compedu.2012.12.016	psychology;mathematics education;games;the internet;self-control;simulation;computer science;primary education;sociology;social psychology;law	NLP	-85.92957589238806	-24.297487121012516	167542
4935733c849e369fa60b5976bb7beadc84eb1e71	encouraging social responsibility through collaborative team learning	hci education;collaborative work;student motivation;team learning;vcu;socially responsible;interface design;social issues;group process	How do we bring the real world into the classroom? How do we teach students to see and appreciate its complexities without overwhelming them? How do we encourage them to value collaborative teamwork and multi-disciplinary approaches to problems? And how do we instill the importance of addressing larger social issues in their professional future? This poster will describe a multi-disciplinary team approach to teaching user-centered interface design. The course focused on the development of multimedia prototypes for the VCU Cancer Center. How the course impacted upon student motivation for learning, group process and interface design will be presented.	user-centered design	Jean B. Gasen	1996		10.1145/257089.257205	collaborative learning;team learning;knowledge management;interface design;social issues;social responsibility;group dynamics	HCI	-79.30120633912713	-34.12635770835638	168106
700b2271a2dd27fd4ac7b5c92bd901e9be166454	factor analysis of comprehension states in the learning phases of a programming language	object oriented programming concepts;learning phases;phase measurement;phase change;computer languages;comprehension states;programming language;information science;java programming;exercises;testing;object oriented programming;basic knowledge factor analysis comprehension states learning phases java programming language object oriented programming concepts lectures exercises;computer science education;human factors;factor analysis;object oriented;programming profession;java programming language;educational programs;lectures;object orientated;productivity;basic knowledge;educational products;computer languages programming profession testing java educational programs productivity educational institutions information science phase measurement educational products;human factors java object oriented programming computer science education;java	Presents an experiment in understanding how learners of the Java programming language comprehend its concepts, such as classes, inheritance, interfaces, etc., in lectures and exercises. The authors used an empirical technique to test conjectures about how we learn the programming language. Usually, observations about how we learn a programming language are treated anecdotally. In this experiment, learners received lectures and did an exercise. The comprehension states of the learners were measured by tests in three learning phases. The first phase was before the lecture. In this phase, the learners had no knowledge of the programming language. The second phase was after the lecture and before the exercise. Here, the learners acquired some basic knowledge. The third phase was after the exercise. In this phase, the learners put the acquired knowledge into practice. Factor analysis was used to obtain factors affecting the test result of each learning phase. Changes in comprehension states are explained as a result of tracing the factors between the learning phases.	apl;factor analysis;list comprehension;programming language	Yasuhiro Takemura;Kazuyuki Shima;Ken-ichi Matsumoto;Katsuro Inoue;Koji Torii	1999		10.1109/APSEC.1999.809594	natural language processing;information science;computer science;software engineering;programming language;object-oriented programming	NLP	-83.45219020538445	-36.193207186610564	168239
3754b0b8b7a1e53f75a40c1e8177b680385ce056	assessing experiences of international students in haiti and benin	social sciences engineering education;international education;drilling bridges engineering education employment resource management electrical capacitance tomography timing seminars;social sciences;water resources;collaboration;haiti;maintenance engineering;international relations;engineering education;project objectives;benin;engineering students;organizations;communities;international students;volunteer activities;groundwater resources management;engineering students international students haiti benin groundwater resources management project objectives;graduate student;cultural differences	This article presents an assessment of a series of international educational initiatives that have been pursued over the past decade in the arena of development and management of groundwater resources in Haiti and Benin. Projects pursued ranged from short-term service efforts to long-term research efforts. These initiatives are compared in terms of project objectives relative to U.S. undergraduates, U.S. graduate students, in-country partners, and local populations in the project country.	experience;population	Stephen E. Silliman	2009	IEEE Technology and Society Magazine	10.1109/MTS.2009.934997	maintenance engineering;engineering management;engineering ethics;water resources;engineering education;organization;environmental resource management;international relations;management;law;cultural diversity;collaboration	Visualization	-79.0581568844711	-32.344416588644656	168758
1a598bd0f045a233120852faefe0e76db6afbcc0	perspectives on software quality assurance (panel)	cal;teaching media;computer assisted learning;software quality assurance;cai;cbe;teaching technologies;computer assisted instruction;computer based education;authoring system;teachware;courseware	Each participant will frame his or her perspective by initially stating either unqualified acceptance or unqualified rejection of each of seven propositions. Following this, he or she will discuss the definitions and assumptions underlying the declarations, and the rationale and experiences supporting the selections. The form of these discussions will be the participant's model of effective software quality assurance with reference to the propositions as appropriate.	design rationale;rejection sampling;software quality assurance	Thomas L. Hannan;John R. Brown;Roger U. Fujii	1985		10.1145/320435.320598	computer science;software engineering;multimedia;computer engineering	HCI	-80.46906351066656	-35.819370887680364	169200
6065b762e5e3271e3590d77fb9a33f421d66095c	across-the-ages: a study of robotics in caribbean education	training;educational robots;uniform resource locators;conferences	This paper reviews a number of regional and extra-regional robotics initiatives. Each initiative was reviewed to determine different age groups of students, the goals of stake-holders involved in enabling an initiative, and the benchmarks for success of each initiative. The review has informed the design of an integrated intervention for Teacher Training initiated by the Trinidad and Tobago Ministry of Education Curriculum Development Division. The intervention is based on a problem-solving process, and targets teachers of students in the early secondary age group. Empowering and encouraging older student volunteers to support teachers allows for the increased longevity of the robotics initiative. The potential to foster wider student interest in STEM subjects within the Caribbean remains to be explored.	benchmark (computing);problem solving;robotics	Tricia Gilkes;Cathy Radix;Daniel Ringis	2014	2014 IEEE Frontiers in Education Conference (FIE) Proceedings	10.1109/FIE.2014.7044458	library science;simulation;engineering;pedagogy	Robotics	-78.73797392923952	-32.038876471592005	169416
08a40469ebf8852d437b317dc324b52ad72e3cb0	an holistic approach to an international doctoral program in information security	computer and information science;utbildningsvetenskap;educational sciences;data och informationsvetenskap	The paper discusses forms and structures for an international doctoral program with specialization in information security and information assurance based on an analysis of international educational efforts in the area 1995-2003. The presentation underlines the need for holistic approaches to the IT security area and presents, as an example, the Systemic-Holistic Approach, SHA.	information security	Louise Yngström	2004		10.1007/1-4020-8145-6_8	computer science;management science;information and computer science	Arch	-80.73744387595917	-30.285299429928216	169665
5b3d98632577b245dc9a106075076f307ed20d92	learning reproducibility with a yearly networking contest		Better reproducibility of networking research results is currently a major goal that the academic community is striving towards. This position paper makes the case that improving the extent and pervasiveness of reproducible research can be greatly fostered by organizing a yearly international contest. We argue that holding a contest undertaken by a plurality of students will have benefits that are two-fold. First, it will promote hands-on learning of skills that are helpful in producing artifacts at the replicable-research level. Second, it will advance the best practices regarding environments, testbeds, and tools that will aid the tasks of reproducibility evaluation committees by and large.	best practice;hands-on computing;organizing (structure);testbed	Marco Canini;Jon A Crowcroft	2017		10.1145/3097766.3097769	position paper;computer science;reproducibility;best practice;management science;contest	HPC	-79.86242871886195	-29.324992263113156	170381
e1f0374839eeeea33281964a2ad14388c9c8a4ac	design and optimization of microwave circuits and systems using artificial intelligence techniques	neural networks;microwave design;microwave passives;dissertation;yield optimization;genetic algorithms;design centering	ii To my brother and mother for their love and support iii ACKNOWLEDGEMENTS I would like to express my gratitude and appreciation to my research advisor, Dr. Gary S. May, for his invaluable guidance, support and encouragement. I am grateful to him for my professional development and also for his contribution to my development as a better human being, by being a wonderful role model for me. I would like to thank Dr. Joy Laskar for his enthusiastic support of my work and invaluable advices regarding professional and personal success. I thank Dr. Stephane Pinel for his efforts and contribution in enhancing my microwave design knowledge and providing valuable insights, suggestions and resources for my research. I would also like to thank Dr. John Papapolymerou and Dr. Manos Tentzeris for serving on my reading committee, and extend my thanks to Dr. Madhawan Swaminathan and Dr. C.P. Wong for serving on my dissertation defense committee.	artificial intelligence;microwave;program optimization	Rana Jitendra Pratap	2005			control engineering;electronic engineering;engineering;electrical engineering	HCI	-87.38438104338607	-29.63723479990698	170586
ecb5bcfdaf804ebfc7be1c3b71cdb7fdf10429f3	from paper to pixels: a comparison of paper and computer formats in psychological assessment	quality of life;paper and computer formats in;prueba papel lapiz;paper and pencil test;personality;qualite de vie;estudio comparativo;data collection;personnalite;paper and computer formats in psychological assessment;test papier crayon;college students;hombre;psychological assessment;estado depresivo;test administration;etude comparative;psychometrie;computers in psychological research;human;comparative study;personalidad;psychometrics;computer aid;asistencia ordenador;calidad vida;otorgamiento prueba;psicometria;passation test;assistance ordinateur;depression;etat depressif;homme	Internet based data collection methods have many advantages for psychological assessment when compared with more traditional paper formats, including, reduced costs, and greater convenience for both the researcher and the participant. However, prior to the wide-spread adoption of these methods, equivalence with paper tests formats must be established. The present study compared questionnaire data from the computer with that from a traditional paper format in a sample of college students both directly and through an opinion survey. Three types of questionnaires that represent distinct areas commonly assessed in psychological research included: quality of life (SF-36), depression (BDI-II) and personality (NEO). A within-subjects design counterbalanced order across the computer and paper formats. Overall the findings showed no differences for the Neuroticism and Extraversion facts of the NEO, for the BDI and for the subscales and composite scores of the SF-36. Significant differences were found between the paper and computer formats for the Openness, Agreeableness, and Conscientiousness facets of the NEO. Additionally, the computer was perceived to be convenient, user-friendly, comfortable, and secure. Results suggest that a computerized format is an efficient way to conduct quality of life research, especially for the assessment of distress levels and quality of life.	pixel	Mary J. Naus;Laura M. Philipp;Mekhala Samsi	2009	Computers in Human Behavior	10.1016/j.chb.2008.05.012	psychology;quality of life;comparative research;psychological testing;personality;psychometrics;social psychology;clinical psychology;statistics;data collection	AI	-87.22128147764268	-24.27998014194219	170896
cde82bff14d97a7e56f7eeaebd0e850580675173	designing a multi-disciplinary software engineering project	software;multidisciplinary student population;nontechnical issues;project course;organizational dimension;bismuth;software engineering courses;multidisciplinary software engineering project;organizational dimension multidisciplinary software engineering project software engineering courses nontechnical issues multidisciplinary student population social dimension;software engineering;computer science education;software design software engineering electrical capacitance tomography artificial intelligence informatics collaborative software online communities technical collaboration outsourcing education programming;multi disciplinary student population;lessons learned;educational courses;business;artificial intelligence;empirical experiment software engineering project course multi disciplinary student population;organizations;programming;software engineering computer science education educational courses;social dimension;empirical experiment	Software engineering courses often include some form of project, aimed at bridging the theory-practice gap. These projects tend to emphasize technical topics. Because software engineering has an important organizational and social dimension as well, and because software engineering courses may be taken by non-CS majors too, there is every reason to also include these non-technical issues in the software project. In this paper we discuss how we designed a multi-disciplinary software engineering project course that pays attention to non-technical issues. We report about our experience in four editions of the same project, and discuss lessons learned. Our general conclusion is that software engineering projects need to have specific characteristics to attract a multi-disciplinary student population.	bridging (networking);cognitive architecture;computer performance;curve fitting;memory management controller;requirement;software development;software engineering;software project management	Patricia Lago;Joost J. P. Schalken;Hans van Vliet	2009	2009 22nd Conference on Software Engineering Education and Training	10.1109/CSEET.2009.42	personal software process;team software process;software engineering process group;software project management;systems engineering;engineering;knowledge management;social software engineering;software development;software design description;software engineering;software walkthrough;software development process;software requirements;software peer review	SE	-83.25503293299595	-33.2503571034353	171348
6036d02fcbcdf78d638afbdbc9ca67eb2db1fd43	teaching differential equations in different environments: a first approach	teaching learning strategies;differential equation;pedagogical issues;improving classroom teaching;post secondary education	The use of specific softwares was the basis for a new approach for teaching ordinary and partial differential equations, in the field of heat transfer and fluid mechanics. The main objective was to enhance learning effectiveness of Numerical Methods in the post-graduate course of Polymers Engineering at the University of Minho. This degree takes place into two different environments: at the university campus and at the industrial field. Different commercial codes were used, namely EXCEL, MATLAB, and FLUENT, as well as two tools developed in house at University of Minho: CoNum and a graphics application PDE v.1. Lectures were based on videoconferencing and other web utilities. The teaching methodology presented and discussed in this article was well received and accepted by the post-graduate students, motivating teachers to improve their teaching/ learning strategies. 2009 Wiley Periodicals, Inc. Comput Appl Eng Educ 18: 555 562, 2010; View this article online at wileyonlinelibrary.com; DOI 10.1002/cae.20231	code;eng-tips forums;graphics software;john d. wiley;matlab	Filipa Carneiro;Celina Pinto Leão;Senhorinha F. C. F. Teixeira	2010	Comp. Applic. in Engineering Education	10.1002/cae.20231	mathematics education;simulation;applied mathematics;computer science;engineering;electrical engineering;artificial intelligence;mathematics;world wide web;differential equation;mechanical engineering	ML	-86.8719400371062	-37.774711905977995	171482
68d8b494e2add0e4dede87ddfb21613003defc9b	request for comments: proposal of a blockchain for the automatic management and acceptance of student achievements		Staying abroad during their studies is increasingly popular for students: In 2012, 4.5 million students went abroad (2.3%), and a number of up to 6.4 million (3.2%) is predicted for 2025 [2]. However, there are various challenges for both students and universities. One important question for students is whether or not achievements performed at different universities can be taken into account for either enrolling at a foreign university or for completing the studies at their home university [3]. This is not only important for students who want to spend a semester abroad, but also for those who change universities or study courses within a university or decide to enroll for a second course of study. Within Europe, the Bologna process aimed to make academic achievements compatible between European countries [4]. In the meantime, all study programs have been converted to the Bachelor and Master system, making study achievements comparable by means of e.g. credit points.	bitcoin	Thorsten Sommer;Gergana Deppe;Valerie Stehling;Max Haberstroh;Frank Hees	2018	CoRR	10.13140/RG.2.2.32493.49129	knowledge management;request for comments;public records;open research;data protection act 1998;business;social media;blockchain	HCI	-78.09299364648204	-26.993599694585548	171694
241fd4c5df0791385c65b252a8aef8dc3a02b6cd	research based methods for using powerpoint, animation, and video for instruction	instructional technology;multi media authoring;pedagogy;best practice;faculty training;animation;powerpoint;literature review;video	"""This paper is a literature review on practical techniques and guidelines using PowerPoint, animation, and video effectively for instruction. The motivation to collect research based guidelines for the creation and use of instructional media comes from Giordano and Trufant's observation that one of the common barriers that prevent faculty from successfully integrating technology into their teaching is a """"lack of familiarity with best practices, knowledge, and research on the appropriate uses of technology in the classroom"""" [1]. This paper would be of interest to faculty and instructional technology staff who support faculty in the development of instructional media."""	best practice;powerpoint animation	Trevor Murphy	2004		10.1145/1027802.1027892	simulation;computer science;multimedia;pedagogy	HCI	-78.03671829725249	-36.311046124714466	171787
fa7d52571d0d3b731da4a8f09584638caebb4988	2g/3g connect: an educational software for teaching 2g/3g mobile communications to engineering students	2g 3g network planning;engineering education;mobile communication networks;software tools	Abstract#R##N##R##N##R##N#Mobile communications have become one of the key points in the development of Information Society. Therefore the market demands to qualify engineers with a good formation on this topic, and more specifically related with good knowledge about the design and deployment of mobile and wireless networks and services of different technologies. For this reason most of the graduate and post-graduate programs in Electrical and Electronic engineering studies consider at least one specific subject focused on mobile communications. However, the large number of concepts and the different existing technologies could make this subject very difficult for the student. This article presents a software tool for the design of second and third generation radio access networks, which makes easier the understanding and application of theoretical concepts, giving the student a more practical and realistic view of the subject. Furthermore as this tool has been applied for the regulation on mobile communications in different countries, the students can get some practical knowledge about the work in mobile communications in real world applications. © 2012 Wiley Periodicals, Inc. Comput Appl Eng Educ 23:1–12, 2015; View this article online at wileyonlinelibrary.com/journal/cae; DOI 10.1002/cae.21570		Juan Eulogio Sánchez-García;José Antonio Portilla-Figueras;Sancho Salcedo-Sanz;Silvia Jiménez-Fernández	2015	Comp. Applic. in Engineering Education	10.1002/cae.21570	simulation;engineering education;computer science;engineering;electrical engineering;artificial intelligence;multimedia;control communications;mobile computing;world wide web;mechanical engineering	SE	-85.54501625781138	-34.80577810416045	171988
99768494e1ec367a6b54713abd92d9b41915f854	measuring the velocity of elementary particles - fundamental physics in schools by remote learning		Teaching of modern physics requires nuclear and particle detectors that are not always available to high school audiences. A system which allows the measurement of the speed of muon particles detected in cosmic rays is presented. The system was setup at Frascati National Labs of the Italian Institute of Nuclear Physics (INFN) and is being used for hands-on teaching. The system is being upgraded for operation in fully remote control thus enabling e-learning capabilities to a much wider target audience.	cosmic;data acquisition;elementary particle;hands-on computing;istituto di scienza e tecnologie dell'informazione;mathematical optimization;particle system;remote control;sensor	Luigi Benussi;Stefano Bianco;Franco L. Fabbri;Paola Gianotti;Andrea Lalli;Antonio Paolozzi;Claudio Paris;Luciano Passamonti;Davide Piccolo;Daniele Pierluigi;Guido Raffone;Alessandro Russo;Giovanna Saviano	2016		10.5220/0005900602580264	mathematics education;applied mathematics	ML	-87.55491829020957	-36.50371383764438	172292
656b640de9ba4a307b61f1f1794e3743abc245ab	successful approaches to teaching introductory computer science courses with python	curriculum;python;introductory computer science;cs1 cs2	Learning computer science requires deliberate and incremental exposure to the fundamental ideas of the discipline. This paper will describe our initial experience teaching an introductory computer science sequence using the programming language Python. We will present our position and then use specific examples to show how Python can provide an exceptional environment for teaching computer science.	computer science;programming language;python	David Ranum;Bradley N. Miller;John M. Zelle;Mark Guzdial	2006		10.1145/1121341.1121465	curriculum;computational science;python;computer science;programming language	Logic	-81.83937157699644	-36.515018024693624	172347
05265e82586949e418e126194110e7422b4fdab4	discern: discovery learning with student defined problems	complexity theory;internet;tutorials;software tools;context;open source software	Literature suggests that inductive learning methods are more effective than deductive learning techniques. Discovery learning with autonomous learning is a well known technique for improving student engagement and learning. We report our results of involving final year students in defining their exercises in the lab or for assignments, given a set of learning outcomes. Before the start of the course, we make the students aware of the syllabus and learning outcomes for the course. To define the lab / assignment tasks, the students are given the freedom to search and select technologies and tools based on current trends, using Internet resources. We further permit the students to revisit and revise the task list during the course. The faculty member reviews the task list to ensure appropriate level of complexity. Our results show that students are able to select challenging assignments, and execute them well, when they are involved in defining the learning tasks. Our preliminary results are for a specific final year engineering elective course which involved lab work and assignments. We feel that the approach can be applied to different engineering courses having a similar pattern. We share our views on applying the technique to a course which could be useful in the Indian context.	autonomous robot;emoticon;experiment;inductive reasoning;internet	Vijay T. Raisinghani	2016	2016 International Conference on Learning and Teaching in Computing and Engineering (LaTICE)	10.1109/LaTiCE.2016.2	multi-task learning;cooperative learning;simulation;computer science;knowledge management;active learning;world wide web;synchronous learning	ML	-80.81440318910056	-37.945070640344795	172439
87278dc430c24b70f306d8998eca328f2e1017c5	knowledge reuse through categorical breakdown analysis: a method for collaborative systems evaluation	electric breakdown collaborative work collaborative software laboratories human computer interaction costs software design international collaboration computer science silver;groupware;human computer interaction;knowledge reuse;software performance evaluation groupware;probability density function;computer supported cooperative work;collaboration;biological system modeling;software performance evaluation;collaborative system;electric breakdown;data mining;research method;computer supported cooperative work categorical breakdown analysis knowledge reuse collaborative systems evaluation cscw systems novice evaluators collaborative software;technical report departmental;couplings	Designing CSCW systems that support the widely varying needs of targeted users is difficult. There is no silver bullet technology that enables users to effectively collaborate with one another in different contexts. We propose a method of collaborative systems evaluation that enables novice evaluators to make insightful observations about the systems they evaluate at a level comparable to experts in certain situations. These observations come in the form of a categorical breakdown analysis of a laboratory study. The quantity and type of breakdowns can then be connected to recommended CSCW tools and features developed and described in the related literature. We conducted a study to explore the results generated when the method was applied by both experts and novices in the field of CSCW. We observed that experts found the method to be usable, and that novices capitalized on the knowledge embodied in the breakdown categories to make categorizations similar to those of experts.	categorization;collaborative software;computer-supported cooperative work;no silver bullet	Will Humphries;D. Scott McCrickard;Dennis C. Neale	2009	2009 Second International Conferences on Advances in Computer-Human Interactions	10.1109/ACHI.2009.49	probability density function;human–computer interaction;computer science;knowledge management;software engineering;computer-supported cooperative work;data mining;coupling;collaboration	HCI	-87.67785775874471	-33.981788279753864	172602
a6e5a67c9c13225ebdb64a149c18e9814b55d728	a practical and comprehensive graduate course preparing students for research involving scientific computing	application framework;scientific visualization;scientific computing;graduate student;computation	We describe a new graduate course in scientific computing that was taught during Fall 2010 at Louisiana State University. The course was designed to provide students with a broad and practical introduction to scientific computing which would provide them with the basic skills and experience to very quickly get involved in research projects involving modern cyberinfrastructure and complex real world scientific problems. The course, which was taken by thirteen graduate students, covered basic skills, networks and data, simulations and application frameworks, scientific visualization, and distributed scientific computing. Notable features of the course include a modularized team-teaching approach, and the integration of national cyberinfrastucture with teaching.	application framework;basic programming;computation;computational science;computer;cyberinfrastructure;display resolution;experience;ibm notes;linux;logistics;mike lesser;norm (social);omii-uk;open-source software;oracle call interface;phy (chip);pike;scientific visualization;simulation;software development;teragrid;unix;verification and validation	Gabrielle Allen;Werner Benger;Andrei Hutanu;Shantenu Jha;Frank Löffler;Erik Schnetter	2011		10.1016/j.procs.2011.04.210	computational science;scientific visualization;computer science;data science;computation;algorithm	HPC	-81.25826240396765	-31.526295146794318	172700
c66e9f8a84d01bb97916f833a06f85f33c6e4b9c	abet criterion 3.f: how much curriculum content is enough?	fundamentals of engineering examination;ethics;curriculum;abet;professionalism	Even after multiple cycles of ABET accreditation, many engineering programs are unsure of how much curriculum content is needed to meet the requirements of ABET's Criterion 3.f (an understanding of professional and ethical responsibility). This study represents the first scholarly attempt to assess the impact of curriculum reform following the introduction of ABET Criterion 3.f. This study sought to determine how much professional and ethical responsibility curriculum content was used between 1995 and 2005, as well as how, when, why, and to what effect changes in the amount of content occurred. Subsequently, the study sought to evaluate if different amounts of curriculum content generated differing student outcomes. The amount of curriculum content used by each of the participating programs was identified during semi-structured interviews with program administrators and a review of ABET Self-Study documents. Quantitative methods were applied to determine if a relationship existed between the curriculum content and performance on a nationally administered, engineering-specific standardized examination. The findings indicate a statistical relationship, but a lack of structure between the amount of required content in the curriculum and performance on the examination. Additional findings were also generated regarding the way that programs interpret the Criterion 3.f feedback generated during accreditation visits. The primary impact of this study is that it dispels the myth that more courses or course time on professionalism and ethics will necessarily lead to positive engineering education outcomes. Much of the impetus to add more curriculum content results from a lack of conclusive feedback during ABET accreditation visits.	accreditation;quantity;requirement;semiconductor industry;system administrator	B. E. Barry;Matthew W. Ohland	2012	Science and engineering ethics	10.1007/s11948-011-9255-5	curriculum;engineering management;medical education;ethics;engineering;curriculum mapping;sociology;law;pedagogy	Web+IR	-80.16706087470617	-27.248852170661884	173122
df55846c739701e05db92c962a025be5bd2b216a	virtual reality learning environments in materials engineering: rockwell hardness test		The use of advanced Information and Communications Technology (ICT) is becoming really important in teaching-learning activities. This is especially relevant within the field of engineering where many teachers are beginning to use sophisticated virtual laboratories (VL) and computer applications in the classroom. Indeed, results of many teaching experiences validate the usefulness of such virtual tools due to their high efficiency in the teaching-learning process. However, some of the ICT tools and applications used in engineering education are becoming excessively complex and require extensive training to use them, which may be even more difficult than the knowledge they wish to teach. This communication deals with the development of new teaching technologies used in Materials Science and Engineering, specifically a VL based on the step-by-step performance of a Rockwell hardness testing machine. To achieve this goal, a realistic 3D scenario based on non-immersive virtual reality design −similar to the usual videogame environments − is used to increase students’ motivation regarding the study of hardness testing of metals. Like any virtual tool which begins to be used, some changes or potential areas of improvement will arise when applied in the classroom during the subsequent years. Any improvement should take into account students’ opinions and also consider that a virtual tool must be implemented within an appropriate teaching methodology with an educational aim.		M. P. Rubio;D. Vergara;S. Rodríguez;J. Extremera	2018		10.1007/978-3-319-98872-6_13	interactivity;computer engineering;rockwell scale;teaching method;virtual reality;engineering education;indentation hardness;computer applications;information and communications technology	AI	-79.69306341759345	-36.82211663195139	173238
3631c87c6bb66fa2f1c85b7ef69784cd939ed202	where academics meet the real world: difficulties encountered when conducting a project for designing a game-based learning in a company	legal issues;training;educational games;game based learning;educational game;game learning learning;student learning;computer game;joy	Educational games have been widely developed and tested by many researchers. Most of results show that the educational games are good to increase students’ learning motivations in formal learning. It seems quite workable, however, is it also true if we want to apply the concepts to business? Or, does it still have effects to on-job-training and orientation in business? This research focuses on the first question. The experience of trying to design and test a Game-Based Learning System, with a joy component, in a real corporation is challenging and risky. This paper shows how hard was to find a company willing to do this test, the negotiations involved, the legal issues and the extensive scrutiny imposed. Constant revisions and postponing, threatening of cancellation and misinformation about company resources needs continuous diplomacy and flexibility from researchers. Prejudice against computer games may play an important barrier and an unfair advantage towards traditional training deliveries.	pc game;real life;software project management	Eduardo Werneck;Maiga Chang	2009		10.1007/978-3-642-03364-3_24	educational technology;error-driven learning;simulation;computer science;knowledge management;artificial intelligence;experiential learning;game mechanics;game developer;advertising;pedagogy	AI	-83.87802614199249	-29.923105476971564	173702
bce8b3a288233dc1c073737e4429938a1cb52ca8	integrating design and simulation into a computer architecture course	capstone project;integrated design;computer architecture;student perception;cost effectiveness	This paper describes our experiences with closed laboratories in a computer architecture course and highlights the development of a capstone project. We advocate the use of software as a cost effective means of supporting analysis, design, and experimentation. Improvements to the course in regards to content, environment for learning, student perception, skills accomplished and retained, and instructor involvement are outlined. Several labs are summarized, including the capstone project tying together all aspects of machine organization. We conclude that integrating design education into computer science with the logic simulator lab approach is worthy of our continued efforts.	capstone (cryptography);computer architecture;computer science;experience;experiment;logic simulation	Deborah Knox	1997		10.1145/268819.268834	simulation;cost-effectiveness analysis;computer science;software engineering	Arch	-81.4727747532174	-34.855690460369345	173749
53b63317b4e463d37fdf8b05da21356f590e109a	the educational object economy: alternatives in authoring and aggregation of educational software	learning resource;multimedia materials;educational software;foreign countries;computer assisted instruction;interactive simulation;developing country;component based software development;educational technology;programming;computer simulation;authoring tool;teaching methods	The Educational Object Economy (EOE) emerged from research on end-user authoring tools for multimedia software and, by 1997, developed into a library of over 2000 freely available interactive simulations for learning. The organizationu0027s original goals and its ongoing interest in alternative methods of software authoring led to continuing connections with component-based software development and collaborative development models. Subsequent focus on learning resource development in developing countries has led to contributions to projects in India, Turkey, Brazil, and other countries. Although the need for learning resources in these and other countries is great, component-based approaches have not yet been adopted.		Edmond Gaible	2004	Interactive Learning Environments	10.1080/1049482042000300887	computer simulation;programming;educational technology;computing;simulation;developing country;computer science;component-based software engineering;software development;teaching method;multimedia;educational software;management	HCI	-80.93885467045682	-34.76060086877168	174081
62005dbf551cd31288d7e8aff08995ff3d7d4f3a	little languages for little robots	lego mindstorms;language design	With serendipity as our muse, we have created tools that allow students to author languages of their own design for robots of their own construction. In developing a Scheme compiler for the LEGO Mindstorm we realized that there is great educational potential in the design and creation of new languages for small robotics kits. As a side effect of bringing Scheme and the Mindstorm together in a creative context, we have begun an exploration of teaching language design that is fundamentally different from the treatment of the subject in traditional literature.	compiler;domain-specific language;lego mindstorms;little robots;robot;robotics;scheme	Matthew C. Jadud;Brooke N. Chenoweth;Jacob Schleter	2003			simulation;computer science;engineering	Robotics	-82.04489897954448	-36.41436945280832	174722
2e217411b952fbdfddf9104b96a0d684aea6cb22	stingray: a hands-on approach to learning information security	learning style;learning effectiveness;information security;network security;student project;it education;student learning;information security education;approaches to learning	Teaching Information Security is a daunting task. Students have a variety of needs that must be met in order for them to learn effectively. This paper contains an analysis of a hypothetical method to help these students learn important computer and network security concepts and techniques. The student project presented here will combine distance education and the traditional lecture-based classroom system with much more emphasis on a hands-on approach to teach students about Information Security. The system is made up of three components ranging from beginner to advanced stages and will attempt to accommodate the different learning styles that are so prevalent in a diverse student body. The first component has already been used in a classroom setting and the results are presented here. Students who are able to successfully complete all three components of this student project will gain an understanding of various tools, techniques and concepts that may help them in their future endeavors in the Information Security field.	hands-on computing;information security;network security	Fred Gutierrez	2006		10.1145/1168812.1168827	simulation;computer science;engineering;knowledge management;information security;network security;teaching method;management;computer security;pedagogy	AI	-81.9132342978384	-29.138801348257783	174774
c280b008729c66fd86c755356aa61883d28994c2	pogil activities for computer organization and architecture: (abstract only)		Research shows that active learning can increase student performance and engagement, but access to materials is a notable barrier to using research-based instruction strategies in CS and Engineering. We present results of a project-in-progress that aims to create, pilot, revise, and disseminate POGIL activities for Computer Organization and Architecture. POGIL is a research-based instruction strategy that comprises self-managed teams, guided inquiry (or, exploration), and development of process skills, such as critical thinking and assessment. The strategy has been shown to improve student performance and engagement in courses in scientific disciplines and, more recently, CS. This poster presents how we have applied the methodology for POGIL activities to Computer Organization and Architecture and highlights one activity in depth. From 2 pilots with 36 and 70 students we produced revisions and timings for 6 activities. We also discuss lessons learned in a) facilitation, such as the importance of roles and the tradeoffs of class-level synchrony and b) authorship, such as the appropriate choice of model (or, subject of inquiry) and level of guidance in the exploration phase of an activity. The intended outcome of this project is to make these activities publicly available on cspogil.org.	active learning (machine learning);emoticon;microarchitecture	Brandon Myers	2018		10.1145/3159450.3162262	active learning;knowledge management;architecture;inquiry-based learning;pogil;computer science;facilitation;critical thinking;dissemination	AI	-78.16061065784318	-33.36063954922483	174837
dec1e2b4699fe211a15a097657a4f8262671744f	xml and browser development activities in cs2	browser development activity;poster session;neural networks;constructivist	The postgraduate computing degree was accredited in November 1999 and the first cohort of students was admitted in February 2000. All students in a course meet on campus four times per semester approximately four weeks apart, for four hours on a Saturday and four hours on a Sunday. The faculty uses a range of approaches including presentations, group work, electronic discussions and individual communications. The first course that was taught in this way was a compulsory course, The Impact of Information Technology on Society, and it was offered in 'semester one and semester two of 2000.	xml	Martha J. Kosa;Mark A. Boshart	2001		10.1145/377435.377699	xml;xml signature;streaming xml;multimedia;document type definition;computer science;computer network;xml framework;xml database;xml base;efficient xml interchange	HCI	-77.74067802706018	-32.59846005840257	174977
450a3a23eaeee33b31e26e9001e9f756466f3b62	examining antecedents of knowledge-sharing factors on research supervision: an empirical study	sharing behavior;student research;supervisor supervisee relationship;data collection;knowledge management;college students;program evaluation;evaluation methods;data analysis;foreign countries;research methodology;student surveys;information dissemination;knowledge sharing impact factors;knowledge sharing;research supervision;learning strategies;supervision;models	The use of an effective supervision mechanism is crucial between a student and supervisor. The essential knowledge shared and transferred between these two parties must be observed and understood very well in order to ensure that students are produced at good level of quality for future professional knowledge workers. The aim of this study was to conduct an assessment of the impact of individual, organisational and technical factors on knowledge sharing in a research supervision domain. In order to achieve this aim, a specific research model was developed. This model was based on systematically analysing and extracting all the knowledge-sharing impact factors and then choosing the more iterative and adaptable ones, according to research supervision models. These factors categorized to individual, organizational and technological factors. To effectively evaluate the research model, a quantitative research method was adopted. Data was collected by a survey of 150 students from the Faculty of Computing at Universiti Teknologi Malaysia. The Smart PLS tool was used for data analysis. In sum, the results of this research show that the individual factor in the research supervision domain – namely, the ability of students to share knowledge – in addition to technological factors – specifically, IT systems – have the greatest impact on knowledge sharing in the supervision process. In addition, it was shown that organisational factors including the culture of the university, social networks, and supervisor support have a positive impact on knowledge sharing in research supervision. However, when compared with individual and technical factors, the effect of organisational factors on knowledge sharing in research supervision was not particularly strong in the case of this study. A positive relationship did not exist between the learning strategy and knowledge sharing in research supervision. This study is among the first of its kind to empirically examine the antecedent factors of knowledge sharing in the context of research supervision.	categorization;iterative method;social network	Arash Khosravi;Mohammad Nazir Ahmad	2014	Education and Information Technologies	10.1007/s10639-014-9354-4	public relations;program evaluation;computer science;knowledge management;evaluation;methodology;management science;sociology;data analysis;management;statistics;pedagogy;data collection	AI	-82.13694482657822	-26.072876652130457	175066
e046de5ae29df32a280447816e00f939ad7a077e	developing software engineering skills using real tools for automated grading		Situated learning theory supports engaging students with materials and resources that reflect professional standards and best practices. Starting with our introductory courses, we incorporate situated learning to support student engagement in software engineering practices and processes through the use of industrial strength open-source tools in several classes throughout the undergraduate computer science curriculum at NC State University. Additionally, these tools support several logistical and educational needs in computer science classrooms, including assignment submission systems and automated grading. In this tools paper, we present our Canary Framework for supporting software engineering practices through the use of Eclipse for development; GitHub for submission and collaboration; and Jenkins for continuous integration and automated grading. These tools are used in five of ten core courses by more than 3000 students over ten semesters. While the use of these tools in education is not unique, we want to share our model of using professional tools in a classroom setting and our experiences on how this framework can support multiple courses throughout the curriculum and at scale.	best practice;computer science;continuous integration;eclipse;jenkins;logistics;open-source software;situated;software engineering;warez	Sarah Smith Heckman;Jason King	2018		10.1145/3159450.3159595	software engineering;curriculum;knowledge management;grading (education);best practice;computer science;student engagement;situated learning	SE	-81.6850719296065	-34.20468516866516	175463
72c7406d7e3be873340a82ee0c5326eae5d1ebfb	it's not what you think: a theory for understanding the lack of interest among domestic students in the engineering phd	qualitative research;medical services engineering students educational institutions interviews engineering profession;domestic students;medical services;engineering profession;engineering education;qualitative research domestic students engineering phds;grounded theory;interviews;engineering students;engineering phds;educators domestic students engineering phd domestic engineers doctoral level engineering education qualitative methods grounded theory methods advanced engineering education undergraduate engineering students doctoral engineering students engineering faculty doctoral education;service engineering;doctoral education	We live in a fast-paced world surrounded by technological advances. Engineers with advanced skills perform important functions in our society. However we know very little about how engineers consider obtaining advanced education and skills. The purpose of this study is to understand and develop a theory explaining the process domestic engineers undergo in developing an interest in obtaining a PhD in engineering. Our research was guided by the following central research question: What is the theory that explains the process of developing interest in doctoral-level engineering education for engineers? We used qualitative, grounded theory methods, to investigate the process of advanced engineering education interest. Interview data were collected from undergraduate engineering students, doctoral engineering students, engineering faculty, and engineers in industry with PhD degrees from seven institutional sites. Our theory explains that misperceptions, personal characteristics, and environmental elements are part of engineers' interest in advanced education. Engineers must be exposed to these factors and must also actively process this information to develop interest. This theory provides a framework for understanding and promoting doctoral education for engineers. Implications for educators are offered.	amanda;faith ellen;koch snowflake	Michelle C. Howell Smith;Amanda L. Garrett;Ellen Weissinger;Namas Chandra	2011	2011 Frontiers in Education Conference (FIE)	10.1109/FIE.2011.6143027	engineering management;engineering ethics;engineering education;interview;engineering;qualitative research;grounded theory;pedagogy;mechanical engineering	DB	-83.378096633857	-31.525231068498062	175610
a6f4ecd35b4e014e5d3072009fb24befe59da88c	fostering and assessing communication skills in the computer science context	technical writing;object oriented programming;software presentations;communication skill;advanced courses;communication skills;assessment	In accord with a college-wide assessment program at the author's institution, a required major course approximately midway through a student's college career forms the matrix for an intensive project which both develops and evaluates the student's communication skills in discipline-specific ways. For Computer Science majors, the project is a component of a junior-level Advanced Object-Oriented Programming course. Though centered about a semester-long programming project, it involves expectations, guidance, and feedback beyond what is traditional. This assessment instrument has a minimal impact on class time and course content, substantial impact on faculty and student effort, and tremendous impact on learning.	battle of midway;bricolage;computer science;the matrix	Mark Michael	2000		10.1145/330908.331834	technical writing;simulation;computer science;software engineering;multimedia;programming language;object-oriented programming;educational assessment	PL	-80.7453266225351	-34.26805372759281	175737
4d8acfbbb35111216e9acd4bde5c252341be1245	lesbian, gay, bisexual, and transgender students in engineering: climate and perceptions	engineering;stress;mentoring program lgbt engineering undergraduate climate study student interviews;employee welfare;gender issues engineering education;lgbt;gender issues;student interviews;climate study;undergraduate;mentoring program;engineering education;graduate students lesbian students gay students bisexual students transgender students engineering students lgbt students hostile climate meyer minority stress theory tinto theory of student departure mentoring program engineering faculty;interviews;engineering students;communities;educational institutions meteorology interviews communities stress employee welfare engineering students;meteorology	Few studies of the climate in engineering for lesbian, gay, bisexual and transgender (LGBT) students have been conducted. According to these studies, LGBT students are often forced to cope with hostile climates in engineering. To address the question of how LGBT students experience the climate in engineering, we interviewed a total of 16 students at two institutions in the Midwest. We analyzed the interview transcripts using open coding based on a combination of Meyer's Minority Stress Theory and Tinto's Theory of Student Departure. Preliminary results indicate that LGBT students experience more situations of exclusion within engineering than in other areas of their campuses. Based on their experiences, students advocate increased visibility for LGBT students in engineering and a mentoring program to provide support from engineering faculty and graduate students who also identify as LGBT.	experience	Kathryn F. Trenshaw;Ashley Hetrick;Ramona F. Oswald;Sharra L. Vostral;Michael C. Loui	2013	2013 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2013.6685028	psychology;applied psychology;social psychology;pedagogy	SE	-79.29583917773056	-32.81645410510133	175949
5dbb4102082de52156a000cde8137650ca96efd7	the i.t. circuit certificate: training for the future	computer competency;instructional technology;computer certification;training;computer training program;computer education;training program;computer training	St. Edward's University Instructional Technology department developed a free certification program called the I.T. Circuit. The I.T. Circuit was developed to help faculty, staff, and students build the technology skills needed at home, school, or in the workplace. The program allows for faculty, staff, and students to choose from three different certification tracks and attend the free computer training workshops offered each month required for the specific track or tracks chosen. Over the past four years, this program has gone through many different stages leading to where the program is today.The primary focus of this paper is to share the successes and failures of the I.T. Circuit certification program. We hope this will help spark innovative ideas for other institutions thinking about implementing their own certification programs.		Joana Trimble	2005		10.1145/1099435.1099524	medical education;simulation;engineering;pedagogy	HCI	-78.38432979202364	-30.811137363247983	175981
9dbd5f5b52566ded1d8ff453cf08ba4574e7a478	collaboration of software engineering courses to enhance students' learning experience	software engineering	A character identifying device generates a core bit matrix and a mask bit matrix for each reference character pattern scanned by a television camera or like device. The two matrices represent binary coded representation of a reference character pattern at two different threshold levels. An enlarged matrix representation and a contracted matrix representation of the same unknown character pattern are compared to the core bit matrix and the mask bit matrix, respectively, of each reference character pattern and corresponding correlation output signals are generated to unable the identification of the reference character pattern most closely correlated to the unknown character pattern.	software engineering	Thomas Philip	2008			software engineering;computer science;professional video camera;personal software process;matrix (mathematics);matrix representation;software engineering process group;binary number;experiential learning	SE	-85.50239413372157	-33.292875871678234	176018
3e4a7ce010613e0171bdf503db561567f8afc50c	experience of application of network technologies in engineering education		"""Leading technical universities of Russia and Kazakhstan, preparing engineers in the field of mechatronics, robotics and automation, combined their intellectual and material resources within the International University network project """"Synergy"""". For practical training, FESTO equipment and its virtual counterparts are used primarily. Training of university students participating in the project has been organized, with lectures by leading professors on the Internet. Scientific Internet conferences of young scientists are regularly held. International Association DAAAM International regularly organizes international student practices. A doctoral school is being conducted, at the DAAAM annual symposium, the development of project participants is presented."""	international association of privacy professionals;internet;mechatronics;national research and education network;robotics;synergy	B. Katalinic;A. Eliseev;Iosif V. Breido;A. V. Bobryakov;Artyom A Kabanov;V. K. Khomchenko;V. V. Potekhin;S. Stazhkov;Vladimir F. Filaretov	2018	EAI Endorsed Trans. Energy Web	10.4108/eai.30-1-2018.153817	engineering;distributed computing;systems engineering;engineering education	Robotics	-79.41793895687881	-31.395917149597285	176077
28ab9e3d8dbc2eec4a9523de00c8097bcc2549af	game-based training of communication skills in requirements engineering		witnessing a mad rush to pour educational content into games or to use games in the classroom in an inappropriate manner and in an ad hoc manner in hopes that players are motivated to learn simply because the content is housed inside a game. A failure to base serious game design on well-established and practical instructional theories as proposed by well-respected educators like Robert Gagne [56] and James Keller [57] increases the risk of the game failing to meet its intended educational goals, yielding a player base who is entertained but who has not acquired new skills or knowledge. Well-developed video games certainly engage players, but games designated as educational are not always based on sound educational principles and theories, thereby potentially losing power as an educational tool”. SERIOUS GAME DESIGN FRAMEWORK RATIONALE	design rationale;pc game;requirements engineering;scientific literature;virtual actor	Maris Dargis;Rolands Koncevics;Andris Silamikelis;Marite Kirikova	2014			game testing;simulation;computer science;requirements engineering;skills management;game design;game design document;knowledge management	HCI	-83.8512791791377	-30.006435309394913	176094
1d715ae17c4d37b746ba911d2a649ad5c226ffe4	preparing to teach discrete math for the first time	discrete mathematics;united states military academy	Do you recall the first time you taught a discrete mathematics course, if ever? What were your goals for the course? Your thought processes preparing? How did you prepare to teach it the first time? As educators, there is always that first time teaching a new course. To capture this scenario I have enlisted the services of two professors at the United States Military Academy at West Point, Rachelle DeCoste and Kevin L. Huggins, who will each be teaching, for the first time, a section of discrete mathematics for cadets majoring in computer science. This is the first of two columns they will be contributing - before and after.	discrete mathematics	Peter B. Henderson;Rachelle DeCoste;Kevin L. Huggins	2006	SIGCSE Bulletin	10.1145/1189136.1189158	simulation;computer science	Theory	-80.12819744676496	-30.788359340290114	176102
443efae4bc76ba0d017a64934d692855d485a2cd	a specialization in information and knowledge management systems for the undergraduate computer science curriculum	student experiments;psychology institute;text analysis computer science education educational courses knowledge management psychology data mining information retrieval;information management systems;project management;knowledge management systems;information retrieval;scientific method;knowledge management;text analysis;computer science curriculum;psychology;educational course sequence;data mining;ikms project;large scale;computer science education;hands on lab setting;evaluation criteria;educational courses;psychology institute information management systems knowledge management systems undergraduate computer science curriculum educational course sequence students data mining information retrieval text analysis ikms project hands on lab setting student experiments undergraduates;undergraduate computer science curriculum;knowledge management system;relational databases;computer science;student learning;knowledge management computer science data mining information retrieval text analysis psychology relational databases natural language processing project management text categorization;undergraduates;natural language processing;text categorization;students	The authors described the progress extending the undergraduate computer science (CS) curriculum to include a deep understanding of techniques for information and knowledge management systems (IKMS). In a novel five-course sequence, students build and work with techniques for data mining, information retrieval, and text analysis, and develop a large-scale IKMS project. The authors taught in a hands-on lab setting where students use tools they have built, performing experiments that could extend the field. Hence undergraduates have firsthand knowledge of performing CS research using scientific methods. Second, a rigorous set of evaluation criteria developed in the Psychology Institute was utilized to evaluate how well students learn using our approaches. Ultimately, it is believed that this specialization warrants inclusion as an option in the standard undergraduate CS curriculum.	computer science;data mining;experiment;hands-on computing;information retrieval;knowledge management;partial template specialization;trusted computer system evaluation criteria	Shlomo Argamon;Nazli Goharian;David A. Grossman;Ophir Frieder;N. Raju	2005	International Conference on Information Technology: Coding and Computing (ITCC'05) - Volume II	10.1109/ITCC.2005.39	computer science;knowledge management;data science;multimedia	DB	-80.29279497195945	-29.955670805963567	176228
8630676c7179fc44b166e84d393abe93cecd3160	observations and lessons learnt from non health professionals evaluating a health search engine		This article presents the results of one of the stages of the user-centered evaluation conducted in a framework of the EU project Khresmoi. In a controlled environment, users were asked to perform health-related tasks using a search engine specifically developed for trustworthy online health information. Twenty seven participants from largely the Czech Republic and France took part in the evaluation. All reported overall a positive experience, while some features caused some criticism. Learning points are summed up regarding running such types of evaluations with the general public and specifically with patients.		Natalia Pletneva;Zdenka Uresová;Jean-Jacques Altman;Nicolas Postel Vinay;Patrice Degoulet;Jan Hajic;Célia Boyer	2014	Studies in health technology and informatics	10.3233/978-1-61499-432-9-940	data mining;knowledge management;search engine;medicine	HCI	-82.19328906860008	-25.019462328364924	176491
c426630b06b84f93d90bb1ce243989e039b73978	enhanced learning by promoting engineering competencies	computers;collaborative learning enhanced learning engineering competencies engineering graduate computer security computer and information engineering programme uppsala university problem solving skills open ended problems;seminars;collaboration;utbildningsvetenskap;datavetenskap datalogi;writing;engineering education educational institutions;computer science;educational sciences;problem solving;seminars problem solving collaboration computers educational institutions writing	An engineering graduate needs to master a number of important skills: problem solving, critical thinking, communication, collaboration, etc. In this paper we describe how a course in computer security, taught in the Computer and Information Engineering programme at Uppsala University, has been developed over a period of three years. The aim is to better develop the engineering competencies of students, improving their understanding of course contents, training their ability to reflect on it, and to apply their knowledge when facing realistic problems. The course is designed to activate students, based on practical labs and theoretical tasks which are solved in groups. The student reports are assessed at seminars, where the solutions are presented orally, peer-reviewed and discussed. The seminars encourage and reward activities at the higher levels of taxonomies such as Bloom's. The results of the development, based on a CEQ-based course evaluation, indicate that students take a deeper approach to learning. They develop their problem-solving skills to a high degree, appreciate the practical solving of open-ended problems, and take responsibility for collaborative learning. Their overall satisfaction with the course is quite high, despite indications that they find the workload high.	bloom;computer security;information engineering;nonlinear gameplay;problem solving;taxonomy (general)	Sofia Cassel;Aletta Nylén;Björn Victor	2014	2014 IEEE Frontiers in Education Conference (FIE) Proceedings	10.1109/FIE.2014.7044328	simulation;computer science;knowledge management;pedagogy	DB	-79.9237375699173	-34.296793623323964	176498
956c510609ff52c169577f8e2d72a4701336a873	empowering teachers to create educational software: a constructivist approach utilizing etoys, pair programming and cognitive apprenticeship	computers;computer program;teacher educators;apprenticeships;programming language;teaching learning strategies;pair programming;computer literacy;educational software;visual programming;instructional strategies;educational strategies;media in education;cognitive apprenticeship;programming and programming languages;computer software;educational technology;interactive learning environment;teacher attitudes;programming;teaching methods;constructivism learning	This study investigates whether a visual programming environment called Etoys could enable teachers to create software applications meeting their own instructional needs. Twenty-four teachers who participated in the study successfully developed their own educational computer programs in the educational technology course employing cognitive apprenticeship and pair programming approaches as the primary instructional strategies. Two educational software programs created by the participating teachers were described in order to explain what they were trying to do using Etoys and how they accomplished their goals. The results of an anonymous survey evaluating the difficulty of and the attitude toward learning Etoys indicate that teachers enjoyed learning Etoys and would like to continue to use it in the future although they found it was slightly more difficult, compared to their self-evaluated computer skill. The strengths and weaknesses of Etoys, the difficult computer programming concepts, and the educational implications of Etoys programming were also discussed.	etoys;pair programming	Young-Jin Lee	2011	Computers & Education	10.1016/j.compedu.2010.09.018	computer literacy;programming;educational technology;pair programming;computer science;knowledge management;apprenticeship;teaching method;multimedia;educational software;visual programming language;pedagogy	HCI	-80.04430814043364	-37.467171309555724	176618
857b2fc852ba88b9d467eece84e764afd8c58710	the role of co-operative education in ensuring students' success when transitioning from classroom to industry	transformative learning co operative education employability graduate attributes;team working educational technology engineering education student experiments;graduate attributes;transformative learning;co operative education;employability;educational institutions instruments employment collaboration accreditation;employability cooperative education students success engineering schools north america learning outcomes team work communication skills professionalism faculty of applied science university of british columbia canada	Engineering schools in North America aim to prepare students for transitioning to the workplace by embedding the teaching of graduate attributes within the curriculum and using robust ways to measure learning outcomes. Some of the graduate attributes for engineering students include individual and team work, communication skills, professionalism, the impact of engineering on society and the environment, ethics and equity. Our paper discusses the collaboration between technical communication instructors and the staff of the Engineering Co-op program of the Faculty of Applied Science in the University of British Columbia, Canada. Our purpose is to examine the relationship between employability and graduate attributes and to explore the experiential aspects of transformative learning in the cooperative education model. In addition to learning about graduate attributes in the classroom, students can practice them and understand them better through their co-op work experience. Three instruments for measuring the learning outcomes are discussed: 1) a reality-based assignment designed to measure students' understanding of graduate attributes; 2) a self-administered online survey; 3) a de-briefing questionnaire administered at the end of the co-op work term. The authors describe the instrument development and discuss the significance of students' progressive understanding of graduate attributes.	columbia (supercomputer)	Jenny Reilly;Tatiana Teslenko	2014	2014 IEEE International Professional Communication Conference (IPCC)	10.1109/IPCC.2014.7020361	engineering management;management;employability;transformative learning	HCI	-78.97886345095658	-32.79028694789877	176857
d26e8a4e42fe23a6ff7d6cc33595811fa46e4e75	an effective approach to integrated learning in capstone design	soft skills;industry project;capstone design;nontechnical skills;professionalism	The H. Milton Stewart School of Industrial and Systems Engineering ISyE at Georgia Tech has developed an integrated approach to its capstone Senior Design course in which students form teams and identify, scope, and execute projects for real-world clients. Historically, the course has focused mainly on the engineering challenges of industry projects, but the skill set required of new industrial engineering and operations research practitioners is much broader. The new course structure creatively integrates internal and external resources for teaching business skills, soft skills, professionalism, and legal issues in an interdisciplinary, on-demand team-teaching format. Assessments show that student preparation has increased, especially in nontechnical areas. In addition, project quality has dramatically improved and is much more consistent. Both an external review board and the most recent ABET review cited the new Senior Design course as one of ISyE's strengths.	capstone (cryptography)	Steven Hackman;Joel Sokol;Chen Zhou	2013	INFORMS Trans. Education	10.1287/ited.1120.0098	simulation;knowledge management;operations research;soft skills	HCI	-80.92922895047187	-31.709065528844796	176895
60fcb28a2f9502ea3c13e39bd8390802272babd0	what do we know about knowledge management? practical implications for software engineering	social network services;developpement logiciel;ingenieria del conocimiento;systematic review software engineering knowledge management learning software organization software process improvement;knowledge management software engineering educational institutions systems engineering and theory knowledge engineering guidelines software development management programming social network services space technology;systematic review;software process improvement;ingenierie connaissances;knowledge management;software engineering;systems engineering and theory;guidelines;learning software organization;desarrollo logicial;software development;software engineering knowledge management;genie logiciel;space technology;programming;ingenieria informatica;software development knowledge management software engineering decision making;software development management;knowledge engineering	There have been many claims about knowledge management's benefits in software engineering, such as decreased time and cost for development, increased quality, and better decision-making abilities. Although we can find some success stories illustrating these claims, particularly on aspects related to the systems and engineering schools, more research is necessary to explore the intersection between each school and the software engineering field. Researchers should continue to emphasize the need for a broad focus across multiple KM schools to suceed in improving KM's practical application in software engineering.	knowledge management;software engineering	Torgeir Dingsøyr;Finn Olav Bjørnson;Forrest Shull	2009	IEEE Software	10.1109/MS.2009.82	programming;software engineering process group;systematic review;computer science;systems engineering;engineering;knowledge management;software development;software engineering;knowledge engineering;space technology;management	SE	-83.42006399846046	-33.31294247944652	177217
7fae395d5b90e5abd712fb74a4c6e50037219c9d	the internationalization of engineering education: a tale of two countries	cultural awareness;door;guidage;international exchange programs;exchange;foreign work experience;cambio;personal development;ejecucion programa;guiado;echange;indexing terms;program execution;internationalization;engineering education educational institutions educational programs design engineering cultural differences natural languages solids birds systems engineering and theory disaster management;execution programme;porte;complecion;educational courses;engineering education;culture;graduate students;educational courses engineering education;guidance;completitud;completeness;personal development engineering education internationalization foreign work experience international exchange programs graduate students undergraduate students educational courses culture survey;completude;survey;completion;puerta;graduate student;undergraduate students	Two international exchange programs in engineering between universities in Japan and Canada, are described in order to explain the significant benefits gained by the undergraduate and graduate students, as well as the academic staff who participate, and to highlight key principles generally followed in the design and execution of exchange programs. One notable and successful engineering exchange program is between the University of Waterloo, located in Southern Ontario, Canada, and Tottori University in Japan, while the other is between the University of Waterloo and Kyoto University in Japan. Both of these programs include foreign students taking courses for credit or audit at the host university, and, for the case of graduate students, also receiving guidance in their research. Moreover, upon completion of one academic semester in Japan, all of the undergraduate Waterloo students studying at Tottori University are employed in Japanese industry for three to four months before returning to Canada. Of paramount importance to the education of the participating undergraduate and graduate students is the opportunity to learn, by first-hand experience, the language and culture of a foreign country. In fact, one of the key findings of a survey completed by Canadian and Japanese students who took part in the exchange programs, is that living in a different culture greatly enhanced their own personal development. The addition of this international perspective to a solid education in engineering opens many doors of opportunity for exchange program alumni, who are well prepared to fully participate in the global marketplace of the 21st century, and to assist society in responsibly reaching an equitable and sustainable future.		Keith W. Hipel;Norio Okada;K. Fukuyama	2003	IEEE Trans. Systems, Man, and Cybernetics, Part C	10.1109/TSMCC.2003.809356	engineering education;completion;personal development;completeness;computer science;door;mathematics;internationalization;culture;statistics	DB	-82.9842058143347	-31.66453188774909	177671
3e80319af19fcd7041b3dcfb39ff3176d466bb52	pillars of analytics applied in ms degree in information sciences and technologies	database;curriculum;web technologies;information sciences and technologies;data analytics	The Master of Science (MS) program in Information Sciences and Technologies (IST) at Rochester Institute of Technology conducted a significant upgrade of its curriculum in 2013, aiming to better prepare its graduates for the new trends and challenges in the fast evolving IT computing industry. In particular, the upgraded MS program places a strong emphasis on data analytics, where all students in the program get an intensive training in data analytics foundation in our core courses. Students can then continue with advanced work in the Analytics Track to receive deeper theoretical knowledge in the field. In this paper, we report our experience of offering this analytics-centric curriculum over the past two years. We first formally define four pillars of analytics and trace the skills needed to support each pillar and the courses that provide those skills. We then describe the course experiences through a sampling of the projects completed by students in their course work. We also provide some student feedback on the course experience. We conclude with a discussion of the capstone experience and a sampling of capstone projects. We show the movement toward analytics in the capstone experiences, particularly since the program began in 2013. The positive course experience and the fast increasing number of capstone projects in the analytics area show strong evidence about the initial success of the analytics-centric curriculum.	capstone (cryptography);experience;sampling (signal processing)	Jai W. Kang;Edward P. Holden;Qi Yu	2015		10.1145/2808006.2808028	curriculum;analytics;simulation;human–computer interaction;computer science;engineering;electrical engineering;data science;business analytics;data analysis;software analytics;management	DB	-80.43010910577942	-31.80077534188255	177676
59368208aca92a03a7a42daa5c711de456026416	designing, developing, and validating an adaptive visual search training platform		"""Transportation Security Officers (TSOs) are at the forefront of our nation's security, and are tasked with screening every bag boarding a com- mercial aircraft within the United States. TSOs undergo extensive classroom and simulation-based visual search training to learn how to identify threats within X-ray imagery. Integration of eye tracking technology into simulation-based training could further enhance training by providing in-process measures of traditionally """"unobservable"""" visual search performance. This paper outlines the research and development approach taken to create an innovative training solution for X-ray image threat detection and resolution utilizing advances in eye tracking measurement and training science that provides individualized performance feedback to optimize training effectiveness and efficiency."""		Kelly S. Hale;Katie Del Giudice;Jesse Flint;Darren P. Wilson;Katherine Muse;Bonnie Kudrick	2015		10.1007/978-3-319-20816-9_70	computer vision;simulation;engineering;multimedia	Vision	-82.90834217734579	-29.065279168881208	177741
7c360c71eb18521b4682dd52cb10317325c06e30	curriculum-aligned work-integrated learning: a new kind of industry-academic degree partnership		Work-integrated learning is a common approach to add practical, real-world work experience to academic settings. Traditional co-op programs in colleges and universities alternate courses with semesters spent as an intern at a relevant workplace. We have designed an academic-industry partnership that takes work-integrated learning further by deliberately aligning workplace experience to the academic curriculum. Our students earn a Bachelor of Computer Science from the university, and are paid employees of the industry partner throughout their degree. While advanced courses and electives are taken on campus as usual, some core computer science classes and practicum courses are delivered with the industry partner so as to integrate them with placements on site. Assessment remains the responsibility of the university. In this report, we describe the partnership from the perspective of the industry partner. We describe our goals, partnership design, and first two iterations of the implementation. We discuss the challenges we have faced with our first cohort, and share suggestions for others looking to create similar programs.	a new kind of science;bachelor of computer science;best, worst and average case;expect;experience;experiment;feedback;iteration;performance evaluation	Gail Carmichael;Christine Jordan;Andrea Ross;Alison Evans Adnani	2018		10.1145/3159450.3159543	knowledge management;curriculum;engineering management;general partnership;work experience;internship;computer science;bachelor;practicum;apprenticeship	AI	-78.71203388866982	-30.56233487720219	177859
2ce29acf824716c8a5efac6437cfd091254eb086	an investigation of online course management systems in higher education: platform selection, faculty training, and instructional quality	management system;higher education;online learning;professional development;faculty training;online courses;cms;course evaluation;software selection	Colleges and Universities across the United States have experienced an unprecedented growth in the demand for online course instruction in the recent years. With the large increase in the number of students participating in courses in the online format, there is a lack of research or empirical data that examines both the overall effectiveness and the quality of instruction.Â This study was designed to examine three major components of online instruction: 1) Course Management Systems (CMS), 2) Instructor training and support and, 3) The evaluation of online courses. Thirty institutions of higher education in the tri-state area of Pennsylvania, Ohio, and West Virginia participated in the research.Â The study was a Mixed-Methods approach with both quantitative and qualitative data gathered and analyzed. The methodology and results examined the process of selecting an institutional CMS, the training practices for online instructors, and the evaluation of online courses from an administrative and student perspective.	management system	Julie A. Ray	2009	IJICTE	10.4018/jicte.2009040105	professional development;engineering management;simulation;engineering;management system;higher education;management;pedagogy	Web+IR	-79.79098900795944	-32.90473053101587	178031
bd0b007ad9958ffaf4df7830446c67ea8026fc54	fifty years of automata simulation: a review	computer science education research;pedagogical tool;automata theory;automata simulator	Automata theory is an important subject in computer science and quite consequently, simulation of automata for pedagogical purposes is an important topic in computer science education research. This article reviews the major initiatives in the field of simulation of automata in the last five decades with emphasis on those automata simulators actually used at universities for teaching. A classification of the automata simulators on the basis of their design paradigms has been developed where they have been classified broadly into language based automata simulators and visualization centric automata simulators. Some salient trends in the research on simulation of automata are also identified. The article concludes with an advocacy for continuing research on simulation of automata and integration of automata simulators in teaching.	automata theory;computer science;flight simulator;simulation	Pinaki Chakraborty;Prem Chandra Saxena;Chittaranjan Padmanabha Katti	2011	Inroads	10.1145/2038876.2038893	simulation;computer science;theoretical computer science	Logic	-81.17600451791824	-35.01680329121745	178093
6ade94e8bb1945a5e6feef806624aade230f5ec4	hands-on gps and remote sensing training for high school learners during igarss 2009 in cape town, south africa	igarss 2009;high school learners;ieee 2009 international geoscience and remote sensing symposium;conference;earth s systems global positioning system hands on gps remote sensing training high school learners igarss 2009 south africa geoscience and remote sensing society ieee 2009 international geoscience and remote sensing symposium conference mafeteng schools environment network students health and welfare centres organization university of cape town socioeconomically challenged populations remote sensing art workshop mathematics of remote sensing team contest scavenger hunt national oceanic and atmospheric administration scientists;socioeconomically challenged populations;mafeteng schools environment network;remote sensing art workshop;hands on gps;global positioning system remote sensing cities and towns conferences educational institutions satellites;high school;global positioning system;remote sensing;satellites;earth s systems;uct;geoscience and remote sensing society;national oceanic and atmospheric administration;cities and towns;remote sensing global positioning system;south africa;high school student;remote sensing training;national oceanic and atmospheric administration scientists;scavenger hunt;university of cape town;students health and welfare centres organization;mathematics of remote sensing team contest;conferences	Continuing the commitment of the Geoscience and Remote Sensing Society (GRSS) to education and outreach, the IEEE 2009 International Geoscience and Remote Sensing Symposium (IGARSS) conference in Cape Town, South Africa provided an opportunity for over 400 local high school students to engage in hand-son GPS training and remote sensing workshops. Mafeteng Schools Environment Network (MSEN) and the Students' Health and Welfare Centres Organization (SHAWCO) worked with the University of Cape Town (UCT) in identifying student learners from socioeconomically challenged populations in metropolitan Cape Town. Activities included a remote sensing art workshop, Mathematics of Remote Sensing team contest, and a scavenger hunt. National Oceanic and Atmospheric Administration (NOAA) scientists led discussions and demonstrations of educational products to help build understanding of the science of Earth's systems and the stewardship of our planet, and to foster avenues to explore careers in science. This paper details the education outreach events and gives demographic information on the participants.	global positioning system;hands-on computing;population	Linda Hayden;Ambrose Jearld;Je'aime Powell;Kuchumbi Hayden;Nina L. Jackson	2010	2010 IEEE International Geoscience and Remote Sensing Symposium	10.1109/IGARSS.2010.5651320	meteorology;global positioning system;physics;satellite;remote sensing	Mobile	-80.24658684993561	-29.00869200820568	178333
2b33620962f0c5b663f7ff211bf86a23e1e30fad	digital forensics education: a multidisciplinary curriculum model	digital forensics;portable curriculum;higher education;multidisciplinary approach;standardization	This paper reports experiences and lessons learned in the process of developing and implementing an undergraduate curriculum for digital forensics over the last three years at the University of Illinois at Urbana-Champaign. The project addresses the challenges of developing a higher-education standardized curriculum for digital forensics that meets the needs of the digital forensics community. The curriculum provides degree options and considers the growing employability of digital forensics students in an increasing range of jobs. The approach builds on the multidisciplinary nature of the field. The findings include a curriculum model, detailed course content, exams, and an evaluation package for measuring how students respond to the courses. This paper summarizes the model, results, challenges, and opportunities.	coherence (physics);computer security;experience	Imani Palmer;Elaine Wood;Stefan Nagy;Gabriela García;Masooda N. Bashir;Roy H. Campbell	2015		10.1007/978-3-319-25512-5_1	engineering management;medical education;engineering;multimedia	Web+IR	-79.88968076858731	-32.70394683683266	178745
3be7cc3ef5686bad8e06f09ce817e39f4380c160	successful practices for online computing, engineering, and technology courses	plagiarism;software;engineering education online computing technology courses engineering courses distance learning rochester institute of technology online teaching blended courses undergraduate students asynchronous learning;asynchronous learning;discussion forums;computer aided instruction;distance learning;online courses assessment distance learning;materials;software materials laboratories discussion forums plagiarism cleaning conferences;online courses;educational courses;engineering education;discussion forum;further education computer aided instruction distance learning educational courses engineering education;laboratory experiment;further education;assessment;conferences;graduate student;cleaning	Distance learning has been one vehicle of course delivery at the Rochester Institute of Technology since the early 1990s. Building on the authors' experience in teaching completely online and blended (partly on-campus and partly online) courses to both undergraduate and graduate students, in diverse areas of computing, engineering, and technology, this paper explores issues in delivering online classes in these disciplines. One particular focus is on conveying the traditional in-class laboratory experience to a similar one in the online world while another focus is to leverage the modalities available in online to create newer and richer experiences for students and instructor. The paper presents the challenges and pitfalls in totally asynchronous learning, from assessment to assignments, from lectures to labs, and from participation to plagiarism. For each challenge, the authors provide examples of practices that succeeded, building on experience with those that did not. To place this work in perspective, the paper also examines related work in online computing and engineering education.	experience	Carol J. Romanowski;Rajendra K. Raj;S. Manian Ramkumar	2011	2011 Frontiers in Education Conference (FIE)	10.1109/FIE.2011.6143092	mathematics education;distance education;further education;engineering education;human–computer interaction;computer science;engineering;electrical engineering;multimedia;educational assessment;statistics;pedagogy;online participation	HCI	-78.74449674797404	-34.757126139803184	179308
19f7cc302ee284884f22f390e10ae2b51012bb8e	an approach to renewable energies course for energy engineering students in the framework of the european higher education area (ehea)		As it is well known, the Bologna Process is a voluntary intergovernmental European cooperation initiative that led to the creation of the named European Higher Education Area (EHEA). EHEA was formed to promote mobility, increase academic recognition and attract students and staff from around the world to Europe. On the other hand, since September 2016, the Technical University of Catalonia (Universitat Politecnica de Catalunya, UPC) — BarcelonaTech has a new Campus in Barcelona City, the Diagonal-Besos Campus. In this new Campus appears the Eastern Barcelona School of Engineering (Escola du0027Enginyeria de Barcelona Est, EEBE), with new Bacheloru0027s and Masteru0027s Degrees. In this framework, also since September 2016, the EEBE is offering the new 4-year Bacheloru0027s Degree in Energy Engineering with a total number of 240 ECTS credits. Current article deals with the inclusion of the course about sizing and design of renewable energy systems in the context of this degree. In particular, and although this topic was eventually abandoned in the initial degree curriculum, the paper presents the development of a 3 rd -year course, Renewable Energies, that focuses on this topic.		Herminio Martínez;Encarna Garcia-Vilchez	2017		10.1109/INDIN.2017.8104824	engineering;systems engineering;curriculum;renewable energy;engineering management;wind power;higher education;energy engineering;bologna process;bachelor;civil engineering	Vision	-78.4250965867815	-30.036620421368426	179416
55d6878b0ca8a42ed828a6deb3c64ec3ba1d092a	investigating pair-programming in a 2nd-year software development and design computer science course	second year;program design;collaboration;pair programming;cs2;software development;software design	This paper presents the results of a pair programming experiment conducted at the University of Auckland (NZ) during the first semester of 2004. It involved 300 second year Computer Science students attending a software design and construction course. We investigated similar issues to those reported in [26] and employed a subset of the questionnaires used by Laurie Williams et al. on the experiments presented in [26]. Our results support the use of pair programming as an effective programming/design learning technique.	computer science;experiment;pair programming;software design;software development	Emilia Mendes;Lubna Basil Al-Fakhri;Andrew Luxton-Reilly	2005		10.1145/1067445.1067526	simulation;pair programming;human–computer interaction;computer science;software design;software development;software engineering;program design language;collaboration	Logic	-82.60973422578314	-35.18647457378878	179853
89964a8e44dbe0494d7cda396d46bdef28fe4101	an approach to support algorithms learning using virtual worlds	virtual worlds collaborative scenarios programming language;programming language;computer aided instruction;virtual reality;collaborative scenarios;computer science education;algorithm building skills algorithms learning virtual worlds basic algorithmic structures learning process programming language group problem solving exercises educational contexts polya problem solving method collaborative tasks;collaboration second life computer languages problem solving abstracts syntactics semantics;virtual reality computer aided instruction computer science education;virtual worlds	The basic algorithmic structures are fundamental to systems development and understanding them is an essential step towards the learning process. In order to become a good developer the student needs to refine his learning outcomes to foresee beyond syntax and semantics of a programming language. However, we found that many students face difficulties in that learning process. Thus, it is important to adopt strategies that best fits this situation in order to provide the necessary conditions to achieve success. For that purpose a tool provided with resources for the teachers to plan group problem solving exercises would help students keeping themselves engaged on the programming activities. In this regard we are developing scenarios using virtual worlds. Such environments have been used on many educational contexts, and we believe that if we include Polya's problem solving method as a means for start solving the collaborative tasks described within the scenarios students will propose strategies for solving the tasks, formalize them later on as algorithms. Those activities will promote integration between teacher and students at the same time as students practice their algorithm building skills.	apl;algorithm;fits;problem solving;programming language;software development process;virtual world	Nilmara Salgado;Thais Helena Chaves de Castro	2012	2012 Brazilian Symposium on Collaborative Systems	10.1109/SBSC.2012.31	simulation;computer science;knowledge management;theoretical computer science	HCI	-83.10238017826984	-37.36195209033459	179875
db8762e4f818efa597f2eb5ea9b9dddfec52820e	requirements of practice in relation to the existing information technology and security management competencies	professional development information technology security management competencies professional certifications employment process job advertisements information security professionals it professionals professional certificate constant training;security of data business data processing employment information technology;certification security education organizations information systems information technology	Until few years ago professional certifications were something that is good, but not necessary to have during employment process. That could be seen from the published job advertisements for variety of IT and information security professionals. In such job ads, there was first required specific experience in the subject area where no confirmation of that experience in form of professional certification was needed. Later, in addition of required experience in subject area, the possession of certain certificates was referred as advantage in job ads. Nowadays, it almost becomes the rule that the requirement for employment, in addition to having specific experience in the subject area, is also possession of a professional certificate which confirms stated experience. Professional certifications primarily demonstrate experience and knowledge in a particular area but also, due to the necessity of re-certification every few years, show commitment to professional development and constant training. The guiding principle of this study was to determine how many such certified professionals there is in Croatia and what kind of skills and competencies employers indirectly seek by requiring possession of certain certificates in job ads.	accession number (bioinformatics);certified information systems security professional;it risk management;information security;job stream;public key certificate;requirement;security management	K. Arbanas;D. Alagic	2014	2014 37th International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO)	10.1109/MIPRO.2014.6859788	information security audit;professional certification;standard of good practice;certified information security manager;cloud computing security;itil security management;certified information systems security professional;information technology management;information security management system;information processes and technology;knowledge management;information security;information security standards;management information systems;enterprise information security architecture;information security management	DB	-80.31686861057163	-27.282760956960605	179940
fd2db8a418e645a03147d1299ee4ab05a803969c	simulation technologies for health sciences curriculum	modelizacion;guide programme etude;multidisciplinaire;universite;educational program;simulation;biology;biologia;problem solving skills reinforcement;modelisation;sante;health science curriculum;programme enseignement;curriculum guides;health science;multidisciplinary;university;multidisciplinar;enseignement;health;educacion;salud;interdisciplinary approach;modeling;universidad;programa ensenanza;simulation technology;biologie;teaching;ensenanza	In this paper we discuss the main elements of an approach to teach simulation discipline in a small university with an interdisciplinary specialization in pharmaceutics, biology, health sciences, and computer science which are combined into a health sciences curriculum. We analyze existing ways to teach simulation courses and identify the specificity and goals within our approach. We propose the content of a simulation course sequence for the mentioned type of university. It includes three units: general simulation methodology, case studies, and building of real simulation models. The proposed new approach reinforces the problem-solving skills of students and their opportunities to conduct applied research. We implemented the proposed approach in a simulation course sequence and we successfully conducted student research projects.	simulation	Anatoly Kurkovsky	2006	Simulation	10.1177/0037549706075541	mathematics education;education;simulation;computer science;engineering;health	HCI	-87.44015753529592	-32.22168014425336	180456
f93bb88b2d6fdf012dcae471c97411f4f9af39cd	systems thinking skills of undergraduate engineering students	reliability;instruments;systems engineering computer aided instruction engineering education further education student experiments;mechanical engineering;seda systems thinking skills undergraduate engineering students sts higher education data collection systems engineering diagnostics activity;systems thinking;engineering students;engineering undergraduates systems thinking systems engineering;systems thinking engineering students instruments knowledge engineering mechanical engineering reliability;knowledge engineering	It is widely acknowledged that systems thinking skills (STS) are critical competencies that enable engineering students to solve problems, communicate, use data, and design components and systems, with greater success. Yet few studies have focused on examining the ST survey of engineering students in higher education. This preliminary study is aimed at investigating the STS of undergraduate engineering students and comparing the effectiveness of the instruments used to assess those skills. The primary research question is: how can we effectively measure the STS of engineering students? Data were collected via a Background questionnaire and a Systems Thinking (ST) questionnaire that 117 engineering students finished, as well as a basic Systems Engineering diagnostics activity (SEDA) that 23 sophomore engineering students completed. Cross-comparisons were conducted between the ST survey and the SEDA to test the validity of the survey questions. Both quantitative and qualitative analyses were employed to assess the degree of STS of the engineering students that participated in the study. The findings from the current study contribute to the knowledge and assessment of undergraduate engineering students' STS.	systems engineering	Shaobo Huang;Karim Heinz Muci-Kuchler;Mark D. Bedillion;Marius D. Ellingsen;Cassandra M. Degen	2015	2015 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2015.7344341	engineering management;systems engineering;engineering;pedagogy	SE	-81.2016237422426	-33.1451752380848	180582
5d4c77316ce2241efde6b95df9c6c69b62caf4cc	is computer technology taught upside down?	e commerce;software engineering;curriculum design;construction;computer technology;market analysis	There has been a continuing fragmentation of traditional computer science into other disciplines such as Multimedia, e-commerce, software engineering etc. In this context the standard computer technology curriculum designed for computer science students is in danger of becoming perceived as increasingly irrelevant --- both by students and employers. The authors review expectations of both students and employers, as determined by market analysis, and present the results of implementing one possible solution to providing an introductory computer technology curriculum suitable not only for students from other disciplines but also as a basis for Computer Science majors.	computer science;e-commerce;fragmentation (computing);relevance;software engineering	Stanislaw P. Maj;David Veal;P. Charlesworth	2000		10.1145/343048.343147	e-commerce;computing;simulation;construction;computer science;software engineering;market analysis;multimedia;information and computer science;computer engineering	Logic	-80.82917692207785	-35.31954188439547	180904
5a11884262f467af5f7dcc5272768755632bb136	geographic information system (gis) and remote sensing (rs): undergraduate academic curriculum and precollege training program	elizabeth city state university;southern university;new technology;agricultural revolution;us department of agriculture;virginia state university;geographic information system;usda capacity building teaching grant;faculty development;training;bethune cookman university;global position system;undergraduate academic curriculum;teaching gis;physics education;site specific management;gps;global positioning system;geographic information systems;power system management;natural resource;remote sensing;geographic information systems remote sensing global positioning system remote monitoring us department of agriculture management training power system management power system modeling educational institutions cities and towns;usda capacity building teaching grant geographic information system remote sensing undergraduate academic curriculum precollege training program global positioning system agricultural revolution precision agricultural site specific management land grant institutions virginia state university delaware state university southern university historically black colleges and universities elizabeth city state university bethune cookman university;training program;cities and towns;agriculture;faculty development teaching gis gps remote sensing at hbcus curricula design;remote monitoring;training agriculture geographic information systems global positioning system physics education remote sensing;precision agriculture;natural science;precollege training program;power system modeling;delaware state university;curricula design;remote sensing at hbcus;management training;land grant institutions;principal investigator;historically black colleges and universities;precision agricultural;conferences;capacity building	Geographic information system (GIS), Global Positioning System (GPS) and remote sensing (RS) are important tools in the emerging agricultural revolution called precision agricultural or site-specific management. GIS and GPS are inherently linked technologies. Together, they form a powerful tool to measure, map, monitor, and model resources and environmental data for both scientific and commercial applications. Many students and faculty of agricultural colleges from minority institutions have little experience with these new technologies. This paper summarizes how GIS, GPS, and Remote Sensing instruction was incorporated into the existing agriculture/natural science curriculums at the Land-Grant Institutions, Virginia State University (VSU), Delaware State University (DSU), Southern University (SU), and Historically Black Colleges and Universities (HBCUs) such as Elizabeth City State University (ECSU) and Bethune-Cookman University (BCU). The curricular materials were developed through a series of faculty development workshops at VSU, ECSU, and DSU. These workshops were coordinated by the Principal Investigator (Shobha Sriharan, senior author of this presentation) of the USDA Capacity Building Teaching Grant. The USDA collaborators, James Everitt and Reginald Fletcher provided training in the use of ArcGIS, GPS and remote sensing techniques. In addition, a summer faculty workshop was hosted at the Remote Sensing Laboratory of the Integrated Farming and Natural Resources Research, Weslaco, Texas, for exposing the faculty members to the applications of GIS and RS in agricultural fields.	arcgis;fletcher's checksum;gis and rs (university of pune);geographic information system;global positioning system;google analytics;ibm balanced configuration unit;map;reed–solomon error correction;schwartzian transform	Shobha Sriharan;James H. Everitt;Reginald S. Fletcher	2008	IGARSS 2008 - 2008 IEEE International Geoscience and Remote Sensing Symposium	10.1109/IGARSS.2008.4779628	global positioning system;geology;geographic information system;physics;remote sensing	Mobile	-80.35115587672888	-28.868153884437977	181034
77be3a873282796fdb3a7a394ddda8a4b596c2b3	eighth workshop on pedagogies and tools for the teaching and learning of object oriented concepts	tool support;teaching and learning;computer science education;object oriented;datavetenskap datalogi;high school student;learning to program;computer science	This report summarises the results of the eighth workshop in a series of workshops on pedagogies and tools for the teaching and learning of object-oriented concepts. The submissions to this year's workshop mainly covered curriculum issues, tool support for teaching, and case studies. Several contributions dealt with teaching object-orientation to non-Majors (junior high-school students, non-Science students). This aspect permeated most of the discussions at the workshop and is also reflected in the conclusions. The workshop gathered 19 participants from nine different countries.		Jürgen Börstler;Isabel Michiels;Annita Fjuk	2004		10.1007/978-3-540-30554-5_4	computer science;teaching and learning center;programming language;object-oriented programming	Robotics	-81.19488798253425	-34.09884126795439	181095
4823f5ad6a2e208e693f5394fc5bcb6b52fdc11a	minding the gap between blocks-based and text-based programming (abstract only)	introductory programming environments;blocks based programming;high school computer science	Graphical blocks-based programming environments, such as Scratch and Snap!, are becoming increasingly popular tools for introducing learners to programming in formal educational settings. However, a growing body of research is finding that students struggle when transitioning from these tools to more conventional, text-based programming languages. To better understand students' difficulties and begin to explore potential solutions to facilitate this transition, a 10-week, quasi-experimental study was conducted with 80 students across three high-school introductory programming classes. Each class spent five weeks working with different version of a blocks-based programming tool, each of which integrated text-based programming in a different way. After working in the introductory environments, students transitioned to Java for the remainder of the study. The goal of this project is to understand the affects of blocks-based programming on students' emerging understandings, document challenges students face in transitioning from blocks-based to text-based programming, and investigate potential ways to bridge these two modalities. To answer these questions, a mixed-method approach was taken that included cognitive interviews with learners, automated collection of student authored programs, and pre/mid/post attitudinal and content assessments.	experiment;graphical user interface;java;programming language;programming tool;scratch (programming language);text-based (computing)	David Weintrop	2015		10.1145/2676723.2693622	simulation;computer science;software engineering;multimedia;programming language;pedagogy	HCI	-82.3129369308365	-37.15334273914525	181461
2af4c0119aaa84171b2a65c41789c3bcbabf4c6c	access denied: improving federal policy on web accessibility		This paper presents initial findings related to the dissertation study by the author. The problem addressed is the observed low levels of compliance with federal policy on Web site accessibility. The study examines the two key federal policies that promote Web site accessibility, using a side-byside policy analysis technique. The Americans with Disabilities Act of 1990 and Section 508 of the Rehabilitation Act of 1973 together have the intent of establishing a legal mandate for equality regarding accessibility. In comparing key aspects of these two policies, the findings indicate several areas were the policies were inconsistent or unclear in providing guidance on attaining accessible Web sites. Recommendations call for the establishment of federal programs that would provide federal Web managers with additional training in Web site accessibility, and provide support for ongoing research towards developing guidance and tools that would serve to promote more accessible Web sites.	recommender system;section 508 amendment to the rehabilitation act of 1973;web accessibility	John L. Brobst	2011		10.1002/meet.2011.14504801307	web accessibility;world wide web;computer security	HCI	-78.79055937004767	-25.687960039857952	181510
47c0af9d0c5df310920d2e3451bdd580f3620ee2	problem-based learning framework for junior software developer: empirical study for computer programming students	pbl framework for junior software developer;self assessment;problem based learning pbl;problem based learning by project based;peer evaluation	Teacher-centered has been traditionally playing the role of basic teaching method for long time. In this way, students only perceive and learn subject’s content from the class and this seems that they only remember the content for taking an exam. On the other hand, when the time comes to solve the real problems, they usually find difficulty to accomplish, due to lacking of practical experience. Basic programming skills are compulsory factor for students in Information Technology (IT) field. Only memorizing content knowledge is not adequate for learning further programming subjects. Students should practice the actual work by themselves for comprehensive understanding. This study represents teaching processes applied problem-based learning technique, both learning directions and communications between lecturer and student. Freshmen of Computer Programming subject, School of IT, Mae Fah Luang University are a target group of this empirical study.	basic programming;computer programming;list of folding@home cores;software developer;teaching method	Patcharaporn Panwong;Kemachart Kemavuthanon	2014	Wireless Personal Communications	10.1007/s11277-014-1728-9	simulation;self-assessment;computer science;teaching method;multimedia;active learning	HCI	-79.94372721643897	-37.33065268380858	181695
b8fe9220cd179c8d0c2c9e60aede6dc9a3a134df	the shades of grey: datenherrschaft in data-driven gamification		Data-driven gamification refers to the use of data collection and data science methods together with gamification practices in order to improve the selected aspects of a service or a product. As new innovations cause new ethical questions, this study surveys possible ethical problems of data-driven gamification. Precisely, we focus on the ethical question of using data collected from a user to modify behaviour of the user. Instead of a clearly bright or dark side of the force, we focus on the ethically grey area where intentions might be ethically justified while the results are not. To discuss this dilemma, we borrow the concept of ‘Datenherrschaft’—mastery over information—and present a philosophical inquiry of five cases: Leisure, Governmental, Healthcare, Educational and Workplace solutions. As a result, this study shows that there are clearly ethical issues, different shades of grey, related to the data-driven gamification and future work is needed in order assess, analyze and answer the presented problems. Copyright © by the paper’s authors. Copying permitted for private and academic purposes. In: M. Meder, A. Rapp, T. Plumbaum, and F. Hopfgartner (eds.): Proceedings of the Data-Driven Gamification Design Workshop, Tampere, Finland, 20-September-2017, published at http://ceur-ws.org	dark side;data science;gcu grey area;gamification	Sami Hyrynsalmi;Kai Kimppa;Jani Koskinen;Jouni Smed;Sonja Hyrynsalmi	2017			data science;political science	HCI	-78.86095784528412	-27.43248262689183	182037
5074e6fb8ac54702b3fbd9f83f170e744022716c	academic productivity correlated with well-being at work	effects of work wellbeing;academic productivity	Do the best Italian academics move abroad? What is the academic productivity of an Italian researcher working in Italy compared with one working abroad? Does academic productivity depend on their well-being at work? The aim of this study is to find explanations for these questions and to demonstrate the relationship that exists between academic productivity and organizational well-being and work, both for researchers who are Italian emigrants abroad (project IRA) and for those who remain in Italy (IRI project).This goal was achieved through two surveys. Where there is an atmosphere of a wellness organization, it creates a productive work environment (vision abroad); conversely, a poor working environment that is associated with an organizational system that is below the average level negatively affects the overall academic productivity (in Italy). We can confirm that working environments with better organizational climate produce more productive academics.	academy;coefficient;color gradient;docs (software);emergence;mike lesser;system integration	Benedetto Torrisi	2012	Scientometrics	10.1007/s11192-012-0709-6	computer science;operations management;management;economic growth;pedagogy	HCI	-78.04993107315798	-26.15585138539701	182067
be609eb27e74d416b1bb38708650ea0ebd847c64	train to work effectively in virtual environments: a framework of virtual team competency	virtual team;virtual environment	Due to increasing industry demand for personnel who work effectively in virtual/distributed teams, MIS students should undergo training to improve their competence in virtual teamwork. This conceptual paper proposes a fourdimension framework for virtual teamwork training: Goal, Process, People and Technology. Purposes for these dimensions are identified, activities that team members need to engage in to achieve the purposes are explained, information technologies that can be used to facilitate these activities are listed, and teaching tips for each dimension are discussed.		Fang Chen;James Sager	2007			simulation;human–computer interaction;knowledge management;instructional simulation	HCI	-77.74744417781605	-34.80854525894531	182184
8b53fcdf322d597b8a9ebc898b58e88ecc8f7cf2	how computers really work: a children's guide	information technology;vlsi design;computer architecture;microprocessor design;elementary school;age groups	"""Current Information Technology teaching at elementary school level concentrates on teaching pupils """"application skills"""". Very little time is spent in teaching pupils the fundamentals of """"how a computer works"""" -- computer architectures.  One source of this lacuna is the lack of suitable support material for teaching the basic concepts of computer architecture to this age group. This paper reports on the investigation, development and evaluation of a pilot computer architecture CD-ROM, aimed at 7--11 year olds."""	cd-rom;computer architecture	Shirley Crossley;Hugh Osborne;William Yurcik	2002		10.1145/1275462.1275482	computer architecture;simulation;computer science;multimedia;very-large-scale integration;information technology;demographic profile	Arch	-79.4332577064324	-34.43784309027999	182403
be05a004dddb35becaa84589cb5e6c5b28460387	remote sensing of ice sheets for underrepresented and handicapped middle school students	remote sensing ice educational institutions educational programs laboratories sea level cities and towns pipelines mirrors filling;science and technology;glaciology;ice sheets;mass balance;sea level rise;educational aids;remote sensing;program organization middle school students nsf science and technology center for the remote sensing of ice sheets industries federal laboratories polar ice sheets ice mass balance ice sheets contribution sea level rise university of kansas elizabeth city state university university of pennsylvania byrd polar center ohio state university haskell indian nation the university of maine science mission educational pipeline cresis education program educational opportunities;sea level;sea level educational aids educational institutions glaciology remote sensing;graduate student	The NSF Science and Technology Center for the Remote Sensing of Ice Sheets (CReSIS) combines the expertise of researchers from 6 universities, several industries, and federal laboratories to study and conduct research to achieve a better understanding of the mass balance of the polar ice sheets. CReSIS is the only NSF Science and Technology Center dedicated to developing techniques and technologies for determining the contribution of ice sheets to sea level rise. CReSIS is led by the University of Kansas with Elizabeth City State University,University of Pennsylvania,The Byrd Polar Center at Ohio State University,Haskell Indian Nation and The University of Maine as partners. In addition to its strong research and science mission,CReSIS education and outreach efforts are designed to impact the entire educational pipeline. The purpose of the CReSIS Education Program is to prepare future generations of scientists and engineers who are capable of assuming responsibility for our future work. These future leaders in polar science and engineering should more closely mirror the diversity in our world. Because our primary goal is to train our own replacements, our first priority is the graduate students who are most likely to begin supporting CReSIS' work in the nearterm. As a logical extension of that notion, our secondary focus is on generating a diverse pool of talented undergraduates to begin filling graduate student roles in Centeractivities. Thirdly, we must continue to provide opportunity, motivation, and focused supplemental content for K-12 students in order to create larger pools of STEM-capable and interested students at the college level. CReSIS engages directly with students in the classroom or through informal educational opportunities, letting them see firsthand what our researchers do and participate in project- based investigations and authentic research. (CReSIS, 2006) This paper details the CReSIS middle school outreach strategy, the program organization, logistics, participant descriptions and outcomes.	haskell;ibm notes;logistics;our world	Linda Hayden;Terrance Hughes;Darnell Johnson	2007	2007 IEEE International Geoscience and Remote Sensing Symposium	10.1109/IGARSS.2007.4423268	meteorology;glaciology;geology;computer science;ice sheet;mass balance;remote sensing;sea level;science, technology and society	HCI	-79.27422917207257	-32.82256800436351	183343
865b51008f19255521bfea80a1cc8e5a4d506505	social network analysis as a tool for understanding student interaction in project-based courses (abstract only)	communication analysis;socio technical congruence;software engineering education;student learning support tools	Many university software engineering/capstone courses attempt to teach students the importance of communication by having them work collaboratively on a large scale project. This can be a sink-or-swim approach. There is a real risk of complete project failure, and while students may learn that coordination is important, it isn't clear they learn how to do it effectively. The CoordinationTracker project uses social network analysis both to study coordination in student project teams, and to develop an automated tool to support students learning this skill. In this talk, I will briefly present some results using social network analysis and socio-technical congruence measures to study communication in a software engineering course, and then will describe the design of the proposed CoordinationTracker tool, which will use socio-technical congruence measures to give feedback to students. For example, as a student works on a file, an automated reminder capability will suggest who the student should be communicating with in order to prevent unwanted effects on components dependent on the file. The system also will have a reporting component which will allow each student, as well as the instructor, to view his or her coordination performance via graphs. Once CoordinationTracker has been implemented, it will be tested on several iterations of the software engineering course in order to determine whether students improve their coordination while using the tool. I am interested in audience feedback on the design of this tool as well as possible involvment with the project.		Bonnie MacKellar	2016		10.1145/2839509.2850520	simulation;computer science;knowledge management;software engineering;pedagogy	SE	-82.82146620399968	-34.59865440846976	183487
28a66c9d05005de0dc67921ffc00e0142ad9b4c6	in search of the emotional design effect in programming		A small number of recent studies have suggested that learning is enhanced when the illustrations in instructional materials are designed to appeal to the learners' emotions through the use of color and the personification of key elements. We sought to replicate this emotional design effect in the context of introductory object-oriented programming (OOP). In this preliminary study, a group of freshmen studied a text on objects which was illustrated using anthropomorphic graphics while a control group had access to abstract graphics. We found no significant difference in the groups' scores on a comprehension post-test, but the experimental group spent substantially less time on the task than the control group. Among those participants who had no prior programming experience, the materials inspired by emotional design were perceived as less intelligible and appealing and led to lower self-reported concentration levels. Although this result does not match the pattern of results from earlier studies, it shows that the choice of illustrations in learning materials matters and calls for more research that addresses the limitations of this preliminary study.	color;experiment;graphics;self-replicating machine	Lassi Haaranen;Petri Ihantola;Juha Sorva;Arto Vihavainen	2015	2015 IEEE/ACM 37th IEEE International Conference on Software Engineering		programming;simulation;computer science;engineering;artificial intelligence;software engineering;multimedia;active learning;programming language;higher education;management	SE	-80.88838075430309	-37.70005734385681	184059
07563e74f935f149f0f784638953806f2f93d235	keeping a distance-education course current through elearning and contextual assessment	academic content;learning community;distance education;online electronic conference distance education course current e learning contextual assessment open university course t396 assessment strategy design academic content organizational context integrated web pages electronic study guide genetic algorithms;web pages;project;learning outcome;conference;computer aided instruction;distance learning;educational courses computer aided instruction distance learning;contextual assessment;artificial intelligent;electronic study guide;frequently asked questions;open university;educational courses;e learning;open university course t396;artificial intelligence;genetic algorithm;genetic algorithms;integrated web pages;organizational context;institutional repository research archive oaister;currency;article;t396 artificial intelligence contextual assessment currency e learning electronic study guide project;assessment strategy design;distance education course current;online electronic conference	Distance education is most economical when delivered to large groups of students over several years. The Open University course T396: Artificial Intelligence for Technology makes use of electronic delivery and a carefully designed assessment strategy to address the challenge of keeping the course up-to-date while remaining economically viable. Three aspects of currency are considered: academic content, organizational context, and breaking news. An electronic study guide permits new forms of interactivity and presentational styles, while allowing the course team the flexibility to maintain the academic content of the course. The organizational context of the course is maintained through integrated Web pages. An electronic conference provides news, such as course announcements, correction of errata, data files for assignments, and lists of frequently asked questions. It also enables students to participate in an extended learning community. Continuous assessment and the final project are designed to assess the students, to allow practice and experimentation, and to provide a vehicle for constructive feedback. The assessment strategy aims to maintain currency by introducing the latest contexts in which artificial intelligence is used. Detailed marking guides ensure consistent marking and demonstrable achievement of the intended learning outcomes. In a survey at the end of the course, a clear majority of students favored the use of the electronic study guide, particularly for teaching genetic algorithms, where the interactivity enabled difficult concepts to be demonstrated in a way that would not be possible on the printed page. The same survey also gave an overwhelming endorsement to the assessment strategy and the online electronic conference	artificial intelligence;genetic algorithm;interactivity;item unique identification;printing;web page	Adrian A. Hopgood;Anthony J. Hirst	2007	IEEE Transactions on Education	10.1109/TE.2006.888905	distance education;genetic algorithm;computer science;engineering;knowledge management;electrical engineering;artificial intelligence;multimedia;world wide web	HCI	-77.91509439281594	-37.78717368062234	184534
69516b463ebf1c9b715dfc77917f9bd0c7558688	computing curricula overview project	computer engineering;information systems;information technology;computer science curriculum;software engineering;curriculum;computer science;information system;work in progress	This poster describes a work in progress regarding the Overview Computing Project formerly known as Computing Curricula 2004 (CC2004). It will demonstrate the status of this work and highlight its salient features. These features include the scope of the computing areas of computer engineering, computer science, information systems, information technology, and software engineering. It will illustrate their commonalities and differences, and show some of the outcome expectancies of the graduates from these programs.	computer engineering;computer science;information system;software engineering	John Impagliazzo	2005		10.1145/1067445.1067546	computing;information engineering;information science;computer science;knowledge management;human-centered computing;informatics engineering;software engineering;management information systems;information technology;information system;information and computer science;computer engineering	SE	-80.73363174995423	-30.402731602210423	184840
f1aee1f3ff62163bcf27daf207e3ebbd9486882f	industry involvement in undergraduate curricula: reinforcing learning by applying the principles	reinforcement learning;information technology;new south wales;is education	This paper describes industry participation in education through its involvement in the Business Information Technology programme at the University of New South Wales. Although primarily aimed at providing details of the practices followed and the experiences gained, the paper commences with a comprehensive review of the literature on IS education, particularly co-operative education. Industry is involved in all aspects of the programme, but makes a major contribution through provision of industrial training and a colloquium series. There is also interaction with students through leadership courses, recruitment evenings, industry visits and social activities.		Geoffrey N. Dick;Stuart F. Jones	1995		10.1007/3-540-58951-1_92	engineering management;engineering;knowledge management;pedagogy	Vision	-78.96843558582022	-32.02800053732887	184981
d05b32f2f8a8aea897df5864e48cefbc8c2db7a0	influence of algorithmic abstraction and mathematical knowledge on rates of dropout from computing degree courses		This paper presents a study of rates of dropout from Brazilian degree courses, based on data provided by the National Institute for Educational Studies and Research “Anísio Teixeira” (INEP) and a case study carried out at the University of Brasilia (UnB). Dropout was calculated by tracking the status of each student between 2010 and 2014 in the eight major areas according to the classification of the Organisation for Economic Co-operation and Development (OECD), for the major area of Science, Mathematics, and Computing, and for the area of Computing. Data were analyzed in order to check for potential evidence regarding the influence on dropout of factors such as algorithmic abstraction, number of applicants per place, or the gender of students. A survey was also performed using online questionnaires for circumvented students from the courses of Bachelor of Computer Science, Degree in Computing, and Computer Engineering between 2005 and 2015. This survey revealed the influence on dropout of several factors and particularly institutional and vocational factors; it is clear that difficulties in algorithmic abstraction and mathematical knowledge influence rates of dropout from computing courses.	bachelor of computer science;coefficient;computer engineering;dropout (neural networks);signature block	Raphael Magalhães Hoed;Marcelo Ladeira;Leticia Lopes Leite	2018	Journal of the Brazilian Computer Society	10.1186/s13173-018-0074-2	data mining;data science;computer-assisted web interviewing;data structure;bachelor;computer science;vocational education;abstraction	DB	-80.2214961011278	-31.04274509854959	185193
ad1a7e6d9f92a35d190a005a368617eede70af5a	an action research study towards the use of cloud computing scenarios in undergraduate computer science courses		Cloud computing has been a successful paradigm in its goal to provide remote computing resources in a competitive and scalable way when compared to traditional computing scenarios. Companies have a growing interest in migrating and using cloud services. However, the literature has reported difficulties and challenges faced by companies while migrating their assets to the cloud. One of the possible reasons for this is the difficulty in the identification of qualified professionals to support companies to plan, perform and monitor the migration of their legacy systems to the cloud. This paper presents an action-research study analyzing the inclusion of cloud computing scenarios in the System Analysis and Design and Operating Systems undergraduate courses at Salvador University (UNIFACS). The results of the action-research study provided initial evidence that cloud computing resources integrated to the contents of the aforementioned courses can contribute to motivate and engage students in activities. In addition, the knowledge and experience gained by these students can improve their qualification to facilitate access to the labor market.	cloud computing;computer science;legacy system;programming paradigm;scalability;system analysis	Heleno Cardoso da Silva Filho;Glauco de Figueiredo Carneiro	2018		10.5220/0006644800150025	systems engineering;computer science;action research;cloud computing	HPC	-82.30809817959559	-32.33702887925561	185292
bb3732bb2f6345440d300962f621c636ee0c9243	opendsa: a creative commons active-ebook (abstract only)	instructional technology;instructional technologies;data structures;data structure;assessment	OpenDSA is an open-source, community-based effort to create a complete active-eBook for Data Structures and Algorithms courses at the undergraduate level. Active-eBooks go beyond hypertextbooks, being a close integration of text and images with interactive visualizations and assessment activities. They solve two major problems: The difficulty of conveying dynamic process with static media, and the need by students to have many practice exercises and immediate feedback. Development in HTML5/JavaScript allows maximum portability. OpenDSA will proceed with broad participation from the algorithm visualization community. Focusing on reuse of materials, instructors can pick and choose content and modify as desired.	algorithm;e-book;html5;open-source software;software portability	Eric Fouh;Maoyuan Sun;Clifford A. Shaffer	2012		10.1145/2157136.2157390	simulation;data structure;human–computer interaction;computer science;software engineering;multimedia;programming language;educational assessment;pedagogy	HCI	-82.66264741272222	-37.9002506576094	185336
ba2b5f755460deb25d529bb30b9b966d87a83d7a	ersp: a structured cs research program for early-college students	diversity;undergraduate research	Research experiences for undergraduates (REUs) have many positive outcomes on students' perception of and retention in Computer Science (CS). Yet nearly all REUs are aimed at late-college students, well into a CS program. We present the Early Research Scholars Program (ERSP), a 4 quarter program designed to engage early-college (first or second year) CS students in high-quality research experiences in active research groups at a large research university. ERSP's structured course-supported group-apprentice model and its unique dual advising structure make it possible to vastly increase number of early-career CS students who participate in high-quality research experiences with little additional burden on individual faculty mentors. ERSP's focus on community building and support makes it particularly appropriate for students from groups who are traditionally underrepresented in CS. This paper reports the structure of the program and observations and learning thus-far with ERSP, with the goal of enabling others to implement this program at other large research-focused universities.	computer science;experience	Michael Barrow;Shelby Thomas;Christine Alvarado	2016		10.1145/2899415.2899436	computer science;pedagogy	HCI	-79.04042457093482	-33.84949105334024	185351
49c6e80ee6ce491a6b11914ba4b548d8f2c72ff9	university and primary schools cooperation for small robots programming	community of practice;primary school;teaching programming;programming mini languages;teaching and learning;cross disciplinary activities;inquiry based teaching and learning techniques;pupil centered teaching;program development;language design;robot programming	"""In July 2007, in the Italian northwest region named Piedmont, a number of teachers and school headmasters created a School-Net for k-12 """"Educational use of robotics"""". The School-Net aims at promoting Papert's constructionism in a cooperative environment and at setting up a model of small robots programming activities integrated in standard curricula covered in k-12 school years. The project is based on the cooperation between the School-Net and the Computer Science Department of the Turin University for providing technical competences with mini-languages, designing and implementing program development environments pupils oriented and maintaining a community of practice supporting teachers during their activities with robots. Here we concentrate on primary school activities where educational aspects concerned by using small robots fill a long list with, of course, mathematics but also education to affectivity, creativity, communication, geography and others. Experiences from the project are here described."""	robot	G. Barbara Demo;Simonetta Siega;M. Stella De Michele	2009		10.1007/978-3-642-04754-1_25	simulation;knowledge management;artificial intelligence;pedagogy	Robotics	-79.18677651038251	-32.91519329978994	185610
35a435a69d3cc755cc8dea6797ca6cebe87d4acc	how do facebookers use friendlists	grouping;statistical analysis data analysis data privacy social networking online;policy;social network;data analysis;statistical analysis;data privacy;statistics facebook friend lists friend management policy patterns real facebook profile information photo privacy policies mechanical turk data analysis customized friend lists edge ratio values;social networking online;social network policy access control grouping privacy;access control;privacy measurement indexes facebook educational institutions data privacy access control;privacy	Facebook friend lists are used to classify friends into groups and assist users in controlling access to their information. In this paper, we study the effectiveness of Facebook friend lists from two aspects: Friend Management and Policy Patterns by examining how users build friend lists and to what extent they use them in their policy templates. We have collected real Facebook profile information and photo privacy policies of 222 participants, through their consent in our Facebook survey application posted on Mechanical Turk. Our data analysis shows that users' customized friend lists are less frequently created and have fewer overlaps as compared to Facebook created friend lists. Also, users do not place all of their friends into lists. Moreover, friends in more than one friend lists have higher values of node betweenness and outgoing to incoming edge ratio values among all the friends of a particular user. Last but not the least, friend list and user based exceptions are less frequently used in policies as compared to allowing all friends, friends of friends and everyone to view photos.	amazon mechanical turk;betweenness;contact list;exception handling;facebook messenger;organizing (structure);privacy policy;the turk	Yousra Javed;Mohamed Shehab	2012	2012 IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining	10.1109/ASONAM.2012.63	information privacy;computer science;access control;data mining;internet privacy;data analysis;privacy;world wide web;computer security;social network	Metrics	-81.15051268772086	-24.095794835127602	185746
63575e53a217bbea395df9c8a59269bb7e26adfd	trustworthiness: self-assessment of an institutional repository against iso 16363-2012	iso 16363 2012;trustworthiness;informacion documentacion;digital preservation;research repositories;grupo a;ciencias sociales;audit	Today, almost every document we create and the output from almost every research-related project, is a digital object. Not everything has to be kept forever, but materials with scholarly or historical value should be retained for future generations. Preserving digital objects is more challenging than preserving items on paper. Hardware becomes obsolete, new software replaces old, storage media degrades. In recent years, there has been significant progress made to develop tools and standards to preserve digital media, particularly in the context of institutional repositories. The most widely accepted standard thus far is the Trustworthy Repositories Audit and Certification: Criteria and Checklist (TRAC), which evolved into ISO 16363-2012. Deakin University Library undertook a self-assessment against the ISO 16363 criteria. This experience culminated in the current report, which provides an appraisal of ISO 16363, the assessment process, and advice for others considering embarking on a similar venture.	trust (emotion)	Bernadette Houghton	2015	D-Lib Magazine	10.1045/march2015-houghton	trustworthiness;knowledge management;audit;world wide web	ML	-77.87512269627827	-27.603395945133578	186051
b9790d4357a26bdc92a174627e4bf24bcb676de8	evolution of a cybersecurity curriculum	ia;information assurance	This paper is a case study on the development and subsequent modifications to an Information Security/Cybersecurity academic program at a small, four year, Liberal Arts College. The courses and content are described as well as changes to them over an seven year period, responding to changes in this field. The curriculum is compared to the NICE framework.	computer security;cyber security standards;information security;nice (programming language)	Jim Hoag	2013		10.1145/2528908.2528925	simulation;computer science;computer security	HCI	-80.68537253143427	-29.876972774817837	186211
e37a67598fbb04d7e9c78a8d7a1c7ddef1e6f999	an experimental method for the active learning of greedy algorithms	mathematics;college instruction;active learning;experimental teaching;computer uses in education;college students;greedy algorithms;visualization;computer science education;misconceptions;instructional effectiveness;instructional innovation;usability;action research;teaching methods	Greedy algorithms constitute an apparently simple algorithm design technique, but its learning goals are not simple to achieve. We present a didactic method aimed at promoting active learning of greedy algorithms. The method is focused on the concept of selection function, and is based on explicit learning goals. It mainly consists of an experimental method and the interactive system, GreedEx, that supports it. We also present our experience of five years using the didactic method and the evaluations we conducted to refine it, which are of two kinds: usability evaluations of GreedEx and analysis of students’ reports. Usability evaluations revealed a number of opportunities of improvement for GreedEx, and the analysis of students’ reports showed a number of misconceptions. We made use of these findings in several ways, mainly: improving GreedEx, elaborating lecture notes that address students’ misconceptions, and adapting the class and lab sessions and materials. As a consequence of these actions, our didactic method currently satisfies its initial goals. The article has two main contributions. First, the didactic method itself can be valuable for computer science educators in their teaching of algorithms. Secondly, the refinement process we have carried out, which was a multifaceted, medium-term action research, can be of interest to researchers of technology-supported computing education, since it illustrates how the didactic method was integrated into our educational practice.	algorithm design;computer science;experiment;greedy algorithm;interactivity;mechatronics;refinement (computing);usability	J. Ángel Velázquez-Iturbide	2013	TOCE	10.1145/2534972	mathematics education;computer science;multimedia;pedagogy	HCI	-79.61250866527358	-36.768840600151	186729
c0afae89f6978ad8797b703e3500b47df465616f	students seen flocking in programming assignments	high school cs1;problem analysis;invariant properties;regularities;artificial life;novice programmer	"""Programming assignments are typically constructed with great precision, in order to ensure that students traverse the important content areas in the unit. This paper makes a case for an """"ill-defined"""", large programming task by presenting experiences with an assignment based on flocking behavior. Providing students meet the criteria that their artificial life forms clearly exhibit flocking behavior, they become responsible for defining the exact nature of the task. The success of this approach is partly measured by the ability of novice programmers who fully engage with the course material to produce spectacular results. The paper includes a discussion of the philosophical requirements for adopting such an approach within a programming unit."""	artificial life;experience;flocking (behavior);programmer;requirement;traverse	Tony Greening	2000		10.1145/343048.343091	simulation;computer science;artificial intelligence;artificial life	HCI	-80.37596801140211	-36.56436150893503	186771
27319ff5ef2db151a8e83889860cebc8b7404d86	exploring academic knowledge creation models for graduate researches	management education knowledge management;knowledge management;knowledge gaps;knowledge strategies;knowledge creation;spirals biological system modeling organizations proposals information science knowledge management medical services;knowledge science academic knowledge creation models graduate researches knowledge management theories business administration young graduate students;research process;knowledge strategies knowledge management knowledge creation research process knowledge gaps	Knowledge management theories and tools have been developed rapidly in the field of business administration. However, since their application in the academic field is still very limited, this paper focuses on knowledge creation in the academic field. It is usually difficult for young graduate students to imagine their research process, which proceeds from a small idea to a research paper. Wierzbicki and Nakamori [1] introduced three knowledge creation models for three different academic fields, which are normative or hypothetical models to be verified in applications. This paper modified these models by interviewing graduate students and their supervisors, who are doing research in four fields in knowledge science. This study made clear the knowledge gaps between graduate students and their supervisors.	knowledge engineering;knowledge management;theory	J. Sun;Yoshiteru Nakamori;Jing Tian;Jianwen Xiang	2016	2016 IEEE International Conference on Software Quality, Reliability and Security Companion (QRS-C)	10.1109/QRS-C.2016.31	knowledge survey;organizational learning;knowledge integration;knowledge economy;knowledge management;body of knowledge;mathematical knowledge management;political science;knowledge engineering;management science;procedural knowledge;personal knowledge management;knowledge value chain;domain knowledge;pedagogy	SE	-83.53462883317542	-31.445001112020904	186923
644de8dc195400cb8f03d58496917ae0ff0bcfa9	a decision support system for rule discovery in social networks	kin relation;reseau social;relation conjugale;social interaction;relation parent enfant;interaction sociale;programming environment;relation familiale;prise de decision;intelligence artificielle;parent child relationship;marital relation;support system;social network;decision support system;family relation;regulation;rule discovery;artificial intelligence;informatique;computer science;relation de parente	Nicholas V. Findler* , Sudheer Dhulipalla** Department of Computer Science and the Artificial Intelligence Lab Arizona State University, Tempe, AZ 85287-5406, USA ________________________________________________________________________________ Abstract Automatic rule discovery of membership in and relations between classes or categories, from given examples and counter-examples, is an important objective in many areas of computing. We have established a fairly general purpose programming environment for inductive rule discovery. It can be used, for example, as a high-level decision support system for social and cultural anthropologists. The program hypothesizes and then asserts rules that govern (permit or prohibit) social interactions and relations in human societies. We also describe the domain-independent facilities of the decision support system offered to the user and how the program works.	artificial intelligence;assignment zero;association rule learning;computer science;decision support system;high- and low-level;integrated development environment;interaction;social network	Nicholas V. Findler;Sudheer Dhulipalla	1999	Social Networks	10.1016/S0378-8733(99)00008-8	psychology;regulation;social science;decision support system;artificial intelligence;decision rule;sociology;communication;social psychology;social network	AI	-88.129794061133	-27.80625407878662	187213
5f66a57bec1b1c4f6feb101693a4e644c8a11cdf	national survey of japanese universities on computing education: analysis of informatics in general education		We conducted the first nationwide survey of computing education at Japanese universities in 2016. In this paper, we report the survey result of Informatics in General education for all students at a university or a faculty. The survey covers various aspects including program organization, quality and quantity of educational achievement, students, teaching staff and computing environment. 739 answers are collected from 530 universities in response to the survey. The answers cover 70.5% of the Japanese universities, and approximately 81.6% of the 649 universities that responded to the survey. The information processing society of Japan (IPSJ) and the Japanese Ministry of Education (MEXT) will utilize the survey result to develop a new computing curriculum standard and national policy of computing education respectively.	informatics;information processing	Naoko Takahashi;Tetsuro Kakeshita	2017	2017 Twelfth International Conference on Digital Information Management (ICDIM)	10.1109/ICDIM.2017.8244672	engineering management;data mining;christian ministry;curriculum;national policy;information processing;computer science;informatics;information science	HPC	-78.42427826470569	-30.748479006108766	187273
dfc8f3ad6fdc84912da4b8e19f042596b99dde32	agile methodologies applied in teaching-learning process in engineering: a case of study		To espouse the principles, values and agile practices in the academic scope, it is proposed to use the Scrum methodology as a reference model for teamwork, where the results are obtained incrementally, established short periods of works referenced by a pattern. The prioritized requirements list are given by applicant (teacher), who at the beginning of the academic period (6 months) together with the team (students and teachers) decide the possible points of the list to make in that lapse of time. The same team determines the tasks necessary your assignment. Once the academic period is over the results are presented and who requested them will validate the compliance with the requirements. Then, the team reflects together about the work done highlighting positive and negative aspects, improvement proposal and if necessary make a new interaction. This is repeated until the result meets the expectations of the applicant, who is in constant communication with the team being able to introduce changes in both the requirements and the priority of these.	agile software development	Fernanda Soto;Manuel Sucunuta;Germania Rodriguez;Samanta Cueva;Danilo Jaramillo;Patricio Abad	2018		10.1109/EDUCON.2018.8363366	management science;knowledge management;engineering;agile software development;reference model;teamwork;scrum	SE	-82.01178181095392	-29.658632702959775	187432
494db644b936db56301e62a2d5a7d5ec87d4f90e	structure of moves in research article abstracts in applied linguistics	move analysis;genre analysis;abstracts;eap	An abstract summarizes the accompanying article in order to promote it. While many move-analysis studies of abstracts in applied linguistics (AL) have used similar coding frameworks and demonstrated similar rhetorical organizations, their findings have not yet been aggregated to show the overall picture. The present study aimed to both examine move structures in AL abstracts and compare the results with previous studies both synchronically and diachronically. Fifty abstracts were collected from articles published in the journal English for Specific Purposes (ESP) between 2011 and 2013. Sentences were coded using a five-move scheme adapted from previous studies. Combining the results from previous research and the present study showed that most AL abstracts give information on the purpose, methodology, and findings of the associated article, while about half of the articles omit introduction of the topic and discussion of the findings. It was also found that authors frequently violate the move sequence expected by current schemes. These findings consistent with previous research suggest that future researchers informed by move analyses should explore the connection between the findings of move analyses and teaching materials for academic writing.	artificial life;closing (morphology);compiler;computer program;information;iteration;software developer	Seden Can;Erkan Karabacak;Jingjing Qin	2016	Publications	10.3390/publications4030023	library science;computer science;literature	NLP	-82.20639510002287	-28.489686593386242	187745
05b645aa9a593941814ad61b5471ff03431d5c03	"""is a mac """"pc"""" in engineering?"""	educational technology mac pc engineering departmental policy first year students;computers;technical compatibility mac pc mac using students windows based personal computers restrictive departmental policies windows based pc systems mac users tablet pc university engineering community macintosh computers apple technical support pc dominated campus engineering students thematic analysis salient themes engineering curriculum windows pc dominated department first year engineering program;interviews;engineering students;communities;engineering education apple computers educational computing educational courses engineering computing;computers educational institutions engineering students interviews operating systems communities;operating systems	"""This study explores the opinions and experiences of five Mac-using students in a first-year engineering program where Windows-based personal computers (PCs) are requisite. These students have circumvented the restrictive departmental policies which solely support Windows-based PC systems and which (as of this writing) clearly identify the lack of technical support for Mac users. Tablet PCs were the only machines that fully met departmental requirements for several years, and were the """"machine of choice"""" in the university's engineering community. This requirement has been unwavering until 2012 when a change was made: the first-year engineering program modified the computer specifications to allow Macintosh computers, with certain stated limitations and precautions. Although still highly discouraged and with no provision for Apple technical support, the change has allowed a greater range of options for incoming cohorts. Whether the use of a Mac in this engineering program is politically correct (PC) or not remains to be discovered; this study intends to shed light on this subject. Building on the work of Firmin, which investigated the lived experiences of Mac users on a PC-dominated campus, this work is unique in its focus on engineering students. The present study poses two questions: 1) How does the level of support for Mac users on a PC-dominated campus impact their experience in the first-year engineering program? And 2) How does technical compatibility affect first year students' day-to-day actions within the engineering program? Data was collected via semi-structured student interviews, and coded and analyzed using thematic analysis. Four salient themes emerged from the data: superiority, advocacy, autonomy, and survival. This exploratory study gives a voice to these students who strive to advocate their chosen systems and survive a rigorous engineering curriculum within a Windows PC-dominated department."""	autonomy;experience;microsoft windows;personal computer;requirement;semiconductor industry;tablet computer;technical support	Cory Brozina;Ben Lutz;Suzanne Nicewonder;Courtney Smith	2014	2014 IEEE Frontiers in Education Conference (FIE) Proceedings	10.1109/FIE.2014.7044280	simulation;human–computer interaction;engineering;multimedia	SE	-77.61599707305112	-29.778871666804555	188435
4e29b9b18cd95dfa9ea58364d2c34f9ec441e32d	yet, more web exercises for learning c++	cs1;distance learning;language acquisition;computer science education;pedagogical approaches;development environment;object orientation;exercise test;generic programming	This paper describes a set of author developed interactive web exercises and a development environment designed to facilitate language acquisition in a beginning course in C++. The exercises test the students' understanding of several C++ language constructs as well as general programming concepts such as scope of variables. The environment allows students to write and test sections of code in a instructor controlled setting. Together the exercises and environment can be used to enhance computer science education for both traditional and distance learning students. The paradigm of generalization and automation of standard exercises can be extended to facilitate web education in other courses.	c++;computer science;programming paradigm	Bruce S. Elenbogen;Bruce R. Maxim;Chris McDonald	2000		10.1145/330908.331872	language acquisition;distance education;simulation;computer science;knowledge management;development environment;multimedia;programming language;generic programming;object-orientation	ML	-82.5746243643143	-37.751685133747415	188628
c7caabcf40f1a99b69c86036bdf6d4cef1c18944	yazılım kalite maliyetleri üzerine bir çalışma - farklı sektörlerden proje incelemeleri		Graduate and PhD students of METU Informatics Institute have calculated cost of quality of real projects in their own organization as an assignment and analyzed their findings. This study examines the results of these analyses and this type of assignments on industry and on Professional viewpoints of the students who are also participants in the industry. Anahtar kelimeler: Kalite maliyeti, yazılım kalitesi, süreç iyileştirme	community informatics	Murat Salmanoglu;Banu Deniz Yanik;Feyza Nur Demir;Zeynep Gürel;Onur Demirörs	2015			engineering	HCI	-78.04685146195229	-31.460115762246232	189002
b9a81470b7ef2e119f86c84c9873ece7515750b7	the transition of the motivation of the students in the art faculty to learn programming	analytical models;art design faculty;art;student motivation;arcs motivation model programming student motivation art design faculty;art programming profession educational programs learning systems psychology information science programming environments;learning systems;computer science education;arcs model;programming profession;educational courses;motivation;correlation;programming art computer science education educational courses;arcs motivation model;programming;arcs model motivation programming	In this research, we have analyzed the transition of the motivation of the students in the art design faculty to learn programming using the questionnaire based on the ARCS motivation model. As a result, we have found that the change of the motivation of the students had been more prevalent in the first half of the course than the second half of the course.	arcs (computing)	Yasuhiro Takemura;Hideo Nagumo;Hidekuni Tsukamoto;Ken-ichi Matsumoto	2008	2008 Eighth IEEE International Conference on Advanced Learning Technologies	10.1109/ICALT.2008.244	programming;simulation;motivation;computer science;goal theory;management;correlation;pedagogy	Visualization	-83.35529333542468	-36.779660371616956	189005
63c921390d41d85654576ebbc47868bc960dcebc	mining library and university data to understand library use patterns	data collection;collections management;user studies;data analysis;data handling;academic libraries	Purpose – Library data are often hard to analyze because these data come from unconnected sources, and the data sets can be very large. Furthermore, the desire to protect user privacy has prevented the retention of data that could be used to correlate library data to non-library data. The research team used data mining to determine library use patterns and to determine whether library use correlated to students’ grade point average. Design/methodology/approach – A research team collected and analyzed data from the libraries, registrar and human resources. All data sets were uploaded into a single, secure data warehouse, allowing them to be analyzed and correlated. Findings – The analysis revealed patterns of library use by academic department, patterns of book use over 20 years and correlations between library use and grade point average. Research limitations/implications – Analysis of more narrowly defined user populations and collections will help develop targeted outreach efforts and manage the print collections. The data used are from one university; therefore, similar research is needed at other institutions to determine whether these findings are generalizable. Practical implications – The unexpected use of the central library by those affiliated with law resulted in cross-education of law and central library staff. Management of the print collections and user outreach efforts will reflect more nuanced selection of subject areas and departments. Originality/value – A model is suggested for campus partnerships that enables data mining of sensitive library and campus information.	data mining;library (computing);population	John Renaud;Scott Britton;Dingding Wang;Mitsunori Ogihara	2015	The Electronic Library	10.1108/EL-07-2013-0136	computer science;data science;group method of data handling;data mining;database;data analysis;world wide web;information retrieval;collections management;statistics;data collection	HCI	-80.99736221921268	-24.079415389077678	189194
16fc303448b831a03507cac108f1f33b38ab4a10	learning and education: a continuing frontier for ai	continuing education artificial intelligence humans machine learning educational programs cognition learning systems computer science education educational technology educational institutions;intelligence artificielle;artificial intelligent;purposes;machine learning;artificial intelligence ai learning;cognition;artificial intelligence;ai learning;inteligencia artificial;educacion;purposes machine learning human learning cognition education software design;learning artificial intelligence;human learning;software design;basic research	Learning is the most important part of artificial intelligence. A basic research effort can explore how to build software that can learn and be educated very broadly	artificial intelligence	Oliver G. Selfridge	2006	IEEE Intelligent Systems	10.1109/MIS.2006.54	cognition;computer science;knowledge management;artificial intelligence;software design;machine learning	AI	-81.797410523454	-30.863072001345525	189215
7179b9452b7f0dbdd9a2088a6036de75fc9bfecc	ap cs principles and the beauty and joy of computing curriculum (abstract only)	share detail;nsf-funded summer;bjc curriculum;ap cs principle;introductory computer science curriculum;high school junior;ap cs principles course;high school level;college board;university non-majors;cs10k project	The Beauty and Joy of Computing (BJC) is an introductory computer science curriculum developed at UC Berkeley (and adapted at the University of North Carolina, Charlotte), intended for high school juniors through university non-majors. It was used in two of the five initial pilot programs for the AP CS Principles course being developed by the College Board and the National Science Foundation. Our overall goal is to support the CS10K project by preparing instructors to teach the AP CS Principles course through the BJC curriculum. In this workshop, we will share our experiences as instructors of the course at the university and high school level, provide a glimpse into a typical week of the course, and share details of NSF-funded summer professional development opportunities.	ap computer science principles;bsd;experience;ibm notes;uc browser	Daniel D. Garcia;Brian Harvey;Tiffany Barnes;Nathaniel Titterton;Daniel Armendariz;Luke Segars;Eugene Lemon;Sean Morris;Josh Paley	2013		10.1145/2445196.2445511	professional development;recursion;simulation;computer science;software engineering;visual programming language;programming language;higher-order function;pedagogy;advanced placement	HPC	-80.46729494816236	-34.11126312872502	189432
46459e4a93b7644207aa8541d2e5aa5bae579b27	application of design research methodology to a contex-sensitive study in engineering education	electronic learning;distributed bragg reflectors context engineering education companies educational institutions electronic learning;research and development computer aided instruction design engineering engineering education;companies;engineering education;distributed bragg reflectors;educational design research engineering education research research methodologies design based research;context sensitive study design research methodology engineering education instructional design method small scale sampling phenomenography research statistical generalization;context	In this paper, we describe and analyze how design research methodology has been implemented in one research project in engineering education. In a first part, we describe the research project in engineering education, we explain why we decided to apply the design-based methodology and how we did it. In a second part, we consider the methodology itself, and in the particular context of the study. First, we analyze the interactions between the instructors, the teachers, the students, the researcher, the designer and the object of design. We argue that a theoretical framework is necessary to inform the logic of the study. Second, we discuss how design research can be used to generate instructional design methods that are sensitive to the context. Third, whereas design methodology is dealing with purposive and small scale sampling, we consider phenomenography research to be an appropriate continuation of the design research, rather than statistical generalization.	continuation;interaction;sampling (signal processing)	Remy Crepon	2014	2014 IEEE Frontiers in Education Conference (FIE) Proceedings	10.1109/FIE.2014.7044254	design research;systems engineering;engineering;knowledge management;learning sciences;management science;design education;design brief	EDA	-79.66938667202412	-36.444999826163404	189448
e2d89a2928a3cb3c07718f3025ce8e681e4415c5	ten quick tips for teaching programming		Research from educational psychology suggests that teaching and learning are subject-specific activities [1]: learning programming has a different set of challenges and techniques than learning physics or learning to read and write. Computing is a younger discipline than mathematics, physics, or biology, and while there have been correspondingly fewer studies of how best to teach it, there is a growing body of evidence about what works and what doesn’t. This paper presents 10 quick tips that should be the foundation of any teaching of programming, whether formal or informal. These tips will be useful to anyone teaching programming at any level and to any audience. A larger list aimed primarily at K–12 audiences can be found at [2].	large;psychology, educational	Neil Brown;Greg Wilson	2018		10.1371/journal.pcbi.1006023	bioinformatics;computational biology;language acquisition;computer science	AI	-79.76691199110414	-35.580617791065464	189664
43c610ea98b611c70f1225bf4d6cf1d318aac9de	s.u.c.c.e.s.s.f.u.l.: a framework for designing discrete event simulation courses	computer science education;discrete event simulation;educational courses;des teaching;discrete event simulation courses;holistic design;simulation packages	Teaching a discrete event simulation (DES) course to undergraduates represents a challenge for instructors, particularly for the novice ones. There are many issues to address in designing the course, among which are the scope of the course, focus area of the course, technical depth of the course, and the role of a simulation packages in the course. How to introduce simulation has been a fundamental educational issue for a while. New teaching paradigms and the explosion tools available offers opportunities to design a course that is holistic. This paper presents a framework that enables a holistic design of a DES course such that students acquire a strong knowledge base regarding the use of DES in the real world. This paper also includes an example of how to use this framework.	holism;knowledge base;simulation;while	Heriberto Garcia;Martha A. Centeno	2009	Proceedings of the 2009 Winter Simulation Conference (WSC)		data modeling;knowledge base;simulation;computer science;systems engineering;discrete event simulation;mathematical model;computational model	EDA	-85.00355014570239	-34.6666579467544	189707
15ad4d902be6dc108b028864dd70f372ee48de06	programming studio: a course for improving programming skills in undergraduates	course design;undergraduate education;teaching programming;practice;programming	Even after taking numerous programming courses, many students have poor programming skills. This is a problem not only in their post-graduation employment, but even in the higher-level Computer Science courses, where large programs are routinely assigned. Yet, teaching programming skills is expensive; like teaching writing, it can only be accomplished by a repeated cycle of writing, getting informed feedback, and rewriting. In this paper, we describe a computer science course designed around the concept of a studio course like those used in art and architecture. Its key elements are practice, public presentation, and review by peers in a small group. We discuss our experience in teaching the course for two years. We believe this course can be replicated and taught, at reasonable cost, even in large CS departments.	computer science;replication (computing);rewriting	Michael Woodley;Samuel N. Kamin	2007		10.1145/1227310.1227490	programming;simulation;computer science;multimedia	PL	-80.51015524386342	-35.60852063282981	190178
4eb5fb3306746932c559e52680e084adad929753	the introduction of a computer-based tool for solving mathematical problems analytically to an undergraduate course	information system design	This paper suggests why it is appropriate to now introduce the use of a computer-based tool for solving mathematical problems analytically into a BSc degree course in Information Systems Design. Students enter this course from different mathematical backgrounds and need to be able to use mathematics itself, as a tool, to solve other problems.	information system;systems design	P. D. Pearce	1984	ACM Comm. Computer Algebra	10.1145/1089355.1089365	simulation;applied mathematics;computer science;mathematics	Theory	-82.46676809757338	-30.849080232134312	191081
dd82beb659f479cd06b4da2e98187f1b555ec396	instructional experiences with modeling and analysis using the i* framework		First year professional Master’s students at the Faculty of Information, University of Toronto are taught how to analyze problem domains using i* modeling in the final segment of the introductory course on “Systems Analysis and Process Innovation”. Over the past several years, the course instructors and teaching assistants have had the opportunity to observe and interact with the course students on the learning and use of the i* framework for modeling and analysis which makes it possible to make general observations regarding student experiences with the i* framework in an instructional setting. These observations are broad ranging and cover areas such as pedagogical design, conceptual understanding and proficiency with the i* framework, domain modeling and analysis, and tools for i* modeling.	problem domain	Zia Babar;Soroosh Nalchigar;Lysanne Lessard;Jennifer Horkoff;Eric Kai-Hsiang Yu	2015			management science;systems analysis;domain model;ranging;computer science	ML	-81.05987279132232	-31.624995450395602	191375
c23e87eff0b71542169917df3c5d05ddb6f3d4cb	have you ever wondered why? qualitative research methods to investigate engineering education		This session will engage participants in how to apply multiple qualitative research methods to examine emerging issues in engineering education. The focus will be on using qualitative methods — grounded theory, thematic analysis, and content analysis — across multiple data collection methods (individual interviews, focus groups, key informant interviews, and policy/programmatic artifacts) and across several institutions. Benefits and challenges associated with data collection, synthesis, analysis, and triangulation across multiple research sites will be discussed, as well as the important role of theoretical frameworks in designing engineering education inquiry. It is expected that participants will gain a greater appreciation of qualitative methods that can be used to answer important questions in engineering education.	focus group	Susan M. Lord;Michelle M. Camacho;Catherine E. Brawner;Catherine Mobley;Joyce B. Main	2017	2017 IEEE Global Engineering Education Conference (EDUCON)	10.1109/EDUCON.2017.7943102	thematic analysis;data collection;knowledge management;focus group;management science;grounded theory;engineering;engineering education;content analysis;triangulation (social science);qualitative research	HCI	-80.04710761380697	-25.759657539326334	191389
02357a149f5e7389874dc36ebb36897decdb2824	achieving 96% mastery at national scale through inspired learning and generative adaptivity	natural language processing	Most of the current research on improving learning outcomes focuses on a small subset of variables of an immensely multi-dimensional space of the learning ecosystem. Most digital learning tools primarily focus on individual students, other research focuses only on teacher professional development, or only on curriculum improvement. In this talk I will describe our efforts on how to discover optimal parameters of the entire ecosystem that considers student factors (engagement and mastery), classroom factors (blended learning variations and group learning variations), curriculum factors (multidimensional variation of existing curricula), and teacher factors (in-class tools that mitigate weaknesses, and promote teacher development). I will describe our work on algorithms to discover optimal learning pathways in this high-dimensional space. I will conclude with the outcomes of deploying a portion of our platform on algebra challenges conducted on two US states and the country of Norway.  Zoran Popovic is a Director of Center for Game Science at University of Washington and founder of Enlearn. Trained as a computer scientist his research focus is on creating interactive engaging environments for learning and scientific discovery. His laboratory created Foldit, a biochemistry game that produced three Nature publications in just two years, an award-winning math learning games played by over five million learners worldwide.  He is currently focusing on engaging methods that can rapidly develop experts in arbitrary domains with particular focus on revolutionizing K-12 math education. His Algebra Challenges conducted in Washington, Minnesota, and Norway, have shown that 96% of children even in elementary school can learn key algebra concepts in 1.5 hours. He has recently founded Enlearn to apply his work on generative adaptation to any curricula towards the goal of achieving full mastery by 95% of students. His contributions to the field of interactive computer graphics have been recognized by a number of awards including the NSF CAREER Award, Alfred P. Sloan Fellowship and ACM SIGGRAPH Significant New Researcher Award.	acm siggraph;algorithm;arbitrary code execution;computer graphics;computer scientist;ecosystem;foldit;human–computer interaction;ibm notes;transformational grammar	Zoran Popovic	2015		10.1145/2724660.2724684	psychology;simulation;medicine;human–computer interaction;computer science;engineering;machine learning;pedagogy;mechanical engineering	ML	-79.75914511406138	-33.60678201983596	191502
b6635e95fb39d89ed92bfe687be736bb33b94c2c	assessing attention in visual and textual programming using neuroeducation approaches		This poster will present results from an EEG study comparing visual and textual programming, carried out on informatics students. We observe brain rhythms as the subjects complete programming tasks using Python and Scratch. The present study belongs in the domain of Neuroeducation/Educational Neuroscience, which is an attempt to join cognitive science and education in order to create a sound grounding of education. Our goal is to gain a better understanding of different types of programming as one of the parameters that can impact professional involvement in software development, so as to help us formulate educational methodologies in software engineering education.	cognitive science;electroencephalography;informatics;neural oscillation;python;scratch (programming language);software development;software engineering	Spyridon Doukakis;Mary-Angela Papalaskari;Panayiotis M. Vlamos;Antonia Plerou;Panagiota Giannopoulou	2018		10.1145/3197091.3205815	multimedia;natural language processing;computer science;visual programming language;scratch;educational neuroscience;software development;informatics;python (programming language);artificial intelligence	HCI	-82.72440347129981	-37.324840758831	191634
bc372cd3d3c0ff99ba32f501d3459f3ba4d1050c	the role of big data in university strategy and performance eco system: a case study		Faculty members are the beating heart of any University around the world. They are one of the pillars of any University strategy that usually includes excellence in teaching, research activities and both university and community services. Over their academic service lifetime, faculty members produce huge amount of information and knowledge because of the above activities. Unfortunately, and for cultural, technical and management reasons, this information is never captured and maintained, and hence the opportunity of creating value and knowledge is lost. On the other hand, lots of effort are wasted in gathering and aggregating such information every time it is needed by the management either to measure the progress and achievements of the university, or even when the faculty member is applying for promotion. This paper describes the architecture of a knowledge management system that has been implemented, to help the University to harness knowledge out of the big data that is generated by various faculty members, but scattered around the University. The system, which was successfully piloted in College of IT, enables faculty members to set their objectives, track academic performance throughout academic lifetime and guiding them towards their promotion through the promotion dashboard. The system, which was built on the promotion bylaws, follows a point system concept. This makes it easy to measure performance of the faculty member at any time and in a real time. Upon full implementation, the system will enable the university’s top management to monitor the University’s performance at different levels (personal, department, college and management levels). Hence moving them, in a systematic structured way, towards common goals of the University.	big data	Ali AlSoufi	2018		10.1007/978-3-319-77703-0_66	dashboard (business);big data;architecture;excellence;business;knowledge management	Robotics	-81.68173433395113	-32.06873819697047	191653
4343fe11acbda0f0e267f9287270098553760dad	biomedical engineering education in developing countries: research synthesis	human health;ethics;research and development biomedical education engineering education health care;biomedical engineering developing countries;context communities biomedical engineering educational institutions ethics public healthcare;research and development;biomedical engineering;health problems;engineering education;research synthesis biomedical engineering education developing countries;developing country;biomedical education;communities;public healthcare;context;health care	Biomedical engineering (BME) contributes to development through improving human health. This paper examines BME education to address the needs of developing countries. Components of different BME programs described in the literature are synthesized to represent what has been proposed or implemented for the production of graduates able to address health problems in a manner suited to the local environment in which they occur. Published research on BME education is reviewed with reference to problem context, interventions and their mechanisms, and intended outcomes.	protein engineering;biomedical engineering field	Tania S. Douglas	2011	2011 Annual International Conference of the IEEE Engineering in Medicine and Biology Society	10.1109/IEMBS.2011.6090609	engineering management;ethics;engineering education;medicine;developing country;knowledge management;biological engineering;health care	SE	-83.80682626538058	-31.62321338661993	191988
66d41ed2660db405d67786cdd3c96f17c8049292	integrity in postgraduate research: the student voice	policy;academic integrity;research integrity;misconduct;postgraduate research	There is a limited understanding of the student perspective of integrity in postgraduate research. This is of concern given that 'research trainees' may have a vulnerable position in formal investigations of research misconduct. This paper analyses qualitative data drawn from an Australian online academic integrity survey in a mixed methods research study. This analysis complements the quantitative survey data analysed earlier and sought to explore factors contributing to postgraduate research students' satisfaction with policy and process, the ways institutions can support students' understandings and practice, suggestions for improving breach processes, and students' concerns. We found that integrity training and modelling of ethical behaviour by staff were key factors contributing to students' satisfaction. Students would have liked more 'hands-on' integrity training, accompanied by consistent and transparent enforcement of policy. Respondents expressed concern about the credibility of research output and educational standards. We call for recommendations from the extensive literature on academic integrity policy and practice to be extended to the postgraduate research sphere.		Saadia Mahmud;Tracey Bretag	2015	Science and engineering ethics	10.1007/s11948-014-9616-y	engineering ethics;knowledge management;pedagogy	HCI	-80.87963477765715	-27.04869245296141	192064
02076a03526164278c692a7dd9c5fdbebe0dc947	distributed computing education, part 3: the winter school online experience	libraries;winter schools;analytical models;distributed computing educational institutions computer science education art adders grid computing costs software libraries laboratories computer aided instruction;art;digital library;digital libraries;e science;grid computing computer aided instruction digital libraries educational institutions;computer aided instruction;training;iwsgc 08 distributed computing education winter school online experience international summer schools grid computing grid systems international students issgc summer school materials iceage digital library disseminating grid knowledge international winter school;distributed computing;distributed computing education;materials;computational science;grid;tutorials;winter schools distributed computing education education training e science e infrastructures grid computing high throughput computing scientific computing computational science e infrastructure cyberinfrastructure grid knowledge transfer summer schools;cyberinfrastructure;scientific computing;e infrastructures;knowledge transfer;planning;science education;international students;e infrastructure;grid computing;grid system;summer schools;high throughput computing	The International Summer Schools in Grid Computing (ISSGC) have provided numerous international students with the opportunity to learn grid systems, as detailed in part 2 of this series (http://doi.ieeecomputersociety.org/10.1109/MDSO.2008.20). The International Winter School on Grid Computing 2008 (IWSGC 08) followed the successful summer schools, opening up the ISSGC experience to a wider range of students because of its online format. IWSGC 08 repurposed summer school materials and added resources such as the ICEAGE digital library and summer-school-tested t-Infrastructures such as GILDA (Grid INFN Laboratory for Dissemination Activities). The winter schools shared the goals of the summer school, which emphasized disseminating grid knowledge.	digital library;distributed computing;grid computing	David Fergusson;Petar Jandric;Richard P. Hopkins;Elizabeth Vander Meer;Malcolm P. Atkinson	2008	IEEE Distributed Systems Online	10.1109/MDSO.2008.26	planning;digital library;simulation;computer science;distributed computing;grid;world wide web;grid computing	HPC	-79.27665669174053	-33.34002700089152	192205
6251126a82cdc009b68699a74e65d8e61fed39d6	a state-space model for resource allocation in higher education	computer program;resource allocation;resource management;higher education;input output;resource management educational programs educational products space technology optimal control personnel production costs computer science education parameter estimation;optimal control;computer science education;personnel;production;educational programs;space technology;parameter estimation;state space model;educational products	"""A state-space model describes the behavioral characteristics of a system as a set of relationships among time functions representing its inputs, outputs, and internal state. The model presented describes the utilization of a university's basic resources of personnel, space, and technological equipment in the production of degree programs, research, and public or technical services. It is intended as an aid in achieving an optimal allocation of resources in higher education and in predicting future needs. The internal state of the system is defined as the distribution of students into levels and fields of study, with associated unit """"costs"""" of education received. The model is developed by interconnecting, with appropriate constraints, independent submodels of major functional segments of university activity. The development of computer programs for estimation of parameters with continual updating and for simulation of the system behavior is described. This description includes a review of machine-addressable data files needed to implement the programs. The state model provides a natural form for approaching problems of system optimization and control. The paper discusses the question of control inputs and the feasibility of developing a formal optimal control policy for a university with essentially """"open door"""" admissions."""		Rita Zemach	1968	IEEE Trans. Systems Science and Cybernetics	10.1109/TSSC.1968.300137	input/output;simulation;optimal control;resource allocation;computer science;engineering;state-space representation;resource management;mathematics;management science;space technology;estimation theory;higher education;statistics	Embedded	-85.10312673910397	-31.619428853897055	192207
a1f5d453a278e5545a724cd3fa912c3352a34646	early elicitation and definition of requirements for an interactive multimedia information system	mars;pediatrics;formal specification;information systems;anti smoking campaigns;interactive multimedia system;software systems;interactive multimedia information system;aging;health education;multimedia systems;systems engineering and theory;interactive multimedia;requirements engineering;computer science education;multimedia systems information systems mars educational institutions pediatrics aging computer science education software systems systems engineering and theory costs;medical information systems;knowledge acquisition;requirement engineering;anti smoking campaigns interactive multimedia information system requirements engineering interactive multimedia system health education;technical report;information system;knowledge acquisition formal specification multimedia systems medical information systems	The literature on requirements engineering contains little in the way of either theoretical guidance or empirical case studies relating to the specification of requirements for interactive multimedia information systems. This paper describes some of the special difficulties currently encountered in the early stages of developing such systems. It then presents a description of the methods and tools used in the early stages of the MARS project, whose aim is to develop an interactive multimedia system for use in school-based health education and anti-smoking campaigns directed at children aged 9-10. The paper ends with a discussion of lessons learnt with respect to some current issues in requirements engineering, and considers the extent to which the particular problems identified earlier in the paper were addressed by the methods and tools used in the MARS project. We conclude that further work in this area is badly needed, so that better guidance on the specification of requirements for interactive multimedia information systems can be given in future.	information system;requirement	Sara Jones;Carol Britton	1996		10.1109/ICRE.1996.491425	computer science;systems engineering;engineering;software engineering;system requirements specification;requirements elicitation;multimedia;requirements engineering;information system	HCI	-86.24946022595026	-33.4129676252276	192362
c28a9d7ee9e18d271ea851e28ec6d42cc6cca423	encouraging participation in computer science with connect	electronic mail;employee welfare;network effect;college students;satisfiability;professional communication computer science education;computer science education;networking;electronic mail conferences communities educational institutions cities and towns employee welfare;cities and towns;communities;communication;networking communication education;creating open networks and expanding connections with technology computer science professional networking grace hopper celebration technology based system connect system;conferences;professional communication	Although professional networking is vital to career building, college-age students may not have acquired sufficient skills to network effectively. Several conferences, such as the Grace Hopper Celebration (GHC) of Women in Computing and the Richard Tapia Celebration of Diversity in Computing, now exist to counteract feelings of isolation and encourage participation of women and minorities in computer science. To enable conference attendees to take full advantage of the potential for mentoring at these events, we have developed CONNECT (Creating Open Networks aNd Expanding Connections with Technology), a technology-based system that helps conference attendees meet and exchange information. This paper reports the results of deploying the CONNECT system at the GHC conference on two different years. Although the results were generally positive, with about 75% of the survey respondents indicating they were either satisfied or very satisfied with the support provided by CONNECT, there were also a number of suggestions for improvement. We review these results and provide a list of guidelines for creating an effective tool to encourage conference attendees, especially college students, to network and form communities.	computer science;grace murray hopper award;richard tapia celebration of diversity in computing;the glorious glasgow haskell compilation system;women in computing	Brandon Vargo;Cyndi Rader;Tracy Camp	2011	2011 Frontiers in Education Conference (FIE)	10.1109/FIE.2011.6142801	public relations;simulation;computer science;engineering;electrical engineering;artificial intelligence;network effect;software engineering;multimedia;management;world wide web;pedagogy;satisfiability;mechanical engineering	HPC	-79.52586137874886	-32.22124987010127	192395
aeca9ab416adb5a514e57fa41705a71918c48488	learning data engineering: creating iot apps using the node-red and the rpi technologies		This paper demonstrates the suitability and the practicality of using the advanced open source tools such as the Raspberry Pi and the Node-RED for teaching and learning in the Internet of Things (IOT) subject within a newly created major of Data Engineering in the Faculty of Engineering and IT at University of Technology, Sydney. Understanding and practicing of the Internet of Things largely depend on the high availability of tools, their low cost, and ease of use that can accelerate learning processes. This paper demonstrates relatively uncomplicated practical lab exercises involving the Raspberry Pi hardware, firmware and the Node-RED programming environment that students can execute to stimulate their learning, understanding of the Internet of Things technology and acquire fundamental data engineering skills.	data acquisition;firmware;high availability;information engineering;integrated development environment;internet of things;javascript;open-source software;prototype;raspberry pi 3 model b (latest version);real life;uts;usability;while	Zenon Chaczko;Robin Braun	2017	2017 16th International Conference on Information Technology Based Higher Education and Training (ITHET)	10.1109/ITHET.2017.8067827	pi;computer engineering;knowledge management;firmware;computer science;usability;simulation;web of things;high availability;information engineering;internet of things	DB	-86.11301611860881	-32.530642670830055	192600
bcddab69b8fdbd5e27a23ece36e96923735631f1	improving secondary cs education: progress and problems	advanced placement ap;computer science education;state and university partnerships;teacher training;computer education;advanced placement	The Institute for Computing Education (ICE) was created in the spring of 2004. ICE is a partnership between the Georgia Department of Education and the College of Computing at Georgia Tech. The goals for this partnership are to increase the number and quality of computer science teachers and increase the number, quality, and diversity of computer science students. One specific goal is to increase the number of students taking the CS-Advanced Placement (AP) course. In this paper we report on both the progress we have made towards these goals and the problems we have encountered. We hope that other states will create similar partnerships and leverage our experience.	cs games;computer science	Barbara Ericson;Mark Guzdial;Maureen Biggers	2007		10.1145/1227310.1227416	simulation;ap environmental science;advanced placement	AI	-79.73852852274567	-33.52814350515749	193127
8012e763a78350fabf2ae6cdf9076cabe8b339ea	decision-making and conflict resolutions skills enhanced by virtual facilitation: a qualitative study	trust;decision making cities and towns conferences medical services educational institutions knowledge engineering;computer aided instruction;virtual reality;information sharing;virtual facilitator;knowledge;qualitative study;interventions trust knowledge information sharing virtual facilitator simulation technology;medical services;virtual reality computer aided instruction decision making digital simulation;interventions;cities and towns;educational tool;argyris rosenberg framework decision making skill conflict resolution skill technical knowledge enhancement virtual facilitation simulation tool simulation technology innovative educational tool ugly orange negotiation simulation;conflict resolution;simulation tool;simulation technology;digital simulation;conferences;knowledge engineering	Facilitation among engineers continues to focus on the enhancement of technical knowledge. Very little effort addresses non-technical skills. This research explores the phenomenon behind the use of the facilitation framework of Chris Argyrols and Marshall Rosenberg in a virtual facilitation simulation tool. Currently, the military uses simulation technology to practice various exercises such as flight maneuvering. The engineering arenas use of technology whether internally or externally can be an innovative educational tool. The focus of such a tool would enhance the quality of decision-making and conflict resolution. This study investigates whether the use of virtual facilitation during a simulation leads to enhanced decision-making and conflict resolution skills. This research focuses on the use of the “Ugly Orange”, a commonly used negotiation simulation, with interventions based on the framework of Argyris and/or Rosenberg interjected into the communication process. This research extends existing knowledge on the effects of virtual facilitator to enhance decision-making and conflict resolution skills, as well as conditions to enhance participants' openness and interdependence.	interdependence;openness;simulation	Adrienne Colbert;Angelica Guzman;Martha McQueen;Ray Luechtefeld	2011	2011 Frontiers in Education Conference (FIE)	10.1109/FIE.2011.6142956	simulation;computer science;engineering;knowledge management;artificial intelligence;conflict resolution;knowledge engineering;virtual reality;management science;knowledge;management;pedagogy	HCI	-85.28920578324121	-28.408777016194836	193367
2aba97978ca1dff25aa9a2474830138f4f48ade5	a synchronous distance education hybrid model of college-level credits for high-school students	portals;standards;calculus;sociology;recruitment;conferences	Impacting college readiness and reinforcing recruitment and retention methods are objectives shared by virtually all engineering schools. This paper describes a dual enrollment program for high-school students that supports a recruitment, retention, and college readiness improvement plan initiated by the UPRM College of Engineering. Elements of synchronicity, hybrid populations, and assisted teaching are combined with a distance learning modality to define the backbone of this initiative. A small sample provides preliminary statistics on the potential results of this model, while yielding valuable feedback and insight for driving its scaled implementation.	feedback;holography;internet backbone;modality (human–computer interaction);population;shade 3d;synchronicity	Manuel Jimenez;Sonia M. Bartolomei-Suarez;Ysela Ochoa;Wilma Santiago	2016	2016 IEEE Frontiers in Education Conference (FIE)	10.1109/FIE.2016.7757723	library science;simulation;engineering;pedagogy	Visualization	-78.16560840381189	-34.31085200983933	193383
280c62f2b97f047bf3804e7de5b92e75f0fb15bd	an evaluation of interactive test-driven labs with webide in cs0	java;computer science education;program compilers;android programming;cs0 course;dynamic webide labs;interactive feedback;interactive test-driven labs;introductory java;online lab content;static programming labs;syntactic parsers;test-driven learning approach	WebIDE is a framework that enables instructors to develop and deliver online lab content with interactive feedback. The ability to create lock-step labs enables the instructor to guide students through learning experiences, demonstrating mastery as they proceed. Feedback is provided through automated evaluators that vary from simple regular expression evaluation to syntactic parsers to applications that compile and run programs and unit tests. This paper describes WebIDE and its use in a CS0 course that taught introductory Java and Android programming using a test-driven learning approach. We report results from a controlled experiment that compared the use of dynamic WebIDE labs with more traditional static programming labs. Despite weaker performance on pre-study assessments, students who used WebIDE performed two to twelve percent better on all assessments than the students who used traditional labs. In addition, WebIDE students were consistently more positive about their experience in CS0.	android software development;compiler;experience;experiment;java;lockstep (computing);parsing;regular expression;scalability;unit testing;web application;web integrated development environment	David S. Janzen;John Clements;Michael Hilton	2013	2013 35th International Conference on Software Engineering (ICSE)		programming;xml;computer science;theoretical computer science;operating system;software engineering;semantics;real time java;multimedia;programming language;java;writing	SE	-82.93066123891455	-36.98849157375667	193612
7b2d36a7cb24280e7d15f37b6ab0cf29f1ca9374	a multidisciplinary, multifaceted approach to improve the computer science based game design education: methodology and assessment	game design;imagine cup;computer science	In this paper, we introduce a multidisciplinary and multifaceted pedagogical approach to enhance game design education in computer science curriculum and assess its effectiveness using outcomes from Microsoft US and World Imagine Cup competitions in the game design category. We offer team project-based courses that cover multiple disciplines such as computer science, art and animation, game design, production, and business and entrepreneurship. Our students gain fundamental knowledge and skills from the multidisciplinary approach and utilize them to undergo a systematic game development process over two semesters. We also implement a unique grading system that includes ranking duels to promote the competitiveness among students which ultimately improves the quality of every game designed in our courses. We successfully demonstrate the effectiveness of our approach with results from the Microsoft Imagine Cup competitions - dozens of our student teams have been nationally and internationally recognized in the past eight consecutive years.	computer science;microsoft imagine;video game design;video game development	Chang Yun;Hesam Panahi;Zhigang Deng	2016		10.1145/2839509.2844582	game design;simulation;computer science;knowledge management;software engineering;game developer;multimedia;game design document;pedagogy	AI	-81.82613700440163	-33.29979373969375	193745
439a826edf8b02561319fac090d90602fc10a570	it problem solving: an implementation of computational thinking in information technology	curriculum development;computational thinking;cpath;information technology it;problem solving	"""This paper describes the implementation of information technology problem-solving constructs and scenarios designed to cultivate computational thinking in information technology education at the college level via a course entitled """"IT Problem Solving."""" A project of Broadening Advanced Technological Connections (BATEC), these scenarios were developed by a team of researchers under the auspices of an NSF CPATH grant focusing on adapting Computational Thinking as defined by Jeanette Wing into a more applied framework in partnership with and validated by a broad set of Information Technology (IT) professionals. The methodologies used within this highly successful course at Bunker Hill Community College may be of interest to other departments with existing IT programs that would like to take advantage of the strengths of the problem solving approach."""	computation;computational thinking;computer science;contingency (philosophy);ibm notes;problem solving	Jaime L'Heureux;Deborah Boisvert;Robert F. Cohen;Kamaljeet Sanghera	2012		10.1145/2380552.2380606	simulation;computer science;engineering;knowledge management;electrical engineering;management science;management;pedagogy	AI	-80.1705788787092	-31.999097479105533	193881
cbc310e9b1f48c0c272e6808f6fb72e390a3b70a	a comparison of software engineering knowledge gained from student participation in humanitarian foss projects	computing education;software engineering;software development;computer education;free and open source software;open source software	This poster reports on student opinion of the Software Engineering knowledge gained by students exploring a Humanitarian Free and Open Source Software project. Eight students in a non-majors class and eleven more-advanced software development students were surveyed pre- and post-course on their opinions of technical and professional knowledge gained.	open-source software;software development;software engineering;software project management	Heidi J. C. Ellis;Gregory W. Hislop;Ralph Morelli	2011		10.1145/1999747.1999874	personal software process;software engineering process group;crowdsourcing software development;software project management;knowledge management;social software engineering;software development;software engineering;software walkthrough;software analytics;software peer review	SE	-82.24353771663013	-33.514185008932344	193995
9246d19f14fb8e4e3117abe3aaec28e1eacd0a68	teaching simulation: a panel discussion	computer aided instruction;digital simulation;educational courses;teaching;modeling concepts;simulation course;simulation language;teaching simulation	This panel looks at the issue of teaching simulation. It brings together three individuals with a wide diversity of academic and industrial experience to discuss the key issues that should be taught in a simulation course. Questions discussed include: Should a simulation language or general modeling concepts be taught in a simulation course? Should there be a difference between simulation courses taught to engineering and business school students? What simulation tools and skills should be taught to satisfy the needs of industry who hire engineering and business school graduates? These and other issues will be discussed.	simulation language	Sheldon H. Jacobson;Douglas J. Morrice;David H. Withers;Enver Yücesan;W. David Kelton	1994			educational technology;simulation;computer science;technical report;multimedia;world wide web;computer engineering;satisfiability	DB	-85.11778304463745	-34.68738836552614	194432
45965c77d9ea9c8781c34da52c876c069c153b48	curriculum 68: recommendations for academic programs in computer science: a report of the acm curriculum committee on computer science	computer science academic programs;graduate program;computer science courses;computer science curriculum;computer science education;computer science graduate programs;computer science bibliographies;computer science undergraduate programs	This report contains recommendations on academic programs in computer science which were developed by the ACM Curriculum Committee on Computer Science. A classification of the subject areas contained in computer science is presented and twenty-two courses in these areas are described. Prerequisites, catolog descriptions, detailed outlines, and annotated bibliographies for these courses are included. Specific recommendations which have evolved from the Committee's 1965 Preliminary Recommendations are given for undergraduate programs. Graduate programs in computer science are discussed, and some recommendations are presented for the development of master's degree programs. Ways of developing guidelines for doctoral programs are discussed, but no specific recommendations are made. The importance of service courses, minors, and continuing education in computer science is emphasized. Attention is given to the organization, staff requirements, computer resources, and other facilities needed to implement computer science educational programs.	bibliographic index;computer science;recommender system;requirement	William F. Atchison;Samuel D. Conte;John W. Hamblen;Thomas E. Hull;Thomas A. Keenan;William B. Kehl;Edward J. McCluskey;Silvio O. Navarro;Werner C. Rheinboldt;Earl J. Schweppe;William Viavant;David M. Young	1968	Commun. ACM	10.1145/362929.362976	applied mathematics;science education;computer science;ap computer science;computer applications;information and computer science	Theory	-80.02095081686504	-30.81085965041546	194492
1a6f7549a5b6cc7b8f6a7faf1eb76ea5f5dc68a9	growing our own: partnering with the city school district	business education;first year;development;technology skills;information technology;training;orientation;satisfiability;high school;apprenticeship;institutions of higher education;staffing;students	In early 2002, the President of the Rochester Institute of Technology, Dr. Albert Simone, was approached by a board member from the Rochester Business Education Alliance, encouraging him to participate in the Youth Apprenticeship Program. This program, with a long successful history in the Rochester area, partners high school sophomores with local businesses. Prospective students must meet a stringent set of requirements before being selected to interview with the business of their choice. If they are hired, they begin a two-year paid apprenticeship, working throughout the summer and after school during the academic year.  When Dr. Simone accepted the challenge to allow a partnership with the University, he opened the door to a history-making opportunity. This was the first time that an institution of higher education had joined the program. It became the first time that the program was able to offer information technology apprenticeships. The President agreed to fund two students in the first year and I agreed to create a real-life work experience for them.  We are now into Year Three of this very successful partnership, with our first two students having graduated from high school. They have both been accepted into RIT for the fall and we have the bonus of being able to integrate them into the ranks of our ITS student employees - coming to the University as freshmen but with two years of ITS experience. This paper will focus on their journey with us and the mutually satisfying outcome.	prospective search;real life;requirement	Fran Versace	2004		10.1145/1027802.1027831	engineering management;medicine;management;pedagogy	HCI	-78.22895660932214	-30.533268557563144	194848
533354b7fceb629bff76d232cc8587ad7f1143bf	"""how """"useful"""" is multimedia on the www for enhancing teaching and learning?"""	computer aided instruction;teaching and learning;spectrum;multimedia systems;internet;teaching	"""The proliferation of multimedia-based educational presentations on the WWW which are designed to enhance teaching and learning is a recent phenomenon. Although some impetus has occurred because institutions seek to broaden and increase their student population and sources of revenue there is an undercurrent that suggests that new Web-based modes of presentation are more """"useful"""" or """"better"""" Educationalists have proposed several methods for measuring how """"good"""" a multimedia-based educational presentation is. The purpose of the paper is not to compare these measures or assess them. Rather, the authors focus on the seminal work of Laurillard and apply her methodology to a broad spectrum of 112 web sites. They present the results of their research and show that more attention needs to be paid to the effective modelling and transmission of """"the state of a student's interaction"""" in order to better support the educational objectives of Laurillard's methodology."""	www	S. K. Adhvaryu;Isaac Balbin	1998		10.1109/MMCS.1998.693624	education;spectrum;the internet;simulation;computer science;knowledge management;electrical engineering;artificial intelligence;multimedia;world wide web	ML	-77.49500760254308	-37.73513601327216	195474
784462e60f96ae3e74c851cb03e97d8a3b9eda0f	how common are controlled experiments with student participants in requirements engineering?: a systematic mapping study on the use and reporting of graduate and undergraduate students in requirements engineering experiments		[Context] In requirements engineering research, emphasis is given to sound evaluations of new approaches. While industry surveys or industrial case studies are preferred to evaluate industrial applicability, controlled experiments with student participants are commonly used to determine measurements such as effectiveness and efficiency of a proposed approach. [Objectives] In this paper, we elaborate on the current state of the art of controlled experiments using student participants. As threats regarding the generalizability are quite obvious, we want to determine how widespread controlled experiments with student participants are and in which settings they are used. [Methods] This paper reports on a systematic mapping study using requirements engineering specific conferences and a journal as data sources. We scanned requirements engineering papers published in the years 2010-2015 and investigated all papers reporting student experiments in detail. [Results] From 444 papers under investigation 31 report results from controlled experiments. Regarding threats to validity it can be observed that most papers report on threats to validity and commonly different categories of threats to validity are thoroughly discussed. However, many experiments lack information regarding the students' recruitment and other important factors. [Conclusions] Student participation in requirements engineering experiments can be seen as a common evaluation approach and common threats to validity are appropriately discussed. In contrast, student specific threats to validity in experiments with student participants, such as the recruitment strategy and the bonuses given, are commonly not reported.	experiment;norm (social);requirement;requirements engineering;threat (computer)	Marian Daun;Jennifer Brings;Carolin Hübscher	2017	2017 IEEE 25th International Requirements Engineering Conference Workshops (REW)	10.1109/REW.2017.31	requirements engineering;management science;generalizability theory;systems engineering;engineering	SE	-79.29963065849142	-27.199494442488	195737
710550e26452dd4dd60b9431ca0e6d3daab1a320	navigating the academic developmental maze: new possibilities for mentoring international graduate and doctoral students through the usa		As an increased number of international students join College and University classrooms across the United States, their transition and acclimation to campuses has received attention over the past few years, particularly, in the areas of preparation and acculturation. This topic is important because faculty mentors can play a pivotal role in the professional development of international doctoral students. This article addresses these needs with a model which integrates adult learning and mentoring strategies to support international doctoral students. The model includes developing the skills which not only international graduates, but all graduates will benefit from in the 21st century. The significance of this model is its contribution to develop the valuable capabilities of proactive, problem solving, self-directed learners/academics able to self-reflect and navigate different cultural environments than their own. The discussion also provides future research recommendations. Navigating the Academic Developmental Maze: New Possibilities for Mentoring International Graduate and Doctoral Students through the USA	proactive parallel suite;problem solving	Kathleen P. King;Lu Norstrand;Julie A. Leos	2015	IJAVET	10.4018/ijavet.2015010101	mathematics education;management;pedagogy	DB	-78.91160392281681	-31.792499316957493	196548
571a7895834c3bebd00485471b59a46a89bedb8e	systematic literature reviews and undergraduate research		Systematic Literature Reviews and undergraduate Research sideration as a candidate project. Good candidates for a literature review are well thought through, address one or more clear research questions and are soundly framed. Possible extensions to this model involving a more practical component, could involve undertaking simulation experiments or replications of prior studies for which the data or software could be readily obtained. As with any capstone project, proposed literature review projects need to gain approval through our normal project vetting process. A thoroughly conducted systematic review can be time consuming and challenging, even for more senior students and researchers. Therefore, an active level of supervisory guidance must be provided for undergraduate students to help scaffold the learning. In practice the systematic review will often take on the broader survey-like aspects of a systematic mapping study [3, 4], through classifying and thematically analysing the literature on a selected topic. The initial research question as noted in [4] may also be somewhat generic and the focus may be on research trends (such as which researchers, how much activity, what type of studies etc.). Thus, a limited mapping study could form the first stage of the review, followed by a more focused review component driven by more specific research questions, in order to offer a manageable project for the student(s). While normally this model suits an individual project, we have conducted some reviews in pairs. We have found it useful to follow a structured process for the review, as outlined in Figure 1, adapted from Jalali & Wohlin [3]. This tightly structured process gives good guidance to students, and we have found for students with English as an additional language (EAL), or students without a record of high achievement in their prior courses, it helps break down the task into more manageable chunks. These can progressively produce demonstrable intermediate results, prior to the challenging final analysis and synthesis in which the findings and the implications of the review draw together. As part of the final package which includes a draft article for publication A recent Addition to our capstone project options in the Bachelor of Computer and Information Sciences has been the opportunity for students to undertake reviews of the research literature, as opposed to the more traditional projects involving developing a software artefact of some form. This offers an alternative for those students taking less software intensive majors/courses, or who have more of an interest in research. These projects involve conducting a full systematic review on a topic of interest. Systematic Literature reviews are a common research approach within the software engineering discipline, and are required to adhere to well defined protocols cf. [1]. As noted in [2], “Systematic review guidelines [1] recommend the following steps: 1. Identify the need for a systematic literature review. 2. Formulate review research question(s). 3. Carry out a search for relevant studies. 4. Assess and record the quality of included studies. 5. Classify data needed to answer the research question(s). 6. Extract data from each included study. 7. Summarize and synthesize study results (meta-analysis). 8. Interpret results to determine their applicability. 9. Write-up study as a report”.	box counting;capstone (cryptography);evaluation assurance level;experiment;information and computer science;scientific literature;simulation;software engineering;systematic review	Tony Clear	2012	Inroads	10.1145/2381083.2381087	systematic review	HCI	-81.23344421856105	-29.36634609310551	196583
6178142ed0e18f84a973fc5de07b363522cc021b	the articulation of military training onto engineering degree plans	training military aircraft educational institutions frequency modulation engineering profession concrete;comparative analysis;frequency modulation;veterans;articulation;project manager;training;engineering training curriculum military training engineering degree plans;training engineering education;military aircraft;veterans articulation military training;engineering profession;frequency modulated;engineering education;military training;concrete	The expected US military draw-downs (reductions in force) combined with a strong GI-Bill will create challenges for engineering programs and colleges nationwide as they work to serve a large influx of veterans who wish to pursue engineering degrees. We have conducted a comparative analysis of Marine Corps engineering training curriculum to determine if military training may be used as a substitute for courses within engineering degrees. SDSU's degree plans are used as a model for ABET-accredited degree program and the Marine Corps training was chosen as the model for generalized military training. The disciplines of civil and construction engineering have the largest amount of relevant training, with possible direct articulation of two courses, Surveying and Project Management. Beyond these two courses, no direct (complete) substitutions were noted, suggesting future analysis might need to consider combinations of military training courses as substitutes for additional technical courses. Analysis through the framework of military profession was necessary to determine course sequencing.	biconnected component;computer engineering;discharger;ibm notes;qualitative comparative analysis	Dave Lighthart;David T. Hayhurst;Patricia Reily	2011	2011 Frontiers in Education Conference (FIE)	10.1109/FIE.2011.6142942	frequency modulation;qualitative comparative analysis;simulation;engineering education;concrete;engineering;electrical engineering;management;mechanical engineering	AI	-79.98165812110004	-32.21854629488741	197024
f5fbefe145b5ca62292ceb847f568f2bb4d388d0	exploring alternative routes to realising the benefits of simulation in healthcare	consultants;or;case studies;operations research;journal;operational research practice;application of operational research;operational research;practitioners;management;or society;management science;or insight	Discrete event simulation should offer numerous benefits in designing healthcare systems but the reality is often problematic. Healthcare modelling faces particular challenges: genuine, fundamental variations in practice and an opposition to any suggestion of standardisation from some professional groups. This paper compares the experiences of developing a new simulation in an Accident and Emergency (Au0026E) Department, a subsequent adaptation for modelling an outpatient clinic and applications of a generic Au0026E simulation. These studies provide examples of three distinct approaches to realising the potential benefits of simulation: the bespoke, the reuse and the generic route. Reuse has many advantages: it is relatively efficient in exploiting previous modelling experience, delivering timely results although providing scope for adaptations to local practice. Explicitly demonstrating this willingness to adapt to local conditions and engaging with stakeholders is particularly important in healthcare simulation.	simulation	Jill Glen	2013	OR Insight	10.1057/ori.2012.12	computer science;knowledge management;management science;operations research	ML	-78.96233613003737	-26.9874633641951	197178
6eb3b6c9a1aeca5ca06706b19879054f883b285e	an information-centric and proactive approach to information security teaching	course design;information security;network security;knowledge management;higher education;computer security;human centric;information definition;techno centric;information;techno centric approaches;graduate education	This paper examines an approach to developing an Information Security course based on the expansion of the definition of information rather than one based solely on the security aspects of information technology. The paper argues that the definition of ‘information’ is crucial to the understanding of ‘information security’. At present, Information Security concentrates mostly on the technological aspects of data, computer and network security. This techno-centric approach ignores the fact that the majority of information within an organisation is derived from other sources than computer stored data. The outcome is that the course is more human centric in its approach.	data security;digital electronics;information security;knowledge management;network security;proactive parallel suite;while	William Hutchinson	2007	IJICS	10.1504/IJICS.2007.015498	information security audit;computer security model;cloud computing security;critical security studies;security through obscurity;information;security information and event management;security convergence;computer science;knowledge management;information security;network security;information security standards;human-computer interaction in information security;security service;management science;higher education;computer security;enterprise information security architecture;information security management	Crypto	-81.62394986125089	-27.731919935390763	197622
dd84f2623aa3318a8c5e7ea0f52a037bb06f78ca	a framework for technology-mediated inter-institutional telelearning relationships	cost effectiveness;higher education;computer mediated communication	This essay presents a framework for developing technology-mediated inter-institutional relationships for collaborative telelearning. This framework highlights the issues and implications of developing and maintaining partnering relationships among universities. The development of this framework is an outgrowth of two inter-institutional relationships among three large state universities: between the University of Maryland at College Park and Indiana University, and between the University of Maryland at College Park and the University of Arizona. The essay provides a description of both inter-institutional relationships, focusing specifically on inception, execution, and ongoing evaluation experiences. These experiences are subsequently used to illustrate how a framework for developing inter-institutional relationships can be used to both guide the design of new and the assessment of existing relationships. The essay concludes by discussing costs and benefits of inter-institutional relationships at the individual champion and the institutional levels.		Bradley C. Wheeler;Joseph S. Valacich;Maryam Alavi;Douglas R. Vogel	1995	J. Computer-Mediated Communication	10.1111/j.1083-6101.1995.tb00321.x	media studies	PL	-79.66988146984627	-28.77541969951738	197634
472458ae29ef17320232973642bdfe000266180a	current and future direction of the advanced placement exam	computer graphics;curriculum;advanced placement	Through a larger initiative involving mathematical sciences faculty from the three State of Iowa Board of Regents’ institutions, faculty members from the Departments of Statistics and Mathematics at Iowa State University have started a collaboration in the area of statistics training for future and current mathematics teachers. In this paper, we begin by discussing the recent developments in high school mathematics education at both the state and national level that served as a focus for change in the statistics education of mathematics teachers in the state. We then describe our present efforts in changing curriculum in statistical content and pedagogy in the undergraduate and graduate programs at Iowa State for future and current mathematics teachers. Finally, we offer some direction for future work in these regards.	ap computer science principles;international stereoscopic union	Mark Stehlik;Susan H. Rodger;Kathleen Larson;Alyce Brady;Christopher H. Nevison	1999		10.1145/299649.299811	curriculum;simulation;computer science;computer graphics;advanced placement	Web+IR	-79.49460195606228	-31.922271179024385	197849
98189fa91e97a50caaeeb5d388bded30027d6844	collaborative design of cross-disciplinary game minors based on the igda curriculum framework	igda;game design;game development;minor;curriculum;interactive media;software development;game;collaborative design;framework	Due to the recent creation of game degree programs at post-secondary institutions, peer-reviewed literature on the curriculum planning process for game degrees at post-secondary institutions pales in comparison to the literature available for more established fields of computer science. At Bradley University, departments across colleges have worked collaboratively to create two cross-disciplinary game minors. The minors have been carefully crafted to nurture the growth of both media designers and software developers while simultaneously providing experiences for the students to experience multi-disciplinary teamwork. This paper details the creation of these two innovative game minors with emphasis on three aspects of the curriculum planning process: 1) their interdependencies, 2) their structure for supporting both Design and software development students, and 3) their reliance on the International Game Developer Association's curriculum framework. In addition, the author provides a summary of issues and concerns that arose during the curriculum planning process.	computer science;david w. bradley;experience;game developer;interdependence;software developer;software development	Monica McGill	2010		10.1145/1822090.1822163	curriculum;game design;games;simulation;computer science;knowledge management;software framework;software development;game mechanics;software engineering;game developer;multimedia;interactive media;game design document;programming language;management;video game development;world wide web;game testing;pedagogy;minor	HCI	-81.50322609940675	-31.2612102703257	198059
7430676926199270569d9bcb26a5f0332ee6762e	generic competences for the it knowledge workers: a study from the field	software engineering;knowledge worker;quantitative analysis;labor force	This paper aims to identify generic competency levels relevant to a particular kind of knowledge workers: software engineers. Based on previous works, and in particular in the description of a professional career, authors review of the literature related to the characterization of the labor force in the Software Engineering (SE) domain. Subsequently, using a quantitative analysis based on investigative surveys administered to a number of representative professionals, authors provide with a generic competency ladder adapted to the given career description.	software engineer;software engineering	Ricardo Colomo Palacios;Fernando Cabezas-Isla;Ángel García-Crespo;Pedro Soto-Acosta	2010		10.1007/978-3-642-16318-0_1	simulation;quantitative analysis;knowledge management;operations management;management;pedagogy	SE	-85.09005139912195	-32.1505793382677	198347
f710dede179fc5a10e80ace26af3aff259f91691	self-assessment procedure v: database systems.	database system	This is the fifth ACM self-ass~ssment procedure. The earlier ones appeared in Communications in May 1976, May 1977, September 1977, and February 1978. This procedure deals with databases: general concepts, relational, network, and hierarchical approaches, physical design, and security/integrity. Reader response to the earlier procedures showed that the basic educational aims of self-assessment can be achieved with small procedures that do not satisfy the requirements usually applied to testing, or certification. Consequently, this procedure is short and is neither exhaustive nor balanced in its coverage. It merely provides a path to some self-assessment. The next few paragraphs abbreviate the introduction and instructions given with the earlier procedures.	connectionism;database;physical design (electronics);requirement	Peter Scheuermann;C. Robert Carlson	1978	Commun. ACM	10.1145/359576.1404943	computer science	Graphics	-82.58998056966183	-30.18918255140589	198701
feed713ae6d6e38fa41fcd70e970c43a5ce580d2	making the move: supporting faculty in the transition to blended or online courses	new faculty;faculty development;transition;online learning;learning management system lms	This paper is intended for new faculty and faculty who are new to using digital technologies and a learning management system in their instruction. As experienced faculty in the College of Education, the authors make a concerted effort to support faculty in their use of instructional technology. In this paper, the authors share their experiences with faculty who are taking early the early steps in the journey to integrate digital technologies into their instruction. The authors hope this article will help faculty on their journey by supporting them in teaching with technology. The authors focus on faculty development, adoption of new technologies into faculties’ instructional practices, and introductory online teaching practices. The authors’ ultimate goal is to support student learning by helping faculty encourage learning for the entire continuum of students: students who need to be supported as they develop digital literacy and those who come to us embracing technologies wholeheartedly. Making the Move: Supporting Faculty in the Transition to Blended or Online Courses	apache continuum;blended threat	Cynthia S. Gautreau;Kristin K. Stang;Chris Street;Andrea Guillaume	2014	IJOPCD	10.4018/ijopcd.2014010103	engineering;knowledge management;multimedia;pedagogy	HCI	-78.85442503346528	-35.27336294504005	199233
238f07fa9d34beec38f2bf807fc733d153601e59	understanding factors affecting information security practice of elementary school students	information ethics;information security practic;information security awareness;information security education	This study is directed for the information security education of the elementary students. The purpose of this paper is to examine that information ethics and information security awareness affect information security practice of elementary students. 192 valid questionnaires from elementary students of South Korea were collected, and then these were analyzed using structural equation modelling. The results show that information ethics and information security awareness affect information security practice of elementary students. And the research findings confirmed that the information security vocabulary test was useful to assess security awareness levels for elementary students. This new approach can assist management to plan and evaluate information security education. This study presents herein implications and suggestions for further research.	information ethics;information security awareness;structural equation modeling;vocabulary	Seung-Jae Choi;Tae-Sung Kim	2016	2016 10th International Conference on Innovative Mobile and Internet Services in Ubiquitous Computing (IMIS)	10.1109/IMIS.2016.43	information security audit;knowledge management;management science;information ethics	HCI	-81.86140043545825	-26.488752201032074	199745
0bdd1c1b494f36151db31e7a01c773df18bf66ad	invert your training program: revisited	consultants;quality improvement;staff;hands on testing;testing;training program;students	"""At SIGUCCS 2001 in Portland, OR, I presented a paper entitled """"Invert Your Training Program: Have Applicants Train Themselves Before You Hire"""" in which I outlined an innovative training program for new hires where we trained first and hired only those who trained the best. Although there were substantial cost and quality improvements in that process, there were still some labor-intensive aspects, such as interviewing. So, at the end of that paper, I suggested that perhaps we could completely invert the whole process, eliminating training altogether, by testing all who apply and only interviewing those who test well. This would require finding a way of testing 'native' or self-taught ability with computers, but would eliminate technical training altogether. And we wouldn't waste time vetting people in interviews who we were not going to hire for low technical skill level.  In this paper, I reprise the original process to highlight the success as well as the shortcomings of that process we discovered over the years we used it. I detail how we decided to revamp this hiring process. I discuss how we made use of online, hands-on testing to permit virtually anyone to have a shot at being a computing consultant with more accurate results. I review in brief the product we used and summarize the results of this exciting new method of selecting and hiring consultants Using hands-on testing software, we have been able to expand our reach across campus to include many applicants who would not have been considered before."""	closing (morphology);computer;hands-on computing;mind;money;norm (social);real life;software testing;tom	Scott Harrigan	2004		10.1145/1027802.1027838	simulation;engineering;operations management	Web+IR	-82.17865086394914	-31.464061652156722	199932
