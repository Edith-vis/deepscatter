id	title	keywords	abstract	entities	authors	year	journal	doi	fos	area	x	y	ix
219090def1101548e3ae425d305b5fb68c16eca5	realizing rcc8 networks using convex regions	conceptual spaces;qualitative spatial reasoning;journal article;qa75 electronic computers computer science;region connection calculus;convexity	RCC8 is a popular fragment of the region connection calculus, in which qualitative spatial relations between regions, such as adjacency, overlap and parthood, can be expressed. While RCC8 is essentially dimensionless, most current applications are confined to reasoning about two-dimensional or threedimensional physical space. In this paper, however, we are mainly interested in conceptual spaces, which typically are high-dimensional Euclidean spaces in which the meaning of natural language concepts can be represented using convex regions. The aim of this paper is to analyze how the restriction to convex regions constrains the realizability of networks of RCC8 relations. First, we identify all ways in which the set of RCC8 base relations can be restricted to guarantee that consistent networks can be convexly realized in respectively 1D, 2D, 3D, and 4D. Most surprisingly, we find that if the relation ‘partially overlaps’ is disallowed, all consistent atomic RCC8 networks can be convexly realized in 4D. If instead refinements of the relation ‘part of’ are disallowed, all consistent atomic RCC8 relations can be convexly realized in 3D. We furthermore show, among others, that any consistent RCC8 network with 2n + 1 variables can be realized using convex regions in the n-dimensional Euclidean space.	convex set;natural language;region connection calculus	Steven Schockaert;Sanjiang Li	2015	Artif. Intell.	10.1016/j.artint.2014.10.002	discrete mathematics;convexity;artificial intelligence;pure mathematics;mathematics	AI	-7.135637852886629	8.378053184142855	40750
1d5def2000f45021a11c1eb8e7bfc173e8102b84	splitting and updating hybrid knowledge bases (extended version)	description logic;knowledge representation;knowledge base;expressive power;artificial intelligent			Martin Slota;João Leite;Theresa Swift	2011	CoRR		knowledge representation and reasoning;knowledge base;description logic;computer science;artificial intelligence;theoretical computer science;knowledge-based systems;expressive power;algorithm	AI	-18.83979163073943	11.072436593394553	40789
c1fd4071aff0a55a69455ca83fbe4f047b825f09	a mixed approach of revision in propositional calculus	knowledge base	In this paper, we focus on minimal change in the revision of knowledge bases represented by propositional formulas. We first present a quick survey of semantic and syntactic approaches of revision, we then propose a mixed approach of revision which uses both semantic and syntactic means. 1 I n t r o d u c t i o n When a new i tem of information is added to a knowledge base, inconsistency can result. Revision means modifying the knowledge base, in order to mainta in consistency, to keep new information, and to remove the least possible previous information items. C.Alchourron, P.G~rdenfors and D.Makinson [1] [4] formulated postulates which express the propert ies tha t a knowledge set (that is, a deductively closed set of formulas) has to satisfy, after information has been added. K 9 p denotes the knowledge set K revised by a formula #. These postulates do not make it possible however to define an effective revision function which calculates, from the initial knowledge base, the s ta te of the base after the addition of more information. In [11] a complete revision function when the added formula is represented by a propositional clause which satisfies the first six Giirdenfors postulates, and which is able to calculate the s tate of the knowledge base after the addition of information, was proposed. This function involves the intersection between minimal inconsistent subsets. According to whether or not this intersection is reduced to the added clause, two different algorithms s temming from the semant ic evaluation refutat ion method [5] [9] were described. I t was focused on keeping consistency in the knowledge base. Changing minimally the knowledge base meant removing a minimal number of clauses. In the case where revision function might give several results, the choice was left to the user. After a quick survey of semantic and syntactic approaches and their respective critiques, we propose a revision function tha t s tems from the one previously presented. This function in detecting the causes of inconsistencies uses semantic means, and in revising minimally uses both semantic and syntactic means. 9 I should like t0 thank C.Schwind for helpful discussions and for her support.	algorithm;belief revision;knowledge base;propositional calculus;sensor	Odile Papini;Antoine Rauzy	1993		10.1007/BFb0028213	zeroth-order logic;natural language processing;knowledge base;discrete mathematics;computer science;artificial intelligence;negation introduction;propositional variable;well-formed formula;algorithm	AI	-16.476041660826922	9.842186803469883	40896
f33231e9c3a815778f7e7dc27927c91c651c8f2e	towards context-based concurrent formal theories	labelled transition system;group theory;boolean algebra;plasmodium;concurrent game	We define a kind of simple actions of labelled transition systems. These actions cannot be atomic; consequently, their compositions cannot be inductive. Their informal meaning is that in one simple action we can suppose the maximum of its modifications. Such actions are called hybrid. Then we propose two formal theories on hybrid actions (the hybrid actions are defined there as non-well-founded terms and non-well-founded formulas): group theory and Boolean algebra. Both theories possess many unusual properties such as the following one: the same member of this group theory behaves as multiplicative zero in respect to one members and as multiplicative unit in respect to other members.	bloch sphere;boolean algebra;computation;interference (communication);linearizability;nl-complete;numerical aperture;pa-risc;quantum state;quantum superposition;qubit;randomized algorithm;server (computing);theory (mathematical logic)	Andrew Schumann	2015	Parallel Processing Letters	10.1142/S0129626415400083	boolean algebra;combinatorics;discrete mathematics;mathematics;group theory;algorithm;algebra	AI	-6.722944486433513	11.964491924143227	40901
1d3ca516487cbf2addd0fc887a3dbf034870a023	infinity between mathematics and apologetics: pascal’s notion of infinite distance	humanidades;filosofia etica	In this paper I will examine what Blaise Pascal means by “infinite distance”, both in his works on projective geometry and in the apologetics of the Pensées’s. I suggest that there is a difference of meaning in these two uses of “infinite distance”, and that the Pensées’s use of it also bears relations to the mathematical concept of heterogeneity. I also consider the relation between the finite and the infinite and the acceptance of paradoxical relations by Pascal.	entity;pascal	João Figueiredo Nobre Cortese	2014	Synthese	10.1007/s11229-014-0599-7	philosophy;epistemology;calculus;pure mathematics;mathematics	Vision	-10.533991236654213	4.797175636868974	40997
c76c7b18f4fa9499e52d691e140c49dfebb54e55	towards a categorical foundation for generic programming	slice category;category theory;comma category;generating function;typed lambda calculus;generic programming	Generic Haskell is an extension of Haskell that supports datatype generic programming. The central idea of Generic Haskell is to interpret a type by a function, the so-called instance of a generic function at that type. Since types in Haskell include parametric types such as 'list of', Generic Haskell represents types by terms of the simply-typed lambda calculus. This paper puts the idea of interpreting types as functions on a firm theoretical footing, exploiting the fact that the simply-typed lambda calculus can be interpreted in a cartesian closed category. We identify a suitable target category, a subcategory of Cat, and argue that slice, coslice and comma categories are a good fit for interpreting generic functions at base types.	ado.net;cartesian closed category;category theory;generic function;generic programming;interpretation (logic);mutual recursion;one-to-one (data model);simply typed lambda calculus	Ralf Hinze;Nicolas Wu	2011		10.1145/2036918.2036926	system f;fixed-point combinator;parametric polymorphism;typed lambda calculus;discrete mathematics;binary lambda calculus;currying;pure mathematics;simply typed lambda calculus;mathematics;hindley–milner type system;generic programming;concept;generalized algebraic data type;algorithm	PL	-11.777190606442762	17.623951742055258	41063
509222cb35a85ec3ac6294165328d634d787d65d	characterizing causal action theories and their implementations in answer set programming: action languages b, c, and beyond	action languages;logic programming;causal action theories	We consider a simple language for writing causal action theories, and postulate several properties for the state transition models of these theories. We then consider some possible embeddings of these causal action theories in some other action formalisms, and their implementations in logic programs with answer set semantics. In particular, we propose to consider what we call permissible translations from these causal action theories to logic programs. We identify two sets of properties, and prove that for each set, there is only one permissible translation, under strong equivalence, that can satisfy all properties in the set. As it turns out, for one set, the unique permissible translation is essentially the same as Balduccini and Gelfond’s translation from Gelfond and Lifschitz’s action language B to logic programs. For the other, it is essentially the same as Lifschitz and Turner’s translation from the action language C to logic programs. This work provides a new perspective on understanding, evaluating and comparing action languages by using sets of properties instead of examples. It will be interesting to see if other action languages can be similarly characterized, and whether new action formalisms can be defined using different sets of properties.	action algebra;action language;answer set programming;causal filter;logic programming;stable model semantics;state transition table;theory;turing completeness;vladimir lifschitz	Haodi Zhang;Fangzhen Lin	2015		10.1016/j.artint.2017.02.008	discrete mathematics;computer science;mathematics;logic programming;algorithm	AI	-14.893190011996678	9.823464508203648	41190
7ee2f36431c9602fe69625412d9cb404910ec7ec	combining dynamic logic with doxastic modal logics	temporal logic;dynamic logic;modal logic;side effect;propositional dynamic logic	We prove completeness and decidability results for a family of combinations of propositional dynamic logic and unimodal doxastic logics in which the modalities may interact. The kind of interactions we consider include three forms of commuting axioms, namely, axioms similar to the axiom of perfect recall and the axiom of no learning from temporal logic and a Church-Rosser axiom. We investigate the influence of the substitution rule on the properties of these logics and propose a new semantics for the test operator to avoid unwanted side effects caused by the interaction of the classic test operator with the extra axioms. Copyright c © 2003, University of Manchester. All rights reserved. Reproduction (electronically or by other means) of all or part of this work is permitted for educational or research purposes only, on condition that no commercial gain is involved. Recent preprints issued by the Department of Computer Science, Manchester University, are available on WWW via URL http://www.cs.man.ac.uk/preprints/index.htmlor by ftp from ftp.cs.man.ac.uk in the directory pub/preprints.	agent-based model;axiomatic system;church–rosser theorem;computer science;directory (computing);display resolution;doxastic logic;dynamic logic (modal logic);interaction;nl (complexity);normal modal logic;perl data language (pdl);relational operator;s5 (modal logic);temporal logic;www	Renate A. Schmidt;Dmitry Tishkovsky	2002			modal logic;dynamic logic;zeroth-order logic;normal modal logic;modal μ-calculus;linear temporal logic;description logic;higher-order logic;temporal logic;epistemology;interval temporal logic;computer science;intermediate logic;artificial intelligence;axiom s5;accessibility relation;substructural logic;multimodal logic;side effect;autoepistemic logic	AI	-11.389478600232092	10.324585129932023	41292
73bb7b46938b39993a2adf69e97946be2930ef03	rewrite systems for varieties of semigroups	word problem;satisfiability;rewrite systems;point of view	We consider term and word rewriting systems for semigroup theories and study the connection between these two concepts. As an application, the lattice of all varieties of idempotent semigroups is investigated with the following point of view: Can we decide the word problem of the varieties in question by using finite canonical term or word rewriting systems ? In spite of the fact that there are infinitely many varieties of idempotent semigroups, this question can be solved completely. We thus obtain infinitely many examples of equational theories which satisfy the following property: The theory has decidable word problem, but it cannot be decided by using a finite canonical term or word rewriting system.	idempotence;rewriting;theory	Franz Baader	1990		10.1007/3-540-52885-7_102	word problem;combinatorics;discrete mathematics;mathematics;algorithm;satisfiability	Logic	-4.618614935846647	16.855521389655607	41368
dda6869e6d585a68948c2fd3f527c7b45a9dfe12	an effective decision algorithm for propositional temporal logic	temporal logic	The paper provides a decision algorithm for Kroger’s temporal propositional logic based on the construction of “finite” counterexamples defined by finite graphs, where each node may represent different but equivalent stages of the infinite time line. The paper characterizes the operations definable in the logic, i. e. its strength.	algorithm;linear temporal logic	Matthias Baaz	1989		10.1007/978-3-642-74688-8_12	dynamic logic;zeroth-order logic;modal μ-calculus;resolution;linear temporal logic;description logic;interval temporal logic;intermediate logic;propositional variable;multimodal logic;temporal logic of actions;autoepistemic logic	Theory	-12.770427013690254	13.987740408317489	41542
ef32f5e436455e621b767b9edbd23f3edfcea03b	characterizing strong normalization in the curien-herbelin symmetric lambda calculus: extending the coppo-dezani heritage	reduccion sistema;68n18;systeme reduction;system reduction;logique classique;lambda calculus;interseccion;type intersection;sequent calculus;reduction systeme;calculo sequente;informatique theorique;systeme types;strong normalization;normalisation forte;addition;lambda calculo;calcul sequent;classical logic;03b40;intersection;lambda calcul;intersection types;calcul lambda;computer theory;adiccion;expansion;informatica teorica	We develop an intersection type system for the λμμ̃ calculus of Curien and Herbelin. This calculus provides a symmetric computational interpretation of classical sequent style logic and gives a simple account of call-by-name and call-by-value. The present system improves on earlier type disciplines for λμμ̃: in addition to characterizing the λμμ̃ expressions that are strongly normalizing under free (unrestricted) reduction, the system enjoys the Subject Reduction and the Subject Expansion properties.	lambda calculus;normalization property (abstract rewriting);sequent calculus;subject reduction;type system	Daniel J. Dougherty;Silvia Ghilezan;Pierre Lescanne	2008	Theor. Comput. Sci.	10.1016/j.tcs.2008.01.022	classical logic;calculus;intersection;lambda calculus;mathematics;programming language;sequent calculus;addition;algorithm	PL	-12.44979015505714	16.72098294817817	41548
79a2d2bc802eff743fe636eb8c5908c784486e30	vicious circles in orthogonal term rewriting systems	term rewriting systems;functional programming;term rewrite system;first order;rewrite systems;strong normalization;normalization;cyclic reductions;article in monograph or in proceedings;cyclic reduction	In this paper we first study the difference between Weak Normalization (WN) and Strong Normalization (SN), in the framework of first order orthogonal rewriting systems. With the help of the Erasure Lemma we establish a Pumping Lemma, yielding information about exceptional terms, defined as terms that are WN but not SN. A corollary is that if an orthogonal TRS is WN, there are no cyclic reductions in finite reduction graphs. This is a stepping stone towards the insight that orthogonal TRSs with the property WN, do not admit cyclic reductions at all. 2000 Mathematics Subject Classification: 68Q42	database normalization;mathematics subject classification;normalization property (abstract rewriting);pumping lemma for regular languages;rewriting;stepping level;wordnet	Jeroen Ketema;Jan Willem Klop;Vincent van Oostrom	2005	Electr. Notes Theor. Comput. Sci.	10.1016/j.entcs.2004.11.020	discrete mathematics;computer science;normalization;first-order logic;mathematics;programming language;functional programming;algorithm	Logic	-6.487362974862	16.193770346778635	41556
3782529ac3701744da29c59b34e8a1de0153d108	the indispensability of farbung	philosophy of science;attitude propositionnelle;philosophie de l esprit;epistemologie;semantics;philosophy of mind;formal semantics;semantique;attribution;reference;indexicalite;indexicality;indexation;philosophie des geistes;epistemology;contextualism;appropriateness;contextualisme;adequation;frege g;inference	I offer a theory of propositional attitudeascriptions that reconciles a number of independently plausiblesemantic principles. At the heart of the theory lies the claim thatpsychological verbs (such as ``to believe'' and ``to doubt'') vary incontent indexically. After defending this claim and explaining how itrenders the aforementioned principles mutually compatible, I arguethat my account is superior to currently popular hidden indexicaltheories of attitude ascription. To conclude I indicate a number oframifications that the proposed theory has for issues in epistemology,philosophy of mind, and formal semantics.	philosophy of mind;semantics (computer science);theory;user (computing)	Michael W. Pelczar	2004	Synthese	10.1023/B:SYNT.0000012203.59944.c5	philosophy of science;philosophy of mind;indexicality;philosophy;epistemology;attribution;formal semantics;mathematics;semantics	AI	-13.4167541563392	4.421706914664047	41663
dd1cd74eaecead2dc771088920d43ca46ea3d43e	axiomatizing weak ready simulation semantics over bccsp	informatica	Ready simulation has proven to be one of the most significant semantics in process theory. It is at the heart of a number of general results that pave the way to a comprehensive understanding of the spectrum of process semantics. Since its original definition by Bloom, Istrail and Meyer in 1995, several authors have proposed generalizations of ready simulation to deal with internal actions. However, a thorough study of the (non-)existence of finite (in)equational bases for weak ready simulation semantics is still missing in the literature. This paper presents a complete account of positive and negative results on the axiomatizability of weak ready simulation semantics over the language BCCSP. In addition, this study offers a thorough analysis of the axiomatizability properties of weak simulation semantics.	algorithm;axiomatic system;bloom;computation;congruence of squares;entity–relationship model;observable;operational semantics;process calculus;simulation preorder;tracing (software);zeller's congruence	Luca Aceto;David de Frutos-Escrig;Carlos Gregorio-Rodríguez;Anna Ingólfsdóttir	2011		10.1007/978-3-642-23283-1_4	computer science;artificial intelligence;mathematics;operational semantics;algorithm	Logic	-10.669094051128774	14.972643920862145	41696
9ce5f4f3f222c5413149c88148adb30f20fd5af6	hol constant definition done right		This note gives a proposal for a simpler and more powerful replacement for the mechanisms currently provided in the various HOL implementations for defining new constants.	hol (proof assistant)	Rob Arthan	2014		10.1007/978-3-319-08970-6_34	logical connective;algorithm;implementation;type variable;computer science;hol	Theory	-13.595511577627747	16.118984363092487	42112
b056e71e79877c716bfb83d2873cb47a4a884ebd	self-reference in arithmetic ii	logic;self reference;intensionality;intentsionality;philosophy;arithmetization;mathematics miscellaneous	In this sequel to Self-reference in arithmetic I we continue our discussion of the question: What does it mean for a sentence of arithmetic to ascribe to itself a property? We inves- tigate how the properties of the supposedly self-referential sentences depend on the chosen coding, the formulae expressing the properties and the way a fixed point for the expressing formulae are obtained. In this second part we look at some further examples. In particular, we study sentences apparently expressing their Rosser-provability, their own � 0 n-truth or their own � 0-truth. Finally we offer an assessment of the results of both papers. This is the second part of a two-part paper. In the first part Self-reference in arithmetic I we asked what it means for a sentence of arithmetic to ascribe a property to itself. In this first part we then focused on the property of provability in a given artihmetical system. In this sequel we look at further properties such as Rosser-provability, � n-truth andn-truth. To facilitate referencing of previous definitions and results, sections are numbered con- secutively through both parts. When we refer to definitions or results in the first part, we only provide the section number without indicating that they are found in the first part. This second part presupposes acquaintance with the first part. §7. Further examples for the intensionality of self-reference. Lob's theorem has attention drawn away from the problem of the intensionality of self-reference: a criterion such as the Kreisel-Henkin Criterion for self-reference isn't required to answer Henkin's question for the canonical provability predicate because - under reasonable assumptions on the theory - all fixed points of the standard provability predicate are provable and thus provably equivalent. Of course, Lob's theorem, that is, Theorem 5.13, which eliminates all intensionality from self-reference, applies only to certain predicates, most notably, to the canonical prov- ability predicate. For other formulae - whether they are supposed to express provability or another property - we cannot expect something analogous. As we have seen, noncanonical provability predicates like BewII(x) are susceptible to intensionality phenomena and their fixed points can vary in their properties, even if they satisfy the Kreisel-Henkin Criterion for self-reference. We shall now look at further formulae that lend themselves to questions similar to Henkin's question about provability. We look first at Rosser provability and then at partial truth predicates.	self-reference	Volker Halbach;Albert Visser	2014	Rew. Symb. Logic	10.1017/S175502031400029X	arithmetic;philosophy;epistemology;computer science;mathematics;logic;algorithm	Logic	-11.840487987548435	5.515822597275312	42138
4c39db08493ef65fe27787cb23f29bd52e3ae632	space in monoidal categories		The category of Hilbert modules may be interpreted as a naive quantum field theory over a base space. Open subsets of the base space are recovered as idempotent subunits, which form a meet-semilattice in any firm braided monoidal category. There is an operation of restriction to an idempotent subunit: it is a graded monad on the category, and has the universal property of algebraic localisation. Spacetime structure on the base space induces a closure operator on the idempotent subunits. Restriction is then interpreted as spacetime propagation. This lets us study relativistic quantum information theory using methods entirely internal to monoidal categories. As a proof of concept, we show that quantum teleportation is only successfully supported on the intersection of Alice and Bob’s causal future.		Pau Enrique Moliner;Chris Heunen;Sean Tull	2017	CoRR	10.4204/EPTCS.266.25	symmetric monoidal category;discrete mathematics;topology;closed monoidal category;higher category theory;pure mathematics;mathematics;enriched category;categorical quantum mechanics;algebra	Logic	-7.140773759680907	11.623653660612462	42477
e713e586b2c899e8615185a3fee340e25470bb3a	an abductive approach to disjunctive logic programming	disjunctive programming;proof theory;nonmonotonic reasoning;abductive reasoning;query answering;disjunctive logic programming	Nonmonotonic reasoning has been explored as a form of abductive reasoning where default assumptions are treated as abductive hypotheses. While the semantics and proof theories under this approach have been studied extensively , the question of how disjunctive programs may be used to reason abductively has rarely been investigated. At the center of the question is how to embed disjunctive reasoning into that of negation-as-failure. A more concrete question is about whether the elegant abductive proof procedure by Eshghi and Kowalski can be extended to answer queries for disjunctive programs, and if yes, what is the semantics that such an extended procedure computes. In this paper we answer these questions by formulating a semantics, the regular extension semantics, for disjunctive programs, and by presenting a sound and complete extension of the Eshghi-Kowalski procedure , called disjunctive EK procedure, for query answering with respect to ground disjunctive programs under this semantics.	abductive logic programming;abductive reasoning;disjunctive normal form;negation as failure;non-monotonic logic;stable model semantics;theory	Jia-Huai You;Li-Yan Yuan;Randy Goebel	2000	J. Log. Program.	10.1016/S0743-1066(99)00074-6	natural language processing;abductive reasoning;stable model semantics;computer science;artificial intelligence;theoretical computer science;non-monotonic logic;proof theory;mathematics;disjunctive syllogism;algorithm;abductive logic programming	AI	-17.245905822002868	8.763781624304025	42545
d6bed821605994d28d8d905ce91f67a97e762956	an application of information theory to the problem of the scientific experiment	inductive logic;bea;empiricism;experience;confirmation induction;logique inductive;theorie scientifique;empirisme;generalisation;induction;probabilites;entropie;asymptotic properties;entropy;probabilities;elimination;generalization;information;information theory;scientific theory	There are two basic approaches to the problem of induction:the empirical one, which deems that the possibility of induction depends on how theworld was made (and how it works) and the logical one, which considers the formation(and function) of language. The first is closer to being useful for induction, whilethe second is more rigorous and clearer. The purpose of this paper is to create an empiricalapproach to induction that contains the same formal exactitude as the logical approach.This requires: (a) that the empirical conditions for the induction are enunciatedand (b) that the most important results already obtained from inductive logic are againdemonstrated to be valid. Here we will be dealing only with induction by elimination,namely the analysis of the experimental confutation of a theory. The result will bea rule of refutation that takes into consideration all of the empirical aspect of theexperiment and has each of the asymptotic properties which inductive logic has shown tobe characteristic of induction.	emoticon;experiment;inductive reasoning;information theory;mathematical induction	Massimiliano Badino	2004	Synthese	10.1023/B:SYNT.0000031325.69601.af	generalization;entropy;epistemology;information theory;mathematics;algorithm;statistics	AI	-12.003850314791885	4.579785362430589	42627
42c179064f8c990ba3473ba72d8eb5950962d38d	equations on trees		We introduce the notion of equation on trees, generalizing the corresponding notion for words, and we develop the rst steps of a theory of tree equations. The main result of the paper states that, if a pair of trees is the solution of a tree equation with two indeterminates, then the two trees are both powers of the same tree. As an application, we show that a tree can be expressed in a unique way as a power of a primitive tree. This extends a basic result of combinatorics on words to trees. Some open problems are nally proposed.	graph coloring;theory	Sabrina Mantaci;Antonio Restivo	1996		10.1007/3-540-61550-4_169	binary tree;discrete mathematics;combinatorics on words;combinatorics;computer science;generalization	Theory	-4.7143636644488	16.489388121016454	42632
9b70f7f91fe8b76bae99f26de8e3f27f23a75670	the prague seminar of applied mathematical logic and its work on fuzzy logic	fuzzy logic		fuzzy logic	Petr Hájek;Dagmar Harmancová	1996	Fuzzy Sets and Systems	10.1016/0165-0114(96)87707-4	fuzzy logic;dynamic logic;t-norm fuzzy logics;fuzzy electronics;computer science;artificial intelligence;computational logic;mathematics;algorithm	Logic	-13.157844888534415	11.279117164278306	42705
ce2efa434dce7eb22e92895bfd0f419de35d0554	order types of ordinals in models of set theory		An ordinal in a model of set theory is truly countable if its set of predecessors is countable in the real world. We classify the order types of the sets of truly countable ordinals. Models with indiscernibles and other related results are	set theory	John E. Hutchinson	1976	J. Symb. Log.		urelement;zermelo–fraenkel set theory;effective descriptive set theory;ordinal number;universal set;kripke–platek set theory;hyperarithmetical theory;mathematical analysis;discrete mathematics;morse–kelley set theory;finite set;class;inner model theory;general set theory;set-theoretic definition of natural numbers;scott–potter set theory;mathematics;compact element;equinumerosity;empty set;infinite set;ordinal arithmetic;set theory;algebra	Logic	-6.953142631965952	12.862061853377437	42805
15c64f2b59f82fb54d837f6c6a73cb048b67bfe3	conditional equational theories and complete sets of transformations	logic programs;higher order logic;equational logic	The idea to combine the advantages of function and logic programming has attracted many researches. Their work ranges from the integration of existing languages over higher-order logic to equational logic languages, where logic programs are augmented with equational theories. Recently, it has been proposed to handle those equational theories by complete sets of transformations. These transformations are extensions of the rules introduced by Herbrand and later used by Martelli and Montanari to compute the most general uniier of two expressions. We generalize this idea to complete sets of transformations for arbitrary conditional equational theories, the largest class of equational theories that admit a least Herbrand model. The completeness proof is based on the observation that each refutation with respect to linear paramodulation and reeection can be modelled by the transformations. As certain conditions imposed on an equational theory restrict the search space generated by paramodulation and reeection we can easily reene our transformations { due to the completeness proof { if the conditional equational theory is ground connuent or canonical.	logic programming	Steffen Hölldobler	1990	Theor. Comput. Sci.	10.1016/0304-3975(90)90063-N	discrete mathematics;higher-order logic;equational logic;computer science;mathematics;programming language;algorithm;algebra	PL	-14.782904073356478	17.92624390379034	43056
de4ab6c67b7a61bb532beb28db1a4dff4f01938c	formalising pfsql queries using łπ fuzzy logic	computacion informatica;ciencias basicas y experimentales;matematicas;grupo a	Using the concept of a generalised priority constraint satisfaction problem, we previously found a way to introduce priority queries into fuzzy relational databases. The results were PFSQL (Priority Fuzzy Structured Query Language) together with a database independent interpreter for it. In an effort to improve the performance of the resolution of PFSQL queries, the aim of the current paper is to formalise PFSQL queries by obtaining their interpretation in an existing fuzzy logic. We have found that the ŁI     logic provides sufficient elements. The SELECT line of PFSQL queries is semantically a formula of some fuzzy logic, and we show that such formulas can be naturally expressed in a conservative extension of the ŁI     logic. Furthermore, we prove a theorem that gives the PSPACE containment for the complexity of finding a model for a given ŁI     logic formula.	fuzzy logic	Aleksandar Perovic;Aleksandar Takaci;Srdjan Skrbic	2012	Mathematical Structures in Computer Science	10.1017/S0960129511000673	fuzzy logic;dynamic logic;discrete mathematics;fuzzy mathematics;fuzzy classification;fuzzy number;theoretical computer science;mathematics;programming language;algorithm	Logic	-16.646999757292573	12.923738927300345	43069
30e334d4948d07d510490a8200260e6e97d005cf	on the logical implication of multivalued dependencies with null values	implication;relational database;inference rule;incomplete information;null values;axiomatisation;multivalued dependency;database theory	The implication of multivalued dependencies (MVDs) in relational databases has originally been defined in the context of some fixed finite universe (Fagin 1977, Zaniolo 1976). While axiomatisability, implication problem and many design problems have been intensely studied with respect to this notion, almost no research has been devoted towards the alternative notion of implication in which the underlying universe of attributes is left undetermined (Biskup 1980). A milestone in the advancement of database systems was the permission of null values in databases. In particular, many achievements on MVDs have been extended to encompass incomplete information. Multivalued dependencies with null values (NMVDs) were defined and axiomatised in (Lien 1982). The definition of NMVDs is again based on a fixed underlying universe of attributes, and any complete set of inference rules requires therefore some version of the complementation rule. In this paper we show that the axiomatisation in (Lien 1982) does not reflect the fact that the complementation rule is merely a means to achieve database normalisation. Moreover, we provide an alternative axiomatisation for NMVDs that does reflect this property. We also suggest an alternative notion for the implication of NMVDs in which the underlying universe is left undetermined, and propose several sound and complete sets of inference rules for this notion. Moreover, a correspondence between (minimal) axiomatisations in fixed universes that do reflect the property of complementation and (minimal) axiomatisations in undetermined universes is shown.	axiomatic system;database model;database normalization;functional programming;multivalued dependency;possible world;relational database;rule 90;undefined behavior;weak value	Sebastian Link	2006			database theory;discrete mathematics;relational database;computer science;mathematics;complete information;algorithm;multivalued dependency;rule of inference	DB	-16.674670360199826	8.791968091802062	43183
8f44300206fed12fd62f391c62734b6420c96024	synthesis of transition systems from quantum logics			quantum	Luca Bernardinello;Carlo Ferigato;Lucia Pomello;Adrián Puerto Aubel	2017	Fundam. Inform.	10.3233/FI-2017-1550	discrete mathematics;calculus;theoretical computer science;formal science;mathematics;quantum;computational number theory	Theory	-11.21181291708173	11.158150873468015	43189
3163d6401889310af7e5c7dfb647ef7c650c95a5	long distance indefinites and choice functions		Indefinites are notorious for permitting long distance (LD) interpretations, that is, for exhibiting the apparent ability to take scope out of syntactic islands. This article reviews a family of approaches to LD interpretations that appeal to the notion of a choice function. Within this family, we will distinguish two branches. The proposals in one branch take their cue from Discourse Representation Theory (Heim 1982; Kamp 1981), adopting the view that the existential import of indefinites can be separated from the semantics of the indefinite article. Proposals in the second branch capitalize on another striking feature of indefinites, namely the availability of so-called functional interpretations (e.g. Groenendijk and Stokhof 1984; Hintikka 1986). One main result reported is that LD interpretations come in two different kinds, corresponding to the two choice function approaches reviewed. Another result is that existential quantification over choice functions comes at a cost: to prevent the derivation of unattested interpretations, certain restrictions on the scope of this quantification must be stipulated.	existential quantification	Bernhard Schwarz	2011	Language and Linguistics Compass	10.1111/j.1749-818X.2011.00315.x	psychology;communication;algorithm	PL	-11.705742001681626	5.890824577756691	43238
2c5b9a17d2d72bc01d27a156ce7ca466f0e08a39	a simple calculus of exception handling	exception handling;type system	We introduce a simply-typed λ-calculus (λexn) featuring an ML-like exception handling mechanism. This calculus, whose type system corresponds to classical logic through the Curry-Howard isomorphism, satifies several interesting properties: among other, Church-Rosser, subject reduction, and strong-normalisation. Moreover, its typing system ensures that the reduction of well-typed expressions cannot give rise to uncaught exceptions.	church–rosser theorem;curry;curry–howard correspondence;exception handling;normalization property (abstract rewriting);simply typed lambda calculus;subject reduction;type system	Philippe de Groote	1995		10.1007/BFb0014054	exception handling;real-time computing;type system;computer science;programming language;algorithm	Logic	-12.541848244933114	17.709708274354927	43255
a9312b4cce2440421d26c99c14128c421b1eb16e	paris-harrington principles, reflection principles and transfinite induction up to ε0	logic;reflection principle		transfinite induction	Reijiro Kurata	1986	Ann. Pure Appl. Logic	10.1016/0168-0072(86)90072-2	mathematical analysis;calculus;mathematics;reflection principle;logic	Logic	-9.455445725911437	12.276248755391741	43283
99e793f5f7d9f9171e639aa0de820abc0a661eaa	adjectival vagueness in a bayesian model of interpretation		We derive a probabilistic account of the vagueness and context-sensitivity of scalar adjectives from a Bayesian approach to communication and interpretation. We describe an iterated-reasoning architecture for pragmatic interpretation and illustrate it with a simple scalar implicature example. We then show how to enrich the apparatus to handle pragmatic reasoning about the values of free variables, explore its predictions about the interpretation of scalar adjectives, and show how this model implements Edgington’s (Analysis 2:193–204,1992, Keefe and Smith (eds.) Vagueness: a reader,  1997) account of the sorites paradox, with variations. The Bayesian approach has a number of explanatory virtues: in particular, it does not require any special-purpose machinery for handling vagueness, and it is integrated with a promising new approach to pragmatics and other areas of cognitive science.	bayesian network;cognition;cognitive science;context-sensitive grammar;free variables and bound variables;game theory;iteration;moravec's paradox;natural language understanding;relevance;scott continuity;semantics (computer science);speaker recognition;vagueness	Daniel Lassiter;Noah D. Goodman	2015	Synthese	10.1007/s11229-015-0786-1	epistemology;mathematics;algorithm	NLP	-14.452967402864543	4.429213085334966	43471
6a76639780771e783083d95e46a2c873e32dd23c	on an axiomatic system for the logic of linearly ordered bci-matrices	bci system;03b52;fuzzy logic;03b47;03b22;weakly implicative logic;fbci system	The logic FBCI given by linearly ordered BCI-matrices is known not to be an axiomatic extension of the well-known BCI logic. In this paper we axiomatize FBCI by adding a recursively enumerable set of schemes of inference rules to BCI and show that there is no finite axiomatization for FBCI.	axiomatic system;brain–computer interface	San-Min Wang;Daowu Pei	2012	Arch. Math. Log.	10.1007/s00153-011-0265-4	fuzzy logic;discrete mathematics;mathematics;algorithm	Logic	-11.51103870708065	12.761343163484355	43623
fb9c127ab4d6c5c1ead59f7cf670659df7ec45fd	stable models and their computation for logic programming with inheritance and true negation	complexite calcul;modelo determinista;stable models;semantics;logical programming;modele deterministe;computational method;raisonnement;semantica;semantique;area of interest;complejidad computacion;modelo logico;programmation logique;computational complexity;stable model semantics;razonamiento;backtracking;logic model;logic programs;reasoning;deterministic model;programacion logica;defeasible reasoning;modele logique	Previous researchers have proposed extensions of logic programming to deal with true negation and defeasible reasoning. Ordered Logic (OL) achieves both such goals by allowing rules with negated heads in the context of an inheritance hierarchy. As a result, OL is inherently nonmonotonic. Another area of interest in logic programming is that dealing with the semantics of negation. Recent research focuses on both declarative and constructive characterizations of stable models. A peculiarity of this semantics is that a program may have several alternative models (even none), each corresponding to a possible view of the world. This endows logic programming with the power to express don't-care nondeterminism in a purely declarative framework. This paper describes a stable model semantics (SMS OL ) and its computation for ordered logic programs. SMS OL  is given both in a model-theoretic and a constructive fashion. Based on the latter, an effective method is proposed for computing OL stable models. An interesting aspect of the proposed approach is that ordered logic programming can simulate Datalog under the total stable model semantics. This clearly provides solidity to our proposal. Moreover, the SMS OL  computation method is an effective way to compute the stable model semantics of Datalog programs. The computational complexity of the main reasoning tasks in SMS OL  is also investigated.	computation;logic programming	Francesco Buccafurri;Nicola Leone;Pasquale Rullo	1996	J. Log. Program.	10.1016/0743-1066(95)00076-3	horn clause;stable model semantics;computer science;negation as failure;artificial intelligence;theoretical computer science;deterministic system;mathematics;semantics;programming language;computational complexity theory;well-founded semantics;logic programming;defeasible reasoning;reason;algorithm;backtracking	Logic	-17.67667837095044	11.301980125540105	43677
4d41b38905953fb8ae64050ce2ac90d56da5e91e	the logic of either-or				Milton Fisk	1965	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093958075	predicate logic;dynamic logic;zeroth-order logic;description logic;logic optimization;diode–transistor logic;higher-order logic;logic gate;logic family;many-valued logic;intermediate logic;computational logic;sequential logic;substructural logic;multimodal logic;philosophy of logic;autoepistemic logic	Crypto	-14.140494998684352	13.317530599278001	43858
1f0df627588b740a0a450c0fda987305bc14aa20	a finite model property for rmimin	relevance logic;relevant disjunction lattice;deducibility problems;mingle;residuation;finite model property;finite embeddability property	Abstract#R##N##R##N#It is proved that the variety of relevant disjunction lattices has the finite embeddability property. It follows that Avron's relevance logic RMImin has a strong form of the finite model property, so it has a solvable deducibility problem. This strengthens Avron's result that RMImin is decidable. (© 2006 WILEY-VCH Verlag GmbH & Co. KGaA, Weinheim)	finite model property	Ai-ni Hsieh;James G. Raftery	2006	Math. Log. Q.	10.1002/malq.200610018	combinatorics;discrete mathematics;relevance logic;epistemology;mathematics;algebra	Logic	-8.701700073912896	13.271439023352029	43865
834af966679b81e49b0a47ef5576a128e4f57b7c	toward a model theory of actions: how agents do it in branching time	formal models;time;branching time temporal logics;intelligent agent;actions;technical report;model theory	A clear understanding and formalization of actions is essential to computing, and especially so to reasoning about and constructing intelligent agents. Several approaches have been proposed over the years. However, most approaches concentrate on the causes and eeects of actions, but do not give general characterizations of actions themselves. A useful formalization of actions would be based on a general, possibly nondiscrete, model of time that allows branching (to capture agents' choices). A desirable formalization would also allow actions to be of arbitrary duration and would permit multiple agents to act concurrently. We develop a branching-time framework that allows great exibility in how time and action are modeled. We motivate and formalize several coherence constraints on our models, which capture some nice intuitions and validate some useful inferences relating actions with time.	concurrent computing;intelligent agent	Munindar P. Singh	1998	Computational Intelligence	10.1111/0824-7935.00064	computer science;artificial intelligence;technical report;intelligent agent;algorithm;model theory	AI	-18.35836713890706	4.185240151117092	44081
b84ac42f528c64573c3fca00dc018e797768b6d0	solving qbf by combining conjunctive and disjunctive normal forms	disjunctive normal form		disjunctive normal form;true quantified boolean formula	Lintao Zhang	2006			discrete mathematics;negation normal form;machine learning;artificial intelligence;computer science;conjunctive normal form;decision list;disjunctive normal form	AI	-16.084370390453643	13.513846549315007	44098
5b237648c9a83f33ba8e03aa753de140c49751fc	canonicalization in the prikl reasoner	reasoner;canonical representation;prover	–Many objects in the PrIKL Reasoner have a canon-ical representation. This representation and its implementation required a number of choices with ramifications. This paper describes the choices, their consequences, and some of the more interesting implementation details. This information will be helpful in understanding the implementation of PrIKL, particular for implementors of PrIKL plugins. It may also be helpful in designing systems with similar repre-sentational problems. I. BACKGROUND PrIKL 1 is software to reason with logical statements using a hybrid of a natural deduction system and a production system [1][2]. PrIKL is based on the IKL knowledge representation language and Common Logic family of logic languages [3][4]. PrIKL includes additions to first-order classical logic of sequence variables and a way to reason about propositions. PrIKL is implemented in Java 2 [8]. PrIKL is being developed as part of a semantic validation suite for information flows in manufacturing production networks. The development and production of complex products demands the cooperation of engineering and operations activities across a network of companies , and the successful exchange of information among them. Standards assist in the mechanics of information transfer but do not ensure fitness for purpose: consistency, completeness, and timeliness of the information. The semantic validation suite will enable testing for fitness of purpose by translating the content of messages, metadata about the messages, as well as background information into an IKL knowledge base. II. INTRODUCTION We intuitively think of logical statements as objects that have structure. For example, a quantified sentence has a quantifier, binding variable, and a sentence. Each of these in turn have structure. For example, the sentence may itself be a quantified sentence. Internally, PrIKL generates new sentences and performs tasks such as comparisons to existing sentences and unification with other sentences. Conceivably, these tasks could all be accomplished using this structured representation. For example, a function to do comparison would look like: Boolean b = equal(Sentence s1, Sentence s2); At a minimum,this type of test for equality would require a parallel tree traversal as the objects in both sentences are compared. However, as the ratio of comparison tests to object modifications grows, repeated tree traversal of unchang-ing trees becomes expensive. An efficient representation is needed. We address this with a string representation that effectively appears to be an IKL string representation. An additional requirement is the ability to maintain collections of sentences. The collections must provide a way …	analysis of algorithms;central processing unit;common logic;first-order predicate;formal system;java version history;knowledge base;knowledge representation and reasoning;logic family;name binding;natural deduction;plug-in (computing);production system (computer science);quantifier (logic);semantic reasoner;sentence boundary disambiguation;test suite;tree traversal;unification (computer science);ical	Don Libes;Antoine Gerardin;Severin Tixier;Fabian Neuhaus	2013	JSW		canonical form;artificial intelligence;theoretical computer science;gas meter prover;algorithm	AI	-17.813561464484327	17.299633205781255	44221
7ef30b5a86592d087b76811ac3a4f4de69d5bbdb	a single-type logic for natural language	logic;metaphysics and philosophy of language;munich center for mathematical philosophy mcmp;ddc 100;ddc 160	In this article, we develop a single-type logic for natural language along the lines of Partee (2009, Snippets, vol. 20)). This logic, called `TY30' takes objects of different syntactic categories and model-theoretic domains to be structured by the same logical type. Its language, a variant of the simply typed lambda calculus, is interpreted in partial Henkin models. We give a Gentzen-style sequent calculus for TY30 and prove its soundness and completeness with respect to the class of models. To show the logic's application adequacy, we provide TY30 a semantics for a standard fragment of English. Partial possible worlds, which are identified with elements in the logic's base domain, enable us to obtain the standard modal operators.	natural language	Kristina Liefke	2015	J. Log. Comput.	10.1093/logcom/exs074	predicate logic;dynamic logic;zeroth-order logic;linear logic;description logic;higher-order logic;philosophy;epistemology;many-valued logic;computer science;intermediate logic;artificial intelligence;computational logic;mathematics;proof calculus;linguistics;minimal logic;signature;curry–howard correspondence;programming language;natural deduction;logic;term logic;multimodal logic;second-order logic;algorithm;philosophy of logic;rule of inference	Logic	-13.663266991137721	12.30666660020922	44272
aeafe96d90d679d5bcf4d5412730ec7bc9e010eb	simple proofs of characterizing strong normalization for explicit substitution calculi	sequent calculus;strong normalization;explicit substitution;intersection types	We present a method of lifting to explicit substitution calculi some characterizations of the strongly normalizing terms of λ-calculus by means of intersection type systems. The method is first illustrated by applying to a composition-free calculus of explicit substitutions, yielding a simpler proof than the previous one by Lengrand et al. Then we present a new intersection type system in the style of sequent calculus, and show that it characterizes the strongly normalizing terms of Dyckhoff and Urban’s extension of Herbelin’s explicit substitution calculus.	explicit substitution;lambda calculus;lambda lifting;normalization property (abstract rewriting);sequent calculus;type system	Kentaro Kikuchi	2007		10.1007/978-3-540-73449-9_20	combinatorics;discrete mathematics;cut-elimination theorem;computer science;mathematics;programming language;sequent calculus;natural deduction	Logic	-11.52819205376087	17.148937649512575	44330
a2d2c06a081d514bf3c68b6b6d339a7fb079d570	finite models for inequations		By inequation is meant an expression of the form, where a, b are terms taken from any first-order formal language. An inequation is consistent iff it cannot be brought to the form, by substitution.		M. D. Gladstone	1966	J. Symb. Log.		inequation;discrete mathematics;algebra;of the form;mathematics;formal language	Logic	-8.08371020633067	14.831004942726707	44339
490c5468a0b1b3fb22f72030c1bafb7e0ca09fce	a philosophical remark on gödel's unprovability of consistency proof			gödel	Francesca Rivetti Barbò	1968	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093893353	proof sketch for gödel's first incompleteness theorem;dialectica interpretation;discrete mathematics;mathematics;algorithm;original proof of gödel's completeness theorem	Crypto	-11.575618115221937	11.116771451290775	44541
8713a51ec9596a6d9af7a97c84d303da698df47b	semantics of trust	various interpretation;specific existing interpretation;relevant fact;epistemic semantics;agent trust	The meaning assigned to the word ‘trust’ is diverse. We present a formalism that allows various interpretations of trust. To this end, we introduce terms that specify the observations of agents, called connections. Then we apply epistemic semantics to reason about the knowledge of agents. We allow specifications of interpretations of trust in terms of facts, and analyze whether agents know the relevant facts. If agents know that a target is trustworthy under an interpretation, that agent trusts the target. We illustrate the formalism on three specific existing interpretations.	axiomatic system;expect;formal system;idempotence;natural language;pretty good privacy;public-key cryptography;recommender system;semantics (computer science);trust (emotion);turing completeness;value (ethics);web of trust	Tim Muller	2010		10.1007/978-3-642-19751-2_10	mathematics;algorithm	AI	-16.412450344332793	4.206735733248293	44745
1e882c101488a851fa5b778e15cfd42227daf44e	scope as syntactic abstraction		What is the logic of scope? By “scope”, I mean scopetaking in natural languages such as English, as illustrated by the sentence Ann saw everyone. In this example, the quantifier denoted by everyone takes scope over the rest of the sentence, that is, it takes the denotation of the rest of the sentence as its semantic argument: everyone(λx.saw(x)(ann)). The answer I will give here will be to provide a substructural logic whose two modes are related by a single structural postulate. This postulate can be interpreted as constituting a kind of lambda-abstraction over structures, where the abstracted structures are interpreted as delimited continuations. I discuss soundness and completeness results, as well as cut elimination. I also compare the logic to a number of alternative approaches, including the standard technique of Quantifier Raising, and mention applications to scope ambiguity and	delimited continuation;delimiter;metalinguistic abstraction;nl (complexity);natural language;quantifier (logic)	Chris Barker	2014		10.1007/978-3-662-48119-6_14	discrete mathematics;substructural logic;denotation;syntax;ambiguity;delimited continuation;mathematics;soundness;abstraction;sentence	AI	-11.875796957590023	7.960981868766104	44843
ecc00d168bb273e2e9c408a3b6156fc4769d2545	semisimple varieties of modal algebras	keywords modal logic;logic;journal article;mathematical logic and foundations;philosophy;computational linguistics;semisimple varieties	In this paper we show that a variety of modal algebras of finite type is semisimple iff it is discriminator iff it is both weakly transitive and cyclic. This fact has been claimed already in [4] (based on joint work by the two authors) but the proof was fatally flawed.	modal logic;vertex-transitive graph	Tomasz Kowalski;Marcus Kracht	2006	Studia Logica	10.1007/s11225-006-8308-2	dynamic logic;s5;normal modal logic;topology;philosophy;epistemology;computational linguistics;axiom s5;pure mathematics;mathematics;interior algebra;accessibility relation;logic;algebra	Logic	-11.85364702115699	11.726450935942665	44893
43ca02e406891b97918eefc43f78beecf9936de5	what is in a step: new perspectives on a classical question	canonical interpretation;synchronous language statecharts;past decade;declarative step semantics;logic programming;game-theoretic characterisations;new perspective;synchronous language;classical question;global consistency;amir pnueli;early reminiscence	In their seminal 1991 paper “What is in a Step: On the Semantics of Statecharts”, Pnueli and Shalev showed how, in the presence of global consistency and while observing causality, the synchronous language Statecharts can be given coinciding operational and declarative step semantics. Over the past decade, this semantics has been supplemented with order-theoretic, denotational, axiomatic and game-theoretic characterisations, thus revealing itself as a rather canonical interpretation of the synchrony hypothesis. In this paper, we survey these characterisations and use them to emphasise the close but not widely known relations of Statecharts to the synchronous language Esterel and to the field of logic programming. Additionally, we highlight some early reminiscences on Amir Pnueli’s contributions to characterise the semantics of Statecharts.	causality;esterel;game theory;logic programming	Willem P. de Roever;Gerald Lüttgen;Michael Mendler	2010		10.1007/978-3-642-13754-9_15	computer science;theoretical computer science;communication;algorithm	Logic	-15.142557405397563	7.874962713581007	45062
a674b157be6ecc147f1625538a87f752526b82ba	belnap's four-valued logic and de morgan lattices			de morgan's laws;four-valued logic;morgan	Josep Maria Font	1997	Logic Journal of the IGPL	10.1093/jigpal/5.3.1-e	artificial intelligence;mathematics;algorithm	Logic	-12.64350350973874	11.804837641826722	45356
0165c10e921308a474e2cf72ed772ee0f6fd43c7	sat-based answer set programming	answer sets;answer set programming propositional satisfiability sat asp;asp;answer set programming;bepress selected works;answer set solvers;sat;logic programming;decision procedure;dissertation;logic programs;answer set programming propositional satisfiability sat asp dissertation;sat solver;sat solvers;smodels;propositional satisfiability;cmodels	The relation between answer set programming (ASP) and propositional satisfiability (SAT) is at the center of many research papers, partly because of the tremendous performance boost of SAT solvers during last years. Various translations from ASP to SAT are known but the resulting SAT formula either includes many new variables or may have an unpractical size. There are also well known results showing a one-to-one correspondence between the answer sets of a logic program and the models of its completion. Unfortunately, these results only work for specific classes of problems. In this paper we present a SAT-based decision procedure for answer set programming that (i) deals with any (non disjunctive) logic program, (ii) works on a SAT formula without additional variables, and (iii) is guaranteed to work in polynomial space. Further, our procedure can be extended to compute all the answer sets still working in polynomial space. The experimental results of a prototypical implementation show that the approach can pay off sometimes by orders of magnitude.	answer set programming;boolean satisfiability problem;closing (morphology);decision problem;disjunctive normal form;heuristic (computer science);logic programming;one-to-one (data model);pspace;polynomial;solver;stable model semantics	Enrico Giunchiglia;Yuliya Lierler;Marco Maratea	2004			computer science;artificial intelligence;answer set programming;boolean satisfiability problem;logic programming;algorithm	AI	-18.67153290516733	14.670282195555252	45386
16bf482a27fc2b9cb52502acf56522c467737cbf	prime implicates and prime implicants in modal logic	modal logic	The purpose of this paper is to examine how the propositional notions of prime implicates and prime implicants might be appropriately extended to the modal logic K. We begin the paper by considering a number of potential definitions of clauses and terms for K. The different definitions are evaluated with respect to a set of syntactic, semantic, and complexity-theoretic properties characteristic of the propositional definition. We then compare the definitions with respect to the properties of the notions of prime implicates and prime implicants that they induce. While there is no definition which perfectly generalizes the propositional notion, we show that there does exist one definition which satisfies many of the desirable properties of the propositional case. In the second half of the paper, we consider the computational properties of this definition. To this end, we provide sound and complete algorithms for generating and recognizing prime implicates, and we prove the prime implicate recognition task to be Pspace-complete. While the paper focusses on the logic K, all of our results hold equally well for multi-modal K and for concept expressions in the description logic ALC.	algorithm;computation;description logic;modal logic;norm (social);pspace-complete;theory	Meghyn Bienvenu	2007			modal logic;computer science;algorithm	AI	-14.09275512676703	8.345024399659973	45473
981a4550fecf1640de40e557237a6e03f9d3d871	sequent calculi for the classical fragment of bochvar and halldén's nonsense logics		In this paper sequent calculi for the classical fragment (th at is, the conjunction-disjunction-implication-negation fragment) of the nonsense logics B3, introduced by Bochvar, and H3, introduced by Halldén, are presented. These calculi are obtained by rest ricting in an appropriate way the application of the rules of a sequent calculus for classical proposition al logicCPL. The nice symmetry between the provisos in the rules reveal the semantical relationshi p between these logics. The Soundness and Completeness theorems for both calculi are obtained, as well as the respective Cut elimination theorems.	sequent calculus	Marcelo E. Coniglio;María I. Corbalán	2012		10.4204/EPTCS.113.12	discrete mathematics;mathematics;sequent;algorithm	AI	-9.701948930742303	12.9218377686892	45544
99673e81dd20a0d61bf0b85290565922f41c5573	proceedings seventh international workshop on classical logic and computation, cl&c 2018, oxford (uk), 7th of july 2018		This special issue cover the seventh and last conference of the CL&C series, started in 2006 in San Servolo. Topics are the computational content of logics between intuitionistic logic and classical logic, through normalization, and a new topic, cyclic proofs and the complexity of checking the correctness of a cyclic proof. Accepted papers include an empirical comparison of time consumption of different normalization algorithms, and new reductions sets for several extensions of intuitionistic logic having the Herbrand disjunction property. Another paper provides a reduction set for admissible rules for intuitionistic logic. A paper describes a subset of cyclic proofs having a polynomial-time algorithm checking correctness.	algorithm;computation;correctness (computer science);intuitionistic logic;polynomial;time complexity	Stefano Berardi;Alexandre Miquel	2018	CoRR	10.4204/EPTCS.281		Logic	-10.073660227773487	14.955159879246608	45571
2991b8b5761a27af185a57209f18c9b80640dd7b	default logic as a query language	modelizacion;lenguaje programacion;base relacional dato;query language;entrada salida;sistema experto;syntax;programming language;complexite calcul;logique mathematique;diagnostic reasoning default logic query language nonmonotonic reasoning default query language relational database query languages finite relational databases second order logic nonmonotonic logics stable model semantics;circonscription;interrogation base donnee;interrogacion base datos;semantics;base connaissance;logica matematica;relational database;mathematical logic;syntaxe;semantica;semantique;circumscription;lenguaje interrogacion;query languages;input output;expressive power;modelisation;complejidad computacion;nonmonotonic reasoning;computational complexity;logic database languages relational databases nuclear magnetic resonance information retrieval artificial intelligence knowledge representation birds computational complexity;formal logic;base donnee relationnelle;langage programmation;base conocimiento;langage interrogation;relational databases;systeme expert;sintaxis;default logic;modeling;database query;relational databases nonmonotonic reasoning formal logic query languages;circonscripcion;entree sortie;knowledge base;expert system	Research in NMR has focused largely on the idea of representing knowledge about the world via rules that are generally true but can be defeated. Even if relational databases are nowadays the main tool for storing very large sets of data, the approach of using non-monotonic formalisms as relational database query languages has been investigated to a much smaller extent. In this work we propose a novel application of default logic by introducing a default query language (DQL) for nite relational databases, which is based on default rules. The main result of this paper is that DQL is as expressive as SO 98 , the existential universal fragment of second order logic. This result is not only of theoretical importance: We show queries {which are useful in practice{ that can be expressed with DQL and cannot with other query languages based on non-monotonic logics such as DATALOG : stable. Another result in this paper concerns the combined complexity of DQL, i.e., when it is assumed that the query is part of the input; for this problem, NEXPTIME NP-completeness is shown.	datalog;default logic;doctrine;nexptime;np-completeness;non-monotonic logic;query language;relational database	Marco Cadoli;Thomas Eiter;Georg Gottlob	1994	IEEE Trans. Knowl. Data Eng.	10.1109/69.599933	natural language processing;knowledge base;relational database;computer science;artificial intelligence;data mining;database;semantics;programming language;expert system;algorithm;query language	DB	-18.28316637151098	10.636490089019667	45586
b97a6ad649ad3b922f5fd263d7ccfeff5b338e76	on the complexity of symbolic verification and decision problems in bit-vector logic		This paper is a survey of recent results on the computational complexity of bit-vector logic, in particular on the complexity of decision problems encoded by bit-vector formulas. 1 Bit-vector logics have attracted significant interest by researchers in computer-aided verification and SMT. From a theory perspective, bit-vector logics are very succinct logics to express Boolean functions. In contrast to Boolean logic, BDDs, and QBFs, they are based on variables for bit-vectors rather than variables for individual bits. Thus, for instance x = y expresses that two bit-vectors x and y of bitwidth 32 are equal. Bit-vector operators are therefore defined for arbitrary bit-width n, for instance bitwise and/or/xor, shift operators, etc. This has important consequences: (1) a bitvector logic is given by a list of operators, (2) there is an infinite number of bit-vector logics, and (3) there is no finite functionally complete set of operators from which all other operators can be defined. Moreover, it is evident that the encoding of scalars such as the number 32 in the above simple example is related to the complexity of bit-vector logic. We are focusing on the quantifier-free bit-vector logic (QF BV), cf. the SMT-LIB format [6] and the literature [7], [8], [9], [10], [11]. Basically, a QF BV formula contains bitvector variables and bit-vector constants, each of which is of a certain bit-width specified next to the variable resp. constant, and uses certain bit-vector operators whose semantics is a priori defined. For example, x 6= y ∧ ( x + y = x 1 ) is a QF BV formula with two variables x and y of bit-width 32, and operators for addition, shifting, and comparison. For a precise definition of QF BV, we refer the reader to [6], [11], [1]. Note that bit-vector formulas contain numerical information which is given by scalars. The most important example of a scalar is the bit-width of a bitvector. Another examples are the index and the size parameters for operators such as extensions and extraction. Our results demonstrate that the syntactic representation of the scalars has a crucial effect on the complexity. In previous work by some of the authors [2], [3], we investigated the complexity of satisfiability checking of bitvector formulas. For instance, we showed in [2] that satisfiability checking of QF BV is NP-complete resp. NEXPTIMEcomplete if unary resp. binary encoding of scalars is used and	best, worst and average case;binary file;bit array;bitwise operation;boolean algebra;complexity class;computational complexity theory;computer aided verification;decision problem;exclusive or;functional completeness;karp's 21 np-complete problems;logical connective;model checking;numerical analysis;quantifier (logic);satisfiability modulo theories;unary operation;worst-case complexity	Gergely Kovásznai;Helmut Veith;Andreas Fröhlich;Armin Biere	2014		10.1007/978-3-662-44465-8_41	discrete mathematics;theoretical computer science;computational logic;mathematics;multimodal logic;symbolic trajectory evaluation;algorithm;functional verification;descriptive complexity theory	Logic	-9.74929120534613	16.44229738961842	45589
130e8b6c245988f372b8b6ded75536068dd0863d	a note on parikh maps, abstract languages, and decision problems	decision problem	We consider formulas similar to Presburger formulas, but extended by allowing the predicate 1 (for divides), but not allowing universal quantification of the resulting expressions. The solution sets for such formulas are known to be not semilinear, in general. We show that some results concerning decidability questions for classes of languages with effectively constructible semilinear Par&h maps can be extended to languages whose effectively constructible Parikh maps are solutions to these new formulas, which we call “modular.” We suggest that modularity may offer a natural extension of semilinearity, in which many previously established results may remain valid.	commutation theorem;decision problem;formal language;map;presburger arithmetic;universal quantification	Alfred E. Borm;Louis E. Rosier	1985	Inf. Sci.	10.1016/0020-0255(85)90047-7	discrete mathematics;computer science;decision problem;mathematics;algorithm	Theory	-5.3765536399262865	17.8633551971316	45701
960af25c7c042c41a8771d466a83e5f08b457b81	proof documents for automated origami theorem proving	theorem proving;computational origami system;automated origami theorem;origami theorem;proof document;origami theorem proving;subsequent theorem proving;origami construction;entire process;proof certificate;whole process	A proof document for origami theorem proving is a record of entire process of reasoning about origami construction and theorem proving. It is produced at the completion of origami theorem proving as a kind of proof certificate. It describes in detail how the whole process of an origami construction and the subsequent theorem proving are carried out in our computational origami system. In particular, it describes logical and algebraic transformations of the prescription of origami construction into mathematical models that in turn become amenable to computation and verification. The structure of the proof document is detailed using an illustrative examples, which reveal the importance of such a document in the analysis of reasoning of origami theorem proving.	automated theorem proving;computation;linear algebra;mathematical model	Fadoua Ghourabi;Tetsuo Ida;Asem Kasem	2010		10.1007/978-3-642-25070-5_5	discrete mathematics;mathematics;proof complexity;algorithm	Logic	-18.08782019312036	17.847690866034885	45958
2e9c9b2cf3fa6d99383c5e4307435f1a9a30e651	chains of structurally complete predicate logics with the application of prucnal's substitution		Since deducibility rather than theoremhood is studied here, by logic L we mean a logical system L = 〈R,A〉 of rules R and axioms A. Equivalently, we may consider a consequence operation CnL (in the sense of A. Tarski) corresponding to L = 〈R,A〉. CnL coincides with the provability operation for 〈R,A〉; we will omit subscript in CnL and write Cn. The set of formulae provable in a logic L will be denoted by L, i.e. L = Cn(Ø). By a rule r we Received July 30, 1999 1991 AMS Subject Classification 03F03, 03B10, 03B55	carrier-to-noise ratio;formal system;provable security;vhdl-ams	Wojciech Dzik	2004	Reports on Mathematical Logic		discrete mathematics;predicate logic;combinatorics;predicate (grammar);mathematics	AI	-6.943496901705301	14.759147389335995	46060
75cebf662b4c38e9fd0d4980e06c320ce383110f	models for reasoning under uncertainty (abstract)	first order predicate logic;prolog;logic data base;data base view;reasoning under uncertainty;query by example;group	Richard E. Neapolitan Associate Professor of Information Science University of l~ortheastern I l l i no i s Chicago, I l l i no i s (312) 583-4050, ext. 655	ext js javascript framework;information science	Richard E. Neapolitan	1986		10.1145/324634.325143	predicate logic;dynamic logic;description logic;higher-order logic;computer science;query by example;theoretical computer science;non-monotonic logic;predicate functor logic;first-order logic;database;predicate variable;group;reasoning system;automated reasoning;programming language;deductive reasoning;default logic;prolog;probabilistic logic network;algorithm	AI	-18.263024400930625	11.490893011255714	46073
7b1b9b74b1dbd4bbbaf5f6df04481c7304df30ff	four-valued tables and modal logic	modal logic		modal logic	Richard L. Purtill	1970	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093894084	modal logic;dynamic logic;normal modal logic;epistemology;axiom s5;mathematics;accessibility relation;multimodal logic	Logic	-12.848326504476377	12.004975949748573	46143
76ac3ea187ebf88afc752648b2e75d90e919d171	what holds in a context?	closed form solution;theorem prover;typed lambda calculus;higher order logic;interactive theorem proving	In order to establish that ℒ[A] = ℒ[B] follows from a set of assumptions Γ often one provesA =B and then invokes the principle of substitution of equals for equals. It has been observed that in the ancillary proof ofA =B one is allowed to use, in addition to those assumptions of Γ which are free for ℒ, certain (open) sentencesP which may not be part of Γ and may not follow from Γ, but are related to the context ℒ. We show that in an appropriate formal system there is a closed form solution to the problem of determining precisely what sentencesP can be used. We say that those sentenceshold in the context ℒ under the set of assumptions Γ. We suggest how the solution could be exploited in an interactive theorem prover.	automated theorem proving;formal system;proof assistant	Francisco Corella	1993	Journal of Automated Reasoning	10.1007/BF00881865	closed-form expression;typed lambda calculus;discrete mathematics;higher-order logic;computer science;mathematics;automated theorem proving;programming language;algorithm	Logic	-10.366288412205629	16.09334347626215	46294
2202cb15cce9b6a27891af077121cc3ecaec1c7d	cut-free sequent and tableau systems for propositional diodorean modal logics	modal logic	"""We present sound, (weakly) complete and cut-free tableau systems for the propositional normal modal logics S4:3, S4:3:1 and S4:14. When the modality 2 is given a temporal interpretation, these logics respectively model time as a linear dense sequence of points; as a linear discrete sequence of points; and as a branching tree where each branch is a linear discrete sequence of points. Although cut-free, the last two systems do not possess the subformula property. But for any given nite set of formulae X the \superformulae"""" involved are always bounded by a nite set of formulae X L depending only on X and the logic L. Thus each system gives a nondeterministic decision procedure for the logic in question. The completeness proofs yield deterministic decision procedures for each logic because each proof is constructive. Each tableau system has a cut-free sequent analogue proving that Gentzen's cut-elimination theorem holds for these latter systems. The techniques are due to Hintikka and Rautenberg."""	cut rule;decision problem;long division;method of analytic tableaux;modal logic;modality (human–computer interaction);np-completeness;nondeterministic algorithm;sequent calculus;syntactic methods;thinning;well-formed formula	Rajeev Goré	1994	Studia Logica	10.1007/BF01057938	modal logic;t-norm fuzzy logics;normal modal logic;modal μ-calculus;combinatorics;discrete mathematics;philosophy;epistemology;computer science;axiom s5;mathematics;propositional variable;method of analytic tableaux;accessibility relation;algorithm	Logic	-11.731511543471118	14.23793966829564	46398
208eb0e75700493e20c4a52501d59558e5cb4e3a	a kleene theorem for weighted tree automata over tree valuation monoids		Kleene's theorem on the equivalence of recognizability and rationality for formal tree series over distributive multioperator monoids is proved. As a consequence of this, Kleene's theorem for weighted tree automata over arbitrary, i.e., not necessarily commutative, semirings is derived.	automata theory;free monoid;kleene star;rationality;regular language;tree automaton;turing completeness;value (ethics)	Manfred Droste;Zoltán Fülöp;Doreen Götze	2016		10.1007/978-3-319-30000-9_35	kleene star;combinatorics;discrete mathematics;topology;kleene's recursion theorem	Logic	-5.126312862324239	12.755340969933407	46449
81c41e05478e0ec47b3c217fb17c0a5271aea588	dense time logic programming	temporal logic;temporal data;temporal information;temporal resolution;logic programs;binary tree	Abstract   In this paper, we describe a dense temporal logic programming (DTLP) framework based on infinite binary trees called omega trees . We then look at an important subset of omega trees called ordinal trees that represent only meaningful dense time models. Ordinal trees have the properties of stability and recurrence , which allow them to be represented finitely. The finite representations called ordinal structures can be used as temporal data structures and its nodes can be labelled with formulae, giving us the basis for modeling temporally located information. In this paper, we label ordinal structure nodes with Prolog clauses to get temporal horn clauses that represent temporal facts, rules and queries. Temporal resolution tries to prove temporal queries from a set of temporal facts and rules using a process called aligning which provides the counterpart of the conventional unification algorithm. Aligning restructures ordinal trees to facilitate the transfer of temporal information between them. We present theoretical results to show that aligning is computable, and that the procedures for aligning and resolution are correct.	logic programming	Mohsin Ahmed;G. Venkatesh	1996	J. Symb. Comput.	10.1006/jsco.1996.0067	discrete mathematics;linear temporal logic;temporal logic;binary tree;interval temporal logic;temporal resolution;data mining;mathematics;temporal database;algorithm	Theory	-16.300016802887388	10.813589499555285	46504
001cda88d35ee776049603a2b72871fe32d43f8e	semiring-based constraint satisfaction and optimization	dynamic programming;non crisp constraint reasoning;local consistency;constraint reasoning;dynamic program;satisfiability;constraint satisfaction;constraint solving	We introduce a general framework for constraint satisfaction and optimization where classical CSPs, fuzzy CSPs, weighted CSPs, partial constraint satisfaction, and others can be easily cast. The framework is based on a semiring structure, where the set of the semiring specifies the values to be associated with each tuple of values of the variable domain, and the two semiring operations (+ and X) model constraint projection and combination respectively. Local consistency algorithms, as usually used for classical CSPs, can be exploited in this general framework as well, provided that certain conditions on the semiring operations are satisfied. We then show how this framework can be used to model both old and new constraint solving and optimization schemes, thus allowing one to both formally justify many informally taken choices in existing schemes, and to prove that local consistency techniques can be used also in newly defined schemes.	algorithm;constraint inference;constraint satisfaction problem;dynamic programming;embedded system;expressive power (computer science);gradient;hoc (programming language);local consistency;logic programming;machine learning;mathematical model;mathematical optimization;optimization problem;parse tree;parsing;problem solving;real life;time complexity	Stefano Bistarelli;Ugo Montanari;Francesca Rossi	1997	J. ACM	10.1145/256303.256306	constraint logic programming;concurrent constraint logic programming;mathematical optimization;constraint programming;combinatorics;discrete mathematics;binary constraint;constraint satisfaction;constraint learning;computer science;constraint graph;dynamic programming;constraint satisfaction dual problem;mathematics;complexity of constraint satisfaction;constraint satisfaction problem;hybrid algorithm;local consistency;backtracking;satisfiability	AI	-17.682843233874927	14.167741242118488	46615
b9565408bd78e09a0198b90ef21675cfc220b4a7	abstract data types as lattices of finitely generated models	generic model;abstract data type;first order;complete lattice;abstract types	For abstract data types with arbitrary first order formulas properties of the equations in the axioms are studied which allow to decide whether an abstract type has initial or terminal algebras or whether it forms a complete lattice. An example of an equationally defined abstract type forming a complete lattice with nonrecursive initial and terminal models is given.	abstract data type	Martin Wirsing;Manfred Broy	1980		10.1007/BFb0022542	combinatorics;discrete mathematics;type family;complete lattice;computer science;pure mathematics;first-order logic;mathematics;programming language;abstract data type	Logic	-10.004611426424137	17.858659696706404	46627
e2e6d29deb97c745ac71bf10149313333b391147	the ordered clause restriction of model elimination and sli resolution	model elimination		model elimination	Bruce Spencer	1993			computer science;algorithm	Logic	-12.881069212581608	12.068054985633845	46647
1e8c027229473ed2a86145eeeb4498164e0faf4c	a new notion of part structure for natural language	part structure;lenguaje natural;logica formal;integrated whole;langage naturel;situation;predicate calculus;tratamiento lenguaje;calcul predicat;language processing;individuals;calculo predicado;linguistique structurale;natural language;motivacion;traitement langage;linguistica estructural;formal logic;motivation;structural linguistics;logique formelle;quantities;group	Copyright (c) 1996 Elsevier Science B.V. All rights reserved. In this paper a new notion of part structure for the semantics of natural language is presented. This notion is a notion of part structure that is relative to a situation and unlike extensional mereological notions, crucially involves conditions of integrity. The notion is motivated by a variety of different constructions of natural language	natural language	Friederike Moltmann	1996	Data Knowl. Eng.	10.1016/S0169-023X(96)00011-0	natural language processing;motivation;quantity;first-order logic;structural linguistics;group;natural language;logic;algorithm	ML	-13.759054145925205	6.448324165830984	46679
32ce221a4d8cabd195a8faecf93a9ce473b2347b	abstract interpretation, logical relations and kan extensions	logical relation;abstract interpretation		abstract interpretation;logical relations	Samson Abramsky	1990	J. Log. Comput.	10.1093/logcom/1.1.5	non-classical logic;discrete mathematics;logical consequence;computer science;truth table;algorithm	Logic	-14.18129969947812	13.229527995902517	46785
92a698dae6d897fbd0da5e09e9ce4dc77a7d3ccc	scope dominance with monotone quantifiers over finite domains	quantifier;finite domain;natural language;monotonicity;ambiguity;under specification;inference;scope	We characterize pairs of monotone generalized quantifiers Q1 andQ2 over finite domains that give rise to an entailment relation between their two relative scope construals. This relation between quantifiers, which is r eferred to asscope dominance , is used for identifying entailment relations between the two scopal interpretations of simple sentences of the form NP 1-VNP2. Simple numerical or set-theoretical considerations that follow from our main result are used for characterizing such relations. The variety of ex amples in which they hold are shown to go far beyond the familiar existentialuniversal type.	numerical analysis;monotone	Gilad Ben-Avi;Yoad Winter	2004	Journal of Logic, Language and Information	10.1007/s10849-004-2112-z	discrete mathematics;monotonic function;mathematics;linguistics;natural language;algorithm	Logic	-11.756461381884414	8.547823408046188	46803
39e9c1d8c0ec3a1beea3cccb43fcabe74f1c986e	seeing the forest through the trees: multiple-hypothesis tracking and graph-based tracking extensions		This paper addresses some concerns that have been expressed in the literature regarding the multiple-hypothesis tracking (MHT) paradigm for multi-target tracking (MTT). We clarify that MHT is a mathematically valid maximum a posteriori (MAP) estimation approach to the MTT problem. We identify some extensions to the MHT approach that have emerged over the years, and discuss the graph-based tracking (GBT) simplification that achieves significant computational reduction by introducing path-independence approximations. We provide some suggestions for future MTT performance evaluation efforts and conclude by indicating some current research directions.	approximation;bible concordance;government and binding theory;mhtml;meaning–text theory;performance evaluation;programming paradigm;recursion (computer science);symbolic computation;the forest;trusted computer system evaluation criteria;usb hub	Stefano P. Coraluppi	2018	2018 21st International Conference on Information Fusion (FUSION)	10.23919/ICIF.2018.8455348	machine learning;artificial intelligence;computer science;maximum a posteriori estimation;graph	Robotics	-16.295090753318807	8.067067135411863	46866
db043bd3b4bd4cb05e2d182743a22126449346df	evans' normal form theorem revisited	normal form theorem;partial latin square;word problem;confluent rewriting;quasigroup;normal form;totally symmetric;triality;steiner triple system;semisymmetric	Evans defined quasigroups equationally, and proved a Normal Form Theorem solving the word problem for free extensions of partial Latin squares. In this paper, quasigroups are redefined as algebras with six basic operations related by triality, manifested as coupled right and left regular actions of the symmetric group on three symbols. Triality leads to considerable simplifications in the proof of Evans’ Normal Form Theorem, and makes it directly applicable to each of the six major varieties of quasigroups defined by subgroups of the symmetric group. Normal form theorems for the corresponding varieties of idempotent quasigroups are obtained as immediate corollaries.	a-normal form;conjunctive normal form;definition;idempotence;kleene's t predicate	Jonathan D. H. Smith	2007	IJAC	10.1142/S0218196707004323	word problem;discrete mathematics;triality;pure mathematics;quasigroup;mathematics;geometry;steiner system;algebra	PL	-7.3602420104751465	12.727260455901856	46936
1844fd0df5d1d6631a934ccd54eceaa1da5a13eb	the complexity of lattice-based fuzzy description logics		We study the complexity of reasoning in fuzzy description logics with semantics based on finite residuated lattices. For the logic $$\mathcal SHI $$ , we show that deciding satisfiability and subsumption of concepts, with or without a TBox, are ExpTime-complete problems. In $$\mathcal{ALCHI }$$ and a variant of $$\mathcal{SI }$$ , these decision problems become PSpace-complete when restricted to acyclic TBoxes. This matches the known complexity bounds for reasoning in crisp description logics between $$\mathcal{ALC }$$ and $$\mathcal SHI $$ .	boolean satisfiability problem;decision problem;description logic;directed acyclic graph;exptime;pspace-complete;residuated lattice;subsumption architecture;tbox	Stefan Borgwardt;Rafael Peñaloza	2012	Journal on Data Semantics	10.1007/s13740-012-0013-x	algorithm	AI	-15.729079283007831	12.499724630624513	47047
fb99901da7a7c620c6d3f7dcb19b571d3d36b7ac	understanding and using spector's bar recursive interpretation of classical analysis	extraction programme;preuve programme;program proof;computability;calculabilite;prueba programa;program extraction;extraccion programa;calculabilidad	This note reexamines Spector’s remarkable computational interpretation of full classical analysis. Spector’s interpretation makes use of a rather abstruse recursion schema, so-called bar recursion, used to interpret the double negation shift DNS. In this note bar recursion is presented as a generalisation of a simpler primitive recursive functional needed for the interpretation of a finite (intuitionistic) version of DNS. I will also present two concrete applications of bar recursion in the extraction of programs from proofs of ∀∃-theorems in classical analysis.	bar recursion;computation;primitive recursive function;primitive recursive functional	Paulo Oliva	2006		10.1007/11780342_44	computer science;artificial intelligence;calculus;mathematics;computability;algorithm	PL	-13.144856252148585	15.586305871085612	47055
081e08f2ddc92c28a77b0d64a7f1720d88fabaae	inductive type schemas as functors	theorie type;confluencia;confluence;reecriture;type theory;strong normalization;decidibilidad;rewriting;decidabilite;reescritura;type system;decidability	Parametric inductive types can be seen as functions taking type parameters as argument and returning the instantiated inductive types. Given functions between parameters one can construct function between the instantiated inductive types representing the change of parameters along these functions. It is well known that it is not a functor w.r.t intensional equality based on standard reductions. We investigate a simple type system with inductive types and iteration and show by modular rewriting techniques that new reductions can be safely added to make this construction a functor, while the decidability of the internal conversion relation based on the strong normalization and con uence properties is preserved. Possible applications: new categorical and computational structures on λ-calculus, certi ed computation.	coinduction;computation;deductive lambda calculus;electronic notes in theoretical computer science;graph isomorphism;inductive type;iteration;math-matic;naruto shippuden: clash of ninja revolution 3;normalization property (abstract rewriting);rewriting;type system	Freiric Barral;Sergei Soloviev	2006		10.1007/11753728_7	decidability;discrete mathematics;type system;rewriting;computer science;mathematics;programming language;confluence;type theory;algorithm	PL	-13.241893462082778	17.99716274368517	47161
1c341c130117476a142587a753675f594d78859e	automata for the modal mu-calculus and related results	expressive power;transition systems;satis ability	The propositional μ-calculus as introduced by Kozen in [4] is considered. The notion of disjunctive formula is defined and it is shown that every formula is semantically equivalent to a disjunctive formula. For these formulas many difficulties encountered in the general case may be avoided. For instance, satisfiability checking is linear for disjunctive formulas. This kind of formula gives rise to a new notion of finite automaton which characterizes the expressive power of the μ-calculus over all transition systems.	automaton;dexter kozen;disjunctive normal form;finite-state machine;modal μ-calculus;newton–cotes formulas	David Janin;Igor Walukiewicz	1995		10.1007/3-540-60246-1_160	natural language processing;computer science;mathematics;programming language;expressive power;algorithm	Logic	-15.49577432971002	13.260035799282887	47199
06138452f8ed4038bba6ed457d6a6ca9c7f48f58	a computational interpretation of parametricity	strong normalization computational interpretation reynolds abstraction theorem lambda calculi dependent types pure type system parametricity rule computational content church rosser;calculus syntactics context indexes concrete bismuth facsimile;lambda calculus;type structure;parametricity;type theory;lambda calculus type structure;dependent types;lambda calculi;type theory lambda calculus	Reynolds' abstraction theorem has recently been extended to lambda-calculi with dependent types. In this paper, we show how this theorem can be internalized. More precisely, we describe an extension of the Pure Type Systems with a special parametricity rule (with computational content), and prove fundamental properties such as Church-Rosser's and strong normalization. All instances of the abstraction theorem can be both expressed and proved in the calculus itself. Moreover, one can apply parametricity to the parametricity rule: parametricity is itself parametric.	church–rosser theorem;computation;dependent type;normalization property (abstract rewriting);parametricity;pure type system	J Bernardy;Guilhem Moulin	2012	2012 27th Annual IEEE Symposium on Logic in Computer Science	10.1109/LICS.2012.25	system f;typed lambda calculus;discrete mathematics;dependent type;binary lambda calculus;pure type system;computer science;parametricity;lambda calculus;simply typed lambda calculus;mathematics;programming language;church encoding;type theory;algorithm	Logic	-11.604897201938295	17.285471257860397	47203
7dd2a507e61877f5d96471849dd506b5b1f36ab8	on weak and strong validity of rules for the propositional calculus			propositional calculus	V. Frederick Rickey	1971	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093894158	zeroth-order logic;negation introduction;proof calculus;propositional variable;well-formed formula	Logic	-12.421892606371049	12.942418647544303	47296
74ad6536c041b0ee6ce6c0de8b579aa4737f30d4	the cognitive relation in a formal setting	anti-realism;cognitive subject;epistemology;object;realism	This paper proposes a formal framework for the cognitive relation understood as an ordered pair with the cognitive subject and object of cognition as its members. The cognitive subject is represented as consisting of a language, conequence relation and a stock of accepted theories, and the object as a model of those theories. This language allows a simple formulation of the realism/anti-realism controversy. In particular, Tarski’s undefinability theorem gives a philosophical argument for realism in epistemology.	bell's theorem;cognition;ordered pair;theory	Jan Wolenski	2007	Studia Logica	10.1007/s11225-007-9071-8	philosophy;epistemology;computer science;artificial intelligence;mathematics	NLP	-13.6640486090833	4.454833311446941	47326
cb72a7dcb387cb0723fbe554c6f4a04671a1eb43	a coalgebraic view on positive modal logic	positive modal logic;modele kripke;03b45;vietorus functor;foncteur vietorus;kripke model;espace priestley;modal logic;vietoris functor;informatique theorique;logique modale;coalgebra;logica modal;coalgebre;modelo kripke;algebre positive modale;priestley space;positive modal algebra;computer theory;informatica teorica	Positive Modal Logic is the restriction of the modal local consequence relation defined by the class of all Kripke models to the propositional negation-free modal language. The class of positive modal algebras is the one canonically associated with PML according to the theory of the algebrization of logics [12]. A Priestley-style duality is established between the category of positive modal algebras and the category of K+-spaces in [4]. In this paper, we establish a categorical equivalence between the category K+ of K+-spaces and the category Coalg(V) of coalgebras of a suitable endofunctor V on the category of Priestley spaces.	kripke semantics;logic gate;logic programming;modal logic;p versus np problem;turing completeness	Alessandra Palmigiano	2004	Theor. Comput. Sci.	10.1016/j.tcs.2004.07.026	modal logic;closed category;s5;normal modal logic;modal μ-calculus;complete category;discrete mathematics;categorical logic;axiom s5;pure mathematics;mathematics;concrete category;interior algebra;kripke semantics;accessibility relation;algorithm;algebra	Logic	-11.77016515939118	13.017168476618107	47489
5049945063e425f36720595529e083cbe7d11187	on a graded modal logic approach to reason with fuzzy preferences		Acknowledgments Esteva and Godo acknowledge partial support by the Spanish FEDER/MINECO project TIN2015-71799-C2-1-P. Vidal acknowledges partial support by the project GA17-04630S of the Czech Science Foundation (GACˇ R) and by the institutional grant RVO:67985807.	modal logic	Francesc Esteva;Lluis Godo;Amanda Vidal	2017		10.3233/978-1-61499-806-8-86	fuzzy logic;multimodal logic;machine learning;czech;modal logic;accessibility relation;algorithm;artificial intelligence;mathematics;fuzzy classification	NLP	-10.656542756108244	9.82805817857766	47561
ead60c9964136781d0344b2ebba2a39a3a93387f	characterization by regulated grammars of calculations in the gentzen system g.		The aim of the present work is to present a characterization of the Gentzen System G by means of a regulated grammar, according to the Formal Languages Theory. Given a proposition, which is supposed to be a tautology, a grammar will be produced and the generation of the respective language will represent a calculation in G. This language can be interpreted as either, a proof or a counter-example of the given proposition. Mechanization of related tasks is made by means of the functional language ML.	ccir system g;functional programming;sequent calculus	Ruben Monjaraz Hernandez-Imbert;José de Jesús Lavalle-Martínez	2007	Engineering Letters		machine learning;natural language processing;proposition;formal language;functional programming;tautology (logic);artificial intelligence;computer science;rule-based machine translation;grammar	PL	-11.593089943181262	8.467745971040959	47570
dfeb9980086925ec6d76ccca0cf6049ad92a886b	de la construction de preuves à la programmation parallèle en logique linéaire. (from proof construction to concurrent programming in linear logic)			concurrent computing;linear algebra;linear logic	Guy Perrier	1995				Theory	-16.933673106945736	15.815577516243557	47572
a5c236c90d9d289f9a65601cd99083e4e8683976	expressibility of first order logic with a nondeterministic inductive operator	first order logic	Without Abstract	first-order logic	Vikraman Arvind;Somenath Biswas	1987		10.1007/BFb0039616	predicate logic;dynamic logic;discrete mathematics;description logic;logic optimization;higher-order logic;computer science;intermediate logic;first-order logic;mathematics;sequential logic;substructural logic;multimodal logic;algorithm	DB	-13.753996102331744	13.337860296986749	47665
acbf3ec94b4115ff4bb4c89048a358c927c92777	polymorphic call-by-value calculus based on classical proofs	automatic proving;lambda calculus;intelligence artificielle;demostracion automatica;theorem proving;demonstration automatique;demonstration theoreme;rewriting systems;polymorphism;lambda calculo;artificial intelligence;inteligencia artificial;demostracion teorema;lambda calcul;type inference;systeme reecriture	We introduce a polymorphic call-by-value calculus, λexc, based on 2nd order classical logic. The call-by-value computation rules are defined based on proof reductions, in which classical proof reductions are regarded as a logical permutative reduction in the sense of Prawitz and a dual permutative reduction. It is shown that the CPS-translation from the core λexc to the intuitionistic fragment, i.e., the Damas-Milner type system is sound. We discuss that the use of the dual permutative reduction is, in general, uncorrected in polymorphic calculi. We also show the Church-Rosser property of λexc, and the soundness and completeness of the type inference algorithm W. From the subject reduction property, it is obtained that a program whose type is inferred by W never leads to a type-error under the rewriting semantics. Finally, we give a brief comparison with ML plus callcc and some of the existing call-by-value styles.	algorithm;call-with-current-continuation;church–rosser theorem;computation;hindley–milner type system;rewriting;subject reduction;type inference	Ken-etsu Fujita	1998		10.1007/BFb0055911	polymorphism;discrete mathematics;computer science;artificial intelligence;type inference;lambda calculus;mathematics;automated theorem proving;programming language;algorithm	PL	-13.632412431708694	16.332359897270525	47725
0391ba16f7bc85897656a0bc0423de9b6a1bb5aa	recurrent sets for non-termination and safety of programs	thesis	Domain Usually, a fixed point of a function in the concrete domain, as in (2.1), cannot be computed directly (e.g., via iterating the function on the least or greatest element [Kle87]), and its value cannot be directly represented by a computer. The approach of abstract interpretation is to compute a sound approximation of the concrete fixed point in the following way. We introduce the abstract domain D], where an abstract element d ∈D] represents some concrete element γ(d) ∈ L[. The function γ :D] → L[ that maps abstract elements to concrete elements they represent is called concretization function and is required to be monotone: for d1,d2 ∈D], d1 v] d2 ⇒ γ(d1) v[ γ(d2) Usually8 D] consists of finite representations of a subset of L[. For example, in an interval domain, an element is a range of numerical values, or in a more general setting – a map from program variables to their ranges. An interval finitely represents a potentially infinite set of numbers, but not every set of numbers can be represented by an interval. Another example is a polyhedral domain where an element is a conjunction of linear inequalities over program variables. 8Not necessarily, though. In a theoretical discussion, both L[ and D] may have elements that do not have finite representations. This will be the case later when we will discuss set-of-states abstraction.		Alexey Bakhirkin	2016			reliability engineering;computer science;data mining;computer security	Logic	-9.156438400199999	15.560029695078208	47947
680b018950e74fd915eaf41b88b91eeee7c4be0d	erratum: the satisfiability problem for a class consisting of horn sentences and non-horn sentences in proportional logic	satisfiability		horn clause	Susumu Yamasaki;Shuji Doshita	1984	Information and Control	10.1016/S0019-9958(84)80057-1	arithmetic;natural language processing;computer science;mathematics;algorithm;satisfiability	AI	-12.49130147684905	11.470433531682856	48145
bee57da2f51f231eeef6eb60cf6c5905f1f929b4	minimal belief change and the pareto principle	identite;representation;implication;belief;operator;counterfactuals;test de ramsey;alchourron c e gardenfors p makinson d;optimalite;conditional;principe;contrainte;revision;negation;conjunction;satisfiability;conditionnel;conjonction;change;constraint;principe de preservation;croyance;ramsey test;belief revision;base;system;theory;decision theoretic;contrefactuels;decision;minimalisme;operateur;changement;postulat;systeme;axiomatics;belief change;axiomatique;principle;identity;minimalism;levi i;pareto optimality;postulate;information;pareto v;theorie	This paper analyzes the notion of a minimal belief change that incorporates new information. I apply the fundamental decision-theoretic principle of Pareto-optimality to derive a notion of minimal belief change, for two different representations of belief: First, for beliefs represented by a theory – a deductively closed set of sentences or propositions – and second for beliefs represented by an axiomatic base for a theory. Three postulates exactly characterize Pareto-minimal revisions of theories, yielding a weaker set of constraints than the standard AGM postulates. The Levi identity characterizes Pareto-minimal revisions of belief bases: a change of belief base is Pareto-minimal if and only if the change satisfies the Levi identity (for “maxichoice” contraction operators). Thus for belief bases, Pareto-minimality imposes constraints that the AGM postulates do not. The Ramsey test is a well-known way of establishing connections between belief revision postulates and axioms for conditionals (“if p, then q”). Pareto-minimal theory change corresponds exactly to three characteristic axioms of counterfactual systems: a theory revision operator that satisfies the Ramsey test validates these axioms if and only if the revision operator is Pareto-minimal.	belief revision;counterfactual conditional;pareto efficiency;theory	Oliver Schulte	1999	Synthese	10.1023/A:1005162303126	ramsey reset test;conjunction;counterfactual conditional;information;philosophy;epistemology;minimalism;operator;belief;calculus;negation;principle;system;mathematics;axiom;base;constraint;representation;belief revision;theory;algorithm;satisfiability	AI	-13.804635656098903	7.7567245245902585	48203
386e5b7f12008aba6172bc0d31f3a188ab48ab80	on the existence of extensional partial combinatory algebras				Ingemarie Bethke	1987	J. Symb. Log.		partially ordered set;mathematical logic;lambda calculus;mathematics;combinational logic;programming language;algorithm;algebra	Logic	-12.026745843327092	13.52700747325155	48335
41b1dddf709fbab248a6dd6a9e3d7d9142c97a70	logic knowledge bases with two default rules	knowledge based system;well founded semantics;computational complexity;new combination;knowledge base	Logic knowledge based systems (LKBS) containing at most one form of default negation and explicit (or “classical”) negation have been studied in the literature. In this paper we describe a class of LKBS containing multiple forms of default negation in addition to explicit negation. We define a semantics for these systems in terms of the well‐founded semantics defined by Van Gelder et al. (1988) and the stable semantics introduced by Gelfond and Lifschitz (1988) and later extended to the 3‐valued case by Przymusinski (1991). We investigate properties of the new combined semantics and calculate the computational complexity of three main reasoning tasks for this semantics, namely existence of models, skeptical and credulous reasoning. An effective procedure to construct the collection of models characterizing the semantics of such a system is given. Applications to knowledge representation and knowledge base merging are presented.	autoepistemic logic;closed-world assumption;computational complexity theory;disjunctive normal form;effective method;interpolation;knowledge base;knowledge representation and reasoning;logic programming;modal logic;modal operator;np-completeness;negation as failure;operational semantics;partial evaluation;programming language;stable model semantics;web feature service;whole earth 'lectronic link	Carolina Ruiz;Jack Minker	1998	Annals of Mathematics and Artificial Intelligence	10.1023/A:1018951805211	natural language processing;knowledge base;stable model semantics;computer science;negation as failure;artificial intelligence;theoretical computer science;formal semantics;mathematics;computational complexity theory;well-founded semantics;operational semantics;algorithm;computational semantics	AI	-15.772841479550614	12.77346462244163	48450
19e29ef0d8edf9bcba2f0bb8057d97e6f492800f	the affirm theorem prover: proof forests and management of large proofs	abstract data type;theorem prover;natural deduction	"""The AFFIRM theorem prover is an interative, natural-deduction system centered around abstract data types. Since long proofs are often required to verity algorithms, we describe a model (called the """"proof forest"""") which helps the user to visualize and manage the potentially large number of theorems and subgoals that can arise."""		Roddy W. Erickson;David R. Musser	1980		10.1007/3-540-10009-1_18	discrete mathematics;computer-assisted proof;computer science;fundamental theorem;mathematics;automated theorem proving;programming language;natural deduction;abstract data type;algorithm	Logic	-18.27812022193016	18.046667473359545	48641
54aba5341d3957ab8c928c9a41b373a68e4f6a47	axiomatizing analog algorithms		We propose a formalization of generic algorithms that includes analog algorithms. This is achieved by reformulating and extending the framework of abstract state machines to include continuous-time models of computation. We prove that every hybrid algorithm satisfying some reasonable postulates may be expressed precisely by a program in a simple and expressive language.	abstract state machines;hybrid algorithm;model of computation	Olivier Bournez;Nachum Dershowitz;Pierre Néron	2016		10.1007/978-3-319-40189-8_22	computer science;artificial intelligence;theoretical computer science;machine learning;mathematics;algorithm	Logic	-17.151861239722056	17.276634846567397	48694
997357bbcbcb90d9e4b57c07cb0314cf16696832	first-order linear-time epistemic logic with group knowledge: an axiomatisation of the monodic fragment	distributed system;ordered set;message passing system;first order;linear time;common knowledge;epistemic logic	We investigate quantified interpreted systems, a computationally grounded semantics for a first-order temporal epistemic logic on linear time. We report a completeness result for the monodic fragment of a language that includes LTL modalities as well as distributed and common knowledge. We exemplify possible uses of the formalism by analysing message passing systems, a typical framework for distributed systems, in a first-order setting.	axiomatic system;distributed computing;epistemic modal logic;exemplification;first-order predicate;message passing;semantics (computer science);time complexity	Francesco Belardinelli;Alessio Lomuscio	2009		10.1007/978-3-642-02261-6_12	time complexity;discrete mathematics;epistemic modal logic;computer science;theoretical computer science;first-order logic;mathematics;algorithm;common knowledge	AI	-16.028606857375824	12.362379118206789	48825
e9e043c65c78264b7bf2ce822a94138eb5e98b3d	informational semantics, non-deterministic matrices and feasible deduction	natural deduction;informational semantics;semantic tableaux;classical propositional logic;computational complexity;non-deterministic matrices	We present a unifying semantic and proof-theoretical framework for investigating depth-bounded approximations to Boolean Logic in which the number of nested applications of a single structural rule, representing the classical Principle of Bivalence (classical cut), is bounded above by a fixed natural number. These approximations provide a hierarchy of tractable logical systems that indefinitely converge to classical propositional logic. The operational rules are shared by all approximation systems and are justified by an “informational semantics” whereby the meaning of a logical operator is specified solely in terms of the information that is actually possessed by an agent.	accessibility relation;approximation;boolean algebra;cobham's thesis;converge;cut rule;discharger;heuristic;logical connective;method of analytic tableaux;natural deduction;paraconsistent logic;petabyte;polynomial ring;possible world;propositional calculus;sequent calculus;well-formed formula	Marcello D'Agostino	2014	Electr. Notes Theor. Comput. Sci.	10.1016/j.entcs.2014.06.004	discrete mathematics;classical logic;mathematics;algorithm;rule of inference	AI	-14.88739732030841	10.038012094223914	48986
03cc40e086bbf40097111ee1973249de40c895e7	distributive laws for the coinductive solution of recursive equations	distributive law;article letter to editor	This paper illustrates the relevance of distributive laws for the solution of recursive equations, and shows that one approach for obtaining coinductive solutions of equations via infinite terms is in fact a special case of a more general approach using an extended form of coinduction via distributive laws.	coinduction;recursion (computer science);relevance	Bart Jacobs	2006	Inf. Comput.	10.1016/j.ic.2005.03.006	distributive property;computer science;calculus;distributive law between monads;mathematics;algorithm	Logic	-11.414087810195056	16.618599240382583	49163
4827b96c12f21751c20f22b8bfb2331e4554ba8a	a type assignment for λ-calculus complete both for fptime and strong normalization		One of the aims of Implicit Computational Complexity is the design of programming languages with bounded computational complexity. One of the most promising approaches to this aim is based on the use of lambda-calculus as paradigmatic programming language and the design of type assignment systems for lambda-terms, where types guarantee both the functional correctness and the complexity bound. Along this line, we propose a system of stratified types, inspired by intersection types, where intersection is a non-associative operator. This system is correct and complete for polynomial time when a uniform coding scheme is considered; moreover, all the strongly normalizing terms are typed in it, thus increasing the typing power with respect to the previous proposals, based on Light Logics.	lambda calculus;normalization property (abstract rewriting)	Erika De Benedetti;Simona Ronchi Della Rocca	2016	Inf. Comput.	10.1016/j.ic.2015.12.012	combinatorics;discrete mathematics;mathematics;algorithm;algebra	Logic	-10.172888380705068	16.86101299495959	49225
5ef11bc6fb2c1a0bf938623f17b8e58dd173897b	comparing type theory and set theory			set theory;type theory	John Lake	1975	Math. Log. Q.	10.1002/malq.19750210144	combinatorics;mathematics;type theory;set theory	Theory	-10.784207075843067	12.341797848470057	49282
0d3a8df2e7dd3b3061662032cd48bf5006d454d2	characterizations of the disjunctive well-founded semantics: confluent calculi and iterated gcwa	monotone operator;minimal model;disjunctive semantics;bottom up;well founded semantics;logic programming;nonmonotonic reasoning;non monotonic reasoning;logic programs;disjunctive logic programming	Recently Brass and Dix introduced the semantics D-WFS for general disjunctive logic programs. The interesting feature of this approach is that it is both semantically and proof-theoretically founded. Semantically, D-WFS is invariant under some natural declarative principles. Proof-theoretically, any program Φ is associated a normalform Φ, called the residual program, by a nontrivial bottom-up construction using least fixpoints of two monotonic operators. We show in this paper that the original calculus, consisting of some simple transformations, has a very strong and appealing property: it is confluent and terminating. This means that all the transformations can be applied in any order: whenever we arrive at an irreducible program (no more transformation is applicable), this program is already uniquely determined and coincides with the normalform res(Φ) Moreover, for fair sequences it is also strongly terminating: every fair sequence of transformations leads to normalform res(Φ). Another feature of our approach is that D-WFS can be read off from res(Φ) immediately in a very simple way. No proper subset of the calculus has these properties – only when we restrict to certain subclasses of programs. We also give an equivalent characterization of D-WFS in terms of iterated minimal model reasoning with respect to positive programs. This construction is a generalization of a description of the well-founded semantics: we introduce a very simple and neat construction of a sequence D i that eventually stops and represents the set of derivable disjunctions. Both characterizations open the way for efficient implementations. The first does so because the ordering of the transformations does not matter: we are free to choose always the “best” transformation, which maximally reduces the program. The second does so because special methods from circumscription, in particular a sophisticated minimal model reasoner for positive programs, might be useful.	alan dix;bottom-up parsing;circumscription (logic);confluence (abstract rewriting);disjunctive normal form;invariant (computer science);irreducibility;iterated function;iteration;newman's lemma;semantic reasoner;well-founded semantics;whole earth 'lectronic link	Stefan Brass;Jürgen Dix	1998	Journal of Automated Reasoning	10.1023/A:1005952908693	discrete mathematics;stable model semantics;computer science;artificial intelligence;non-monotonic logic;top-down and bottom-up design;mathematics;programming language;logic programming;algorithm	Logic	-13.739456713710068	16.933663810224193	49362
b8692204bfb74cd290137dce733141e13a4210ac	the specification logic νz	specification logic;logique specification;programmation;mise au point programme;logique programme;spectrum;programacion;informatique theorique;programming;program development;computer theory;informatica teorica	This paper introduces a wide-spectrum specification logic νZ. The minimal core logic is extended to a more expressive specification logic which includes a schema calculus similar (but not equivalent) to Z, new additional schema operators, and extensions to programming and program development logics.		Martin C. Henson;Moshe Deutsch;Besnik Kajtazi	2006	Formal Aspects of Computing	10.1007/s00165-006-0007-2	spectrum;programming;horn clause;mathematics;programming language;logic programming;algorithm	PL	-15.10416308880019	16.9004729447321	49379
5fc7abd61a61ac3a87043c08c471ef827dd8b2d1	the anatomy of a comparative illusion		Comparative constructions like More people have been to Russia than I have are reported to be acceptable and meaningful by native speakers of English; yet, upon closer reflection, they are judged to be incoherent. This mismatch between initial perception and more considered judgment challenges the idea that we perceive sentences veridically, and interpret them fully; it is thus potentially revealing about the relationship between grammar and language processing. This paper presents the results of the first detailed investigation of these so-called ‘comparative illusions’. We test four hypotheses about their source: a shallow syntactic parser, some type of repair by ellipsis, an incorrectly-resolved lexical ambiguity, or a persistent event comparison interpretation. Two formal acceptability studies show that speakers are most prone to the illusion when the matrix clause supports an event comparison reading. A verbatim recall task tests and finds evidence for such construals in speakers’ recollections of the sentences. We suggest that this reflects speakers’ entertaining an interpretation that is initially consistent with the sentence, but failing to notice when this interpretation becomes unavailable at the than-clause. In particular, semantic knowledge blinds people to an illicit operator-variable configuration in the syntax. Rather than illustrating processing in the absence of grammatical analysis, comparative illusions thus underscore the importance of syntactic and semantic rules in sentence processing. 1 COMPARATIVE ILLUSIONS Presented with the sentence in (1), native English speakers typically report that it is a perfectly acceptable sentence of their language. Yet, upon closer reflection, these same speakers judge that it has no stable, meaningful interpretation. Sentences of this form have come to be called ‘comparative illusions’ (CIs) or ‘Escher sentences’: they have only the appearance of well-formedness. CIs are interesting in that they seem to challenge some of our most basic assumptions about language architecture: that we perceive sentences veridically, that we interpret them fully, and that sentence form and meaning are tightly coupled. (1) More people have been to Russia than I have. © The Author(s) 2018. Published by Oxford University Press. All rights reserved. For Permissions, please email: journals.permissions@oup.com Downloaded from https://academic.oup.com/jos/advance-article-abstract/doi/10.1093/jos/ffy014/5065172 by guest on 04 August 2018 2 Alexis Wellwood et al. The phenomenon has been known for some time, but the mismatch between the perception of grammaticality and meaningfulness that characterizes CIs has so far received little systematic investigation. The sentence in (1) was first reported by Montalbetti (1984) as ‘the most amazing */? sentence I’ve ever heard’, attributing it to Hermann Schultze. Importantly, linguists and non-linguists alike experience the phenomenon, but, despite much informal discussion in the linguistics community, formal investigation has so far been limited to preliminary results (Fults & Phillips 2004, Wellwood et al. 2009, O’Connor et al. 2012; O’Connor 2015).1 In this paper, we investigate which properties of sentences like (1) are essential for the initial perception of meaningfulness. Grammatically, the problem with CI-type sentences is in the choice of subject in the than-clause, since superficially similar comparatives succeed in being both uncontroversially acceptable and meaningful. The meaning of a sentence like (2) just is, ‘the number of people that have been to Russia exceeds the number of elephants that have’. Yet there is no interpretation of (1) suggested by a similar paraphrase, ‘the number of people that have been to Russia exceeds the number of me’. (2) More people have been to Russia than elephants have. Deriving the interpretation of (2) involves mapping the individuals satisfying the matrix and embedded predicates to degrees representing their number, and establishing whether the first number is greater than the second. In the syntactic tradition going back at least to Bresnan (1973) (see also Chomsky 1977), degrees are introduced by the many component of more (i.e., more is underlyingly many and -er). The degree predicates are derived in tandem with a wh-operator that binds a variable in the abstract syntax of the than-clause, as in (3). This operator is akin to how many in (4a). It needs to combine with a bare plural NP, just like how many does, (4b)-(4d). (3) ... than wh-d ... d-many elephants have been to Russia (4) a. How many elephants have been to Russia? b. *How many I have been to Russia? c. *How many the elephant has been to Russia? d. *How many the elephants have been to Russia? Semantically, this binding relation corresponds to a λ-abstraction (see especially Heim & Kratzer 1998) over degrees, (5a). A parallel degree predicate is derived in the matrix clause by quantifier raising the morpheme -er, delivering an LF like that in (5b). Together, these two predicates act as the restrictor and scope arguments for the degree quantifier -er as in (6) (Heim 2000).2 Thus, the LF in (5b) is interpreted as a greater-than comparison between the maximal degrees that satisfy the degree descriptions in the main and than-clauses (i.e., max(Q) and max(P) in (6), respectively). 1 Our early results, reported in Wellwood et al. 2009, inform the present manuscript and have shaped the subsequent literature. A report on these results can be downloaded from https://github.com/alexiswellwood/compillu. 2 For further details concerning the LF syntax of comparative sentences, see Heim 1985, 2000; Bhatt & Pancheva 2004, among many others. There have been several alternative characterizations of the precise semantics of -er , in particular the tradition following Bartsch & Vennemann 1972 and Kennedy 1999. For our purposes these differences are not important. Downloaded from https://academic.oup.com/jos/advance-article-abstract/doi/10.1093/jos/ffy014/5065172 by guest on 04 August 2018 The Anatomy of a Comparative Illusion 3 (5) a. ... than λd ... d-many elephants have been to Russia b. -er [ λd ... d-many people have been to Russia [ (than) λd ... d-many elephants have been to Russia ] (6) [[-er]] = λPdt.λQdt.max(Q) > max(P), where max(R) = ιd[R(d) & ∀d′[R(d′) → d′ ≤ d]] Grammatically, then, there are two problems with (1). For a well-formed comparative sentence, a non-overt wh-operator needs to appear in the than-clause in a position parallel to that of -er in the main clause; this is not possible without a bare plural. Semantically, there is no plurality of individuals that can be compared for their number (see Hackl 2001, Nakanishi 2007, Wellwood et al. 2012; Wellwood 2015 for the semantic ban on singulars in comparatives). Ignoring the syntactic rules for a moment, the interpretation we would expect for (1) would have the schematic LF in (7b), which should make as little sense as those underlying (4b)-(4d). This stands in contrast to the interpretation of (2) in (7a). (7) max(d-many people have been to Russia) > a. max(λd.d-many elephants have been to Russia) b. max(λd.d-many I have been to Russia) * The claim that CIs are ungrammatical is not incompatible with an initial perception of acceptability, as acceptability and grammaticality have often been seen to diverge (cf. Lewis & Phillips 2015). Garden path sentences (8a) and sentences with multiple centerembedding (8b) are often perceived to be unacceptable, yet are nonetheless grammatical (see Bever 1970 and Lewis 1996, respectively). Conversely, in some cases ungrammatical sentences are judged acceptable, as in cases of plural attraction (8c) and NPI illusions (8d) (see Bock & Miller 1991, Clifton et al. 1999, Vasishth et al. 2008, Wagers et al. 2009, Xiang et al. 2009, Parker & Phillips 2016). (8) a. The horse raced past the barn fell. b. The man the woman the child kissed knows jumped. c. * The key to the cabinets are on the table. d. * The bills that no senator voted for will ever become law. Other well-known examples of divergence involve grammatical sentences that are perceived to have meanings starkly different from their literal meanings. If a man has a widow, then that man is dead, and no dead man can marry; yet, 30% of respondents answer ‘yes’ when presented with (9a) (Sanford & Sturt 2002). Similarly, (9b) is said to be literally equivalent to ‘All head injuries are trivial enough to ignore’; nevertheless, speakers routinely understand (9b) as equivalent to ‘Any head injury is too important to ignore’ (Wason & Reich 1979, O’Connor 2015). In these cases, comprehenders construct and linger on a certain misinterpretation that prevents them from recognizing the error. (9) a. Can a man marry his widow’s sister? b. No head injury is too trivial to ignore. CIs appear to present a different sort of case from all of these examples, however. Sentences like (1) strike speakers as well-formed, unlike (8a) and (8b). That perception can persist, unlike the easily detectable problems with (8c) and (8d). Furthermore, one never arrives at a specific, grammatically-licensed interpretation—there doesn’t seem to be a single Downloaded from https://academic.oup.com/jos/advance-article-abstract/doi/10.1093/jos/ffy014/5065172 by guest on 04 August 2018 4 Alexis Wellwood et al. sort of misinterpretation that speakers eventually converge on, unlike (9a) and (9b). Rather, informal reports by colleagues, friends, and audiences at professional meetings suggest that speakers tend to believe sentences like (1) are acceptable and have a coherent interpretation, even while they struggle to articulate that interpretation. These considerations implicate online processing in the effect. When things go right, comprehenders can infer at more people that they are likely to require an operatorvariable configuration of a certain sort in a dependent than-clause. Encountering than elephants, the variable can be posited in the	abstract syntax;coherence (physics);comparative toxicogenomics database (ctd);converge;email;embedded system;emoticon;escher;expect;failure;interpretation (logic);lambda calculus;lehmer random number generator;literal (mathematical logic);maximal set;new product development;parsing;quantifier (logic);regular expression;schematic;the matrix;the sentence;well-formed document;well-formed formula;window blind	Alexis Wellwood;Roumyana Pancheva;Valentine Hacquard;Colin Phillips	2018	J. Semantics	10.1093/jos/ffy014	philosophy;epistemology;aesthetics;illusion	NLP	-11.319023266710754	5.373852652990947	49409
63e088ad1ccd0ca6f6c6a647bffc3a8e45d869d6	a fibred tableau calculus for modal logics of agents	fibring;multiagent system;multimodal logic;camino grafo;array mathematics;graph path;logica multimodal;280402 mathematical logic and formal languages;tablero;langage declaratif;780100 non oriented research;logique propositionnelle;modal logic;multi modal logic;propositional logic;bdi agents;logique modale;declarative language;chemin graphe;logica modal;logica proposicional;sistema multiagente;logique multimodale;lenguaje declarativo;systeme multiagent;lablelled tableaux;tableau matriciel	In [15,19] we showed how to combine propositional multimoda l logics using Gabbay’sfibring methodology. In this paper we extend the above mentioned works by providing a tableau-based proof technique f or the combined/fibred logics. To achieve this end we first make a comparison between two types of tableau proof systems, ( graph& path), with the help of a scenario (The Friend’s Puzzle). Having done that we show how to uniformly construct a tableau calculus for the combined logic using Governatori’s labelled tab le u systemKEM . We conclude with a discussion on KEM ’s features.	friend-to-friend;method of analytic tableaux;modal logic	Vineet Padmanabhan;Guido Governatori	2006		10.1007/11961536_8	modal logic;discrete mathematics;declarative programming;epistemology;computer science;mathematics;propositional calculus;programming language;multimodal logic;algorithm	Logic	-13.559764938482077	13.531286919446927	49460
0f53a6328bb21a2b1ba53a991a92e7e8963ba464	knowing how to play: uniform choices in logics of agency	multiagent system;modal logic;logics for agent systems;formal models of agency;agent systems;epistemic logic;knowledge base	"""Reasoning about capabilities, strategies and knowledge is important in the analysis of multiagent systems. Alternating-time Temporal Epistemic Logic (ATEL) was designed with this aim. Nevertheless, the original interpretation of the language suffered from some counterintuitive properties. These are due to the fact that the strategies the agent applies in worlds that he cannot distinguish may not be uniform, in the sense that the same action is applied in all indistinguishable worlds. Several refinements of the original ATEL semantics were proposed since then. In this paper we argue that the STIT framework can easily account for uniform strategies. STIT is a logic of agency that has been proposed in the 90ies in the domain of philosophy of action. It is the logic of constructions of the form """"agent a sees to it that φ"""". To support our claim, we first present a straightforward solution in STIT logic augmented by a modal operator of knowledge. Then we offer a simplification, by introducing a modal logic of knowledge-based uniform agency, for one-step strategies, alias choices."""	action theory (philosophy);agent-based model;epistemic modal logic;level of detail;modal operator;multi-agent system;temporal logic	Andreas Herzig;Nicolas Troquard	2006		10.1145/1160633.1160666	modal logic;predicate logic;dynamic logic;knowledge base;linear temporal logic;description logic;higher-order logic;epistemic modal logic;computer science;knowledge management;artificial intelligence;accessibility relation;multimodal logic;algorithm;philosophy of logic	AI	-17.00378272184621	5.166866063430015	49497
a6f53a7da5c6ffd8b8bb290ca905b936ae21d4e6	on direct product decompositions of finite -trivial semigroups		A nontrivial decomposition of the class J of all finite -trivial semigroups as a join of two pseudovarieties is given. The definition of these pseudovarieties and the proof are purely syntactical, being based on a complete description of the implicit operations on J obtained by the author in a previous paper.		Jorge Almeida	1991	IJAC	10.1142/S0218196791000225	combinatorics;discrete mathematics;mathematics;special classes of semigroups;algebra	NLP	-4.971026818089255	16.467547427373656	49516
ada6be0fca06752aabedab31b33df8b8153f22f9	expexpexplosion: uniform interpolation in general ℇl terminologies		Although EL is a popular logic used in large existing knowledge bases, to the best of our knowledge no procedure has yet been proposed that computes uniform EL interpolants of general EL terminologies. Up to now, also the bounds on the size of uniform EL interpolants remain unknown. In this paper, we propose an approach based on proof theory and the theory of formal tree languages to computing a finite uniform interpolant for a general EL terminology if it exists. Further, we show that, if such a finite uniform EL interpolant exists, then there exists one that is at most triple exponential in the size of the original TBox, and that, in the worst-case, no shorter interpolants exist, thereby establishing the triple exponential tight bounds on their size.	best, worst and average case;computational anatomy;interpolation;tbox;time complexity	Nadeschda Nikitina;Sebastian Rudolph	2012		10.3233/978-1-61499-098-7-618	proof theory;discrete mathematics;mathematical optimization;interpolation;computer science;existential quantification;terminology;exponential function;monad (category theory)	AI	-8.83698820133359	16.615657689994244	49567
3107a0facbcc837fce7fe75da448e2f1e66e1826	on mathematical foundations for business modeling (presented at tools-usa 2000)	directed graphs;mathematical model business communication machinery buildings refining banking insurance telecommunications communication industry visualization;systems analysis corporate modelling directed graphs diagrams;corporate modelling;diagrams;business model;systems analysis;mathematical model;algebraic term rewriting mathematical foundations business modeling business domains toposes generalized sketch directed graph diagrams labels predefined signature predicate visualization superstructures business specifications logical derivation	Presents sketch-answers to the following three questions. (1) What is a business domain, mathematically? (2) What is a business model of business domain, mathematically? (3) What is the mathematical machinery suitable for building and manipulating business models? These questions may be answered as follows. (1) Any given business domain D is (mathematically) a topos, i.e. a particular case of a quite general mathematical structure. Probably, even the following more refined picture is valid. Each specific kind of business B (banking, insurance, telecom industry, etc.) determines its own kind of toposes, Top(B), so that any business domain D in B is a topos of sort Top(B), (2) Normally, toposes D are infinite and, given such a topos (domain) D, the task of business modeling is to find a finite yet complete presentation of D. Syntactically, this presentation is specified by a (generalized) sketch, i.e. a directed graph with diagrams marked by labels taken from a predefined signature corresponding to Top(B). (In fact, setting Top(B) amounts to nothing but setting some signature of a legitimate predicate and operations). (3) So, thinking semantically, business specifications are sketches, whatever visualization superstructures (ER, OMT, UML) are built over them. Then, a natural mathematical apparatus for managing and manipulating business specifications is the machinery of deriving and rewriting sketches. In essence, the latter is nothing but a counterpart of ordinary logical derivation and algebraic term rewriting for the graph-based situation.		Zinovy Diskin	2000		10.1109/TOOLS.2000.891368	discrete mathematics;business domain;computer science;artifact-centric business process model;theoretical computer science;business process model and notation;business rule;business process modeling;algorithm	Theory	-5.118588770565947	10.60352384363682	49581
28e5d5b92d74caf5c5e215860fce5366fd62c093	left (right) semi-uninorms and coimplications on a complete lattice	left right semi uninorm;order property;neutrality principle;fuzzy connective;coimplication	In this paper, we firstly discuss the deresidual operations of left (right) semi-uninorms and show which properties they satisfy. Then, we investigate the left and right semi-uninorms induced by a coimplication and give some conditions such that the operations induced by a coimplication constitute left or right semi-uninorms. Finally, we demonstrate that the meet-semilattice of all disjunctive right (left) ?-distributive left (right) semi-uninorms is order-reversing isomorphic to the join-semilattice of all right ?-distributive coimplications, which satisfy the neutrality principle.	semiconductor industry	Zhudeng Wang	2016	Fuzzy Sets and Systems	10.1016/j.fss.2015.03.005	calculus;pure mathematics;mathematics	NLP	-7.442629617187276	10.388853647417978	49863
ce633b66b82f5fd41b35e4e9e49c6b242fec7c15	three extensional models of type theory	computacion informatica;ciencias basicas y experimentales;matematicas;type theory;grupo a	Martin-Löf’s type theory exists in two forms, differing in the formalisation of the identity types. In [15] Per Martin-Löf formulated his type theory with the extensional rules for the identity types, identifying judgmental and propositional equality. This rendered type-checking and well-formedness of formulas undecidable. For this reason (among others), he latter formulated intensional rules for the identity type that do preserve the decidability of type-checking and well-formedness of formulas. For this reason, the intensional version is adopted by most implementations.	intensional logic;type system;type theory;undecidable problem	Benno van den Berg	2009	Mathematical Structures in Computer Science	10.1017/S0960129509007440	discrete mathematics;computer science;mathematics;programming language;type theory;algorithm	Logic	-12.397608351852986	16.394399415886195	49979
0bb820a055f79793ba6b2f8201293175183d2eeb	a resource aware computational interpretation for herbelin's syntax		We investigate a new computational interpretation for an intuitionistic focused sequent calculus which is compatible with a resource aware semantics. For that, we associate to Herbelin’s syntax a type system based on non-idempotent intersection types, together with a set of reduction rules –inspired from the substitution at a distance paradigm– that preserves (and decreases the size of) typing derivations. The non-idempotent approach allows us to use very simple combinatorial arguments, only based on this measure decreasingness, to characterize strongly normalizing terms by means of typability. For the sake of completeness, we also study typability (and the corresponding strong normalization characterization) in the reduction calculus obtained from the former one by projecting the explicit substitutions.	computation;computational semantics;computer science;explicit substitution;idempotence;natural deduction;normalization property (abstract rewriting);programming paradigm;refinement (computing);rewriting;sequent calculus;the witness;type inference;type rule;type system;typing	Delia Kesner;Daniel Lima Ventura	2015		10.1007/978-3-319-25150-9_23	discrete mathematics;mathematics;programming language;algorithm	Logic	-10.382264779399847	16.7407662642058	50082
98d8ec917ddcca22a839e5014bf0a00ae37f468e	on the minimality of k, f and d or: why löten is non-trivial		Without Abstract		Anne Brüggemann-Klein;Rolf Klein	1987		10.1007/3-540-18170-9_154	mathematics	ECom	-13.840672559000609	14.704314376401236	50184
09221194a3bc06b1b507875f01b5a4721e530bf4	agm contraction and revision of rules	rule based systems;belief revision;normative systems;knowledge representation;agm theory change	In this paper we study AGM contraction and revision of rules using input/output logical theories. We replace propositional formulas in the AGM framework of theory change by pairs of propositional formulas, representing the rule based character of theories, and we replace the classical consequence operator Cn by an input/output logic. The results in this paper suggest that, in general, results from belief base dynamics can be transferred to rule base dynamics, but that a similar transfer of AGM theory change to rule change is much more problematic. First, we generalise belief base contraction to rule base contraction, and show that two representation results of Hansson still hold for rule base contraction. Second, we show that the six socalled basic postulates of AGM contraction are consistent only for some input/output logics, but not for others. In particular, we show that the notorious recovery postulate can be satisfied only by basic output, but not by simple-minded output. Third, we show how AGM rule revision can be defined in terms of AGM rule contraction using the Levi identity. We highlight various topics for further research. B Gabriella Pigozzi gabriella.pigozzi@dauphine.fr Guido Boella boella@di.unito.it Leendert van der Torre leon.vandertorre@uni.lu 1 Università degli Studi di Torino, Torino, Italy 2 CNRS, LAMSADE, Université Paris-Dauphine, PSL Research University, 75016 Paris, France 3 Computer Science and Communication, University of Luxembourg, Esch-sur-Alzette, Luxembourg	belief revision;carrier-to-noise ratio;coherence (physics);computer science;emoticon;input/output;microsoft outlook for mac;operational semantics;r:base;rule 90;rule-based system;simpson's rule;theory	Guido Boella;Gabriella Pigozzi;Leon van der Torre	2016	Journal of Logic, Language and Information	10.1007/s10849-016-9244-9	rule-based system;knowledge representation and reasoning;computer science;artificial intelligence;mathematics;belief revision;algorithm	AI	-12.385996882679105	9.41083875594888	50321
101e03752df4c46be0b3a1eb11da07370dac610d	on supporting strong and default negation in answer-set program updates		Existing semantics for answer-set program updates fall into two categories: either they consider only strong negation in heads of rules, or they primarily rely on default negation in heads of rules and optionally provide support for strong negation by means of a syntactic transformation. In this paper we pinpoint the limitations of both these approaches and argue that both types of negation should be first-class citizens in the context of updates. We identify principles that plausibly constrain their interaction but are not simultaneously satisfied by any existing rule update semantics. Then we extend one of the most advanced semantics with direct support for strong negation and show that it satisfies the outlined principles as well as a variety of other desirable properties.	answer set programming;first-class citizen;stable model semantics	Martin Slota;Martin Baláz;João Leite	2014		10.1007/978-3-319-12027-0_4	programming language;syntax;logic programming;semantics;negation;mathematics	DB	-16.91960160750828	8.582864380873959	50360
23f1419a5192b33fbcb2b99249c1771bc559114d	categorical models of explicit substitutions	programming language;complejidad programa;logical programming;functional programming;programmation logique;informatique theorique;indexation;explicit substitution;programmation fonctionnelle;program complexity;analisis semantico;analyse semantique;programacion logica;programacion funcional;semantic analysis;complexite programme;computer theory;informatica teorica	Category theory is known to provide “good” models of type theory, such as indexed categories, locally cartesian closed categories or the more recent categories with families. Extending the work of Pierre Clairambault, who proved that categories with families with some extra structure were locally cartesian closed, we are interested in finding equivalences between all those models. In the last part of this report, we will adapt Hofmann’s solution to a problem in interpreting dependent type theory in locally cartesian closed categories to categories with families.	cartesian closed category;category theory;dependent type;explicit substitution;pierre wolper;type theory	Neil Ghani;Valeria de Paiva;Eike Ritter	1999		10.1007/3-540-49019-1_14	computer science;artificial intelligence;mathematics;programming language;functional programming;algorithm	Logic	-12.656543404375164	17.768138505228315	50362
69872c12ffd9a4c04797be7f5a1cd0a7b110a064	comments on some completeness theorems of urquhart and méndez & salto	theorem;axiomatization;logic;negation;complete axiomatization;logique multivaluee;many valued;urquhart a;axiomatisation;substructural;system;theoreme;matrix;systeme;completeness;extension;matrice;completude;mendez j et salto f;substructural logic;many valued logic	Urquhart [8] and Méndez & Salto [5, 6] claim to establish completeness theorems for the system C and two of its negation extensions. In this note, we do the following three things: (1) provide a counterexample to all of these alleged completeness theorems, (2) attempt to diagnose the mistakes in the reported completeness proofs, and (3) provide complete axiomatizations of the desired systems.		Kenneth Harris;Branden Fitelson	2001	J. Philosophical Logic	10.1023/A:1017549804474	discrete mathematics;theorem;philosophy;epistemology;completeness;negation;system;mathematics;programming language;logic;substructural logic;algorithm;matrix	Logic	-11.574248193074709	12.175901803302022	50404
dfac36f5a8960107de701a8457ee25c5ad7963c5	boolean rings for intersection-based satisfiability	arbre recherche;methode recursive;logica booleana;simplification;saturacion;satisfiabilite;horn clauses;metodo recursivo;recursive method;methode gauss;intelligence artificielle;anneau;satisfiability;search trees;arbol investigacion;gauss method;simplificacion;artificial intelligence;logique booleenne;clause horn;metodo gauss;inteligencia artificial;ring;search tree;boolean logic;saturation;anillo;satisfactibilidad	A potential advantage of using a Boolean-ring formalism for propositional formulæ is the large measure of simplification it facilitates. We propose a combined linear and binomial representation for Booleanring polynomials with which one can easily apply Gaussian elimination and Horn-clause methods to advantage. We demonstrate that this framework, with its enhanced simplification, is especially amenable to intersection-based learning, as in recursive learning and the method of St̊almarck. Experiments support the idea that problem variables can be eliminated and search trees can be shrunk by incorporating learning in the form of Boolean-ring saturation.	formal grammar;gaussian elimination;horn clause;level of detail;polynomial;recursion;selinux	Nachum Dershowitz;Jieh Hsiang;Guan-Shieng Huang;Daher Kaiss	2006		10.1007/11916277_33	boolean algebra;horn clause;computer science;artificial intelligence;search tree;programming language;simplification;saturation;algorithm;ring;gauss–seidel method;satisfiability	AI	-15.927295829126983	16.090289640161288	50544
8668d7d13003ea901757d25799dd9acb19c22235	pairs, sets and sequences in first-order theories	set theory;first order;wijsbegeerte	In this paper we study the idea of theories with containers, like sets, pairs, sequences. We provide a modest framework to study such theories. We prove two concrete results. First, we show that first order theories of finite signature that have functional non-surjective ordered pairing are definitionally equivalent to extensions in the same language of the basic theory of non-surjective ordered pairing. Secondly, we show that a firstorder theory of finite signature is sequential (is a theory of sequences) iff it is definitionally equivalent to an extension in the same language of a system of weak set theory called WS.	definition;first-order predicate;set theory	Albert Visser	2008	Arch. Math. Log.	10.1007/s00153-008-0087-1	combinatorics;discrete mathematics;topology;first-order logic;mathematics;set theory;algebra	AI	-10.42443546514489	16.832040372070978	50580
1db8cab9d86a9e38b3c0d0e62669edc9f6519cd8	hierarchical semantics for relevant logics			denotational semantics	Ross T. Brady	1992	J. Philosophical Logic	10.1007/BF00260741	t-norm fuzzy logics;kripke semantics;operational semantics	Logic	-14.963247241653466	13.363373550159064	50647
c0a3bfd34b81487c7068be469acf26212383dbb8	dual-intuitionistic logic	difference operator;cut elimination;set theory;intuitionistic logic	The sequent system LDJ is formulated using the same connectives as Gentzen’s intuitionistic sequent system LJ, but is dual in the following sense: (i) whereasLJ is singular in the consequent, LDJ is singular in the antecedent; (ii) whereasLJ has the same sentential counter-theorems as classical LK but not the same theorems, LDJ has the same sentential theorems as LK but not the same counter-theorems. In particular, LDJ does not reject all contradictions and is accordingly paraconsistent. To obtain a more precise mapping, both LJ andLDJ are extended by adding a “pseudo-difference” operator . − which is the dual of intuitionistic implication. Cut-elimination and decidability are proved for the extended systems LJ . − andLDJ . −, and a simply consistent but ω-inconsistent Set Theory with Unrestricted Comprehension Schema based on LDJ is sketched.	finite difference;intuitionistic logic;lightweight java;list comprehension;logical connective;paraconsistent logic;sequent calculus;set theory	Igor Urbas	1996	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1039886520	fuzzy logic;zeroth-order logic;discrete mathematics;higher-order logic;topology;many-valued logic;intuitionistic logic;intermediate logic;predicate functor logic;mathematics;minimal logic;truth value;substructural logic;second-order logic;algorithm;set theory	Logic	-10.439164143587536	12.348487780013064	50718
bb934d0122097cd6d66453deb7c162a7eaccf077	axiomatizations of temporal logics on trace systems	temporal logic;complete axiomatization;computation tree logic;partial order	Partial order temporal logics interpreted on trace systems have been shown not to have finitary complete axiomatizations due to the fact that the complexity of their decidability problem is in 11. This paper gives infinitary complete proof systems for several temporal logics on trace systems e.g. Computation Tree Logic with past operators and an essential subset of Interleaving Set Temporal Logic.	computation tree logic;forward error correction;temporal logic	Wojciech Penczek	1993		10.1007/3-540-56503-5_45	partially ordered set;dynamic logic;monoidal t-norm logic;t-norm fuzzy logics;combinatorics;discrete mathematics;linear temporal logic;description logic;higher-order logic;temporal logic;interval temporal logic;computation tree logic;computer science;intermediate logic;mathematics;substructural logic;multimodal logic;algorithm;temporal logic of actions	Logic	-12.470821497911892	14.597791139177422	50770
325aa67589bbda422053f0de2d2f3cc510d3962f	knowledge-based modelling of voting protocols	electronic voting;knowledge base	We contend that reasoning about knowledge is both natural and pragmatic for verification of electronic voting protocols. We present a model in which desirable properties of elections are naturally expressed using standard knowledge operators, and show that the associated logic is decidable (under reasonable assumptions of bounded agents and nonces).	cryptographic nonce;knowledge-based systems	Anguraj Baskar;Ramaswamy Ramanujam;S. P. Suresh	2007		10.1145/1324249.1324261	knowledge base;computer science;knowledge management;artificial intelligence;theoretical computer science;data mining	AI	-16.14579929442161	4.955487017209858	50891
fca816ea146483465d1c71d8b6aa1a2cf5cdc4e6	independence-friendly logic and axiomatic set theory	set theory;first order;continuum hypothesis;first order logic	Abstract   In order to be able to express all possible patterns of dependence and independence between variables, we have to replace the traditional first-order logic by independence-friendly (IF) logic. Our natural concept of truth for a quantificational sentence  S  says that all the Skolem functions for  S  exist. This conception of truth for a sufficiently rich IF first-order language can be expressed in the same language. In a first-order axiomatic set theory, one can apparently express this same concept in set-theoretical terms, since the existence of functions can be expressed there. Because of Tarski's theorem, this is impossible. Hence there must exist set-theoretical statements, even provable ones, which are said to be true in first-order models of axiomatic set theory but whose Skolem functions do not all exist. Hence there are provable sentences in axiomatic set theory that are false in accordance with our ordinary conceptions of set-theoretical truth. Such counter-intuitive propositions have been known to exist, but they have been blamed on the peculiarities of very large sets. It is argued here that this explanation is not correct and that there are intuitively false theorems not involving very large sets. Hence the provability or unprovability of a set-theoretical statement, e.g. of the continuum hypothesis (CH) in axiomatic set theory is not necessarily relevant to the truth of CH.	set theory	Jaakko Hintikka	2004	Ann. Pure Appl. Logic	10.1016/j.apal.2003.11.006	axiomatic system;mathematical analysis;discrete mathematics;topology;first-order logic;mathematics;programming language;algorithm;algebra	Logic	-12.189885731439066	6.576125754198797	51033
9c4ac903a419752d0d2948baeb6d3ecad9c67df5	a logic programming with complex objects	complex objects;logic;predicate calculus;logical programming;raisonnement;calcul predicat;programming theory;programmation logique;object oriented;calculo predicado;razonamiento;oriente objet;theorie programmation;logic programs;reasoning;programacion logica;orientado objeto;logique;logica;deduction	We present a logic for reasoning with complex objects, which is a repaired and significantly extended version of Maier's O-logic [43]. The logic naturally supports complex objects, object identity, and deduction, and has several other interesting features. It elegantly combines object-oriented and value-oriented paradigms and, in particular, contains all of predicate calculus as a special case. The revised O-logic has a sound and complete resolution-based proof procedure.	logic programming	Michael Kifer;James Wu	1993	J. Comput. Syst. Sci.	10.1016/0022-0000(93)90021-N	predicate logic;dynamic logic;higher-order logic;computer science;artificial intelligence;predicate functor logic;computational logic;mathematics;predicate variable;logic;algorithm	Theory	-15.263840340713667	15.34580323979611	51061
61b09be7a3eacf4085302cc1c94314c7f07b8a33	the usual model construction for nfu preserves information	urelements;models with automorphisms;new foundations;nf;homogeneity	The “usual” model construction for NFU (Quine’s New Foundations with urelements, shown to be consistent by Jensen) starts with a model of the usual set theory with an automorphism that moves a rank (this rank is the domain of the model). “Most” elements of the resulting model of NFU are urelements (it appears that information about their extensions is discarded). The surprising result of this paper is that this information is not discarded at all: the membership relation of the original model (restricted to the domain of the model of NFU ) is definable in the language of NFU . A corollary of this is that the urelements of a model of NFU obtained by the “usual” construction are inhomogeneous: this was the question the author was investigating initially. Other aspects of the mutual interpretability of NFU and a fragment of ZFC are discussed in sufficient detail to place this result in context.	jensen's inequality;new foundations;quine (computing);zermelo–fraenkel set theory	M. Randall Holmes	2012	Notre Dame Journal of Formal Logic	10.1215/00294527-1722764	combinatorics;homogeneity;pure mathematics;mathematics;new foundations;statistics	Theory	-7.008283671899583	12.689146802008937	51087
d8a0d81051fbcefb1b526e1ca28f4e0597498608	optimal axiomatizations for multiple-valued operators and quantifiers based on semi-lattices	sequent calculus;natural deduction;lattice rules;multiple valued;first order logic	We investigate the problem of finding optimal axiomatizations for operators and distribution quantifiers in finitely-valued first-order logics. We show that the problem can be viewed as the minimization of certain two-valued prepositional formulas. We outline a general procedure leading to optimized quantifier rules for the sequent calculus, for natural deduction and for clause formation. In the case of operators and quantifiers based on semi-lattices, rules with a minimal branching degree can be obtained by instantiating a schema, which can also be used for optimal tableaux with sets-as-signs.	semiconductor industry	Gernot Salzer	1996		10.1007/3-540-61511-3_122	zeroth-order logic;discrete mathematics;cut-elimination theorem;computer science;first-order logic;mathematics;proof calculus;curry–howard correspondence;sequent;programming language;sequent calculus;natural deduction;algebra	EDA	-15.034488381025296	12.501339221638034	51176
8220d95868b9be74765b0f5c81db19c0794b0b79	global skolemization with grouped quantifiers		When ‘local’ Skolemization treats proper axioms along with the premisses and the negated conclusion of a conjecture, each sentence originates a finite number of Skolem symbols, without any explicit connection among symbols originating from different sentences. A global approach, proposed by Davis and Fechter, consists in the simultaneous introduction of infinitely many new functors, which eliminates all quantifiers of the language in a single shot. Two conflicting goals in this elimination process are: to keep as small as possible the collection of ‘key’ formulae that deserve their own Skolem functors, and to avoid time-consuming simplifications during Skolemization. Some initial contribution is given here to this potentially open-ended research topic. A technique is proposed by which: contiguous alike quantifiers are treated as a single bunch, so as to lower the arity of Skolem functors; and their relative order —which is immaterial— does not affect the result.	bunch;idempotence;long division;method of analytic tableaux;nonlinear gameplay;prolog;quantifier (logic);setl;skolem normal form;text simplification	Domenico Cantone;Marianna Nicolosi Asmundo;Eugenio G. Omodeo	1997			discrete mathematics;process of elimination;conjecture;axiom;arity;finite set;skolem normal form;mathematics;functor;sentence	AI	-9.3805559380945	8.850813774918892	51194
3de02e06c960b5c940263430f0c401d6b58281db	modular specifications with supernormal defaults	simple module;query evaluation;logic programs	We add a simple module system to specifications with supernormal defaults. It allows to distinguish between “defining” and “calling” occurrences of predicates. This greatly improves the understandability of large default specifications and especially helps to solve the problem of unwanted contrapositions of rules. Our approach is similar to the distinction between head and body of logic programming rules, but it works on the higher level of default theories. So our results can help to integrate both approaches — at least on the semantical side for specification purposes. We also clarify the relation to prioritized defaults and argue that modular specifications are often preferable. Finally, we give a theoretical basis for query evaluation.	algorithm;computer science;computer scientist;default logic;knowledge representation and reasoning;locality of reference;logic programming;modular programming;predicate (mathematical logic);relational database;semantics (computer science);theory;udo of aachen	Stefan Brass	1994	Annals of Mathematics and Artificial Intelligence	10.1007/BF01530785	simple module;discrete mathematics;computer science;artificial intelligence;machine learning;mathematics;algorithm	AI	-17.73021475404822	9.00479565295181	51236
01fde39cd4545e91db77aeca0bf402d495d099a0	theorey of vector truth degrees of formulas in two-valued predicate logic	iron abstracts barium;vectors formal logic;vector truth degrees theory approximate reasoning quantitative predicate logic theory vector similarity degree first order formulae vector truth degree two valued predicate logic;approximate reasoning quantitative predicate logic vector truth degree vector similarity degree	Quantitative logic, which sets up certain ways of connection between mathematical logic and numerical computation, is regarded as a highly representative example of uncertainty that is capable of handling vagueness. In this paper, the definition of the vector truth degree of first-order formulae and the definition of the vector similarity degree between first-order formulae are proposed, along with their properties being discussed respectively. The proposed work enriches the theory of quantitative predicate logic, and provides a possible framework of approximate reasoning that is able to catch both the qualitative and quantitative aspects of the real problem.	approximation algorithm;computation;execution unit;first-order logic;first-order predicate;fuzzy logic;numerical analysis;vagueness	Xiaoyan Qin	2013	2013 International Conference on Machine Learning and Cybernetics	10.1109/ICMLC.2013.6890876	predicate logic;fuzzy logic;dynamic logic;functional predicate;non-classical logic;discrete mathematics;description logic;higher-order logic;tautology;predicate functor logic;truth function;mathematics;logical connective;predicate variable;predicate;monadic predicate calculus;truth value;algorithm	AI	-14.23096634774642	9.747108223810793	51307
5c2cd0daf8e0bfdb7bcab66c57c4b9c0b3cf9db0	argumentation for practical reasoning: an axiomatic approach		An argument system could be viewed as a pair of a set of argument and a binary attack relation between arguments. The semantics of argumentation rests on the acceptability of arguments and the structure of arguments and their attack relations. While there is a relatively good understanding of the acceptability of arguments, the same can not be said about their structure and attack relations. In this paper, we present an axiomatic analysis of the attack relations of rule-based argument systems by presenting a set of simple and intuitive properties and showing that they indeed determine an uniquely defined common attack relations for rule-based argument systems.	logic programming	Phan Minh Dung	2016		10.1007/978-3-319-44832-9_2	knowledge management;argumentation theory;pure mathematics;argumentation framework;axiom;practical reason;semantics;binary number;axiomatic system;computer science	AI	-15.772854255152254	4.758234986580436	51445
d25fb920e5fd6b925209948aaba0606d44953720	on variants of o-minimality		The hypotheses of o-minimality and strong minimality have yielded rich modeltheoretic consequences. The models in each of these classes are characterized by the property that the definable sets in one variable in any elementarily equivalent structure are exactly those which are quantifier-free definable in some “basic” reduct of the given structure. In the case of o-minimal@ the reduct is a total order, and in strong minimal&y it is just equality. Our goal here is to begin to investigate what results hold if all the structures to be considered are appropriately “minimal” expansions of some other basic relational structure. We are guided in our work by the criteria that the basic structures have mathematically interesting minimal expansions and that the class of minimal expansions has some reasonable model theory analogous to that available in the motivating contexts. Our choice of basic structures is influenced by some as yet unpublished work on Jordan groups, due to Adeleke, Neumann, and the first author [l-3,20]. We now sketch this work in some detail for readers unfamiliar with it. Let (G;X) be a permutation group, that is, G is a permutation group on a set X. If A cX, then GcA), respectively GIAl, denotes the pointwise, respectively setwise, stabilizer of A in G. The permutation group is called primitive if there does not exist a non-trivial G-invariant partition of X. It is said to be k-transitive, where k E N, if G is transitive on the set of ordered k-tuples of distinct elements of X, and is called highly transitive if it is k-transitive for all k E N. A subset A c X is a Jordan set for (G;X) if IAl > 1 and GCXiA) is transitive on A. The set A is called a proper Jordan set	norm (social);quantifier (logic);relational model	Dugald Macpherson;Charles Steinhorn	1996	Ann. Pure Appl. Logic	10.1016/0168-0072(95)00037-2	combinatorics;mathematics	Logic	-6.226067130772428	12.181835000730093	51480
f691f74cfeb6e0f2c378fdabadc92d02f19dbc5d	linear exponential comonads without symmetry		The notion of linear exponential comonads on symmetric monoidal categories has been used for modelling the exponential modality of linear logic. In this paper we introduce linear exponential comonads on general (possibly non-symmetric) monoidal categories, and show some basic results on them.	linear logic;modality (human–computer interaction);time complexity	Masahito Hasegawa	2016		10.4204/EPTCS.238.6	combinatorics;mathematical analysis;discrete mathematics;mathematics	Logic	-9.142947516768785	14.763467250617193	51485
299c4b9427a5b0f2d099631a1ba1662eb342deff	higher order multi-valued resolution	non classical logic;resolution;generic model;existence theorem;higher order;λ calculus;higher order logic;multi valued	This paper introduces a multi-valued variant of higher-order resolution and proves it correct and complete with respect to a variant of Henkin’s general model semantics. This resolution method is parametric in the number of truth values as well as in the particular choice of the set of connectives (given by arbitrary truth tables) and even substitutional quantifiers. In the course of the completeness proof we establish a model existence theorem for this logical system. The work reported in this paper provides a basis for developing higherorder mechanizations for many non-classical logics.	artificial intelligence;commonsense knowledge (artificial intelligence);formal system;frege;higher-order function;logical connective;natural language;undefined behavior	Michael Kohlhase;Ortwin Scheja	1999	Journal of Applied Non-Classical Logics	10.1080/11663081.1999.10510980	discrete mathematics;higher-order logic;computer science;first-order logic;mathematics;programming language;truth value;algorithm;gödel's completeness theorem	AI	-14.222228111776754	11.247417473730893	51513
e264319652f355dcd9031d167d20c548c7980008	a logic for the discovery of deterministic causal regularities	regularity theories of causation;causal discovery;mackie;adaptive logic	We present a logic, $$\mathbf {ELI^r}$$ ELI r , for the discovery of deterministic causal regularities starting from empirical data. Our approach is inspired by Mackie’s theory of causes as INUS-conditions, and implements a more recent adjustment to Mackie’s theory according to which the left-hand side of causal regularities is required to be a minimal disjunction of minimal conjunctions. To derive such regularities from a given set of data, we make use of the adaptive logics framework. Our knowledge of deterministic causal regularities is, as Mackie noted, most often gappy or elliptical. The adaptive logics framework is well-suited to explicate both the internal and the external dynamics of the discovery of such gappy regularities. After presenting $$\mathbf {ELI^r}$$ ELI r , we first discuss these forms of dynamics in more detail. Next, we consider some criticisms of the INUS-account and show how our approach avoids them, and we compare $$\mathbf {ELI^r}$$ ELI r with the CNA algorithm that was recently proposed by Michael Baumgartner.	algorithm;causal filter;causality;context-sensitive language;decision problem;eli;first-order logic;first-order predicate;heuristic (computer science);linear algebra;national fund for scientific research;netware;regular language;theory;thomas baumgartner;type signature	Mathieu Beirlaen;Bert Leuridan;Frederik Van De Putte	2016	Synthese	10.1007/s11229-016-1222-x	mathematics;algorithm	AI	-14.453730370997818	9.172149389656264	51596
18941bb531d3ed4063e18b6e6037805aa1407290	satisfiability degree theory for temporal logic	propositional logic;reasoning;satisfiability degree;temporal logic	The truth value of propositional logic is not capable of representing the real word full of complexity and diversity. The requirements of the proposition satisfiability are reviewed in this paper. Every state is labeled with a vector, which is defined by the proposition satisfiability degree. The satisfiability degree for temporal logic is proposed based on the vector of satisfiability degree. It is used to interpret the truth degree of the temporal logic instead of true or false. A sound and precise reasoning system for temporal logic is established and the computation is given. One example of a leadership election is included to show that uncertain information can be quantized by the satisfiability degree.	computation;propositional calculus;quantization (signal processing);reasoning system;requirement;temporal logic	Jian Luo;Guiming Luo;Mo Xia	2011			dynamic logic;zeroth-order logic;combinatorics;discrete mathematics;linear temporal logic;higher-order logic;interval temporal logic;computation tree logic;intermediate logic;mathematics;substructural logic;multimodal logic;algorithm;satisfiability	AI	-12.470404998782666	13.491290008950553	51916
b3eb81b5fb67c981afb836e9d61eeac7bf231531	a revision of the fundamental rules of combinatory logic			belief revision;combinatory logic	Haskell B. Curry	1941	J. Symb. Log.		algorithm;philosophy of logic	Theory	-13.123150114911123	11.362506101529283	52141
9bb0d61841d8c2afc528deeb16f434b11d567c3f	type theory and recursion (extended abstract)	second order;computer languages;parametric statistics;functional type;recursion operator;logic;primitive type constructions;intuitionistic linear type theory;general recursion operator;ear;algebra;type theory recursive functions;calculus;type theory;logic algebra computer science ear equations laboratories calculus power system modeling computer languages parametric statistics;recursive functions;computer science;power system modeling;intuitionistic function types;intuitionistic function;second order quantification general recursion operator intuitionistic function intuitionistic linear type theory second order type theory primitive type constructions intuitionistic function types;second order type theory;second order quantification	At first sight, type theory and recursion are compatible: there are many models of the typed lambda calculus with a recursion operator at all types. However the situation changes as soon as one considers sums. By a theorem of Huwig and Poigné, any carte-sian closed category with binary sums and such a general recursion operator is trivial. Domain theory provides the category of cpos and continuous functions. It is cartesian closed and has a general recursion operator — the least fixed-point operator. It (necessarily) does not have binary sums, but the closely associated category of cpos and strict continuous functions does. We propose an analysis in terms of intuitionistic linear logic, or, better, intuitionistic linear type theory. This is compatible with a general recursion operator for the intuitionistic functions. The category of cpos and strict continuous functions provides a very simple model of the combination of the type theory with such a general recursion operator. The continuous functions appear as the intuitionistic, not necessarily linear , ones. There are many other interesting models available arising from other notions of computation or variant categories of domains. As the cpo model allows contraction, relevant type theory is more appropriate for it than linear type theory. However other models do not permit contraction; an example is the category of complete semilattices and completely additive functions. This is also the category of algebras of the Hoare powerdomain which assigns to every cpo the collection of all non-empty Scott-closed subsets. Another concern of semantics has been polymor-phism. Various models of Girard's System F and related calculi have been developed. Of particular interest are those where polymorphism is treated para-metrically (uniformly). Various notions of parametric-ity arise, such as the relational one of Reynolds or the dinatural one of Bainbridge, Freyd, Scedrov and Scott. With Reynolds' relational parametricity, one has derivable in System F finite products and sums, second-order existential quantification and initial and final algebras (of definable covariant functors). It is both interesting — and necessary for the development of the semantics of programming languages — to consider the interaction of polymorphism and recursion. However as the parametric models have categorical sums, a now familiar difficulty arises. We consider instead a second-order intuitionistic linear type theory whose primitive type constructions are linear and intuitionistic function types and second-order quantification. In the presence of a suitably modified form of Reynold's parametricity the usual operators of propositional linear …	cartesian closed category;computation;domain theory;existential quantification;fixed-point combinator;function type;hoare logic;intuitionistic logic;linear logic;parametricity;power domains;programming language;recursion;semantics (computer science);substructural type system;system f;type theory;typed lambda calculus;utility functions on indivisible goods	Gordon D. Plotkin	1993		10.1109/LICS.1993.287571	intuitionistic type theory;mathematical analysis;discrete mathematics;dependent type;computer science;double recursion;mathematics;mutual recursion;programming language;logic;type theory;parametric statistics	Logic	-9.017447145300856	15.527118812423588	52191
fcfe3a6b2a7c5dbb8603f6edb1d35c519a14f979	strength factors: an uncertainty system for a quantified modal logic		We present a new system S for handling uncertainty in a quantified modal logic (first-order modal logic). The system is based on both probability theory and proof theory and is derived from Chisholm’s epistemology. We concretize Chisholm’s system by grounding his undefined and primitive (i.e. foundational) concept of reasonableness in probability and proof theory. We discuss applications of the system. The system described below is a work in progress; hence we end by presenting a list of future challenges.	approximation algorithm;cobham's thesis;computation;counterfactual conditional;experiment;first-order logic;first-order predicate;knowledge base;machine learning;modal logic;norm (social);robot;undefined behavior;vector graphics	G. Sundar NaveenSundar;Selmer Bringsjord	2017	CoRR		counterfactual thinking;proof theory;modal logic;artificial intelligence;machine learning;computer science;counterfactual conditional;probability theory;sketch;lottery paradox	AI	-15.372663179831433	6.261422901888872	52378
6858cd1a8bd8ad320877534383633bcb8efe648e	sets that don't help	complexity theory;tree;code optimization;reducibility;complexity;program optimization;algorithm;directed graph;set union algorithm;depth first search;flow analysis;flow graph;interval analysis	This paper contains several results yielding pairs of problems which don't help each other's solution, and therefore which may be said to be complex for “different reasons.” Statements are formalized and results proved within Blum complexity theory, generalized to relative algorithms. The approach is fairly intuitive; all details appear in [1] and [2].	algorithm;blum axioms;computational complexity theory	Nancy A. Lynch;Albert R. Meyer;Michael J. Fischer	1973		10.1145/800125.804043	time complexity;mathematical optimization;combinatorics;discrete mathematics;computer science;program optimization;mathematics;programming language;algorithm	Theory	-9.270686977302166	17.72680276165351	52641
185b247f8be30e8ef764a878d9f0dd53e818ddeb	complexity and expressive power of second-order extended horn logic	so hornr;journal;capture;ciencias basicas y experimentales;matematicas;descriptive complexity;grupo a;so ehornr	Descriptive complexity is one of the central issues in finite model theory. While computational complexity is concerned with the computational resources such as time, space or the amount of hardware that are necessary to decide a property, descriptive complexity asks for the logic resources that are necessary to define it. One goal of descriptive complexity is to characterize complexity from the point of view of logic by providing for each important complexity class, logical systems which captures the complexity class, that is, whose expressive power (on finite structures) coincides precisely with that class. The first capturing result is Fagin’s theorem which says that existential secondorder logic captures NP[13]. Now there have been many capturing results for logic systems and complexity classes[1, 15, 16, 19, 21]. For example, on ordered finite structures, deterministic transitive closure logic(FO (DTC)), transitive closure logic(FO (TC)), inflationary fixed-point logic(FO (IFP)), and partial fixed-point logic(FO (PFP)) captures LOGSPACE, NLOGSPACE, P, and PSPACE, respectively. It’s well known that second-order logic (SO) captures PH, the polynomial hierarchy (see e.g. L. J. Stockmeyer [18]). More precisely, for each k, ΣK−SO captures the complexity class Σk , where Σ 1 k − SO is the set of second-order sentences with second-order quantifier prefix	automated theorem proving;complexity class;computational complexity theory;computational resource;descriptive complexity theory;formal system;horn clause;l (complexity);least fixed point;p (complexity);ph (complexity);pspace;polynomial hierarchy;quantifier (logic);transitive closure	Shiguang Feng;Xishun Zhao	2013	Math. Log. Q.	10.1002/malq.201110034	artificial intelligence;mathematics;regulatory capture;programming language;algorithm;descriptive complexity theory	Logic	-8.934610086785797	16.653586625986545	52649
a46aa45d8f9fc28bdfdeb76de44a12fd5db91a00	on the epistemological foundations of logic programming and its extensions	knowledge representation	One of the major roles of logic in computer science and A.I. is for knowledge representation and specification. In the context of knowledge r presentation, formal logic is widely praised as the tool par excellence for expressing information in a precise way and for correct and precise communication of information between different experts. In the scenario of communicating experts, the experts express their knowledge about some external problem domain in logic specifications which subsequently are communicated to other experts. In the computational ogic approach to AI, computers participate in this and assist the human experts by solving computational problems using the logic specifications. The use of formal logic helps to avoid the ambiguities and lacunas that appear frequently in natural language specifications and, in a absence of computer systems that understand natural language, is the most promising way of transferring knowledge to a computer system. Obviously, when different human experts communicate their knowledge about some external problem domain via logical specifications, correct communication is only possible to the extent that they interpret the logical formulas in the same way about this problem domain. They should agree on what the formulas of the specification say about the problem domain. The way human experts interpret the logic formulas of a forreal logic in the problem world is what logicians call the declarative reading of the logic. One of the fundamental prexassumptions underlying the use of logic for knowledge representation, specification and problem solving is that a formal logic has a weU-understood and objective declarative reading. The epistemological study of a logic aims to clarify its declarative reading. A standard technique to do so is by explaining in what states of the world the formulas of the logic are true. The states of the world in which a given formula is true represent he possible states of the world. An epistemological theory that expresses when logical statements are true is what logicians also call a truth conditional semantics (e.g. (Moore 1995), p. The goal of this study is to investigate the declarative reading of logic programming (LP) and its extensions: stable logic programming, answer set programming and abductive logic programming. One of the central goals of logic programming was and still is to combine the advantages of formal declarative logic and procedural languages (Kowalski 1974). Originally, a definite logic program was seen as a classical logic Horn theory. The use of SLD-resolution induced the p~ocedural interpretation upon logic programs. When the negation as failure inference rule was introduced in Prolog systems, the view of logic programs as classical logic implications broke down. It was realized that the soundness of this rule could not be justified on the basis of the classical logic semantics of a logic program. Important efforts were made to propose alternative formal semantics for logic programming for which negation as failure is sound. This resulted in a number of different semantics of which the completion semantics (Clark 1978), the stable semantics (Gelfond & Lifschitz 1988) and the well-founded semantics (Van Gelder, Ross, & Schlipf 1991) are the most important ones. An important tool for defining these semantics was the use of embeddings of logic programming in other logics, in particular in classical logic (CL), default logic (DL) and autoepistemic logic (AEL). The question investigated here is what these formal semantics ay about the declarative reading of logic programs. One view that appeared very early on is that logic programs represent definitions; recursive programs represent inductive definitions. This view is appealing in the context of many prototypical logic programs:	abductive logic programming;abductive reasoning;answer set programming;autoepistemic logic;computation;computational problem;declarative programming;default logic;game semantics;knowledge representation and reasoning;logic in computer science;natural language;negation as failure;problem domain;problem solving;prolog;recursion;sld resolution;semantics (computer science);stable model semantics;vladimir lifschitz;well-founded semantics;whole earth 'lectronic link	Marc Denecker	2001			multimodal logic;dynamic logic (modal logic);philosophy of logic;epistemology;computational logic;horn clause;description logic;logic programming;algorithm;mathematics;autoepistemic logic	AI	-15.451673738729873	5.937850806078875	52683
8708336b4df7305695f68a6109b5c9373c343948	the 2-sat problem of regular signed cnf formulas	signed logic;np completeness;sat;logic programming;computational complexity;natural language;constraint programming;conjunctive normal form;logic programs;multivalued logic;multivalued logic computational complexity logic programming;logic programming multivalued logic computer science deductive databases natural languages knowledge representation costs application software polynomials noise measurement;signed 2 sat problem 2 sat cnf formulas signed cnf formulas signed atom signed logics annotated logic programming signed cnf complexity;many valued logic	Signed conjunctive normal form (signed CNF) is a classical conjunctive clause form using a generalized notion of literal, called signed atom. A signed atom is an expression of the formS : p, wherep is a classical atom andS, its sign, is a subset of a domain N . The informal meaning is “ p takes one of the values in S”. Applications for deduction in signed logics derive from those of annotated logic programming (e.g., mediated deductive databases), constraint programming (e.g., schedu ling), and many-valued logics (e.g., natural language processing). The central r ôle of signed CNF justifies a detailed study of its subclasses, including algorithms for and complexities of associated SAT problems. Continuing our previous work [1], in this paper we present new results on the complexity of the signed 2-SAT problem; i.e., the case in which all clauses of a signed CNF formula have at most two literals.	2-satisfiability;algorithm;atom;conjunctive normal form;constraint programming;database;decision problem;horn clause;literal (mathematical logic);logic programming;np-completeness;natural deduction;natural language processing;nonlinear system;p versus np problem;polynomial;quantum information;time complexity	Bernhard Beckert;Reiner Hähnle;Felip Manyà	2000		10.1109/ISMVL.2000.848640	conjunctive normal form;constraint programming;discrete mathematics;np-complete;many-valued logic;computer science;theoretical computer science;mathematics;natural language;computational complexity theory;logic programming;algorithm	AI	-14.875701474599	12.689490717251038	52805
a6987f2b668ecb523bf72edb02e9cc5d7d72ab9c	on the equivalence of weak second order and nonstandard time semantics for various program verification systems	second order;program verification		formal verification;turing completeness	Johann A. Makowsky;Ildikó Sain	1986			discrete mathematics;computer science;mathematics;second-order logic;algorithm	Logic	-12.25732749236896	17.302834722777035	52903
d8b1883eac457b1e441c45cafe16986550588107	bipolarity in temporal argumentation frameworks	timed interval based semantics;dynamic argumentation models;human like reasoning;temporal argumentation;bipolarity	A Timed Argumentation Framework (TAF) is a formalism where arguments are only valid for consideration during specific intervals of time, called availability intervals, which are defined for every individual argument. The original proposal is based on a single abstract notion of attack between arguments that remains static and permanent in time. Thus, in general, when identifying the set of acceptable arguments, the outcome associated with a TAF will vary over time.Here, we are introducing an extension of TAF adding the capability of modeling a support relation between arguments. In this sense, the resulting framework provides a suitable model for different time-dependent issues; thus, the main contribution of this work is to provide an enhanced framework for modeling a positive (support) and negative (attack) interaction which varies over time, features that are highly relevant in many real-world situations. This addition leads to a Timed Bipolar Argumentation Framework (T-BAF), where classical argument extensions can be defined, aiming at advancing in the integration of temporal argumentation in different application domains. Bipolar frameworks are equipped with temporal availability for arguments.Admissibility-based extensions for timed argumentation are characterized.Several relations between semantics in timed argumentation are presented.Relations between the classic bipolar and extension-based semantics are studied for BAFs.	argumentation framework	Maximiliano Celmo Budán;Maria Laura Cobo;Diego C. Marténez;Guillermo Ricardo Simari	2017	Int. J. Approx. Reasoning	10.1016/j.ijar.2017.01.013	artificial intelligence;mathematics;algorithm	ML	-16.904763931459122	6.080417573152771	52912
c0d698ddf1e30e3bf8e28bda6410c498260fc78d	on the completeness of first degree weakly aggregative modal logics	canonical model;kripke s a;modal logic;logique modale;coherence;number;nombre;lewis d	This paper extends David Lewis’ result that all first degree modal logics are complete to weakly aggregative modal logic by providing a filtration-theoretic version of the canonical model construction of Apostoli and Brown. The completeness and decidability of all first-degree weakly aggregative modal logics is obtained, with Lewis’s result for Kripkean logics recovered in the case k=1.	modal logic	Peter Apostoli	1997	J. Philosophical Logic	10.1023/A:1017940015180	modal logic;s5;t-norm fuzzy logics;normal modal logic;discrete mathematics;coherence;philosophy;epistemology;axiom s5;canonical model;mathematics;kripke semantics;accessibility relation;grammatical number;algorithm	Logic	-11.888676354620928	12.298681705093351	52982
8db090b80b72709db53384d9ecf6799c1b60735d	model-checking strategic ability and knowledge of the past of communicating coalitions	imperfect information;model checking;alternating time temporal logic	We propose a variant of alternating time temporal logic (ATL) with imperfect information, perfect recall, epistemic modalities for the past and strategies which are required to be uniform with respect to distributed knowledge. The model-checking problem about ATL with perfect recall and imperfect information is believed to be unsolvable, whereas in our setting it is solvable because of the uniformity of strategies. We propose a model-checking algorithm for that system, which exploits the interaction between the cooperation modalities and the epistemic modality for the past. This interaction allows every expressible goal φ to be treated as the epistemic goal of (eventually) establishing that φ holds and thus enables the handling of the cooperation modalities in a		Dimitar P. Guelev;Catalin Dima	2008		10.1007/978-3-540-93920-7_6	model checking;computer science;artificial intelligence;perfect information;algorithm	AI	-17.84252619559805	4.312172597583502	53114
cd49c360ad721f691015afd108feed7b4844094b	a valuation-based analysis of conflict-free petri nets	fairness;controllability;petri net;reachability analysis;decidability	We propose a novel valuation-based approach for analyzing conflict-free Petri nets. The basic idea is to associate a natural number, called the valuation, to each marking in the Petri net. If the set of markings of zero valuation is forward closed, then the valuation along any Petri net computation is nonincreasing, and in many cases, has the tendency to move towards zero valuation. Using the valuation-based method, we demonstrate a number of problems for conflict-free Petri nets to be decidable.	petri net;value (ethics)	Hsu-Chun Yen	2002	Systems & Control Letters	10.1016/S0167-6911(01)00196-7	decidability;combinatorics;discrete mathematics;controllability;stochastic petri net;control theory;mathematics;process architecture;petri net;algorithm	Robotics	-5.013324567173275	12.48590548539973	53214
bdc8275e8ea169d97a17e881d1cecf6f86771165	on the properties of measure in the theory of intermediate quantifiers and the quantifier “many”		This paper is a contribution to the formal theory of intermediate quantifiers (linguistic expressions such as most, few, almost all, a lot of, many, a great deal of, a large part of, a small part of). This concept informally introduced by Peterson was formalized in the frame of higher-order fuzzy logic by Novak. We address the concept of measure, namely we introduce modified definition providing its additivity and apply the theory to the intermediate quantifier “Many”. We show that the ambiguous behavior of it can be also formally substantiated.	ambiguous grammar;degree (graph theory);emoticon;fuzzy logic;joseph d. novak;peterson's algorithm;quantifier (logic);stemming	Vilém Novák;Petra Murinová	2017	2017 IEEE Symposium Series on Computational Intelligence (SSCI)	10.1109/SSCI.2017.8280965	discrete mathematics;fuzzy logic;semantics;natural language;pragmatics;fuzzy set;additive function;expression (mathematics);theory;mathematics	Logic	-13.236281125162714	8.678789189034577	53255
bf77bc99f5d8896ba389a460af5a4532ccd69436	abstracting web agent proofs into human-level justifications	inference rule;abstract machine;intelligence analysis	ing Web Agent Proofs into Human-Level Justifications Vasco Furtado, Paulo Pinheiro da Silva, Deborah McGuinness, Priyendra Deshwal, Dhyanesh Narayanan, Juliana Carvalho, Vladia Pinheiro, CynthiaChang 1 Universidade de Fortaleza, Fortaleza, CE, Brazil on sabbatical at Stanford University University of Texas, El Paso, TX, USA 3 KSL, Stanford University, Stanford, CA, USA Google Inc., Palo Alto, CA, USA vasco@ksl.stanford.edu, paulo@utep.edu, dlm@ksl.stanford.edu,pryendra@gmail.com, dhyanesh@ksl.stanford.edu, julianacarvalho@fortalnet.com.br, vladiacelia@terra.com.br, changcs1@stanford.edu	algorithm;knowledge systems laboratory;level of detail;natural deduction;palo;prune and search;relevance;user agent	Vasco Furtado;Paulo S Pinheiro;Deborah L. McGuinness;Priyendra Deshwal;Dhyanesh Narayanan;Juliana Carvalho;Vladia Pinheiro;Cynthia Chang	2007			artificial intelligence;rule of inference;natural language processing;abstract machine;axiom;theoretical computer science;intelligence analysis;template;mathematical proof;inference;abstraction;computer science	ML	-18.277666591119225	11.500158197394272	53392
6d5d6156d37705e63fac2e10948d25f6b8f10109	conjunctive-query containment and constraint satisfaction	conjunctive queries;constraint satisfaction;artificial intelligent;polynomial time;constraint satisfaction problem;database query;first order logic;time constraint	Conjunctive query containment is recognized as a fundamental problem in database query evaluation and optimization At the same time constraint satisfaction is recog nized as a fundamental problem in arti cial intelligence What do conjunctive query containment and constraint satisfaction have in common Our main conceptual con tribution in this paper is to point out that despite their very di erent formulation conjunctive query containment and constraint satisfaction are essentially the same problem The reason is that they can be recast as the following fundamental algebraic problem given two nite relational structures A and B is there a homomorphism h A B As formulated above the homomorphism problem is uniform in the sense that both relational structures A and B are part of the input By xing the structure B one obtains the following non uniform problem given a nite relational structure A is there a homomorphism h A B In general non uniform tractability results do not uniformize Thus it is natural to ask which tractable cases of non uniform tractability results for constraint satisfaction and conjunctive query containment do uniformize Our main technical contribution in this paper is to show that several cases of tractable non uniform constraint satisfaction problems do indeed uniformize We ex hibit three non uniform tractability results that uniformize and thus give rise to polynomial time solvable cases of constraint satisfaction and conjunctive query con tainment We begin by examining the tractable cases of Boolean constraint satisfaction problems and show that they do uniformize This can be applied to conjunctive query containment via Booleanization in particular it yields one of the known tractable cases of conjunctive query containment After this we show that tractability results for constraint satisfaction problems that can be expressed using Datalog programs A preliminary version of this paper appeared in Proc th ACM Symp on Principles of Database Systems June pp Partially supported by NSF grant CCR Partially supported by NSF grants CCR and CCR URL http www cs rice edu vardi with bounded number of distinct variables also uniformize Finally we establish that tractability results for queries with bounded treewidth uniformize as well via a con nection with rst order logic a with bounded number of distinct variables	cobham's thesis;concurrency and coordination runtime;conjunctive query;constraint satisfaction problem;database;datalog;decision problem;hypertext transfer protocol;ibm notes;linear algebra;mathematical optimization;naruto shippuden: clash of ninja revolution 3;polynomial;string operations;time complexity;treewidth;world wide web	Phokion G. Kolaitis;Moshe Y. Vardi	1998		10.1145/275487.275511	time complexity;combinatorics;discrete mathematics;decomposition method;constraint satisfaction;computer science;first-order logic;constraint satisfaction dual problem;mathematics;complexity of constraint satisfaction;conjunctive query;constraint satisfaction problem;algorithm;hybrid algorithm	DB	-6.61219240121492	18.151424692377223	53475
fe58ca964aa31497274ffe84feba92b8d9a42017	complexity of first order id-logic	inductive definitions;first order;well founded semantics;logic programs;knowledge representation	First Order ID-Logic interprets general first order, nonmonotone, inductive definability by generalizing the wellfounded semantics for logic programs. We show that, for general (thus perhaps infinite) structures, inference in First Order ID-Logic is completeΠ2 over the natural numbers. We also prove a Skolem Theorem for the logic: every consistent formula of First Order ID-Logic has a countable model.	denotational semantics;first-order logic	John S. Schlipf;Marc Denecker	2008			discrete mathematics;mathematics;algorithm	Logic	-11.837332256418808	13.47959010682115	53554
24f47b519864c15651152821a9595fd4c2c2b3e3	logical foundations of well-founded semantics	equilibrium logic;well-founded semantics;partial stable mod- els;modal logic;partial equilibrium	We propose a solution to a long-standing problem in the foundations of well-founded semantics (WFS) for logic programs. The problem addressed is this: which (non-modal) logic can be considered adequate for well-founded semantics in the sense that its minimal models (appropriately defined) coincide with the partial stable models of a logic program? We approach this problem by identifying the HT 2 frames previously proposed by Cabalar to capture WFS as structures of a kind used by Dǒ sen to characterise a family of logics weaker than intuitionistic and minimal logic. We define a notion of minimal, totalHT 2 model which we callpartial equilibrium model . Since for normal logic programs these models coincide with partial stable models, we propose the resulting partial equilibrium logic as a logical foundation for well-founded semantics. In addition we axiomatise the logic of HT -models and prove that it captures the strong equivalence of theories in partial equilibrium logic.	logic programming;modal logic;norm (social);turing completeness;well-founded semantics	Pedro Cabalar;Sergei P. Odintsov;David Pearce	2006			algorithm;multimodal logic;many-valued logic;bunched logic;dynamic logic (modal logic);predicate functor logic;higher-order logic;computer science;well-founded semantics;intermediate logic	AI	-11.168358300329901	12.937808011645007	53893
a0caabe137c557e1a0aedde873ad15ce56f5acba	graded computation tree logic with binary coding	temporal logic;satisfiability;computation tree logic	Graded path quantifiers have been recently introduced and investigated as a useful framework for generalizing standard existential and universal path quantifiers in the branching-time temporal logic CTL (GCTL), in such a way that they can express statements about a minimal and conservative number of accessible paths. These quantifiers naturally extend to paths the concept of graded world modalities, which has been deeply investigated for the μ-CALCULUS (GμCALCULUS) where it allows to express statements about a given number of immediately accessible worlds. As for the “non-graded” case, it has been shown that the satisfiability problem for GCTL and the Gμ-CALCULUS coincides and, in particular, it remains solvable in EXPTIME. However, GCTL has been only investigated w.r.t. graded numbers coded in unary, while Gμ-CALCULUS uses for this a binary coding, and it was left open the problem to decide whether the same result may or may not hold for binary GCTL. In this paper, by exploiting an automata theoretic-approach, which involves a model of alternating automata with satellites, we answer positively to this question. We further investigate the succinctness of binary GCTL and show that it is at least exponentially more succinct than Gμ-CALCULUS.	alternating finite automaton;automata theory;binary number;boolean satisfiability problem;computation tree logic;decision problem;exptime;modal μ-calculus;temporal logic;unary operation	Alessandro Bianco;Fabio Mogavero;Aniello Murano	2010		10.1007/978-3-642-15205-4_13	combinatorics;discrete mathematics;temporal logic;computation tree logic;computer science;mathematics;algorithm;satisfiability	Logic	-8.41393682973045	17.547706211924293	53918
2a5687fb8c29ba11ddf243b0d50758540627e0d5	on strong standard completeness in some mtl $$_\delta $$ δ expansions		In this paper, inspired by the previous work of Franco Montagna on infinitary axiomatizations for standard \(\mathsf {BL}\)-algebras, we focus on a uniform approach to the following problem: given a left-continuous t-norm \(*\), find an axiomatic system (possibly with infinitary rules) which is strongly complete with respect to the standard algebra Open image in new window This system will be an expansion of Monoidal t-norm-based logic. First, we introduce an infinitary axiomatic system \(\mathsf {L}_*^\infty \), expanding the language with \(\Delta \) and countably many truth constants, and with only one infinitary inference rule, that is inspired in Takeuti–Titani density rule. Then we show that \(\mathsf {L}_*^\infty \) is indeed strongly complete with respect to the standard algebra Open image in new window. Moreover, the approach is generalized to axiomatize expansions of these logics with additional operators whose intended semantics over [0, 1] satisfy some regularity conditions.		Amanda Vidal;Félix Bou;Francesc Esteva;Lluis Godo	2017	Soft Comput.	10.1007/s00500-016-2338-0	discrete mathematics;pure mathematics;mathematics	Logic	-9.264783404450732	14.304458545566572	53940
e808d32346aa29bb3bf87112a77e1fbfa524cdaf	reduction operators and completion of rewriting systems	reduction operators;completion;noncommutative groebner bases	We propose a functional description of rewriting systems where reduction rules are represented by linear maps called reduction operators. We show that reduction operators admit a lattice structure. Using this structure we define the notions of confluence and of Church-Rosser property. We show that these notions are equivalent. We give an algebraic formulation of completion and show that such a completion exists using the lattice structure. We interpret the confluence for reduction operators in terms of Gröbner bases. Finally, we introduce generalised reduction operators relative to non totally ordered sets.	church–rosser theorem;confluence;crystal structure;gröbner basis;linear algebra;map;reduction (complexity);rewriting	Cyrille Chenavier	2018	J. Symb. Comput.	10.1016/j.jsc.2017.03.002	operator theory;discrete mathematics;topology;completion;mathematics;algebra	AI	-8.760669297553676	16.264390731485527	53957
0b9f4f8700b8967c6c89b3c6f0416bbea69500fc	monads need not be endofunctors	relative monad;different category;reasonable assumption;functor category;finite-dimensional vector space;calculus syntax;relative adjunction;eilenberg-moore construction;underlying functors;vector space;indexation	We introduce a generalisation of monads, called relative monads, allowing for underlying functors between different categories. Examples include finite-dimensional vector spaces, untyped and typed λcalculus syntax and indexed containers. We show that the Kleisli and Eilenberg-Moore constructions carry over to relative monads and are related to relative adjunctions. Under reasonable assumptions, relative monads are monoids in the functor category concerned and extend to monads, giving rise to a coreflection between monads and relative monads. Arrows are also an instance of relative monads.	monad (functional programming);x-machine	Thorsten Altenkirch;James Chapman;Tarmo Uustalu	2009	Logical Methods in Computer Science	10.2168/LMCS-11(1:3)2015	vector space;computer science;distributive law between monads	PL	-8.016982518581608	15.553918324644796	54024
fb20cd7cf7f35fbc9fe3f27bf5807ce9fde0ff1d	a rule-based algorithm for rigid e-unification	rule based	We present a new rule-based method for computing complete sets of rigid E-uniiers, improving on Gallier et al.'s method on several points: sharing of sub-terms is improved; substitution application and rewriting are done implicitly; the search for rigid E-uniiers is guided by the structure of the terms, and needs less guessing. Our method makes extensive use of the congruence closure algorithm, and builds on it a non-deterministic procedure with six rules. We state its soundness, its completeness | with a sharper notion of completeness than Gallier |, its termination, and get a more elementary proof of the NP-completeness of rigid E-uniication.	deterministic algorithm;logic programming;np-completeness;rewriting;unification (computer science);zeller's congruence	Jean Goubault-Larrecq	1993		10.1007/BFb0022569	discrete mathematics;rule-based system;rewriting;unification;mathematics	Logic	-12.780975680720053	15.146708160286426	54120
399631ff7c787c6547bf5517805f397c8009d324	basic logic, k4, and persistence	kripke model;first order	We characterize the first-order formulas with one free variable that are preserved under bisimulation and persistence or strong persistence over the class of Kripke models with transitive frames and unary persistent predicates.	persistence (computer science)	Wim Ruitenburg	1999	Studia Logica	10.1023/A:1005298819843	discrete mathematics;kripke structure;philosophy;computer science;first-order logic;mathematics;kripke semantics;algorithm	Logic	-11.775421430453864	14.319889259066198	54267
4295fba7619e8565555a453274fd1725bed1bda4	provably bounded optimal agents	real time;expected utility;artificial intelligent;decision procedure;decision theoretic;agent architecture;constrained optimization problem;generalization bounds	Since its inception, arti cial intelligence has relied upon a theoretical foundation centred around perfect rationality as the desired property of intelligent systems. We argue, as others have done, that this foundation is inadequate because it imposes fundamentally unsatis able requirements. As a result, there has arisen a wide gap between theory and practice in AI, hindering progress in the eld. We propose instead a property called bounded optimality. Roughly speaking, an agent is bounded-optimal if its program is a solution to the constrained optimization problem presented by its architecture and the task environment. We show how to construct agents with this property for a simple class of machine architectures in a broad class of real-time environments. We illustrate these results using a simple model of an automated mail sorting facility. We also de ne a weaker property, asymptotic bounded optimality (ABO), that generalizes the notion of optimality in classical complexity theory. We then construct universal ABO programs, i.e., programs that are ABO no matter what real-time constraints are applied. Universal ABO programs can be used as building blocks for more complex systems. We conclude with a discussion of the prospects for bounded optimality as a theoretical basis for AI, and relate it to similar trends in philosophy, economics, and game theory.	complex systems;computational complexity theory;constrained optimization;constraint (mathematics);game theory;mathematical optimization;optimization problem;rationality;real-time clock;real-time computing;requirement;sorting	Stuart J. Russell;Devika Subramanian;Ronald Parr	1993	J. Artif. Intell. Res.	10.1613/jair.133	agent architecture;mathematical optimization;discrete mathematics;optimal decision;expected utility hypothesis;computer science;artificial intelligence;machine learning;mathematics	AI	-7.2682477638478336	5.066315087711288	54283
0b2bf78cbf90d731c3a3c3ce912f76be061c0b28	a semantic account of iterated belief revision in the situation calculus		Recently Shapiro et al. explored the notion of iterated belief revision within Reiter’s version of the situation calculus. In particular, they consider a notion of belief defined as truth in the most plausible situations. To specify what an agent is willing to believe at different levels of plausibility they make use of so-called belief conditionals, which themselves neither refer to situations or plausibilities explicitly. Reasoning about such belief conditionals turns out to be complex because there may be too many models satisfying them and negative belief conditionals are also needed to obtain the desired conclusions. In this paper we show that, by adopting a notion of onlybelieving, these problems can be overcome. The work is carried out within a modal variant of the situation calculus with a possible-world semantics which features levels of plausibility. Among other things, we show that only-believing a knowledge base together with belief conditionals always leads to a unique model, which allows characterizing the beliefs of an agent, after any number of revisions, in terms of entailments within the logic.	belief revision;color gradient;iterated function;iteration;knowledge base;modal logic;plausibility structure;possible world;situation calculus	Christoph Schwering;Gerhard Lakemeyer	2014		10.3233/978-1-61499-419-0-801	artificial intelligence;algorithm	AI	-15.930070506343943	5.710667807924548	54359
50ba0a855ca1872abe82cc20f07bd8bb41e41edd	a formal system for differentiation	programming language;natural language;formal language	A formal system is presented for the differentiation of mathematical formulas which can be implemented on a digital computer. The system departs in concept from others in that the programming language is nonprocedural, permitting the statement of the problem for the machine to more closely resemble the corresponding statement for the human. Although limited ostensibly to the narrow and well-defined problem of mechanizing differentiation, many of the ideas and techniques presented can be applied in the broader context of the deeper problem of mechanizing mathematics. They should also be useful in programming theory, where the fundamental problem continues to be the narrowing of the gap between a natural language statement of a problem and a formal language statement acceptable to a computer.	computer;formal language;formal system;natural language;programming language	Edward K. Blum	1966	J. ACM	10.1145/321356.321358	natural language processing;language identification;formal system;natural language programming;formal language;very high-level programming language;picture language;universal networking language;language primitive;regular language;object language;specification language;computer science;problem statement;mathematics;low-level programming language;natural language;programming language;programming language specification;high-level programming language;algorithm;context-sensitive language	PL	-11.17120893349221	7.98985754398227	54469
7c9e1807e25670b4ca7a4569a8589de879fef55d	limiting until in ordered tree query languages	hierarchy;temporal logic;trees;xml	Marx and de Rijke have shown that the navigational core of the w3c XML query language XPath is not first-order complete; that is, it cannot express every query definable in first-order logic over the navigational predicates. How can one extend XPath to get a first-order complete language? Marx has shown that Conditional XPath—an extension of XPath with an “Until” operator—is first-order complete. The completeness argument makes essential use of the presence of upward axes in Conditional XPath. We examine whether it is possible to get “forward-only” languages that are first-order complete for Boolean queries on ordered trees. It is easy to see that a variant of the temporal logic CTL<sup&gt**</sup&gt is first-order complete; the variant has path quantifiers for downward, leftward, and rightward paths, while along a path one can check arbitrary formulas of Linear Temporal Logic (LTL). This language has two major disadvantages: It requires path quantification in both horizontal directions (in particular, it requires looking backward at the prior siblings of a node), and it requires the consideration of formulas of LTL of arbitrary complexity on vertical paths. This last is in contrast with Marx’s Conditional XPath, which requires only the checking of a single Until operator on a path. We investigate whether either of these restrictions can be eliminated. Our main results are negative ones. We show that if we restrict our CTL<sup&gt**</sup&gt language by having an Until operator in only one horizontal direction, then we lose completeness. We also show that no restriction to a “small” subset of LTL along vertical paths is sufficient for first-order completeness. Smallness here means of bounded “Until Depth,” a measure of complexity of LTL formulas defined by Etessami and Wilke. In particular, it follows from our work that Conditional XPath with only forward axes is not expressively complete; this extends results proved by Rabinovich and Maoz in the context of infinite unordered trees.	blum axioms;first-order logic;first-order predicate;linear temporal logic;ordered pair;query language;tree (data structure);xml;xpath;xquery	Michael Benedikt;Clemens Ley	2016	ACM Trans. Comput. Log.	10.1145/2856104	discrete mathematics;xml;temporal logic;computer science;artificial intelligence;path expression;database;mathematics;programming language;algorithm;hierarchy	Logic	-7.678226829289979	17.623102283994463	54571
64f2dcf655e3418bd86243d56b3bcb4adae524ff	computational complexity of t-norm based propositional fuzzy logics with rational truth constants	description logique;complexite calcul;fuzzy description logic;logique floue;calcul propositionnel;logica difusa;logique propositionnelle;fuzzy logic;complejidad computacion;computational complexity;propositional logic;propositional calculus;norma triangular;calculo proposicional;t norm;norme triangulaire;rational constants;description logic;logica proposicional;logique description	If a continuous t-norm on [0,1] maps pairs of rationals into rationals then the corresponding fuzzy propositional calculus can be extended by rational truth constants and ''bookkeeping'' axioms for them. (Lukasiewicz t-norm is the classical example.) Computational complexity of such logics is studied. Consequences for fuzzy description logic are formulated.	computational complexity theory;fuzzy logic;t-norm	Petr Hájek	2006	Fuzzy Sets and Systems	10.1016/j.fss.2005.12.008	fuzzy logic;monoidal t-norm logic;t-norm fuzzy logics;discrete mathematics;fuzzy classification;computer science;artificial intelligence;mathematics;propositional variable;propositional calculus;algorithm	AI	-11.108635426405154	11.441109669006696	54572
486b682efd42009156ea975c72ee000b01e12d86	combining constraint logic programming techniques for solving linear problems	constraint logic programs;right hand side;look ahead;finite domain	This paper presents a system for solving mixed infinite and finite domains linear problem using a Constraint Logic Programming (CLP) Environment. The contributions of our system are introduced in two directions. Firstly, unlike existing systems, the splitting of a variable's domain is based on the right hand side value of the first constraint in which it is involved rather than the splitting over an arbitrary value. Also, the splitting process is automatically performed by the system, when needed, rather than being the user's responsibility. Secondly, a relatively transparent integration is met between two Constraint Logic Programming solvers. The former is a Partial Look Ahead solver over rationals as well as integers with the support of the aforementioned domain splitting mechanism, while the latter is a Simplex-Like solver named CLP(Q). Each counterpart submits some services to the other in order that the coherent system improves the search efficiency and tackles their individual main defects.	constraint logic programming	Reem Bahgat;Samir E. AbdelRahman	1999		10.1007/3-540-44654-0_10	constraint logic programming;concurrent constraint logic programming;mathematical optimization;constraint programming;constraint satisfaction;theoretical computer science;mathematics;algorithm	Logic	-18.807514595331668	15.438986095483486	54637
df0e4fc1b873569bc4ef07183ceee61af8daaeab	non-monotonic reasoning and the reversibility of belief change		Traditional approaches to non-monotonic reasoning fail to satisfy a number of plausible axioms for belief revision and suffer from conceptual difficulties as well. Recent work on ranked preferential models (RPMs) promises to overcome some of these difficulties. Here we show that RPMs are not adequate to handle iterated belief change. Specifically, we show that RPMs do not always allow for the reversibility of belief change. 1bis result indicates the need for numerical strengths of belief.	belief revision;iteration;non-monotonic logic;numerical analysis	Daniel Hunter	1991			epistemology;belief structure;artificial intelligence;mathematics;social psychology	AI	-15.414030655085908	5.770209445530469	54760
9e6520df588501274a0738cc6aa5f60a0697061e	fragments of arithmetic	theorie demonstration;logique mathematique;mathematical logic;arithmetique;arithmetic;fragment arithmetique	We establish by elementary proof-theoretic means the conservativeness of two subsystems of analysis over primitive recursive arithmetic. The one subsystem was introduced by Friedman [6], the other is a strengthened version of a theory of Mint [14]; each has been shown to be of considerable interest for both mathematical practice and me&mathematical investigations. The foundational significance of such conservation results is clear: they provide a direct finitist justification of the part of mathematical practice formalizable in these subsystems. The results are generalized to relate a hierarchy of subsystems, all contained in the theory of arithmetic properties, to a corresponding hierarchy of fragments of arithmetic. The proof theoretic tools employed there are used to re-establish in a uniform, elementary way relationships between various fragments of arithmetic due to Parsons, Paris and Kirby, and Friedman.	mint;nat friedman;primitive recursive function;recursion;theory	Wilfried Sieg	1985	Ann. Pure Appl. Logic	10.1016/0168-0072(85)90030-2	mathematical logic;mathematical analysis;topology;computer science;pure mathematics;true arithmetic;mathematics;primitive recursive arithmetic;algorithm;algebra	Theory	-9.05047226912916	11.434311296017304	54789
ced2469220222c90ab2b81207e34dc553a192e38	stable revision, or is preservation worth preserving?			belief revision;case preservation	Wlodzimierz Rabinowicz	1996			mathematics	HCI	-10.019133028339619	10.732729950709492	54894
407e638801e103e32fbf6cd6970f9ea1b5be3aef	affine monads and side-effect-freeness	part of book or chapter of book	The notions of side-effect-freeness and commutativity are typical for probabilistic models, as subclass of quantum models. This paper connects these notions to properties in the theory of monads. A new property of a monad (‘strongly affine’) is introduced. It is shown that for such strongly affine monads predicates are in bijective correspondence with side-effect-free instruments. Also it is shown that these instruments are commutative, in a suitable sense, for monads which are commutative (monoidal).	fabio paternò;locality of reference;monad (functional programming)	Bart Jacobs	2016		10.1007/978-3-319-40370-0_5	discrete mathematics;distributive law between monads;mathematics;algebra	Logic	-11.016692048226833	18.21797880863037	54940
0842ec4dacd08233ca67cf7fcd67be2de6582f9c	formal systems of constructive mathematics		In present paper we investigate in some detail two systems closely related to those contained in [4]. The system K, of [4] is simplified by eliminating conjunction and disjunction, giving rise to a system E whose primitives are two individuals, concatenation, identity, existential and limited universal quantification. Any relation expressible in Z may be expressed in form (Eoc1)(fl)cx1(Ea2)... (Eocx)(y = 6). A further reduction of primitives leads to a system X, which differs from I by containing operator ju (i.e. the first string, such that with respect to a certain ordering) in place of quantifiers. Reasons are given for restricting Myhillu0027s definition of constructive ideas to those expressible in Z,,. Acquaintance with [4], [5], [6] is assumed. We deviate from [4] by dropping concatenation-signs and parentheses in chain matrices from official notation, and, furthermore, by using Greek and German letters as metalinguistic variables standing for chain matrices and chains, respectively, while retaining small Roman letters (excluding a, b) for use as variables of systems.		M. H. Lob	1956	J. Symb. Log.		discrete mathematics;applied mathematics;constructivism;pure mathematics;mathematics;abstract structure	Theory	-5.512252213151944	14.267807956084985	55096
d01275744742396a709edf50ba13a8f442138da4	henkin and function quantifiers	simplification;logique mathematique;relacion orden;ordering;logica matematica;theorie modeles;mathematical logic;relation ordre;quantizer;quantificateur;simplificacion;cuantificador;teoria modelos;model theory	Henkin [7] introduced quantifiers which arise when usual (universal and existential) quantifiers are arranged in non-linear order. These quantifiers bre known as partially ordered quantifiers or Henkin quantifiers. Is. was observed already in [7] that languages with these quantifiers are stronger than first-order logic. A result of [ll] shows that even the weakest enkin quantifier has essentially the same expressive power as second-order logic. In this paper we introduce a simplification of Henkin quantifiers called function quantifiers. We show that function quantifiers are intimately connected with partially ordered quantifiers and suggest that they provide a natural framework for the study of partially ordered quantifiers and second-order definability in general. This paper continues work started in [9]. We are indebted to Alistair Lachlan and Lauri Hella for helpful discussions concerning preliminary versions of Section 8. We are also grateful to the referee for his or her remarks and suggestions. For basic notions concerning extensions of first-order logic and generalized uantifiers, the reader is referred to [ 11. Our logics 5? will mostly be extensions of 5$,,. obtained by adding geiazralized quantifiers in the sense of [12]. We recall the definition of a generalized quantifier from [ 121. Let K be a class of models of a relational similarity type r = (no,. .. , &). K is assumed to be closed under isomorphisms. The generalized quantifier Q asociated with K is defined as fQllows:	alistair sinclair;first-order logic;first-order predicate;graph isomorphism;lauri karttunen;level of detail;nonlinear system;quantifier (logic)	Michal Krynicki;Jouko A. Väänänen	1989	Ann. Pure Appl. Logic	10.1016/0168-0072(89)90071-7	mathematical logic;quantization;order theory;calculus;mathematics;simplification;algorithm;model theory;algebra	Logic	-8.231507538679262	12.620771658501043	55216
cbc63eabddb9bdad3ae9dd2a247cbe7f41ad64d0	layers of zero probability and stable coherence over łukasiewicz events		The notion of stable coherence has been recently introduced to characterize coherent assignments to conditional many-valued events by means of hyperreal-valued states. In a nutshell, an assignment, or book, β on a finite set of conditional events is stably coherent if there exists a coherent variant β′ of β such that β′ maps all antecedents of conditional events to a strictly positive hyperreal number, and such that β and β′ differ by an infinitesimal. In this paper we provide a characterization of stable coherence in terms of layers of zero probability for books on Lukasiewicz logic events.	book;cache coherence;coherence (physics);computational complexity theory;lexicographical order;mv-algebra;map;łukasiewicz logic	Tommaso Flaminio;Lluis Godo	2017	Soft Comput.	10.1007/s00500-016-2233-8	combinatorics;discrete mathematics;mathematics	AI	-10.150064807614243	14.014684154831302	55304
6d6938f977693f7146276e5695ca1273ec77790d	language is physical	language use;efficient implementation;quantum physics;quantum mechanics;high energy physics;intelligent system;physical model;formal language;physical properties	Some aspects of the physical nature of language are discussed. In particular, physical models of language must exist that are efficiently implementable. The existence requirement is essential because without physical models no communication or thinking would be possible. Efficient implementability for creating and reading language expressions is discussed and illustrated with a quantum mechanical model. The reason for interest in language is that language expressions can have meaning, either as an informal language or as a formal language associated with mathematical or physical theories. It is noted that any universally applicable physical theory, or coherent theory of physics and mathematics together, includes in its domain physical models of expressions for both the informal language used to discuss the theory and the expressions of the theory itself. It follows that there must be some formulas in the formal theory that express some of their own physical properties. The inclusion of intelligent systems in the domain of the theory means that the theory, e.g., quantum mechanics, must describe, in some sense, its own validation. Maps of language expressions into physical states are discussed. A spin projection example is discussed as are conditions under which such a map is a Gödel map. The possibility that language is also mathematical is very briefly discussed.	artificial intelligence;coherence (physics);formal language;gödel numbering;map;no-communication theorem;quantum mechanics;requirement;theory	Paul Benioff	2002	Quantum Information Processing	10.1023/A:1024074616373	formal language;regular language;object language;physical model;mathematics;modeling language;physical property;physics;algorithm;quantum mechanics;context-sensitive language	PL	-10.633321391538216	8.795528266705121	55384
5f3c3f88df97319923699fb0cedae482676d8efe	sahlqvist correspondence for modal mu-calculus	minimal valuation;universiteitsbibliotheek;journal article;fixed point;modal logic;modal correspondence theory;pia formula;fixed point logic	We define analogues of modal Sahlqvist formulas for the modal mu-calculus, and prove a correspondence theorem for them.	appetizer;bisimulation;curry–howard correspondence;dynamic logic (modal logic);fixed point (mathematics);least fixed point;modal logic;modal μ-calculus;morphic (software);sahlqvist formula;theory;thomason collection of civil war tracts	Johan van Benthem;Nick Bezhanishvili;Ian M. Hodkinson	2012	Studia Logica	10.1007/s11225-012-9388-9	modal logic;normal modal logic;modal μ-calculus;discrete mathematics;philosophy;epistemology;axiom s5;mathematics;fixed point;accessibility relation;algorithm	Logic	-12.230233261285358	12.210228184441414	55452
9961824acf4a94e3b5722a4ace2b58ee6be08b8f	regular relations and bicartesian squares	bicartesian squares;expresion regular;pullbacks;theorem proving;demonstration theoreme;expression reguliere;demostracion teorema;regular expression	Abstract   It is shown that regular relations, which arise in a number of areas of programming theory, can be characterised in a variety of ways as pullbacks in   Set  ; and up to isomorphism, as bicartesian squares in   Set  .		Richard Banach	1994	Theor. Comput. Sci.	10.1016/0304-3975(94)90086-8	combinatorics;discrete mathematics;computer science;mathematics;automated theorem proving;programming language;regular expression;algorithm;algebra	ECom	-6.150791453562856	16.916826255507594	55555
74575f1969d5b2d7480c385bced2043bf6e47a1e	disambiguation of dmn decision tables		The Decision Model and Notation (DMN) is a specification for the design of decision models. The logic of those decisions can be expressed in standardized decision tables. The standard allows to create tables that contain overlapping rules. This leads to ambiguities and we argue that such tables are hard to understand and unsuitable for analysis tasks. This paper describes an algorithm to transform ambiguous DMN decision tables to equivalent ones that only contain exclusive rules, thereby resolving ambiguities. We implemented our algorithm and evaluated it against a set of synthetic decision tables.	decision model and notation;decision table;word-sense disambiguation	Kimon Batoulis;Mathias Weske	2018		10.1007/978-3-319-93931-5_17	knowledge management;data mining;decision model and notation;decision table;computer science;decision model	Theory	-18.424043413762295	6.590355347184765	55590
a8eaff43cdd60fae12503b69d56cef7829fcc291	efficient sealed-bid auctions for massive numbers of bidders with lump comparison	complexite calcul;shareholder;action;complejidad computacion;actionnaire;computational complexity;subasta;comparative method;bidding;enchere;accion	A newsc heme for electronic sealed-bid auctions that preserves losing bids is presented. By this scheme, the computational complexity of the opening phase can be reduced to O(log l); previous works required O(N?l) or O(N?log l) where the number of bidders is N and the range of bids is l. The proposed scheme has two technical points. One is that computational complexity is independent of the number of bidders. The other is a newefficien t value-comparing method. These techniques allowour auction scheme to be more than five hundred times faster than previous schemes. Furthermore, our auction scheme can be eleven million times faster than previous schemes if it is assured that auctioneers do not conspire.	lumped element model	Koji Chida;Kunio Kobayashi;Hikaru Morita	2001		10.1007/3-540-45439-X_28	simulation;bidding;computer science;comparative method;mathematics;mathematical economics;shareholder;computational complexity theory;computer security	AI	-4.604707251639445	4.415056752440851	55745
0662078d181bc88d939a19708deff87f300772c4	finite nest structures and propositional logic		Our terminology and notation is the same as that of [1], of which this note is a sequel. We wish to show that if we take the natural deduction system (N) described in [1], and delete the rules for the quantifiers, we obtain a complete system for propositional logic. [Of course we now construe X, Y, Z as syntactic variables ranging over formulas of propositional logic, rather than sentences of quantification theory.] Moreover the system serves as a neat decision procedure. We first need a preliminary theorem on finite nest structures. We shall let N be a nest structure which is strictly regular in the sense of [4]. . . i.e., a regular nest structure whose first point ai is free. For each point al we define the depth or level of ai as the number of points alive at stage i (or alternatively, as the length of the path from ai to a,). THEOREM 1. Let N be a strictly regular nest structure such that there is a positive integer k which is an vpper bound for the depths o/ all points. Then N is a /inite nest structure, and its length is bounded (from above) by 2k1. PROOF. The one and only point of depth 1 is ai. It is connected to at most 2 points of depth 2, and these are the only points of depth 2. Each point of depth 2 is connected to at most 2 points of depth 3, and for every point of depth 3 there is a point of depth 2 which is connected to it. Thus there are at most 4 points of depth 3. By induction we see that for each i ? k there are at most 2i-1 points of depth i. Hence there are at most 1+2+4+...+2k-1 points all told i.e., the length of N cannot exceed 1+2+4+ .. .+2k-1 2k1. REMARK. In the above theorem, if we were interested in drawing only the weaker conclusion that N is finite, we could appeal directly to the lemma on infinite nest structures proved in [1]; viz., that any infinite regular nest structure contains an infinite path. The contrapositive of this lemma says that if every path of (a regular) N is finite, then N must be finite. But all paths are obviously finite, if the stronger hypothesis of Theorem 1 holds. Now we return to our natural deduction system for propositional logic. We define a deduction to be in the same way as in [1] i.e., if premisses are introduced only in accordance with the restriction (R). We now wish to give additional restrictions such that any analytic deduction constructed according to the restrictions is bound to terminate in	propositional calculus	Raymond M. Smullyan	1966	J. Symb. Log.		modal logic;propositional formula;dynamic logic;zeroth-order logic;t-norm fuzzy logics;modal μ-calculus;discrete mathematics;classical logic;resolution;linear temporal logic;description logic;horn-satisfiability;tautology;many-valued logic;interval temporal logic;intuitionistic logic;intermediate logic;mathematics;propositional variable;well-formed formula;propositional calculus;atomic formula;algorithm;autoepistemic logic	Logic	-5.578303773786189	13.631401674847632	55821
e7d995387333d18092ffe97303b5b0ca7ead3f82	substitutional quantification and set theory	logic;set theory;humanities;philosophy		set theory	Dale Gottlieb;Timothy McCarthy	1979	J. Philosophical Logic	10.1007/BF00258434	philosophy;epistemology;artificial intelligence;mathematics;logic;set theory	Logic	-12.508379246135295	10.836307744204992	56105
22637fec66ec5d5056da122dc976f1f00634b4f4	variations of zorn's lemma, principles of cofinality, and hausdorff's maximal principle. i. set forms	ensembles theorie des;logique et philosophie du langage;philosophical logics and philosophyof language;choix;axiomes du	1. Introduction: definitions et symboles utilises| 2. Etudes des variantes du lemme de Zorn et des principes de cofinalite: dans la plupart des cas un principe de cofinalite est equivalent a une variante correspondante du lemme de Zorn| 3. Etude des variantes du principe de maximalite de Hausforff| 4. Appendice contenant les enonces utilises dans l'article avec leurs sigles abreviateurs et deux tableaux resumant respectivement les resultats obtenus sur les formes ensemblistes du lemme de Zorn et du principe de maximalite de Hausdorff.	hausdorff dimension;max august zorn;maximal set	Judith M. Harper;Jean E. Rubin	1976	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093887728		Theory	-12.494459600933562	10.164546002316339	56113
75f6e4cfcf15e0aba057470d2f3d965ed266f700	weighted nested word automata and logics over strong bimonoids		Nested words have been introduced by Alur and Madhusudan as a model for e.g. recursive programs or XML documents and have received much recent interest. In this paper, we investigate a quantitative automaton model and a quantitative logic for nested words. The behavior resp. the semantics map nested words to weights taken from a strong bimonoid. Strong bimonoids can be viewed as semirings without requiring the distributivity assumption which was essential in the classical theory of formal power series; strong bimonoids include e.g. all bounded lattices and many other structures from multi-valued logics. Our main results show that weighted nested word automata and suitable weighted MSO logics are expressively equivalent. This extends the classical Buchi-Elgot result from words to a weighted setting for nested words.	automaton;nested word	Manfred Droste;Bundit Pibaljommee	2012		10.1007/978-3-642-31606-7_12	combinatorics;discrete mathematics;nested word;mathematics;algorithm	Logic	-5.532943043596064	17.1028654697449	56117
a506fe38909e892826cdbc8162a34080098e0234	predicate calculus with free quantifier variables		In the literature of symbolic logic there are many examples of systems having free variables ranging over truth-values, individuals, or predicates. But, though many such systems are equipped with universal and existential quantifiers (and though many other quantifiers, e.g., for exactly one , are thereby definable), the problem of free variables corresponding to such constants has been neglected.	quantifier (logic)	Richmond H. Thomason;D. Randolph Johnson	1969	J. Symb. Log.		discrete mathematics;quantifier elimination;universal quantification;predicate variable;existential quantification;algorithm;algebra	Logic	-7.178703758142092	14.277021166524584	56139
f848df223773974ded8683561536aad64e35e27a	synthesis of argumentation graphs by matrix factorization		Abstract. In the phase of evaluation of accepted arguments, one may find that not all the arguments of discussion are essential when drawing conclusions. Especially when the cardinality of the set of arguments is high, the task of identifying the most relevant arguments of the whole discussion in huge Argument Systems through the analysis of its synthesis may favor better interpretability and may allow us to extract semantics that include the the strongest arguments. We propose a new matrix interpretation of argumentation graphs and exploit a matrix decomposition technique, i.e. the Singular Value Decomposition, in order to yield a synthetized argument system with only the most prominent arguments.	singular value decomposition	Andrea Pazienza;Stefano Ferilli;Floriana Esposito	2017			argumentation theory;discrete mathematics;matrix decomposition;mathematics;graph	AI	-6.926602045425249	7.924877517155354	56413
6d340a6286a2e3d88f0c74700a94163bedb5321d	reasoning algebraically about recursion	compilateur;program design;conception programme;ingenieria logiciel;exactitude programme;compiler;software engineering;methode algebrique;exactitud programa;algebraic method;genie logiciel;programme recursif;metodo algebraico;programa recursivo;recursive program;concepcion programa;compilador;program correctness	An algebraic technique for reasoning about recursive programs is proposed. The technique is based on Tarski's axioms of least fixed points of monotonic functions and the existence of weak-op-inverses. The algebraic style gives rise to elegant proofs, although the requirement of existence of weak-op-inverse may limit applicability. When such inverses do exist, the method can be used in presence of noncontinuous but monotonic operators occuring in languages containing unbounded nondeterminism, fairness constraints and specification statements.	recursion	Paul H. B. Gardiner;Paritosh K. Pandya	1992	Sci. Comput. Program.	10.1016/0167-6423(92)90019-8	compiler;computer science;program design language;programming language;algorithm	Logic	-14.448089258838131	17.937564814393745	56478
5e2c87b1a67010ccc7b91a02bf0b486b3187b82a	hauptsatz for higher-order modal logic		In spite of the philosophical significance of higher-order modal logic, the modal logicianu0027s main concern has been with sentential logic. In this paper we do not intend to go into philosophical details, but we only remark that higher-order modal logic has a close relationship with Montagueu0027s well-known idea of “universal grammar”, which is an ambitious attempt to build a logical theory of natural languages with exact syntax and semantics, comparable with the artificial languages of mathematical logic. For this matter, the reader can consult, e.g., Montague [8], [9] and Gallin [2].	higher-order function;modal logic	Hirokazu Nishimura	1983	J. Symb. Log.		modal logic;dynamic logic;normal modal logic;modal μ-calculus;linear temporal logic;higher-order logic;intermediate logic;axiom s5;mathematics;accessibility relation;multimodal logic	Logic	-11.702100984793448	7.817671371791417	56532
d314acb6aed92bc4932fd5a76662ec6987e6ee69	schematization of infinite sets of rewrite rules. application to the divergence of completion processes	rewrite rule	Infinite sets of rewrite rules may be generated by completion of term rewriting systems or by a narrowing process for solving equations in equational theories. This is a severe limitation to the practical use of these processes. We propose in this paper a formalism to deal with the problem of divergence, namely the definition of melta-rules (rules with meta-variables), together with the derived notions of met-rewriting and meta-narrowing. We show how to use meta-rules for deciding the validity or satisfiability of an equation in the equational theory defined by the infinite set of rules. We define a sound and complete schematization of the infinite set of rules to ensure that the set of meta-rules and the infinite set of rules can be used equivalently.		Hélène Kirchner	1987		10.1007/3-540-17220-3_16	combinatorics;discrete mathematics;computer science;mathematics;algorithm;infinite set	ML	-10.997182124278758	16.668253466319257	56729
ab74a32b3e5ef738bde6ff6753c386980054de2e	equational bases of boolean algebras		It is well-known that a Boolean algebra (B, +, ., ‐) may be defined as an algebraic system with at least two elements such that (for all x, y, z e B):n These axioms or equations are not independent, in the sense that some of them are logical consequences of the others. B. A. Bernstein [1] thought that the first three and their duals form an independent dual-symmetric definition of a Boolean algebra, but R. Montague and J. Tarski [3] proved later that B 1 (or B 1 ) follows from B 2 , B 3 , B 1 , B 2 , B 3 (from B 1 , B 2 , B 3 , B 2 , B 3 ).		Federico M. Sioson	1964	J. Symb. Log.		boolean algebra;and-inverter graph;combinatorics;discrete mathematics;boolean algebra;boolean domain;ideal;boolean expression;product term;stone's representation theorem for boolean algebras;boolean algebras canonically defined;relation algebra;mathematics;boolean function;complete boolean algebra;interior algebra;allen's interval algebra;two-element boolean algebra;free boolean algebra;parity function;algebra	Logic	-9.373513336145988	12.022393342742092	56995
e36cbc667b344ef86de577eb3d46c4bdae26ba22	encoding the factorisation calculus		Jay and Given-Wilson have recently introduced the Factoris ation (or SF-) calculus as a minimal fundamental model of intensionalcomputation. It is a combinatory calculus containing a spec ial combinator,F, which is able to examine the internal structure of its first a gument. The calculus is significant in that as well as being combinatorially complet e it also exhibits the property of structural completeness, i.e. it is able to represent any function on te rms definable using pattern matching on arbitrary normal forms. In particular, it admits a term that c n decide the structural equality of any two arbitrary normal forms. Since SF-calculus is combinatorially complete, it is clear ly t least as powerful as the more familiar and paradigmatic Turing-powerful computational models ofλ -calculus and Combinatory Logic. Its relationship to these models in the converse dire ction is less obvious, however. Jay and Given-Wilson have suggested that SF-calculus is strictly m ore powerful than the aforementioned models, but a detailed study of the connections between thes e models is yet to be undertaken. This paper begins to bridge that gap by presenting a faithful encoding of the Factorisation Calculus into theλ -calculus preserving both reduction and strong normalisat ion. The existence of such an encoding is a new result. It also suggests that there is, in some sense, an equivalence between the former model and the latter. We discuss to what extent our result constitutes an equivalence by considering it in the context of some previously defined fram eworks for comparing computational power and expressiveness.	admissible rule;applicative programming language;combinatory logic;computable function;computation;computational model;database normalization;expectation propagation;ferroelectric ram;fixed-point combinator;pattern matching;rewriting;simulation;spec#;turing completeness	Reuben N. S. Rowe	2015		10.4204/EPTCS.190.6	deductive lambda calculus;fluent calculus;typed lambda calculus;discrete mathematics;normalisation by evaluation;artificial intelligence;time-scale calculus;simply typed lambda calculus;mathematics;lambda cube;natural deduction;algorithm	Logic	-9.341505406009949	15.302991058411223	57045
da1a90e57a7711f34717ca9c02fc10c2509ac3ac	investigation of the equivalence of the axiom of choice and zorn's lemma from the viewpoint of the hierarchy of types		It is a well known fact that Zermelo’s Axiom of Choice and Zorn’s Lemma are equivalent logical assumptions. However, an investigation from the viewpoint of the hierarchy of types reveals a complication in the nature of this equivalence. In a type-theoretical formalism both postulates enter as spectra (ZA α ) and (ZL α ) of formulas, where ZA α is Zermelo’s Axiom and ZL α is Zorn’s Lemma stated for variables of a fixed type α. The complication has its origin in the fact that, although the formula ZA α implies ZL α , in order to deduce ZA α it seems to be necessary to assert Zorn’s Lemma ZL α for a type β which is higher than α. In other words, we don’t know a proof assuring the equivalence of the two formulas ZA α and ZL α . Therefore the equivalence of Zermelo’s Axiom and Zorn’s Lemma has to be understood in the sense that the assertion of the formulas ZA α for all types α implies every one of the formulas ZL β and conversely the assertion of the spectrum of formulas (ZL α ) implies every one of the formulas ZA β .	max august zorn;turing completeness;viewpoint	J. Richard Büchi	1953	J. Symb. Log.		zorn's lemma;discrete mathematics;topology;teichmüller–tukey lemma;well-ordering theorem;pure mathematics;mathematics;axiom of choice;algorithm;algebra	Logic	-6.913575187750615	13.489670317625952	57482
815f5c5babd7496e56d30ad1a478084a8774c796	from dynamic to static semantics, quantitatively		We exhibit a new relationship between dynamic and static semantics. We define the categorical outlay needed to define Interaction Graphs models, a generalisation of Girard’s Geometry of Interaction models, which strongly relate to game semantics. We then show how this category is mapped to weighted relational models of linear logic. This brings into vision a new bridge between the dynamic and static approaches, and provides formal grounds for considering interaction graphs models as quantitative versions of GoI and game semantics models. We finally proceed to show how the interaction graphs models relate to a very general notion of quantitative coherence spaces. 1998 ACM Subject Classification F.3.2 Semantics of Programming Languages	game semantics;geometry of interaction;linear logic;programming language;semantics (computer science)	Thomas Seiller	2016	CoRR		discrete mathematics;artificial intelligence;theoretical computer science;formal semantics;mathematics;well-founded semantics;algorithm	PL	-15.863601958487912	10.575226084630486	57499
ca300c0f150625054eff234969978d5a7132577c	functors of lindenbaum-tarski, schematic interpretations, and adjoint cylinders between sentential logics	equivalence of categories;boolean algebra;schematic interpretation;functors of lindenbaum tarski;heyting algebra;adjoint cylinder;natural transformation;ell congruence	We prove, by using the concept of schematic interpretation, that the natural embedding from the category ISL, of intuitionistic sentential pretheories and i-congruence classes of morphisms, to the category CSL, of classical sentential pretheories and c-congruence classes of morphisms, has a left adjoint, which is related to the double negation interpretation of Godel- Gentzen, and a right adjoint, which is related to the Law of Excluded Middle. Moreover, we prove that from the left to the right adjoint there is a pointwise epimorphic natural transformation, and that, since the two endofunctors at CSL, obtained by, adequately, composing the aforementioned functors, are naturally isomorphic to the identity functor for CSL, the string of adjunc- tions constitutes an adjoint cylinder. On the other hand, we show that the operators of Lindenbaum-Tarski of formation of algebras from pretheories can be extended to equivalences of categories from the category CSL, respectively, ISL to the category Bool, of Boolean algebras, respectively, Heyt, of Heyt- ing algebras. Finally, we prove that the functor of regularization from Heyt to Bool has, in addition to its well-known right adjoint, i.e., the canonical embedding of Bool into Heyt, a left adjoint, that from the left to the right adjoint there is a pointwise epimorphic natural transformation, and, flnally, that such a string of adjunctions constitutes an adjoint cylinder.	schematic	Juan Soliveres Tur;Juan Climent Vidal	2008	Notre Dame Journal of Formal Logic	10.1215/00294527-2008-007	equivalence of categories;limit;boolean algebra;adjoint functors;discrete mathematics;topology;natural transformation;functor category;mathematics;heyting algebra;monad;algorithm;adjoint representation of a lie algebra;algebra	Theory	-8.974751738205327	13.763593982475921	57643
9662f134181e06a6b76c1cb9fac23d55c5e8398a	the linear logic of multisets	linear logic	We consider a cumulative hierarchy of multisets over some set of urelements, equipped with additive union ] and a transform relation ¤, and investigate the Horn fragments of Intuitionistic Linear Logic (ILL) that are interpretable in it. The operator ! is defined in an asymptotic way which causes some deviations from the linear-theoretic behavior. Soundness, completeness and partial completeness results are proved for the various fragments. Certain processes of multisets suggest rules for the multiplicatives not compatible with full ILL. One such rule added to the Horn fragment makes the system sound and complete with respect to “coherent processes”.	coherence (physics);linear logic;np-completeness;theory;utility functions on indivisible goods	Athanassios Tzouvaras	1998	Logic Journal of the IGPL	10.1093/jigpal/6.6.901	predicate logic;dynamic logic;zeroth-order logic;linear logic;linear temporal logic;logic optimization;higher-order logic;horn clause;computer science;intermediate logic;predicate functor logic;programming language;substructural logic;second-order logic	Logic	-10.872166843706971	13.583519768563978	57695
54d8e8b3a94c24769ae87ddafd474b2250930db3	higher-order dependency pairs		Arts and Giesl proved that the termination of a first-order rewrite system can be reduced to the study of its “dependency pairs”. We extend these results to rewrite systems on simply typed λ-terms by using Tait’s computability technique.	computability;first-order predicate;rewrite (programming);rewriting;typed lambda calculus	Frédéric Blanqui	2018	CoRR		algorithm;mathematics;discrete mathematics;computability;the arts;lambda calculus;rewriting	Logic	-11.918500137986138	15.410285555018131	57768
77adae61529504d8ae7cfc647523f9ac329c686c	indestructibility and level by level equivalence and inequivalence	supercompact cardinal;strongly compact cardinal;indestructibility;non reflecting stationary set of ordinals;level by level equivalence between strong compactness and supercompactness	Abstract#R##N##R##N#If κ < λ are such that κ is indestructibly supercompact and λ is 2λ supercompact, it is known from [4] that#R##N##R##N##R##N##R##N#{δ < κ |#R##N#δ is a measurable cardinal which is not a limit of measurable cardinals and δ violates level by level equivalence between strong compactness and supercompactness}#R##N##R##N##R##N##R##N##R##N##R##N#must be unbounded in κ. On the other hand, using a variant of the argument used to establish this fact, it is possible to prove that if κ < λ are such that κ is indestructibly supercompact and λ is measurable, then#R##N##R##N##R##N##R##N#{δ < κ |#R##N#δ is a measurable cardinal which is not a limit of measurable cardinals and δ satisfies level by level equivalence between strong compactness and supercompactness}#R##N##R##N##R##N##R##N##R##N##R##N#must be unbounded in κ. The two aforementioned phenomena, however, need not occur in a universe with an indestructibly supercompact cardinal and sufficiently few large cardinals. In particular, we show how to construct a model with an indestructibly supercompact cardinal κ in which if δ < κ is a measurable cardinal which is not a limit of measurable cardinals, then δ must satisfy level by level equivalence between strong compactness and supercompactness. We also, however, show how to construct a model with an indestructibly supercompact cardinal κ in which if δ < κ is a measurable cardinal which is not a limit of measurable cardinals, then δ must violate level by level equivalence between strong compactness and supercompactness. (© 2007 WILEY-VCH Verlag GmbH & Co. KGaA, Weinheim)	turing completeness	Arthur W. Apter	2007	Math. Log. Q.	10.1002/malq.200610028	mathematical analysis;topology;large cardinal;mathematics;regular cardinal	Theory	-7.4439177620110195	12.948695331742448	57843
38f57697d0e9247e977073f3ff19b4a76720655e	dialetheic truth theory: inconsistency, non-triviality, soundness, incompleteness		The best-known application of dialetheism is to semantic paradoxes such as the Liar. In particular, Graham Priest has advocated the adoption of an axiomatic truth theory in which contradictions arising from the Liar paradox can be accepted as theorems, while the Liar sentence itself is evaluated as being both true and false. Such eccentricities might be tolerated, in exchange for great rewards. But in this note I show that it is not possible in Priest’s truth theory to express certain semantic facts about that very theory, and thus that it enjoys no definite advantage over more orthodox approaches to semantic paradox.	graham scan;priest	Federico Marulanda Rey	2007			computational chemistry;hydrocarbon;hydrogen atom;bromine;atom;diphenylamine;triviality;chlorine;chemistry;methyl group	AI	-12.360624137330904	4.363072542756973	57890
1d0e68f3f66105d7888b093c911d4969c7cf18c3	formal semantics of visual languages using spatial reasoning	automatic verification;algebraic specification;visual reasoning;geometrical objects;formal specification;semantics specifications;performance evaluation;qualitative spatial relationships;spatial reasoning;algebraic specification visual languages spatial reasoning visual programming formal specification;graphical theorem proving formal semantics visual languages spatial reasoning spatial logic qualitative spatial relationships description logic theory geometrical objects points lines convex regions automatic verification semantics specifications pictorial janus visual reasoning;formal semantics;points;theorem proving;visual programming;graphical theorem proving;logic testing computer science logic programming scalability performance evaluation system testing equations marine vehicles;visual languages;convex regions;marine vehicles;logic programming;logic testing;visual language;system testing;scalability;spatial relationships;computer science;description logic;spatial logic;pictorial janus;lines;description logic theory	This paper describes a n e w approach t o develop f o r m a l semant ics of visual languages. T h e proposed f ramework relies o n a spatial logic f o r describing quali tative spatial relationships between e lements of visual languages and o n description logics theory. Vasual languages t h a t are ideally suited f o r th i s approach should be based o n geometrical objects such as points, (directed) l ines, and convex regions. A p r o m i n e n t feature of our approach i s the capability f o r automat ic verification of semant ics specifications. T h e specifications defining o u r example language, Pictorial Janus , are fu l ly developed and were automatically verified using a representative set of example programs. Keywordsformal semantics, completely visual languages, spatial reasoning, visual reasoning, description logics, graphical theorem proving.	automated theorem proving;description logic;directed graph;execution unit;image;janus;spatial–temporal reasoning	Volker Haarslev	1995		10.1109/VL.1995.520804	formal language;computer science;theoretical computer science;formal semantics;ontology language;programming language;operational semantics;denotational semantics;algorithm	AI	-17.513252905180853	16.48617426902735	57893
1f9d3fe5c1e1e92d79b61d5712c7b31ad651f13d	calculating with procedure calls	procedimiento;semantica formal;specification programme;formal semantics;exactitude programme;semantique formelle;correction programme;exactitud programa;programming theory;theorie programmation;procedures;program specification;especificacion programa;procedure;program correctness	Although various proof rules for procedure calls in weakest precondition semantics have been proposed over the years [3, chapter 12] [4] [1], none of these is particularly suitable for calculational program construction. The problem is that they tend to yield a precondition that is tortuously expressed. For instance, let a procedure for finding the integer square root of a parameter y be specified, using a specification variable m , by the precondition	integer square root;precondition;predicate transformer semantics	A. Bijlsma	1993	Inf. Process. Lett.	10.1016/0020-0190(93)90098-T	procedure;computer science;programming language;algorithm	DB	-14.64654254919343	17.952287615528952	58059
c26d95b8c18330aa59450bbc040f4013ddc9442b	automated reasoning and bledsoe's dream for the field	automated reasoning	 In one sense, this article is a personal tribute to Woody Bledsoe. As such,the style will in general be that of private correspondence. However, since thisarticle is also a compendium of experiments with an automated reasoning program,researchers interested in automated reasoning, mathematics, and logicwill find pertinent material here. The results of those experiments stronglysuggest that research frequently benefits greatly from the use of an automatedreasoning program. As evidence, I... 	automated reasoning;automated theorem proving;axiomatic system;bus mastering;central processing unit;combinatory logic;earthbound;experiment;frege;naruto shippuden: clash of ninja revolution 3;subsumption architecture;succession	Larry Wos	1991				AI	-13.406908936067035	10.53147705357922	58163
20d5a78b0257c3fede30f6bfd151d200142d3730	concurrent pattern calculus	process calculi;information flow;pattern matching;natural language;data structure	Concurrent pattern calculus drives interaction between processes by unifying patterns, just as sequential pattern calculus drives computation by matching a pattern against a data structure. By generalising from pattern matching to unification, interaction becomes symmetrical, with information flowing in both directions. This provides a natural language for describing any form of exchange or trade. Many popular process calculi can be encoded in concurrent pattern calculus.	amiga walker;bondi;cartesian perceptual compression;concurrent computing;data structure;expressive power (computer science);ieee transactions on software engineering;information and computation;information exchange;linda (coordination language);linux;mobile agent;natural language;pattern calculus;pattern matching;process calculus;programming language;springer (tank);symposium on logic in computer science;traders;unification (computer science);web service;wilfried brauer;lime	Thomas Given-Wilson;Daniele Gorla;Barry Jay	2010	Logical Methods in Computer Science	10.1007/978-3-642-15240-5_18	information flow;data structure;computer science;artificial intelligence;theoretical computer science;pattern matching;mathematics;natural language;programming language;algorithm	Logic	-16.644593503430947	14.396515826254701	58228
17dcc1ecf607ec32ae982da14cf297bb86bac743	concrete dualities and essential arities	clone theory;finitary operation concrete duality dualizing object essential arity essential variable;duality mathematics;concrete cloning equations lattices boolean algebra abstracts;lattices;set theory;essential arity;cloning;concrete dualities;finitary operations;boolean algebra;set theory algebra duality mathematics;set theoretic property;algebra;abstracts;concrete duality;essential arities;dualizing object;set theoretic property concrete dualities essential arities universal algebra finitary operations clone theory;finitary operation;universal algebra;essential variable;concrete	Many dualities arise in the same way: they are induced by dualizing objects. We show that these dualities are connected to a question occurring in universal algebra. Indeed, they cause a strong interplay between the essential arity of finitary operations in one category and the concrete form of the copowers in the other. We elaborate on this connection and its usefulness for universal algebra and clone theory in particular. As the paper's main result we show that, under some mild assumptions, the essential arity of finitary operations from an object A to a finite object B in one category is bounded if and only if the concrete form of the copowers of the dual of A has a certain (easily verifiable) set-theoretic property.	formal verification;set theory	Sebastian Kerkhoff	2014	2014 IEEE 44th International Symposium on Multiple-Valued Logic	10.1109/ISMVL.2014.17	boolean algebra;universal algebra;combinatorics;discrete mathematics;duality;concrete;algebraic structure;lattice;cloning;mathematics;algorithm;set theory;algebra	Theory	-6.4180435815694485	14.400216303904061	58322
2939fefb49760bfb287069d9cc1343d9439b53cb	classes of finite relations as initial abstract data types - ii	initial abstract data type;finite relation	In this second part we extend the presentations in the first part to classes of multirelations, give presentations for algebraic and matrix theories in terms of (symmetric) strict monoidal categories, and give some weaker systems of axioms to present the classes of relations studied in the first part. (By ‘weaker systems of axioms’ we mean the following: these systems of axioms give bigger varieties in which the corresponding classes of relations are still initial algebras.)	abstract data type	Virgil Emil Cazanescu;Gheorghe Stefanescu	1994	Discrete Mathematics	10.1016/0012-365X(94)90252-6		Logic	-7.8729602468619255	13.47625560888843	58636
0402f26fa9987dc7d16e32cd5b0bf8d534c32342	rewrite method for theorem proving in first order theory with equality	paramodulation;resolution;ordre 1;calcul predicat;boolean expression;theorem proving;unification;demonstration theoreme;first order;calculo predicado;reecriture;expresion booleana;expression booleenne;predicates calculus;reecriture terme;demostracion teorema;rewriting;term rewriting;orden 1;reescritura	In this paper we extend the term rewriting approach to first order theorem proving, as described in Hsiang & Dershowitz 1983), to the theory of first order predicate calculus with equality. Consequently, we have showed that the term rewriting method can indeed be made to be as powerful as paramodulation and resolution combined.		Jieh Hsiang	1987	J. Symb. Comput.	10.1016/S0747-7171(87)80024-X	discrete mathematics;resolution;boolean expression;rewriting;unification;first-order logic;mathematics;automated theorem proving;algorithm	Logic	-14.647805127574054	16.27206225893939	58729
7b4dbf45330c600211877fa626fec66a84f588d6	communication, and concurrency with logic-based restriction inside a calculus of structures	computer science logic in computer science	It is well known that we can use structural proof theory to refine, or generalize, existing paradigmatic computational primitives, or to discover new ones. Under such a point of view we keep developing a programme whose goal is establishing a correspondence between proof-search of a logical system and computations in a process algebra. We give a purely logical account of a process algebra operation which strictly includes the behavior of restriction on actions we find in Milner CCS. This is possible inside a logical system in the Calculus of Structures of Deep Inference endowed with a self-dual quanti-fier. Using proof-search of cut-free proofs of such a logical system we show how to solve reachability problems in a process algebra that subsumes a significant fragment of Milner CCS.	automated theorem proving;calculus of structures;computation;concurrency (computer science);formal system;hindley–milner type system;process calculus;reachability problem	Luca Roversi	2012	CoRR		dynamic logic;description logic;state;separation logic;concurrency;computer science;theoretical computer science;computational logic;proof calculus;automated reasoning;multimodal logic;algorithm	Logic	-14.935297498011755	13.328999713306782	58769
29fde3c04a4cde90336c781fdadf384e6a6fceaf	chronological ignorance: experiments in nonmonotonic temporal reasoning	temporal reasoning	Abstract   We offer solutions to two problems in formal temporal reasoning, the qualification problem and the extended prediction problem, which, as argued in [22], subsume the infamous frame problem. The solutions make use of nonmonotonic logics. In particular, we advocate the use of a new nonmonotonic logic, the logic of chronological ignorance. On the practical level, we demonstrate the utility of the logic in specific cases. On the more theoretical level, we identify classes of theories in the logic that have nice properties: they each have a model that is (in a certain sense) unique, and those models can be computed very easily. The first class, causal theories, is sufficiently expressive to solve the qualification problem. It also suggests a new account of the intuitive notion of causation, although we do not discuss that in depth. This class is then generalized to the class of inertial theories, which are sufficiently expressive to solve also the extended prediction problem. Inertial theories embody the concept of potential histories, which are the way the world tends to behave “naturally.”	temporal logic	Yoav Shoham	1988	Artif. Intell.	10.1016/0004-3702(88)90085-9	computer science;artificial intelligence;mathematics;algorithm	AI	-15.591902781924956	6.5183903076032905	58835
412184099e5011e1fd99eb76461a9a1693a2bc58	a hybrid method for finite model search in equational theories	symmetry;hybrid method;equational theories;finite model	Finite model and counter model generation is a potential alternative in automated theorem proving. In this paper, we introduce a system called FMSET which generates finite structures representing models of equational theories. FMSET performs a satisfiability test over a set of special first order clauses called “simple clauses”. The algorithm's originality stems from the combination of a standard enumeration technique and the use of first order resolution. Our objective is to obtain more propagations and still achieve good space and time complexity. Several experiments over a variety of problems have been pursued. FMSET uses symmetry to prune from the search tree unwanted isomorphic branches.		Belaid Benhamou;Laurent Henocque	1999	Fundam. Inform.	10.3233/FI-1999-391202	combinatorics;discrete mathematics;mathematics;symmetry;algorithm;algebra	NLP	-9.247346362436172	17.131200087874397	58847
1803fb24f573449638f1dd75fa62fc6b793a1970	continuum as a primitive type: towards the intuitionistic analysis		It is a ubiquitous opinion among mathematicians that a real number is just a point in the (real) line. If this rough definition is not enough, then a mathematician may provide a formal definition of the real numbers in the set theoretical and axiomatic fashion, i.e. via Cauchy sequences or Dedekind cuts, or as the collection of axioms (up to isomorphism) characterizing exactly the set of real number as the complete and totally ordered Archimedean field. Actually, the above notions of the real numbers are abstract and do not have a constructive grounding. Definition of Cauchy sequences, and equivalence classes of these sequences explicitly use the actual infinity. The same is for Dedekind cuts, where the set of rational numbers is used as actual infinity. Although there is no direct constructive grounding for the above abstract notions, there are so called intuitions on which they are based. A rigorous approach to express these very intuition in a constructive way is proposed. It is based on the concept of the adjacency relation that seems to be a missing primitive concept in type theory.	dedekind eta function;graph (discrete mathematics);rough set;triune continuum paradigm;turing completeness;type theory	Stanislaw Ambroszkiewicz	2017			dedekind cut;combinatorics;mathematics;real number;discrete mathematics;isomorphism;axiom;rational number;cauchy sequence;type theory;actual infinity	Theory	-6.324714858087371	11.865012119390856	59025
fcda56592e6b1d07383575ef0d31ca639b68664d	predicate transformers as power operations	modelizacion;preconditionnement;predicate transformer;predicate calculus;semantics;preconditioning;semantica;semantique;calcul predicat;boolean algebra;input output;modelisation;calculo predicado;state space;relational model;donnee binaire;algebre boole;binary relation;precondicionamiento;dato binario;binary data;weakest precondition;semantic relations;modeling;relational semantics;predicate transformer semantics	In predicate transformer semantics, a program is represented as a mapping from predicates to predicates. In relational semantics, a program is represented as an (input-output) binary relation over some state space. We show how each of these approaches can be obtained from the other by using thepower construction.	kripke semantics;predicate (mathematical logic);predicate transformer semantics;state space;transformers	Ingrid Rewitzky;Chris Brink	1995	Formal Aspects of Computing	10.1007/BF01211604	functional predicate;discrete mathematics;computer science;theoretical computer science;mathematics;semantics;predicate transformer semantics;predicate;programming language;algorithm	PL	-16.191143828728368	15.029256537105619	59031
18a7a48665cc967ad8bbc1e76ae00383d9471be7	finite-valued logics for information processing	sequent calculi;many valued logics;inconsistent information;incomplete information;information processing;finite logics;non deterministic logical matrices;incomplete information systems	We examine the issue of collecting and processing information from various sources, which involves handling incomplete and inconsistent information. Inspired by the framework first proposed by Belnap, we consider structures consisting of information sources which provide information about the values of formulas of classical propositional logic, and a processor which collects that information and extends it by deriving conclusions following from it according to the truth tables of classical logic, applied forward and backward. Our model extends Belnap’s in allowing the sources to provide information also about complex formulas. As that framework cannot be captured using finite ordinary logical matrices, if we want to represent each of the relevant logics with a single matrix, we employ Nmatrices for that purpose. In opposition to the approach proposed in our earlier work, we assume that the information sources are reasonable, i.e. that they provide information consistent with certain coherence rules. We provide sound and complete sequent calculi admitting strong cut elimination for the logic of a single information source, and (several variants of) the logic generated by the source and processor structures described above. In doing this, we also provide new characterizations for some known logics. We prove that, in opposition to the variant with unconstrained information sources considered earlier, the latter logic cannot be generated by structures with any bounded number of sources. Address for correspondence: Beata Konikowska, Institute of Computer Science, Polish Academy of Sciences, Ordona 21, 01-237 Warsaw, Poland, beatak@ipipan.waw.pl ∗This research was supported by THE ISRAEL SCIENCE FOUNDATION founded by The Israel Academy of Sciences and Humanities (grant No 280/10). †This work was supported by the grant N N206 399334 of Polish Ministry of Science and Higher Education 1002 A. Avron, B. Konikowska / Finite-valued Logics for Information Processing	academy;computer science;information processing;information source;propositional calculus;sequent calculus	Arnon Avron;Beata Konikowska	2012	Fundam. Inform.	10.3233/FI-2011-615	monoidal t-norm logic;t-norm fuzzy logics;information algebra;discrete mathematics;information processing;mathematics;complete information;algorithm	Theory	-10.133010945579617	10.02176465778623	59148
08c75f5461914f7c123a5efe35e4f9ab867302c4	skew and omega-skew confluence and abstract böhm semantics	sistema infinito;arbol bohm;semantique bohm;confluencia;forma normal;semantics;bohm tree;lambda calculus;confluence;semantica;semantique;rewriting systems;arbre bohm;systeme reecriture terme;normal form;lambda calculo;forme normale;lambda calcul;systeme infini;systeme reecriture;skew confluence;infinite system	Skew confluence was introduced as a characterization of non-confluent term rewriting systems that had unique infinite normal forms or Bohm like trees. This notion however is not expressive enough to deal with all possible sources of non-confluence in the context of infinite terms or terms extended with letrec. We present a new notion called ω-skew confluence which constitutes a sufficient and necessary condition for uniqueness. We also present a theory that can lift uniqueness results from term rewriting systems to rewriting systems on terms with letrec. We present our results in the setting of Abstract Bohm Semantics, which is a generalization of Bohm like trees to abstract reduction systems.	chaitin's constant;confluence	Zena M. Ariola;Stefan C. C. Blom	2005		10.1007/11601548_19	discrete mathematics;computer science;lambda calculus;mathematics;semantics;programming language;confluence;algorithm	Logic	-11.470797399966276	17.97594503726659	59285
0208004387ec71488094bab93894550b7b2ec4d4	program for generating fuzzy logical operations and its use in mathematical proofs		"""Fuzzy logic is one of the tools for management of uncertainty; it works with more than two values, usually with a continuous scale, the real interval [0,1]. Implementation restrictions in applications force us to use in fact a finite scale (finite chain) of truth degrees. In this paper, we study logical operations on finite chains, in particular conjunctions. We describe a computer program generating all finitely-valued fuzzy conjunctions (t-norms). It allows also to select these t-norms according to various criteria. Using this program, we formulated several conjectures which we verified by theoretical proofs, thus obtaining new mathematical theorems. We found out several properties of t-norms that are quite surprising. As a consequence, we give arguments why there is no """"satisfactory"""" finitelyvalued conjunction. Such an operation is desirable, e.g., for search in large databases. We present an example demonstrating both the motivation and the difficulties encountered in using many-valued conjunctions. As a by-product, we found some consequences showing that the characterization of diagonals of finitely-valued conjunctions differs substantially from that obtained for t-norms on [0,1]."""	computer program;database;fuzzy logic;logical connective;t-norm	Tomás Bartusek;Mirko Navara	2002	Kybernetika		fuzzy logic;discrete mathematics;mathematics;mathematical proof;t-norm	DB	-5.888677334017685	10.535802906860258	59336
e186e60cf975221c180b697809d0d8740b15901b	value iteration for relational mdps in rewriting logic			iteration;markov decision process;rewriting	Lenz Belzner	2014		10.3233/978-1-61499-421-3-61	machine learning;artificial intelligence;theoretical computer science;markov decision process;computer science;rewriting	AI	-15.728261927117462	13.92415089977972	59536
58a69ab32bba6140eac4c460426d495da3caaf52	shallow analysis and the slingshot argument	factual contexts;journal_article;formalization;slingshot argument;metaphysique;logic;quine w v;logical formalization;argument lance pierre;analyse;analytical philosophy;shallow analysis;contexte;metaphysics;analysis;philosophie analytique;formalisation;russell b;context;logique;logica	According to the standard opinions in the literature, blocking the unacceptable consequences of the notorious slingshot argument requires imposing constraints on the metaphysics of facts or on theories of definite descriptions (or class abstracts). This paper argues that both of these wellknown strategies to rebut the slingshot overshoot the mark. The slingshot, first and foremost, raises the question as to the adequate logical formalization of statements about facts, i.e. of factual contexts. It will be shown that a rigorous application of Quine’s maxim of shallow analysis to formalizations of factual contexts paves the way for an account of formalizing such contexts which blocks the slingshot without ramifications for theories of facts or definite descriptions.	argument map;blocking (computing);constraint (mathematics);correctness (computer science);embedded system;foremost;formal system;jonas;overshoot (signal);quine (computing);regular expression;shape context;theory;viz: the computer game	Michael Baumgartner	2010	J. Philosophical Logic	10.1007/s10992-010-9131-9	philosophy;epistemology;computer science;artificial intelligence;metaphysics;analytic philosophy;analysis;mathematics;logic;algorithm	NLP	-13.437970881191546	4.96953868930702	59599
aa8c8a62f5632e5a88e55a672908636cd1e68994	graduality, uncertainty and typicality in formal concept analysis	chapter	There exist several proposals for extending formal concept analysis (FCA) to fuzzy settings. They focus mainly on mathematical aspects and assume generally a residuated algebra in order to maintain the required algebraic properties for the definition of formal concepts. However, less efforts have been devoted for discussing what are the possible reasons for introducing degrees in the relation linking objects and properties (which defines a formal context in the FCA sense), and thus what are the possible meanings of the degrees and how to handle them in agreement with their intended semantics. The paper investigates three different semantics, namely i) the graduality of the link associating properties to objects, pointing out various interpretations of a fuzzy formal context; ii) the uncertainty pervading this link (in case of binary properties) when only imperfect information is available and represented in the framework of possibility theory; and lastly, iii) the typicality of objects and the importance of definitional properties within a class. Remarkably enough, the uncertainty semantics has been hardly considered in the FCA setting, and the third semantics apparently not. Moreover, we provide an algorithm for building the whole fuzzy concept lattice based on Godel implication for handling gradual properties in a qualitative manner.	formal concept analysis	Yassine Djouadi;Didier Dubois;Henri Prade	2011		10.1007/978-3-642-16629-7_7	pure mathematics;mathematics;algorithm	SE	-13.054630478245143	6.5732061144110245	59652
1f9c98bd72bf0b564f159eb6d9ba46dc468eeb84	eliminating ditransitives	higher arity;event variable;algebraic framework;binary relation	We discuss how higher arity verbs such as give or promise can be treated in an algebraic framework that admits only unary and binary relations and does not rely on event variables.	linear algebra;unary operation	András Kornai	2011		10.1007/978-3-642-32024-8_16	arity;discrete mathematics;mathematics;algorithm	Theory	-7.7847672300830055	15.79926362456504	59746
15af9b85f8716d26e0a4f661aa79dfeb94f592c5	algorithmic correspondence and completeness in modal logic. v. recursive extensions of sqema	rule based;fixed point;canonicity;modal logic;first order;first order logic with fixed points;correspondence theory;sqema;first order logic	The previously introduced algorithm SQEMA computes first-order frame equivalents for modal formulae and also proves their canonicity. Here we extend SQEMA with an additional rule based on a recursive version of Ackermann’s lemma, which enables the algorithm to compute local frame equivalents of modal formulae in the extension of first-order logic with monadic least fixed-points FOμ. This computation operates by transforming input formulae into locally frame equivalent ones in the pure fragment of the hybrid mucalculus. In particular, we prove that the recursive extension of SQEMA succeeds on the class of ‘recursive formulae’. We also show that a certain version of this algorithm guarantees the canonicity of the formulae on which it succeeds.	ackermann function;algorithm;automated theorem proving;computation;first-order logic;first-order predicate;item unique identification;linear equation;modal logic;negation normal form;norm (social);preprocessor;primitive recursive function;propositional variable;recursion;recursive language;rewriting;system of linear equations	Willem Conradie;Valentin Goranko;Dimiter Vakarelov	2010	J. Applied Logic	10.1016/j.jal.2010.08.002	dynamic logic;rule-based system;normal modal logic;discrete mathematics;computer science;artificial intelligence;axiom s5;first-order logic;mathematics;accessibility relation;multimodal logic;algorithm	Logic	-12.589995405358316	15.32108116615292	59847
b441169f4433a4028325f2cbc46b79b3ce218d17	translatability of schemas over restricted interpretations	main result;usual notion;additional result;effective computability;motivated class;algebraic structure;maximal power;minimal power;nontrivial class;restricted interpretation	"""We study a notion of translatability between classes of schemas when restrictions a r e placed on interpretations. Unlike the usual notion of translatability, our translatability lets the translation depend on the interpretation. We consider five classes of schemas. Three of these have been extensively studied in the literature: flow-chart, flow-chart with counters, and recursive. The two others are defined herein; the first of which is a class of """"maximal power"""" and is equivalent to similarly motivated classes of other investigators; while the second is, in some sense, a nontrivial class of """"minimal power."""" Our main results specify restrictions on interpretations that will allow the translatability of a class Y'I into a class Y'~, ~1 not being translatable into Y'~ over all (or unrestricted) interpretations. Additional results specify restrictions on interpretations under which ~x is not translatable into ~o'~ ; the proofs of these clarify the mechanisms in the main results. Last, we consider the notion of effective computability in algebraic structures in the light of the main results."""	computability;effective method;flowchart;linear algebra;maximal set;recursion	Assaf J. Kfoury	1974	J. Comput. Syst. Sci.	10.1016/S0022-0000(74)80030-9	discrete mathematics;mathematics;algorithm	Theory	-6.640867326829032	13.7683890206446	59949
49de9f11f9f8f0cd4ba1c32c2956b04a1a7e8c6e	quota and gmin merging operators	computational complexity;possible worlds	In this paper, two families of merging operators are considered: quota operators and Gmin operators. Quota operators rely on a simple idea: any possible world is viewed as a model of the result of the merging when it satisfies “sufficiently many” bases from the given profile (a multi-set of bases). Different interpretations of the “sufficiently many” give rise to specific operators. Each Gmin operator is parameterized by a pseudo-distance and each of them is intended to refine the quota operators (i.e., to preserve more information). Quota and Gmin operators are evaluated and compared along four dimensions: rationality, computational complexity, strategy-proofness, and discriminating power. Those two families are shown as interesting alternatives to the formula-based merging operators (which selects some formulas in the union of the bases).	computation;computational complexity theory;possible world;rationality;word lists by frequency	Patricia Everaere;Sébastien Konieczny;Pierre Marquis	2005			discrete mathematics;computer science;mathematics;possible world;computational complexity theory;algorithm	DB	-7.05136985360345	9.180487948005814	60152
7d6ce4ed80b7b9ccf4b1f2213f63b25a13ab1664	a gabbay-rule free axiomatization of t×w validity	possibility;tense logic;infini;operator;prior a n;logique des propositions;synchronie;temporal logic;possibilite;axiomatization;axiom;semantics;time synchronization;semantique;simultaneite;ensemble;modal logic;synchronism;preuve;propositional logic;infinite;synchrony;branching time;kutschera f von;simultaneity;logique modale;regle d irreflexivite;philosophy;operateur;t x w;gabbay d;logique du temps;set;proof;structure;axiome	The semantical structures called T×W frames were introduced in (Thomason, 1984) for the Ockhamist temporal-modal language, ℒO, which consists of the usual propositional language augmented with the Priorean operators P and F and with a possibility operator ⋄. However, these structures are also suitable for interpreting an extended language, ℒSO, containing a further possibility operator ⋄s which expresses synchronism among possibly incompatible histories and which can thus be thought of as a cross-history ‘simultaneity’ operator. In the present paper we provide an infinite set of axioms in ℒSO, which is shown to be strongly complete forT ×W-validity. Von Kutschera (1997) contains a finite axiomatization of T×W-validity which however makes use of the Gabbay Irreflexivity Rule (Gabbay, 1981). In order to avoid using this rule, the proof presented here develops a new technique to deal with reflexive maximal consistent sets in Henkin-style constructions.	axiomatic system;external validity	Maria Concetta Di Maio;Alberto Zanardo	1998	J. Philosophical Logic	10.1023/A:1004284420809	modal logic;set;ensembl;structure;discrete mathematics;simultaneity;temporal logic;philosophy;epistemology;operator;proof;mathematics;semantics;linguistics;propositional calculus;axiom;algorithm	Logic	-11.783802984851196	12.661474888893498	60256
f52fed193f1cd690a0404da1707e529fde2fec2c	towards a formal framework for heterogeneous relation algebra	type inference system;relation algebra;polymorphism;typing discipline;type inference;heterogeneous relation algebra	We de®ne a language for polymorphic typed relations and introduce a typing discipline for terms of that language. A modular type inference system for the derivation of the most general type of a term is presented and correctness and well as weak completeness of the type inference system w.r.t. the typing discipline is proven. Finally, we give an interpretation of our language based on the classical model of relation algebra. Ó 1999 Elsevier Science Inc. All rights reserved.	atomic formula;correctness (computer science);inference engine;type inference;type system	Claudia Hattensperger;Peter Kempf	1997	Inf. Sci.	10.1016/S0020-0255(99)00014-6	polymorphism;discrete mathematics;computer science;type inference;pure mathematics;relation algebra;mathematics;programming language;algorithm	PL	-12.515719750028712	17.215166195769747	60460
3fc163ec704bdf76bff6f483f885c8ab5feaf993	new foundations for the geometry of interaction	domain theory;convergence;cut elimination;dataflow nets geometry of interaction computational interpretation;computational interpretation;geometry logic educational institutions concrete feedback algebra computer networks convergence;logic;geometry;computational geometry;geometry of interaction;computer networks;feedback;dataflow nets;programming theory;programming theory computational geometry;algebra;concrete	A basic dichotomy runs through much of programming theory, assuming a number of guises: denotational/operational, declarative/procedural, logical/computational. Mathematical structure is seen as residing chiefly in the first term of each dichotomy, computational dynamics and its associated intuitions in the second. A number of recent developments, perhaps most notably Girard’s Linear Logic [6] and “Geometry of Interaction” [9], aim to find a new middle ground between these dichotomies. The Geometry of Interaction programme is to give a semantics of computation, specifically of Cut-elimination in Linear Logic, with the following key features:	computation;declarative programming;geometry of interaction;linear logic;mathematical structure;new foundations;procedural programming	Samson Abramsky;Radha Jagadeesan	1992		10.1109/LICS.1992.185534	discrete mathematics;concrete;convergence;geometry of interaction;computational geometry;computer science;theoretical computer science;domain theory;feedback;mathematics;logic;algorithm	Logic	-9.928115827241573	17.551376724590725	60595
0679cab95b30312448ca431d7d6a57626a5135b1	stratified causal theories for reasoning about deterministic devices and protocols	temporal reasoning protocols;protocols;modelling deterministic devices protocols causal dependencies stratified causal theories reasoning causal reasoning;protocols calculus cooling valves predictive models discrete event simulation;temporal reasoning	We present a method for formalising the behaviour of simple deterministic devices and protocols in a way that makes explicit the causal dependencies amongst the component elements, thereby allowing true causal (as opposed to purely temporal) reasoning. Our intention is to handle such systems effectively in the simplest possible way, without invoking additional problematic considerations (concerning, for example, non-monotonicity) that may be necessary for modelling a more general range of scenarios.	causal filter;non-functional requirement	Antony Galton;Juan Carlos Augusto	2002		10.1109/TIME.2002.1027473	discrete mathematics;theoretical computer science;mathematics;algorithm	AI	-17.778882928198037	7.083491267423331	60617
2f6a8e1a97ba292393ce43b5880c4e59b133e912	selecting the coherence notion in multi-adjoint normal logic programming		This paper is focused on looking for an appropriate coherence notion which allows us to deal with inconsistent information included in multi-adjoint normal logic programs. Different definitions closely related to the inconsistency concept have been studied and an adaptation of them to our logic programming framework has been included. A detailed reasoning is presented in order to motivate and justify the suitability of the chosen coherence notion.	logic programming	Maria Eugenia Cornejo;David Lobo;Jesús Medina	2017		10.1007/978-3-319-59153-7_39	artificial intelligence;machine learning;computer science;horn clause;theoretical computer science;logic programming;prolog;coherence (physics)	Logic	-15.965421433931803	6.677729951420423	60681
f43814088f3533b6edff92442bfad87619b418bf	a problem with extended pascal	extended pascal	"""In the recent round of public comments on the draft standard for Extended Pascal, Dietrich [i] pointed out a defect of sufficient severity to re0uire the attention of a ~ider audience than the few involved in the standardisation effort. The problem <~hich at first sight seems trivia]> is that the new ~eature allowing constant expressions as the ~ower bound o~ a subrange-+ype causes trouble in parsing. He gives the ~o]]owing example: type x = (y) .. 18: Right up to the closing parenthesis, the declaration iooks exactly like a declaration for an enumerated type of one element, y, Then, out of the blue, the """",."""" announces that this is in ~act a subranqe type with a constant lower bound, the expression """"(y)' Dietrich stated that this difference could be determined by use of context or by more than one symbol !ookahead, and suggested that it might be helpful """"a!though somewhat loathsome' to restrict enumeration types to two or more values. In their response to this comment, the XSJ£ committee chose to take no action, saying """"'The slight increase in parsing comp!exity is made up for by the increase in functionality through the use of an expression ~s the ~o~er bound of a subrange type without the somewhat loathsome restriction on enumerated types."""" This writer-believes that both the Committee and Dietrich have seriousl× underestimated the di~÷icuity of resolving this ambiguity. The first point to be made is that, contrary to Dietrich's belief (arc perhaps the Committee's al=o) there is no way to resolve fhis ambiauitv by Inokino a+ fhe conf~xf The only possible relevant context is the status of the identifier y, Therefore consider the following program fragment: program a const y = 5; procedure b; type x = (y) {Now what wit! fol!ow?} It is clear from an examination of the above that two perfectiy legal continuations are possible: a """".."""" symbo! makes x a subr.~nge type with !ot,,~er bound y, i.e. 5, whi!e a semicolon makes x an enumerated type ~ith a single element, the new}y declared constant, y. !n the latter case, creation of a new constant with the same name as an existing one is quite correct, as the existing one was declared in a different blocK. The really pernicious feature of this examp!e is the tota];y di#ferent treatment of y in the two cases, This is a highly unsatisfactory situation which does not even occur-in Algol …"""	closing (morphology);const (computer programming);continuation;declaration (computer programming);emoticon;enumerated type;identifier;parsing;software bug	Ronald T. House	1988	SIGPLAN Notices	10.1145/57669.57680	computer science;pascal (unit);programming language	PL	-4.7953905131243735	13.82328611444692	61280
66bdd1dfab2b8d5d210b5dfd98e669652053e809	finitistic proofs of 0-1 laws for fragments of second-order logic	second order;loi probabilite;ley probabilidad;logique mathematique;combinatorial problems;logica matematica;mathematiques combinatoires;mathematical logic;asymptotic behavior;comportement asymptotique;comportamiento asintotico;second order logic;logique ordre 2;probability distribution;combinatorial mathematics	We give proofs of the O-l laws for Hi (Bemays-Schdnfinkel) and Hf (Ackerrnann) sentences which use neither the compactness theorem nor an infinite structure. The latter argument is essentially that of Kolaitis and Vardi but bypasses inlinitistic methods.		Thierry Lacoste	1996	Inf. Process. Lett.	10.1016/0020-0190(96)00035-X	combinatorics;asymptotic analysis;calculus;mathematics;second-order logic;algorithm	Logic	-7.471504588404714	11.126805236227707	61344
aa7aa7dfd7d78c082735b2afd05c06c1353a2776	canonical formulas via locally finite reducts and generalized dualities.		Axiomatizability, the finite model property (FMP), and decidability are some of the most frequently studied properties of non-classical logics. One of the first general methods of axiomatizing large classes of superintuitionistic logics (si-logics for short) was developed by Jankov [8]. For each finite subdirectly irreducible Heyting algebra A, Jankov designed a formula that encodes the structure of A. The main property of the Jankov formula χ(A) is that a Heyting algebra B refutes χ(A) iff A is isomorphic to a subalgebra of a homomorphic image of B. In [9] Jankov utilized this method to show that there are continuum many si-logics; in fact, continuum many si-logics axiomatized by Jankov formulas. However, not every si-logic is axiomatizable by Jankov formulas. Model-theoretic analogues of Jankov formulas were developed by de Jongh [10] for si-logics and by Fine [6] for modal logics. In [7] Fine introduced the concept of a subframe logic, axiomatized all transitive subframe logics by means of subframe formulas, and proved that each transitive subframe logic has the FMP. Zakharyaschev generalized Fine’s approach, developed the model-theoretic theory of canonical formulas (in [12] for si-logics and in [11, 13] for modal logics), and showed that each si-logic and each transitive modal logic is axiomatizable by canonical formulas. See [5, Ch. 9] for an overview of these results. In this talk, which is based on joint work with G. Bezhanishvili [1, 2, 3, 4], I will discuss an algebraic approach to the method of canonical formulas. I will mostly concentrate on the case of si-logics. But I will also review the case of modal logics and possible generalizations to substructural logics. For si-logics the method boils down to identifying appropriate locally finite reducts of Heyting algebras. The variety of Heyting algebras has two well-behaved locally finite reducts, the variety of bounded distributive lattices and the variety of implicative semilattices. The variety of bounded distributive lattices is generated by the →-free reducts of Heyting algebras, while the variety of implicative semilattices by the ∨-free reducts. Each of these reducts gives rise to canonical formulas that generalize Jankov formulas and provide an axiomatization of all si-logics. For a finite subdirectly irreducible Heyting algebra A and D ⊆ A, we design the (∧,→)canonical formula of A that encodes fully the structure of the ∨-free reduct of A, and only partially the behavior of ∨. We also design the (∧,∨)-canonical formula of A that encodes fully the structure of the →-free reduct of A, and only partially the behavior of →. We prove that every si-logic is axiomatizable by (∧,→)-canonical formulas as well as by (∧,∨)-canonical formulas. We discuss the similarities and differences between these two kinds of formulas. Via the generalized Esakia duality of Heyting algebras and (∧,→)-homomorphisms, we show that (∧,→)-canonical formulas are algebraic analogues of Zakharyaschev’s canonical formulas. One of the main ingredients of our formulas is a designated subset D of pairs of elements of a finite subdirectly irreducible Heyting algebra A. The obvious two extreme cases are when	axiomatic system;fenchel's duality theorem;finite model property;irreducibility;linear algebra;modal logic;newton–cotes formulas;temporal logic;theory;triune continuum paradigm	Nick Bezhanishvili	2013			artificial intelligence;discrete mathematics;machine learning;computer science	Logic	-7.400551796817652	12.307672850949915	61371
42079deeedf8441acdea362c3148150b90702887	computational coverage of tlg: nonlinearity	conference report	We study nonlinear connectives (exponentials) in the context of Type Logical Grammar (TLG). We devise four conservative extensions of the displacement calculus with brackets, Db!, Db!?, Db!b and Db!b?r which contain the universal and existential exponential modalities of linear logic (LL). These modalities do not exhibit the same structural properties as in LL, which in TLG are especially adapted for linguistic purposes. The universal modality ! for TLG allows only the commutative and contraction rules, but not weakening, whereas the existential modality ? allows the so-called (intuitionistic) Mingle rule, which derives a restricted version of weakening. We provide a Curry-Howard labelling for both exponential connectives. As it turns out, controlled contraction by ! gives a way to account for the so-called parasitic gaps, and controlled Mingle ? iteration, in particular iterated coordination. Finally, the four calculi are proved to be Cut-Free, and decidability is proved for a linguistically sufficient special case of Db!b?r (and hence Db!b).	computation;curry;curry–howard correspondence;displacement mapping;iteration;ll parser;linear logic;logical connective;modality (human–computer interaction);nonlinear system;thesaurus linguae graecae;time complexity	Glyn Morrill;Oriol Valentín	2015			discrete mathematics;mathematics;algorithm	Logic	-13.120484744298702	12.015275695843808	61395
1c515b7a14589d2758f13781413f0a48669a39bf	indiscernibles and decidable models		Ehrenfeucht and Mostowski [3] introduced the notion of indiscernibles and proved that every first order theory has a model with an infinite set of order indiscernibles. Since their work, techniques involving indiscernibles have proved to be extremely useful for constructing models with various specialized properties. In this paper and in a sequel [5], we investigate the effective content of Ehrenfeuchtu0027s and Mostowskiu0027s result. In this paper we consider the question of which decidable theories have decidable models with infinite recursive sets of indiscernibles. In §1, using some basic facts from stability theory, we show that certain large classes of decidable theories have decidable models with infinite recursive sets of indiscernibles. For example, we show that every ω -stable decidable theory and every stable theory which possesses a certain strong decidability property called ∃ Q -decidability have such models. In §2 we construct several examples of decidable theories which have no decidable models with infinite recursive sets of indiscernibles. These examples show that our hypothesis for our positive results in §1 are necessary. Finally in §3 we give two applications of our results. First as an easy application of our results in §1, we show that every ω -stable decidable theory has uncountable models which realize only recursive types. Also our counterexamples in §2 allow us to answer negatively two questions of Baldwin and Kueker [1] concerning the effectiveness of their elimination of Ramsey quantifiers for certain theories. In [5], we show that in general the problem of finding an infinite set of indiscernibles in a decidable model is recursively equivalent to finding a path through a recursive infinite branching tree. Similarly, we show that the problem of finding an co-type of a set of indiscernibles in a decidable ω-categorical theory is recursively equivalent to finding a path through a highly recursive finitely branching tree.	mathematical model	Hal A. Kierstead;Jeffrey B. Remmel	1983	J. Symb. Log.		discrete mathematics;indiscernibles;counterexample;recursion;infinite set;stable theory;uncountable set;decidability;mathematics;order theory	Logic	-6.022591139852448	15.07445673039348	61415
6d3d7a047eae8f6dc43ecac9aedfd9e3f2efb993	on undecidable statements in enlarged systems of logic and the concept of truth		It is my intention in this paper to add somewhat to the observations already made in my earlier publications on the existence of undecidable statements in systems of logic possessing rules of inference of a non-finitary (non-constructive) character (??1-4).u0027 I also wish to emphasize once more the part played by the concept of truth in relation to problems of this nature (??5-8). At the end of this paper I shall give a result which was not touched upon in my earlier publications. It seems to be of interest for the reason (among others) that it is an example of a result obtained by a fruitful combination of the method of constructing undecidable statements (due to K. Godel) with the results obtained in the theory of truth.	formal system;undecidable problem	Alfred Tarski	1939	J. Symb. Log.		rule of inference;algorithm;undecidable problem;gödel;truth value;mathematics;wish	Logic	-11.55530632596511	6.92473298130381	61470
e72ce2b65f35575104bd554c1585558d6e63ee0a	on paraconsistent weakening of intuitionistic negation	distributive lattice;intuitionistic logic;logic in computer science	In [1], systems of weakening of intuitionistic negation log ic called Zn and CZn were developed in the spirit of da Costa’s approach(c.f. [2] ) by preserving, differently from da Costa, its fundamental properties : antitonicity, inversion and additivity for distributive lattices. However, accord ing to [3], those systems turned out to be not paraconsistent but extensions of intuit onistic logic. Taking into account of this result, we shall here make some observat ions on the modified systems of Zn and CZn, that are paraconsistent as well.	intuitionistic logic;paraconsistent logic	Zoran Majkic	2011	CoRR		distributive lattice;principle of explosion;discrete mathematics;paraconsistent logic;intuitionistic logic;computer science;negation;mathematics;algorithm	Logic	-10.43141566052282	12.08466512888296	61491
e5ba2074220d53af55f4dd602c25ba56b8368b72	generic statements require little evidence for acceptance but have powerful implications	biological patents;concept;biomedical journals;text mining;europe pubmed central;etude experimentale;quantifier;concepts;citation search;lenguaje;semantics;prevalence implications;hombre;langage;verite;acceptance;citation networks;semantica;semantique;aceptacion;langage generique;quantifiers;research articles;acceptation;abstracts;open access;quantificateur;cognition;human;life sciences;clinical guidelines;cognicion;truth conditions;language;full text;cuantificador;estudio experimental;rest apis;generic language;orcids;europe pmc;biomedical research;homme;concepto;bioinformatics;literature search	"""Generic statements (e.g., """"Birds lay eggs"""") express generalizations about categories. In this paper, we hypothesized that there is a paradoxical asymmetry at the core of generic meaning, such that these sentences have extremely strong implications but require little evidence to be judged true. Four experiments confirmed the hypothesized asymmetry: Participants interpreted novel generics such as """"Lorches have purple feathers"""" as referring to nearly all lorches, but they judged the same novel generics to be true given a wide range of prevalence levels (e.g., even when only 10% or 30% of lorches had purple feathers). A second hypothesis, also confirmed by the results, was that novel generic sentences about dangerous or distinctive properties would be more acceptable than generic sentences that were similar but did not have these connotations. In addition to clarifying important aspects of generics' meaning, these findings are applicable to a range of real-world processes such as stereotyping and political discourse."""	categories;egg food product;experiment;generalization (psychology);generic drugs;generic programming;stereotyping;sentence	Andrei Cimpian;Amanda C. Brandone;Susan A. Gelman	2010	Cognitive science	10.1111/j.1551-6709.2010.01126.x	psychology;truth condition;text mining;concepts;cognition;philosophy;computer science;artificial intelligence;mathematics;semantics;linguistics;sociology;language;communication;concept;cognitive science	NLP	-13.628487143072508	5.444845103182891	61599
316c4817fdfe1b292954beadeadcb720b558b8a4	automatic 'descente infinie' induction reasoning	teoria demonstracion;concepcion modular;regle inference;logica booleana;saturacion;theorie preuve;array mathematics;proof theory;tablero;intelligence artificielle;inference rule;induccion;induction;inductive reasoning;inferencia;modular design;artificial intelligence;logique booleenne;inteligencia artificial;boolean logic;saturation;inference;regla inferencia;tableau matriciel;conception modulaire	We present a framework and a methodology to build and analyse automatic provers using the ’Descente Infinie’ induction principle. A stronger connection between different proof techniques like those based on implicit induction and saturation is established by uniformly and explicitly representing them as applications of this principle. The framework offers a clear separation between logic and computation, by the means of i) an abstract inference system that defines the maximal sets of induction hypotheses available at every step of a proof, and ii) reasoning modules that perform the computation and allow for modular design of the concrete inference rules. The methodology is applied to define a concrete implicit induction prover and analyse an existing saturationbased inference system.	computation;inference engine;maximal set;modular design	Sorin Stratulat	2005		10.1007/11554554_20	computer science;artificial intelligence;inductive reasoning;machine learning;proof theory;mathematics;modular design;saturation;algorithm	Logic	-16.341131338913904	15.445948701981944	61707
b031554ba958bbcd004ae123db3a519b37307246	trading off simplicity and coverage in incremental concept learning	concept learning	"""Dana ANGLUIN & Carl SMITH (1983) : """"Inductive Inference: Theory and Methods"""". Computing Surveys, Vol.15, No.3, 237-269, September 1983. A survey paper providing providing a broad outline of definitions, key notions and known results in 1983. Discuss several criteria for comparing inference methods including the number of distinct hypotheses and mind changes produced by an inference system given a sequence of examples. States (p.254) that """"In general, identification by enumeration produces the ’simplest"""" compatible hypothesis if the enumeration order is consistent with the intended simplicity ordering of hypotheses""""."""	concept learning;inductive reasoning;inference engine	Wayne Iba;James Wogulis;Pat Langley	1988			concept learning;computer science;artificial intelligence;machine learning;data mining;mathematics	AI	-18.46922613059564	9.845757576357228	61791
ecbca239e004a606b0517ff08997515fd5299f1c	a modal logic for the decision-theoretic projection problem		We present a decidable logic in which queries can be posed about (i) the degree of belief in a propositional sentence after an arbitrary finite number of actions and observations and (ii) the utility of a finite sequence of actions after a number of actions and observations. Another contribution of this work is that a POMDP model specification is allowed to be partial or incomplete with no restriction on the lack of information specified for the model. The model may even contain information about non-initial beliefs. Essentially, entailment of arbitrary queries (expressible in the language) can be answered. A sound, complete and terminating decision procedure is provided.	abstract rewriting system;decision problem;modal logic;partially observable markov decision process;theory	Gavin Rens;Thomas Andreas Meyer;Gerhard Lakemeyer	2015			description logic;partially observable markov decision process;computer science;artificial intelligence;machine learning;multimodal logic;algorithm	AI	-16.861042272546634	8.642593938132487	61808
e50fe1be958581fdfc9af42c6b3660be95ae87fb	a theory revision approach for concept learning	inductive logic programming;machine learning;concept learning;theory revision;first order logic	Concept learning from examples in first-order languages has been widely studied recently. Specifically, many systems that integrate inductive learning and explanationbased learning have been proposed. However, concept learning is only a subproblem of the problem of knowledge base (which is referred to as a theory in first-order logic) revision. This is mainly because concept learning methods utilize background knowledge without regard to whether the knowledge is perfect or imperfect, while a knowledge base revision system should revise the knowledge base to be consistent with all environmental changes. This paper presents a real theory revision method that guarantees the revised theory to be correct on all given examples. As a consequence, the problem of concept learning is also solved through the proposed method. The proposed method is a two-phase approach. In the first phase, the input theory is generalized to cover all positive examples. Theoretically, this can be done by existing concept learning systems. The second phase then specializes the theory to exclude negative examples. The specialization must not cause excessive exclusion of covered positive examples. The paper focuses on designing such a specialization algorithm. Experimental results show that the proposed algorithm can mitigate the over-specialization problem.	algorithm;belief revision;concept learning;correctness (computer science);first-order logic;first-order predicate;heuristic;inductive reasoning;iteration;knowledge base;literal (mathematical logic);mathematical induction;norm (social);operational definition;partial template specialization;pattern recognition;two-phase locking;verification and validation	Po-Chi Chen;Yong-Neng Yu;Shu-Yuen Hwang	1994	International Journal on Artificial Intelligence Tools	10.1142/S0218213094000273	multi-task learning;instance-based learning;error-driven learning;algorithmic learning theory;concept learning;sample exclusion dimension;double loop learning;computer science;artificial intelligence;machine learning;first-order logic;inductive transfer;stability;concept class;computational learning theory;active learning;algorithm	AI	-17.36341499925009	6.961118079302254	62044
c48015bbd6a57ae00b1e283bdcc8b620f46d86f8	databases and higher types	base relacional dato;semantica formal;interrogation base donnee;interrogacion base datos;intelligence artificielle;logical programming;formal semantics;relational database;semantique formelle;programmation logique;base donnee relationnelle;artificial intelligence;inteligencia artificial;programacion logica;database query	Generalized databases will be examined, in which attributes can be sets of attributes, or sets of sets of attributes, and other higher type constructs. A precise semantics will be developed for such databases, based on a higher type modal/intensional logic.	curve fitting;data haven;database;entity;first-order logic;first-order predicate;higher-order function;intensional logic;lecture notes in computer science;linear algebra;modal logic;montague grammar;thomason collection of civil war tracts	Melvin Fitting	2000		10.1007/3-540-44957-4_3	relational database;computer science;artificial intelligence;formal semantics;data mining;database	DB	-16.420724319436	14.925529857221127	62052
9972b1db646153540b103846b9ce7da77e455d14	wissenschaftslogik: the role of logic in the philosophy of science	philosophy of science;logics;science philosophy;logique;philosophie des sciences	Carl Hempel introduced what he called “Craig’s theorem” into the philosophy of science in a famous discussion of the “problem of theoretical terms.” Beginning with Hempel’s use of ‘Craig’s theorem,” I shall bring out some of the key differences between Hempel’s treatment of the “problem of theoretical terms” and Carnap’s in order to illuminate the peculiar function of Wissenschaftslogik in Carnap’s mature philosophy. Carnap’s treatment, in particular, is fundamentally anti-metaphysical—he aims to use the tools of mathematical logic to dissolve rather solve traditional philosophical problems—and it is precisely this point that is missed by his logically-minded contemporaries such as Hempel and Quine.	metaphysical naturalism;quine (computing)	Michael Friedman	2008	Synthese	10.1007/s11229-008-9356-0	philosophy of science;western philosophy;applied mathematics;philosophy;epistemology;mathematics;philosophy of computer science	AI	-11.401128244266141	4.189145170782989	62078
57d94317e7b8c384a5576457c4e00ccb650373f1	puc-logic embedding of lewis' deontic logics		We present a embedding of Lewis Deontic logics in PUC-Logic. We achieve this by representing the vary basic $boldsymbol{CO}$ logic and showing its relative completeness.	personal and ubiquitous computing;temporal logic	Ricardo Queiroz de Araujo Fernandes;Edward Hermann Haeusler;Luiz Carlos Pereira	2014	CoRR		discrete mathematics;mathematics;algorithm	NLP	-12.890024661345139	12.402683513787697	62114
d32895780c0c4799000cbc2061b66be218823b85	type theory as a foundation for computer science	type theory	We discuss some of the boons as well as shortcomings of constructive type theory as a foundation for computer science. Certain new concepts are offered for tailoring these theories to this task including an idea for collecting objects into subtypes and a proposal for using logic variables and treating them as part of the definition of the logic. 1 I n t r o d u c t i o n It would be good if there were a formal logical theory that expressed the basic concepts of computer science well. It has been a goal of logicians to find such a foundational theory for mathematics, and many people are happy with Set Theory in that role. But for computer science the formal theory should offer a programming notation as well since computing involves programming in a central way; and a formal notation is needed for that. If the programming notation were independent of the foundational theory, then we could not directly use the theoretical insights in programming and vise versa. Once we are committed to a formalized theory for computing, we need one that can express arguments about algorithms and systems actually built, that is, it should be a programming logic as well as a foundational theory. These two requirements place a large burden on such a theory. Simply adding a programming notation to Set Theory for example results in a costly and cumbersome solution. Constructive type theories have arisen as a more elegant and lean approach. In this article we examine some of their advantages and deficiencies. *This research supported by NSF grant CCR86-16552 and ONR grant N00014-88K-0490.	algorithm;computer science;ibm notes;intuitionistic type theory;logic programming;requirement;set theory	Robert L. Constable	1991		10.1007/3-540-54415-1_48	applied mathematics;intuitionistic type theory;functional programming;logic programming;type theory;computer science	Theory	-11.022956509668212	7.900610442304176	62203
8583a80fbe5d55b7f4b37ea9386ef53bf12f9cfe	on cut elimination in the presence of perice rule	cut elimination		rule 90	Lew Gordeev	1987	Arch. Math. Log.	10.1007/BF02017499	mathematics	Theory	-12.495517731831999	12.366376191911888	62229
01fff33fea06264326829c73fe771884c323428b	regular search spaces and constructive negation	logical framework;proof theory;search space;theoretical analysis;logic programs	The aim of this paper is to show the fruitfulness and fecundity of the authors' proof-theoretic analysis of logic programming (both for definite and normal programs). It is based on a simple logical framework that goes under the name of regular search spaces. The challenge faced here is to give a treatment in proof-theoretic terms of the issue of negation, which has been one of the toughest problems that has plagued logic programming from its very beginning. While negation-as-failure (NF) has been overwhelmingly the more widespread answer, its intrinsic limitations have made it a rather unsatisfactory solution. In the present paper it is first contended that the notion of regularity offers a better understanding of the traditional theory of NF, and second a firm yet very simple and natural basis for a form of constructive negation, in the sense of Chan, Stuckey and Harland. A version of constructive negation is presented, based on the notion of regular splitting, a transformation technique where the failure axiom(s) of a predicate occurring negatively in a program are split into new clauses according to a covering of the underlying signature.	list of code lyoko episodes;logic programming;logical framework;matrix splitting;negation as failure;spaces;theory	Alberto Momigliano;Mario Ornaghi	1997	J. Log. Comput.	10.1093/logcom/7.3.367	discrete mathematics;logical framework;epistemology;computer science;negation as failure;artificial intelligence;proof theory;mathematics;programming language;algorithm	Theory	-8.781021960366807	9.019769415540095	62354
562bcd6b599a4add97f7dc2a4dddd83f562702f7	a finitary-language semantics for propositional linear temporal logic	linear temporal logic		linear temporal logic	Ulrich Ultes-Nitsche	1995				Theory	-13.558676417474873	13.12602602370778	62547
169ae307c9a0d35715fe8804912df506be2f43a9	algebra and coalgebra in computer science, third international conference, calco 2009, udine, italy, september 7-10, 2009. proceedings	discrete mathematics;formal language		computer science		2009		10.1007/978-3-642-03741-2	formal system;filtered algebra;discrete mathematics;regular language;object language;pure mathematics;mathematics;algebra	Robotics	-11.745279292725279	11.699604194252364	62825
4594689fe0d85dcecd1a185ba26890a5cb48e5e6	on labelling statements in multi-labelling argumentation		In computational models of argumentation, argument justification has attracted more attention than statement justification, and significant sensitivity losses are identifiable when dealing with the justification of statements by otherwise appealing formalisms. This paper reappraises statement justification as a formalism-independent component in argument-based reasoning. We introduce a novel general model of argument-based reasoning based on multiple stages of labellings, the last one being devoted to statement justification, identify two alternative paths from argument acceptance to statement justification, and compare their expressiveness. We then show that this model encompasses several prominent literature proposals as special cases, thereby enabling a systematic comparison of existing approaches to statement justification, evidencing their merits and limits. Finally we illustrate our model by specifying a generic ignorance-aware statement justification and showing how it can be seamlessly integrated into different formalisms.	anisotropic filtering;argumentation framework;case-based reasoning;computational model;defeasible logic;for loop;graph labeling;rationality;semantics (computer science)	Pietro Baroni;Guido Governatori;Régis Riveret	2016		10.3233/978-1-61499-672-9-489	computer science;artificial intelligence;labelling;argumentation theory;machine learning	AI	-15.73553076338838	5.810721659216533	62837
15a636a6593347c099dcd3d5d4b499dc3e4e7f33	a high strongly noncappable degree		"""An r.e. degree a:/= 0,01 is called strongly noncappable if it has no inf with any incomparable r.e. degree. We show the existence of a high strongly noncappable degree. O. Introduction. The early study of R revealed certain ('nice>' properties. For exa1nple 1 the Sacks Splitting Theore1n [Sa63] showed that any nonrecursive r.e. degree is the supremum of t'vo incomparable r.e. degrees. The Sacks Density Theorem [Sa64J showed that R is a dense partial order. These and other results led Shoenfield [Sh65] to conjecture that if a E R satisfies a diagram D(x') in the language f, = {0,1,S,u} of upper semilattices and D0 (x,y) is a consistent extension of D(x'), then there is bER such that a and b satisfy D0 (X, y). A consequence of this would be that no two incomparable r.e. degrees have an infimum (cap to some lower r.e. degree). This was refuted independently by Lachlan [La66] and Yates (Ya66) through the construction of a minimal pair (capping to 0). Yates [ibid.] also showed that some r.e. degrees are noncappable (not half of a minimal pair).' Soare [So80] defined the notion of a strongly noncappable (s.n.c.) degree (an r.e. degree -=f. O, O' that does not have an infimum with any incomparable r.e. degree). Am hos-Spies [AS84] proved the existence of s.n.c. degrees and various stronger results, but all his such degrees were constructed by finite injury arguments and thus are low. The 0 -priority argument in this paper establishes the existence of a strongly noncappable degree, which is high. This is a step in the characterization of the range of the jump operator on certain classes of r.e. degrees. Which degrees actually are the jumps of s.n.c. degrees still remains an open question. A recent related result by Cooper [Cota[ (and independently by Shore [Shtaj) shows that the range of the jump operator on the set of cappable degrees is not the set of all degrees r.e. in and above (REA in) 0• Our notation is fairly standard and generally follows Soare's forthcoming book """"Recursively Enumerable Sets and Degrees"""" [Sota]. We consider sets and functions on the natural numbers w = { O, 1, 2, 3, ... }. Usually lower-case Latin letters a, b, c, ... denote natural numbersj f, g, h, ... total functions on w; Greek letters q>, W, ... , cp, 'lj;, ... partial functions on w; and upper-case Latin letters A, B, C, ... subsets of w. For a partial function cp, cp(x) 1 denotes that x E domcp, otherwise we write cp(x) t. We identify a set A with its characteristic function XA· f ~ x denotes f restricted to arguments less than x, likewise for sets. We let A C B denote that A ~ B but A of B; and A ~* B that A B is finite. A U B will denote the disjoint union. For each n E w, we let { x1, x2, ... , Xn} denote the coded n-tuple (where Xi::; {x1,x2, ... ,xn) for each i); and (x)i the ith projection function, mapping {x1,x2, ... ,xn) to Xi. Ai•I = {y I (y,k,E)A} denotes the kth """"row"""" of A. This paper is part of the author's thesis. He wishes to thank his thesis advisor, R.I. Soare, as well as T.A. Slaman for many helpful suggestions and comments. In a partial order, x I y denotes that x and y are incomparable. The logical connectives ((and"""" and """"or') will be denoted by A and V, respectively. We allow as an additional quantifier (in the meta.language) (3ocix) to denote that the set of such xis infinite. {e} (or \Oe) and W, ({e}X (or if>~) and W,x) denote the eth partial recursive function and its domain (with oracle X) under some fixed standard numbering. :::;:T denotes Turing reducibility, and =T the induced equivalence relation. The use of a computation 4); (x) (denoted by u(X; e, x)) is 1 plus the largest n u1n her from oracle X used in the co1nputation if if?; (x) !; and 0 otherwise (likewise for u(X; e, x, s )) the use at stage s). Sets) functionals, and parameters are often vie\ved as being in a state of for1nation, so, \vhen describing a construction, we may write A (instead of the full Lachlan notation As, A[s), or Ads] for the value at the end of stage s or at the end of substage t of stage s). In the context of trees, p, er, r, ... denote finite strings; la! the length of a; a""""'r the concatenation of O' and r; (a) the one-element string consisting of a; a ~ r (a c r) that a is a (proper) initial segment of Tj a <L r that for some i, er ~ i = r ~ i and a(i) <A r(i) (where <A is a given order on A and T ~ A <w); and"""" :S r (D"""" < r) that O"""" <L r or er<:; r (D"""" C r). The set IT] of infinite paths through a tree T <:; A <w is {p E Aw I (Vn)[p ~ n ET]}. We use the following conventions: Upper-case letters at the beginning of the alphabet are used for sets A, B, O,, .. and functionals r, ll.1 .,. constructed by us; those at the end of the alphabet are used for sets U, V, W, ... and functionals if?, W, ... constructed by the opponent. A functional 4) (W, e, ... ) is viewed as an r.e. set of triples (x,y,D"""") (denoting il> (:i:) L= y), and the corresponding Greek lower.case letter \0 (if!,{), ... ) denotes a modified use function for iI> (w, 0, ... ), namely, \O(:i:) = l<J""""l-1 (so changing X at \O(:i:) will change q>X ( x)). Parameters, once assigned a value, retain this value until reassigned. Strategies are identified with strings on the tree corresponding to their guess about the outcomes of higher-priority strategies and are viewed as finite automata described in flow charts. In these flow charts, states are denoted by circles, instructions to be executed by rectangles, and decisions to be made by diamonds. To initialize a strategy means to put it in to state init and to set its restraint to zero. A strategy is initialized at stage 0 and whenever specified later. At a stage when a strategy is allowed to act, it will proceed to the next state along the arrows and according to whether the statements in the diamonds are true (y) or false (n). Along the way, it will execute the instructions. Half~circles denote points in the diagram where a strategy starts from through the action of another strategy. Sometimes, parts of a flow chart are shared1 the arrows are then labeled i and ii. The strategy control decides which strategy can act when. For some further background on 0 ·priority arguments, we refer to Soare ([Sota] or [So85]) 1. The Theorem. Soare [So80] defined: DEFINITION: An r.e. degree a of O, 0 is strongly noncappable (s.n.c.) if a does not have an infimum with any incomparable r.e. degree v, i.e., in the r.e. degrees, (1) (Vv)(Vu)[a Iv Au :Sa, v-> (3b)[b :Sa, v Ab'/, u]]."""	am broadcasting;automata theory;characteristic function (convex analysis);chart;computable function;computation;concatenation;degree (graph theory);diagram;emoticon;finite-state machine;flowchart;frequency capping;init;linear algebra;logical connective;quantifier (logic);recursion (computer science);recursively enumerable set;shroud of the avatar:;strongly regular graph;turing completeness;turing degree;turing reduction;μ-recursive function	Steffen Lempp	1988	J. Symb. Log.		discrete mathematics;mathematics	Theory	-4.97120641305248	13.940722958483748	63182
9bee9d3518fee915870b9f045b8f7c191ad1e571	a characterization of finite fd-acyclicity		Abstract   Database schemes with functional dependencies are considered. A satisfying state of a database scheme consists of relations whose representative instance satisfies the functional dependencies. All states are assumed to be finite. A database scheme is defined to be fd-acyclic if all its pairwise consistent and satisfying states are also join consistent. The fd-acyclic database schemes are characterized, and it is shown that testing fd-acyclicity can be done in polynomial time. An interesting special case is when the relation schemes are closed under the functional dependencies of the database scheme. In this case, a database scheme is fd-acyclic if and only if it is acyclic (i.e., its corresponding hypergraph is acyclic).		Yehoshua Sagiv;Oded Shmueli	1989	J. Comput. Syst. Sci.	10.1016/0022-0000(89)90008-1	combinatorics;discrete mathematics;dependency theory;acyclic dependencies principle;theoretical computer science;mathematics;functional dependency	Theory	-6.444097802033751	17.954308889738787	63186
35e4ba8b77caf5fe015f1e32771ea6105cfa89d8	a characterization of passing compatibility for parameterized specifications	parameterized specification	bstract. Semantics of parameterized specifications and parameter passing may be expressed, at the model level, by means of free constructions and, at the specification level, by means of pushouts. Passing compatibility establishes the equivalence of the two semantics. In this paper, we prove that passing compatibility is almost equivalent to persistency. That is, it is proved that, except for a trivial non-interesting case (‘trivial inconsistency’), passing compatibility is equivalent to persistency. This is done both for standard and parameterized parameter passing. Moreover, a stronger form of the Extension Ltmvna is obtained.	turing completeness	Fernando Orejas	1987	Theor. Comput. Sci.	10.1016/0304-3975(87)90054-5	discrete mathematics;theoretical computer science;mathematics;algorithm	Logic	-11.045423297172036	17.638467584986937	63221
1ebd789ed39ebdec7d0e3202e58876a80e8892ec	intersection types and domain operators	fixed point operators;lambda calculus;punto fijo;interseccion;fixed point;filter;point fixe;informatique theorique;structure algebrique;lambda theories;filtre;lambda calculo;06bxx;algebraic structure;08axx;models of lambda calculus;intersection;lambda calcul;filtro;fix point;intersection types;computer theory;informatica teorica	We use intersection types as a tool for obtaining λ-models. Relying on the notion of easy intersection type theory we successfully build aλ-model in which the interpretation of an arbitrary simple easy term is any filter which can be described by a continuous predicate. This allows us to prove two results. The first gives a proof of consistency of the λory where theλ-term(λx.xx)(λx.xx) is forced to behave as the join operator. This result has interesting consequences on the algebraic structure of the lattice of λ-theories. The second result is that for any simple easy term there is a λ-model where the interpretation of the term is theminimalfixed point operator.	linear algebra;point of sale;symbolically isolated linguistically variable intelligence algorithms;type theory	Fabio Alessi;Mariangiola Dezani-Ciancaglini;Stefania Lusin	2004	Theor. Comput. Sci.	10.1016/j.tcs.2004.01.022	intersection;combinatorics;discrete mathematics;filter;algebraic structure;intersection;lambda calculus;mathematics;fixed point;programming language;algorithm;algebra	PL	-13.374587044137364	17.392540539015272	63236
5f16e543ef89dd23a08531ad55874173cc34f9ba	sometimes updates are circumscription	computability theory;first order;knowledge base	Model-based revision of knowledge bases ex­ pressed as first-order theories was shown in [Winslett 88b] to be useful as a means of de­ scribing and reasoning about the effects of ac­ tions. This paper shows that model-based the­ ory revision is actually expressible as a form of circumscription. This shows that in cer­ tain applications, the cumbersome conceptu­ ally machinery of circumscription can be re­ placed by the intuitively simpler ideas of model-based theory revision. Where theory revision techniques are insufficient to capture the se­ mantics of change in an application, circum­ scription will offer a more flexible environment. In addition, future advances in computing cir­ cumscription can be mapped to improvements in computing theory revisions, and vice versa.	circumscription (logic);first-order predicate;marianne winslett;theory	Marianne Winslett	1989			knowledge base;computability theory;computer science;artificial intelligence;first-order logic;mathematics;circumscription;algorithm	AI	-16.826698092012403	6.56690718137487	63260
0d5edb0a758bcecd5a191cfba611ce1216d8f6ef	discrete dualities for n-potent mtl-algebras and 2-potent bl-algebras	mtl algebra;bl algebra;n potent law;discrete duality;non classical logics;residuated lattice	Discrete dualities are developed for n-potent MTL–algebras and for 2-potent BL–algebras. That is, classes of frames, or relational systems, are defined that serve as dual counterparts to these classes of algebras. The frames defined here are extensions of the frames that were developed for MTL– algebras in [25], [26]; the additional frame conditions required are given here and also the proofs that discrete dualities hold with respect to such frames. The duality also provides an embedding from an n-potent MTL–algebra, or 2-potent BL–algebra, into the complex algebra of its canonical frame, which is a complete algebra in the lattice sense.	bl (logic);framing (world wide web);mv-algebra	Ivo Düntsch;Ewa Orlowska;Clint J. van Alten	2016	Fuzzy Sets and Systems	10.1016/j.fss.2014.09.014	discrete mathematics;topology;mathematics;algebra	Logic	-5.041597914353532	15.560457021644517	63261
6f02137fbe7158ba65dd3be21918e1d1eb1f81dd	coherence and the axioms of confirmation				Abner Shimony	1955	J. Symb. Log.		discrete mathematics;axiom;mathematics;coherence (physics)	Logic	-12.376564645896377	11.847078450445506	63379
3ea648c1b9c7f4c0028ce35c0af20117f8756e5a	a clone-based representation of the fuzzy tolerance or equivalence relations a strict order relation is compatible with	science general;lattices;fuzzy relation;open question;clone relation;tolerance relation;equivalence relation;algebra;compatibility;sets;order relation	We show that although there exists no non-trivial (fuzzy) tolerance relation a partial order relation is compatible with (in the sense of Blohlvek), the situation is quite different when considering its strict part. More specifically, we provide a representation of all fuzzy tolerance (and, in particular, all fuzzy equivalence) relations a strict order relation is compatible with. To that end, we introduce the notion of clone relation associated with a partially ordered set and discuss its basic properties. The mentioned representation is intimately connected with this clone relation.	fuzzy set;turing completeness	Bernard De Baets;Lemnaouar Zedam;Azzedine Kheniche	2016	Fuzzy Sets and Systems	10.1016/j.fss.2015.09.015	asymmetric relation;quotient algebra;covering relation;discrete mathematics;adequate equivalence relation;topology;inverse relation;congruence relation;lattice;binary relation;mathematics;transitive relation;equivalence relation;compatibility;symmetric relation;algebra	NLP	-5.570674410013581	11.459244706028466	63391
88dfe37418d513cd92946119a9b877b6968802e6	a generalized approach to formal languages	formal language	A generalization of ranked alphabets, many-sorted alphabets, is studied. The concepts of finite automaton, regular, recognizable, equational, and context free languages are generalized to sets over these new alphabets. It is shown that the derivation trees of a context free set are always characterized by some recognizable set over a related many-sorted alphabet. Previous theory is drawn as a special case of these results and new results are advanced. A number of suggestions about language theory are made.	formal language	T. S. E. Maibaum	1974	J. Comput. Syst. Sci.	10.1016/S0022-0000(74)80031-0	combinatorics;formal language;discrete mathematics;computer science;mathematics;algorithm	DB	-5.052482351754152	17.702993428778907	63408
3276eacfe0f52d97f5c00493bc41ef0bfd531313	on the complexity of the maximum satisfiability problem for horn formulas	satisfiability	or equivalently, as I-Iom formulas. As many authors have pointed out (see, e.g., [S]), Horn formulas naturally arise in logic databases; actually, they are used to formulate queries and to express integrity constraints. As the size of databases and knowledge bases grows, it becomes more and more crucial to check their consistency and, if not, to determine the maximum number of relations that can be satisfied. In the domain of propositional calculus, this problem corresponds to the maximum satisfiability problem for Morn formulas. In the present article, we prove the IW-completeness of this problem even under strong restrictions on the I-Iom formulas. On the we show that there exists a polynomial-time algorithm for the corresponding Maximum Satisfiability Problem.	algorithm;boolean satisfiability problem;data integrity;database;fuzzy logic;horn clause;iw engine;knowledge base;maximum satisfiability problem;np-completeness;polynomial;propositional calculus;time complexity	Brigitte Jaumard;Bruno Simeone	1987	Inf. Process. Lett.	10.1016/0020-0190(87)90028-7	combinatorics;discrete mathematics;computer science;maximum satisfiability problem;mathematics;algorithm;satisfiability	AI	-16.812306602536513	11.764362213615465	63509
507462e2b8908c0934f9a0585ddb0ba6127a9bb4	characterizing the set of extensions of a nonmonotonic rule system with levels				Douglas A. Cenzer;Jeffrey B. Remmel;Amy Vanderbilt	2000			machine learning;artificial intelligence;computer science	AI	-13.197916574391861	11.384473374906065	63613
081087b4fd27045720c267f70bc6f375d9a8df2a	combining qualitative model-based diagnosis and observation within fault-tolerant systems	fault dash;dynamic systems;automata;fault tolerant system;qualitative modelling;observation;tolerance;qualitative modeling;diagnosis	The increasing importance of faultdtolerant technical processes leads to new modeldbased approaches. In the approach proposed here, the effects of faults are decreased by additional control commands supplied by a faultdtolerance algorithm. This algorithm combines qualitative modeldbased diagnosis and observation. The main idea is to reach the nondfaulty output and nondfaulty state as accurately as possible even in the presence of faults. The signals and faults are described qualitatively by discrete values, and their relations are formalized by an automaton. This automaton is used in diagnosis to identify faults, in observation to identify the present state, and in simulation to identify the correct output and state. A correction mechanism determines an additional control command which would have led to correct behaviour at the current time point and applies it to the process at the following time point. The approach is illustrated by an example of chemical process engineering.		Frank Schiller;Jochen Schröder	1999	AI Commun.		fault tolerance;real-time computing;simulation;computer science;artificial intelligence;dynamical system;automaton;observation	AI	-5.080550626346874	7.3146255735711065	63658
a7f42e113fa69e6c71ffa053831952da866dccd3	from bohm's theorem to observational equivalences: an informal account	observational equivalence	Abstract   There are essentially two ways of looking at the computational behaviours of λ-terms. One consists in putting the term within a context (possibly of λ-calculus extensions) and observing some properties (typically termination). The other consists in reducing the term until some meaningful information is obtained: this naturally leads to a tree representation of the information implicitly contained in the original term. The paper is an informal overview of the role played by Bohm's Theorem in these observations of terms.		Mariangiola Dezani-Ciancaglini;Elio Giovannetti	2001	Electr. Notes Theor. Comput. Sci.	10.1016/S1571-0661(04)00167-7	discrete mathematics;computer science;pure mathematics;mathematics	ECom	-8.978809425473212	12.302216540037675	63706
6f919bed356f7152f47b5d83ad91c1094513326d	cut-free sequent systems for temporal logic	linear time temporal logic;temporal logic;sequent calculus;computation tree logic;linear time	Currently known sequent systems for temporal logics such as linear time temporal logic and computation tree logic either rely on a cut rule, an invariant rule, or an infinitary rule. The first and second violate the subformula property and the third has infinitely many premises. We present finitary cut-free invariant-free weakeningfree and contraction-free sequent systems for both logics mentioned. In the case of linear time all rules are invertible. The systems are based on annotating fixpoint formulas with a history, an approach which has also been used in game-theoretic characterisations of these logics.	computation tree logic;cut rule;fixed point (mathematics);game theory;linear temporal logic;time complexity;well-formed formula	Kai Brünnler;Martin Lange	2008	J. Log. Algebr. Program.	10.1016/j.jlap.2008.02.004	t-norm fuzzy logics;time complexity;modal μ-calculus;linear logic;discrete mathematics;linear temporal logic;description logic;higher-order logic;principle of bivalence;temporal logic;cut-elimination theorem;geometry of interaction;many-valued logic;interval temporal logic;computation tree logic;computer science;intermediate logic;mathematics;proof calculus;noncommutative logic;sequent;sequent calculus;natural deduction;substructural logic;algorithm;rule of inference;temporal logic of actions	Logic	-12.190956655012593	14.674402968729577	63792
834469e16cba3eb800557bb323b54bf2806487a4	computation paths logic: an expressive, yet elementary, process logic (abridged version)	systeme commande;sistema control;logique propositionnelle;control system;propositional logic;informatique theorique;logica proposicional;computer theory;informatica teorica	A new process logic is defined, called computation paths logic (CPL), which treats formulas and programs essentially alike. CPL is a pathwise extension of PDL, following the basic process logic of Harel, Kozen and Parikh, and is close in spirit to the logic R of Harel and Peleg. It enjoys most of the advantages of previous process logics, yet is decidable in elementary time. We also offer extensions for modeling asynchronous/synchronous concurrency and infinite computations. All extensions are also shown to be decidable in elementary time.	computation	David Harel;Eli Singerman	1997		10.1007/3-540-63165-8_197	predicate logic;dynamic logic;zeroth-order logic;decidability;classical logic;linear temporal logic;description logic;higher-order logic;many-valued logic;intuitionistic logic;intermediate logic;control system;artificial intelligence;computational logic;mathematics;propositional calculus;logic;substructural logic;multimodal logic;second-order logic;algorithm;philosophy of logic;autoepistemic logic	Logic	-13.29007004150336	16.405387588643638	64100
ce6a9e022e2cb3beaed52d118ccd7d0ac3733974	semantic analysis of non-reflexive logics		Non-reflexive logics are systems of logic developed to deal with non-individuals, i.e. particular entities whose status as individuals is denied (quantum particles being the main alleged example of such items). That task is performed by restrictions on the relation of identity at the syntactical level. Trouble appears when it comes to semantics. If the semantic for such logics is provided inside a classical metalanguage, unrestricted identity is re-introduced by this very framework. If, on the other hand, it is introduced by a non-reflexive framework, then it is the semantical understanding of that framework that is questioned. That situation is a threat for our making sense of something having no identity, and would render incoherent our attempts of a quantum ontology of non-individuals. We examine those questions, and argue that there is a reasonable formal semantics for non-reflexive logics with interesting features. Also, from an intuitive level, we argue that no informal semantics should be seen as posing obstacles to our understanding of non-individuality. We suggest that issues concerning our representational apparatus rely more heavily on metaphysical assumptions then the foes of non-individuality are willing to concede.	entity;formal system;interpretations of quantum mechanics;semantics (computer science);unrestricted grammar	Jonas R. Becker Arenhart	2014	Logic Journal of the IGPL	10.1093/jigpal/jzt050	t-norm fuzzy logics;semantic equivalence	Logic	-13.103430356949131	4.975189137385301	64109
0914a3642975fc315699d596e4f443744251d6f9	reasoning with power defaults	default reasoning;modelizacion;monotone operator;domain theory;complexite;hierarchy;probleme np complet;powerdomains;03d55;complejidad;power default reasoning;semantics;logique propositionnelle;intelligence artificielle;complexity;partial information;semantica;semantique;logica defecto;higher order;modelisation;03b05;nonmonotonic reasoning;propositional logic;dicotomia;informatique theorique;dichotomie;jerarquia;non monotonic reasoning;raisonnement defaut puissance;artificial intelligence;problema np completo;dichotomy;logique defaut;inteligencia artificial;logica proposicional;default logic;hierarchie;modeling;np complete problem;computer theory;informatica teorica	This paper introduces power default reasoning (PDR), a framework for nonmonotonic reasoning based on the domain-theoretic idea of modeling default rules with partial-information in a higher-order setting. PDR lifts a non-monotonic operator at the base (syntactic) level to a well-behaved, almost monotonic operator in the higher-order space of the Smyth power-domain – effectively a space of sets of models. Working in the model space allows us to prove the dichotomy theorem and the extension splitting theorem, leading to a more well-behaved logic and (modulo the usual complexity conjectures) a less complex logic than standard default logic. Specifically, we prove that skeptical normal default inference is a problem complete for co-NP(3) in the Boolean hierarchy for strict propositional logic and NP(4)-complete in general. These results (by changing the underlying semantics) contrasts favorably with similar results of Gottlob [9], who proves that standard skeptical default reasoning is Π2 -complete. Furthermore, we show that the skeptical non-monotonic consequence relation, defined using our domain-theoretic semantics, obey all of the laws for preferential consequence relations defined by Kraus, Lehmann, and Magidor. In particular, we get the property of being able to reason by cases, and the so-called law of cautious monotony. Both of these laws fail for the standard propositional default logic of Reiter [22] , but hold in PDR as a consequence of the dichotomy theorem and the extension splitting theorem.	boolean hierarchy;default logic;design review (u.s. government);domain theory;modulo operation;non-monotonic logic;propositional calculus	Guo-Qiang Zhang;William C. Rounds	2004	Theor. Comput. Sci.	10.1016/j.tcs.2004.04.008	dichotomy;combinatorics;computer science;artificial intelligence;non-monotonic logic;mathematics;semantics;default logic;second-order logic;algorithm	AI	-10.129141324017125	14.918854406699818	64229
38862b02dcae1780ee1750c2398131b97f1062dd	raising a hardness result	quantified boolean formula;artificial intelligent;polynomial hierarchy;computational complexity;logic in computer science	This article presents a technique for proving problems hard for classes of the polynomial hierarchy or for PSPACE. The rationale of this technique is that some problem restrictions are able to simulate existential or universal quantifiers. If this is the case, reductions from Quantified Boolean Formulae (QBF) to these restrictions can be transformed into reductions from QBFs having one more quantifier in the front. This means that a proof of hardness of a problem at level n in the polynomial hierarchy can be split into n separate proofs, which may be simpler than a proof directly showing a reduction from a class of QBFs to the considered problem.	default logic;design rationale;existential quantification;level of detail;pspace;polynomial hierarchy;quantifier (logic);strips;simulation;true quantified boolean formula;universal quantification	Paolo Liberatore	2007	CoRR		true quantified boolean formula;combinatorics;discrete mathematics;computer science;artificial intelligence;karp–lipton theorem;mathematics;computational complexity theory;algorithm;pspace-complete	Theory	-9.923529311487195	15.903876529268485	64304
7fcab616ebe83237f782f045de5fa8ef98220499	on the complexity of model checking for propositional default logics: new results and tractable cases	default reasoning;model checking;propositional logic;polynomial algorithm;default logic	We analyse the complexity of standard and weak model checking for propositional default logic; in particular, we solve the open problem of complexity in case of normal default theories and introduce a new ample class of default theories with a tractable model checking problem.	cobham's thesis;default logic;model checking	Robert Baumgartner;Georg Gottlob	1999			zeroth-order logic;model checking;combinatorics;discrete mathematics;computer science;artificial intelligence;mathematics;propositional variable;well-formed formula;propositional calculus;default logic;algorithm	AI	-12.52922029988951	14.246313042893055	64347
30e6859951e5fc5f8acf2067455cd26511db1262	natural deduction for intuitionistic non-communicative linear logic	preuve programme;program proof;canonical form;non commutative;logical programming;programmation logique;intuitionistic logic;informatique theorique;natural deduction;logique intuitionniste;prueba programa;analisis semantico;analyse semantique;programacion logica;linear logic;logica intuicionista;semantic analysis;computer theory;informatica teorica	We present a system of natural deduction and associated term calculus for intuitionistic non-commutative linear logic (INCLL) as a conservative extension of intuitionistic linear logic. We prove subject reduction and the existence of canonical forms in the implicational fragment. We also illustrate by means of an example how the proof term calculus can be employed in the setting of logical frameworks to capture useful representation invariants.	intuitionistic logic;linear logic;natural deduction;subject reduction	Jeff Polakow;Frank Pfenning	1999		10.1007/3-540-48959-2_21	canonical form;linear logic;discrete mathematics;higher-order logic;paraconsistent logic;many-valued logic;intuitionistic logic;computer science;intermediate logic;mathematics;proof calculus;minimal logic;curry–howard correspondence;programming language;sequent calculus;truth value;natural deduction;type theory;algorithm	Logic	-13.48098359552128	16.339219604073907	64363
4e655695a4d4ae46b82bae1c637179cf4d8ec768	kripke's axiomatization of s2			axiomatic system	Charles F. Kielkopf	1972	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093890625		Logic	-12.584935518296648	12.219461234835709	64384
3cd2a1882bb1dfd01b25758405f9cf9f6449c030	transfinite reductions in orthogonal term rewriting systems	theorie reduction;rewriting system;relation equivalence;logique combinatoire;forma normal;sistema reescritura;term rewrite system;parallel computation;combinatory logic;reduction theory;equivalence relation;calculo paralelo;logica combinatoria;rewrite systems;normal form;forme normale;term rewriting;relacion equivalencia;calcul parallele;systeme reecriture	Strongly convergent reduction is the fundamental notion of reduction in infinitary orthogonal term rewriting systems (OTRSs). For these we prove the Transfinite Parallel Moves Lemma and the Compressing Lemma. Strongness is necessary as shown by counterexamples. Normal forms, ,which we allow to be infinite, are unique, in contrast to co-normal forms. Strongly converging fair reductions result in normal forms. In general OTRSs the infinite Church-Rosser Property fails for strongly converging reductions. However for B6hm reduction (as in Lambda Calculus, subterms without head normal forms may be replaced by _L) the infinite Church-Rosser property does hold. The infinite Church-Rosser Property for non-unifiable OTRSs follows, The top-terminating OTRSs of Dershowitz c.s. are examples of nonunifiable OTRSs. 1985 Mathematics Subject Classification: 68Q5	church–rosser theorem;database normalization;lambda calculus;mathematics subject classification;rewriting;shapley–folkman lemma;transfinite induction	Richard Kennaway;Jan Willem Klop;M. Ronan Sleep;Fer-Jan de Vries	1995	Inf. Comput.	10.1006/inco.1995.1075	discrete mathematics;combinatory logic;computer science;transfinite number;mathematics;equivalence relation;well-founded relation;programming language;algorithm;algebra	PL	-10.491865198629784	17.616584584618405	64512
0179de32030e5c6c76f77f19facb5c2a57956009	quasi uniformities: reconciling domains with metric spaces	metric space;fixed point theorem;denotational semantic	We show that quasi-metric or quasi-uniform spaces provide, inter alia, a common generalization of cpo's and metric spaces as used in denotational semantics. To accommodate the examples suggested by computer science, a reworking of basic notions involving limits and completeness is found to be necessary. Specific results include general fixed point theorem and a sequential completion construction.	computer science;denotational semantics;fixed point (mathematics);fixed-point theorem;quasi-identifier;spaces	Michael B. Smyth	1987		10.1007/3-540-19020-1_12	convex metric space;mathematical analysis;discrete mathematics;injective metric space;topology;fubini–study metric;metric differential;product metric;metric;fisher information metric;metric space;intrinsic metric;domain theory;mathematics;metric map	Theory	-8.707875166316034	13.111502984495619	65089
190fb6df2086fc000f24f03917d3784461a3dab5	intelligent cai course in the first-order logic	learning model;theorem proving;natural deduction;first order logic	Our theorem proving system named TTP ( which is short for Teaching Theorem Proving ) can construct the natural deduction proofs of the first-order logic formulas with quantifiers. It is written in CLISP. It has 4 learning models.Students can use the system to do their logic homework step by step and learn the skills of proving logic theorems. If they don't know how to prove the theorems, they can ask for hints. In our university about 300 students used the system to learn logic and do homework during 3 years, they did 2000 problems in logic.	automated theorem proving;clisp;first-order logic;first-order predicate;natural deduction;theorem proving system;trusted third party	Li Dafa	1990		10.1007/BFb0020872	dynamic logic;discrete mathematics;description logic;higher-order logic;paraconsistent logic;horn clause;deduction theorem;first-order logic;computational logic;mathematics;minimal logic;automated theorem proving;logic;multimodal logic;second-order logic;algorithm;rule of inference;gödel's completeness theorem	Logic	-14.304154043310744	12.091131820716065	65289
4efb31f9c04c7b07f55b8fd20de4eaabc186b1fb	every recursive boolean algebra is isomorphic to one with incomplete atoms	boolean algebra	Downey, R., Every recursive boolean algebra is isomorphic to one with incomplete atoms, Annals of Pure and Applied Logic 60 (1993) 193-206. The theorem of the title is proven, solving an old question of Remmel. The method of proof uses an algebraic technique of Remmel-Vaught combined with a complex tree of strategies argument where the true path is needed to figure out the final isomorphism.	boolean algebra;linear algebra;recursion;recursive language	Rodney G. Downey	1993	Ann. Pure Appl. Logic	10.1016/0168-0072(93)90075-O	filtered algebra;boolean algebra;combinatorics;mathematical analysis;discrete mathematics;boolean algebra;boolean domain;topology;boolean expression;product term;stone's representation theorem for boolean algebras;boolean algebras canonically defined;relation algebra;mathematics;complete boolean algebra;field of sets;allen's interval algebra;algorithm;two-element boolean algebra;free boolean algebra;parity function;algebra	Logic	-8.846106022151206	11.981522142480706	65326
b02a92fcb78355d55b9527f8010f4888a30cb5d1	quantified modal logic with rigid terms	modal logic		modal logic	Giovanna Corsi	1988	Math. Log. Q.	10.1002/malq.19880340308	modal logic;normal modal logic;mathematics	Logic	-12.9017071254291	11.936699783548296	65422
feb23b82a5ebcb1971409a00b537acd32a3084ba	providing a proof-theoretical basis for explanation: a case study on uml and alcqi reasoning		In this article we argue in favour of Natural Deduction Systems as a basis for formal proof explanations. We illustrate our choice presenting a Natural Deduction for ALCQI and use it to help explain UML reasoning.	case-based reasoning;formal proof;natural deduction;natural language;norsk data;sequent calculus;social inequality;theory;unified modeling language	Alexandre Rademaker;Edward Hermann Haeusler	2010	J. UCS	10.3217/jucs-016-20-3016	algorithm	AI	-13.384764900724264	9.687132448864585	65781
d72e2425d232d9a4253be9518567d82bb185100f	reapproaching ramsey: conditionals and iterated belief change in the spirit of agm	semantic model;ramsey test;iterated revision;belief revision;preservation;qualitative modeling;impossibility theorem;belief change;conditionals	According to the Ramsey Test, conditionals reflect changes of beliefs: α > β is accepted in a belief state iff β is accepted in the minimal revision of it that is necessary to accommodate α. Since Gärdenfors’s seminal paper of 1986, a series of impossibility theorems (“triviality theorems”) has seemed to show that the Ramsey test is not a viable analysis of conditionals if it is combined with AGMtype belief revision models. I argue that it is possible to endorse that Ramsey test for conditionals while staying true to the spirit of AGM. A main focus lies on AGM’s condition of Preservation according to which the original belief set should be fully retained after a revision by information that is consistent with it. I use concrete representations of belief states and (iterated) revisions of belief states as semantic models for (nested) conditionals. Among the four most natural qualitative models for iterated belief change, two are identified that indeed allow us to combine the Ramsey test with Preservation in the language containing only flat conditionals of the form α > β. It is shown, however, that Preservation for this simple language enforces a violation of Preservation for nested conditionals of the form α > (β > γ). In such languages, no two belief sets are ordered by strict subset inclusion. I argue that it has been wrong right from the start to expect that Preservation holds in languages containing nested conditionals.	belief revision;iterated function;iteration	Hans Rott	2011	J. Philosophical Logic	10.1007/s10992-011-9177-3	semantic data model;ramsey reset test;arrow's impossibility theorem;epistemology;computer science;pure mathematics;mathematics;belief revision;preservation;algorithm	AI	-12.487745816139979	5.812738635778569	65874
5f7d5e9bbefa3a8abbd42208120641de0ae12723	resolution in linguistic first order logic based on linear symmetrical hedge algebra		This paper focuses on resolution in linguistic first order logic with truth value taken from linear symmetrical hedge algebra. We build the basic components of linguistic first order logic, including syntax and semantics. We present a resolution principle for our logic to resolve on two clauses having contradictory linguistic truth values. Since linguistic information is uncertain, inference in our linguistic logic is approximate. Therefore, we introduce the concept of reliability in order to capture the natural approximation of the resolution inference rule.	approximation algorithm;automated reasoning;first-order logic;linear algebra;resolution (logic);uncertain inference	Thi-Minh-Tam Nguyen;Viet-Trung Vu;The-Vinh Doan;Duc-Khanh Tran	2014		10.1007/978-3-319-08795-5_36	fuzzy logic;deep linguistic processing;many-valued logic;artificial intelligence;mathematics;probabilistic logic network;algorithm	NLP	-14.41439701582341	10.043059620984337	66023
63092348d75c12cff0a2b40f765ea17f74b72bcf	the proof-theoretic analysis of transfinitely iterated quasi least fixed points	pseudo-hierarchies the theories id of iterated inductive definitions formalize hierarchies of least defin- able fixed points. in the past years;cf. buchholz et al. 3. also their metapredicative relatives b;fixed points;these theories have been exhaustively studied and their proof-theoretic analysis has been carried out a long time ago;iteration	The starting point of this article is an old question asked by Feferman in his paper on Hancock’s conjecture [6] about the strength of ID1. This theory is obtained from the well-known theory ID1 by restricting fixed point induction to formulas that contain fixed point constants only positively. The techniques used to perform the proof-theoretic analysis of ID1 also permit to analyze its transfinitely iterated variants IDα. Thus, we eventually know that |ÎDα| = |IDα|.	fixed point (mathematics);iteration;theory;transfinite induction;whole earth 'lectronic link	Dieter Probst	2006	J. Symb. Log.		fixed-point iteration;mathematical optimization;combinatorics;discrete mathematics;mathematics;fixed point;fixed-point theorem;programming language;iterated function;fixed-point property;least fixed point	Logic	-6.272161921737678	15.528710505593196	66030
a11b1532ea60b761295abc5ebaa995d144ead26e	matching modulo superdevelopments application to second-order matching	second order;intelligence artificielle;higher order;artificial intelligence;inteligencia artificial	To perform higher-order matching, we need to decide the βη-equivalence on λ-terms. The first way to do it is to use simply typed λ-calculus and this is the usual framework where higher-order matching is performed. Another approach consists in deciding a restricted equivalence based on finite superdevelopments. We consider higher-order matching modulo this equivalence over untyped λ-terms for which we propose a terminating, sound and complete matching algorithm. This is in particular of interest since all second-order β-matches are matches modulo superdevelopments. We further propose a restriction to second-order matching that gives exactly all second-order matches.	algorithm;matching (graph theory);modulo operation;newman's lemma;simply typed lambda calculus;turing completeness	Germain Faure	2006		10.1007/11916277_5	higher-order logic;computer science;artificial intelligence;3-dimensional matching;optimal matching;programming language;second-order logic;algorithm	Logic	-12.538925334978202	15.21843329493512	66198
bef1e7f3a9c6ec71c024ef73729ce777bc3c0d7a	enriched categories and many-valued preorders: categorical, semantical, and topological perspectives	partially ordered groupoids and ringoids;many valued preorders;topological systems;data mining;left and right residuations;antisymmetry;and topological spaces;enriched preordered sets;enriched categories;specialization orders;pattern matching;order reversing and order preserving involutions;and spectra;hemimetrics;unital quantales;t0 separation axiom;skeletons	"""A question from programming arises: if bitstring x compares with bitstring y to some degree α, and if bitstring y satisfies predicate a to some degree β, then how should the possibility be mathematically modeled that bitstring x satisfies predicate a to at least some degree related to both α and β? Mathematically modeling this question is surprisingly intricate when the underlying conjunctions, e.g., of predicates, are non-commutative. Potential applications of this question occur in data-mining, a field in which pattern-matching is important and commonly used. This paper uses ideas from enriched categories over monoidal categories to address such issues and enable pattern-matching techniques to extend to many-valued contexts equipped with non-commutative conjunctions: first, we consider the notion of a set enriched by a po-monoid L, which turns out to be a set equipped with an L-valued preorder; second, we extend the notion of enriched functors to formulate the appropriate definition of """"variable-basis morphisms"""" between preordered sets over different lattice-theoretic bases; third, we construct the notion of topological systems enriched with many-valued preorders and use their extent spaces to motivate and formulate enriched (or preordered) topological spaces-the compatibility or enrichment axioms for such systems and spaces model the programming question stated above using non-commutative tensor products. En route are determined a number of related notions and results: many-valued antisymmetry characterizes the L-T0 separation axiom; many-valued preorders are categorically topological, and many-valued partial orders are monotopological; enriched topological spaces form a topological category; a large inventory of example classes is provided, including programming examples and an extensive discussion of examples based on the L-spectra of complete po-groupoids; and each of these related developments is provided a suitable lattice-theoretic and categorical foundation."""		Jeffrey T. Denniston;Austin Melton;Stephen Ernest Rodabaugh	2014	Fuzzy Sets and Systems	10.1016/j.fss.2014.05.008	combinatorics;discrete mathematics;antisymmetry;computer science;pattern matching;mathematics	Logic	-5.809940640630675	12.022893075343474	66212
068c0cf7eb319fe265b0cf339fb70cc1a29ae84c	the stuttgart type unification formalism - user manual			han unification;semantics (computer science)	Jochen Dörre;Ingo Raasch	1991	IWBS Report		computer science;calculus;pure mathematics	PL	-12.518384593862274	11.232890476744208	66213
9cfb99864d1d215c995929925c8ee3c8f43ec171	from multisets to sets in homotopy type theory		We give a model of set theory based on multisets in homotopy type theory. The equality of the model is the identity type. The underlying type of iterative sets can be formulated in Martin-Lof type theory, without Higher Inductive Types (HITs), and is a sub-type of the underlying type of Aczelu0027s 1978 model of set theory in type theory. The Voevodsky Univalence Axiom and mere set quotients (a mild kind of HITs) are used to prove the axioms of constructive set theory for the model. We give an equivalence to the model provided in Chapter 10 of Homotopy Type Theory by the Univalent Foundations Program.	homotopy type theory	Håkon Robbestad Gylterud	2018	J. Symb. Log.	10.1017/jsl.2017.84	discrete mathematics;class (set theory);univalent foundations;algebraic data type;urelement;mathematics;constructive set theory;homotopy type theory;type theory;set theory	Logic	-8.500145137550605	12.816305606230815	66316
50f4aa2226270630eb8f756c752df855327d7b5b	formalization of universal algebra in agda		Abstract In this work we present a novel formalization of universal algebra in Agda. We show that heterogeneous signatures can be elegantly modelled in type-theory using sets indexed by arities to represent operations. We prove elementary results of heterogeneous algebras, including the proof that the term algebra is initial and the proofs of the three isomorphism theorems. We further formalize equational theory and prove soundness and completeness. At the end, we define (derived) signature morphisms, from which we get the contravariant functor between algebras; moreover, we also proved that, under some restrictions, the translation of a theory induces a contra-variant functor between models.	agda	Emmanuel Gunther;Alejandro Gadea;Miguel Pagano	2018	Electr. Notes Theor. Comput. Sci.	10.1016/j.entcs.2018.10.010	morphism;discrete mathematics;term algebra;isomorphism theorem;agda;functor;computer science;mathematical proof;soundness;universal algebra	Logic	-10.973283219417517	17.001162113137866	66374
35915dea28c21add1070d45c0b531dfec950f570	second order logic or set theory?	set theory;standard model;second order;first order;formal language	We try to answer the question which is the “right” foundation of mathematics, second order logic or set theory. Since the former is usually thought of as a formal language and the latter as a first order theory, we have to rephrase the question. We formulate what we call the second order view and a competing set theory view, and then discuss the merits of both views. On the surface these two views seem to be in manifest conflict with each other. However, our conclusion is that it is very difficult to see any real difference between the two. We analyze a phenomenon we call internal categoricity which extends the familiar categoricity results of second order logic to Henkin models and show that set theory enjoys the same kind of internal categoricity. Thus the existence of non-standard models, which is usually taken as a property of first order set theory, and categoricity, which is usually taken as a property of second order axiomatizations, can coherently coexist when put into their proper context. We also take a fresh look at complete second order axiomatizations and give a hierarchy result for second order characterizable structures. Finally we consider the problem of existence in mathematics from both points of view and find that second order logic depends on what we call large domain assumptions, which come quite close to the meaning of the axioms of set theory.	coexist (image);formal language;set theory	Jouko A. Väänänen	2012	Bulletin of Symbolic Logic			Theory	-12.657684078630949	6.272292648146832	66387
2278be3a9b42b30f1ae62b785367955b03f69bf8	a fuzzy logic programming language.	fuzzy logic programming;logic programming fuzzy logic;similarity based reononing	"""We present a new fuzzy logic programming Language, called LIKELOG, to be used for approximated reat;oning and for fuzzy deductive database applications. The core component of the system is the algori thm of unification, which expands the Martelli-Montanari unification algorithm introducing two similarity relations. The resolution mechanism is a straightforward application of this kind of expanded unification. Given such a fuzzy resolution ruLe we present a fuzzy logic programming system where computed answert; are suppLied wit.h a degree of derivation. The LIKELOG system is more flexible respect to the traditional information systerru;. LIKELOG retrieves answers that are """"similar"""" to the user query. In LIKELOG the user can not only insert queries, hut can also introduce his/ her own relation of similarity, in order to obtain answers that, although approximate, meet hi::i/ her own particular preferenc!:'.:;."""	admissible numbering;approximation algorithm;deductive database;fuzzy logic;logic programming;programming language;unification (computer science)	Francesca Arcelli Fontana;Ferrante Formato	1997			fuzzy logic;dynamic logic;t-norm fuzzy logics;fuzzy electronics;description logic;logic optimization;horn clause;fuzzy classification;fuzzy number;functional logic programming;computational logic;inductive programming;prolog;logic programming;multimodal logic;fuzzy control language	DB	-16.380060347066898	11.930000454237128	66436
3367a4bd26040388c440977d36dab710a1c14c87	the complexity of limited belief reasoning - the quantifier-free case		The classical view of epistemic logic is that an agent knows all the logical consequences of their knowledge base. This assumption of logical omniscience is often unrealistic and makes reasoning computationally intractable. One approach to avoid logical omniscience is to limit reasoning to a certain belief level, which intuitively measures the reasoning “depth.” This paper investigates the computational complexity of reasoning with belief levels. First we show that while reasoning remains tractable if the level is constant, the complexity jumps to PSPACE-complete— that is, beyond classical reasoning—when the belief level is part of the input. Then we further refine the picture using parameterized complexity theory to investigate how the belief level and the number of non-logical symbols affect the complexity.	cobham's thesis;computational complexity theory;epistemic modal logic;knowledge base;logical constant;non-logical symbol;pspace;parameterized complexity;quantifier (logic)	Yijia Chen;Abdallah Saffidine;Christoph Schwering	2018		10.24963/ijcai.2018/245	machine learning;artificial intelligence;computational complexity theory;knowledge base;omniscience;parameterized complexity;computer science;logical consequence;epistemic modal logic	AI	-16.873827246642904	6.69209111473694	66490
28435f6003b2baf088e0231c15c346874d07ef18	equivalents for a quasivariety to be generated by a single structure	generation by a single structure;łoś suszko rule;logic;free product;quasivariety;mathematical logic and foundations;philosophy;computational linguistics;embedding property	We present some equivalent conditions for a quasivariety K of structures to be generated by a single structure. The first such condition, called the embedding property was found by A.I. Mal′tsev in [6]. It says that if A,B ∈ K are nontrivial, then there exists C ∈ K such that A and B are embeddable into C. One of our equivalent conditions states that the set of quasi-identities valid in K is closed under a certain Gentzen type rule which is due to J. Loś and R. Suszko [5].	type rule	Wieslaw Dziobiak;A. V. Kravchenko;Piotr J. Wojciechowski	2009	Studia Logica	10.1007/s11225-009-9168-3	free product;discrete mathematics;topology;philosophy;epistemology;computational linguistics;mathematics;logic;algorithm	AI	-11.020847851990425	8.329878314003862	66536
1dea06f29f22460e8c18b15bbb57abb85f71d82b	what's in a function?	truth;regle;fonction;kleene s c;calculation;fonction recursive primitive;revision;verite;function;calculo;fixed point;definition;equation recursive;belnap n d;funcion;gupta a;calcul;fonction recursive generale;rule	In this paper we argue that Revision Rules, introduced by Anil Gupta and Nuel Belnap as a tool for the analysis of the concept of truth, also provide a useful tool for defining computable functions. This also makes good on Gupta's and Belnap's claim that Revision Rules provide a general theory of definition, a claim for which they supply only the example of truth. In particular we show how Revision Rules arise naturally from relaxing and generalizing a classical construction due to Kleene, and indicate how they can be employed to reconstruct the class of the general recursive functions. We also point at how Revision Rules can be employed to access non-minimal fixed points of partially defined computing procedures.	belief revision;computable function;fixed point (mathematics);recursion (computer science);μ-recursive function	Gian Aldo Antonelli	1996	Synthese	10.1007/BF00413605	calculation;definition;philosophy;epistemology;calculus;mathematics;fixed point;function;algorithm	ML	-13.229022902132861	15.581249384511919	66592
dd804fc085c5104bf36366a55b0f4e296aa426a9	evaluating logic programs via set-valued functions	value function		logic programming	Carlo Cecchi;Dario Sartini;Luigia Carlucci Aiello	1987			discrete mathematics;bellman equation;mathematics	AI	-13.580927373693719	13.595155468167043	66709
498ccd89beaa72ebbf6d5305ae86d7ccd391e73e	on the intended interpretations of actions	complexite kolmogorov;interpretation action;common sense reasoning;resolucion problema;kolmogorov complexity;calcul situation;raisonnement de sens commun;occam s razor;situation calculus;problem solving;resolution probleme	In this paper we address the problem of commonsense reasoning about action by appealing to Occam’s razor—we should accept the simplest hypothesis explaining the observed phenomena—to generalise the commonsense law of inertia. In particular, we identify the intended interpretation of an action as the simplest transformation induced by an action on a world to produce a possible successor. We formalise the notion of simplicity of a transformation as its conditional Kolmogorov complexity. Finally we show that the framework can solve simple commonsense reasoning problems and indicate its role as a first step towards capturing commonsense notions of causation.	causal filter;causality;commonsense reasoning;interpretation (logic);kolmogorov complexity;local interconnect network;occam's razor;semantics (computer science);theory;yale shooting problem;occam	Victor Jauregui;Maurice Pagnucco;Norman Y. Foo	2004		10.1007/978-3-540-28633-2_4	commonsense reasoning;computer science;artificial intelligence;occam's razor;mathematics;situation calculus;algorithm	AI	-14.763687748892131	5.41522424758647	66717
15994d937350f66f1bd2fda98eee2de06071657e	from a synchronous declarative language to a temporal logic dealing with multiform time	synchronous declarative language;temporal logic;multiform time	Without Abstract	declarative programming;temporal logic	Daniel Pilaud;Nicolas Halbwachs	1988		10.1007/3-540-50302-1_5	natural language processing;computer science;artificial intelligence;algorithm	DB	-15.88191053046454	14.072033610242379	66839
1e47b8d72c342f2aa77ac7d0e77e4543e31b1f3c	a quantitative approach to belief revision in structured probabilistic argumentation	structured argumentation;belief revision;reasoning under probabilistic uncertainty	Many real-world knowledge-based systems must deal with information coming from different sources that invariably leads to incompleteness, overspecification, or inherently uncertain content. The presence of these varying levels of uncertainty doesn’t mean that the information is worthless – rather, these are hurdles that the knowledge engineer must learn to work with. In this paper, we continue work on an argumentation-based framework that extends the well-known Defeasible Logic Programming (DeLP) language with probabilistic uncertainty, giving rise to the Defeasible Logic Programming with Presumptions and Probabilistic Environments (DeLP3E) model. Our prior work focused on the problem of belief revision in DeLP3E, where we proposed a non-prioritized class of revision operators called AFO (Annotation Function-based Operators) to solve this problem. In this paper, we further study this class and argue that in some cases it may be desirable to define revision operators that take quantitative aspects into account, such as how the probabilities of certain literals or formulas of interest change after the revision takes place. To the best of our knowledge, this problem has not been addressed in the argumentation literature to date. We propose the QAFO (Quantitative Annotation Function-based Operators) class of operators, a subclass of AFO, and then go on to study the complexity of several problems related to their specification and application in revising knowledge bases. Finally, we present an algorithm for computing the probability that a literal is warranted in a DeLP3E knowledge base, and discuss how it could be applied towards implementing QAFO-style operators that compute approximations rather than exact operations.	algorithm;approximation;belief revision;commonsense knowledge (artificial intelligence);computational complexity theory;computer security;cyberwarfare;defeasible logic;defeasible reasoning;knowledge base;knowledge engineer;knowledge-based systems;literal (mathematical logic);logic programming;optimality criterion;time complexity;whole earth 'lectronic link	Gerardo I. Simari;Paulo Shakarian;Marcelo A. Falappa	2015	Annals of Mathematics and Artificial Intelligence	10.1007/s10472-015-9476-4	computer science;artificial intelligence;machine learning;mathematics;probabilistic argumentation;belief revision;algorithm	AI	-18.272924588663173	8.822450840586011	66888
a23739cf70c5f69616b1fb2bd664de9b1db0c85f	understanding cutting planes for qbfs		Abstract We study the cutting planes system CP+ ∀ red for quantified Boolean formulas (QBF), obtained by augmenting propositional Cutting Planes with a universal reduction rule, and analyse the proof-theoretic strength of this new calculus. While in the propositional case, Cutting Planes is of intermediate strength between resolution and Frege, our findings here show that the situation in QBF is slightly more complex: while CP+ ∀ red is again weaker than QBF Frege and stronger than the CDCL-based QBF resolution systems Q-Res and QU-Res , it turns out to be incomparable to even the weakest expansion-based QBF resolution system ∀ Exp+Res . A similar picture holds for a semantic version semCP+ ∀ red . Technically, our results establish the effectiveness of two lower bound techniques for CP+ ∀ red : via strategy extraction and via monotone feasible interpolation.		Olaf Beyersdorff;Leroy Chew;Meena Mahajan;Anil Shukla	2018	Inf. Comput.	10.1016/j.ic.2018.08.002	discrete mathematics;combinatorics;mathematics;interpolation;monotone polygon;upper and lower bounds	Logic	-9.867156938023049	14.500264966553694	66959
3d8664e10c75dbe67cd85fb176916903937ce8d0	analyzing completeness of axiomatic functional systems for temporal × modal logics	t w logics;temporal logic;definability;natural extension;modal logic;ciencias basicas y experimentales;matematicas;indexation;completeness;grupo a;possible worlds	In previous works, we presented a modification of the usual possible world semantics by introducing an independent temporal structure in each world and using accessibility functions to represent the relation among them. Different properties of the accessibility functions (being injective, surjective, increasing, etc.) have been considered and axiomatic systems (called functional) which define these properties have been given. Only a few of these systems have been proved to be complete. The aim of this paper is to make a progress in the study of completeness for functional systems. For this end, we use indexes as names for temporal flows and give new proofs of completeness. Specifically, we focus our attention on the system which defines injectivity, because the system which defines this property without using indexes was proved to be incomplete in previous works. The only system considered which remains incomplete is the one which defines surjectivity, even if we consider a sequence of natural extensions of the previous one.	accessibility;axiomatic system;modal logic;possible world	Alfredo Burrieza;Inmaculada Perez de Guzmán;Emilio Muñoz-Velasco	2010	Math. Log. Q.	10.1002/malq.200810038	modal logic;mathematical analysis;discrete mathematics;topology;temporal logic;epistemology;completeness;mathematics;possible world;algorithm;algebra	PL	-10.580527016055592	14.478484098317448	67032
674237ca3289e335bb5b7ddf0fc9f91f00fee77e	axiomatising first-order temporal logic: until and since over linear time	first order temporal logic;linear time	We present an axiomatisation for the first-order temporal logic with connectives Until and Since over the class of all linear flows of time. Completeness of the axiom system is proved.	first-order predicate;temporal logic;time complexity	Mark Reynolds	1996	Studia Logica	10.1007/BF00370836	time complexity;discrete mathematics;linear temporal logic;philosophy;interval temporal logic;computation tree logic;computer science;mathematics;algorithm	Logic	-12.664897084866064	14.07737988441464	67192
eb0ba57146a25568920633ba337665a5c338b559	a resolution/tableaux algorithm for projective approximations in ipc		We present an algorithm, based both on semantic tableaux and resolution, which is able to check the projectivity (exactness) of a formula in intuitionistic propositional calculus. Suitably iterated, it also computes projective approximations, thus providing best E-unifiers for the equational theory of Heyting algebras. Applications to admissible inference rules are immediate.	algorithm;approximation;intuitionistic logic;iteration;method of analytic tableaux;propositional calculus;resolution (logic);unification (computer science)	Silvio Ghilardi	2002	Logic Journal of the IGPL	10.1093/jigpal/10.3.229	combinatorics;pure mathematics;mathematics;algebra	Logic	-12.00434226789919	12.78807762176133	67244
5e21deeb48c815f5712da9f319f27f59f669dc1b	"""comments on dumitrescu's """"a selectable sloppy heap"""""""		Dumitrescu [arXiv:1607.07673] describes a data structure referred to as a Selectable Sloppy Heap. We present a simplified approach, and also point out aspects of Dumitrescu’s exposition that require scrutiny.	data structure	Michael L. Fredman	2016	CoRR		arithmetic;discrete mathematics;mathematics;algorithm	Theory	-8.60379316161496	9.566300093800114	67410
0b55aa0a078e82d8e31ab90929d48cb753fef1e5	negation disarmed			negation as failure	Robert K. Meyer	1976	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093887522		EDA	-12.878894720289216	11.686266112139403	67486
fb6f4dd2416cd9180d30811e48227f6cf1404a13	differential interaction nets	logique lineaire;differential calculus;interaction;ressource;lambda calculus;multiplicite;logica lineal;informatique theorique;strong normalization;multiplicidad;normalisation forte;lambda calculus with multiplicities;lambda calculo;calcul differentiel;differential lambda calculus;interaccion;resource lambda calculus;lambda calcul;linear logic;multiplicity;recurso;interaction nets;computer theory;resource;informatica teorica	We introduce interaction nets for a fragment of the differential lambda-calculus and exhibit in this framework a new symmetry between the of course and the why not modalities of linear logic, which is completely similar to the symmetry between the tensor and par connectives of linear logic. We use algebraic intuitions for introducing these nets and their reduction rules, and then we develop two correctness criteria (weak typability and acyclicity) and show that they guarantee strong normalization. Finally, we outline the correspondence between this interaction nets formalism and the resource lambda-calculus. © 2006 Published by Elsevier B.V.	correctness (computer science);lambda calculus;linear algebra;linear logic;logical connective;normalization property (abstract rewriting);semantics (computer science);type inference	Thomas Ehrhard;Laurent Regnier	2006	Theor. Comput. Sci.	10.1016/j.tcs.2006.08.003	linear logic;interaction;computer science;differential calculus;calculus;lambda calculus;mathematics;multiplicity;programming language;algorithm;resource	Logic	-12.747128694197631	16.049757377426925	67516
da50daa1a33dcd0e79925b00eb384ce50c98c1c3	quantification, domains of discourse, and existence				Thomas G. Nedzynski	1979	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093882411	discrete mathematics;mathematics	NLP	-12.035032672311136	10.473407621927242	67550
f5005a72bdcebdd73eeb7c2b44b6ad192cf695ea	logic in the twenties: the nature of the quantifier			quantifier (logic)	Warren D. Goldfarb	1979	J. Symb. Log.		algorithm;mathematics	Theory	-12.367719246975907	11.686434194765182	67654
dcbf5fef7dd2eb92a873cc53643e27e5e6a99854	predicate argument structures for information extraction from dependency representations - null elements are missing			information extraction	Rodolfo Delmonte	2012			information extraction;predicate (grammar);predicate (mathematical logic);artificial intelligence;mathematics;pattern recognition	NLP	-18.172616220006727	7.430468632206717	67669
de979114078d3dcaa2dd9dd13604da1c132afc09	representing natural kinds by spatial inclusion and containment		Biomedicalterminologieslackaclear-cutunderstanding of the semanticsof part-wholerelations.In order to designa conceptuallyadequateontologyfor thebiomedicaldomain,we investigatedifferentformsof ontologicaldependencies betweenpartsand wholes.We then suggest,for naturalkinds at least,a move away from modeling the relationsbetweenpartsand wholesand advocate insteadconceptuallysimpler though expressi ve spatial inclusion/containment relations.Weoutlineamulti-facettedencodingpatternfor biologicalconcepts, whichis centeredaroundtheserelations.		Stefan Schulz;Udo Hahn	2004			natural language processing;computer science;artificial intelligence	DB	-13.496507066570427	7.116306698917771	67751
256ce3e982087a71b3a4334c8718896368b43739	proof system for enriched fuzzy bk relational calculi: pt. 1 - transforming notations	symbol manipulation;numerical representations;symbolic manipulation;fuzzy systems multivalued logic tensile stress algebra equations concrete decision making fuzzy control protection information retrieval;fuzzy relation;numerical representations proof system enriched fuzzy relational algebras bk relational calculi symbolic manipulation;theorem proving;theorem proving relational algebra symbol manipulation;enriched fuzzy relational algebras;bk relational calculi;relational algebra;proof system	Enriched fuzzy relational algebras based on BK-products of relations have representational and computational means for handling both, concrete numerical representations of relations extensively used in applications, as well as high level symbolic forms. Such forms can be used for symbolic manipulation of relations that have been abstracted from numerical representations. Symbolic forms can be handled equationally. Equations over BK-products can characterise relational properties in a universal way. The described tool facilitates transformations between these different forms.	computation;high-level programming language;numerical analysis;proof calculus	Ha Hoang;Ladislav J. Kohout	2007	2007 IEEE International Fuzzy Systems Conference	10.1109/FUZZY.2007.4295622	discrete mathematics;symbolic computation;codd's theorem;relational calculus;relational algebra;computer science;mathematics;automated theorem proving;conjunctive query;algorithm;algebra	SE	-15.568298021801603	17.47144661104634	67753
7368d31d086f81ea3ed7c644fa5fe304510668d3	expressive reasoning on tree structures: recursion, inverse programs, presburger constraints and nominals		The Semantic Web lays its foundations on the study of graph and tree logics. One of the most expressive graph logics is the fully enriched μ-calculus, which is a modal logic equipped with least and greatest fixed-points, nominals, inverse programs and graded modalities. Although it is well-known that the fully enriched μ-calculus is undecidable, it was recently shown that this logic is decidable when its models are finite trees. In the present work, we study the fully-enriched μ-calculus for trees extended with Presburger constraints. These constraints generalize graded modalities by restricting the number of children nodes with respect to Presburger arithmetic expressions. We show that the logic is decidable in EXPTIME. This is achieved by the introduction of a satisfiability algorithm based on a Fischer-Ladner model construction that is able to handle binary encodings of Presburger constraints.	recursion	Everardo Bárcenas;José de Jesús Lavalle-Martínez	2013		10.1007/978-3-642-45114-0_7	combinatorics;discrete mathematics;presburger arithmetic;mathematics;algorithm	AI	-13.512021467725496	14.463521086718794	67780
7a3366905b313d0684d82917baed416f7461dbdb	a study of z modal systems			modal logic	Robert Goldblatt	1974	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093891304		Logic	-12.96513149996742	11.493132821275735	67788
50d336b5c37748af570a1e78b4e41732a6f70f3a	categories of containers	polymorphism	We introduce the notion of containers as a mathematical formalisation of the idea that many important datatypes consist of templates where data is stored. We show that containers have good closure properties under a variety of constructions including the formation of initial algebras and final coalgebras. We also show that containers include strictly positive types and shapely types but that there are containers which do not correspond to either of these. Further, we derive a representation result classifying the nature of polymorphic functions between containers. We finish this paper with an application to the theory of shapely types and refer to a forthcoming paper which applies this theory to differentiable types.	initial algebra	Michael Gordon Abbott	2003		10.1007/3-540-36576-1_2	polymorphism;discrete mathematics;computer science;mathematics;programming language;algorithm	Logic	-7.496312249077694	15.341573454455585	67840
8fd80414b3798a41ad3f65062f0f1fcaf009e821	results regarding the axiomatization of partial propositional calculi			axiomatic system;propositional calculus	Wilson E. Singletary	1968	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093893456	discrete mathematics;mathematics	AI	-12.292941248913536	12.742663785921792	67847
90f2ea8d77a19d9b641e67273269ac55d6ef649e	an algorithm for checking the dynamic controllability of a conditional simple temporal network with uncertainty		A Simple Temporal Network with Uncertainty (STNU) is a framework for representing and reasoning about temporal problems involving actions whose durations are bounded but uncontrollable. A dynamically controllable STNU is one for which there exists a strategy for executing its time-points that guarantees that all of the temporal constraints in the network will be satisfied no matter how the uncontrollable durations turn out. A Conditional Simple Temporal Network with Uncertainty (CSTNU) augments an STNU to include observation nodes, where the execution of each observation node provides, in real time, the truth value of an associated proposition. Recent work has generalized the notion of dynamic controllability to cover CSTNUs. This paper presents an algorithm—called a DC-checking algorithm—for determining whether arbitrary CSTNUs are dynamically controllable. The algorithm, which is proven to be sound, is the first such algorithm to be presented in the literature. The algorithm extends edge-generation/constraint-propagation rules from an existing STNU algorithm to accommodate propositional labels, while adding new rules required to deal with the observation nodes. The paper also discusses implementation issues associated with the management of propositional labels.	algorithm;local consistency;software propagation;temporal logic	Carlo Combi;Luke Hunsberger;Roberto Posenato	2013		10.1007/978-3-662-44440-5_19	mathematical optimization;theoretical computer science	AI	-17.707908797870516	8.213092269122347	67995
4196a0561c9c8bf6d547915368982ffb0983f07a	how truth behaves when there's no vicious reference	fixed point semantics;paradoxe;revision theory;truth;logic;vicious reference;verite;fixed point;logique philosophique;belnap n d;theorie de la revision;paradox;fixed point theory;philosophical logic;anil gupta;logique;logica	In The Revision Theory of Truth (MIT Press), Gupta and Belnap (1993) claim as an advantage of their approach to truth “its consequence that truth behaves like an ordinary classical concept under certain conditions— conditions that can roughly be characterized as those in which there is no vicious reference in the language.” To clarify this remark, they define Thomason models, nonpathological models in which truth behaves like a classical concept, and investigate conditions under which a model is Thomason: they argue that a model is Thomason when there is no vicious reference in it. We extend their investigation, considering notions of nonpathologicality and senses of “no vicious reference” generated both by revision theories of truth and by fixedpoint theories of truth. We show that some of the fixed-point theories have an advantage analogous to that which Gupta and Belnap claim for their approach, and that at least one revision theory does not. This calls into question the claim that the revision theories have a distinctive advantage in this regard.	belief revision;theory;thomason collection of civil war tracts	Philip Kremer	2010	J. Philosophical Logic	10.1007/s10992-010-9136-4	philosophy;epistemology;coherence theory of truth;philosophical logic;mathematics;fixed point;logic;algorithm	AI	-12.257781026083496	8.858298002498659	68042
6d564df7bce862a4ff9961b186b193ed0a072165	some quantifiers require two-predicate scopes	quantifier;intelligence artificielle;calcul predicat;calculo predicado;quantificateur;predicates calculus;artificial intelligence;inteligencia artificial	"""Predicate calculus has long served as the basis of mathematical logic and has more recently achieved widespread use in artificial intelligence. This system of logic expresses propositions in terms of quantifications, restricting itself to the universal and existential quantifiers """"all"""" and """"some,"""" which appear to be adequate for formalizing mathematics. Systems that aspire to deal with natural language or everyday reasoning, however, must attempt to deal with the full range of quantifiers that occur in such language and reasoning, including, in particular, plurality quantifiers, such as """"most,"""" """"'many,"""" and """"few."""" The logic of such quantifiers forces an extension of the predicate-calculus framework to a system of representation that involves more than one predicate in each quantification. In this paper, we prove this result for the specific case of """"most."""" Unlike some other arguments that attempt to establish the inadequacy of standard predicate calculus on the basis of intuitive plausibility judgements as to the likely character of human reasoning [11, 19], our result is a theorem of logic itself."""	apevia;artificial intelligence;first-order logic;formal system;natural language;plausibility structure;quantifier (logic);sequent calculus;universal quantification	Steven Cushing	1987	Artif. Intell.	10.1016/0004-3702(87)90013-0	predicate logic;zeroth-order logic;higher-order logic;computer science;artificial intelligence;mathematics;bounded quantifier;predicate variable;algorithm;prenex normal form	AI	-13.585491050192159	6.5517813973257075	68088
b1dc13613372c685e5bf869de140b083dc1c2865	"""erratum to """"confirmation as partial entailment"""" [journal of applied logic 11 (2013) 364-372]"""		Article history: Received 18 February 2014 Accepted 18 February 2014 Available online 17 March 2014 We provide a correction to the proof of the main result in Crupi and Tentori (2013). © 2014 Elsevier B.V. All rights reserved. Michael Schippers (University of Oldenburg) pointed out to us in personal correspondence an error in the proof of the main result in Crupi and Tentori [1]. The flaw spotted by Schippers is that Lemma 2 (p. 369) does not hold in its original formulation: the scheme of assignment there defined does not guarantee that one ends up with a probabilistically coherent set of values. In order to amend and validate the proof, it is sufficient to replace Lemma 2 and the subsequent lines (up to Lemma 3) by the following. Lemma 2 (Corrected). For any x, y1, y2 such that x ∈ [0, 1], y1, y2 ∈ (0, 1), there exist e, h1, h2 ∈ Lc and P ′′ ∈ P such that P ′′(h1|e)/P ′′(h1) = P ′′(h2|e)/P ′′(h2) = x, P ′′(h1) = y1, and P ′′(h2) = y2. Proof [Corrected]. Let w ∈ (0,1) be given so that w < (1 − y1)/(1 − xy1), (1 − y2)/(1 − xy2) (as the latter quantities must all be positive, w exists). The equalities in Lemma 2 arise from the following scheme of probability assignments P (h1 ∧ h2 ∧ e) = xy1y2w; P (¬h1 ∧ h2 ∧ e) = (1 − xy1)xy2w; P (h1 ∧ h2 ∧ ¬e) = (1 − xw)2y1y2 1 − w ; P (¬h1 ∧ h2 ∧ ¬e) = [ 1 − (1 − xw)y1 1 − w ] (1 − xw)y2; P (h1 ∧ ¬h2 ∧ e) = xy1(1 − xy2)w; P (¬h1 ∧ ¬h2 ∧ e) = (1 − xy1)(1 − xy2)w; P (h1 ∧ ¬h2 ∧ ¬e) = (1 − xw)y1 [ 1 − (1 − xw)y2 1 − w ] ; P (¬h1 ∧ ¬h2 ∧ ¬e) = [ 1 − (1 − xw)y1 1 − w ][ 1 − (1 − xw)y2 1 − w ] (1 − w). DOI of original article: http://dx.doi.org/10.1016/j.jal.2013.03.002. * Corresponding author. http://dx.doi.org/10.1016/j.jal.2014.02.001 1570-8683/© 2014 Elsevier B.V. All rights reserved. V. Crupi, K. Tentori / Journal of Applied Logic 12 (2014) 230–231 231 Suppose there exist (x, y1), (x, y2) ∈ Dk such that k(x, y1) = k(x, y2). Then, by Lemma 2 [Corrected] and the definition of Dk (see Crupi and Tentori [1, p. 369]), there exist e, h1, h2 ∈ Lc and P ′′ ∈ P such that P (h1|e)/P (h1) = P (h2|e)/P (h2) = x, P (h1) = y1, P (h2) = y2, and P ′′(e) = w. By the probability calculus, if the latter equalities hold, then P (h1 ∧ e) P (h1)P ′′(e), P (h2 ∧ e) P (h2)P ′′(e), and moreover P (e|h1)/P ′′(e) = P (e|h2)/P ′′(e) = x. Thus, there exist e, h1, h2 ∈ Lc and P ′′ ∈ P such that either CP ′′(h1, e) = k(x, y1) = k(x,w) = CP ′′(e, h1) even if P ′′(h1 ∧ e) P ′′(h1)P ′′(e), or CP ′′(h2, e) = k(x, y2) = k(x,w) = CP ′′(e, h2) even if P ′′(h2 ∧ e) P ′′(h2)P ′′(e), contradicting axiom A2 (see Crupi and Tentori [1, p. 365]). Conversely, A2 implies that, for any (x, y1), (x, y2) ∈ Dk, k(x, y1) = k(x, y2). So, for A2 to hold, there must exist a function m such that, for any e, h ∈ Lc and P ∈ P, if P (h∧ e) P (h)P (e), then CP (h, e) = m[P (h|e)/P (h)] and m(x) = k(x, y). We then posit m : [0, 1] → and denote the domain of m as Dm. Up to Lemma 2 [Corrected] and then again from Lemma 3 on, the proof proceeds unchanged.1 References [1] V. Crupi, K. Tentori, Confirmation as partial entailment: A representation theorem in inductive logic, J. Appl. Log. 11 (2013) 364–372. 1 Meanwhile, a self-contained and corrected version of the proof is available here: http://www.vincenzocrupi.com/website/ wp-content/uploads/2014/02/proof_corrected.pdf.	coherence (physics);existential quantification;flaw hypothesis methodology;h2 database engine;inductive reasoning;p (complexity)	Vincenzo Crupi;Katya Tentori	2014	J. Applied Logic	10.1016/j.jal.2014.02.001	artificial intelligence;mathematics;algorithm	Logic	-9.256445107269178	10.054964033234477	68098
9cd398f3df395d6e9c61f5177846b4c1804186b8	on the declarative structure of quantum concepts: states and observables (distilled tutorial)	operators;linearity;states;universal constructions;haskell;quanta	This tutorial documents our opinion that quantum concepts are declarative in nature, and that using imperative programming for quantum computation is a conceptual mismatch. We show how to construct a purely functional framework that describes a methodologically more correct (in our opinion) model of quantum entities. We refrain from representing explicitly, as data structures, such objects as states which cannot be analysed without being destroyed. We suggest that a declarative, purely functional approach gives formal tools that are more adequate for reasoning about the computational sense/contents of quantum entities, and in general of several mathematical constructs considered abstract. We show that this approach can be used in practice, and we suggest that it also can shed some light on the sense of the linearity -- the geometric property of vector spaces -- within the quantum framework.	computation;data structure;declarative programming;entity;functional approach;imperative programming;observable;quantum computing	Jerzy Karczmarczuk	2014		10.1145/2643135.2643162	quantum;computer science;operator;theoretical computer science;linearity;programming language;algorithm	PL	-13.088670144819472	5.851100716910215	68312
3025df1098b7c7e76f5c26e49a9e6587c28fce93	displaying modal logic, heinrich wansing	modal logic	Nuel Belnap’s “Display Logic” (1982) generalises Gentzen systems by allowing extra n-a y structural connectives in addition to Gentzen’s polyvalent comma. Structures are built up from formulae using these complex structural connectives and a sequent is just a pair of structures of the form X −→ Y . Inference rules are built from such sequents in the usual Gentzen way. The appellation “Logic” is unfortunately a misnomer since the display framework can be tailored to obtain purely syntactic calculi for a host of different logics. I therefore prefer the term “Display Calculi” and I will use it here in the hope that it catches on. By definition, every display calculus contains enough rules, determined by its particular structural connectives, such that any sequent X −→ Y containing some substructure Z can be transformed into an equivalent sequent of the form X′ −→ Z orZ −→ Y ′ in which the substructure Z is “displayed” as the whole of the right hand side or whole of the left hand side. This display property means that the cut rule has the particularly simple form shown below:	cut rule;logical connective;modal logic	Rajeev Goré	2000	Journal of Logic, Language and Information	10.1023/A:1008359116755	modal logic;normal modal logic;epistemology;computer science	Logic	-10.88404679256324	8.50187235441691	68350
21dba89e90466cffda3ed731cc910524450112f0	new helic-ii: a software tool for legal eeasoning	software tool;legal reasoning;logic programs	The new IL%?ZC-11 is a software tool for legal reasoning. It consists of two functions argumentation function and debating function. Argumentation function is retilzed by a typed logic programming language with generalization of rules and defea.sible reasoning based on priority of rules. Debating function is realized by meta knowledge which controls the argumentation function. This paper introduces overview of the new HELICH system. We show how legal knowledge is represented in the new HELIC-11 illustrated by presenting the example of an actual criminzd case.	programming language;programming tool;type theory	Katsumi Nitta;Masato Shibasaki;Tsuyoshi Sakata;Takahiro Yamaji;Wang Xianchang;Hiroshi Ohsaki;Satoshi Tojo;Iwao Kokubo;T. Anu Suzuki	1995		10.1145/222092.222260	legal expert system;case-based reasoning;computer science;knowledge management;model-based reasoning;software construction;reasoning system;automated reasoning;programming language	AI	-18.467970970589068	10.647544485438509	68513
165360ae06866a0f63bdb8f90a5ce46b5804dc62	on the weak distributivity game		Kamburelis, A., On the weak distributivity game, Annals of Pure and Applied Logic 66 (1994) 19-26. We study the game F&(K) related to weak distributivity of a given Boolean algebra 3. Consider the following implication: if S3 is weakly (w, rc)-distributive then player I does not have a winning strategy in the game F&(K). We show that this implication is true for proper ?Zi but it is not true in general.	binary prefix;boolean algebra	Anastasis Kamburelis	1994	Ann. Pure Appl. Logic	10.1016/0168-0072(94)90077-9	combinatorics;discrete mathematics;mathematics	AI	-8.20999380320985	11.514263481245033	68533
cb7681db40e4a331bb111cdfe1bcf0274fd87664	logic for update products and steps into the past	temporal logic;model transformation;modal logic;common knowledge;epistemic logic;dynamic epistemic logic	This paper provides a sound and complete proof system for a language Le+Y that adds to Dynamic Epistemic Logic (DEL) a discrete previous-time operator as well as single symbol formulas that partially reveal the most recent event that occured. The completeness theorem is by filtration followed by model unravelling and other model transformations. Decidability follows from the completeness proof. The degree to which it is important to include the additional single symbol formulas is addressed in a discussion about the difficulties of the completeness for a language LY that only adds the previous-time operator to DEL. Discussion is also given regarding the completeness for a language obtained by removing common knowledge operators from Le+Y .	decision problem;dynamic epistemic logic;epistemic modal logic;kripke semantics;proof calculus	Joshua Sack	2010	Ann. Pure Appl. Logic	10.1016/j.apal.2010.04.011	modal logic;predicate logic;dynamic logic;complete theory;normal modal logic;discrete mathematics;linear temporal logic;description logic;higher-order logic;epistemic modal logic;temporal logic;intermediate logic;bunched logic;computational logic;mathematics;logic;multimodal logic;second-order logic;algorithm;common knowledge;philosophy of logic	PL	-12.006260234309336	13.758586879690226	68559
556a350bc3dd9046aa1675d0f4676f8d57c8fb5d	stability of items: an experimental test		The words of a language are randomly replaced in time by new ones, but long since it was observed that words corresponding to some items (meanings) are less frequently replaced then others. Usually, the rate of replacement for a given item is not directly observable, but it is inferred by the estimated stability which, on the contrary, is observable. This idea goes back a long way in the lexicostatistical literature, nevertheless nothing ensures that it gives the correct answer. The family of Romance languages allows for a direct test of the estimated stabilities against the replacement rates since the protolanguage (Latin) is known and the replacement rates can be explicitly computed. The output of the test is threefold: rst, we prove that the standard approach which tries to infer the replacement rates trough the estimated stabilities is sound; second, we are able to rewrite the fundamental formula of Glottochronology for a non universal replacement rate (a rate which depends on the item), third, we give indisputable evidence that the stability ranking is far to be the same for di erent families of languages. This last result is also supported by comparison with the Malagasy family of dialects. As a side result we also provide some evidence that Vulgar Latin and not Late Classical Latin is at the root of modern Romance languages.	glottochronology;observable;randomness;rewrite (programming)	Michele Pasquini;Maurizio Serva	2018	CoRR		natural language processing;artificial intelligence;vulgar latin;arithmetic;glottochronology;nothing;computer science;observable;romance languages;classical latin;ranking	ML	-9.680669653077794	7.420866436773922	68577
d6071967a35db6d7f500e5ccbd3b297160e80715	on inter-expressibility of logical connectives in gödel fuzzy logic	fuzzy logic;propositional logic	In Gödel fuzzy propositional logic, neither conjunction nor implication is expressible (definable) in terms of the remaining three logical connectives. In classical propositional logic, propositions are associated with two truth values 1 (truth) and 0 (falsity). In fuzzy logics further (intermediate) truth values lying between 0 and 1 are possible. Usually the truth values are linearly ordered and it is common to assume that they are elements of the real interval [0, 1]. In Gödel fuzzy propositional logic G (see Gödel [5] and/or Hájek [6]), we deal with propositional formulas built up from (say denumerable infinite set of) propositional atoms using the logical connectives & (conjunction), ∨ (disjunction), → (implication) and ¬ (negation). The meaning of the four logical connectives is determined by their truth functions defined as follows. The truth function of conjunction and disjunction are the functions min (minimum) and max (maximum). The truth function of implication is the residuum function ⇒, where x⇒y = y if y < x and x⇒y = 1 otherwise. The truth function of negation is the function − defined by −x = x ⇒ 0 (so, in this paper, the symbol − does not denote subtraction). The real interval [0, 1] equipped with the functions min, max, ⇒ and − is called the standard G-algebra and denoted [0, 1]G. A truth evaluation is a function from propositional atoms to [0, 1]. In full analogy to the classical case, any truth evaluation has a uniquely determined extension defined on all propositional formulas and respecting the truth functions of the standard G-algebra defined above. A propositional formula A is a G-tautology if v(A) = 1 for each truth evaluation v. An example ∗Philosophical Faculty of the Charles University, Praha, and Institute of Computer Science of the Academy of Sciences of the Czech Republic, Praha †This paper was supported by grant 401/98/0383 of the Grant Agency of the Czech Republic. ‡Philosophical Faculty of the Charles University, Praha	academy;computer science;fuzzy logic;gödel;logical connective;maxima and minima;propositional calculus;t-norm fuzzy logics	Vítezslav Svejdar;Kamila Bendová	2000	Soft Comput.	10.1007/s005000000036	fuzzy logic;dynamic logic;monoidal t-norm logic;zeroth-order logic;decidability;t-norm fuzzy logics;non-classical logic;discrete mathematics;higher-order logic;many-valued logic;intuitionistic logic;computer science;intermediate logic;artificial intelligence;machine learning;first-order logic;mathematics;propositional variable;well-formed formula;propositional calculus;atomic formula;logic;algorithm;philosophy of logic;rule of inference;autoepistemic logic	AI	-10.249519955382729	10.306303539594746	68610
1856190f3cd107454eb8b99c8ff4b1cf62b10a22	a theorem concerning a restricted rule of substitution in the field of propositional calculi. ii			first-order logic;propositional calculus	Boleslaw Sobocinski	1974	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093891486	absorption (logic);discrete mathematics;propositional variable;negation introduction;mathematics	Logic	-11.81097226827619	12.970904452806224	68818
ef4b42290a68e9dc24a61703fbf3811b518abc78	epistemic reasoning in logic programs	answer set programming;computational complexity;consistency checking;epistemic logic;logic programs	Although epistemic logic programming has an enhanced capacity to handle complex incomplete information reasoning and represent agents’ epistemic behaviours, it embeds a significantly higher computational complexity than non-disjunctive and disjunctive answer set programming. In this paper, we investigate some important properties of epistemic logic programs. In particular, we show that Lee and Lifschitz’s result on loop formulas for disjunctive logic programs can be extended to a special class of epistemic logic programs. We also study the polysize model property for epistemic logic programs. Based on these discoveries, we identify two non-trivial classes of epistemic logic programs whose consistency checking complexity is reduced from PSPACE-complete to NP-complete and Σ2 -complete respectively. We observe that many important applications on epistemic representation fall into these two classes of epistemic logic programs.	answer set programming;computational complexity theory;disjunctive normal form;epistemic modal logic;logic programming;np-completeness;pspace-complete;stable model semantics;vladimir lifschitz	Yan Zhang	2007			predicate logic;dynamic logic;normal modal logic;discrete mathematics;description logic;higher-order logic;epistemic modal logic;horn clause;stable model semantics;many-valued logic;computer science;intermediate logic;artificial intelligence;answer set programming;computational logic;mathematics;computational complexity theory;logic programming;multimodal logic;algorithm;philosophy of logic	AI	-15.81360263362429	12.831925382545974	68930
3645f5b7a13dded5e5fa48fb20803da780726590	some non-classical approaches to the brandenburger-keisler paradox	paraconsistency;epistemic game theory	In this paper, we discuss a well-known self-referential paradox in foundational game theory, the Brandenburger Keisler paradox. We approach the paradox from two different perspectives: non-well-founded set theory and paraconsistent logic. We show that the paradox persists in both frameworks for category theoretical reasons, but, with different properties.	category theory;epr paradox;game theory;moravec's paradox;paraconsistent logic;self-reference;set theory	Can Baskent	2015	Logic Journal of the IGPL	10.1093/jigpal/jzv001	paraconsistent logic;epistemology;skolem's paradox;computer science;mathematics;mathematical economics;algorithm	AI	-14.494555630773657	5.60626269612425	69187
07e8356fd14c144d52c94e9931bb1bfb32004069	the markgraf karl refutation procedure	theorem proving;theorem prover;domain specificity	The goal of the MKRP project is the development of a theorem prover which can be used as an inference engine in various applications, in particular it should be capable of proving significant mathematical theorems. Our first implementation, the Markgraf Karl Refutation Procedure1 (MKRP) realizes some of the ideas we have developed to this end. It is a general purpose resolution based deduction system that exploits the representation of formulae as a graph (clause graph). The main features are its well tailored selection components, heuristics and control mechanisms for guiding the search for a proof. This paper gives an overview of the system. It summarizes and evaluates our experience with the system in particular, and the logics we use as well as the clause graph approach: as 1990 marks the fifteenth birthday of the system, the time may have come to ask: “Was it worth the effort?”	automated theorem proving;control system;formal system;graph (discrete mathematics);heuristic (computer science);inference engine;karl lehenbauer;natural deduction;resolution (logic)	Karl-Hans Bläsius;Norbert Eisinger;Jörg H. Siekmann;Gert Smolka;Alexander Herold;Christoph Walther	1981			computer science;artificial intelligence;pure mathematics;mathematics;automated theorem proving;programming language;algorithm	AI	-18.739944034606324	17.252474733186173	69238
c291e055f624623612ba812820e7933bd754380d	finite models for deterministic propositional dynamic logic	propositional dynamic logic		deterministic finite automaton;dynamic logic (modal logic)	Mordechai Ben-Ari;Joseph Y. Halpern;Amir Pnueli	1981		10.1007/3-540-10843-2_21	modal logic;propositional formula;dynamic logic;zeroth-order logic;t-norm fuzzy logics;modal μ-calculus;classical logic;resolution;linear temporal logic;description logic;horn-satisfiability;tautology;many-valued logic;interval temporal logic;intuitionistic logic;computer science;intermediate logic;propositional variable;well-formed formula;atomic formula;autoepistemic logic	Theory	-12.86888516172832	13.265350137172842	69360
310422e62d8d04cd168d3314aeebea2685df6523	a third-order bounded arithmetic theory for pspace	teoria demonstracion;theorie preuve;game theory;proof theory;teoria juego;strategie joueur;theorie jeu;program verification;arithmetique;estrategia jugador;verificacion programa;aritmetica;arithmetics;bounded arithmetic;propositional proof complexity;verification programme;player strategy	We present a novel third-order theory W 1 1 of bounded arithmetic suitable for reasoning about PSPACE functions. This theory has the advantages of avoiding the smash function symbol and is otherwise much simpler than previous PSPACE theories. As an example we outline a proof in W 1 1 that from any configuration in the game of Hex, at least one player has a winning strategy. We then exhibit a translation of theorems of W 1 1 into families of propositional tautologies with polynomial-size proofs in BPLK (a recent propositional proof system for PSPACE and an alternative to G). This translation is clearer and more natural in several respects than the analogous ones for previous PSPACE theories.	hex;pspace;polynomial;proof calculus;propositional proof system;theory	Alan Skelley	2004		10.1007/978-3-540-30124-0_27	game theory;discrete mathematics;pspace;computer science;artificial intelligence;proof theory;mathematics;programming language;algorithm	Theory	-13.011281464057948	15.578885522262448	69433
357b343f8c96f4238305704b718e9bf9f0e40abc	on free type definitions in z	free type definitions;axiom of choice;set theory;expressive power	Recent discussions in the Z community have considered the issue of the consistency of the free type construct in Z. A key question is whether free type definitions which met the criterion for consistency given in the Z Reference Manual, [5], are conservative over Zermelo set theory (i.e. ZF without the axiom of replacement). The main purpose of this paper is to give an introduction to the issues and to show that the answer to this question is “yes” (given the axiom of choice). A by-product of the arguments we give here is that the criterion given in the Z reference manual may be replaced by an intuitively simpler one without loss of expressive power from the theoretical or practical point of view.	definition;eisenstein's criterion;expressive power (computer science);fixed point (mathematics);freetype;hol (proof assistant);type theory;zermelo–fraenkel set theory	Rob Arthan	1991			discrete mathematics;mathematics;axiom of choice;algorithm	Theory	-9.22387957464553	13.488076575227485	69735
41d80656bf62e508c9c9f06630264eaa4bb8be82	a note on the theory sid<ω of stratified induction	000 computer science knowledge systems;510 mathematics	We introduce and analyse a theory of finitely stratified general inductive definitions over the natural numbers, SID<ω, and establish its proof-theoretic ordinal, φε0(0). The definition of SID<ω bears some similarities with D. Leivant’s ramified theories for finitary inductive definitions.	mathematical induction;ordinal data;theory	Florian Ranzi;Thomas Strahm	2014	Math. Log. Q.	10.1002/malq.201300063	mathematical analysis;discrete mathematics;topology;computer science;mathematics;algorithm;algebra	NLP	-9.06857453157711	12.616336528841742	69757
60bee4e765b98a9c65efc5a390407ac8b92491bb	choice and well-ordering	logique mathematique;relacion orden;ordering;logica matematica;mathematical logic;relation ordre;category theory;theorie categorie;teoria categoria	It is one thing to say that the axiom of choice implies that everything may be well-ordered. It is quite another thing to say that if a set has a choice function then it has a well-ordering. Even in the classical setting the difference shows in the length of proof: using the (global) axiom of choice one may quickly apply a Zorn's lemma argument to the family of partial well-orderings on a set to obtain an entire well-ordering. The difference is clearest in the intuitionistic setting, so clear that a number of us have been searching for a counterexample. The main purpose of the following is to end that search.	intuitionistic logic;max august zorn	Peter J. Freyd	1987	Ann. Pure Appl. Logic	10.1016/0168-0072(87)90060-1	mathematical logic;topology;order theory;calculus;mathematics;algorithm;category theory	Logic	-6.8771065985971225	12.630579048858836	69997
0b77072bc152370b82979e9d41fe75f0c9edf7fa	ground nonmonotonic modal logics for knowledge representation	possible worlds;modal logic;knowledge representation	In this paper we discuss ground logics, a family of nonmonotonic modal logics, with the goal of using them in knowledge representation. Ground logics are based on the idea of minimizing the knowledge expressed by non-modal formulae. The nonmonotonic character of the logics can be described either by a x-point equation or by means of a preference relation on possible-worlds models. We address both the epistemological and the computational properties of ground logics. We discuss their representational features and provide a thorough comparison with McDermott and Doyle logics. Then, we show that reasoning in ground logics is p 3-hard, and prove that p 3 is also an upper bound for reasoning in the major ground logics. Moreover, we identify some special cases where the complexity of reasoning in ground logics is lower than in the general case.	drew mcdermott;knowledge representation and reasoning;modal logic;non-monotonic logic;possible world	Francesco M. Donini;Daniele Nardi;Riccardo Rosati	1995			multimodal logic;discrete mathematics;dynamic logic (modal logic);modal logic;modal operator;normal modal logic;modal μ-calculus;accessibility relation;epistemic modal logic;mathematics	AI	-14.563421240527159	7.19104305844227	70133
6ee87a3b0b034160cf295d64c457db3b76db4b17	a kernel revision operator for terminologies	revision;description logic;incoherence;belief revision	In this paper, we propose a new method for revising terminologies in description logic-based ontologies. Our revision method is a reformulation of the kernel revision operator in belief revision. We first define our revision operator for terminologies in terms of MIPS (minimal incoherence-preserving sub-terminologies), and we show that it satisfies some desirable logical properties. Second, two concrete algorithms are developed to implement the revision operator.	algorithm;belief revision;description logic;format-preserving encryption;kernel (operating system);ontology (information science)	Guilin Qi;Peter Haase;Zhisheng Huang;Jeff Z. Pan	2008			operator (computer programming);belief revision;kernel (linear algebra);description logic;natural language processing;ontology (information science);theoretical computer science;artificial intelligence;computer science	AI	-17.267036917960098	11.462102815022188	70228
dec48e4442c9ff991d09ca4267daa663169c77ef	theory of truth degrees of formulas in łukasiewiczn-valued propositional logic and a limit theorem	ukasiewicz n valued propositional logic truth degree limit theorem integrated truth degree 321;lukasiewicz n vallied propositional logic;propositional logic;truth degree;321 ukasiewicz n valued propositional logic truth degree limit theorem integrated truth degree;li bijing wang guojun lukasiewicz n逻辑值 极限理论 真实程度 真函数 离散值 theory of truth degrees of formulas in lukasiewicz n valued propositional logic and a limit theorem;limit theorem;integrated truth degree	The concept of truth degrees of formulas in Łukasiewiczn-valued propositional logicL n is proposed. A limit theorem is obtained, which says that the truth functionτ n induced by truth degrees converges to the integrated truth functionτ whenn converges to infinite. Hence this limit theorem builds a bridge between the discrete valued Łukasiewicz logic and the continuous valued Łukasiewicz logic. Moreover, the results obtained in the present paper is a natural generalization of the corresponding results obtained in two-valued propositional logic.	automated theorem proving;propositional calculus;łukasiewicz logic	Bijing Li;Guojun Wang	2005	Science in China Series F: Information Sciences	10.1360/122005-47	propositional formula;fuzzy logic;zeroth-order logic;t-norm fuzzy logics;discrete mathematics;resolution;tautology;many-valued logic;intuitionistic logic;computer science;intermediate logic;łukasiewicz logic;first-order logic;truth function;mathematics;logical connective;propositional variable;well-formed formula;propositional calculus;truth value;second-order logic;algorithm;autoepistemic logic	AI	-10.924913538203006	11.979263756728212	70309
9c73ba4a3c12a47bb88cb677112cd2656e194bf9	qualitative and quantitative conditions for the transitivity of perceived causation:	behavioral experiments;conditional independence;03b48;non monotonic reasoning;68t37;03b60;transitivity;causation	If A caused B and B caused C, did A cause C? Although laypersons commonly perceive causality as being transitive, some philosophers have questioned this assumption, and models of causality in artificial intelligence are often agnostic with respect to transitivity. We consider two formal models of causation that differ in the way they represent uncertainty. The quantitative model uses a crude probabilistic definition, arguably the common core of more sophisticated quantitative definitions; the qualitative model uses a definition based on nonmonotonic consequence relations. Different sufficient conditions for the transitivity of causation are laid bare by the two models: The Markov condition on events for the quantitative model, and a so-called saliency condition (A is perceived as a typical cause of B) for the qualitative model. We explore the formal and empirical relations between these sufficient conditions, and between the underlying definitions of perceived causation. These connections shed light on the range of applicability of each model, contrasting commonsense causal reasoning (supposedly qualitative) and scientific causation (more naturally quantitative). These speculations are supported by a series of three behavioral experiments.	ambiguous name resolution;artificial intelligence;causality;commonsense reasoning;correlation does not imply causation;experiment;fits;markov chain;mathematical model;risk management;semantic reasoner;vertex-transitive graph	Jean-François Bonnefon;Rui Da Silva Neves;Didier Dubois;Henri Prade	2012	Annals of Mathematics and Artificial Intelligence	10.1007/s10472-012-9291-0	probabilistic causation;causation;conditional independence;artificial intelligence;mathematics;transitive relation	AI	-14.980022792076717	5.508057150069561	70418
dea8b9a951d602044cb252058a07fbc1f68ee949	a general framework for computing maximal contractions	maximal contraction;maximal contraction minimal inconsistent subset computability algorithms;computability;minimal inconsistent subset;algorithms;jie luo 算法框架 收缩 计算 极小不协调子集 一阶语言 公式 com 不变量 a general framework for computing maximal contractions	This paper investigates the problem of computing all maximal contractions of a given formula set Γ with respect to a consistent set Δ of atomic formulas and negations of atomic formulas. We first give a constructive definition of minimal inconsistent subsets and propose an algorithmic framework for computing all minimal inconsistent subsets of any given formula set. Then we present an algorithm to compute all maximal contractions fromminimal inconsistent subsets. Based on the algorithmic framework and the algorithm, we propose a general framework for computing all maximal contractions. The computability of the minimal inconsistent subset and maximal contraction problems are discussed. Finally, we demonstrate the ability of this framework by applying it to the first-order language without variables and design an algorithmfor the computation of all maximal contractions.	algorithm;atomic formula;belief revision;computability;computable function;computation;contraction mapping;download;entity–relationship model;experiment;first-order logic;first-order predicate;maximal set;software development;worst-case scenario	Jie Luo	2012	Frontiers of Computer Science	10.1007/s11704-012-2044-8	computer science;computability;algorithm	Logic	-13.657253163808459	15.674148102354003	70586
4123b222144d0a85ea3d6871d404cb7cf339768d	expressive description logics	expressive description;expressive construct;basic description;advanced reasoning technique;expressive description logic;reasoning w;finite model reasoning;finite model property;chapter lack;general inclusion axiom;description logics;description logic	This chapter covers extensions of the basic description logics introduced in Chapter 2 by very expressive constructs that require advanced reasoning techniques. In particular, we study reasoning in description logics that include general inclusion axioms, inverse roles, number-restrictions, reflexive-transitive closure of roles, fixpoint constructs for recursive definitions, and relations of arbitrary arity. The chapter will also address reasoning w.r.t. knowledge bases including both a TBox and an ABox, and discuss more general ways to treat objects. Since the logics considered in the chapter lack the finite model property, finite model reasoning is of interest and will also be discussed. Finally, we mention several extensions to description logics that lead to undecidability, confirming that the expressive description logics considered in this chapter are close to the boundary between decidability and undecidability.	abox;description logic;finite model property;fixed point (mathematics);knowledge base;recursion;tbox;transitive closure;undecidable problem	Diego Calvanese;Giuseppe De Giacomo	2003			t-norm fuzzy logics;discrete mathematics;mathematics;algorithm	AI	-15.694295861817812	12.60412188599513	70772
ace7a7239a948740706e80423815538c3fb9e09a	conservative extensions and satisfiability in fragments of first-order logic: complexity and expressive power			first-order logic;first-order reduction	Mauricio Martel	2018				Logic	-13.82590681721206	14.37599873739567	70921
c64e04b97da51181ecb3431fe0b959da03f617ab	matching of service feature diagrams based on linear logic	thesis	Managing variability is essential for an efficient implementation of end-user services that can be customised to individual needs. Apart from variations in selection and orchestration, also third-party services may have to be customisable. Although feature diagrams provide a high-level visual notation for variability, their use for specifying variability of services raises the problem of matching a required feature diagram against a set of provided ones. In particular, the established interpretation of feature diagrams in Propositional Logic is not expressive enough for matching in the context of service variability. The problem becomes more visible when a certain requirement is going to be satisfied by a combination of multiple offers with overlapping features, which is a consequence of idempotence in Propositional Logic. To address this problem, we propose service feature diagrams with semantics in Linear Logic. Linear Logic only allows the use of idempotence on the propositions with modalities. The permissible selection of features of a service feature diagram is called an instance diagram. We provide rules to obtain instance diagrams from the service feature diagram. The semantics of instance diagrams are also supported by Linear Logic. This thesis not only introduces service feature diagrams, but also formalises their matching as linear deduction. We propose two categories of rules to verify diagrammatically if a collection of service descriptions satisfy the requirements. First, graphical matching rules are used to match service feature diagrams of requestor and provider. Second, graphical merging rules are used to merge multiple feature diagrams contributing to satisfy the requestor’s demands. We prove the correctness of these rules using the inference system of Linear Logic. We also provide the analysis of graphical rules and show that the application of the graphical rules is independent of the context in service feature diagram, i.e., graphical rule can be applied anywhere in a service feature diagram. my mother and the sweet memories of my father, the greatest sources of inspiration in my life. Acknowledgement First of all, I would pay my gratitude to Allah (S.W.T.), The Most Merciful and The Mighty, for all His blessings. One of His great blessings on me was supervision of Professor Reiko Heckel. I learned from him what is research about. This thesis would not have been possible without his supervision. He was always available for help with an encouraging attitude whenever I got stuck. His comments and feedback opened new directions in my work. I sincerely appreciate his time and efforts which he has been providing from the start of my PhD. I will never forget his efforts in reading and giving very useful and in-time feedback on drafts of my thesis. I would probably have missed the opportunity to work with Professor Reiko, had not Hazara University, Pakistan started Faculty Development Scheme under Hazara University Post-Quake Development Plan. I also thank Higher Education Commission, Pakistan for providing financial assistance in this scheme. I am grateful to Professor José Luiz Fiadeiro. He was always available whenever I needed his help. His critical questions on the earlier versions of our work were very helpful, especially in formalising the matching. I would like to thank Dr. Krzysztof Czarnecki for introducing us to the Propositional Logic semantics of classical feature diagrams. I can not forget Dr. Dénes Bisztray for suggesting to use feature diagrams in our work during one of the group meetings. I want to thank Professor Fernando Orejas, whom I met during his visit to the University of Leicester in Summer 2009. His visit contributed to the partial matching of visual contracts. I would like to thank my examiners Professor Richard Paige and Dr. Emilio Tuosto for their thorough and detailed review of this thesis. Their questions in a friendly environment opened new directions of my research and enabled the substantial improvement of this thesis. The time spent in Computer Science Department has been great fun due to the presence of my friendly colleagues. It has been a real pleasure to share the office with Ajab, Fawad, Nosheen, Shakeel, and Stelious. The friendly discussions of Niaz, Ishrat, Dursun, and Muzammil were always enjoyable for me during my stay at the department. I am very much thankful to the teaching and administrative staff of our department for their in-time support, especially Dr. Fer-Jan de Vries for his help. Of course, I thank my family for their support, their interest and for always being there when I needed them most. My father was very willing to see me as a PhD, but he passed away in January 2012. I really miss my father at this moment. His golden words will always remain with me as the guiding principles of my life. The continuous support and prays of my family make it possible for me to pass the long years of my PhD studies.		Muhammad Naeem	2012			theoretical computer science;machine learning;mathematics;algorithm	DB	-8.184605564461808	7.430289916855909	70934
39439fce3f1bc97895987dadf1917b768a767cf8	glivenko and kuroda for simple type theory		Glivenko’s theorem states that an arbitrary propositional formula is classically provable if and only if its double negation is intuitionistically provable. The result does not extend to full first-order predicate logic, but does extend to first-order predicate logic without the universal quantifier. A recent paper by Zdanowski shows that Glivenko’s theorem also holds for secondorder propositional logic without the universal quantifier. We prove that Glivenko’s theorem extends to some versions of simple type theory without the universal quantifier. Moreover we prove that Kuroda’s negative translation, which is known to embed classical first-order logic into intuitionistic first-order logic, extends to the same versions of simple type theory. We also prove that the Glivenko property fails for simple type theory once a weak form of functional extensionality is included.	first-order logic;first-order predicate;kuroda normal form;logical constant;propositional calculus;provable security;quantifier (logic);type theory;universal quantification	Chad E. Brown;Christine Rizkallah	2014	J. Symb. Log.	10.1017/jsl.2013.10	propositional formula;predicate logic;discrete mathematics;double negation;extensionality;if and only if;type theory;propositional calculus;mathematics	Logic	-10.369902842604533	14.237405497690583	70955
eec96b667ad622b30218e77481d8a05d64ec5d7a	scalar and vectorial mu-calculus with atoms		We study an extension of modal mu-calculus to sets with atoms and we study its basic properties. Model checking is decidable on orbit-finite structures, and a correspondence to parity games holds. On the other hand, satisfiability becomes undecidable. We also show expressive limitations of atom-enriched mu-calculi, and explain how their expressive power depends on the structure of atoms used, and on the choice between basic or vectorial syntax.	atom;expressive power (computer science);modal μ-calculus;model checking;scalar processor;undecidable problem	Bartek Klin;Mateusz Lelyk	2018	CoRR		discrete mathematics;model checking;mathematics;scalar (physics);satisfiability;syntax;parity (mathematics);undecidable problem;decidability;atom	Logic	-12.146618845057224	15.932327146895298	71323
8c1fe84a78720cf13f48896fdd89124812b456e7	elements for a formal model of intentional systems	phenomenology;formal semantics;intentional systems;intentional processes;intentionality	This paper introduces elementary concepts needed to define a formal, computationally oriented, model for intentional systems. First, the paper briefly reviews the central concept of intentionality, to contextualize the work. Then, it characterizes the main types of intentional acts, defines the concepts of intentional process and intentional system, and gives the basis of the formal model of such systems. Next in a brief case study, a formal model for a sample constative intentional system is presented and discussed. Following, the features that are still lacking to achieve a full-fledged formal model of intentional systems are indicated. Finally, the relationship between the formal model of intentional systems introduced here and the usual semantical models for formal languages is discussed.		Antônio Carlos da Rocha Costa	2016	Electr. Notes Theor. Comput. Sci.	10.1016/j.entcs.2016.09.006	computer science;phenomenology;artificial intelligence;formal semantics	Logic	-15.398922889526919	4.184840940550672	71339
5032283b902124099a14f82ecb02232cefa68543	an institution-independent proof of the beth definability theorem	logic;mathematical logic and foundations;philosophy;computational linguistics;model theory	A few results generalizing well-known classical model theory ones have been obtained in the framework of institutions these last two decades (e.g. Craig interpolation, ultraproduct, elementary diagrams). In this paper, we propose a generalized institutionindependent version of the Beth definability theorem.	diagram;elementary;evert willem beth;interpolation	Marc Aiguier;Fabrice Barbier	2007	Studia Logica	10.1007/s11225-007-9043-z	abstract model theory;mathematical logic;philosophy;epistemology;computer science;artificial intelligence;computational linguistics;pure mathematics;mathematics;logic;algorithm;model theory;algebra	Logic	-10.736633073040634	11.31849387365999	71348
a43c7e5a2144f08b3ff956dd9bfbe033c1d55ac3	on building constructive formal theories of computation noting the roles of turing, church, and brouwer	nuprl;proof assistants;information science constructive formal theories computation theories constructive type theories computer science proof assistants logic constructive mathematics;protocols semantics computer science computational modeling calculus computers;coq;flp theorem;automated reasoning;attack tolerance;protocol synthesis;intuitionistic logic;type theory;logic of events;formal logic;computer science;completeness;protocol synthesis attack tolerance automated reasoning coq completeness flp theorem intuitionistic logic logic of events nuprl proof assistants propositions as types;propositions as types;type theory computer science formal logic	In this article I will examine a few key concepts and design decisions that account for the high value of implemented constructive type theories in computer science. I'll stress the historical fact that these theories, and the proof assistants that animate them, were born from a strong partnership linking computer science, logic, and mathematics. I will recall how modern type theory researchers built on deep insights from the earliest pioneers: Turing--the first computer scientist, Church--the patriarch of logic in computer science, and Brouwer--a singular pioneer of intuitionism and constructive mathematics. They created solid intellectual ground on which to build a formal implemented constructive theory of computation whose influence will be felt well beyond computing and information science alone. All generations of constructive type theory researchers since this beginning have had leaders from all three disciplines. Much of the seminal modern work creating these type theories and their proof assistants was presented in LICS proceedings, and LICS could be a natural home for future work in this flourishing area which is the epitome of logic in computer science.	brouwer fixed-point theorem;computer scientist;information science;intuitionistic type theory;proof assistant;symposium on logic in computer science;theory (mathematical logic);theory of computation;turing	Robert L. Constable	2012	2012 27th Annual IEEE Symposium on Logic in Computer Science	10.1109/LICS.2012.9	completeness;intuitionistic logic;computer science;pure mathematics;mathematics;automated reasoning;programming language;logic;type theory;algorithm	Logic	-10.34717633984886	5.426592855227601	71470
db79932c62373216085cb7810d84474b2d8949c8	a simple and complete model theory for intensional and extensional untyped λ-equality		We present a sound and complete model theory for theories of β-reduction with or without η-expansion. We then show in what conditions we obtain models of β-equality and βη-equality.	intensional logic;theory	Michael Gabbay	2014			extensional definition;discrete mathematics;model theory;mathematics	NLP	-12.106693756316377	15.196066182836367	71519
e3eff171aaf8ac524c2f314cc071a3c2da7718e4	optimising the representation and evaluation of semiring combination constraints	soft constraints;constraint satisfaction;constraint satisfaction problem	  Classical constraint satisfaction problems (CSPs) provide an expressive formalism for modeling and solving many real-world  problems. However, classical CSPs prove to be restrictive in any situation where uncertainty, fuzziness, probability, optimisation  or partial satisfaction are intrinsic. Soft constraints alleviate many of the restrictions which classical constraint satisfaction  impose. In particular, soft constraints provide a basis for capturing notions such as vagueness, uncertainty and cost in the  CSP model.    		Jerome Kelleher;Barry O'Sullivan	2003		10.1007/978-3-540-45193-8_102	constraint logic programming;mathematical optimization;constraint programming;combinatorics;discrete mathematics;decomposition method;constraint satisfaction;constraint learning;computer science;constraint graph;constraint satisfaction dual problem;mathematics;complexity of constraint satisfaction;constraint;constraint satisfaction problem;hybrid algorithm;local consistency	NLP	-17.846221301725453	13.868324671049809	71714
0b384e9a15ce13e17dd890799569ebf6f16b31e8	managing inconsistent specifications: reasoning, analysis, and action	managing inconsistency;ucl;quasi classical;discovery;paraconsistent logics;theses;conference proceedings;requiriements specification;digital web resources;ucl discovery;open access;ucl library;classical logic;book chapters;open access repository;design theory;viewpoints;ucl research;paraconsistent logic	In previous work, we advocated continued development of specifications in the presence of inconsistency. To support this, we used classical logic to represent partial specifications and to identify inconsistencies between them. We now present an adaptation of classical logic, which we term quasi-classical (QC) logic, that allows continued reasoning in the presence of inconsistency. The adaptation is a weakening of classical logic that prohibits all trivial derivations, but still allows all resolvants of the assumptions to be derived. Furthermore, the connectives behave in a classical manner. We then present a development called labeled QC logic that records and tracks assumptions used in reasoning. This facilitates a logical analysis of inconsistent information. We discuss that application of labeled QC logic in the analysis of multiperspective specifications. Such specifications are developed by multiple particpants who hold overlapping, often inconsistent, views of the systems they are developing.	logical connective	Anthony Hunter;Bashar Nuseibeh	1998	ACM Trans. Softw. Eng. Methodol.	10.1145/292182.292187	classical logic;paraconsistent logic;computer science;artificial intelligence;designtheory;programming language;algorithm	AI	-16.211131830603897	7.330851619429414	71727
413f6dd340f9fd72893222f1e1de0b4072fb82c1	applying temporal logic to analysis of behavior of cooperating logic programs	time complexity;temporal logic;satisfiability;decision problem;logic programs;deductive databases	We consider systems of cooperating logic programs which generalize dynamic deductive databases (DDDBs) from [1,2]. Some properties of the system behavior are defined which ensure an infinite steady life of the system. Decision problems for these properties of cooperating productional logic programs are investigated. It is shown that these problems are reducible to the satisfiability problem for the propositional temporal logic of branching time. It follows that stability problems for the cooperating productional logic programs are decidable with the exponential time complexity.	logic programming;temporal logic	Michael I. Dekhtyar;Alexandre Ja. Dikovsky;Mars K. Valiev	1999		10.1007/3-540-46562-6_20	predicate logic;dynamic logic;zeroth-order logic;discrete mathematics;linear temporal logic;description logic;logic optimization;higher-order logic;interval temporal logic;intermediate logic;theoretical computer science;bunched logic;computational logic;mathematics;substructural logic;multimodal logic;algorithm;temporal logic of actions;autoepistemic logic	Theory	-15.194725857141504	13.442738872468237	71762
1714fd8eac389dc2f941f78f2815593c9a14e173	an action description language for iterated belief change	action language;logic programs;belief change	We are interested in the belief change that occurs due to a sequence of ontic actions and epistemic actions. In order to represent such problems, we extend an existing epistemic action language to allow erroneous initial beliefs. We define a nonMarkovian semantics for our action language that explicitly respects the interaction between ontic actions and epistemic actions. Further, we illustrate how to solve epistemic projection problems in our new language by translating action descriptions into extended logic programs. We conclude with some remarks about a prototype implementation of our work.	action description language;action language;iterated function;ontic;prototype	Aaron Hunter;James P. Delgrande	2007			action language;computer science;artificial intelligence;mathematics;algorithm	AI	-17.069062945373016	6.125150367209644	71811
d9e2041ea1888cf002c116b2a0853e808db82f2b	notes on the space requirements for checking satisfiability in modal logics	satisfiability;modal logic	Recently, there has been growing attention to the space requirements of tableau methods (see for example [7], [1], [12]). We have proposed in [10] a method of reducing modal consequence relations to the global and local consequence relation of (polymodal) K. The reductions used there did however not establish good time complexity bounds. In this note we shall use reduction functions to obtain rather sharp space bounds. These bounds can also be applied to show completeness of ordinary tableau systems, which in turn yield space bounds that are slightly different from the ones derived by applying the reduction functions alone. It has been shown by Hudelmaier ([7]) that satisfiability in S4 is O(n log n)– space computable, while satisfiability in K and KT are O(n log n)–space computable. AnO(n log n)–space bound for KD has been obtained by Basin, Matthews and Viganò ([1]). Viganò ([15]) has shown that satisfiability in K4, KD4 and S4 is in O(n log n)–space. Nguyen has reduced these bounds to O(n log n) for K4, K4D and S4 in [12]. The bound for K has been improved to O(n) by Hemaspaandra in [5]. We shall deal here with an abstract method for obtaining space bounds, using reduction functions. Reduction functions have been introduced in [9] and further developed in [10]. These functions were used to obtain a number of folklore results on standard modal systems in a uniform way. Examples were the finite model property and interpolation, but also complexity. However, the bounds for local satisfiability obtained there were not good enough. Here we shall improve these results rather drastically. In some cases we shall obtain linear bounds (namely for K.D, K.alt1), while in other cases we shall obtain a bound which is a product of the number of subformulae and the modal depth. In some cases this is somewhat less than the best known result (it can be quadratic in the length), in others it is better. Typically, with the help of tableau methods we can also establish the O(n log n) space bound for most systems. The research for this paper has been made possible by a Heisenberg– grant by the Deutsche Forschungsgemeinschaft. I wish to express my thanks Advances in Modal Logic, Volume 4, 1–22. c © 2002, by World Scientific Publishing Co. Pte. Ltd.	best, worst and average case;computable function;existential quantification;finite model property;interpolation;iterative method;long division;method (computer programming);method of analytic tableaux;modal depth;modal logic;principle of good enough;quadratic function;requirement;runge–kutta methods;time complexity	Marcus Kracht	2002			modal logic;combinatorics;discrete mathematics;philosophy;epistemology;mathematics;algorithm;satisfiability	Theory	-9.562120754277888	14.370386713857119	72026
5c27a94335aaf1acabe5ed9c69bc35972d5aa6f3	a standard model of peano arithmetic with no conservative elementary extension	second order;satisfiability;boolean algebra;standard model;peano arithmetic;model theory	The principal result of this paper answers a long-standing question in the model theory of arithmetic [KS, Question 7] by showing that there exists an uncountable arithmetically closed family A of subsets of the set ω of natural numbers such that the expansion ΩA := (ω, +, ·, X)X∈A of the standard model of Peano arithmetic has no conservative elementary extension, i.e., for any elementary extension ΩA = (ω ∗, · · ·) of ΩA, there is a subset of ω∗ that is parametrically definable in ΩA but whose intersection with ω is not a member of A. Inspired by a recent question of Gitman and Hamkins, we also show that the aforementioned family A can be arranged to further satisfy the curious property that forcing with the quotient Boolean algebra A/FIN (where FIN is the ideal of finite sets) collapses א1 when viewed as a notion of forcing.	boolean algebra;peano axioms	Ali Enayat	2008	Ann. Pure Appl. Logic	10.1016/j.apal.2008.07.005	boolean algebra;standard model;mathematical analysis;discrete mathematics;robinson arithmetic;topology;pure mathematics;second-order arithmetic;true arithmetic;mathematics;non-standard model of arithmetic;peano axioms;second-order logic;algorithm;model theory;algebra;satisfiability	Logic	-4.878732727406323	12.682741407231521	72044
5cf01c02191bb5fe6ff7f1355ed02f86a6a46c3a	modal characterisations of probabilistic and fuzzy bisimulations	会议论文	This paper aims to investigate bisimulation on fuzzy systems. For that purpose we revisit bisimulation in the model of reactive probabilistic processes with countable state spaces and obtain two findings: (1) bisimilarity coincides with simulation equivalence, which generalises a result on finite-state processes originally established by Baier; (2) the modal characterisation of bisimilarity by Desharnais et al. admits a much simpler completeness proof. Furthermore, inspired by the work of Hermanns et al. on probabilistic systems, we provide a sound and complete modal characterisation of fuzzy bisimilarity.	bisimulation;fuzzy control system;fuzzy logic;hennessy–milner logic;modal logic;semantic interpretation;simulation;state space;turing completeness	Yuxin Deng;Hengyang Wu	2014		10.1007/978-3-319-11737-9_9	computer science	Logic	-12.13419958653878	14.90507615580409	72070
51c51e2c10d05cf9809b8c7aa087b1de8aeeaef7	cuts for circular proofs		One of the authors introduced in [2] a calculus of circular proofs for studying the computability arising from the following categorical operations: finite products and coproducts, initial algebras, final coalgebras. The calculus of [2] is cut-free; yet, even if sound and complete for provability, it lacks an important property for the semantics of proofs, namely fullness w.r.t. the class of natural categorical models called μ-bicomplete category in [3]. We fix, with this work, this problem by adding the cut rule to the calculus. To this goal, we need to modify the syntactical constraints on the cycles of proofs so to ensure soundness of the calculus and at same time local termination of cut-elimination. The enhanced proof system fully represents arrows of the intended model, a free μ-bicomplete category. We also describe a cut-elimination procedure as a model of computation arising from the above mentioned categorical operations. The procedure constructs a cut-free proof-tree with infinite branches out of a finite circular proof with cuts.	computability;cut rule;interpretation (logic);model of computation;proof calculus	Jérôme Fortier;Luigi Santocanale	2013			algorithm;artificial intelligence;computer science;natural language processing;mathematical proof	Logic	-11.416676748244733	16.06827722285887	72156
b645929eed92a2ed741da22e580a170f0a76a692	ordered completion for logic programs with aggregates	answer set programming;knowledge representation and reasoning;logic programming;aggregates;first order logic	We consider the problem of translating first-order answer set programs with aggregates into first-order sentences with the same type of aggregates. In particular, we show that, on finite structures, normal logic programs with convex aggregates, which cover both monotone and antimonotone aggregates as well as the aggregates appearing in most benchmark programs, can always be captured in firstorder logic with the same type of aggregates by introducing auxiliary predicates. More precisely, we prove that every finite stable model of a normal program with convex aggregates is corresponding to a classical model of its enhanced ordered completion. This translation then suggests an alternative way for computing the stable models of such kind of programs. We report some experimental results, which demonstrate that our solver GROCv2 is comparable to the state-of-the-art answer set solvers. We futher show that convex aggregates form a maximal class for this purpose. That is, we can always construct a normal logic program under any given non-convex aggregate context and prove that it can never be translated into first-order sentences with the same type of aggregates unless NP = coNP .	benchmark (computing);boolean satisfiability problem;first-order logic;first-order predicate;logic programming;simultaneous multithreading;solver;stable model semantics;monotone	Vernon Asuncion;Yan Zhang;Yi Zhou	2012	Artif. Intell.	10.1016/j.artint.2015.03.007	knowledge representation and reasoning;discrete mathematics;computer science;artificial intelligence;answer set programming;first-order logic;mathematics;logic programming;algorithm	AI	-16.601898916654278	13.556586407045378	72347
61e2d48020f2d9288506f49c0ed8f4d92185ad36	relational graph models at work		"""We study the relational graph models that constitute a natural subclass of relational models of lambda-calculus. We prove that among the lambda-theories induced by such models there exists a minimal one, and that the corresponding relational graph model is very natural and easy to construct. We then study relational graph models that are fully abstract, in the sense that they capture some observational equivalence between lambda-terms. We focus on the two main observational equivalences in the lambda-calculus, the theory H+ generated by taking as observables the beta-normal forms, and H* generated by considering as observables the head normal forms. On the one hand we introduce a notion of lambda-K\""""onig model and prove that a relational graph model is fully abstract for H+ if and only if it is extensional and lambda-K\""""onig. On the other hand we show that the dual notion of hyperimmune model, together with extensionality, captures the full abstraction for H*."""	database normalization;denotational semantics;h+: the digital series;lambda calculus;observable;observational equivalence;simple set;turing completeness	Flavien Breuvart;Giulio Manzonetto;Domenico Ruoppolo	2018	Logical Methods in Computer Science	10.23638/LMCS-14(3:2)2018	wait-for graph;discrete mathematics;moral graph;combinatorics;graph (abstract data type);graph database;mathematics;codd's theorem;relational calculus;relational theory;statistical relational learning	Logic	-8.383682072991807	16.90796047986414	72376
bd1f856512a516a881586807ef0c4655e93cd060	temporal logic as filtering	lti filtering;mtl;correspondence;temporal logic;measure;qualitative semantics;quantitative semantics	We show that metric temporal logic (MTL) the extension of linear temporal logic to real time, can be viewed as linear time-invariant filtering, by interpreting addition, multiplication, and their neutral elements, over the idempotent dioid (max,min,0,1). Moreover, by interpreting these operators over the field of reals (+,x,0,1), one can associate various quantitative semantics to a metric-temporal-logic formula, depending on the filter's kernel used: square, rounded-square, Gaussian, low-pass, band-pass, or high-pass. This remarkable connection between filtering and metric temporal logic allows us to freely navigate between the two, and to regard signal-feature detection as logical inference. To the best of our knowledge, this connection has not been established before. We prove that our qualitative, filtering semantics is identical to the classical MTL semantics. We also provide a quantitative semantics for MTL, which measures the normalized, maximum number of times a formula is satisfied within its associated kernel, by a given signal. We show that this semantics is sound, in the sense that, if its measure is 0, then the formula is not satisfied, and it is satisfied otherwise. We have implemented both of our semantics in Matlab, and illustrate their properties on various formulas and signals, by plotting their computed measures.	feature detection (computer vision);feature detection (web development);idempotence;kernel (operating system);linear temporal logic;linear time-invariant theory;low-pass filter;matlab;time complexity;time-invariant system	Alena Rodionova;Ezio Bartocci;Dejan Nickovic;Radu Grosu	2016		10.1145/2883817.2883839	discrete mathematics;measure;temporal logic;computer science;artificial intelligence;mathematics;well-founded semantics;algorithm	Logic	-4.8497383122941224	8.805587600897814	72540
c6b89f78da7c96993205524a62f9cd3d60c56ddb	an addendum: disjunction and existence under implication in elementary intuitionistic formalisms			addendum;intuitionistic logic	Stephen Cole Kleene	1963	J. Symb. Log.		calculus;pure mathematics;mathematics	Logic	-9.749027256113548	12.570990500439695	72607
683e81fb280e5bddd1bb73a0a39bf831eeeaa239	ground and free-variable tableaux for variants of quantified modal logics	logic;modal logic;semantic information;first order;mathematical logic and foundations;philosophy;computational linguistics;cumulant	In this paper we study proof procedures for some variants of first-order modal logics, where domains may be either cumulative or freely varying and terms may be either rigid or non-rigid, local or non-local. We define both ground and free variable tableau methods, parametric with respect to the variants of the considered logics. The treatment of each variant is equally simple and is based on the annotation of functional symbols by natural numbers, conveying some semantical information on the worlds where they are meant to be interpreted.	free variables and bound variables;modal logic	Marta Cialdea Mayer;Serenella Cerrito	2001	Studia Logica	10.1023/A:1013838528631	modal logic;dynamic logic;t-norm fuzzy logics;normal modal logic;discrete mathematics;philosophy;epistemology;artificial intelligence;computational linguistics;mathematics;method of analytic tableaux;accessibility relation;logic;multimodal logic;algorithm;cumulant	Logic	-13.685991781428285	8.477437648908749	72619
59096bb6f3ef97659c7be0f33480279665ef3cf6	an algebraic method to decide the deduction problem in many-valued propositional calculus	calculus multivalued logic polynomials logic functions cost accounting algebra artificial intelligence logic circuits computer science;many valued logics;inference mechanisms;many valued logic algebraic method deduction problem many valued propositional calculus polynomial rational number field;theorem proving;algebraic method;rational number;theorem proving many valued logics inference mechanisms;algebraic variety;many valued logic	We show that there is a polynomial over the rational number field Q corresponding to a given propositional formula in a given many-valued logic. Then, to decide whether a propositional formula can be deduced from a finite set of such formulas (deduction problem), we only need to decide whether the polynomial vanishes on an algebraic variety which is related to this formula set. By decomposing this algebraic variety, an algorithm to decide this problem is given. >	natural deduction;propositional calculus	Jin-Zhao Wu;Hong-Yan Tan	1994		10.1109/ISMVL.1994.302191	zeroth-order logic;t-norm fuzzy logics;discrete mathematics;classical logic;resolution;algebraic variety;algebraic sentence;many-valued logic;intuitionistic logic;intermediate logic;łukasiewicz logic;first-order logic;dimension of an algebraic variety;mathematics;automated theorem proving;propositional variable;well-formed formula;algebraic function;abstract algebraic logic;algorithm;rational number;rule of inference;algebra;autoepistemic logic;satisfiability	AI	-10.964011717397815	11.34028526002517	72769
11b497549b0acf3b42ba540b0f06735654e37e8b	duality and i/o-types in the π-calculus	ordinary input;duality break;dualisable version;duality property;output type;van bakel;minimal symmetrical conservative extension	We study duality between input and output in the π-calculus. In dualisable versions of π, including πI and fusions, duality breaks with the addition of ordinary input/output types. We introduce π, intuitively the minimal symmetrical conservative extension of π with input/output types. We prove some duality properties for π and we study embeddings between π and π in both directions. As an example of application of the dualities, we exploit the dualities of π and its theory to relate two encodings of call-by-name λ-calculus, by Milner and by van Bakel and Vigliotti, syntactically quite different from each other.	input/output;lambda calculus;π-calculus	Daniel Hirschkoff;Jean-Marie Madiot;Davide Sangiorgi	2012		10.1007/978-3-642-32940-1_22	combinatorics;discrete mathematics;topology;mathematics	NLP	-5.084490163409243	15.78668081370983	72827
22ce1fa33d12ea7bf504ea0d71819a50bec05ff6	the logic of counterpart theory with actuality	humanidades;modal logic;filosofia etica;actuality;counterpart theory	It has been claimed that counterpart theory cannot support a theory of actuality without rendering obviously invalid formulas valid or obviously valid formulas invalid. We argue that these claims are not based on logical flaws of counterpart theory itself, but point to the lack of appropriate devices in first-order logic for “remembering” the values of variables. We formulate a mildly dynamic version of first-order logic with appropriate memory devices and show how to base a version of counterpart theory with actuality on this. This theory is, in special cases, equivalent to modal first-order logic with actuality, and apparently does not suffer from the logical flaws that have been mentioned in the literature.	first-order logic;first-order predicate;modal logic;modality (human–computer interaction);plausibility structure;theory	Adam Rigoni;Richmond H. Thomason	2014	J. Philosophical Logic	10.1007/s10992-012-9248-0	modal logic;philosophy;epistemology;potentiality and actuality;calculus;mathematics;algorithm	AI	-12.791492287637453	5.279235642007639	72939
540a337a6ba04f4cbeb037971462dcdd5e6fb9d6	prudent semantics for argumentation frameworks	dung argumentation theory;prudent dung semantics;inference mechanisms computational linguistics;argumentation framework;inference mechanisms;prudent inference relation prudent dung semantics argumentation framework dung argumentation theory controversial argument;lenses logic programming artificial intelligence;prudent inference relation;computational linguistics;controversial argument	We present new prudent semantics within Dung's theory of argumentation. Under such prudent semantics, two arguments cannot belong to the same extension whenever one of them attacks indirectly the other one. We argue that our semantics lead to a better handling of controversial arguments than Dung's ones. We compare the prudent inference relations induced by our semantics w.r.t. cautiousness; we also compare them with the inference relations induced by Dung's semantics	algorithm;argumentation framework;operational semantics	Sylvie Coste-Marquis;Caroline Devred;Pierre Marquis	2005	17th IEEE International Conference on Tools with Artificial Intelligence (ICTAI'05)	10.1109/ICTAI.2005.103	natural language processing;computer science;artificial intelligence;computational linguistics;mathematics;algorithm	Robotics	-16.217473944352086	6.342019016540771	73085
7adccb8f50f2de722b7c9e1bac2aa8ed9810655a	the chomsky-schützenberger theorem for quantitative context-free languages		Weighted automata model quantitative aspects of systems like the consumption of resources during executions. Traditionally, the weights are assumed to form the algebraic structure of a semiring, but recently also other weight computations like average have been considered. Here, we investigate quantitative context-free languages over very general weight structures incorporating all semirings, average computations, lattices. In our main result, we derive the Chomsky-Schutzenberger Theorem for such quantitative context-free languages, showing that each arises as the image of the intersection of a Dyck language and a recognizable language under a suitable morphism. Moreover, we show that quantitative context-free languages are expressively equivalent to a model of weighted pushdown automata. This generalizes results previously known only for semirings.	context-free grammar;monoid factorisation	Manfred Droste;Heiko Vogler	2013		10.1007/978-3-642-38771-5_19	combinatorics;discrete mathematics;theorem;fundamental theorem;mathematics;compactness theorem	Logic	-5.44400388562183	17.10531676297521	73109
49cd99737669d639c9cf4b269bfdd137f3c311eb	representing fuzzy structures in quantum computation with mixed states	quantum operations density operators fuzzy structures mixed states polynomial quantum operation product mv algebra quantum computational gates;mathematics;state space methods;tensile stress;quantum operations;mixed state;quantum computing hilbert space polynomials fuzzy logic computational modeling tensile stress quantum mechanics mathematics vectors state space methods;fuzzy set theory;quantum gates fuzzy set theory;polynomials;fuzzy logic quantum computation quantum operations;quantum gates;fuzzy logic;hilbert space;quantum computation;computational modeling;vectors;logic gates;quantum computer;quantum mechanics;density operator;quantum computing;power modeling	In this work we introduce a particular kind of quantum operations called polynomial quantum operations that allow us to represent the basic operations of the standard Product MV -algebra. Consequently, these operations can be treated as quantum computational gates in the powerful model of quantum computation given by “quantum operations - density operators”.		Hector Freytes;Roberto Giuntini;Giuseppe Sergioli;Antonio Aricò	2010	2010 40th IEEE International Symposium on Multiple-Valued Logic	10.1109/ISMVL.2010.38	quantum simulator;quantum operation;quantum fourier transform;discrete mathematics;quantum information;quantum probability;quantum t-design;quantum network;quantum capacity;open quantum system;pure mathematics;quantum circuit;mathematics;quantum computer;quantum process;quantum algorithm;quantum turing machine;quantum mechanics;quantum phase estimation algorithm;quantum error correction	Arch	-6.4846235535264505	8.655321183123151	73238
e6f7e85e1c66547c4380f2056b29eca995144440	diagnosing terminologies	eliminee subsets;bimatrix game;definition span;generalized strategy eliminability criterion;diagnosing terminology	We present a framework for the debugging of logically contradicting terminologies, which is based on traditional modelbased diagnosis. To study the feasibility of this highly general approach we prototypically implemented the hitting set algorithm presented in (Reiter 1987), and applied it in three different scenarios. First, we use a Description Logic reasoning system as a black-box to determine (necessarily maximal) conflict sets. Then we use our own non-optimized DL reasoning engine to produce small, and a specialized algorithm to determine minimal conflict sets. In a number of experiments we show that the first method already fails for relatively small terminologies. However, based on small, or minimal conflict sets, we can often calculate diagnoses in reasonable time.	algorithm;black box;coherence (physics);computation;computational problem;correctness (computer science);debugging;description logic;experiment;first-order predicate;general-purpose markup language;generic programming;maximal set;method of analytic tableaux;ontology (information science);reasoning system;semantic reasoner;set cover problem;stepwise regression;subsumption architecture;top-down and bottom-up design	Stefan Schlobach	2005				AI	-19.108237636002574	9.81044481183983	73512
305d80bf34a5f9fbbf09b22df6eed011afa4a1b4	intentional learning procedures as intention revision mechanisms	libraries;learning;cognition semantics registers context libraries learning systems syntactics;semantics;learning intention revision bdi agents agentspeak l;learning systems;philosophical aspects belief maintenance learning artificial intelligence;syntactics;registers;bdi learning procedure;bdi agents;abstract specification;intention revision;intentional learning procedure;cognition;agentspeak l;philosophical aspects;intention revision mechanism;belief maintenance;learning artificial intelligence;philosophical analysis;agentspeak intentional learning procedure intention revision mechanism philosophical analysis bdi learning procedure abstract specification;agentspeak;context	By recovering some insights from a philosophical analysis about intentions we focus on intentions as plans writ large. Using this assumption we suggest proof of how an existing implementation of BDI learning procedures works as an intention revision mechanism as suggested in an abstract specification. Finally, we translate the abstract postulates in terms of AgentSpeak(L) so that the intention revision specification meets somehow the implementation.	agentspeak;belief revision;logical framework;non-monotonic logic;relation (database)	José Martín Castro-Manzano;Axel Arturo Barceló-Aspeitia;Alejandro Guerra-Hernández	2010	2010 Ninth Mexican International Conference on Artificial Intelligence	10.1109/MICAI.2010.29	cognition;computer science;knowledge management;artificial intelligence;semantics;processor register	AI	-17.89434417388941	7.589213214810763	73607
f7a85e80d6264e671ea01e7ffbbfc1220beaa3bf	hybrid hypercomputing: towards a unification of quantum and classical computation	satisfiability;resource use;unified model;quantum information theory;quantum information processing;information flow;quantum computer;quantum physics	We investigate the computational power and unified resource use of hybrid quantum-classical computations, such as teleportation and measurement-based computing. We introduce a physically causal and local graphical calculus for quantum information theory, which enables high-level intuitive reasoning about quantum information processes. The graphical calculus defines a local information flow in a computation which satisfies conditions for physical causality. We show how quantum and classical processing units can now be formally integrated, and give an analysis of the joint resources used in a typical measurement-based computation. Finally, we discuss how this picture may be used to give a high-level unified model for hybrid quantum computing.	computation;han unification;hypercomputation;quantum	Clare Horsman;William J. Munro	2010	IJUC		quantum simulator;quantum operation;discrete mathematics;quantum information;information flow;quantum probability;quantum information science;theoretical computer science;quantum network;quantum capacity;open quantum system;unified model;mathematics;quantum channel;quantum computer;quantum process;coherent information;quantum algorithm;physics;quantum mechanics;satisfiability	Theory	-16.55268546364982	12.41446424249897	73762
5a2aad10b7ff9b70469a8bb767cb10618e29de72	meta-knowledge and meta-reasoning		We describe three experiments using meta-language and meta-reasoning to solve problems involving belief, heuristics, and points of view. These experiments use the knowledge representation system SPHERE, built at Hewlett-Packard Laboratories and based on the ideas of FOL [20]. A key idea underlying our research is the segmentation of knowledge into contexts and the meta-linguistic treatment of these contexts as objects.	attribute-value system;experiment;first-order logic;heuristic (computer science);knowledge representation and reasoning	Robert E. Filman;John Lamping;Fanya S. Montalvo	1983			machine learning;artificial intelligence;computer science	AI	-18.730466885944416	9.893756253271242	73881
15e15b41055f909266bb0c2d9f57e47beee072b8	towards a unified complexity theory of total functions		The complexity class TFNP is the set of total function problems that belong to NP: every input has at least one output and outputs are easy to check for validity, but it may be hard to find an output. TFNP is not believed to have complete problems, but it encompasses several subclasses (PPAD, PPADS, PPA, PLS, PPP) that do, plus several other problems, such as Factoring, which appear harder to classify. In this paper we introduce a new class, which we call PTFNP (for “provable” TFNP) which contains the five subclasses, has complete problems, and generally feels like a well-behaved close approximation of TFNP. PTFNP is based on a kind of consistency search problem that we call Wrong Proof: Suppose that we have a consistent deductive system, and a concisely-represented proof having exponentially many steps, that leads to a contradiction. There must be an error somewhere in the proof, and the challenge is to find it. We show that this problem generalises various well-known TFNP problems, including the five classes mentioned above, making it a candidate for an overarching complexity characterisation of NP total functions. Finally, we note that all five complexity subclasses of TFNP mentioned above capture existence theorems (such as “every dag has a sink”) that are true for finite structures but false for infinite ones. We point out that an application of Jacques Herbrand’s 1930 theorem shows that this is no coincidence.	approximation;complexity class;directed acyclic graph;formal system;function problem;integer factorization;np (complexity);ppa (complexity);ppad (complexity);partial least squares regression;point-to-point protocol;provable security;search problem;tfnp	Paul W. Goldberg;Christos H. Papadimitriou	2017	Electronic Colloquium on Computational Complexity (ECCC)	10.4230/LIPIcs.ITCS.2018.37	tfnp;discrete mathematics;syntax;formal proof;mathematics	Theory	-5.155543799263602	14.428327295458322	74008
e4c9111f09d6b6a991e0d3cc1b450517f44ccc6a	constrained coalitional games: formal framework, properties, and complexity results	coalitional games;computational complexity	A general approach to define constrained coalitional games is proposed, i.e., TU games where additional, applicationoriented constraints are imposed on the possible outcomes. It is observed that constrained games are succinct NonTransferable (NTU) specifications, which yet retain (some of) the nice properties of the underlying TU games. In fact, a clear picture about the preservation properties of TU solution concepts is depicted, and a thorough analysis is eventually carried out, to assess the impact of issuing constraints on the computational complexity of these solution concepts.	computational complexity theory;decibel;network interface device	Gianluigi Greco;Enrico Malizia;Luigi Palopoli;Francesco Scarcello	2009		10.1145/1558109.1558260	simulation;computer science;computational complexity theory	AI	-5.670864684827279	9.382492999884871	74065
89a193c4e9f80122c8b7ae083db4749c65e600fe	probabilistic inference in hybrid domains by weighted model integration	model counting;smt	Weighted model counting (WMC) on a propositional knowledge base is an e↵ective and general approach to probabilistic inference in a variety of formalisms, including Bayesian and Markov Networks. However, an inherent limitation of WMC is that it only admits the inference of discrete probability distributions. In this paper, we introduce a strict generalization of WMC called weighted model integration that is based on annotating Boolean and arithmetic constraints, and combinations thereof. This methodology is shown to capture discrete, continuous and hybrid Markov networks. We then consider the task of parameter learning for a fragment of the language. An empirical evaluation demonstrates the applicability and promise of the proposal.	algorithm;backward compatibility;belle (chess machine);correctness (computer science);declarative programming;graphical model;knowledge base;markov chain;markov random field;national fund for scientific research;simultaneous multithreading;windows media center	Vaishak Belle;Andrea Passerini;Guy Van den Broeck	2015			discrete mathematics;computer science;artificial intelligence;machine learning;mathematics;algorithm;statistics	AI	-18.48248795551577	12.401594561606558	74067
49739c3549dfdd126556a82f8b4a8089e02fa5d3	lqp: the dynamic logic of quantum information	quantum system;quantum measurement;computacion informatica;quantum information;dynamic logic;information flow;quantum gate;ciencias basicas y experimentales;matematicas;grupo a;logic gate	We present a dynamic logic for reasoning about information flow in quantum programs. In particular, we give a finitary syntax and a relational semantics for a Logic of Quantum Programs (LQP ), that is capable of dealing with quantum measurements, unitary evolutions and entanglements in compound quantum systems. We present a sound proof system for this logic, and we show how to characterize by logical means various forms of entanglement (e.g. the Bell states) and various quantum gates. As an example of application, we use our logic to give a formal proof for the correctness of the Teleportation protocol (proof which can be easily adapted to check Logic-Gate Teleportation).	bell state;bell's theorem;computation;correctness (computer science);dynamic logic (modal logic);formal proof;graph coloring;hilbert space;iteration;kleene star;kripke semantics;letter-quality printer;logic gate;modal logic;peano axioms;proof calculus;quantum computing;quantum entanglement;quantum gate;quantum information;quantum programming;quantum state;quantum system;quantum teleportation	Alexandru Baltag;Sonja Smets	2006	Mathematical Structures in Computer Science	10.1017/S0960129506005299	dynamic logic;quantum simulator;quantum operation;discrete mathematics;quantum information;information flow;quantum information science;logic gate;computer science;theoretical computer science;quantum network;quantum capacity;open quantum system;mathematics;quantum channel;quantum computer;quantum process;multimodal logic;quantum algorithm;algorithm;quantum gate;quantum error correction	Theory	-12.92950982506716	13.97392819545265	74144
eda9674997fc5a22e3f5bea356eb5a4d7d72fd28	strong circumscription specifies stable semantics of normal logic programs				Phan Minh Dung	1990			discrete mathematics;bunched logic;machine learning;computer science;dynamic logic (modal logic);axiomatic semantics;artificial intelligence;circumscription;algorithm;predicate functor logic;well-founded semantics;stable model semantics;higher-order logic	AI	-13.648629726639507	12.940367567481736	74149
fdab00f915af522f0fedd96643e9afb654917558	bounded properties in modal logic	modal logic		modal logic	George F. Schumm	1981	Math. Log. Q.	10.1002/malq.19810271303	modal logic;dynamic logic;normal modal logic;modal μ-calculus;linear temporal logic;intermediate logic;axiom s5;mathematics;accessibility relation;multimodal logic	Logic	-12.787891129934764	12.811533625862957	74173
0d03c41dcf3aab075ac9c507f8115cb7a3c5ed2d	natural deduction systems for nelson's paraconsistent logic and its neighbors	nelson s paraconsistent logic;wansing s basic connexive logic;sequent calculus;natural deduction;strong normalization;normalization;paraconsistent logic	Firstly, a natural deduction system in standard style is introduced for Nelson's para-consistent logic N4, and a normalization theorem is shown for this system. Secondly, a natural deduction system in sequent calculus style is introduced for N4, and a normalization theorem is shown for this system. Thirdly, a comparison between various natural deduction systems for N4 is given. Fourthly, a strong normalization theorem is shown for a natural deduction system for a sublogic of N4. Fifthly, a strong normalization theorem is proved for a typed λ-calculus for a neighbor of N4. Finally, it is remarked that the natural deduction frameworks presented can also be adapted for Wansing's basic connexive logic C.	natural deduction;paraconsistent logic	Norihiro Kamide	2005	Journal of Applied Non-Classical Logics	10.3166/jancl.15.405-435	judgment;discrete mathematics;paraconsistent logic;deduction theorem;computer science;normalization;mathematics;curry–howard correspondence;sequent;programming language;sequent calculus;natural deduction;algorithm;rule of inference	Logic	-11.095635430641334	12.42014935208807	74229
3a03c775faea93aea7fe9148e54d925dccb4dbd5	compact and ϖ-compact formulas in 51-151-151-1	satisfiability;first order logic	In [3], Flum asked whether, given an L . . . . formula, if it and its negation are both co-compact, it is equivalent to a finitary formula. A related result indicating a possible affirmative answer was shown by Lindstrom [7] : if L is a generalized first order logic, satisfying the downward LowenheimSkolem theorem and the compactness theorem for countable sets of sentences, L is equivalent to elementary logic. Thus, if one takes the language L formed by building formulas from e e L . . . . and atomic formulas by -n, finite V, and 3 quantification, L is such a generalized language, and satisfies the downward Lowenheim-Skolem theorem. Further, if both ¢ and ~ ¢ are w-compact, each by itself satisfies the compactness theorem for countable sets of sentences not involving the other. However, L doesn't quite satisfy the hypothesis of the Lindstrom theorem, for ~b and -1 q5 can both appear in sentences of L and in that case it's not clear that compactness holds; in fact, in general we shall show it doesn't. In this paper we answer Flum's question in the negative. We also show that the answer is affirmative when co-compact is replaced by compact. We also discuss various other properties of compact and w-compact formulas. A general background for the subject will be found in [6], and the definition of and information about admissible sets, used in Section 3, will be found in Eli. This paper is a modified version of the author's Ph.D. thesis [4]. It is my pleasure here to thank Professor M. Morley for his many suggestions and encouragement throughout. Also I would like to thank Professor J. Burgess for several helpful observations, and Professors C.Jockush and A.Nerode for helpful conversations.	automated theorem proving;eli;emoticon;first-order logic;logic programming;question answering;rice's theorem	Bonnie Gold	1978	Arch. Math. Log.	10.1007/BF02011867	zeroth-order logic;combinatorics;discrete mathematics;intermediate logic;first-order logic;mathematics;algorithm;satisfiability	AI	-10.325352106955053	12.859422752415703	74293
f92c702152d1612ce928a8329687eafb05c6fbcd	twist your logic with touist		SAT provers are powerful tools for solving real-sized logic problems, but using them requires solid programming knowledge and may be seen w.r.t. logic like assembly language w.r.t. programming. Something like a high level language was missing to ease various users to take benefit of these tools. TouIST aims at filling this gap. It is devoted to propositional logic and its main features are 1) to offer a high-level logic langage for expressing succintly complex formulas (e.g. formulas describing Sudoku rules, planification problems,. . . ) and 2) to find models to these formulas by using the adequate powerful prover, which the user has no need to know about. It consists in a friendly interface that offers several syntactic facilities and which is connected with some sufficiently powerful provers allowing to automatically solve big instances of difficult problems (such as time-tables or Sudokus). It can interact with various provers: pure SAT solver but also SMT provers (SAT modulo theories like linear theory of reals, etc) and thus may also be used by beginners for experiencing with pure propositional problems up to graduate students or even researchers for solving planification problems involving big sets of fluents and numerical constraints on them. 1998 ACM Subject Classification K.3.2 Computer and Information Science Education ; I.2.8 Problem Solving, Control Methods, and Search	assembly language;boolean satisfiability problem;fluent (artificial intelligence);high- and low-level;high-level programming language;information and computer science;information science;linear system;modulo operation;need to know;numerical analysis;problem solving;propositional calculus;solver;sudoku;time complexity	Khaled Skander Ben Slimane;Alexis Comte;Olivier Gasquet;Abdelwahab Heba;Olivier Lezaud;Frederic Maris;Maël Valais	2015	CoRR		computer science;artificial intelligence;theoretical computer science;algorithm	AI	-19.002712583078917	17.779340364938353	74333
748f680bed3177af16d6f4d51024e7ba2d09a3d8	pledger lemma and the modal system s3đeg			modal logic	Boleslaw Sobocinski	1976	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093887531		Theory	-12.799750110341137	11.59212649802332	74347
31a1c38b91822e28250523c0f9f308f07a868f9e	grammar logics in nested sequent calculus: proof theory and decision procedures	conference paper	A grammar logic refers to an extension to the multi-modal logic K in which the modal axioms are generated from a formal grammar. We consider a proof theory, in nested sequent calculus, of grammar logics with converse, i.e., every modal operator [a] comes with a converse [a]−1. Extending previous works on nested sequent systems for tense logics, we show all grammar logics (with or without converse) can be formalised in nested sequent calculi, where the axioms are internalised in the calculi as structural rules. Syntactic cut-elimination for these calculi is proved using a procedure similar to that for display logics. If the grammar is context-free, then one can get rid of all structural rules, in favor of deep inference and additional propagation rules. We give a novel semi-decision procedure for context-free grammar logics, using nested sequent calculus with deep inference, and show that, in the case where the given context-free grammar is regular, this procedure terminates. Unlike all other existing decision procedures for regular grammar logics in the literature, our procedure does not assume that a finite state automaton encoding the axioms is given.	automaton;context-free grammar;context-free language;decision problem;finite-state machine;formal grammar;logic programming;modal logic;modal operator;regular grammar;semiconductor industry;sequent calculus;software propagation	Alwen Tiu;Egor Ianovski;Rajeev Goré	2012			discrete mathematics;categorial grammar;philosophy;cut-elimination theorem;operator-precedence grammar;regular grammar;computer science;regular tree grammar;proof theory;mathematics;sequent;attribute grammar;natural deduction;method of analytic tableaux;adaptive grammar;mildly context-sensitive grammar formalism;algorithm	PL	-12.74912279703441	15.689480509047039	74414
8caea9d78be0bc5d23054b9ae0ed6a4a2008f92c	sanction semantics and contrary-to-duty obligations	contrary-to-duty obligation;sanction semantics	In this paper I show that one cannot faithfully represent contrary-to-duty obligations in logics with sanction semantics. In order to do so I first provide a number of desiderata that a logic should satisfy in order to represent contrary-to-duty obligations using sanction semantics. I then show that no logic satisfying all desiderata can faithfully represent contrary-to-duty obligations. Finally I show that when dropping any one of the desiderata there is a logic that satisfies all others and can represent some contrary-to-duty obligations faithfully.		Louwe B. Kuijer	2012		10.1007/978-3-642-31570-1_6	epistemology;algorithm	AI	-16.760408451055458	6.387568763036441	74485
58adc49be96180571a83c8e0392aa237f4a0cefa	disjunctive probabilistic modal logic is enough for bisimilarity on reactive probabilistic systems		Larsen and Skou characterized probabilistic bisimilarity over reactive probabilistic systems with a logic including true, negation, conjunction, and a diamond modality decorated with a probabilistic lower bound. Later on, Desharnais, Edalat, and Panangaden showed that negation is not necessary to characterize the same equivalence. In this paper, we prove that the logical characterization holds also when conjunction is replaced by disjunction. To this end, we introduce reactive probabilistic trees, a fully abstract model for reactive probabilistic systems that allows us to demonstrate expressivity of the disjunctive probabilistic modal logic, as well as of the previously mentioned logics, by means of a compactness argument.	approximation algorithm;audio feedback;bisimulation;denotational semantics;disjunctive normal form;fuzzy logic;initial algebra;modal logic;modality (human–computer interaction);nondeterministic algorithm;probabilistic automaton;randomized algorithm;turing completeness	Marco Bernardo;Marino Miculan	2016			discrete mathematics;probabilistic analysis of algorithms;probabilistic ctl;mathematics;probabilistic logic;probabilistic argumentation;algorithm	Logic	-11.944563266678815	14.625807099525433	74518
9b51e90443514b5ed9e358fc9f5840d24b7e441e	quantifiers and n-ary binders: an openmath standard enhancement proposal	software engineering	It is proposed that the restriction in the OpenMath standard that an OMBIND element must have exactly three children should be lifted, to support more general binder symbols. The case of logics with generalised quantifiers is described in some detail, since these turn out to not have a natural encoding within OpenMath 2.0, because of precisely this restriction. That restricting quantifiers to a single body should have such consequences is not trivial, but follows from a theorem in the Logic branch of Philosophy.	file binder	Lars Hellström	2013				PL	-6.4216030443268775	13.712425547047498	74533
a55527b414c0e488eb55cfa06eec2b70bbe16a16	applied logic for computer scientists - computational deduction and formal proofs		This book provides an introduction to logic and mathematical induction which are the basis of any deductive computational framework. A strong mathematical foundation of the logical engines available in modern proof assistants, such as the PVS verification system, is essential for computer scientists, mathematicians and engineers to increment their capabilities to provide formal proofs of theorems and to certify the robustness of software and hardware systems. The authors present a concise overview of the necessary computational and mathematical aspects of logic, placing emphasis on both natural deduction and sequent calculus. Differences between constructive and classical logic are highlighted through several examples and exercises. Without neglecting classical aspects of computational logic, the authors also highlight the connections between logical deduction rules and proof commands in proof assistants, presenting simple examples of formalizations of the correctness of algebraic functions and algorithms in PVS. Applied Logic for Computer Scientists will not only benefit students of computer science and mathematics but also software, hardware, automation, electrical and mechatronic engineers who are interested in the application of formal methods and the related computational tools to provide mathematical certificates of the quality and accuracy of their products and technologies.	computation;natural deduction	Mauricio Ayala-Rincón;Flávio L. C. de Moura	2017		10.1007/978-3-319-51653-0	computational science;applied mathematics;computer science	Logic	-19.06327219321109	17.527673084877495	74534
c9a0df6c8170ca76ce78781c7d4f1fb912f76d8b	non-deterministic boolean proof nets	parallel procedure;non-deterministic boolean circuit evaluation;proof net;complexity classes np;parallel model;cut-elimination procedure corresponds;non-deterministic boolean proof net;non-deterministic multiplicative linear logic;boolean circuit;boolean type	We introduce Non-deterministic Boolean proof nets to study the correspondence with Boolean circuits, a parallel model of computation. We extend the cut elimination of Non-deterministic Multiplicative Linear logic to a parallel procedure in proof nets. With the restriction of proof nets to Boolean types, we prove that the cut-elimination procedure corresponds to Non-deterministic Boolean circuit evaluation and reciprocally. We obtain implicit characterization of the complexity classes NP and NC (the efficiently parallelizable functions).	boolean algebra;boolean circuit;circuit complexity;complexity class;hoc (programming language);linear logic;model of computation;nc (complexity);np (complexity);non-deterministic turing machine;p/poly;parallel computing;parsing;polynomial;simulation	Virgile Mogbil	2009		10.1007/978-3-642-15331-0_9	circuit complexity;boolean algebra;boolean circuit;and-inverter graph;combinatorics;circuit minimization for boolean functions;discrete mathematics;boolean network;boolean domain;boolean expression;product term;standard boolean model;maximum satisfiability problem;karp–lipton theorem;stone's representation theorem for boolean algebras;boolean algebras canonically defined;mathematics;boolean function;complete boolean algebra;boolean satisfiability problem;algorithm;two-element boolean algebra;free boolean algebra;parity function	Logic	-10.575140691848375	15.905812263177335	74567
7bdb673302f546c85522782b799d9bc7fa364d87	the fundamental theorem of world theory	humanidades;modality;object theory;modal logic;filosofia etica;possible worlds	The fundamental principle of the theory of possible worlds is that a proposition p is possible if and only if there is a possible world at which p is true. In this paper we present a valid derivation of this principle from a more general theory in which possible worlds are defined rather than taken as primitive. The general theory uses a primitive modality and axiomatizes abstract objects, properties, and propositions. We then show that this general theory has very small models and hence that its ontological commitments — and, therefore, those of the fundamental principle of world theory — are minimal.	modality (human–computer interaction);possible world	Christopher Menzel;Edward N. Zalta	2014	J. Philosophical Logic	10.1007/s10992-012-9265-z	modal logic;object theory;philosophy;epistemology;calculus;pure mathematics;mathematics;possible world	Theory	-13.289148457710136	5.756696227077003	74595
fceab1e379b9642319b36a1fe9d02fb30642f74b	composing decision procedures: the approach and a case study	theorem prover;first order;decision procedure;first order logic;interactive theorem proving	In this paper we address the problem of strengthening the inferential capabilities of an interactive theorem prover with complex and reusable proof procedures. We focus on the construction of proof procedures built out of decision procedures for (decidable) quantifierfree theories. The idea is to build proof procedures in a structured way. A set of deciders provides the low-level reasoning capabilities, while the high-level (i.e. strategical) reasoning procedures are to be synthesized on top of it. The main goal of the paper is to show that this approach has many advantages and is of wide applicability. As a case study we consider the synthesis of a proof procedure for the existential fragment of first order logic built on top of a prepositional decider. This procedure is particularly well suited for describing our approach, since in it there is a neat separation between the prepositional and the first order reasoning components.		Mauro Di Manzo;Paolo Pecchiari	1995		10.1007/3-540-60437-5_17	discrete mathematics;mathematics;algorithm	SE	-17.498706564974114	17.756002113044975	74677
847f0ed0ab3a9fc9103dad4fcc5103294f061261	descente infinie + deduction	higher order;theorem proving;first order;classical logic	Inductive theorem proving in the form of descente infinie was known to the ancient Greeks and is the standard induction method of a working mathematician since it was reinvented in the middle of the 17th century. We present an integration of descente infinie into state-of-the-art free-variable sequent and tableau calculi. It is well-suited for an efficient interplay of human interaction and automation and combines raising, explicit representation of dependence between variables, the liberalized δ-rule, preservation of solutions, and unrestricted applicability of lemmas and induction hypotheses. The semantical requirements are satisfied for a variety of two-valued logics, such as clausal logic, classical first-order logic, and higher-order modal logic.	automated theorem proving;case preservation;closing (morphology);first-order logic;first-order predicate;free variables and bound variables;fuzzy logic;heuristic;literal (mathematical logic);long division;mathematical induction;method of analytic tableaux;modal logic;mutual exclusion;natural deduction;requirement;schmidt decomposition;skolem normal form;universal quantification;whole earth 'lectronic link;word lists by frequency	Claus-Peter Wirth	2004	Logic Journal of the IGPL	10.1093/jigpal/12.1.1	discrete mathematics;classical logic;higher-order logic;deduction theorem;computer science;first-order logic;mathematics;automated theorem proving;programming language;algebra	AI	-12.061506836289029	11.691690834924009	74779
5595655e90990645de7b4108b2432ead34b61bb2	locales are not pointless.		The Kripke-Joyal semantics is used to interpret the fragment of intuitionistic logic containing ^;! and 8 in the category of locales. An axiomatic theory is developed that can be interpreted soundly in two ways, using either lower or upper powerlocales, so that pairs of separate results can be proved as single formal theorems. Openness and properness of maps between locales are characterized by descriptions using the logic, and it is proved that a locale is open ii its lower powerlocale has a greatest point. The entire account is constructive and holds for locales over any topos.	aac-ld;axiomatic system;diagram;directed graph;html tidy;ibm system i;interaction;intuitionistic logic;kripke semantics;map;monad (functional programming);openness;point of sale;relevance;theory	Steven J. Vickers	1994			applied mathematics;theoretical computer science;computer science	Logic	-9.317697651944938	13.158237307244821	74847
6b73eab84833587c56e46a31c0a25f8ffb8df769	logical relations and parametricity - a reynolds programme for category theory and programming languages	natural transformations;parametric polymorphism;relational parametricity;information hiding;logical relations;definability;relation lifting;category theory;homomorphisms;data abstraction;fibrations;reflexive graphs;universal algebra	In his seminal paper on “Types, Abstraction and Parametric Polymorphism,” John Reynolds called for homomorphisms to be generalized from functions to relations. He reasoned that such a generalization would allow type-based “abstraction” (representation independence, information hiding, naturality or parametricity) to be captured in a mathematical theory, while accounting for higher-order types. However, after 30 years of research, we do not yet know fully how to do such a generalization. In this article, we explain the problems in doing so, summarize the work carried out so far, and call for a renewed attempt at addressing the problem.	category theory;logical relations;parametric polymorphism;parametricity	Claudio Hermida;Uday S. Reddy;Edmund P. Robinson	2014	Electr. Notes Theor. Comput. Sci.	10.1016/j.entcs.2014.02.008	homomorphism;universal algebra;parametric polymorphism;discrete mathematics;computer science;pure mathematics;mathematics;programming language;information hiding;category theory	PL	-12.36861635492047	17.43179631855523	74864
0d09dc2b90aecb9f9791b5e1c356d3ea27042912	another intuitionistic completeness proof		In March 1973, W. Veldman [1] discovered that, by a slight modification of a Kripke-model, it was possible to give an intuitionistic proof of the completeness-theorem for the intuitionistic predicate calculus (IPC) with respect to modified Kripke models. The modification was the following: Let f represent absurdity, then we allow the possibility that 7W ,af and we agree that, for all sentences ?k, 3V ,a4, if WKaf. Just one modified Kripke model V = (Qu, W) is constructed such that validity in IF implies derivability in IPC. While usually one thinks of fX, as some subset of UnNatu0027 and of ? . One can view a single model IW of the type constructed in [1] as the result of throwing together all the models of (the type constructed in) this paper into one big model, which has the somewhat strange properties mentioned above. We show that the Beth models, as well as the Kripke models, do form a fan (if the language contains no individual constants), by which, given that ? is valid in all models, we are able to use the fan-theorem. The reader, who is interested in more historical notes, is referred to [1]. This paper is organized as follows: In ?1 we give the language. In ?2 we introduce the modified Beth models and prove they do form a fan. In ?3 we introduce the proof theory and give a systematic procedure for searching derivations. For some technical details I am indebted to M. Fittingu0027s book [2]. In ?4 we prove the completeness-theorem. ?5 gives some more general completeness results. ?6 gives a sketch of a completeness proof for modified Kripke models. In ?7 we compare our fan K of modified Kripke models with the single Kripke model constructed in [1].		Harrie C. M. de Swart	1976	J. Symb. Log.		original proof of gödel's completeness theorem	Theory	-9.843576658425647	7.709079883404847	75035
b7f02d1f58ddf607f3f89851ba2744af3ca9c07b	fuzzy unification and resolution proof procedure for fuzzy conceptual graph programs	fuzzy logic programming;fuzzy reasoning;logique floue;logica difusa;intelligence artificielle;fuzzy logic;program generation;conceptual graph;grafo conceptual;artificial intelligence;inteligencia artificial;graphe conceptuel	Fuzzy conceptual graph programs are order-sorted fuzzy logic programs based on fuzzy conceptual graphs (FCGs). In this paper, we develop fuzzy unification and resolution proof procedure, taking into account fuzziness of FCGs and properties of fuzzy reasoning, for FCG programs. General issues of both CG and FCG unifications and resolution procedures are also analysed and solutions to them are proposed. The resolution procedure is proved to be sound with respect to the declarative semantics of FCG programs.	conceptual graph;han unification;resolution (logic)	Tru H. Cao;Peter N. Creasy;Vilas Wuwongse	1997		10.1007/BFb0027885	fuzzy logic;t-norm fuzzy logics;conceptual graph;fuzzy classification;computer science;artificial intelligence;neuro-fuzzy;machine learning;mathematics;fuzzy associative matrix;fuzzy set operations;algorithm	AI	-17.56043017019242	11.243212022483004	75102
0daf3d4da8161a5f2150f94b5d8b03838072ecca	observing, reporting, and deciding in networks of sentences	selected works;68t15;03c40;peer to peer inference;partition based reasoning;bepress;03f07;knowledge representation;craig interpolation;network;68t27;knowledge base	In prior work [7] we considered networks of agents who have knowledge bases in first order logic, and report facts to their neighbors that are in their common languages and are provable from their knowledge bases, in order to help a decider verify a single sentence. In report complete networks, the signatures of the agents and the links between agents are rich enough to verify any decider’s sentence that can be proved from the combined knowledge base. This paper introduces a more general setting where new observations may be added to knowledge bases and the decider must choose a sentence from a set of alternatives. We consider the question of when it is possible to prepare in advance a finite plan to generate reports within the network. We obtain conditions under which such a plan exists and is guaranteed to produce the right choice under any new observations.	antivirus software;electronic signature;first-order logic;intelligent agent;knowledge base;provable security	H. Jerome Keisler;Jeffrey M. Keisler	2014	Ann. Pure Appl. Logic	10.1016/j.apal.2013.10.008	knowledge base;computer science;artificial intelligence;data mining;mathematics;algorithm	AI	-18.83412551298282	4.838548207835962	75210
c0ea08ab6975efec071aca24d72643adaab3f54c	proof-theoretic semantics for subsentential phrases	argument structure;proof theoretic semantic value;logic;frege s context principle;proof theoretic type interpretation;subsentential phrases;mathematical logic and foundations;natural language;natural deduction;philosophy;proof theoretic semantics;computational linguistics	The paper briefly surveys the sentential proof-theoretic semantics for fragment of English. Then, appealing to a version of Frege’s context-principle (specified to fit type-logical grammar), a method is presented for deriving proof-theoretic meanings for sub-sentential phrases, down to lexical units (words). The sentential meaning is decomposed according to the function-argument structure as determined by the type-logical grammar. In doing so, the paper presents a novel proof-theoretic interpretation of simple type, replacing Montague’s model-theoretic type interpretation (in arbitrary Henkin models). The domains of derivations are collections of derivations in the associated “dedicated” natural-deduction proof-system, and functions therein (with no appeal to models, truth-values and elements of a domain). The compositionality of the semantics is analyzed.		Nissim Francez;Roy Dyckhoff;Gilad Ben-Avi	2010	Studia Logica	10.1007/s11225-010-9241-y	natural language processing;formal semantics;philosophy;epistemology;computer science;computational linguistics;mathematics;linguistics;natural language;natural deduction;logic;algorithm;principle of compositionality	NLP	-11.993767083942071	7.971866922004513	75344
ef2c85652c0ea2ca325175f15c124d105d8f2205	concerning ordered mutation testing of relational operators	mutation testing;mutation analysis;relational operator mutants;ordered mutation	The aim of this paper is to correct a misapprehension concerning mutation testing of relational operators in imperative programming languages. An apparently plausible, but fallacious argument is stated concerning the order in which mutants are best considered. Subsequently, a counter-example is presented which disproves the argument.		Martin R. Woodward	1991	Softw. Test., Verif. Reliab.	10.1002/stvr.4370010305	engineering;mutation testing;algorithm	SE	-8.355139073463247	6.924857374990382	75400
4dd825caaf9612cc14584a98ba12beafbb9c862b	soundness and completeness of a 4-valued bipolar logic	4 valued bipolar logic;unipolar logical systems;bipolar logical systems;bepress selected works;bipolar equilibrium 4 valued bipolar logic unipolar logical systems bipolar logical systems boolean logic;bipolar equilibrium;boolean logic			Wen-Ran Zhang;Lulu Zhang	2003	Multiple-Valued Logic and Soft Computing		boolean algebra;discrete mathematics;mathematics;algorithm;algebra	EDA	-12.871150585976192	12.658866486135311	75432
8883dffe061429ef6391dd848a8ddca4033d52f7	a second-order system for polynomial-time reasoning based on graedel's theorem	second order;polynomial time;bounded arithmetic	 We introduce a second-order system V 1 -Horn of bounded arithmetic formalizing polynomialtimereasoning, based on Gradel's [11] second-order Horn characterization of P. Our systemhas comprehension over P predicates (dened by Gradel's second-order Horn formulas) , andonly nitely many function symbols. Other systems of polynomial-time reasoning either allowinduction on NP predicates (such as Buss's S12 or the second-order V11 ), and hence are more powerfulthan our system (assuming... 	automated theorem proving;time complexity	Stephen A. Cook;Antonina Kolokolova	2001	Electronic Colloquium on Computational Complexity (ECCC)		time complexity;combinatorics;discrete mathematics;factor theorem;mathematics;second-order logic;algorithm;algebra	Theory	-12.200929657973349	14.659832349542006	75764
d99991faef0c6169ed6edc861572c8b27855bc5e	entrenchment versus dependence: coherence and foundations inbelief change	dependence relations;epistemic;belief change	We describe the relation between coherence and foundations approaches to belief change in terms of a correspondence between epistemic entrenchment relations (Gardenfors and Makinson, 1988; Rott, 1992) and dependence consequence relations from Bochman (1999, 2000a). The general conclusion of the study is that dependence consequence relations are sufficiently expressive to subsume the notion of an epistemic entrenchment and its generalizations.		Alexander Bochman	2002	Journal of Logic, Language and Information	10.1023/A:1013064206171	philosophy;epistemology;mathematics	Theory	-14.523107422320974	5.523027639660037	75860
b74ed508e4c732365e67474e4f21bcb476f7af82	circumscription in a modal logic	modal logic	"""In this paper, we extend circumscription [McCarthy, 80] to a propositional modal logic of knowledge of one agent. Instead of circumscribing a predicate, we circumscribe the knowledge operator """"K"""" in a formula. In order to have a nontrivial circumscription schema, we extend $5 modal logic of knowledge by adding another modality """"Val"""" and a universal quantifier over base sentences (sentences which do not contain modality). Intuitively, """"Val(P)"""" means that P is a valid formula. It turns out that by circumscribing the knowledge operator in a formula, we completely characterize the maximally ignorant models of the formula (models of the formula where agents have minimal knowledge)."""	circumscription (logic);modal logic;modality (human–computer interaction);quantifier (logic);universal quantification	Fangzhen Lin	1988			modal logic;dynamic logic;s5;normal modal logic;discrete mathematics;economics;epistemology;computer science;axiom s5;mathematics;multimodal logic;circumscription;algorithm;modal operator	AI	-12.578011332244563	11.814583986491833	75881
4f310f84b115ac7dd7c74f9ba8b00aadfd52f3b6	signalling in languages with imperfect information	logique lineaire;langage;negation;quantification;imperfect information;connexion;jeux;game;language;linear logic;information;imperfection	This paper is a short survey of different languageswith imperfect information introduced in (Hintikka and Sandu 1989).The imperfect information concerns both quantifiers and connectives.At the end, I will sketch a connection between these languages and linearlogic.	logical connective	Gabriel Sandu	2001	Synthese	10.1023/A:1010362218565	games;linear logic;information;theoretical computer science;perfect information;negation;mathematics;linguistics;language;algorithm	AI	-12.94990948003385	12.141177040164347	75953
bd580d7aa6ff98ca50de0d14c5dae21795d6fd01	the complexity of theory revision	locally-optimal theory;theory revision;related theory;particular polynomial factor;underlying theory;polynomial time algorithm;revised theory;polynomial-time algorithm;theory revision task;optimal theory;computational complexity;standard theory revision system;best theory	"""A knowledge-based system uses its database (a k a its """"theory"""") to produce answers to the queries it receives Unfortunately, these an swere may be incorrect if the underlying theory is faulty Standard """"theory revision"""" systems use a given set of """"labeled queries"""" (each a query paired with its correct answer) to transform the given theory, by adding and/or deleting either rules and/or antecedents, into a related theory that is as accurate as possible After formally denning the theory revision task and bounding its sample complexity, this paper addresses the task's computational complexity It first proves that, unless P = NP, no polynomial time algorithm can identify the opti mal theory, even given the exact distribution of queries, except in the most tr iv ial of situations It also shows that, except in such tr ivial situations, no polynomial-time algorithm can produce a theory whose inaccuracy is even close (j e , within a particular polynomial factor) to optimal These results justify the standard practice of hill-chmbing to a locally-optimal theory, based on a given set of labeled samples 1 I n t r o d u c t i o n There are many fielded knowledge-based systems, ranging from expert systems and logic programs to production systems and database management systems [Lev84] Each such system uses its database of general informa tion (a k a its """"theory"""") to produce an answer to each given query, this can correspond to retrieving information from a database (eg, finding X such that """"(mak«a acne X) & ( co lo r X red ) """" ) or to providing a diagnosis or repair, based on a given set of symptoms Unfortunately, these responses may be incorrect if the underly ing theory includes erroneous information If we observe that some answers are incorrect (e g , if the patient does """"I gratefully acknowledge receiving helpful comments from George Drastal, R Bharat Rao, Narendra Gupta, Tom Han cock, Sheila Mcl l ra i th , Edoardo Amaldi , Dan Roth and Rom Khardon not get better, or the proposed repair does not correct the device's faults), we can then ask a human expert to supply the correct answer Theory revision is the process of using such correctly-answered queries to modify the initial theory, to produce a new theory that is more accurate, i e , which wil l not make those mistakes again, while remaining correct on the other queries Most theory revision algorithms use a set of transformations to hill-chmb through successive theories, unti l reaching a theory whose accuracy is (locally) optimal, based on a set of correctly-answered queries, c/, [Pol85, MB88, Coh90, OM94, WP93, CS90, LDRG94] This report addresses the obvious question Is there a better approach, which wil l directly yield the globally optimal theory Section 2 first states the theory revision objective more precisely as finding the theory with the highest accuracy from the space of theories formed by applying a sequence of transformations to a given init ial theory, here each transform involves either adding or deleting either a rule or an antecedent It also proves that a polynomial number of training """"labeled queries"""" (each a specific query paired with its correct answer) is sufficient, i e, they provide the information needed to identify a transformation-sequence that wi l l transform the given theory into a new theory whose accuracy is arbitrarily close to optimal, with arbitrarily high probability Section 3 then addresses the computational complexity of the task of finding the optimal (or even near-optimal) revised theory It first proves that the task of computing the optimal theory within this space of theories is intractable, even in tr iv ial contexts — eg, even when dealing with propositional Horn theories, or when considering with only atomic queries, or when considenng onl> a bounded number of transformations, etc 1 We then show that this task cannot even be approximated i e , that no efficient algorithm can find a theory whose inaccuracy is even close to (i e , wi thin a particular small polynomial of) optimum' We also prove that these negative results apply even when we are only generalizing, or only specializing, the init ial theory We also discuss the efficiency of other restricted variants of theory revision, t h r o u g h o u t , we wi l l assume that P=/NP [GJ79], which implies that any NP-hard problem is intractable This also implies certain approximation claims, presented below"""	approximation algorithm;belief revision;computational complexity theory;database;dorothy e. denning;expert system;han unification;horn clause;init;knowledge-based systems;maxima and minima;np-hardness;p (complexity);p versus np problem;polynomial;production system (computer science);read-only memory;realms of the haunting;sample complexity;time complexity;tom	Russell Greiner	1995			combinatorics;discrete mathematics;computer science;artificial intelligence;machine learning;mathematics;algorithm;statistics	AI	-18.54597952268361	8.848439270097433	76094
69d604738ca73484edb915f396f2671f6462b62c	the arithmetics of a theory	arts and humanities all;weak arithmetic;provability logic;sigma_1 sentence;mathematics all;interpretation;sigma_ 1 sentence	In this paper we study the interpretations of a weak arithmetic, like Buss’ theory S2, in a given theory U . We call these interpretations the arithmetics of U . We develop the basics of the structure of the arithmetics of U . We study the provability logic(s) of U from the standpoint of the framework of the arithmetics of U . Finally, we provide a deeper study of the arithmetics of a finitely axiomatized sequential theory.	provability logic	Albert Visser	2015	Notre Dame Journal of Formal Logic	10.1215/00294527-2835029	arithmetic;provability logic;epistemology;interpretation;mathematics;linguistics;algorithm;algebra	Logic	-11.44830339675735	11.083594171994756	76101
b8f8592733bc4f7bb9fbc558509dce2835227897	super-blocked clauses		In theory and practice of modern SAT solving, clause-elimination procedures are essential for simplifying formulas in conjunctive normal form (CNF). Such procedures identify redundant clauses and faithfully remove them, either before solving in a preprocessing phase or during solving, resulting in a considerable speed up of the SAT solver. A wide number of effective clause-elimination procedures is based on the clause-redundancy property called blocked clauses. For checking if a clause C is blocked in a formula F , only those clauses of F that are resolvable with C have to be considered. Hence, the blocked-clauses redundancy property can be said to be local. In this paper, we argue that the established definitions of blocked clauses are not in their most general form. We introduce more powerful generalizations, called set-blocked clauses and super-blocked clauses, respectively. Both can still be checked locally, and for the latter it can even be shown that it is the most general local redundancy property. Furthermore, we relate these new notions to existing clause-redundancy properties and give a detailed complexity analysis.	analysis of algorithms;best, worst and average case;boolean satisfiability problem;conjunctive normal form;horn clause;lambda lifting;literal (mathematical logic);preprocessor;satisfiability modulo theories;solver;true quantified boolean formula	Benjamin Kiesl;Martina Seidl;Hans Tompits;Armin Biere	2016		10.1007/978-3-319-40229-1_5	arithmetic;discrete mathematics;horn-satisfiability;unit propagation;mathematics;algorithm	AI	-9.610479507089538	17.44580730934761	76143
2b573f5c7ac8eb1a6b57d5d3ff56ef3c688ce5b8	game quantification patterns	expressive power;classical logic;alternating time temporal logic	We analyse two basic approaches of extending classical logics with quantifiers interpreted via games: Propositional Game Logic of Parikh and Alternating-Time Temporal Logic of Alur, Henzinger, and Kupferman. Although the two approaches are historically remote and they incorporate operationally orthogonal paradigms, we trace the formalisms back to common foundations and argue that they share remarkable similarities in terms of expressive power.	alternating-time temporal logic;expressive power (computer science)	Dietmar Berwanger;Sophie Pinchinat	2009		10.1007/978-3-540-92701-3_8	predicate logic;dynamic logic;zeroth-order logic;discrete mathematics;classical logic;linear temporal logic;description logic;higher-order logic;many-valued logic;interval temporal logic;intermediate logic;computational logic;mathematics;algorithm;philosophy of logic;temporal logic of actions	AI	-14.571142254827304	11.809245353384203	76304
906dc785d62254647cf13342e7445c89df8f1ea7	knowledge, belief, and semantics in the analysis of cryptographic protocols	cryptographic protocol	We resolve a debate over the appropriateness for cryptographic protocol analysis of formalisms representing knowledge vs. those representing belief by showing that they are equally adequate for protocol analysis on the logical level. We discuss the significance of semantics for logics of cryptographic protocols. In particular, we look at semantics as a measure of a logic and as a reasoning tool in its own right. To illustrate the value of a semantics we use the semantics given in [AT91] to resolve a debate over an alleged flaw in the logic of [BAN89].	cryptographic protocol	Paul F. Syverson	1992	Journal of Computer Security	10.3233/JCS-1992-13-407	cryptographic primitive;computer science;theoretical computer science;formal semantics;data mining;cryptographic protocol;well-founded semantics;operational semantics;algorithm	Security	-15.567162395560395	4.665990059125979	76406
d780345ce563b7c33b24b741cc7fdfcb8fc822a9	the quantum fourier transform based on quantum vision representation	quantum fourier transformation;quantum information processing;quantum image processing;quantum computing	Quantum Fourier transform (QFT) plays a key role in many quantum algorithms, but the existing circuits of QFT are incomplete and lacking the proof of correctness. Furthermore, it is difficult to apply QFT to the concrete field of information processing. Thus, we firstly investigate quantum vision representation (QVR) and develop a model of QVR. Then, we design four complete circuits of QFT and inverse QFT and describe the functions of their components. Meanwhile, we prove the correctness of the four complete circuits using formula derivation. Next, 2D QFT and 3D QFT based on QVR are proposed for the first time. Experimental results with simulation show the proposed QFTs are valid and useful in processing quantum images and videos. In conclusion, this paper develops a complete framework of QFT based on QVR and provides a feasible scheme for QFT to be applied in quantum vision information processing.	quantum fourier transform	Haisheng Li;Ping Fan;Haiying Xia;Shuxiang Song;Xiangjian He	2018	Quantum Information Processing	10.1007/s11128-018-2096-2	discrete mathematics;quantum mechanics;correctness;information processing;quantum algorithm;quantum image processing;derivation;physics;quantum computer;quantum;quantum fourier transform	Vision	-17.45676321790966	17.24372050608948	76588
5e43d42f9848f99c1790c7a424d377e23adc01f0	almost everywhere elimination of probability quantifiers		We obtain an almost everywhere quantifier elimination for (the noncritical fragment of) the logic with probability quantifiers, introduced by the first author in [10]. This logic has quantifiers like ∃≥3/4y, which says that “for at least 3/4 of all y”. These results improve upon the 0-1 law for a fragment of this logic obtained by Knyazev [11]. Our improvements are: 1. We deal with the quantifier ∃≥ry, where y is a tuple of variables. 2. We remove the closedness restriction, which requires that the variables in y occur in all atomic subformulas of the quantifier scope. 3. Instead of the unbiased measure where each model with universe n has the same probability, we work with any measure generated by independent atomic probabilities pR for each predicate symbol R. 4. We extend the results to parametric classes of finite models (for example, the classes of bipartite graphs, undirected graphs, and oriented graphs). 5. We extend the results to a natural (noncritical) fragment of the infinitary logic with probability quantifiers. 6. We allow each pR, as well as each r in the probability quantifier (∃≥ry), to depend on the size of the universe. §	2.5d;graph (discrete mathematics);predicate variable;quantifier (logic)	H. Jerome Keisler;Wafik Boulos Lotfallah	2009	J. Symb. Log.		combinatorics;discrete mathematics;bipartite graph;clique-width;simplex graph;mathematics;biregular graph;algorithm	Theory	-6.601563131758656	16.698175353878447	76868
59275d013fc1ff4b99c95fa8d0e347a022aabba4	a simple sufficient condition for strong implementation	implementation;sufficient condition;matching rule;strong equilibrium	In an important step forward Maskin (1977) showed that two properties −Monotonicity and No Veto Power − form a sufficient condition for Nash implementation when conjoinet. In contrast to the vast literature that followed, this characterization has two big advantages: First, it is often easy to verify, and second, it has an elegant and simple interpretation. However, there does not exist a similar condition for social choice correspondences that are implementable in strong equilibrium. All existing characterizations are either hard to verify or apply only in comprehensive preference domains. In this paper we improve the situation by give such a condition called the Axiom of Sufficient Reason and show that this is a practical tool in some important applications. JEL Classification: C72; D78	nash equilibrium	Ville Korpela	2013	J. Economic Theory	10.1016/j.jet.2013.04.013	epsilon-equilibrium;mathematical optimization;mathematics;mathematical economics;implementation;welfare economics	AI	-5.8591786830990795	9.301481629705975	76917
90a763e6cdf5b29399de5bda8505fd3c7fe17246	belief change in reasoning agents: axiomatizations, semantics and computations		The capability of changing beliefs upon new information in a rational and effi ci nt way is crucial for an intelligent agent. Belief change therefore is one of the central res ea ch fields in Artificial Intelligence (AI) for over two decades. In the AI literature, two differen t ki ds of belief change operations have been intensively investigated: belief update, which deal with situations where the new information describes changes of the world; and belief revision, w hich assumes the world is static. As another important research area in AI, reasoning abou t ctions mainly studies the problem of representing and reasoning about effects of actions . The e two research fields are closely related and apply a common underlying principle, that is, an agen t should change its beliefs (knowledge) as little as possible whenever an adjustment is necessa ry. This lays down the possibility of reusing the ideas and results of one field in the other, and vic e verse. This thesis aims to develop a general framework and devise computational models that are applicable in reasoning about actions. Firstly, I shall propose a new framework for iterated belief revision by introducing a new postulate to the existing AGM/DP postulates, which provides g eneral criteria for the design of iterated revision operators. Secondly, based on the ne w framework, a concrete iterated revision operator is devised. The semantic model of the operator gi ves nice intuitions and helps to show its satisfiability of desirable postulates. I also show that the c omputational model of the operator is almost optimal in time and space-complexity. In order to d eal with the belief change problem in multi-agent systems, I introduce a concept of mu tual belief revision which is concerned with information exchange among agents. A concre te mutual revision operator is devised by generalizing the iterated revision operator. Likewis e, a emantic model is used to show the intuition and many nice properties of the mutual revision oper at r, and the complexity of its computational model is formally analyzed. Finally, I present a b elief update operator, which takes into account two important problems of reasoning ab out ction, i.e., disjunctive updates and domain constraints. Again, the updated operator is pr esented with both a semantic model and a computational model.	apply;artificial intelligence;belief revision;computation;computational model;dspace;disjunctive normal form;distributed multi-agent reasoning system;effi;information exchange;intelligent agent;iteration;multi-agent system;verse protocol	Yi Jin	2007			semantics;computation;natural language processing;artificial intelligence;computer science	AI	-17.19237247224	5.9225984390534085	77011
08d26dc1ff62399c5745046eb10f6ee677007d5d	an augmented modal logic	modal logic		modal logic	Leonard Goddard	1965	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093958148	modal logic;dynamic logic;normal modal logic;modal μ-calculus;epistemology;mathematics;accessibility relation;multimodal logic	Logic	-13.000656324969123	12.05678007143439	77093
3c54671427c4ae259cee9160b8dca05b715fc752	theory and application of multiple-valued logics for knowledge-based systems	uncertain reasoning;knowledge-based systems.;multiple- valued logics;knowledge based system	Multiple-valued logics are useful for dealing with uncertainty and imprecision in knowledge-based systems. In this paper, we present the foundations of QMORPH: a tool that assists users in the declaration of such logics and in the declaration of the communication mechanism between two of these different logics by preserving inference.	declaration (computer programming);distributed computing;knowledge-based systems;reasoning system;requirement	José Antonio Reyes;Francesc Esteva;Josep Puyol-Gruart	1999			swing;t-norm fuzzy logics;model-based reasoning;knowledge representation and reasoning;deductive reasoning;non-monotonic logic;reasoning system;artificial intelligence;procedural knowledge;algorithm;computer science	Logic	-18.586564789734766	10.453864678103923	77183
009c91a7c607f75a2a6aab966f8081613d6af83c	composing functions to minimize image size	minimization;computational complexity;algorithms;database theory	We show that, given a collection F of functions from a finite set D to itself, one can, in polynomial time, find a composition f of functions in F for which the size of $f(D)$ is minimized. This is to be contrasted with the fact that it is PSPACE-complete to determine whether a specific function f is a composition of functions in F. The running time of our algorithm is $O(|D|^2 (|D| + |F|))$, and this bound can be improved if an appropriately abbreviated representation of F is used. The problem first arose in connection with the minimization of conjunctive queries for relational databases.		M. R. Garey;David S. Johnson	1985	SIAM J. Comput.	10.1137/0214037	mathematical optimization;database theory;combinatorics;discrete mathematics;computer science;theoretical computer science;mathematics;computational complexity theory;algorithm	Theory	-6.427084861076104	18.03856795674075	77547
92453444d69d19b276c0d507a68fdd400d16e41e	representations and solutions for game-theoretic problems	game theory;multi agent system;computational techniques;imperfect information;multi agent systems;logic programming;algorithms;poker;logic programs;game playing	A system with multiple interacting agents (whether artiicial or human) is often best analyzed using game-theoretic tools. Unfortunately, while the formal foundations are well-established, standard computational techniques for game-theoretic reasoning are inadequate for dealing with realistic games. This paper describes the Gala system, an implemented system that allows the speciication and eecient solution of large imperfect information games. The system contains the rst implementation of a recent algorithm, due to Koller, Megiddo, and von Stengel. Experimental results from the system demonstrate that the algorithm is exponentially faster than the standard algorithm in practice, not just in theory. It therefore allows the solution of games that are orders of magnitude larger than were previously possible. The system also provides a new declarative language for compactly and naturally representing games by their rules. As a whole, the Gala system provides the capability for automated game-theoretic analysis of complex real-world situations.	algorithm;computation;computer science;declarative programming;dual ec drbg;experiment;game theory;ibm notes;interaction;powell's method;robotics;ted	Daphne Koller;Avi Pfeffer	1997	Artif. Intell.	10.1016/S0004-3702(97)00023-4	simulation;computer science;artificial intelligence;theoretical computer science;perfect information;multi-agent system;mathematics;logic programming	AI	-18.533216048487112	12.590697783829848	77660
355dabb14335dd465af4588b0865a2d73976d628	isomorphism of intersection and union types		This paper gives a complete characterisation of type isomorphism definable by terms of a λ-calculus in a type system with intersection and union types. Type isomorphism is usually proved using a form of Inversion Lemma to relate terms and types. Currently in the literature no inversion lemma for intersection and union types is provided. Moreover, the subject reduction property does not hold in general when union is considered. However it is well known that in λ-calculus, independently of the considered type system, the isomorphism between two types can be realised only by an invertible term. Notably all invertible terms are linear terms. In this paper the isomorphism of intersection and union types is investigated using a relevant type system for linear terms enjoying subject reduction property and a suitable form of inversion lemma. To characterise type isomorphism a notion of similarity between types and a notion of type reduction are introduced. Types are proved to have a unique normal form with respect to the reduction rules and two types are proved to be isomorphic if and only if their normal forms are similar.	database normalization;lambda calculus;subject reduction;substructural type system	Mario Coppo;Mariangiola Dezani-Ciancaglini;Ines Margaria;Maddalena Zacchi	2017	Mathematical Structures in Computer Science	10.1017/S0960129515000304	order isomorphism;combinatorics;discrete mathematics;topology;group isomorphism;mathematics;isomorphism;antiisomorphism	PL	-8.060335665908235	15.845252764724085	77722
9fb4d3c6b1c68474a3f5e351e9cbf32ee4317384	non-linear real arithmetic benchmarks derived from automated reasoning in economics		We consider problems originating in economics that may be solved automatically using mathematical software. We present and make freely available a new benchmark set of such problems. The problems have been shown to fall within the framework of non-linear real arithmetic, and so are in theory soluble via Quantifier Elimination (QE) technology as usually implemented in computer algebra systems. Further, they all can be phrased in prenex normal form with only existential quantifiers and so are also admissible to those Satisfiability Module Theory (SMT) solvers that support the QF_NRA logic. There is a great body of work considering QE and SMT application in science and engineering, but we demonstrate here that there is potential for this technology also in the social sciences.	automated reasoning;benchmark (computing);computer algebra system;computer science;linear algebra;mathematical optimization;mathematical software;nonlinear system;prenex normal form;quadratic equation;quantifier (logic);query expansion;wolfram mathematica;z3 (computer)	Casey B. Mulligan;Russell J. Bradford;James H. Davenport;Matthew England;Zak Tonks	2018	CoRR		quantifier elimination;satisfiability;symbolic computation;automated reasoning;arithmetic;prenex normal form;nonlinear system;mathematical software;mathematics	Logic	-11.83244609803515	10.698158779313385	77983
8a2c47c3476d87162996120499f7c9cc92d76fe4	hyperedge replacement jungle rewriting for term-rewriting systems and programming	rewriting system;programmation;plenitud;prolog;correction;logical programming;term rewrite system;programacion;corrections;programmation logique;reecriture;correccion;completeness;rewriting;completude;programacion logica;programming;systeme reecriture;reescritura	We introduce hyperedge replacement jungle rewriting, a graph-rewriting formalism suitable for modeling the manipulation of terms and similar structures, and investigate its expressive power by showing that it can model both term-rewriting systems and logic programming in a faithful way. For term-rewriting systems we prove the soundness of their jungle representation, and a result of completeness w.r.t. applicability which is stronger than similar results in the related literature, since it works also for non-left-linear rules. For logic programming both soundness and completeness hold.	directed acyclic graph;double pushout graph rewriting;formal system;graph rewriting;logic programming;modulo operation;occurs check;prolog;rewrite (programming);semantics (computer science);single pushout graph rewriting;unification (computer science)	Andrea Corradini;Francesca Rossi	1993	Theor. Comput. Sci.	10.1016/0304-3975(93)90063-Y	programming;rewriting;completeness;computer science;theoretical computer science;mathematics;programming language;prolog;algorithm	Logic	-13.228096540479244	17.433130575184297	78083
ada75ed36ccd48ddcd65c32b7f14023c960c8d74	multi-modal and temporal logics with universal formula - reduction of admissibility to validity and unification	logical consecutions;temporal logic;inference rule;modal logic;admissible rules;linear temporal logic;algorithms;inference rules;decidability	The article studies multi-modal (in particular temporal, tense, logics) possessing universal formulas. We prove (Theorems 11 and 12) that the admissibility problem for inference rules (inference rules with parameters) is decidable for all decidable multi-modal (in particular, temporal) logics possessing an universal formula and decidable w.r.t. unification (unification with parameters). These theorems use characterizations of admissible rules in terms of valid rules and unifiable formulas. Results are applied to wide range of multi-modal logics, including all linear transitive temporal logics, all temporal logics with bounded zigzag, all multi-modal logics with explicit universal modality. As consequence, we show that the admissibility problem for all such logics is decidable (e.g. for all logics of the series S4nU, n∈N).	admissible heuristic;han unification;modal logic;modality (human–computer interaction);unification (computer science)	Vladimir V. Rybakov	2008	J. Log. Comput.	10.1093/logcom/exm078	monoidal t-norm logic;t-norm fuzzy logics;structural rule;discrete mathematics;computation tree logic;computer science;artificial intelligence;mathematics;algorithm;rule of inference	Logic	-12.772259836193193	13.849612980442318	78117
e623eab9d80c0e8468e72875130ca9e66d7e4937	"""the complexity of the modal predicate logic of """"true in every transitive model of zf"""""""		Robert Solovay [8] investigated the version of the modal sentential calculus one gets by taking no to mean q is true in every transitive model of ZermeloFraenkel set theory (ZF). Defining an interpretation to be a function * taking formulas of the modal sentential calculus to sentences of the language of set theory that commutes with the Boolean connectives and sets (LOf)* equal to the statement that q* is true in every transitive model of ZF, and stipulating that a modal formula ? is valid if and only if, for every interpretation *, 0* is true in every transitive model of ZF, Solovay obtained a complete and decidable set of axioms.1 In this paper, we stifle the hope that we might continue Solovayu0027s program by getting an analogous set of axioms for the modal predicate calculus. The set of valid formulas of the modal predicate calculus is not axiomatizable;2 indeed, it is complete rIl We also look at a variant notion of validity according to which a formula X counts as valid if and only if, for every interpretation *, 0* is true. For this alternative conception of validity, we shall obtain a lower bound of complexity: every set which is El? in the set of sentences of the language of set theory true in the constructible universe will be 1-reducible to the set of valid modal formulas.3 We define Y, the language of set theory, to be the first-order language whose predicates are = and and whose logical operations are conjunction, negation, and universal quantification. Form the language Yv by adding to Y a canonical name a for each set a, in such a way that the function taking a to a is absolutely definable, as are such syntactic operations as substitution of constants for variables. We say that a sentence X of Yv is true in a set U iff the sentence k u one gets from X by restricting the quantifiers to U, replacing (Vx) by (Vx E L), is true. By model we shall always mean a transitive set U in which all the axioms of ZF are true. We assume that, for every set x, there is a model containing x. The easiest way to justify this assumption to work within a metatheory in which the language of set theory has been enriched by adding a truth predicate for Yv and the axioms have been strengthened by allowing the truth predicate to appear within formulas	modal logic;zermelo–fraenkel set theory	Vann McGee	1997	J. Symb. Log.		modal logic;predicate logic;normal modal logic;combinatorics;discrete mathematics;mathematics;predicate variable;transitive closure;algorithm	Logic	-6.686537332703734	13.4077761101795	78250
c5f317fcdeb3ecead7fcd87c0d835605bb6a027e	a note on recursive relations		Given a class U which is the result of closing a finite class of expressions with respect to a binary mode of combination, there exists, according to RFBL,u0027 a recursively enumerable subclass K* of U, and concepts of representation (5.3) and complete representation (6.2) such that: (a) A relation among members of U is recursively enumerable if and only if it is represented in K*. (6.7.) (b) A relation among members of U is recursive if and only if it is completely represented in K*. (6.10.) The proof of (b) is not altogether correct as given in RFBL but can be corrected and greatly simplified by defining u0027Mu0027 of 4.5 as u0027LLOu0027, where u0027Lu0027 is so defined as to give the result,	recursion	Frederic Brenton Fitch	1968	J. Symb. Log.		corecursion;recursion;combinatorics;discrete mathematics;recursive definition;double recursion;primitive recursive function;mathematics;mutual recursion;algebra	Theory	-5.657473996006617	14.746604801659188	78452
4c4a7e862fb70177b4d281fa8b21531d3fead37a	some comments concerning cyclic type contractions		This article has been retracted: please see Elsevier Policy on Article Withdrawal ( http://www.elsevier.com/locate/withdrawalpolicy ).  This article has been retracted at the request of the Author and Editor in Chief due to serious errors in the data. One of the readers of this article has contacted the Editor stating that “the author claims to show that a number of fixed point papers dealing with cyclic type contractions are equivalent to their corresponding ordinary fixed point theorems. However his reasoning is fallacious. Simply put, he correctly claims that A implies B, then he draws his conclusion by asserting that, therefore, B implies A”.			2014	Applied Mathematics and Computation	10.1016/j.amc.2014.01.156	computer science;artificial intelligence;algorithm	PL	-7.425955404713579	7.7113037587523365	78495
a8901b26ead615cb1056db3c1367a99614b3e411	simple feature engineering via neat default retrenchments	retrenchment;neat and default retrenchment;feature engineering	Feature engineering deliberately stages the incorporation of elements of functionality into a system according to perceived user and market needs. Conventional refinement based techniques for feature engineering suffer from the need to have successive features build smoothly on their predecessors, since contradicting what has already been established is anathema for any refinement technique. Real feature engineering however must at times insist on such contradictions. Retrenchment offers a more flexible approach for capturing such less well behaved development steps within a formal framework that interworks smoothly with refinement, and a generic account of ‘simple’ feature engineering (encompassing situations in which operations may be dealt with, one at a time) is given, using a simple language to express feature oriented descriptions (FODs) of operations, and a simple rewriting formalism to express changes in the FOD. The generic account shows that under a set of reasonable assumptions, the retrenchments belong to the class of neat, default retrenchments.	feature engineering;refinement (computing);retrenchment (computing);rewriting;semantics (computer science);smoothing	Richard Banach;Czeslaw Jeske	2011	J. Log. Algebr. Program.	10.1016/j.jlap.2010.12.001	feature;computer science;artificial intelligence;data mining;retrenchment	SE	-16.6541627889445	5.689310227157523	78847
cf84c8ee6b9a3672e7a9bd3d8bcb324548e894e1	refinement modal logic	modal logic;infomation change	In this paper we present refinement modal logic. A refinement is like a bisimulation, except that from the three relational requirements only ‘atoms’ and ‘back’ need to be satisfied. Our logic contains a new operator ∀ in additional to the standard modalities 2 for each agent. The operator ∀ acts as a quantifier over the set of all refinements of a given model. We call it the refinement operator. As a variation on a bisimulation quantifier, it can be seen as a refinement quantifier over a variable not occurring in the formula bound by the operator. The logic combines the simplicity of multi-agent modal logic with some powers of monadic second order quantification. We present a sound and complete axiomatization of multiagent refinement modal logic. We also present an extension of the logic to the modal μ-calculus, and an axiomatization for the single-agent version of this logic. Examples and applications are also discussed: to software verification and design (the set of agents can also be seen as a set of actions), and to dynamic epistemic logic. We further give detailed results on the complexity of satisfiability, and on succinctness.	agent-based model;axiomatic system;bisimulation;boolean satisfiability problem;dynamic epistemic logic;epistemic modal logic;modal μ-calculus;multi-agent system;quantifier (logic);refinement (computing);requirement;software verification	Laura Bozzelli;Hans van Ditmarsch;Tim French;James Hales;Sophie Pinchinat	2014	Inf. Comput.	10.1016/j.ic.2014.07.013	modal logic;predicate logic;dynamic logic;zeroth-order logic;normal modal logic;modal μ-calculus;discrete mathematics;linear temporal logic;description logic;higher-order logic;computer science;intermediate logic;bunched logic;axiom s5;mathematics;accessibility relation;substructural logic;multimodal logic;algorithm;strict conditional	Logic	-14.971624019531996	12.23092220500638	78854
82b2b51b36f8d4078eb895f47767ec8154fce4eb	approximate reasoning about combined knowledge	multi agent system;agent based;decision problem;approximate reasoning;first order;model checking;computational complexity;intelligent agent;background knowledge	Just as cooperation in multi-agent systems is a central issu e for solving complex decision problems, so too is the ability for an in telligent agent to reason about combined knowledge, coming from its backgroun d knowledge and the communicated information. Specifically, such an agent i s confronted with three main difficulties: the prospect of inconsistency whic h arises when different beliefs are grouped together, the presence of uncertainty w hich may occur due to not fully reliable beliefs, and the high computational co mplexity of reasoning with very large pools of collected information. The purpose of this paper is to define a formal framework which handles these three aspects a nd which is useful to specify resource bounded agents. Based on the concept of a proximate reasoning, our framework includes several major features. Fir st, a model checking approach is advocated, which enables an agent to perform dec idable reasoning with a first-order representation language. Second, a stepw is procedure is included for improving approximate answers and allowing thei r convergence to the correct answer. Third and finally, both sound approximation s a d complete ones are covered. This method is flexible enough for modeling trac table reasoning in very large, inconsistent and uncertain sets of knowledge.	approximation algorithm;computation;decision problem;first-order predicate;intelligent agent;model checking;multi-agent system;trac	Frédéric Koriche	1997		10.1007/BFb0026764	model checking;computer science;artificial intelligence;theoretical computer science;model-based reasoning;machine learning;decision problem;multi-agent system;first-order logic;procedural reasoning system;computational complexity theory;intelligent agent	AI	-18.27502355317738	5.50066238468123	78857
dd98d7176e2eec5863fb522758832abc9b66134b	polynomial equivalence among systems llnc, llnca and llnc0	logique lineaire;polynomial equivalence;teoria demonstracion;atome;theorie preuve;atomo;connective;proof theory;logic;non commutative;cyclic linear logic;equivalence polynomiale;equivalence;tensor;decision problem;logique lineaire cyclique;atoms;tenseur;linear logic;connectif;equivalencia;logique;logica	We investigate three fragments of cyclic linear logic, respectively, LLNC containing all propositional variables, LLNC a  built on a single variable and the constant-only fragment LLNC 0 . By using non-commutative proofnets, we show that the decision problems of these fragments are polynomially equivalent.	polynomial;polynomial-time reduction;turing completeness	François Métayer	1999	Theor. Comput. Sci.	10.1016/S0304-3975(99)00053-5	equivalence;linear logic;combinatorics;discrete mathematics;tensor;computer science;decision problem;proof theory;mathematics;programming language;logic;algorithm;algebra	ECom	-11.674842478637801	13.909115340201009	79004
45f57249fb926228bf593bd405b912e6d8244e9a	bisimulation for weakly expressive coalgebraic modal logics		Research on the expressiveness of coalgebraic modal logics with respect to semantic equivalence notions has so far focused mainly on finding logics that are able to distinguish states that are not behaviourally equivalent (such logics are said to be expressive). In other words, the notion of behavioural equivalence is taken as the starting point, and the expressiveness of the logic is evaluated against it. However, for some applications, modal logics that are not expressive are of independent interest. Such an example is given by contingency logic. We can now turn the question of expressiveness around and ask, given a modal logic, what is a suitable notion of semantic equivalence? In this paper, we propose a notion of Λ-bisimulation which is parametric in a collection Λ of predicate liftings. We study the basic properties of Λ-bisimilarity, and prove as our main result a Hennessy-Milner style theorem, which shows that (for finitary functors) Λ-bisimilarity exactly matches the expressiveness of the coalgebraic modal logic arising from Λ. 1998 ACM Subject Classification F.3.2 Semantics of Programming Languages, F.4.1 Mathematical Logic, I.2.4 Knowledge Representation Formalisms and Methods	bisimulation;knowledge representation and reasoning;modal logic;semantics (computer science);turing completeness	Zeinab Bakhtiari;Helle Hvid Hansen	2017		10.4230/LIPIcs.CALCO.2017.4	computer science;contingency;predicate (grammar);equivalence (measure theory);discrete mathematics;semantic equivalence;modal logic;functor;bisimulation;finitary	Logic	-13.338720286006998	9.187219142646978	79028
6a63ca01a0d61d2ef2608fcd2fcd86662c4be552	how to pass an intersetcion, or automata theory is still useful	automata theory;knowledge representation	 In this paper I present several knowledge representation (KR) languages usedwithin one project, and show relationships between these languages. I try topersuade that when designing a complex AI system, one should use different KRformalisms, namely the ones most suitable for purposes of different subsystems,and devise an appropriate tool for data (or knowledge) interchange between thesesubsystems. The KR formalisms need not be the ones traditionally associatedwith AI --- there are lots of... 	automata theory;automaton	Jacek Malec	1991			ω-automaton;knowledge representation and reasoning;nested word;theoretical computer science;quantum finite automata;mobile automaton;computer science;dfa minimization;theory of computation;automata theory	Logic	-18.89042308081618	16.616480793601532	79236
1837850279de665a745aadb16ef12f0f166d4f4a	a relationship between ordinary functional completeness and a generalisation of the concept			completeness (knowledge bases);functional completeness	Alan Rose	1986	Math. Log. Q.	10.1002/malq.19860321905	mathematical analysis;discrete mathematics;mathematics	Logic	-11.315293579758052	11.931580789889548	79410
b0a2b57bace007cdd441d26e6d1dd7750b6b2722	model update for automated planning		Automated planning (Ghallab, Nau, and Traverso 2004) is the artificial intelligence field that studies the process of reasoning about actions and goals, seeking for implementation of planners. Essentially, a planner is an algorithm that synthesizes a plan of actions by analyzing a formal specification of the environment’s dynamic and the agent’s goal. Since the trajectory of a plan have temporal properties that can be formally specified, formal methods based on model checking techniques have been used to guarantee the reliability of plans (Cimatti et al. 1997; Cimatti, Roveri, and Traverso 1998; Daniele, Traverso, and Vardi 1999). A planning algorithm based on model checking (Figure 2) receives a planning domain M , a planning goal φ and either returns a plan, i.e., a substructure M ⊆ M that satisfies the goal φ; or failure if there is not such a plan. Traditionally, the planning domain is represented by a Kripke structure (Kripke 1963) and the goal is specified in the Computational Tree Logic CTL (Clarke and Emerson 1982).	algorithm;artificial intelligence;automated planning and scheduling;computation tree logic;edmund m. clarke;formal methods;formal specification;kripke structure (model checking);model checking	Maria Viviane de Menezes;Leliane Nunes de Barros	2011			computer science;data mining;database;algorithm	AI	-18.789676364990097	13.975205147580784	79411
5820266c704ac7a0812ee35e7c9af9d4d0715bca	kripke completeness of strictly positive modal logics over meet-semilattices with operators		Our concern is the completeness problem for strongly positive (SP) theories, that is, sets of implications between SP-terms built from propositional variables, conjunction and modal diamond operators. Originated in logic, algebra and computer science, SP-theories have two natural semantics: meet-semilattices with monotone operators providing Birkhoff-style calculi, and first-order relational structures (aka Kripke frames) often used as the intended structures in applications. Here we lay foundations of a completeness theory that aims to answer the question whether the two semantics define the same consequence relations for a given SP-theory. In this paper, we investigate connections between various consequence relations for the fragment of propositional multi-modal logic that comprises implications σ → τ , where σ and τ are strictly positive modal formulas [8] constructed from propositional variables using conjunction ∧, unary diamond operators ✸i, and the constant ‘truth’ ⊤. We call such formulas SP-implications and we call sets of SP-implications SP-theories . §1. Background. Consequence relations between SP-theories and SP-implications have been studied in knowledge representation, universal algebra, and modal provability logic. 1.1. Description logic EL. In knowledge representation, ontologies are used to define vocabularies for domains of interest together with logical relationships between the vocabulary terms [4, 54, 5]. The description logic EL [6, 3] is a widely used ontology language, in which such relationships are given by means of (notational variants of) SP-implications. A typical example of an EL ontology is SNOMED CT [65] that provides a standardised medical vocabulary for the healthcare systems of more than twenty countries. SNOMED CT consists of about 300,000 SP-implications covering most aspects of medicine and healthcare. For example, the SP-implication Viral pneumonia → ✸causative agentVirus ∧✸finding siteLung says that viral pneumonia is caused by a virus and found in lungs. EL is the logical underpinning of the profile OWL2EL of the Web Ontology Language OWL2 [58] designed by W3C for writing up ontologies. Under the EL semantics, SP-implications are interpreted in relational structures known as Kripke	birkhoff interpolation;campus;ct scan;completeness (knowledge bases);computer science;description logic;discontinuity layout optimization;embedded system;fenchel's duality theorem;first-order predicate;informatics;knowledge representation and reasoning;kripke semantics;modal logic;normal modal logic;ontology (information science);operational semantics;propositional variable;provability logic;systematized nomenclature of medicine;the wall street journal;theory;thomason collection of civil war tracts;unary operation;vocabulary;web ontology language;world wide web;monotone	Stanislav Kikot;Ágnes Kurucz;Yoshiki Tanaka;Frank Wolter;Michael Zakharyaschev	2017	CoRR		mathematics;operator (computer programming);modal logic;discrete mathematics;completeness (statistics);kripke semantics;semantics;normal modal logic;propositional variable;kripke structure	AI	-11.246865570429158	13.389337601398145	79592
35edf314c57d62d504a855b1de706f9f3375c4d1	admissibility in de morgan algebras	admissibility;de morgan algebras;structural completeness	Characterizations of admissible quasi-identities, which may be understood as quasi-identities holding in free algebras on countably infinitely many generators, are provided for classes of De Morgan algebras and lattices.		George Metcalfe;Christoph Röthlisberger	2012	Soft Comput.	10.1007/s00500-012-0839-z	arithmetic;artificial intelligence;algorithm	Logic	-9.158136699048127	13.18811704786338	79669
3896d833f428bb483e15de1a584da4f2348797e6	answer set programming and plan generation	answer sets;answer set programming;frame problem;nonmonotonic reasoning;logic programs;default logic	The idea of answer set programming is to represent a given computational problem by a logic program whose answer sets correspond to solutions, and then use an answer set solver, such as smodels or dlv, to nd an answer set for this program. Applications of this method to planning are related to the line of research on the frame problem that started with the invention of formal nonmonotonic reasoning in 1980.	answer set programming;computational problem;dlv;frame problem;logic programming;non-monotonic logic;solver;stable model semantics	Vladimir Lifschitz	2002	Artif. Intell.	10.1016/S0004-3702(02)00186-8	discrete mathematics;frame problem;stable model semantics;computer science;artificial intelligence;non-monotonic logic;answer set programming;mathematics;default logic;logic programming;algorithm	AI	-18.096637704434563	14.32234668222607	79714
7318f73d1746694bef00889dd8e6b22f49c1cd54	two concepts from the theory of models		In this note we point out that two concepts which have been introduced separately into the theory of models are extensionally equivalent. The basic ideas can be expressed conveniently in the terminology of Tarskiu0027s theory of arithmetical classes.2 It will be recalled that an arithmetical class is a class consisting of all algebraic structures which satisfy some fixed sentence of the first-order functional calculus. A more general concept is that of a quasi-arithmetical class, whose elements are all algebraic structures which satisfy some fixed set of first-order sentences. Now where H and K are any two classes of algebraic structures, Abraham Robinson has defined4 the relation H is persistent with respect to K to mean that (i) HnK is non-empty, and (ii) whenever M e HnK, Mu0027 is an extension of M, and Mu0027 e K, then Mu0027 c H. Concerning this notion Robinson has established5 the following theorem: If K is the class of abelian groups (or of commutative fields) and H is an arithmetical class which is persistent with respect to K, then HnK contains a group (or field) which is finite. This leads us to the following definition.		Leon Henkin	1956	J. Symb. Log.		absolute theory	Logic	-6.310483845623914	13.632172620960853	79799
57a4042dbda0e4f6666e5850ded07f48eeafe22e	foundations of probabilistic logic	probabilistic logic	We formalize a mathematical approach to probabilistic logic for zero-order logic and derive new inequalities that are necessary and sufficient for consistent probability assignments to propositions. We prove that a complete theory of probabilistic logic requires the a priori assignment of probabilities for a system with k basic propositions. We also show that a proposal due to Cheeseman, namely, to regard measures of confidence in knowledge systems as expectations that are conditioned on unknown distributions, does not work in general. We demonstrate this by showing that several certainty measures proposed for expert systems are not consistent with the derived inequalities for probabilistic logics.	expert system;knowledge-based systems;probabilistic automaton	H. Guggenheimer;R. S. Freedman	1987			dynamic logic;description logic;probabilistic ctl;computer science;digital probabilistic physics;probabilistic logic;probabilistic argumentation;probabilistic logic network;multimodal logic;autoepistemic logic;subjective logic	AI	-15.974967985895352	5.486930211341925	79829
ec6d887995085a6cb1b0dea71695b2747d3a0a33	navigability with imperfect information		The article studies navigability of an autonomous agent in a maze where some rooms may be indistinguishable. In a previous work the authors have shown that the properties of navigability in such a setting depend on whether an agent has perfect recall. Navigability by an agent with perfect recall is a transitive relation and without is not transitive. This article introduces a notion of restricted navigability and shows that a certain form of transitivity holds for restricted navigability, even for an agent without perfect recall. The main technical result is a sound and complete logical system describing the properties of restricted navigability.	autonomous agent;autonomous robot;formal system;vertex-transitive graph	Kaya Deuser;Pavel Naumov	2017	CoRR		autonomous agent;machine learning;navigability;transitive relation;mathematics;artificial intelligence;perfect information;recall	Logic	-17.55072444967285	4.228371146795686	79839
240b32879efda8a4c8d8367b900ebb2d959a59bd	an effective characterization of the alternation hierarchy in two-variable logic		We give an algebraic characterization, based on the bilateral semidirect product of finite monoids, of the quantifier alternation hierarchy in two-variable first-order logic on finite words. As a consequence, we obtain a new proof that this hierarchy is strict. Moreover, by application of the theory of finite categories, we are able to make our characterization effective: that is, there is an algorithm for determining the exact quantifier alternation depth for a given language definable in two-variable logic.	algorithm;bilateral filter;first-order logic;first-order predicate;linear algebra;manfred r. schroeder;quantifier (logic);two-variable logic	Andreas Krebs;Howard Straubing	2017	ACM Trans. Comput. Log.	10.1145/3149822	discrete mathematics;quantifier elimination;computer science;mathematics;algorithm;algebra	Logic	-9.240328854298886	16.03813997204726	79856
e57c58b0503ed6794af366e081ec16a171f205a6	the generalized completeness of horn predicate-logic as a programming language	programming language		apl;programming language;turing completeness	Hajnal Andréka;István Németi	1978	Acta Cybern.		predicate logic;discrete mathematics;first-generation programming language;mathematics;very high-level programming language;functional logic programming;programming language;algorithm;fifth-generation programming language;programming domain;fourth-generation programming language;logic programming	PL	-14.626069642830407	16.28551960349143	79938
7696684d0dedc469bbbecb8dc222594c17b83f29	credulous and sceptical argument games for preferred semantics	teoria demonstracion;theorie preuve;intelligent tutoring system;proof theory;circonscription;semantics;prise decision;semantica;semantique;circumscription;defeasible argumentation;toma decision;circonscripcion;systeme tutorial intelligent	This paper presents dialectical proof theories for Dung's preferred semantics of defeasible argumentation. The proof theories have the form of argument games for testing membership of some (credulous reasoning) or all preferred extensions (sceptical reasoning). The credulous proof theory is for the general case, while the sceptical version is for the case where preferred semantics coincides with stable semantics. The development of these argument games is especially motivated by applications of argumentation in automated negotiation, mediation of collective discussion and decision making, and intelligent tutoring.		Gerard Vreeswijk;Henry Prakken	2000		10.1007/3-540-40006-0_17	computer science;artificial intelligence;proof theory;mathematics;semantics;circumscription;algorithm	AI	-14.85207836288116	8.569001455707527	80006
0cadb99f497d648cc2e3e9537700d0e9ba05f1b2	exptime tableaux with global caching for description logics with transitive roles, inverse roles and role hierarchies	global caching;hierarchical systems;conference paper;logic programming;decision procedure;computational complexity;global optimization;description logic;transitive roles;inverse problems;keywords buffer storage	The description logic SHI extends the basic description logic ALC with transitive roles, role hierarchies and inverse roles. The known tableau-based decision procedure [11] for SHI exhibit (at least) NEXPTIME behaviour even though SHI is known to be EXPTIME-complete. The automata-based algorithms for SHI often yield optimal worst-case complexity results, but do not behave well in practice since good optimisations for them have yet to be found. We extend our method for global caching in ALC to SHI by adding analytic cut rules, thereby giving the first EXPTIME tableau-based decision procedure for SHI, and showing one way to incorporate global caching and inverse roles.	algorithm;automata theory;best, worst and average case;cache (computing);decision problem;description logic;exptime;method of analytic tableaux;nexptime;worst-case complexity	Rajeev Goré;Linh Anh Nguyen	2007		10.1007/978-3-540-73099-6_12	combinatorics;discrete mathematics;description logic;computer science;inverse problem;artificial intelligence;database;mathematics;programming language;computational complexity theory;logic programming;algorithm;global optimization	AI	-16.76480800695688	14.362490791701516	80423
0e5ce1d7424d210a29e751a5a8a4c647af173415	some mathematicians are not turing machines	turing machine;logic in computer science;correctness proof	"""A certain mathematician M, considering some hypothesis H, conclusion C and text P, can arrive at one of the following judgments: (1) P does not convince M of the fact that since H, it follows that C; (2) P is the proof that since H, it follows that C (judgment of the type""""Proved""""). Is it possible to replace such a mathematician with an arbitrary Turing machine? The paper provides a proof that the answer to the question is negative under the two following conditions: (1) M is faultless, namely his judgment""""Proved""""always implies that since H, it actually follows that C; (2) M recognizes a certain P' as the correct proof of the fact that for certain H' and C', if H', then C' (where P', H', and C' are stated in the paper)."""	turing machine	Evgeny Chutchev	2010	CoRR		computer science;turing machine;artificial intelligence;mathematics;algorithm	Theory	-9.751828374147713	6.591819045001798	80458
881cbd901f62d039ab733291cdb2eb815ff77461	clause form conversions for boolean circuits	probleme satisfiabilite;boolean circuits;logica booleana;naming;verificacion modelo;formule cnf;satisfiabilite;verification modele;satisfiability;constraint satisfaction;satisfaction contrainte;formula cnf;model checking;problema satisfactibilidad;estructura datos;denomination;denominacion;logique booleenne;structure donnee;satisfaccion restriccion;conjunctive normal form;boolean logic;data structure;satisfiability problem;satisfactibilidad	Boolean circuits are well established as a data structure for building propositional encodings of problems in preparation for satisfiability solving. The standard method for converting Boolean circuits to clause form (naming every vertex) has a number of shortcomings In this paper we give a projection of several well-known clause form conversions to a simplified Boolean circuit. We introduce a new conversion which we show is equivalent to that of Boy de la Tour in certain circumstances and is hence optimal in the number of clauses that it produces. We extend the algorithm to cover reduced Boolean circuits, a data structure used by the model checker NuSMV. We present experimental results for this and other conversion procedures on BMC problems demonstrating its superiority, and conclude that the CNF conversion plays a significant role in reducing the overall solving time.	algorithm;boolean circuit;complexity class;conjunctive normal form;data structure;intelligent platform management interface;linear algebra;model checking;nusmv	Paul B. Jackson;Daniel Sheridan	2004		10.1007/11527695_15	model checking;boolean algebra;boolean circuit;conjunctive normal form;and-inverter graph;mathematical optimization;circuit minimization for boolean functions;discrete mathematics;boolean domain;data structure;boolean expression;constraint satisfaction;product term;standard boolean model;computer science;maximum satisfiability problem;karp–lipton theorem;mathematics;boolean function;complete boolean algebra;boolean satisfiability problem;programming language;algorithm;two-element boolean algebra;parity function;satisfiability	Logic	-16.608517503709287	16.019498353049375	80731
44c8c2cfd168a3258cd18071a1e8a2394f974931	dependence and independence results for (impredicative) calculi of dependent types	dependent types		dependent type;impredicativity	Thomas Streicher	1992	Mathematical Structures in Computer Science	10.1017/S0960129500001122	dependent type;computer science;programming language	Logic	-12.351214167770888	17.143864757650046	80769
cdc3bf2c340b816928472668024070c551cb46a7	simplism and the liar		and try to decide whether it is true. Either alternative leads to a contradiction: If sentence (i) is true, then what it says must be the case; but it says that it is not true; hence sentence (i) is true and sentence (i) is not true, which is a contradiction. On the other hand, if sentence (i) is not true, then, since what it says is the case, it is true; thus, once again, sentence (i) is true and sentence (i) is not true. I hold that the mistake in this argument lies in the disjunction of the case in which (i) is true and the case in which it is not. I reject the dichotomy between sentences that are true and sentences that are not, on the ground that it is simplistic; the question whether sentence (i) is true does not have a straightforward yes-or-no answer, so that it is fallacious to distinguish the straightforward “yes” case from the straightforward “no” case and proceed with a disjunctive syllogism. Backing up this claim will require a fairly elaborate program of discussion. First, the notion of simplism must be clarified (Section II). Second, I must show that the distinction between true and not true is, indeed, simplistic (Sections III, IV, and V). Third, I must show that arguments based on simplistic distinctions are fallacious, or at least that the paradoxical argument above contains such a fallacy (Section VI). Fourth, I must refute a variety of objections to the solution I propose : that it is ad hoc (Section VII); that it contravenes classical logic (Section VIII); that it does not solve every variant of the paradox (Section IX); that it is superfhrous, since the paradox has already been solved (Section X). I close with some reflections on the consequences of my solution.	amiga reflections;disjunctive normal form;hoc (programming language);section 508 amendment to the rehabilitation act of 1973;vii	John David Stone	1981	J. Philosophical Logic	10.1007/BF00248736	discrete mathematics;mathematics	AI	-12.34027304274849	5.261914774508386	80863
44cb8df47d3624614264c1cb2fb0162541df26c1	computing and visualizing banks sets of dominance relations using relation algebra and relview	relation algebra;binary decision diagram;social choice theory	Abstract   In social choice theory the Banks set is a well-established choice set for tournaments that consists of the undominated elements of the maximal subtournaments. For non-complete dominance relations J. Duggan proposed three possibilities to modify it. We develop relation-algebraic specifications to compute the Banks set, Duggan’s modifications, and variants of them. All these specifications are algorithmic and can directly be translated into the programming language of the computer algebra system R el V iew . We show that the system is well suited for computing and visualizing the Banks set, its modifications, and the objects to be associated with them.		Rudolf Berghammer	2013	J. Log. Algebr. Program.	10.1016/j.jlap.2013.02.001	discrete mathematics;computer science;theoretical computer science;mathematics;algorithm	NLP	-16.61180224239601	18.065465316211355	81072
023080503c5e758c42c634148acf2c88b537beb1	dehn function and length of proofs	proof complexity;dehn function	Let G = 〈A, R〉 be a finite presentation of a group, with finite sets of generators A and relators R. R consists of words from (A ∪ A), with A = {a | a ∈ A}. Let w be a word in the free group F (A) generated by A that equals 1 in G, that is, it belongs to the word problem set W (G) := {w ∈ F (A) | w = 1 in G}. One may prove that w ∈ W (G) by consecutively inserting or deleting from w conjugates of relators from R∪R until reaching 1. The symbol 1 denotes the empty word. This is clearly reminiscent of formal logical systems where one derives formulas in consecutive steps by applying one of finitely many rules. We shall consider as an example of a logical system a variant of the usual text-book calculus for propositional logic called Extended Frege system EF. This proof system works with boolean circuits (instead of usual formulas — that is the meaning of the qualification “extended”) and is based on finitely many axiom schemes and inference rules (cf. [10] for a formalization). The number of steps in a derivation of w = 1 corresponds to the number of steps in proofs. Moreover, knowing a bound on the number of steps in the derivation one can also bond the size of intermediate words (perhaps in another derivation with at	boolean circuit;ccir system a;empty string;entity framework;formal system;frege system;proof calculus;propositional calculus	Jan Krajícek	2003	IJAC	10.1142/S0218196703001523	combinatorics;discrete mathematics;topology;mathematics;dehn surgery;dehn function;dehn twist;lantern relation;proof complexity	Theory	-6.198364928201533	14.52731210496638	81239
36edb192eb19c23f2cedad2c69e82ce0ae516e6f	selecting extensions in weighted argumentation frameworks		Recently, Dunne et al. [9,10] introduced the concept of WAF (Weighted Argumentation Framework). Such frameworks extend standard Dung’s ones for abstract argumentation by associating weights with attacks. In the WAF setting, weights are used for relaxing extensions, which proves useful when there are too few extensions. In this paper, we exploit weights in a different perspective. We show how to take advantage of attacks weights within an argumentation process for selecting some extensions among Dung’s ones, which proves useful when there are too many extensions, in order to improve the inferential power of the argumentation framework.	argumentation framework;computation;inferential programming;inferential theory of learning;waf	Sylvie Coste-Marquis;Sébastien Konieczny;Pierre Marquis;Mohammed Assam Ouali	2012		10.3233/978-1-61499-111-3-342	argumentation theory;argumentation framework;artificial intelligence;natural language processing;computer science;exploit	AI	-16.31356285362314	5.465037377517045	81305
27fbd173502b8a8a5487df0182171ddd517bffbb	on compactness and consistency in finite lattice-valued propositional logic	science general;consequence operation;systems;fuzzy theory;lattice valued logic;fuzzy set theory;propositional logic;fuzzy closure operators;classical logic;compactness;completeness;lf x;resolution principle;consistency	In this paper, we investigate the semantical theory of finite lattice-valued propositional logic based on finite lattice implication algebras Based on the fuzzy set theory on a set of formulas, some propositions analogous to those in the classical logic are proved, and using the semantical consequence operation, the consistence and compactness is investigated.	propositional calculus	Xiaodong Pan;Yang Xu;Luis Martínez-López;Da Ruan;Jun Liu	2010		10.1007/978-3-642-13803-4_41	fuzzy logic;dynamic logic;zeroth-order logic;decidability;complete theory;t-norm fuzzy logics;classical logic;resolution;many-valued logic;completeness;intuitionistic logic;fuzzy classification;intermediate logic;artificial intelligence;fuzzy number;first-order logic;system;propositional variable;fuzzy set;well-formed formula;propositional calculus;compact space;consistency;second-order logic;statistics;autoepistemic logic;satisfiability	AI	-10.695164193409727	12.100219802763101	81360
baa33c2945de17f9b28c18a575c7354d5983f782	novel description logic formalisms and their application to lipidomics			description logic	Alexander A. Campbell	2017				NLP	-15.489286707506404	13.038842024613647	81388
ea8add97ade007be47455e64a3ef81e595c48c65	rewriting systems over similarity and generalized pseudometric spaces and their properties	generalized pseudometric spaces;similarity spaces;residuated lattices;confluence;estimation;fuzzy relations	We present a study of confluence and related properties of fuzzy relations defined over similarity spaces. The ordinary confluence is an essential property of relations connected to the idea of rewriting and substituting which appears in abstract rewriting systems. This paper is a continuation of our previous paper, where we have introduced analogous notions related to substitutability in graded setting using residuated lattices as structures of truth degrees, leaving the ordinary notions a particular case when the underlying structure is the two-valued Boolean algebra. In this paper, we further extend our previous results by developing the notions of confluence and related properties respecting a given similarity relation. We also present definitions of confluence and related properties of relations on a generalized pseudometric spaces. Using the well-known link between generalized pseudometrics and similarities, we describe the connection of the notions defined on generalized pseudometric spaces to the corresponding notions on similarity spaces. The introduced notions are further illustrated by example of rewriting based on graded if-then rules.	rewriting	Tomas Kuhr;Vilém Vychodil	2015	Fuzzy Sets and Systems	10.1016/j.fss.2014.11.001	estimation;discrete mathematics;pure mathematics;mathematics;confluence;statistics	Logic	-6.599825922178881	11.350044758525314	81402
f55b5a7c28c3674cb5dcc8780de68d7e6cc03fd7	stable models in generalized possibilistic logic	answer set programming;qa75 electronic computers computer science;possibilistic logic;equilibrium logic;conference proceeding	Possibilistic logic is a well-known logic for reasoning under uncertainty, which is based on the idea that the epistemic state of an agent can be modeled by assigning to each possible world a degree of possibility, taken from a totally ordered, but essentially qualitative scale. Recently, a generalization has been proposed that extends possibilistic logic to a meta-epistemic logic, endowing it with the capability of reasoning about epistemic states, rather than merely constraining them. In this paper, we further develop this generalized possibilistic logic (GPL). We introduce an axiomatization showing that GPL is a fragment of a graded version of the modal logic KD, and we prove soundness and completeness w.r.t. a semantics in terms of possibility distributions. Next, we reveal a close link between the wellknown stable model semantics for logic programming and the notion of minimally specific models in GPL. More generally, we analyze the relationship between the equilibrium logic of Pearce and GPL, showing that GPL can essentially be seen as a generalization of equilibrium logic, although its notion of minimal specificity is slightly more demanding than the notion of minimality underlying equilibrium logic.	axiomatic system;epistemic modal logic;logic programming;possible world;sensitivity and specificity;stable model semantics	Didier Dubois;Henri Prade;Steven Schockaert	2012			predicate logic;dynamic logic;zeroth-order logic;linear temporal logic;description logic;higher-order logic;horn clause;many-valued logic;intuitionistic logic;computer science;intermediate logic;artificial intelligence;bunched logic;answer set programming;predicate functor logic;computational logic;substructural logic;multimodal logic;second-order logic;algorithm;autoepistemic logic	AI	-15.730437473085374	7.362331190681796	81433
9a780265ebf7cc5d18e7521492f19741883d60a5	computational isomorphisms in classical logic	logique lineaire;teoria demonstracion;ind;computational isomorphism;theorie preuve;boolean equation;standards;eliminacion;cut elimination;proof theory;propiedad;reversibilite;qualite;logic;ordre 1;lambda calculus;ecuacion lineal;logica lineal;equivalence;isomorphism;isomorphisme algorithmique;ecuacion booliana;sequent calculus;isomorfismo;first order;reversibility;quality;norma;propriete;equation booleenne;lambda calculo;reversibilidad;classical logic;isomorphisme;elimination;properties;linear equation;lambda calcul;linear logic;beta reduction;orden 1;norme;equivalencia;intuitionistic natural deduction;logique;logica;equation lineaire;calidad	All standard 'linear' boolean equations are shown to be computationally realized within a suitable classical sequent calculus LKηp. Specifically, LKηp can be equipped with a cut-elimination compatible equivalence on derivations based upon reversibility properties of logical rules. So that any pair of derivations, without structural rules, of F → G and G → F, where F, G are first-order formulas 'without any qualities', defines a computational isomorphism.	computation	Vincent Danos;Jean-Baptiste Joinet;Harold Schellinx	2003	Theor. Comput. Sci.	10.1016/S0304-3975(01)00148-7	equivalence;linear logic;combinatorics;discrete mathematics;classical logic;computer science;lambda calculus;proof theory;mathematics;linear equation;isomorphism;programming language;sequent calculus;logic;algorithm;elimination;algebra	Logic	-13.221316265328788	15.55678183163912	81658
4d54cc8df5469b977b6eb45607d5d2f5e82d5d57	on the logic of theory change: contraction without recovery	agm theory;recovery postulate;harper identity;satisfiability;theory change;levi identity;belief contraction	The postulate ofRecovery , among the six postulates for theory contraction, formulated and studied by Alchourr ón, G̈ardenfors and Makinson is the one that has provoked most controversy. In this article we construct withdrawal functions that do not satisfy Recovery , but try to preserve minimal change , and relate these withdrawal functions with the AGM contraction functions.	belief revision;david makinson	Eduardo L. Fermé	1998	Journal of Logic, Language and Information	10.1023/A:1008241816078	philosophy;epistemology;mathematics;linguistics;algorithm;satisfiability	Theory	-13.7616245542631	7.900611996596943	81773
e65e77cbe71ecdf68463ddacb7cef0118bbe46cf	formalizing argumentative reasoning in a possibilistic logic programming setting with fuzzy unification	warrant computation;lenguaje programacion;argumentacion;argumentation;computacion informatica;programming language;informacion incompleta;logique floue;logica difusa;intelligence artificielle;logical programming;imperfect information;fuzzy logic;expressive power;unification;incomplete information;programming theory;fuzzy unification;defeasible logic programming;programmation logique;object oriented;ciencias basicas y experimentales;information value;langage programmation logique;valeur d information;information incomplete;possibilistic logic;defeasible argumentation;fuzzy constants;langage programmation;informacion imperfecta;oriente objet;artificial intelligence;possibility theory;theorie programmation;inteligencia artificial;logic programs;logic programming languages;grupo a;valor informacion;programacion logica;orientado objeto;teoria posibilidad;unificacion;information imparfaite;theorie possibilite	Possibilistic Defeasible Logic Programming (P-DeLP) is a logic programming language which combines features from argumentation theory and logic programming, incorporating the treatment of possibilistic uncertainty at the object-language level. In spite of its expressive power, an important limitation in P-DeLP is that imprecise, fuzzy information cannot be expressed in the object language. One interesting alternative for solving this limitation is the use of PGL+, a possibilistic logic over Gödel logic extended with fuzzy constants. Fuzzy constants in PGL+ allow expressing disjunctive information about the unknown value of a variable, in the sense of a magnitude, modeled as a (unary) predicate. The aim of this article is twofold: firstly, we formalize DePGL+, a possibilistic defeasible logic programming language that extends P-DeLP through the use of PGL+ in order to incorporate fuzzy constants and a fuzzy unification mechanism for them. Secondly, we propose a way to handle conflicting arguments in the context of the extended framework.	argumentation framework;complexity;computation;conceptualization (information science);default logic;defeasible logic;defeasible reasoning;disjunctive normal form;expressive power (computer science);gödel logic;knowledge representation and reasoning;literal (mathematical logic);logic programming;object language;programming language;semantics (computer science);unary operation;unification (computer science)	Teresa Alsinet;Carlos Iván Chesñevar;Lluis Godo;Sandra A. Sandri;Guillermo Ricardo Simari	2008	Int. J. Approx. Reasoning	10.1016/j.ijar.2007.07.004	fuzzy logic;possibility theory;description logic;horn clause;many-valued logic;fuzzy classification;computer science;artificial intelligence;fuzzy number;unification;perfect information;machine learning;value of information;mathematics;object-oriented programming;prolog;logic programming;complete information;expressive power;fuzzy control language;algorithm	AI	-17.527106643282618	10.71618383105778	81775
443994e801dd54c8847f16916eb4bd3906c7bbfa	the universe in leśniewski's mereology: some comments on sobociński's reflections	leśniewski;sobocinski;mereology;ontology;the universe	Stanisław Leśniewski’s mereology was originally conceived as a theory of foundations of mathematics and it is also for this reason that it has philosophical connotations. The ‘philosophical significance’ of mereology was upheld by Bolesław Sobociński who expressed the view in his correspondence with J.M. Bocheński. As he wrote to Bocheński in 1948: “[...] it is interesting that, being such a simple deductive theory, mereology may prove a number of very general theses reminiscent of metaphysical ontology”. The theses which Sobociński had in mind were related to the mereological notion of “the Universe”. Sobociński listed them in the letter adding his philosophical commentary but he did not give proofs for them and did not specify precisely the theory lying behind them. This is what we want to supply in the first part of our paper. We indicate some connections between the notion of the universe and other specific mereological notions. Motivated by Sobociński’s informal suggestions showing his preference for mereology over the axiomatic set theory in application to philosophy we propose to consider Sobociński’s formalism in a new frame which is the ZFM theory—an extension of Zermelo-Fraenkel set theory by mereological axioms, developed by A. Pietruszczak. In this systematic part we investigate reasons of ’philosophical hopes’ mentioned by Sobociński, pinned on the mereological concept of “the Universe”.	amiga reflections;mereology;metaphysical naturalism;semantics (computer science);theory (mathematical logic);universe;zermelo–fraenkel set theory	Marcin Lyczak;Marek Porwolik;Kordula Swietorzecka	2016	Axioms	10.3390/axioms5030023	epistemology;theoretical physics;mathematics	AI	-12.152946479244457	5.595806080909009	82051
01b4bce179706b0168ac28e0cb92325b3b53c8ec	issues on adjointness in multiple-valued logics	non classical logic;implication;triangular norm;conjunction;satisfiability;adjointness;generalized modus ponens;close relationships;non classical logics;compositional rule of inference;modus ponens;multiple valued logic	We contribute to the theory of implications and conjunctions related by adjointness, in multiple-valued logics. We suggest their use in Zadeh s compositional rule of inference, to interpret generalized modus ponens inference schemata. We provide new complete characterizations of implications that distinguish left arguments, implications that satisfy the exchange principle, divisible conjunctions, commutative conjunctions, associative conjunctions and triangular norms. We also introduce and characterize pseudo-strict and pseudo-continuous implications and conjunctions, and we explore the close relationship between these two notions. 2005 Elsevier Inc. All rights reserved.	logical connective;t-norm	Nehad N. Morsi;Elewa M. Roshdy	2006	Inf. Sci.	10.1016/j.ins.2005.08.005	non-classical logic;conjunction;discrete mathematics;modus ponens;computer science;mathematics;algorithm;satisfiability	AI	-8.56922931923963	11.15328022793323	82078
183cafbb45523dce1b7a1216aa8105e7e293c9aa	minimal model semantics vs. negation as failure: a comparison of semantics.	minimal model			Michael Gelfond;Halina Przymusinska;Teodor C. Przymusinski	1988			stable model semantics;computer science;negation as failure;formal semantics;operational semantics;denotational semantics	DB	-15.309487561959173	13.483258400731676	82203
1fe29a886fd9bc50c2cce8595fa27b24ba7d78d0	the deduction theorem in a functional calculus of first order based on strict implication		Your use of the JSTOR archive indicates your acceptance of JSTOR's Terms and Conditions of Use, available at http://www.jstor.org/page/info/about/policies/terms.jsp. JSTOR's Terms and Conditions of Use provides, in part, that unless you have obtained prior permission, you may not download an entire issue of a journal or multiple copies of articles, and you may use content in the JSTOR archive only for your personal, non-commercial use.	archive;download;natural deduction;strict conditional	Ruth C. Barcan	1946	J. Symb. Log.		mathematical analysis;discrete mathematics;functional calculus;cut-elimination theorem;integration by substitution;borel functional calculus;time-scale calculus;first-order logic;fundamental theorem;mathematics;situation calculus;curry–howard correspondence;sequent calculus;natural deduction;differentiation under the integral sign	Comp.	-9.38149803836032	9.627211507275941	82265
d7ae42c0c905193181b25b97399b8fd8194fb954	strong cut-elimination in display logic				Heinrich Wansing	1995	Reports on Mathematical Logic		discrete mathematics;mathematics	EDA	-11.461745204521492	11.65949499893386	82346
7a3819763736166b6c296daecb28b49d8dadc892	normal forms for knowledge compilation	compilacion;fonction booleenne;diagrama binaria decision;diagramme binaire decision;formule cnf;publikationer;canonical form;representation fonction;forme canonique;facteur forme;temps lineaire;forma normal;boolean function;form factor;konferensbidrag;logique propositionnelle;intelligence artificielle;forma lineal;factor forma;tiempo lineal;formula cnf;propositional logic;funcion booliana;function representation;knowledge compilation;linear time;artiklar;representacion funcion;rapporter;forma canonica;normal form;compilation;artificial intelligence;forme lineaire;forme normale;inteligencia artificial;conjunctive normal form;logica proposicional;linear form;binary decision diagram;canonical representation	A class of formulas called factored negation normal form is introduced. They are closely related to BDDs, but there is a DPLL-like tableau procedure for computing them that operates in PSPACE.Ordered factored negation normal form provides a canonical representation for any boolean function. Reduction strategies are developed that provide a unique reduced factored negation normal form. These compilation techniques work well with negated form as input, and it is shown that any logical formula can be translated into negated form in linear time.	compiler;dpll algorithm;knowledge compilation;method of analytic tableaux;negation normal form;time complexity;well-formed formula	Reiner Hähnle;Neil V. Murray;Erik Rosenthal	2005		10.1007/11425274_32	canonical form;computer science;calculus;mathematics;negation normal form;canonical normal form;algorithm	AI	-16.330359554510476	15.798661140567006	82369
a3ff6ef9ca7db754139d541dbae579a73ee784db	proof-theoretic analysis of kpm	cut elimination;set theory;theoretical analysis;point of view	KPM is a subsystem of set theory designed to formalize a recursively Mahlo universe of sets. In this paper we show that a certain ordinal notation system is sufficient to measure the proof-theoretic strength of KPM. This involves a detour through an infinitary calculus RS(M), for which we prove several cutelimination theorems. Full cut-elimination is available for derivations of s sentences, where co~ denotes the least nonrecursive ordinal. This paper is selF'contained, at least from a technical point of view.	ordinal data;point of view (computer hardware company);recursion;set theory	Michael Rathjen	1991	Arch. Math. Log.	10.1007/BF01621475	combinatorics;mathematical analysis;discrete mathematics;topology;mathematics;algorithm;set theory;algebra	Theory	-7.619499481775578	12.560772400295665	82436
5ed1920ace2dd9da3febf03dc867943b06c185c4	an event-based interpretation of japanese honorific constructions using rrg operators	conference paper	The contemporary Japanese verbal honorific constructions can be motivated in view of the RRG clausal organization and its operator hierarchy. I will present an analysis of the subject honorific construction based on a functional analysis of existential and copulative verbs, and relate it to adjectival verbs. I will also sketch a possible origin of the non-subject honorific construction.	role and reference grammar	Akira Ishikawa	2003			humanities;mathematics;linguistics;algorithm	Logic	-12.205218212400547	6.8239450994086415	82467
2c70b2d49d1d05379e03abe85f5eb4d9f72f7dea	existential morphisms and existentially closed models of logical categories			existential quantification	Ioana Petrescu	1981	Math. Log. Q.	10.1002/malq.19810272303	discrete mathematics;existentialism;morphism;mathematics	Logic	-8.939251310973729	13.921686258935718	82480
45934f39fc89ab6193848322287fe03598681404	negational fragment of intuitionistic control logic	kripke models;intuitionistic control logic;intuitionistic logic;classical logic	We investigate properties of monadic purely negational fragment of Intuitionistic Control Logic (ICL). This logic arises from Intuitionistic Propositional Logic (IPL) by extending language of IPL by additional new constant for falsum. Having two different falsum constants enables to define two forms of negation. We analyse implicational relations between negational monadic formulae and present a poset of non equivalent formulae of this fragment of ICL. MSC (2010) Primary: 03B60, 03B20, 03B70; Secondary: 03B62,	coupling constant;icl;intuitionistic logic;propositional calculus	Anna Glenszczyk	2015	Studia Logica	10.1007/s11225-015-9610-7	discrete mathematics;classical logic;philosophy;epistemology;intuitionistic logic;intermediate logic;mathematics;algorithm	Logic	-11.332095347049457	12.80299886251012	82567
df960262caf3e13a365e0ef7e70126338cb4b189	existential fixed-point logic	satisfiability;hoare logic;fixed point;polynomial time;first order logic	The purpose of this paper is to draw attention to existential fixed-point logic. Among other things, we show that: (1) If a structure A satisfies an existential fixed-point formula φ, then A has a finite subset F such that every structure B with A |F = B |F satisfies φ. (2) Using existential fixed-point logic instead of first-order logic removes th e expressivity hypothesis in Cook's completeness theorem for Hoare logic. (3) In the presence of a successor relation, existential fixed-point logic captures polynomial time.	first-order logic;first-order predicate;hoare logic;least fixed point;polynomial;time complexity	Andreas Blass;Yuri Gurevich	1987		10.1007/3-540-18170-9_151	predicate logic;dynamic logic;zeroth-order logic;discrete mathematics;description logic;higher-order logic;separation logic;many-valued logic;intermediate logic;bunched logic;predicate functor logic;mathematics;axiomatic semantics;substructural logic;multimodal logic;second-order logic;algorithm;philosophy of logic	Logic	-11.736749539592559	14.314990671797421	82580
d09b3888da811b8c529b2573731f644c53bf5b00	a constructive approach to independent and evidence retaining belief revision by general information sets	constructive approach;revision operator;general information set;epistemic state;evidence retainment;default reasoning;conditional belief revision;iterating revision;new information;conditional belief;established agm belief revision	Recent years have seen a lot of work towards extending the established AGM belief revision theory with respect to iterating revision, preserving conditional beliefs, and handling sets of propositions as new information. In particular, novel postulates like independence and evidence retainment have been brought forth as new standards for revising epistemic states by (sets of) propositional information. In this paper, we propose a constructive approach for revising epistemic states by sets of (propositional and conditional) beliefs that combines ideas from nonmonotonic reasoning with conditional belief revision. We also propose a novel principle called enforcement that covers both independence and evidence retainment, and we show our revision operator to comply with major postulates from the literature. Moreover, we point out the relevance of our approach for default reasoning.	belief revision;conditional (computer programming);database schema;default logic;iteration;iterative method;non-monotonic logic;relevance	Gabriele Kern-Isberner;Patrick Krümpelmann	2011		10.5591/978-1-57735-516-8/IJCAI11-162	artificial intelligence;mathematics;belief revision;algorithm	AI	-16.411068003197666	6.59393344463726	82583
daac6be0a11fbb7ebc4b5cc75b68f4f1a23e0f2d	alternative proof of standard completeness theorem for mtl	monoidal t norm based logic;left continuous t norm;fuzzy logic;monoidal left continuous t norm;congruence lattice	As it was shown in Jenei and Montagna (Studia Logica 70(2): 183---192, 2002), Monoidal t-norm based logic (MTL) is a logic of left-continuous t-norms. In other words, this means that MTL enjoys the standard completeness theorem. In this paper we present a different proof of this theorem. In fact, we prove even more since we show that MTL is complete w.r.t. the class of standard MTL-algebras with finite congruence lattice or equivalently with finitely many Archimedean classes. We also show the connection between the congruence lattice of an MTL-chain and its Archimedean classes.		Rostislav Horcík	2007	Soft Comput.	10.1007/s00500-006-0058-6	fuzzy logic;discrete mathematics;topology;computer science;artificial intelligence;mathematics;algebra	Theory	-8.81910062790311	14.97178985003981	82622
a5edb11c8b7ae6a9a77a825d9f1f9e6fb46b3349	the diagonal argument and the liar		There are arguments found in various areas of mathematical logic that are taken to form a family: the family of diagonal arguments. Much of recursion theory may be described as a theory of diagonalization; diagonal arguments establish basic results of set theory; and they play a central role in the proofs of the limitative theorems of Godel and Tarski. Diagonal arguments also give rise to set-theoretical and semantical paradoxes. What do these arguments have in common what makes an argument a diagonal argument? And why do some diagonal arguments lead to theorems, while others lead to paradox? In this paper, I attempt to answer these questions. Cantoru0027s first uses of the diagonal argument are presented in Section II. In Section III, I answer the first question by providing a general analysis of the diagonal argument. This analysis is then brought to bear on the second question. In Section IV, I give an account of the difference between good diagonal arguments (those leading to theorems) and bad diagonal arguments (those leading to paradox). The main philosophical interest of the diagonal argument, I believe, lies in its relation to the Liar paradox. The familiar Liar is generated by our ordinary semantical concepts of truth and falsity. Its proper setting is natural language, in which our ordinary semantic terms appear. As Tarski has made clear, this means that the Liar is inextricably linked with another vexed semantical problem, that of universality. Perhaps the central question here is this: Are natural languages universal? Roughly speaking, a language is universal in Tarskiu0027s sense if it can say everything there is to be said. If natural languages are universal in this sense, then they can say everying there is to be said about their own semantics. But then it would seem that natural languages fall foul of the Liar.		Keith Simmons	1990	J. Philosophical Logic	10.1007/BF00556637	liar paradox;discrete mathematics;pure mathematics;mathematical logic;mathematical proof;mathematics;cantor's diagonal argument;falsity;diagonal;computability theory;set theory	NLP	-11.229559590793638	6.735870032822265	82842
16e1d9a974ae2c6c5f5023d31b27c9dd1edc7349	all normal extensions of s5-squared are finitely axiomatizable	logic;satisfiability;universiteitsbibliotheek;modal logic;mathematical logic and foundations;philosophy;computational linguistics	We prove that every normal extension of the bi-modal system S52 is finitely axiomatizable and that every proper normal extension has NP-complete satisfiability problem.	modal logic;np-completeness	Nick Bezhanishvili;Ian M. Hodkinson	2004	Studia Logica	10.1007/s11225-004-6044-z	modal logic;dynamic logic;s5;normal modal logic;discrete mathematics;philosophy;epistemology;computational linguistics;computational logic;mathematics;logic;multimodal logic;algorithm;satisfiability	Logic	-12.475794012224037	12.314348065925099	83039
342206d92c5d3a618e1443a4c60152b151c3796a	an inductive version of nash-williams' minimal-bad-sequence argument for higman's lemma	teoria demonstracion;theorie preuve;inductive definition;proof theory;theorem proving;demonstration theoreme;decidibilidad;demostracion teorema;decidabilite;decidability	Higman’s lemma has a very elegant, non-constructive proof due to Nash-Williams [NW63] using the so-called minimal-bad-sequence argument. The objective of the present paper is to give a proof that uses the same combinatorial idea, but is constructive. For a two letter alphabet this was done by Coquand and Fridlender [CF94]. Here we present a proof in a theory of inductive definitions that works for arbitrary decidable well quasiorders.	automated theorem proving;bell's theorem;daniel g. bobrow;extensibility;inductive reasoning;kruskal's algorithm;nash equilibrium;ordinal data;theory;thierry coquand;tree structure	Monika Seisenberger	2000		10.1007/3-540-45842-5_15	decidability;discrete mathematics;computer science;proof theory;mathematics;mathematical proof;automated theorem proving;structural proof theory;algorithm	Theory	-10.284179395960122	15.4021148542701	83102
c00db12f6b405e322d2ef1642b4cf9c590eecc22	ef+ex forest algebras		We examine languages of unranked forests definable using the temporal operators EF and EX. We characterize the languages definable in this logic, and various fragments thereof, using the syntactic forest algebras introduced by Bojanczyk and Walukiewicz. Our algebraic characterizations yield efficient algorithms for deciding when a given language of forests is definable in this logic. The proofs are based on understanding the wreath product closures of a few small algebras, for which we introduce a general ideal theory for forest algebras. This combines ideas from the work of Bojanczyk and Walukiewicz for the analogous logics on binary trees and from early work of Stiffler on wreath product of finite semigroups.	algorithm;binary tree;entity framework;linear algebra;random forest	Andreas Krebs;Howard Straubing	2015		10.1007/978-3-319-23021-4_12	combinatorics;discrete mathematics;mathematics;algorithm;algebra	Logic	-6.149689351549186	16.54238070076045	83221
94194db36e5dbe16d78df4a46dff6beed476159e	on proofs and rule of multiplication in fuzzy attribute logic	fuzzy set;correspondence problem	The paper develops fuzzy attribute logic, i.e. a logic for reasoning about formulas of the form A ⇒ B where A and B are fuzzy sets of attributes. A formula A ⇒ B represents a dependency which is true in a data table with fuzzy attributes iff each object having all attributes from A has also all attributes from B, membership degrees in A and B playing a role of thresholds. We study axiomatic systems of fuzzy attribute logic which result by adding a single deduction rule, called a rule of multiplication, to an ordinary system of deduction rules complete w.r.t. bivalent semantics, i.e. to well-known Armstrong axioms. In this paper, we concentrate on the rule of multiplication and its role in fuzzy attribute logic. We show some advantageous properties of the rule of multiplication. In addition, we show that these properties enable us to reduce selected problems concerning proofs in fuzzy attribute logic to the corresponding problems in the ordinary case. As an example, we discuss the problem of normalization of proofs and present, in the setting of fuzzy attribute logic, a counterpart to a well-known theorem from database theory saying that each proof can be transformed to a so-called RAP-sequence.	armstrong's axioms;axiomatic system;database theory;fuzzy logic;fuzzy set;natural deduction;table (information)	Radim Belohlávek;Vilém Vychodil	2007		10.1007/978-3-540-72950-1_47	fuzzy logic;t-norm fuzzy logics;discrete mathematics;attribute domain;membership function;defuzzification;type-2 fuzzy sets and systems;fuzzy mathematics;fuzzy classification;computer science;artificial intelligence;fuzzy subalgebra;fuzzy number;machine learning;mathematics;fuzzy set;fuzzy associative matrix;correspondence problem;fuzzy set operations;algorithm;fuzzy control system;rule of inference	AI	-14.399669138229358	10.226442469976547	83232
384e0583d0fea65d4e1b8a88210f2e1794203cba	non-primitive recursive decidability of products of modal logics with expanding domains	linear order;topological space;temporal logic;product model;modal logic;partial order	We show that—unlike products of ‘transitive’ modal logics which are usually undecidable— their ‘expanding domain’ relativisations can be decidable, though not in primitive recursive time. In particular, we prove the decidability and the finite expanding product model property of bimodal logics interpreted in two-dimensional structures where one component—call it the ‘flow of time’—is • a finite linear order or a finite transitive tree and the other is composed of structures like • transitive trees/partial orders/quasi-orders/linear orders or only finite such structures expanding over the time. (It is known that none of these logics is decidable when interpreted in structures where the second component does not change over time.) The decidability proof is based on Kruskal’s tree theorem, and the proof of non-primitive recursiveness is by reduction of the reachability problem for lossy channel systems. The result is used to show that the dynamic topological logic interpreted in topological spaces with continuous functions is decidable (in non-primitive recursive time) if the number of function iterations is assumed to be finite.	iteration;kruskal's algorithm;lossy compression;modal logic;primitive recursive function;reachability problem;recursion (computer science);undecidable problem	David Gabelaia;Ágnes Kurucz;Frank Wolter;Michael Zakharyaschev	2006	Ann. Pure Appl. Logic	10.1016/j.apal.2006.01.001	modal logic;partially ordered set;combinatorics;mathematical analysis;discrete mathematics;topology;temporal logic;mathematics;topological space;total order;algebra	Logic	-9.608347128226969	16.05541674815873	83307
7a26e4f8fcced0771da9f2d02d30d321f8ad8b84	on probabilities of exceptions in description logics of typicality		We describe a nonmonotonic procedure for preferential Description Logics in order to reason about typicality by taking probabilities of exceptions into account. We consider an extension, calledALC+TR, of the logic of typicality ALC +TR by inclusions of the form T(C) vp D, whose intuitive meaning is that “typical Cs are Ds with a probability p”. We consider a notion of extension of an ABox containing only some typicality assertions, then we equip each extension with a probability. We then restrict entailment of a query F to those extensions whose probabilities belong to a given and fixed range. We propose a decision procedure for reasoning in ALC + TR and we exploit it to show that entailment is EXPTIME-complete as for the underlying ALC.	abox;decision problem;description logic;exptime	Gian Luca Pozzato	2018			discrete mathematics;non-monotonic logic;description logic;mathematics	AI	-17.04735694826615	9.365600896148672	83311
34736bcb18aafbcf03020c0f2d3f8cb6fac27cd8	semantically acyclic conjunctive queries under functional dependencies	bit complexity;metric entropy;recursive analysis	The evaluation problem for Conjunctive Queries (CQ) is known to be NP-complete in combined complexity and W[1]-hard in parameterized complexity. However, acyclic CQs and CQs of bounded tree-width can be evaluated in polynomial time in combined complexity and they are fixed-parameter tractable.  We study the problem of whether a CQ can be rewritten into an equivalent CQ of bounded tree-width, in the presence of unary functional dependencies, assuming bounded arity signatures. We show that this problem is decidable in doubly exponential time, or in exponential time for a subclass of CQ's. When it exists, the algorithm also yields a witness query.	algorithm;cobham's thesis;conjunctive query;directed acyclic graph;exptime;functional dependency;np-completeness;parameterized complexity;polynomial;time complexity;treewidth;type signature;unary operation	Diego Figueira	2016	2016 31st Annual ACM/IEEE Symposium on Logic in Computer Science (LICS)	10.1145/2933575.2933580	combinatorics;discrete mathematics;mathematics;algorithm	Logic	-6.639365736562342	18.008077999588966	83340
67b213b7fd0bb385b4085f8b4f9cb0622afb4686	non-conservative extension of a peer in a p2p inference system	p2p;conservative extension checking;propositional logic;decentralized algorithms;consequence finding	This paper points out that the notion of non-conservative extension of a knowledge base (KB) is important to the distributed logical setting of peer-to-peer inference systems (P2PIS), a.k.a. peer-to-peer semantic systems. It is useful to a peer in order to detect/prevent that a P2PIS corrupts (part of) its knowledge or to learn more about its own application domain from the P2PIS. That notion is all the more important since it has connections with the privacy of a peer within a P2PIS and with the quality of service provided by a P2PIS. We therefore study the following tightly related problems from both the theoretical and decentralized algorithmic perspectives: (i) deciding whether a P2PIS is a conservative extension of a given peer and (ii) computing the witnesses to the corruption of a given peer's KB within a P2PIS so that we can forbid it. We consider here scalable P2PISs that have already proved useful to Artificial Intelligence and DataBases.	inference engine;peer-to-peer	Nada Abdallah;François Goasdoué	2009	AI Commun.	10.3233/AIC-2009-0452	computer science;artificial intelligence;theoretical computer science;machine learning;peer-to-peer;distributed computing;propositional calculus;algorithm	AI	-18.734878943295488	5.539656312386247	83353
283b7f7a7b372b48c3d58d446c4a69f99e278144	decidability of the existential theory of infinite terms with subterm relation	desigualdad;inequality;terme infini;satisfiabilite;inegalite;algebre;theorie existentielle;algebra;resolucion ecuacion;formule atomique;relacion;arbre rationnel;resolution equation;sous terme;decidibilidad;signature finie;equation resolution;decidabilite;relation;decidability	We examine the problem of solving equations, inequalities, and atomic formulas built on the subterm relation in algebras of rational and infinite terms (trees). We prove that this problem is decidable for any such algebra in a finite signature S with possible new free constants. Moreover, even in presence of subterm relation, the existential theory of rational trees is the same as the existential theory of infinite trees. We leave out the easier case where S has no symbols of arity greater than one. When S has only a symbol of arity greater than one, the decision procedure is different in the two cases where the algebra of rational or infinite trees does or does not contain new free constants.		Sauro Tulipani	1994	Inf. Comput.	10.1006/inco.1994.1001	decidability;combinatorics;discrete mathematics;computer science;relation;inequality;fundamental resolution equation;mathematics;algorithm;algebra	Logic	-8.006131446477141	16.856369312085718	83428
2815c3b728de4c572dcc0e7ca52e47c0ca7f1c00	a declarative semantics for behavioral inheritance and conflict resolution	conflict resolution;object oriented	We propose a novel semantics for object oriented deductive databases in the direc tion of F logic to logically account for behavioral inheritance con ict resolution in multiple inheritance hierarchies and overriding We introduce the ideas of with drawal locality and inheritability of properties i e methods and signatures Ex ploiting these ideas we develop a declarative semantics of behavioral inheritance and overriding without having to resort to non monotonic reasoning Con ict res olution in our model can be achieved both via speci cation and by detection The possibility of speci cation based con ict resolution through withdrawal allows users to de ne inheritance preference We present a formal account of the semantics of our language by de ning a model theory proof theory and a xpoint theory We also show that the di erent characterizations of our language are equivalent	3d xpoint;antivirus software;declarative programming;deductive database;locality of reference;multiple inheritance;naruto shippuden: clash of ninja revolution 3	Hasan M. Jamil;Laks V. S. Lakshmanan	1995			natural language processing;programming language;communication	AI	-17.34519932993029	10.451248041094106	83459
a0d8650219b7ef4922d6cd0f85b630a8a78cf29e	a note on the axiomatisation of brouwersche modal logic	modal logic		axiomatic system;logic programming;modal logic	Ray E. Jennings	1981	J. Philosophical Logic	10.1007/BF00293424	modal logic;dynamic logic;s5;normal modal logic;modal μ-calculus;linear temporal logic;higher-order logic;philosophy;epistemology;intermediate logic;axiom s5;mathematics;accessibility relation;substructural logic;multimodal logic	Logic	-12.769630780360549	12.316911092483503	83487
0b1dfce4a3957cb7aaf3844ffce8e0413f863e44	gentzen-type systems, resolution and tableaux	cut elimination;automated reasoning;type system	We show that both the tableaux and the resolution methods can be understood as attempts to exploit the power of cut-elimination theorems in Gentzen-type calculi. Another, related goal is to provide a purely syntactic basis for both methods (in contrast to the semantic proofs concerning resolution that can be found in the textbooks). This allows the use of a fruitful combination of the methods and might be helpful in generalizing them to other logics.	resolution (logic);type system	Arnon Avron	1993	Journal of Automated Reasoning	10.1007/BF00881838	discrete mathematics;type system;computer science;artificial intelligence;mathematics;automated reasoning;programming language;algorithm	AI	-13.408996649361164	15.39428881414274	83649
eb3bc049134959e9a638151c817ca9e3c582e788	skolem's paradox and constructivism	constructivism;mathematics;paradoxe de skolem;epistemologie;constructivisme;epistemology;intuitionism;skolem s paradox;intuitionnisme;mathematiques	Skolem’s paradox has not been shown to arise for constructivism. Indeed, considerations that we shall advance below indicate that the main result cited to produce the paradox could be obtained only by methods not in mainstream intuitionistic practice. It strikes us as an important fact for the philosophy of mathematics. The intuitionistic conception of the mathematical universe appears, as far as we know, to be free from Skolemite stress. If one could discover reasons for believing this to be no accident, it would be an important new consideration, in addition to the meaning-theoretic ones advanced by Dummett (1978, ‘Concluding philosophical remarks’), that ought to be assessed when trying to reach a view on the question whether intuitionism is the correct philosophy of mathematics. We give below the detailed reasons why we believe that intuitionistic mathematics is indeed free of the Skolem paradox. They culminate in a strong independence result: even a very powerful version of intuitionistic set theory does not yield any of the usual forms of a countable downward Lowenheim Skolem theorem. The proof draws on the general equivalence described in McCarty (1984) between intuitionistic mathematics and classical recursive mathematics. But first we set the stage by explaining the history of the (classical) paradox, and the philosophical reflections on the foundations of set theory that it has provoked. The recent symposium between Paul Benacerraf and Crispin Wright provides a focus for these considerations. Then we inspect the known proofs of the Lbwenheim-Skolem theorem, and reveal them all to be constructively unacceptable. Finally we set out the independence results. They yield, we believe, the deep reasons for the localised constructive failures. Besides showing	recursion;reflection (computer graphics);set theory;social constructivism;stress testing;turing completeness	Charles McCarty;Neil Tennant	1987	J. Philosophical Logic	10.1007/BF00257838	philosophy;epistemology;skolem's paradox;pure mathematics;mathematics;algorithm;constructivism;intuitionism	Theory	-11.121546553689324	4.817161809289108	83682
d62636aa15d37071ae0db034d6a05ec8f0540107	an argumentation framework based on conditional priorities	swinburne;stratification;defeasible reasoning	We propose a framework to allow an agent to cope with inconsistent beliefs and to handle conflicting inferences. Our approach is based on a wellestablished line of research on assumption-based argumentation frameworks and defeasible reasoning. We propose a language to allow defeasible assumptions and context-sensitive priorities to be explicitly expressed and reasoned about by the agent. Our work reveals some interesting problems to conditional priority-based argumentation and establishes the fundamental properties of these frameworks. We also establish a sufficient condition for a conditional priority-based argumentation to have a unique stable extension based on the notion of stratification.	argumentation framework	Quoc Bao Vo	2008		10.1007/978-3-540-89197-0_46	stratification;computer science;artificial intelligence;data mining;mathematics;defeasible reasoning;algorithm	AI	-17.211922961106296	5.779208948312009	83885
548fc9f3d68888c877fb587c2170f2c5f62e3edc	measurement and the interpretation of quantum mechanics and relativity theory	mecanique quantique;relativite;mathematics;empiricism;formalism;axiom;empirisme;generalisation;quantum mechanics;theory;measure;interpretation of quantum mechanics;mesure;relativity theory;description;relativity;formalisme;generalization;theorie;mathematiques;axiome	The axiomatic approaches of quantum mechanics and relativity theory are compared with approaches in which the theories are thought to describe readings of certain measurement operations. The usual axioms are shown to correspond with classes of ideal measurements. The necessity is discussed of generalizing the formalisms of both quantum mechanics and relativity theory so as to encompass more realistic nonideal measurements. It is argued that this generalization favours an empiricist interpretation of the mathematical formalisms over a realist one.	interpretations of quantum mechanics;theory	W. M. de Muynck	1995	Synthese	10.1007/BF01089804	theory of relativity;stochastic interpretation;generalization;mathematical formulation of quantum mechanics;problem of time;minority interpretations of quantum mechanics;correspondence principle;relational quantum mechanics;pure mathematics;consistent histories;imaginary time;mathematics;quantum gravity;interpretations of quantum mechanics;modern physics;epr paradox;quantum statistical mechanics;quantum mechanics	PL	-11.818952099657634	4.491523455984931	84003
e3c6abf2629a507cd7257b43a1a0067d21421924	approximation algorithms and heuristics for classical planning		Automated planning has been an active area of research in theoretical computer science and Artificial Intelligence (AI) for over 40 years. Planning is the study of general purpose algorithms that accept as input an initial state, a set of desired goal states, and a planning domain model that describes how actions can transform the state. The problem is to find a sequence of actions that transforms the initial state into one of the goal states. Planning is widely applicable, and has been used in such diverse application domains as spacecraft control [MNPW98], planetary rover operations [BJMR05], automated nursing aides [MP02], image processing [GPNV03], computer security [BGHH05] and automated manufacturing [RDF05]. Planning is also the subject of continued and lively ongoing research. In this chapter, we will present an overview of how approximations and related techniques are used in automated planning. We focus on classical planning problems, where states are conjunctions of propositions, all state information is known to the planner, and all action outcomes are deterministic. Classical planning is nonetheless a large problem class that generalizes many combinatorial problems including bin-packing ∗Universities Space Research Association †The authors gratefully acknowledge Sailesh Ramakrishnan, Ronen Brafman and Michael Freed for reviewing our early drafts	application domain;approximation algorithm;artificial intelligence;automated planning and scheduling;automated reasoning;bin packing problem;computer security;domain model;heuristic (computer science);image processing;lively kernel;planetary scanner;rover (the prisoner);set packing;theoretical computer science	Jeremy Frank;Ari K. Jónsson	2007		10.1201/9781420010749.ch47	image processing;approximation algorithm;domain model;planner;heuristics;space research;theoretical computer science;artificial intelligence;machine learning;computer science	AI	-7.385871208822927	5.2307553210778215	84116
421b7159ca08e91226422e0749a058519e8adb1d	a compelte axiomatization for full join dependencies in relations			axiomatic system;join dependency	Bernhard Thalheim	1984	Bulletin of the EATCS		join dependency;discrete mathematics;mathematics	DB	-11.943830230907777	12.62205142299054	84357
2911ff658a2fd94fad997d6dba0dae654af5c12c	algebraic specifications, higher-order types and set-theoretic models	algebraic specification;initiality;algebraic specifications;theoretical model;set theoretic models;caracteristiques algebriques;higher order;types evolues;theorie des ensembles d intensional;higher order types;logique de clause de klaxon;horn clause logic;intensional set theory	In most algebraic specification frameworks, the type system is restricted to sorts, subsorts, and first-order function types. This is in marked contrast to the so-called model-oriented frameworks, which provide higher-order types, interpreted set-theoretically as Cartesian products, function spaces, and power-sets. This paper presents a simple framework for algebraic specifications with higher-order types and set-theoretic models. It may be regarded as the basis for a Horn-clause approximation to the Z framework, and has the advantage of being amenable to prototyping and automated reasoning. Standard set-theoretic models are considered, and conditions are given for the existence of initial reducts of such models. Algebraic specifications for various set-theoretic concepts are considered.	theory	Hélène Kirchner;Peter D. Mosses	2001	J. Log. Comput.	10.1093/logcom/11.3.453	discrete mathematics;higher-order logic;computer science;mathematics;programming language;generalized algebraic data type;algorithm	Logic	-14.333150717538802	17.225618639678604	84403
0091c98d3407434aa0ad62e790325aa9e455a980	translation of the simple theory of types into a first order language	first order		first-order logic;history of type theory	H. Julian Wadleigh	1974	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093891404	natural language processing;first-order logic;mathematics;linguistics;programming language;algorithm	Logic	-12.852344064984061	11.440914864662227	84410
0bc351c14c35a3a5354a235a9b227937dcece783	modal-epistemic arithmetic and the problem of quantifying in	shapiro;quantifying in;logical competence;leon horsten;syntactical models;heyting arithmetic;horsten;epistemic arithmetic;logical omniscience;modal epistemic arithmetic;awareness models;stewart shapiro;impossible worlds models	The subject of this article is Modal-Epistemic Arithmetic (MEA), a theory introduced by Horsten to interpret Epistemic Arithmetic (EA), which in turn was introduced by Shapiro to interpret Heyting Arithmetic. I will show how to interpret MEA in EA such that one can prove that the interpretation of EA is MEA is faithful. Moreover, I will show that one can get rid of a particular Platonist assumption. Then I will discuss models for MEA in light of the problems of logical omniscience and logical competence. Awareness models, impossible worlds models and syntactical models have been introduced to deal with the first problem. Certain conditions on the accessibility relations are needed to deal with the second problem. I go on to argue that those models are subject to the problem of quantifying in, for which I will provide a solution.	accessibility;awareness;impossible world;modal logic;possible world;propositional calculus;regular expression;vocabulary	Jan Heylen	2012	Synthese	10.1007/s11229-012-0154-3	heyting arithmetic;epistemology;mathematics;algorithm	Theory	-13.23280076031624	5.644485555624345	84516
289c0c490e4ff1b0bfcf432e47de9dea431700e1	closures in formal languages and kuratowski's theorem	positive closure;complexity;concatenation;decision problem;separating two words;closure system;complement;kleene closure;formal language;kuratowski s theorem	A famous theorem of Kuratowski states that, in a topological space, at most 14 distinct sets can be produced by repeatedly applying the operations of closure and complement to a given set. We re-examine this theorem in the setting of formal languages, where closure is either Kleene closure or positive closure. We classify languages according to the structure of the algebra they generate under iterations of complement and closure. There are precisely 9 such algebras in the case of positive closure, and 12 in the case of Kleene closure. We study how the properties of being open and closed are preserved under concatenation. We investigate analogues, in formal languages, of the separation axioms in topological spaces; one of our main results is that there is a clopen partition separating two words if and only if the words do not commute. We can decide in quadratic time if the language specified by a DFA is closed, but if the language is specified by an NFA, the problem is PSPACE-complete.	concatenation;formal language;iteration;kleene star;kuratowski's theorem;nondeterministic finite automaton;pspace;pspace-complete;time complexity	Janusz A. Brzozowski;Elyot Grant;Jeffrey Shallit	2011	Int. J. Found. Comput. Sci.	10.1142/S0129054111008052	complement;concatenation;kleene star;combinatorics;formal language;discrete mathematics;complexity;computer science;kuratowski's theorem;decision problem;kleene algebra;mathematics;closure;algorithm;closure problem;kuratowski closure axioms	Logic	-4.619959206469209	17.6643336108497	84541
813916a94af461b52f7f033ced342c9094c211e0	uniform argumentation frameworks	practical reasoning	We introduce a derivative of Dung’s seminal abstract argumentation frameworks (afs) through which distinctive features both of Dung’s semantics and so-called “value-based” argumentation frameworks (vafs) may be captured. These frameworks, which we describe as uniform afs, thereby recognise that, in some circumstances, arguments may be deemed acceptable, not only as a consequence of subjective viewpoints (as are modelled by the concept of audience in vafs) but also as a consequence of “value independent” acceptance of other arguments: for example in the case of factual statements. We analyse divers acceptability conditions for arguments in uniform afs and obtain a complete picture for the computational complexity of the associated decision questions. Amongst other results it is shown that reasoning in uniform afs may pose significantly greater computational challenges than either standard or value-based questions, a number of problems being complete for the third level of the polynomial hierarchy.	argumentation framework;categorization;computation;computational complexity theory;decision problem;graph theory;polynomial hierarchy	Katie Atkinson;Trevor J. M. Bench-Capon;Paul E. Dunne	2012		10.3233/978-1-61499-111-3-165	natural language processing;artificial intelligence;argumentation theory;semantics;computational complexity theory;viewpoints;computer science;polynomial hierarchy	AI	-14.266890400636928	6.9058421136449395	84552
b62780ff33e7157b400e991a2806965e659a15b8	management of information incompleteness in rough non-deterministic information analysis		Rough N on-deterministic Inf ormation Analysis (RN IA) is a mathematical framework for handling tables with exact and inexact data. Within this framework, we are developing algorithms aimed at rule generation and direct question-answering. In this paper, we investigate different forms and interpretations of data incompleteness, and show how algorithms implemented in RN IA manipulate them.		Hiroshi Sakai;Michinori Nakata;Dominik Slezak	2012		10.1007/978-3-642-31709-5_29	artificial intelligence;data mining;mathematics;algorithm	HCI	-18.245535538965836	7.222988729308304	84588
d8dea97279e8690941222a2ceb3974dcde677cb6	reduction of resolution refutations and interpolants via subsumption		"""Propositional resolution proofs and interpolants derived from them are widely used in automated verification and circuit synthesis. There is a broad consensus that """"small is beautiful"""" — small proofs and in- terpolants lead to concise abstractions in verification and compact designs in synthesis. Contemporary proof reduction techniques either min- imise the proof during construction, or perform a post-hoc transforma- tion of a given resolution proof. We focus on the latter class and present a subsumption-based proof reduction algorithm that extends existing single- pass analyses and relies on ameet-over-all-paths analysis to identify redun- dant resolution steps and clauses. We show that smaller refutations do not necessarily entail smaller interpolants, and use labelled interpolation sys- tems to generalise our reduction approach to interpolants. Experimental results support the theoretical claims."""		Roderick Bloem;Sharad Malik;Matthias Schlaipfer;Georg Weissenbacher	2014		10.1007/978-3-319-13338-6_15	algorithm	AI	-14.480030245908466	17.398914891425772	84668
784203eaaaf7b31c7a242878e2b7e1f1b0962cfc	ways in which coherence is confirmation conducive	philosophy of science;confirmation induction;satisfiability;science philosophy;everyday life;philosophie des sciences	Recent works in epistemology show that the claim that coherence is truth conducive – in the sense that, given suitable ceteris paribus conditions, more coherent sets of statements are always more probable – is dubious and possibly false. From this, it does not follows that coherence is a useless notion in epistemology and philosophy of science. Dietrich and Moretti (Philosophy of science 72(3): 403–424, 2005) have proposed a formal of account of how coherence is confirmation conducive—that is, of how the coherence of a set of statements facilitates the confirmation of such statements. This account is grounded in two confirmation transmission properties that are satisfied by some of the measures of coherence recently proposed in the literature. These properties explicate everyday and scientific uses of coherence. In his paper, I review the main findings of Dietrich and Moretti (2005) and define two evidence-gathering properties that are satisfied by the same measures of coherence and constitute further ways in which coherence is confirmation conducive. At least one of these properties vindicates important applications of the notion of coherence in everyday life and in science.	coherence (physics);eurographics;franz lisp	Luca Moretti	2006	Synthese	10.1007/s11229-006-9057-5	philosophy of science;philosophy;epistemology;mathematics;satisfiability	AI	-12.80724626629242	4.583534205042625	84768
45c61ea0e0b2fd12cf704f940021921954f811ec	proof systems for moss' coalgebraic logic	cover modality;coalgebraic logic;universiteitsbibliotheek;modal logic;gentzen calculus;coalgebra;completeness;sequent system	We study Gentzen-style proof theory of the finitary version of the coalgebraic logic introduced by L. Moss. The logic captures the behaviour of coalgebras for a large class of set functors. The syntax of the logic, defined uniformly with respect to a finitary coalgebraic type functor T , uses a single modal operator ∇T of arity given by the functor T itself, and its semantics is defined in terms of a relation lifting functor T . An axiomatization of the logic, consisting of modal distributive laws, has been given together with an algebraic completeness proof in work of C. Kupke, A. Kurz and Y. Venema. In this paper, following our previous work on structural proof theory of the logic in the special case of the finitary powerset functor, we present cut-free, oneand two-sided sequent calculi for the finitary version of Moss’ coalgebraic logic for a general finitary functor T in a uniform way. For the two-sided calculi to be cut-free we use a language extended with the boolean dual of the nabla modality.	axiomatic system;lambda lifting;linear algebra;modal logic;modal operator;modality (human–computer interaction);sequent calculus	Marta Bílková;Alessandra Palmigiano;Yde Venema	2014	Theor. Comput. Sci.	10.1016/j.tcs.2014.06.018	modal logic;dynamic logic;discrete mathematics;higher-order logic;completeness;bunched logic;predicate functor logic;mathematics;multimodal logic;algorithm;statistics;algebra	Logic	-12.00304086085383	15.59377036167634	84840
5de9a4c90c2345d3311ad1cb13fea4ec3d729654	type inference in logic programming context	type inference		logic programming;type inference	Cedric Luiz de Carvalho;Eduardo Costa Pereira;Rita Maria da Silva Julia	1999			dynamic logic (modal logic);computational logic;data mining;computer science;machine learning;horn clause;functional logic programming;probabilistic logic network;proof calculus;logic programming;artificial intelligence;prolog	ML	-15.498438598126123	13.599781507673105	84968
6016138254194973fd9eb140b0e2e9fc23a5c9ad	mapping inferences: constraint propagation and diamond satisfaction	verification;constraint propagation;local consistency;automated reasoning in modal logics;constraint satisfaction;universiteitsbibliotheek;algorithm;dissertation	To my greatest fixpoints v The story is extant, and writ in very choice Italian.	local consistency;software propagation	Rosella Gennari	2002			constraint logic programming;concurrent constraint logic programming;mathematical optimization;constraint programming;discrete mathematics;constraint satisfaction;constraint learning;constraint graph;constraint satisfaction dual problem;mathematics;complexity of constraint satisfaction;constraint satisfaction problem;algorithm;hybrid algorithm;local consistency	AI	-17.475782634435813	14.954968242073226	85277
78678b046d81daf5abf7f776d1caf02ec9931afa	states of convex sets	article in monograph or in proceedings	State spaces in probabilistic and quantum computation are convex sets, that is, Eilenberg–Moore algebras of the distribution monad. This article studies some computationally relevant properties of convex sets. We introduce the term effectus for a category with suitable coproducts (so that predicates, as arrows of the shape X → 1 + 1, form effect modules, and states, arrows of the shape 1 → X, form convex sets). One main result is that the category of cancellative convex sets is such an effectus. A second result says that the state functor is a “map of effecti”. We also define ‘normalisation of states’ and show how this property is closed related to conditional probability. This is elaborated in an example of probabilistic Bayesian inference.	axiomatic system;computation;convex set;monad (functional programming);probabilistic turing machine;quantum computing;x-machine	Bart Jacobs;Bas Westerbaan;Bram Westerbaan	2015		10.1007/978-3-662-46678-0_6	convex analysis;subderivative;combinatorics;discrete mathematics;convex optimization;orthogonal convex hull;computer science;convex hull;convexity in economics;mathematics;convex set;algorithm;proper convex function	ML	-5.046952578595562	12.855639726420456	85383
9bbffcee533298578ca47924680e57e7937d1fed	variants of ltl query checking	temporal logic;pseudo boolean	Given a model M and a temporal logic formula φ[?], where ? is a placeholder, the query checking problem, as defined for the case of CTL by Chan in 2000, is to find the strongest propositional formula f such that M |= φ[? ← f ]. The motivation for solving this problem is, among other things, to get insight on the model. We consider various objectives to the LTL query-checking problem, and study the question of whether there is a better solution than simply enumerating all possible formulas (modulo logical equivalence). It turns out that in most cases the answer is no, but there is one particular objective for which the answer – in practice – is definitely yes. The solution is based on a reduction to a Pseudo-Boolean Solving problem.	brute-force search;büchi automaton;graph labeling;job control (unix);kripke structure (model checking);long division;mathematical optimization;maxima and minima;model m keyboard;model checking;modulo operation;optimization problem;temporal logic;turing completeness;xfig	Hana Chockler;Arie Gurfinkel;Ofer Strichman	2010		10.1007/978-3-642-19583-9_11	linear temporal logic;temporal logic;computation tree logic;computer science;algorithm	Logic	-8.930495340250767	17.807272140269287	85552
50869c6d43b9f06584c8a655a55db6265109ffd1	decidable formulas of intuitionistic primitive recursive arithmetic		A b s t r a c t. By formalizing some classical facts about provably total functions of intuitionistic primitive recursive arithmetic (iPRA), we prove that the set of decidable formulas of iPRA and of iΣ1 (intuitionistic Σ1-induction in the language of PRA) coincides with the set of its provably ∆1-formulas and coincides with the set of its provably atomic formulas. By the same methods, we shall give another proof of a theorem of Marković and De Jongh: the decidable formulas of HA are its provably ∆1-formulas.	computable function;intuitionistic logic;physical review a;primitive recursive function;recursion;recursive language	Saeed Salehi	2002	Reports on Mathematical Logic		discrete mathematics;mathematics;algorithm;algebra	Theory	-10.614135948830038	15.24049726051299	85558
51a0d6e3eb6eac9cafb4a3ff985bbe45c044be75	almost strongly minimal totally categorial theories			categorial grammar;theory	Gisela Ahlbrandt	1985				Vision	-10.391043255927634	11.503897341792062	85593
20402c3f0941a8d2ed57dcd9dc27475037febbe8	reasoning about binary topological relations	topological relation	A new formalism is presented to reason about topological relations. It is applicable as a foundation for an algebra over topological relations. The formalism is based upon the nine intersections of boundaries, interiors, arid complements between two objects. Properties of topological relations are determined by analyzing the nine intersections to detect, for instance, symmetric topological relations and pairs of converse topological relations. Based upon the standard rules for the transitivity of set inclusion, the intersections of the composition of two binary topological relations are determined. These intersections are then matched with the intersections of the eight fundamental topological relations, giving an interpretation to the composition of topological relations. The result of this study is the complete set of binary topological relations which result from the composition of two topological relations between n-dimensional point sets embedded in an n-dimensional space. While the combined topological relations are unique for some compositions, more than half of all possible compositions are underdetermined. Geometric prototypes are shown for the 2-dimensional case.	arid;embedded system;formal system;geometric median;interpretation (logic);semantics (computer science);vertex-transitive graph	Max J. Egenhofer	1991		10.1007/3-540-54414-3_36	topological dynamics;category of topological spaces;separation axiom;topological algebra;topological space;zero-dimensional space;topological entropy in physics;homeomorphism;mereotopology	Theory	-6.125428787982681	16.46176798222024	85598
a4a23949f84855cc91634dad108f01b2c9c029b9	view update translation via deduction and annotation	deductive databases	First steps are taken in examining the view update problem in deductive databases. The class of recursive definite deductive databases is examined. A view update is defined as a statement of factual logical consequence of the deductive database. A translation is a minimal update on the facts of a deductive database such that the view update holds. The number of translations for a view update is exponential in the size of the database. Algorithms for view updates are presented and proven correct. They are based on SLD-resolution and are independent of the computation rule. Finally, as an example of a method for reducing the number of possible translations of a view update, rule annotations are introduced. A small number of unique annotations (proportional to the size of the database) is shown to produce unique translations of view updates.	natural deduction	Anthony Tomasic	1988		10.1007/3-540-50171-1_22	computer science;data mining;database;view;information retrieval;algorithm	NLP	-18.446902702292654	9.139075986322851	85671
cdf40c4ddb0adebe9828745a45f9094623610727	an overview of argumentation frameworks for decision support		Argumentation (AA) frameworks I An AA framework is a pair 〈Args, attacks〉 where I Args is a set (the arguments) I attacks ⊆ Args × Args is a binary relation over Args ((α, β) ∈ attacks often written as “α attacks β”) I Equivalently, an AA framework is a directed graph e.g. argument for Inn(Jo) argument for Guilty(Jo) Given arguments and attacks between them, what is acceptable? e.g. (the argument for) Guilty(Jo) is, (the argument for) Inn(Jo) is not	argumentation framework;directed graph;entry point	Lucas Carstens;Xiuyi Fan;Yang Gao;Francesca Toni	2015		10.1007/978-3-319-28702-7_3	argumentation theory;domain knowledge;argumentation framework;decision problem;decision support system;management science;knowledge management;mathematics	AI	-18.076584926731883	5.871420143509043	85686
1f8bb779997d8ad87d190279659a2436a06cca4f	logics for rough concept analysis		Taking an algebraic perspective on the basic structures of Rough Concept Analysis as the starting point, in this paper we introduce some varieties of lattices expanded with normal modal operators which can be regarded as the natural rough algebra counterparts of certain subclasses of rough formal contexts, and introduce proper display calculi for the logics associated with these varieties which are sound, complete, conservative and with uniform cut elimination and subformula property. These calculi modularly extend the multi-type calculi for rough algebras to a ‘nondistributive’ (i.e. general lattice-based) setting.	formal concept analysis;linear algebra;modal logic;modular programming;rough set;well-formed formula	Giuseppe Greco;Peter Jipsen;Krishna Manoorkar;Alessandra Palmigiano;Apostolos Tzimoulis	2018	CoRR			Logic	-8.60785901488234	14.10181774119354	85791
d691403c2fba324d2ece34084d6f5632b2f80ff3	the projection of not-at-issue meaning via modal support: the meaning and use of the japanese counter-expectational adverbs		This paper discusses the phenomenon of what I call the “projection of non-at issue meaning via modal support” shown in the Japanese counterexpectational intensifier yoppodoand the counter expectational scale-reversal adverbkaette, and considers the variation of projective content from a new perspective. I show that, unlike the typical conventional implicatures (CIs) like appositives and expressives (e.g., Potts 2005), kaetteandyoppodocan project out of the complement of a belief predicate only if there is a modal in the main clause. I argue thatyoppodoandkaettebelong to a new class of projective content that requires consistency between an at-issue meaning and a CI meaning in terms of a judge. This paper provides a new perspective for the typology of projective content.	biological anthropology;modal logic;potts model	Osamu Sawada	2015		10.1007/978-3-319-50953-2_10	pure mathematics;modal;adverb;predicate (grammar);natural language processing;projective test;intensifier;artificial intelligence;if and only if;mathematics;phenomenon;typology	NLP	-12.301464269726877	6.543569638354438	86391
e3314b8a4935d14c3a97dcd2ee87910a9acaf52b	graphical conjunctive queries		The Calculus of Conjunctive Queries (CCQ) has foundational status in database theory. A celebrated theorem of Chandra and Merlin states that CCQ query inclusion is decidable. Its proof transforms logical formulas to graphs: each query has a natural model – a kind of graph – and query inclusion reduces to the existence of a graph homomorphism between natural models. We introduce the diagrammatic language Graphical Conjunctive Queries (GCQ) and show that it has the same expressivity as CCQ. GCQ terms are string diagrams, and their algebraic structure allows us to derive a sound and complete axiomatisation of query inclusion, which turns out to be exactly Carboni and Walters’ notion of cartesian bicategory of relations. Our completeness proof exploits the combinatorial nature of string diagrams as (certain cospans of) hypergraphs: Chandra and Merlin’s insights inspire a theorem that relates such cospans with spans. Completeness and decidability of the (in)equational theory of GCQ follow as a corollary. Categorically speaking, our contribution is a model-theoretic completeness theorem of free cartesian bicategories (on a relational signature) for the category of sets and relations. 2012 ACM Subject Classification Theory of computation → Categorical semantics	axiomatic system;categorical logic;conjunctive query;database theory;diagram;empty string;graph homomorphism;linear algebra;operational semantics;theory of computation	Filippo Bonchi;Jens Seeber;Pawel Sobocinski	2018		10.4230/LIPIcs.CSL.2018.13	discrete mathematics;completeness (statistics);bicategory;computer science;constraint graph;gödel's completeness theorem;conjunctive query;decidability;database theory;graph homomorphism	DB	-8.412525917882986	16.454081459628274	86467
a7a27a9b3f512e12ccd1bbc9c3778fea70f55c52	disjunctive elimination rule and its application in mtl	non classical logic;mtl;logica no clasica;algebre bl;axiomatic;left continuous t norm;bl;axiomatico;t norme continue gauche;general methods;bl algebra;non classical logics;norma triangular;t norm;norme triangulaire;axiomatique;regle disjonctive elimination;disjunctive elimination rule;logique non classique	Firstly, the disjunctive elimination rule is proved valid in Esteva and Godo’s MTL and Hájek’s BL logics. Secondly, from this rule a general method is presented for finitely axiomatizing the intersection of the sets of theorems of two given schematic extensions of MTL or BL. Thirdly, the axiomatic system of NM is simplified by replacing the axiom schemata (NM) with another which is built up with one variable. Fourthly, the intersection of the sets of tautologies of NM and G, NM and , NM and Ł are finitely axiomatized by our method. Finally, new axiom systems for ŁG, Ł , G, Ł G are presented by our method and some comments are made on the relations between these systems and those given by Cignoli et al. © 2006 Elsevier B.V. All rights reserved.	axiomatic system;bl (logic);comment (computer programming);disjunctive normal form;natural deduction;schematic;the nameless mod;turing completeness	San-Min Wang;Ming-Yan Wang	2006	Fuzzy Sets and Systems	10.1016/j.fss.2006.05.008	non-classical logic;discrete mathematics;artificial intelligence;mathematics;t-norm;axiom;algorithm	AI	-11.305576114563545	13.441629734625478	86565
09a643c45434ad8c96b0f4452d1ef48462ab5b7d	a new methodology for developing deduction methods	03b25;dual resolution;resolution;68t15;03f03;03b45;03b35;theorem proving;tableaux;inference rule;dynamic logic;modal logic;first order;03b70;modal resolution;deduction calculus synthesis;description logic;decidability;68t27;dual tableaux	This paper explores the use of resolution as a meta-framework for developing various, different deduction calculi. In this work the focus is on developing deduction calculi for modal dynamic logics. Dynamic modal logics are PDL-like extended modal logics which are closely related to description logics. We show how tableau systems, modal resolution systems and Rasiowa-Sikorski systems can be developed and studied by using standard principles and methods of first-order theorem proving. The approach is based on the translation of reasoning problems in modal logic to first-order clausal form and using a suitable refinement of resolution to construct and mimic derivations of the desired proof method. The inference rules of the calculus can then be read off from the clausal form. We show how this approach can be used to generate new proof calculi and prove soundness, completeness and decidability results. This slightly unusual approach allows us to gain new insights and results for familiar and less familiar logics, for different proof methods, and compare them not only theoretically but also empirically in a uniform framework.	automated theorem proving;conjunctive normal form;description logic;first-order predicate;method of analytic tableaux;modal logic;natural deduction;proof calculus;refinement (computing);resolution (logic)	Renate A. Schmidt	2009	Annals of Mathematics and Artificial Intelligence	10.1007/s10472-009-9155-4	modal logic;dynamic logic;decidability;t-norm fuzzy logics;normal modal logic;discrete mathematics;description logic;resolution;computer science;artificial intelligence;first-order logic;mathematics;automated theorem proving;accessibility relation;algorithm;rule of inference	AI	-13.617222597378875	15.486351562170858	86567
307cdf4602639177c7451e2d9148ab0aac1ce379	inference for a new probabilistic constraint logic	article in monograph or in proceedings	Probabilistic logics combine the expressive power of logic with the ability to reason with uncertainty. Several probabilistic logic languages have been proposed in the past, each of them with their own features. In this paper, we propose a new probabilistic constraint logic programming language, which combines constraint logic programming with probabilistic reasoning. The language supports modeling of discrete as well as continuous probability distributions by expressing constraints on random variables. We introduce the declarative semantics of this language, present an exact inference algorithm to derive bounds on the joint probability distributions consistent with the specified constraints, and give experimental results. The results obtained are encouraging, indicating that inference in our language is feasible for solving challenging problems.	algorithm;constraint logic programming;correctness (computer science);experiment;heuristic (computer science);ibm lan server;lambda lifting;programming language;sampling (signal processing)	Steffen Michels;Arjen Hommersom;Peter J. F. Lucas;Marina Velikova;Pieter W. M. Koopman	2013			constraint logic programming;concurrent constraint logic programming;natural language processing;constraint programming;description logic;probabilistic ctl;constraint satisfaction;probabilistic relevance model;computer science;semantic reasoner;artificial intelligence;machine learning;mathematics;probabilistic logic;inductive programming;fifth-generation programming language;programming language;probabilistic argumentation;logic programming;probabilistic logic network;algorithm;autoepistemic logic;subjective logic	AI	-18.517196101532054	12.574910722527727	86688
23bb0f9d905d54e24f7f28b051ace51d799578eb	fuzztrees - failure analysis with uncertainties	fault tree;reliability;system configuration;failure probabilities fuzz trees failure analysis uncertainty role dependability modeling complex system reliability system configuration reliability engineer event probabilities fault trees fuzzy numbers graphical notations initial analysis algorithm;fuzzy logic;failure analysis;logic gates fault trees redundancy analytical models uncertainty statistical analysis;reliability theory fault trees fuzzy set theory probability;variation point;system configuration failure analysis reliability variation point fuzzy logic fault tree	Dependability modeling is a widely established method for analyzing the reliability of complex systems. Nearly all approaches focus on the representation - in success or failure space - of one specific system configuration. This does not reflect the high configurability of systems being common today. Furthermore, in order to perform a quantitative analysis of a model, the reliability engineer also needs to add exact event probabilities that can often only be estimated. Both things together lead to a situation where the final model may persuade the reader of an exactness that does not correspond with reality. We present an extended version of fault trees called Fuzz Trees. They combine fuzzy numbers for event probabilities with the modeling of system variability by new graphical notations. The concept allows the engineer to make uncertainty an explicit part of the dependability model, and to evaluate design alternatives early in the development. We discuss an initial analysis algorithm that allows the comparison of failure probabilities and costs for all possible system configurations being modeled by such a tree.	algorithm;complex systems;dependability;diagram;failure analysis;fault tree analysis;fuzzy logic;fuzzy number;graphical user interface;markov chain;reliability engineering;safety engineering;simulation;spatial variability;system configuration;systems design;whole earth 'lectronic link	Peter Tröger;Franz Becker;Felix Salfner	2013	2013 IEEE 19th Pacific Rim International Symposium on Dependable Computing	10.1109/PRDC.2013.48	fuzzy logic;reliability engineering;failure analysis;fault tree analysis;computer science;theoretical computer science;reliability;distributed computing;algorithm;statistics	Embedded	-6.410688792857383	5.539338204658796	86824
9632ad56b51aa3b16115d682542337bd253816cf	the phenomenology of mathematical proof	realism;verification;phenomenology;theorem;mathematics;pretention;formal;husserl e;phenomenologie;formel;methode;presentation;preuve;mechanism;realisme;theoreme;axiomatics;axiomatique;description;proof;method;mathematiques;mecanisme	Everybody knows what a mathematical proof is. A proof of a mathematical theorem is a sequence of steps which leads to the desired conclusion. The rules to be followed by such a sequence of steps were made explicit when logic was formalized early in this century, and they have not changed since. These rules can be used to disprove a putative proof by spotting logical errors; they cannot, however, be used to find the missing proof of a mathematical conjecture. The expression “correct proof” is redundant. Mathematical proof does not admit degrees. A sequence of steps in an argument is either a proof, or else it is gibberish. Heuristic arguments are a common occurrence in the practice of mathematics. However, heuristic arguments are not viewed as part of formal logic. The role of heuristic arguments has seldom been acknowledged in the philosophy of mathematics, despite the crucial role that they play in mathematical discovery. The mathematical notion of proof is strikingly at variance with notions of proof in other areas, such as courts of law, everyday conversation, and physics. Proofs given by physicists do admit degrees: of two proofs given of the same assertion of physics, one may be judged to be more correct than the other. Open any physics book, and you will verify the common occurrence of degrees of correctness of proofs, which mathematicians find annoying. For example, the celebrated Peierls argument of statistical mechanics was, in a strict mathematical sense, meaningless when it was first proposed by Sir Rudolph Peierls, and it remained mathematically meaningless as it underwent a long sequence of proofs in the sense accepted by physicists. Each successive proof was deemed to be more correct than the preceding, until a “final” proof was found, the only one a mathematician will accept. The axiomatic method by which we write mathematics is the only method that guarantees the truth of a mathematical assertion. Nevertheless, a discussion of the axiomatic method does not tell us much about mathematical proof. Our purpose is to bring out some of the features of	assertion (software development);axiomatic system;correctness (computer science);gibberish;heuristic;ising model	Gian-Carlo Rota	1997	Synthese	10.1023/A:1004974521326	method;theorem;verification;mechanism;philosophy;epistemology;phenomenology;proof;mathematics;realism	Theory	-12.312208186674688	4.529339905305099	86885
c69260dfaedb2d53e26e1dac1e1672814aba1db7	a modal system properly independent of both the brouwerian system and s4			modal logic	G. N. Georgacarakos	1978	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093888211		Crypto	-12.968919781702148	11.487239719403332	86937
b4a2ef17f7052848a36b80c2cc8262562a19a19d	the borel conjecture	cardinalite continu;condition laver;forcing logic;teoria conjunto;theorie ensemble;set theory;consistencia;consistance;theorie axiomatique;forcing;ultrafilter;axiomatic theory;conjecture borel;teoria axiomatica;ultrafiltre;consistency	In this work we consider the problem of the Bore1 Conjecture with large continuum. This problem has been one of the most interesting in the post-Cohen era of set theory. The consistency of the Bore1 Conjecture was proved by Laver [8], from the consistency of Zermelo-Fraenkel set theory. The importance of the Laver result is two-fold: On the one hand it gives a connection between abstract set theory and problems in analysis and on the other hand his solution contains the first use of countable support iterated forcing (this will produce such deep developments as the Proper Forcing Axiom). However, the Laver solution was not general, in fact in his model the cardinality of the continuum is equal to X2. Further analysis of the technique of ‘countable support iteration’ proves that it is impossible to enlarge the continuum farther than K2 using such techniques. The fact is that in any extension by a w,-iteration with countable support of non-trivial forcing notions, the continuum has cardinality Ni. Also a finite support iteration forcing does not help for getting a model for the Bore1 Conjecture, because Cohen reals are added in every o-limit. These facts show us that the problem of the Bore1 Conjecture with the continuum bigger than K2 may be a really hard problem.	apache continuum;iteration;triune continuum paradigm;zermelo–fraenkel set theory	Haim Judah;Saharon Shelah;W. Hugh Woodin	1990	Ann. Pure Appl. Logic	10.1016/0168-0072(90)90058-A	axiomatic system;beal's conjecture;forcing;mathematical analysis;topology;borel's lemma;ultrafilter;borel equivalence relation;calculus;mathematics;consistency;collatz conjecture;set theory;algebra	Theory	-6.940531193315022	12.50419149218874	86984
9d2109a88d553372b06622a93bc3ffc7c6d275dd	a proof procedure for temporal logic programming	temporal logic programming;temporal logic;theorem proving;branching time;proof procedures	In this paper, we propose a new resolution proof procedure for the branching-time logic programming language Cactus. The particular strength of the new proof procedure, called CSLD-resolution, is that it can handle, in a more general way, open-ended queries, i.e. goal clauses that include atoms which do not refer to specific moments in time, without the need of enumerating all their canonical instances. We also prove soundness, completeness and independence of the computation rule for CSLD-resolution. The new proof procedure overcomes the limitations of a family of proof procedures for temporal logic programming languages, which were based on the notions of canonical program and goal clauses. Moreover, it applies directly to Chronolog programs and it can be easily extended to apply to multi-dimensional logic programs as well as to Chronolog(MC) programs.	logic programming;temporal logic	Manolis Gergatsoulis;Christos Nomikos	2004	Int. J. Found. Comput. Sci.	10.1142/S0129054104002509	direct proof;combinatorics;discrete mathematics;linear temporal logic;higher-order logic;horn clause;temporal logic;interval temporal logic;computer science;bunched logic;proof theory;mathematics;proof calculus;automated theorem proving;prolog;logic programming;method of analytic tableaux;structural proof theory;proof complexity;algorithm	Theory	-15.246464479081464	17.45840078051043	87024
ad159c3eb38185c160f97bbed4290164b924d32a	proof complexity of the cut-free calculus of structures	calculus of structures;proof complexity;sequent calculus;deep inference	We investigate the proof complexity of analytic subsystems of the deep inference proof system SKSg (the calculus of structures). Exploiting the fact that the cut rule (i↑) of SKSg corresponds to the ¬-left rule in the sequent calculus, we establish that the “analytic” system KSg +c↑ has essentially the same complexity as the monotone Gentzen calculus MLK . In particular, KSg + c↑ quasipolynomially simulates SKSg , and admits polynomial-size proofs of some variants of the pigeonhole principle.	calculus of structures;cut rule;pigeonhole sort;polynomial;proof calculus;proof complexity;sequent calculus;monotone	Emil Jerábek	2009	J. Log. Comput.	10.1093/logcom/exn054	process calculus;discrete mathematics;cut-elimination theorem;geometry of interaction;computer science;analytic proof;time-scale calculus;mathematics;proof calculus;noncommutative logic;sequent;programming language;sequent calculus;natural deduction;structural proof theory;proof complexity;algorithm	Logic	-10.968054947915293	15.664648787662017	87035
8d8468f668e32025dc02ec219de0f4a7b2d94cf3	redefining material implication with subjective logic	materials uncertainty probabilistic logic switches natural languages cognition;probability;probability logic design logic gates;logic design;uncertainty;conditional;natural languages;materials;opinion;subjective logic;functional connectivity;logic gates;natural language;cognition;mathematical equation redefining material implication subjective logic logical relationship truth functional connective truth table clear interpretation normal language probabilistic view binary truth values vacuous opinion over simplistic interpretation misleading interpretation uncertainty binary logic;probabilistic logic;switches;deduction conditional uncertainty opinion;deduction	"""Material implication is traditionally denoted as (x→y), where x represents the antecedent and y the consequent of the logical relationship between the propositions x and y. Material implication is a truth functional connective, meaning that it is defined by a truth table. While truth functional connectives normally have a relatively clear interpretation in normal language, this is not the case for material implication. It could for example be expressed as: """"if x is true, then y is true"""". However, this does not say anything about the case when x is false, which is problematic for the interpretation of the corresponding entries in the truth table. In this paper we introduce a probabilistic view of material implication and show that it is not closed under binary truth values, and that it in fact produces uncertainty in the form of a vacuous opinion. When seen in this light, it becomes clear that the traditional definition of material implication is based on the over-simplistic and misleading interpretation of complete uncertainty as binary logic TRUE. We redefine material implication with subjective logic to preserve the uncertainty that it unavoidably produces in specific cases. We then compare the new definition of material implication with conditional deduction, and show that they reflect the same mathematical equation rearranged in different forms."""	definition;fuzzy logic;logical connective;natural deduction	Audun Jøsang;Zied Elouedi	2011	14th International Conference on Information Fusion		converse implication;artificial intelligence;mathematics;logical connective;algorithm	Robotics	-12.235764703320791	5.767266522071965	87037
5fbaff3e84c209325a255c63c9721b1a44724eaa	predicates in perspective	context-dependence;predicate;extension;semantics-pragmatics distinction;contextualism;semantic content;properties;instantiation;indexicality;functional role	A familiar strategy of argument to the effect that natural-language predicates are semantically context dependent rests on constructing what I term Travis cases: different contexts for the use of a predicate are imagined in which its semantic (typically, truth-conditional) properties are claimed to differ. I propose an account of the semantic properties of predicates that give rise to Travis cases; I then argue that the account underwrites a genuine alternative to the standard explanations of Travis cases to be found in the literature; I close with a brief sketch of the connections, required by a fuller development of my account, among the semantic notion of a predicate’s content, the metaphysical notion of a property’s instantiation, and the cognitive notion of a language user’s perspective in using a predicate.	cognition;natural language;travis ci;universal instantiation;user (computing)	Anthony Corsentino	2010	Synthese	10.1007/s11229-010-9859-3	epistemology;syntactic predicate;mathematics;predicate;algorithm	AI	-13.512762896740107	5.720278702327396	87126
6f594cd666eb829c58d1b936dbf611266cbb6e8d	on fuzzy logic ii. enriched residuated lattices and semantics of propositional calculi	fuzzy logic;residuated lattice		fuzzy logic;propositional calculus;residuated lattice	Jan Pavelka	1979	Math. Log. Q.	10.1002/malq.19790250706	fuzzy logic;monoidal t-norm logic;zeroth-order logic;t-norm fuzzy logics;discrete mathematics;intermediate logic;mathematics;t-norm;propositional variable	Logic	-12.501215229024258	12.58239249986468	87193
0a5baa6c8e8118cd52242b06b297ff2cf280f9ad	a wadge hierarchy for second countable spaces	admissible representation;relatively continuous relation;03d55;03e15;03f60;wadge reducibility;wadge hierarchy	Wadge reducibility provides a rich and nice analysis of Borel sets in Polish zero dimensional spaces. However, outside this framework, reducibility by continuous functions was shown to be ill behaved in many important cases. We define a notion of reducibility for subsets of a second countable T0 topological space based on the notions of admissible representations and relatively continuous relations. This reducibility can be seen as a generalisation of Wadge reducibility outside of the zero dimensional framework, in the sense that it agrees with Wadge reducibility on zero dimensional spaces. However this reducibility extends the nice properties of the Wadge reducibility far beyond the class of zero dimensional Polish spaces. In particular, on the real line R and on the Scott Domain P(ω) it is a semi wellorder on Borel sets and it refines the classical Borel classes and Kuratowski-Hausdorff difference hierarchies.	admissible heuristic;arithmetical hierarchy;hausdorff dimension;random self-reducibility;scott continuity;scott domain;semiconductor industry	Yann Pequignot	2015	Arch. Math. Log.	10.1007/s00153-015-0434-y	descriptive set theory;mathematical analysis;discrete mathematics;topology;mathematics;wadge hierarchy;determinacy	Theory	-8.232353865466406	14.342683508489364	87215
a4399441c2d878b4eaa0cd2fcc4f650278d86ef1	base belief change for finitary monotonic logics	satisfiability;fuzzy logic;belief change	We slightly improve on characterization results already in the literature for base revision. We show that in order to axiomatically characterize revision operators in a logic the only conditions this logic is required to satisfy are: finitarity and monotonicity. A characterization of limiting cases of revision operators, full meet and maxichoice, is also offered. In the second part of the paper, as a particular case, we focus on the class of graded fuzzy logics and distinguish two types of bases, naturally arising in that context, exhibiting different behavior.	fuzzy logic;logical framework;natural deduction;t-norm	Pere Pardo;Pilar Dellunde;Lluis Godo	2009		10.1007/978-3-642-14264-2_9	t-norm fuzzy logics;discrete mathematics;non-monotonic logic;mathematics;algorithm	AI	-10.654004715965806	12.521986594380238	87376
2989787ae018d11d1ffb1355ec2324232349d2d5	classification reasoning as a model of human commonsense reasoning.		In this article, it is proposed to consider classification reasoning based on inducing and using implicative dependencies as a model of commonsense reasoning. The main concept of this reasoning is a good classification test considered as a formal concept of the FCA. The Galois lattice is used for constructing good classification tests. Special rules are determined for constructing Galois lattices over a given context. All the operations of lattice construction take their interpretation in human mental acts.	commonsense reasoning;formal concept analysis;inductive reasoning;machine learning;mathematical induction;natural deduction	Xenia A. Naidenova	2012				AI	-18.611676813746982	6.236774686441133	87416
cde9ba92504d9c0ea6caa6e662e30391d96a937f	modal logic with names	nom;name;langage;definability;modality;property;universality;expressive power;modal logic;universalite;logique modale;model;propriete;modele;language;completeness;completude;passy s;definissabilite;modalite	We investigate an enrichment of the propositional modal languageℒ with a “universal” modality ▪ having semanticsx ⊧ ▪ϕ iff āy(y ⊧ ϕ), and a countable set of “names” — a special kind of propositional variables ranging over singleton sets of worlds. The obtained language ℒc proves to have a great expressive power. It is equivalent with respect to modal definability to another enrichment ℒ(#R##N##R##N#) ofℒ, where#R##N##R##N#is an additional modality with the semanticsx ⊧#R##N##R##N#ϕ iff āy(y⊧ x → y ⊧ϕ). Model-theoretic characterizations of modal definability in these languages are obtained. Further we consider deductive systems in ℒc. Strong completeness of the normal ℒc-logics is proved with respect to models in which all worlds are named. Every ℒc-logic axiomatized by formulae containing only names (but not propositional variables) is proved to be strongly frame-complete. Problems concerning transfer of properties ([in]completeness, filtration, finite model property etc.) fromℒ to ℒcare discussed. Finally, further perspectives for names in multimodal environment are briefly sketched.	modal logic	George Gargov;Valentin Goranko	1993	J. Philosophical Logic	10.1007/BF01054038	modal logic;discrete mathematics;philosophy;epistemology;completeness;universality;mathematics;language;property;expressive power;algorithm	Logic	-9.739446878688055	13.229379549525614	87791
45b66b5370739be5bd7ea394b295e1f987a6f5bb	modeling local belief revision in a dynamic reasoning system	dynamic reasoning systems;agm framework;nonmonotonic reasoning;belief revision;local belief revision	The well-known AGM framework provides an intuitively plausible model of nonmonotonic belief revision, but it has the drawback that it is not computational. A computational variant has been proposed by Hansson, and subsequently Hansson and Wassermann have identified a notion of local belief change and discussed how this can modeled in an adaptation of Hansson framework. Briefly, the belief set is compartmentalized in such a way that consistency may be preserved in one compartment, while inconsistency may be entertained in another compartment without the entire belief system degenerating to the trivial case where all propositions are believed. An alternative to the AGM framework is the Dynamic Reasoning System (DRS), which models reasoning explicitly as a temporal activity. The objective in this paper is to show how the phenomenon of local belief change studied by Hansson and Wassermann can be modeled in the DRS framework.	belief revision;reasoning system	Daniel G. Schwartz;Stanislav Ustymenko	2012		10.1007/978-3-642-30353-1_38	computer science;artificial intelligence;non-monotonic logic;belief revision;algorithm	AI	-16.646223493862607	5.739483874407485	87797
ba230e605b99a7640e56e357293a13c1d73c3403	a survey of advances in epistemic logic program solvers		Recent research in extensions of Answer Set Programming has included a renewed interest in the language of Epistemic Specifications, which adds modal operators K (“known”) and M (“may be true”) to provide for more powerful introspective reasoning and enhanced capability, particularly when reasoning with incomplete information. An epistemic logic program is a set of rules in this language. Infused with the research has been the desire for an efficient solver to enable the practical use of such programs for problem solving. In this paper, we report on the current state of development of epistemic logic program solvers.	answer set programming;computation;epistemic modal logic;expectation propagation;logic programming;mutual exclusion;newman's lemma;parallel computing;problem solving;solver;stable model semantics;yet another	Anthony P. Leclerc;Patrick Thor Kahl	2018	CoRR		machine learning;natural language processing;computer science;complete information;artificial intelligence;modal operator;answer set programming;solver;epistemic modal logic	AI	-18.23396982676596	12.923075700441169	87877
be53b74019f492c1f5356290eb5fffe762ceb873	cut elimination and automatic proof procedures	theorie preuve;automatic proving;cut elimination;logique mathematique;logica matematica;intelligence artificielle;demostracion automatica;mathematical logic;theorem proving;demonstration automatique;demonstration theoreme;artificial intelligence;inteligencia artificial;demostracion teorema		automatic differentiation	Wenhui Zhang	1991	Theor. Comput. Sci.	10.1016/0304-3975(91)90086-H	mathematical logic;computer science;artificial intelligence;mathematics;automated theorem proving;algorithm	Logic	-15.9955189523559	15.505744389342963	87988
091661c475b8b4c2a261ff5131f68c1cca789d17	dynamic generalized quantifiers and existential sentences in natural languages	grammaire de montague;quantifier;theorie des quantifieurs generalises;restriction;theorie de la representation discursive;logique intentionnelle;anglais;syntagme nominal;restriction definitoire;natural language;phrase existentielle;langue naturelle;phrase there be;quantifieur;existential sentence	The central topic to be discussed in this paper is the definiteness restriction in there-insertion contexts. Various attempts to explain using the standard algebraic framework are discussed and the shortcomings of these attempts are demonstrated. Finally a new approach of existential there be-sentences is developed within the framework of Groenendijk & Stokhof's Dynamic Montague Grammar. The conclusion is that the Dynamic Montague Grammar has applications other than those which prompted it.		Reinhard Blutner	1993	J. Semantics	10.1093/jos/10.1.33	montague grammar;philosophy;linguistics;natural language	Logic	-12.727239121278169	7.2561804016722915	88014
c776a60aed0bd6d80d11ebd52334651ebcce1208	the logic of fol systems: formulated in set theory	set theory;data structure;first order logic	In this paper we use set theory to describe FOL systems. This restatement of the notions implicit in First Order Logic facilitates their interpretation as finite data structures. This is a crucial step toward the goal of building an artificial reasoner.	first-order logic;set theory	Richard W. Weyhrauch;Carolyn L. Talcott	1994		10.1007/BFb0032398	fuzzy logic;dynamic logic;abstract model theory;discrete mathematics;intermediate logic;predicate functor logic;internal set;mathematics;signature;structure;substructural logic;multimodal logic;second-order logic;algorithm	Logic	-15.079331630852721	12.279719893800001	88098
c2fb1e4c1158c2092533b426f93679fe0008cd28	an introduction to algol: a tutorial paper on algol with explanations and examples to make the use of the algol report more familiar	tutorial paper;algol report	To solve a numeri(.al problem with the use of a computer, the solution must be described in terms of the computer, i.e. in (~omputer notation, before it can be given to the machine. Unfortunately, however, the computer notations are not only mueh different from classieal mathematical notation but also different among themselves, and many of the difticulti(,s of programming may be attributed to these variations. Frequent a t tempts have been made to bridge the gap between eornImter and classical mathematk:al notation by devising notations somewhere between the two extremes in order to cornbine the advantages of both:	algol	Hans Rudolf Schwarz	1962	Commun. ACM	10.1145/366792.366804	computer science;algorithm	Theory	-10.673631476479406	7.8226043471400315	88214
11487825b284ccc2142d5f73eb017eb2cadac1b1	entailment in probability of thresholded generalizations	nonmonotonic entailment relation;two-level probability structure;probability function;lower level;conditional probability;thresholded generalization;probabilistically trustworthy;nonmonotonic logic;positive integer k;probability distribution	A nonmonotonic logic of thresholded gener­ alizations is presented. Given propositions a and {3 from a language L and a posi­ tive integer k, the thresholded generalization a =}k {3 means that the conditional prob­ ability 1r(f3!a) is at least 1 7jl8k. A two­ level probability structure is defined. At the lower level, a model is defined to be a prob­ ability function on L. At the upper level, there is a probability distribution over mod­ els. A definition is given of what it means for a collection of thresholded generaliza­ tions to entail another thresholded general­ ization. This nonmonotonic entailment re­ lation, called entailment in probability, has the feature that its conclusions are proba­ bilistically trustworthy meaning that, given true premises, it is improbable that an en­ tailed conclusion would be false. A proce­ dure is presented for ascertaining whether any given collection of premises entails any given conclusion. It is shown that entailment in probability is closely related to Goldszmidt and Pearl's System-z+, thereby demonstrat­ ing that System-Z+'s conclusions are proba­ bilistically trustworthy.	ibm system z;l (complexity);non-monotonic logic;trust (emotion)	Donald Bamber	1996			discrete mathematics;conditional probability;mathematics;preferential entailment;algorithm	AI	-13.440358792591596	6.87005078013179	88324
6a70896a675a1ced7d6234757c19d4cf7a7b2ce6	compressing polarized boxes	graph theory;multiplicative and exponential polarized linear logic polarized box compression sequent calculus cut elimination rule subproofs duplication subproof erasing explicit box global constraint synchronous constraint graph logical polarity linear logic correctness criterion cut elimination dynamics normalization;cut elimination;confluence;confluence linear logic proof nets polarity correctness criteria cut elimination termination;formal logic;graph theory formal logic;termination;correctness criteria;calculus syntactics encoding standards games semantics shape;polarity;proof nets;linear logic	The sequential nature of sequent calculus provides a simple definition of cut-elimination rules that duplicate or erase sub-proofs. The parallel nature of proof nets, instead, requires the introduction of explicit boxes, which are global and synchronous constraints on the structure of graphs. We show that logical polarity can be exploited to obtain an implicit, compact, and natural representation of boxes: in an expressive polarized dialect of linear logic, boxes may be represented by simply recording some of the polarity changes occurring in the box at level 0. The content of the box can then be recovered locally and unambiguously. Moreover, implicit boxes are more parallel than explicit boxes, as they realize a larger quotient. We provide a correctness criterion and study the novel and subtle cut-elimination dynamics induced by implicit boxes, proving confluence and strong normalization.	confluence;correctness (computer science);linear logic;normalization property (abstract rewriting);sequent calculus;thinking outside the box	Beniamino Accattoli	2013	2013 28th Annual ACM/IEEE Symposium on Logic in Computer Science	10.1109/LICS.2013.49	linear logic;combinatorics;discrete mathematics;polarity;geometry of interaction;graph theory;mathematics;proof calculus;noncommutative logic;programming language;confluence;logic;algorithm	Logic	-10.896252636471326	17.02837456232996	88618
a3b0bacd2b35e26333cb382bd798591259541a5d	computational inductive definability	descriptive set theory;technical report;computer science	It is shown that over any countable $rst-order structure, IND programs with dictionaries accept exactly the 1 1 relations. This extends a result of Harel and Kozen (Inform. and Control 63 (1– 2) (1984) 118) relating IND and 1 1 over countable structures with some coding power, and provides a computational analog of a result of Barwise et al. (J. Symbolic Logic 36 (1971) 108) relating the 1 1 relations on a countable structure to a certain family of inductively de$nable relations on the hereditarily $nite sets over that structure. c © 2003 Elsevier B.V. All rights reserved. MSC: 03D60; 03D70; 03D75; 68Q05; 68Q10; 68Q15	computation;dictionary	Dexter Kozen	2004	Ann. Pure Appl. Logic	10.1016/j.apal.2003.10.013	descriptive set theory;mathematical analysis;discrete mathematics;topology;computer science;technical report;mathematics;algorithm;algebra	Logic	-5.582702765871156	13.987527932936073	88731
ea7349c694f55f1975c3b30db3b025658846ea2d	on second order intuitionistic propositional logic without a universal quantifier		We examine second order intuitionistic propositional logic, IPC2. Let 9~b be the set of formulas with no universal quantification. We prove Glivenkou0027s theorem for formulas in ^3 that is, for -xp is a tautology of IPC2. We show that for each sentence ,3. §	intuitionistic logic;propositional calculus;quantifier (logic);universal quantification	Konrad Zdanowski	2009	J. Symb. Log.		modal logic;propositional formula;dynamic logic;zeroth-order logic;decidability;t-norm fuzzy logics;modal μ-calculus;discrete mathematics;classical logic;resolution;horn-satisfiability;tautology;many-valued logic;intuitionistic logic;intermediate logic;first-order logic;mathematics;propositional variable;well-formed formula;propositional calculus;truth value;second-order logic;algorithm;autoepistemic logic	Logic	-11.88911282804093	12.850626504739322	88789
c2bb93033011c6309e44419afaf83ff4c802d519	completeness of second-order propositional s4 and h in topological semantics		We add propositional quantifiers to the propositional modal logic S4 and to the propositional intuitionsitic logic H, introducing axiom schemes that are the natural analogs to axiom schemes typically used for first-order quantifiers in classical logic. We show that the resulting logics are sound and complete for a topological semantics extending, in a natural way, the topological semantics for S4 and for H.	first-order predicate;modal logic;propositional calculus	Philip Kremer	2018	Rew. Symb. Logic	10.1017/S1755020318000229	discrete mathematics;completeness (statistics);semantics;mathematics	Logic	-13.117425513065813	13.393302536555597	88806
f719d1058bde9c4f57e52b9450a26053359c483f	linearity constraints as bounded intervals in linear logic programming	resource manager;linear constraint;logic programming;proof search;rational number;linear logic;resource management system	We present a new system of resource management for linear logic programming which ensures linearity constraints are satisfied solely by manipulating individual formula tags. In our system, tags are rational numbers, and a single bounded interval suffices to characterize all of the available formulas at any point in the proof. This system, which we prove correct directly with respect to the efficient resource management system of Cervesato et al., simplifies and improves upon the tag-frame system of Hodas et al.	linear logic;logic programming	Jeff Polakow	2006	J. Log. Comput.	10.1093/logcom/exi073	linear logic;mathematical optimization;discrete mathematics;computer science;resource management;mathematics;programming language;logic programming;algorithm;rational number	Logic	-11.396007351525748	16.29172736806771	88886
08e7be3152727317fd66e59e2a0df04fca7f8893	two lower bounds for bpa		Branching bisimilarity of normed Basic Process Algebra (nBPA) was claimed to be EXPTIMEhard in previous papers without any explicit proof. Recently it has been pointed out by Petr Jančar that the claim lacked proper justification. In this paper, we develop a new complete proof for the EXPTIME-hardness of branching bisimilarity of nBPA. We also prove that the associated regularity problem of nBPA is PSPACE-hard. This improves previous P-hard result. 1998 ACM Subject Classification F.4.2 Grammars and Other Rewriting Systems	bisimulation;exptime;oracle bpa suite;p (complexity);pspace-complete;process calculus;rewriting	Mingzhang Huang;Qiang Yin	2017		10.4230/LIPIcs.CONCUR.2017.20	discrete mathematics;mathematics;exptime;branching (version control);nexptime;process calculus	Theory	-10.423766003727064	16.35075972711119	89142
e39c5341490a45a183e8991bcf0d066f75c5c5e9	dynamic epistemic logic for implicit and explicit beliefs	beliefs;knowledge;belief revision;epistemic logic;dynamic epistemic logic;inference	The dynamic turn in Epistemic Logic is based on the idea that notions of information should be studied together with the actions that modify them. Dynamic epistemic logics have explored how knowledge and beliefs change as consequence of, among others, acts of observation and upgrade. Nevertheless, the omniscient nature of the represented agents has kept finer actions outside the picture, the most important being the action of inference. Following proposals for representing non-omniscient agents, recent works have explored how implicit and explicit knowledge change as a consequence of acts of observation, inference, consideration and even forgetting. The present work proposes a further step towards a common framework for representing finer notions of information and their dynamics. We propose a combination of existing works in order to represent implicit and explicit beliefs. Then, after adapting definitions for the actions of upgrade and retraction, we discuss the action of inference on beliefs, analyzing its differences with respect to inference on knowledge and proposing a rich system for its representation.	axiomatic system;dynamic epistemic logic;epistemic modal logic;multi-agent system;plausibility structure;software framework	Fernando R. Velázquez-Quesada	2010	Journal of Logic, Language and Information	10.1007/s10849-014-9193-0	philosophy;epistemology;artificial intelligence;mathematics;knowledge;belief revision;algorithm	AI	-16.689916374486554	5.267343388160761	89174
04964d350e54ae0b8b342c9149378621ebe168f8	the instance problem and the most specific concept in the description logic el w.r.t. terminological cycles with descriptive semantics	condicion existencia;terminologie;terminologia;temps polynomial;semantics;semantica;semantique;condition suffisante;first order;condicion suficiente;contexto;least common subsumer;inferencia;condition existence;polynomial time;contexte;terminology;decidibilidad;sufficient condition;description logic;decidabilite;existence condition;context;inference;decidability;tiempo polinomial	Previously, we have investigated both standard and nonstandard inferences in the presence of terminological cycles for the description logic EL, which allows for conjunctions, existential restrictions, and the top concept. The present paper is concerned with two problems left open by this previous work, namely the instance problem and the problem of computing most specific concepts w.r.t. descriptive semantics, which is the usual first-order semantics for description logics. We will show that—like subsumption—the instance problem is polynomial in this context. Similar to the case of the least common subsumer, the most specific concept w.r.t. descriptive semantics need not exist, but we are able to characterize the cases in which it exists and give a decidable sufficient condition for the existence of the most specific concept. Under this condition, it can be computed in polynomial time.	approximation;cyclic redundancy check;decision problem;description logic;first-order predicate;lowest common ancestor;polynomial;regular expression;subsumption architecture;time complexity	Franz Baader	2003		10.1007/978-3-540-39451-8_6	decidability;time complexity;discrete mathematics;description logic;computer science;artificial intelligence;first-order logic;mathematics;semantics;terminology;algorithm	AI	-16.1127260448367	12.703682812693437	89264
21f1fc2133e8a0003dca4be0055849a0941a241f	partiality and recursion in higher-order logic	technical appendix;classical first-order logic;recursive function;higher-order logic;illative system;general recursive function;model construction;classical higher-order logic;direct definition;basic inductive type	We present an illative system Is of classical higher-order logic with subtyping and basic inductive types. The system Is allows for direct definitions of partial and general recursive functions, and provides means for handling functions whose termination has not been proven. We give examples of how properties of some recursive functions may be established in our system. In a technical appendix to the paper we prove consistency of Is. The proof is by model construction. We then use this construction to show conservativity of Is over classical first-order logic. Conservativity over higher-order logic is conjectured, but not proven. Note: This paper is an extended technical report based on a conference paper with the same title published by Springer-Verlag in the proceedings of FoSSaCS 2013. The final publication is available at springerlink.com.	first-order logic;first-order predicate;intuitionistic type theory;recursion (computer science);springer (tank);μ-recursive function	Lukasz Czajka	2013		10.1007/978-3-642-37075-5_12	discrete mathematics;mathematics;algorithm	Logic	-9.318257416023172	13.885874488559109	89286
6062c84e42c7c5c0fec7ed62afa901ab45c22b9e	interpreting higher computations as types with totality	research report	Qualitative domains were introduced by Girard [4] in order to give a model of system F, originally introduced by Girard [2]. The closed terms in system F will be interpreted as consistent objects in their corresponding domains. Girard added a notion of totality to the qualitative domains. A free type variable may be interpreted as any qualitative domain with any set of consistent sets representing the total objects. A type term with n free type variables will then be interpreted as an n-ary operator on the class of pairs (X, XTOT) where X is a qualitative domain and XTOT is any set of elements in X. These operators are extensions of the basic interpretation of system F using nice functorial operators on the category of qualitative domains. In a type abstraction the objects are the so called uniform objects. A uniform object will be total if its value is total for all interpretations of totality in the domain that is the argument of the operator. Thus when the free variables are abstracted away, each closed type-term is interpreted as a specific domain with a specific set of total objects. Since there is no restriction on the families that may be used as the total objects, there is no structural or conceptual analysis of the notion of totality in Girard's work. Even with a restriction that is weak enough to permit the interpretation of type-terms in system F as totality-spaces of the restricted form, the interpretation of totality will not neccessarily be the same. This is because the class of pairs (X, XTO~) is used negatively in Girard's interpretation of totality. A general line of interest to both authors has been the search for a conceptual understanding of totality. The first author has carried out a program for investigating the notion of totality for qualitative domains. In Normann [10] the notion of totality is discussed and axiomatized. The structures in [10] consist of two parts; a partial ordering where all initial segments are	computation;free variables and bound variables;freetype;system f;type variable	Lill Kristiansen;Dag Normann	1994	Arch. Math. Log.	10.1007/BF01270624	data mining;mathematics;management science	AI	-7.79755647305572	15.145329055135106	89414
939e52eb4e100af7b3a26203eafa8ac12ccf7cf3	dual erotetic calculi and the minimal lfi	dual resolution;mathsf clun clun;mathsf cluns cluns;inferential erotetic logic;proof theory of paraconsistent logics;mathsf mbc mbc	An erotetic calculus for a given logic constitutes a sequent-style proof-theoretical formalization of the logic grounded in Inferential Erotetic Logic ($${\mathsf{IEL}}$$IEL). In this paper, a new erotetic calculus for Classical Propositional Logic ($${\mathsf{CPL}}$$CPL), dual with respect to the existing ones, is given. We modify the calculus to obtain complete proof systems for the propositional part of paraconsistent logic $${\mathsf{CLuN}}$$CLuN and its extensions $${\mathsf{CLuNs}}$$CLuNs and $${\mathsf{mbC}}$$mbC. The method is based on dual resolution. Moreover, the resolution rule is non-clausal. According to the authors knowledge, this is the first account of resolution for $${\mathsf{mbC}}$$mbC. Last but not least, as the method is grounded in $${\mathsf{IEL}}$$IEL, it constitutes an important tool for the so-called question-processing.	file inclusion vulnerability	Szymon Chlebowski;Dorota Leszczynska-Jasion	2015	Studia Logica	10.1007/s11225-015-9617-0	discrete mathematics;mathematics;algorithm	Logic	-11.779954673855228	14.1364861946177	89429
78ed572473810c7828a4d7e2f19d5ebd5a58c831	strategic knowledge of the past in quantum cryptography		We propose an epistemic strategy logic with future and past time operators, called SLKP, for Strategy Logic with Knowledge of the Past. With SLKP we can model mutually observed moves/actions in strategic contexts. In a semantic game, agents may completely or partially observe other agents’ moves, their moves may depend on their knowledge of other players’ strategies, and their knowledge may depend on the history of their own or other’s moves. The logic SLKP also allows us to describe temporal properties involving past, future, and composed tenses such as future perfect or counterfactual assertions. We illustrate SLKP by formalising the quantum cryptography protocol BB84, with the purpose to initiate an integrated epistemic and strategic treatment of agent interactions in quantum systems.	alice;bb84;computational complexity theory;counterfactual conditional;counterfactual definiteness;expressive power (computer science);gene ontology term enrichment;image noise;interaction;list of quantum key distribution protocols;model checking;pspace-complete;quantum cryptography;quantum system;sl (complexity);tiling window manager;undecidable problem;unix system laboratories	Christophe Chareton;Hans van Ditmarsch	2017		10.1007/978-3-662-55665-8_24	counterfactual thinking;bb84;operator (computer programming);quantum cryptography;theoretical computer science;quantum;mathematics;future perfect	AI	-17.701525302755098	4.570493494681594	89572
3dd12e40c0617bc339e362226ac4a8a832fe6411	proof normalization modulo	preuve programme;program proof;theorie type;cut elimination;logical programming;functional programming;sequent calculus;programmation logique;rewriting systems;type theory;natural deduction;prueba programa;programmation fonctionnelle;deduction modulo;programacion logica;programacion funcional;systeme reecriture	We define a generic notion of cut that applies to many first-order theories. We prove a generic cut elimination theorem showing that the cut elimination property holds for all theories having a so-called pre-model. As a corollary, we retrieve cut elimination for several axiomatic theories, including Church’s simple type theory. Deduction modulo [11] is a formulation of first-order logic, that gives a formal account of the difference between deduction and computation in mathematical proofs. In deduction modulo a theory is formed with a set of axioms and a congruence, often defined by a set of rewrite rules. For instance, when defining arithmetic in deduction modulo, we can either take the usual axiom ∀x x+0 = x or orient this axiom as a rewrite rule x + 0 → x, preserving provability. In the same way, when defining the theory of integral domains, we can chose to take the axiom ∀x ∀y (x × y = 0 ⇔ (x = 0 ∨ y = 0)) or to orient this axiom as a rewrite rule (x × y = 0) → (x = 0 ∨ y = 0). Axioms and rewrite rules play different roles in proofs and the structure of proofs is deeply affected when axioms are oriented as rewrite rules. In particular, the cut elimination property may hold for one formulation, but not for the other. Cut elimination is a much more powerful result (and hence more difficult to prove) when axioms are oriented as rewrite rules. In particular, for axiom free theories, cut elimination implies consistency as well as properties such as disjunction property and the witness property in the intuitionistic case. An important point is that deduction modulo permits to define a uniform notion of cut for all first-order theories that can be presented by rewrite rules only. This notion of cut subsumes that of Church’s simple type theory (also called higher-order logic) since simple type theory can be defined as an axiom free first-order theory modulo. More generally, it subsumes the notion of cut introduced by Prawitz [27] and used for various theories, in particular for set theory [6, 18, 1, 7, 12] (see [10] for a discussion on this point). This paper is an attempt to characterize the rewrite systems which define theories in deduction modulo for which cut elimination holds. The first part of the paper presents counter-examples to cut-elimination showing that termination and confluence are not sufficient conditions for the rewrite system to ensure cut elimination for the corresponding theory modulo. The second result is a generic cut elimination theorem, along the lines of Tait and Girard, showing that the cut elimination property holds, provided the congruence has a so-called pre-model. As a corollary, we obtain cut elimination for many theories, in particular for theories presented by a quantifier free confluent and terminating rewrite system,	computation;confluence;congruence of squares;cut (graph theory);first-order logic;first-order predicate;modulo operation;natural deduction;newman's lemma;quantifier (logic);rewrite (programming);rewriting;set theory;the witness;type theory	Gilles Dowek;Benjamin Werner	1998	J. Symb. Log.	10.1007/3-540-48167-2_5	discrete mathematics;computer science;mathematics;programming language;sequent calculus;functional programming;natural deduction;type theory;algorithm	Logic	-11.576070093711108	16.638668687310137	89729
524966a474d0cd3a23ba357a8ec46b3c9d728d5c	free constructions and coproducts of d-frames		A general theory of presentations for d-frames does not yet exist. We review the difficulties and give sufficient conditions for when they can be overcome. As an application we prove that the category of d-frames is closed under coproducts. 1998 ACM Subject Classification F.3.1 Logics of programs, F.3.2 Semantics of Programming Languages	semantics (computer science)	Tomás Jakl;Achim Jung	2017		10.4230/LIPIcs.CALCO.2017.14	discrete mathematics;pure mathematics;mathematics	Logic	-8.785071722711972	12.55725458168361	89937
446f252e9fa38604f3bf001924e28fc090e1a96d	normative systems: the meeting point between jurisprudence and information technology?a position paper	normative system;information technology	It is argued that there are many concepts and met hods in common between policy systems used in Information Technolo gy and Jurisprudence, i.e. legal theory. These concepts are found in the resea ch area of ‘normative systems’ which encompasses them and provides a framework for unifying research. It is further argued that advantages can be accrued to bo th research areas by favoring interchanges of methods and principles in this unif yi g framework. A distinction is made between norms in rule style and norms in requi ments style. Issues of completeness, consistency and conflicts are conside red. Concepts that are useful in this research area include defeasible logic and ont ol gies. Useful tools are theorem provers and model checkers. 1. Background and Motivation This paper presents the view that legal methodology , Jurisprudence, has many issues and concepts in common with software methodology. T here is much that can be learned in both fields by a process of conceptual o smosis, or even convergence. This process will be encouraged by the fact that the beh avior of computational agents is increasingly acquiring legal significance. There ar e several areas in which this is happening: e-business (including e-contracts and se curity) and IT governance. In these areas, it might even become desirable that laws can be formally translated into computer programs, or that the correspondence of an IT policy with law can be formally audited. For example, a law on privacy may h ve to be implemented in a set of policies in a language such as XACML [17]. This set of policies may have to be checked for conformance with the law. As the law ch anges, the XACML policies may have to be changed as well. A force acting in the converse direction is provide d by the fact that computer networks are becoming like social systems, with the ir own internal norms [19]. At the same time, just as in IT software to help cr eate systems of policies is being developed, in the area of jurisprudence legislative drafting systems are being developed [12]. XML is commonly used for syntactic support of both kinds of systems, however for now formal semantics and semantic validation ar e not primary goals in either field. Surely, developing the necessary formal models is a long-range research task in both areas. Motivated by these developments, this paper hinges on the view that information systems policies and legal systems have much in com mon, in fact are special cases of normative systems. We identify a rule style and a requirement style in both areas. Issues of completeness and consistency are discusse d in r lation to these two styles. Several concepts and tools of common interest are b riefly discussed. It is important to note that we are not claiming to address all aspects of the systems we are discussing. Legal systems are extremely comp lex and have aspects that are quite difficult to formalize in any logic or any formal t heory, since they have their roots in sociology, history, psychology, ethics and politics [9, 15]. Information systems policies are of many different types for many different appl ications, but they are all formalized because they are executed by machines. In order to identify similarities, we will schematize and simplify. However we claim and we sh all show by examples, that there are common concepts for expressing and analyzing so me aspects of these systems. From a Jurisprudence point of view, we are taking a formalistic approach by which laws are seen as having their own self-contained me aning as pure logical statements, outside of consideration of political, sociological , or moral nature. We recognize of course that these considerations exist and open the way to other types of discussion. 2. Normative systems In 1993, Jones and Sergot wrote: [8] “The general position which we here develop and ill ustrate is that---at the appropriate level of abstraction---law, computer systems, and m any other kinds of organisational structure may be viewed as instances of normative systems. We use the term to refer to any set of interacting agents whose behaviour can usefully be regarded as governed by norms. Norms prescribe how the agents ought to behave, and speci fy how they are permitted to behave and what their rights are. Agents may be human individu als or collections of human individuals, or computer systems or collections of computer syst em . Normative systems include systems of law, abstract models of computer systems, and hy brid systems consisting of human and computer agents in interaction.” We subscribe to this view, with two exceptions. Fir st of all, are normative systems sets of interacting agents (legal institutions), or sets of norms? This question has been extensively debated in philosophy of law and theref ore it should be avoided if possible. In this paper, we are mostly interested in sets of norms. Second, this view characterizes norms in terms of the deontic concepts of obligatio n (‘ ught to’) and permission. This is a very common view, endorsed by the best authori ties [9]. However in Section 3 we will see that normative systems can exist without d eontic concepts. There are few attempts to define formally norms and normative systems. Most of these attempts take a limitative view, based on spe cific formalisms. A much-cited book by Alchourron and Bulygin [1], which claims applica tion to social sciences only, loosely defines norms as statements that relate cas s to solutions. As in Jones and Sergot, the solutions are expressed in deontic form s. We shall take the broad view that normative systems are man-made systems of logical statements, the norms, which relate facts t o intended consequences. Their intention is to regulate the functioning of sets of interacting agents. Although they may be expressed in deontic terms, the norms can be tra nslated into fact-consequence form. In this sense, normative systems are similar to rul e-based systems. We shall see that the systems in this very general class have some common characteristics that are worth comparing and discussing. The similarities thus rec ognized can lead to the use of common principles and methods across different type s of normative systems. Examples of policy systems encountered in informati on echnology, and to which we will make further reference below, are: • Firewalls and routers • Telecommunications features, call control • Information access control systems (e.g. language X ACML) • Security models (Bell-LaPadula, Chinese Wall, RBAC... ) • Web services orchestration and choreography (e.g. l an uage BPEL) • E-commerce policies and contracts, service-level a greements 3. Norms that are simple rules As biologists can learn much by studying elementary life forms, we can learn much by studying elementary normative forms. The Hammurabi code, written about 3,700 years ago, contains norms such as this: “If any one steals cattle or sheep, or an ass, or a pig or a goat, if it belong to a god or to the court, the thief shall pay thirty fold; if they belonged to a freed man of the king he shall pay tenfold; if the thief has nothing with which to pay he shall be put to death.” This can be recognized as written in the well-known ECA: <event, condition, action> format which is widely used in data bases, agent systems, etc. [18]: Event = any one steals cattle or sheep, or an ass, or a pig or a goat Condition = if it belong to a god or to the court Action = the thief shall pay thirty fold The Hammurabi code is an early example of coherence in legislative style, since it consists of about 300 articles which are almost all written in <event, condition, action> format, another witness of the greatness of the Bab ylonian culture. On the IT side, let us consider firewalls: DROP all -nuisance.com anywhere This is a rule in a Linux router to drop packets having any (“all”) protocol that come from node “nuisance.com” and go anywhere. This rule is again in the format <event, condition, action>, although the condition s empty (conditions compare the incoming events with facts that are known in the co ntext, such as the time of occurrence, or the concepts of ‘god’ or ‘court’ in the previous example, which presumably are known in an implicit contextual onto logy). These examples show that, in spite of prevalent opi ni n to the contrary, normative systems can exist without deontic concepts. In fact , we conjecture that all normative systems can be expressed as sets of rules in the EC A format, although this representation may not be finite. 4. Norms in the deontic context A commonly held view of norms interprets them in a deontic context, for which deontic logic is a frequently used formalization [1 4]. Deontic logic is a type of modal logic that uses modalities such as permitted and obligatory, which are mutually related by relationships such as: obligatory A = not permitted not A = forbidden not A In this interpretation, the Hammurabi norm above cr ates an obligation to pay thirty fold; the firewall norm creates an obligation to dr p all nuisance.com packets. An early example of legal system that is explicitly based on deontic concepts is Moses’ law: Thou shalt not steal In other words, it is forbidden to steal . In this normative style, we gain abstraction, since the brief statement just given covers a dozen articles of the Hammurabi code, but we lose specificity: what happens if one steals? Ho w is this norm enforced? In software engineering terminology, one could thin k of a compilation of the Moses Code into Hammurabi terms, or of a reverse engineering of the Hammurabi code into Moses terms. In IT one encounters deontic statements as part of documentation, or in the statement of requirements. For example, a policy in a hospital could be: The accounting department shall not have access to the parts of a patient’s record that deal with health history This requirement will be translated in terms of rul es, e.g. if an employee of the accounting department attempts	amd core math library;augmented reality;automated theorem proving;bell–lapadula model;business process execution language;call of duty: black ops;chinese wall;compiler;computer program;conformance testing;control system;database;defeasible logic;deontic logic;documentation;e-commerce payment system;electronic business;event condition action;exception handling;firewall (computing);fitts's law;information access;information system;interaction;jones calculus;lex (software);linux;list of code lyoko episodes;modal logic;model checking;moses;parallels desktop for mac;relevance;requirement;reverse engineering;role-based access control;router (computing);semantics (computer science);sensitivity and specificity;social system;software engineering;vergence;whole earth 'lectronic link;xacml;xml	Luigi Logrippo	2007			computer science;engineering;artificial intelligence;management science;management;algorithm	SE	-10.532693038366066	6.131424741602534	89954
a1d9ea0bc7f56196429a62bbaad0c2e822a105b5	a proof-theoretical view of collective rationality	judgment aggregation;collective reasoning;collective rationality;linear logic	The impossibility results in judgement aggregation show a clash between fair aggregation procedures and rational collective outcomes. In this paper, we are interested in analysing the notion of rational outcome by proposing a proof-theoretical understanding of collective rationality. In particular, we use the analysis of proofs and inferences provided by linear logic in order to define a fine-grained notion of group reasoning that allows for studying collective rationality with respect to a number of logics. We analyse the well-known paradoxes in judgement aggregation and we pinpoint the reasoning steps that trigger the inconsistencies. Moreover, we extend the map of possibility and impossibility results in judgement aggregation by discussing the case of substructural logics. In particular, we show that there exist fragments of linear logic for which general possibility results can be obtained.	collective intelligence;existential quantification;linear logic;rationality;whole earth 'lectronic link	Daniele Porello	2013			linear logic;ecological rationality;computer science;mathematics	Logic	-15.859912006044636	4.869227623068797	90040
b50a38f5f7504590c597dc0c4e430815be67cae9	semantic vector combinations and the synoptic gospels	linear algebra;vector space model;quantum logic;quantum mechanics;information processing	This paper applies some recent methods involving semantic vectors and their combination operations to some very traditional questions, including the discovery of similarities and differences between the four Gospels, relationships between individuals, and the identification of geopolitical regions and leaders in the ancient world. In the process, we employ several methods from linear algebra and vector space models, some of which are of particular importance in quantum mechanics and quantum logic. Our conclusions are in general positive: the vector methods do a good job of capturing well-known facts about the Bible, its authors, and relationships between people and places mentioned in the Bible. On the more specific topic of quantum as opposed to other approaches, our conclusions are more mixed: on the whole, we do not find evidence for preferring vector methods that are directly associated with quantum mechanics over vector methods developed independently of quantum mechanics. We suggest that this argues for synthesis rather than division between classical and quantum models for information processing.	entity;information processing;information retrieval;linear algebra;machine learning;mathematical model;quantum logic;quantum mechanics	Dominic Widdows;Trevor Cohen	2009		10.1007/978-3-642-00834-4_21	minority interpretations of quantum mechanics;quantum information science;theoretical computer science;pure mathematics;mathematics;categorical quantum mechanics	PL	-9.094587373848217	5.223438385131822	90080
08b5a64722be63078ac3d45f92cbabf7ab9f7721	extensionalizing intensional second-order logic	plural logic;abstraction;second order logic;modal set theory	Neo-Fregean approaches to set theory, following Frege, have it that sets are the extensions of concepts, where concepts are the values of second-order variables. e idea is that, given a second-order entity X, there may be an object eX, which is the extension of X. Other writers have also claimed a similar relationship between second-order logic and set theory, where sets arise from pluralities. is paper considers two interpretations of second-order logic—as being either extensional or intensional—and whether either is more appropriate for this approach to the foundations of set theory. Although there seems to be a case for the extensional interpretation resulting from modal considerations, I show how there is no obstacle to starting with an intensional second order logic. I do so by showing how the e operator can have the eect of ‘extensionalising’ intensional second-order entities. It is oen thought that there is a close connection between sets and the denotation of the second-order variables under various interpretations of second-order logic. Even if it is denied that second-order entities just are sets (as, for example, is famously claimed by Quine, 1970), it might be thought that sets ‘arise’ from second-order entities in some way. So, for example, Frege’s (inconsistent) set theory had it that sets are extensions of concepts (which are what his second-order variables range over). More recently, attempts to extend the neo-Fregean programme of Bob Hale and CrispinWright (Hale andWright, 2001a) to set theory have followed suit to some extent, albeit with restrictions on which concepts form sets (e.g. Boolos, 1989; Hale, 2000; Shapiro, 2003). In addition, a number of articles which are less explicitly Fregean in motivation have claimed that sets arise from the denotation of second-order variables, where second-order quantication is interpreted as plural quantication (e.g. Burgess, 2004; Linnebo, 2010). Call such an approach to set theory the abstractionist approach1. e idea is that, for a second-order entity X, there may be (though will not always be, on pain of contradiction) an object eX, which is the set of X.2 Central to an abstractionist approach to set theory 1 is is a somewhat wider use of the term ‘abstractionist’ than is common, where it is used to refer to an explicitly Fregean and neo-Fregean approach to mathematics in general. 2 is way of putting things does not do justice to the plural interpretation of second-order logic, nor, arguably, to the interpretation of second-order logic over concepts. Under the plural interpretation, it would not be right to call the denotation of X a single entity. Instead, for plural quantiers, this should read as ‘for any objects xx, there may be a set exx, which is the set of them.’ And it may not be correct to refer to the values of second-order variables as entities on the concept reading, since	intensional logic	Jonathan Payne	2015	Notre Dame Journal of Formal Logic	10.1215/00294527-2835092	predicate logic;dynamic logic;s5;normal modal logic;discrete mathematics;linear temporal logic;description logic;higher-order logic;epistemology;many-valued logic;intermediate logic;predicate functor logic;mathematics;abstraction;intensional logic;accessibility relation;substructural logic;multimodal logic;second-order logic;algorithm;philosophy of logic	Logic	-12.232931700147505	5.886072065206503	90167
364ec739ddbd92c0920c3d1b7975caca1b90103a	recursion schemes and the wmso+u logic		We study the w eak MSO logic extended by the unbounding quantifier (WMSO+U), expressing the fact that there exist arbitrarily large finite sets satisfying a given property. We prove that it is decidable whether the tree generated by a given higher-order recursion scheme satisfies a given sentence of WMSO+U. 2012 ACM Subject Classification Theory of computation → Rewrite systems, Theory of computation → Logic and verification	existential quantification;quantifier (logic);recursion;theory of computation	Pawel Parys	2018		10.4230/LIPIcs.STACS.2018.53	discrete mathematics;combinatorics;recursion;computer science	Logic	-9.190717494682074	16.546104327464704	90195
fac4fb1fbf9c615fecb7eb7b2c34b783a581171f	incorporating relevance in epistemic states in belief revision		We present an account of relevance in belief revision where, intuitively, one wants to only consider the relevant part of an agent’s epistemic state in a revision. We assume that relevance is a domain-specific notion, and that (ir)relevance assertions are given as part of the agent’s epistemic state. Such assertions apply in a given context, and are of the form “in the case that formula σ holds, the Y part of the agent’s epistemic state is independent of the rest of the epistemic state”, where Y is part of the signature of the language. Two approaches are given, one in which (in semantic terms) conditions are placed on a faithful ranking on possible worlds to enforce the (ir)relevance assertions, and a second in which the possible worlds characterising the agent’s beliefs may be modified in a revision. These approaches are shown to yield the same resulting belief set. Corresponding postulates and a representation result are given. The overall approach is compared to that of Parikh’s for language splitting as well as with multivalued dependencies in relational databases.	belief revision;domain-specific language;multivalued dependency;possible world;rational agent;relational database;relevance	James P. Delgrande;Pavlos Peppas	2018				AI	-17.151596223665475	7.589854353060198	90232
94ba0931b614edbbbf69dd0cc1c721ad42617bc1	implementing pstable		We present an implementation of pstable model semantics. Our implementation uses the well known tools: MiniSat and Lparse.	answer set programming;international conference on logic programming;journal of logic and computation;michael gelfond;stable model semantics;vladimir lifschitz;whole earth 'lectronic link	Alejandra López	2006				AI	-15.769202457442892	13.920446278872433	90285
994cddf8fcc2f232faa1818f580e1c3f2b6fe0a5	theorem proving and model building with the calculus ke	formal specification;theorem proving;theorem prover;first order;model building;classical logic	A Prolog implementation of a new theorem-prover for rst-order classical logic is described. The prover is based on the calculus KE and the rules used for analysing quantiiers in free variable semantic tableaux. A formal speciication of the rules used in the implementation is described, for which soundness and completeness is straightforwardly veriied. The prover has been tested on the rst 47 problems of the Pelletier set, and its performance compared with a state of the art semantic tableaux theorem-prover. It has also been applied to model building in a prototype system for logical animation, a technique for symbolic execution which can be used for validation. The interest of these experiments is that they demonstrate the value of certain`characteristics' of the KE calculus, such as the signiicant space-saving in theorem-proving, the mutual inconsistency of open branches in KE trees, and the relation of the KE rules tòtraditional' forms of reasoning.	automated theorem proving;experiment;free variables and bound variables;knowledge engineering;method of analytic tableaux;prolog;prototype;symbolic execution	Jeremy V. Pitt;Jim Cunningham	1996	Logic Journal of the IGPL	10.1093/jigpal/4.1.129	discrete mathematics;theorem;computer science;pure mathematics;first-order logic;fundamental theorem;mathematics;automated theorem proving;fixed-point theorem;compactness theorem;programming language;skolem normal form;second-order logic;gödel's completeness theorem;model theory;gap theorem	SE	-15.349154107414904	16.694558369918457	90289
2c760562bc6172adaac3d18f430396033e6c2739	herbrand's fundamental theorem: the historical facts and their streamlining		Using Heijenoort’s unpublished generalized rules of quantification, we discuss the proof of Herbrand’s Fundamental Theorem in the form of Heijenoort’s correction of Herbrand’s “False Lemma” and present a didactic example. Although we are mainly concerned with the inner structure of Herbrand’s Fundamental Theorem and the questions of its quality and its depth, we also discuss the outer questions of its historical context and why Bernays called it “the central theorem of predicate logic” and considered the form of its expression to be “concise and felicitous”.		Claus-Peter Wirth	2014	CoRR		herbrand's theorem;ground expression;pure mathematics;fundamental theorem;mathematics;automated theorem proving;algorithm	Theory	-9.663028409023129	11.512586196467653	90451
d527b8a720eb1bdca1d64a3e37ba3507bbfe427a	progressive rules: a method for representing and using real-time knowledge	propagation of confidence;empirical study;coefficient of relevance;real time knowledge representation;quantum value;real time;logic;performance;horn clauses;progressive rules;inference mechanisms;variable precision logic;real time reasoning;performance real time knowledge representation progressive rules time limited tasks first order horn clauses coefficient of relevance quantum value propagation of confidence variable precision logic inference;satisfiability;acoustic testing;mechanical engineering;first order;resource limited reasoning;time limited tasks;knowledge representation logic artificial intelligence computer science vehicle crash testing mechanical engineering production acoustic testing;vehicle crash testing;spreading activation;production;artificial intelligence;search control;first order horn clauses;progressive inference;computer science;knowledge representation;inference;inference mechanisms knowledge representation real time systems horn clauses;real time systems	This paper introduces progressive rules, a new approach to knowledge representation for time-limited tasks. Progressive rules are first-order Horn clauses augmented with a coefficient of relevance for each antecedent, and a quantum value used to control propagation of confidence. They are a generalization of Michalski and Winston's (1986) variable precision logic, and present several improvements relative to it. Using progressive rules, inference is controlled by recursively spreading activation from a goal to its subgoals, according to their relevance, and attempting first to satisfy the goals that have accumulated the most activation. When answering a question, this allows provisional answers to be supplied with growing confidence before inference is complete, guaranteeing an optimal use of time given the information available. Theoretical and empirical studies of the new approach's performance show promising results.	real-time locating system	Pedro M. Domingos;Ernesto M. Morgado	1995		10.1109/TAI.1995.479835	knowledge representation and reasoning;performance;computer science;artificial intelligence;machine learning;spreading activation;programming language;logic;algorithm;satisfiability	AI	-18.990687345199674	5.366626484165278	90578
321ee483209c9530de72bd566619f5eedf051a43	about the temporal decrease of sets	linear time temporal logic;temporal logic;logic concrete computer science;complete axiomatization;computational complexity;temporal logic computational complexity decidability;computational complexity temporal decrease of sets general framework propositional linear time temporal logic logical language axiomatization decidability;decidability	This paper is about a simple general framework for modelling decrease. We provide an extension of propositional . linear timetemporal logic with operators expressing ‘nexttime’ and ‘henceforth’, by a modality that quantQies over the points of some set X . This set changes in the course of time; actually, X is assumed to shrink little by little. We develop an appropriate logical language, give a sound and complete axiomatization of the set of validities, and prove decidability of this set. Moreovel; the computational complexity of the logic is determined.	axiomatic system;computational complexity theory;modality (human–computer interaction)	Bernhard Heinemann	2001		10.1109/TIME.2001.930722	modal logic;dynamic logic;zeroth-order logic;decidability;modal μ-calculus;discrete mathematics;linear temporal logic;description logic;many-valued logic;interval temporal logic;computation tree logic;intermediate logic;mathematics;multimodal logic;second-order logic;algorithm;descriptive complexity theory;temporal logic of actions;autoepistemic logic	AI	-14.973838926086628	11.973277173304997	90585
129a6a40d286009dd2b9f5090ea0ce3d24dcc493	bidomains and full abstraction for countable nondeterminism	langage fonctionnel;developpement logiciel;modelizacion;no determinismo;continuous function;random number generator;semantica denotacional;generacion lenguaje;random number generation;monotone function;lenguaje funcional;abstraction;fonction continue;abstraccion;denotational semantic;modelisation;induccion;category theory;non determinism;first order;full abstraction;induction;funcion continua;non determinisme;desarrollo logicial;theorie categorie;generation nombre aleatoire;denotational semantics;software development;generation langage;teoria categoria;functional language;modeling;generacion numero aleatorio;semantique denotationnelle;language generation	We describe a denotational semantics for a sequential functional language with random number generation over a countably infinite set (the natural numbers), and prove that it is fully abstract with respect to may-and-must testing. Our model is based on biordered sets similar to Berry’s bidomains, and stable, monotone functions. However, (as in prior models of unbounded non-determinism) these functions may not be continuous. Working in a biordered setting allows us to exploit the different properties of both extensional and stable orders to construct a Cartesian closed category of sequential, discontinuous functions, with least and greatest fixpoints having strong enough properties to prove computational adequacy. We establish full abstraction of the semantics by showing that it contains a simple, first-order “universal type-object” within which all types may be embedded using functions defined by (countable) ordinal induction.	cartesian closed category;concurrency (computer science);continuation;denotational semantics;embedded system;first-order predicate;functional programming;game semantics;imperative programming;inductive reasoning;lambda lifting;linear logic;monad (functional programming);nondeterministic algorithm;ordinal data;plotkin bound;power domains;programming language;random number generation;recursion;scott continuity;monotone	James Laird	2006		10.1007/11690634_24	continuous function;discrete mathematics;systems modeling;monotonic function;random number generation;computer science;software development;first-order logic;mathematics;abstraction;programming language;functional programming;denotational semantics;algorithm;category theory	Logic	-12.11808181348352	18.008492915088087	90822
c4a0317817ec7d0a8d9ed468e1b6eb72580540d7	dataloga: array manipulations in a deductive database language	deductive databases	In this paper the problem of extending the logic database language Datalog with primitives to support array definitions and manipulations is addressed. The syntax and the semantics of this language, called Datulo$, are given by showing that model theoretic properties of ordinary Datalog extend to DatalogA. DatalogA fixpoint semantics and its efficient implementation are also studied and presented. Sufficient conditions assuring program evaluation convergence when manipulating real-valued arrays are finally discussed.	datalog;deductive database;fixed point (mathematics);query language;theory	Sergio Greco;Luigi Palopoli;Eugenio Spadafora	1995			natural language processing;database theory;computer science;programming language	DB	-15.589036050179493	17.74460789386494	90938
296b53fb9b70ea626f23426a39d2062b37390d2c	"""a critique of the paper """"classification in medical diagnostics: on some limitations of q-analysis"""" by v. pinkava"""		"""The limitations of Q-analysis in the field of psychology suggested in Pinkava's paper seem to boil down to the following: (A) an innate inability to consider """"negative features""""; (B) that a Q-analysis is based on numbers of shared features as opposed to the features themselves; (C) that a definition of """"classification"""" stated in the language of algebraic logic eludes Q-analysis; and (D) an example of Q-analysis failing to discover a """"hidden"""" classification. In this reply a review of the concept of anti-verwx answers (A), the distinction between the procedure """"Q-analysis"""" and the """"Methodology of Q-analysis"""" illuminates (B), a construction using anti-vertices answers (C), while a more relevant Q-analysis answers (D). Insofar as Pinkava's criticisms are directed against the computer alogrithm called """"Q-analysis"""", it is correct to say that a blind application of it alone will not automatically give useful q-connected components for the purpose of classification. To exploit the proven use of Q-analysis in set definition and classification it is necessary to appeal to the wider """"Methodology of Q-analysis"""". The latter is concerned with all the kinematics associated with a topological representation of a relation (between finite sets), whilst the former is a technique for finding some of the global properties of such a representation."""	algorithm;conceptualization (information science);connected component (graph theory);failure;linear algebra;q-analysis;read-only memory;while	J. H. Johnson	1981	International Journal of Man-Machine Studies	10.1016/S0020-7373(81)80006-5	computer science;artificial intelligence;data mining;algorithm	Vision	-12.702910197163744	4.527111970970519	90982
834cd1faf0b3b6f2a0287c82918985636c48e8ae	multi-agent non-linear temporal logic with embodied agent describing uncertainty		We study non-linear temporal multi-agent logicT Kn with embodied agent. Our approach models interaction of the agents and various aspects for computation of uncertainty in multi-agent environment. We construct algorithms for verification satisfiability and truth statements in the logic T Kn . Found computational algorithms are based at refutability of rules in reduced from at special finite frames of effectively bounded size. We show that our chosen framework is rather flexible and it allows to express various approaches to uncertainty and formalizing meaning of the embodied agent.	algorithm;complexity;computation;embedded system;embodied agent;fuzzy logic;intelligent agent;linear temporal logic;modal logic;modality (human–computer interaction);multi-agent system;nonlinear system;openap	Vladimir V. Rybakov	2014		10.1007/978-3-319-07650-8_10	computer science;artificial intelligence;machine learning;algorithm	AI	-18.146244074802528	5.331609793037003	90996
85a6ec6e60a005e2991103662fe8874d49b4fb7d	choosing a physical model: why symmetries?	physical model	"""One of the main applications of Kolmogorov complexity ideas to data processing is via the Minimum Description Length principle (see, e.g., 1, 11, 13] and references therein). According to this principle, if several diierent models (or theories) are consistent with the same observations, then we should choose a model with the shortest description, i.e., crudely speaking, a model with the smallest value of Kolmogorov complexity. This principle is in perfect agreement with the Occam principle (it actually formalizes Occam's principle), and it has been successfully applied to various problems. In particular, it has been successfully used in physics, where Occam's principle originated and where it has been successfully used. In modern fundamental physics, however, symmetry groups play such an important role that often, physicists choose not the simplest model, but the model which corresponds to the simplest symmetry group (see, e.g., 2{9], 12, 14]). At rst glance, this restriction to symmetry-deened models seem to prevent us from considering possible simple non-group models, and thus, make this symmetry-group version of Occam principle worse than the unrestricted one. However, the success of this direction in theoretical physics seems to indicate that this restriction does not bring any disadvantage at all. Our analysis shows that this restriction is indeed non-essential. To formalize the physicists' idea, we x a universal programming language (\computer"""") f, and deene a symmetry as a program from this language which transforms strings (e.g., binary strings) into strings and which is a bijection (1-1 and onto). By a complexity of a symmetry s, we mean the length len(s) of this program. We say that a symmetry s deenes a string x uniquely if s(x) = x and s(y) 6 = y for all y 6 = x. Now, for every string x, we can deene its group-symmetric complexity C sym (x) as the smallest complexity of a symmetry which deenes x uniquely. It turns out that this new complexity is asymptotically equivalent to the usual Kolmogorov complexity C(x) = C f (x): Proposition. jC(x) ? C sym (x)j = O(1)."""	emoticon;kolmogorov complexity;minimum description length;occam's razor;programming language;theory;occam	Raul Trejo;Vladik Kreinovich;Luc Longpré	2000	Bulletin of the EATCS		physical model;computer science	Theory	-9.653600081097121	7.788465637107	91209
475c903c34d6dd1dee3f480e1e6fbcc3b7a6ff14	preserving mappings in fuzzy predicate logics	articulo;fuzzy predicate logics method of diagrams model theory reduced structures	In this paper we develop the method of diagrams for fuzzy predicate logics and give a characterization of different kinds of preserving mappings in terms of diagrams. Our work is a contribution to the modeltheoretic study of equality-free fuzzy predicate logics. We present a reduced semantics and we prove a completeness theorem of the logics with respect to this semantics. The main concepts being studied are the Leibniz congruence and the structure-preserving relation. On the one hand, the Leibniz congruence of a model identifies the elements that are indistinguishable using equality-free atomic formulas and parameters from the model. A reduced structure is the quotient of a model modulo this congruence. On the other hand, the structure-preserving relation between two structures plays the same role that the isomorphism relation plays in classical predicate languages with equality. Source URL: https://www.iiia.csic.es/en/node/53946 Links [1] https://www.iiia.csic.es/en/staff/pilar-dellunde [2] https://www.iiia.csic.es/en/bibliography?f[keyword]=670 [3] https://www.iiia.csic.es/en/bibliography?f[keyword]=671 [4] https://www.iiia.csic.es/en/bibliography?f[keyword]=762 [5] https://www.iiia.csic.es/en/bibliography?f[keyword]=672 [6] https://www.iiia.csic.es/en/bibliography?f[keyword]=763	congruence of squares;diagram;modulo operation	Pilar Dellunde	2012	J. Log. Comput.	10.1093/logcom/exr019	t-norm fuzzy logics;discrete mathematics;computer science;mathematics;predicate;algorithm	Logic	-11.490723214108343	14.872413274377275	91329
4a0e0c976ac67498a325a03ae70f09491084c307	an experiment in programming with full first-order logic	first order logic		first-order logic;first-order predicate	Zerksis D. Umrigar;Vijay Pitchumani	1985			logic optimization;dynamic logic (modal logic);multimodal logic;computational logic;algorithm;logic family;sequential logic;horn clause;logic programming;computer science	Logic	-14.653270866796447	13.591423652918484	91364
547711c938458390589d182a29522b26aefdd603	clausal logic and logic programming in algebraic domains	domain theory;logique clausale;aplicacion;logique propositionnelle;intelligence artificielle;logical programming;theoreme hofmann mislove;scott topology;fixed point;conjunto parcialmento ordenado;artificial intelligent;partially ordered set;clausale logic;programmation logique;propositional logic;theorie domaine;ensemble partiellement ordonne;artificial intelligence;inteligencia artificial;logic programs;logica proposicional;application;theoretical foundation;topologie scott;programacion logica;hofmann mislove theorem	We introduce a domain-theoretic foundation for disjunctive logic programming. This foundation is built on clausal logic, a representation of the Smyth powerdomain of any coherent algebraic dcpo. We establish the completeness of a resolution rule for inference in such a clausal logic; we introduce a natural declarative semantics and a fixed-point semantics for disjunctive logic programs, and prove their equivalence; finally, we apply our results to give both a syntax and semantics for default logic in any coherent algebraic dcpo.	benchmark (computing);coherence (physics);default logic;disjunctive normal form;domain theory;inference engine;linear algebra;logic programming;power domains;programming language;propositional calculus;turing completeness;type theory;universal instantiation	William C. Rounds;Guo-Qiang Zhang	2001	Inf. Comput.	10.1006/inco.2001.3073	partially ordered set;predicate logic;dynamic logic;classical logic;description logic;higher-order logic;horn clause;stable model semantics;algebraic sentence;many-valued logic;computer science;intermediate logic;artificial intelligence;predicate functor logic;domain theory;computational logic;mathematics;fixed point;signature;propositional calculus;well-founded semantics;logic programming;logic;substructural logic;multimodal logic;algorithm;philosophy of logic;algebra;autoepistemic logic	AI	-15.215708625196553	14.360703169016418	91497
599e32a580137941779e7ad00404badd23033d4f	axiom pinpointing in lightweight description logics via horn-sat encoding and conflict analysis	boolean constraint propagation;automated reasoning;description logic;sat solver;empirical evaluation;qa075 electronic computers computer science	The recent quest for tractable logic-based languages arising from the eld of bio-medical ontologies has raised a lot of attention on lightweight (i.e. less expressive but tractable) description logics, like EL and its family. To this extent, automated reasoning techniques in these logics have been developed for computing not only concept subsumptions, but also to pinpoint the set of axioms causing each subsumption. In this paper we build on previous work from the literature and we propose and investigate a simple and novel approach for axiom pinpointing for the logic EL. The idea is to encode the classi cation of an ontology into a Horn propositional formula, and to exploit the power of Boolean Constraint Propagation and Con ict Analysis from modern SAT solvers to compute concept subsumptions and to perform axiom pinpointing. A preliminary empirical evaluation com rms the potential of the approach. 1 Motivations and goals In contrast to the trend of the last two decades [3], in which the research in description logic has focused on investigating increasingly expressive logics, the recent quest for tractable logic-based languages arising from the eld of biomedical ontologies has attracted a lot of attention on lightweight (i.e. less expressive but tractable) description logics, like EL and its family [1,4,6,12,16,2]. In particular, the logic EL+ [4,6,7] extends EL and is of particular relevance due to its algorithmic properties and due to its capability of expressing several important and widely-used bio-medical ontologies, such as Snomed-CT [24,23,26], NCI [22], GeneOntology [8] and the majority of Galen [17]. In fact in EL+ not only standard logic problems such as concept subsumption (e.g., is Amputation-of-Finger a subconcept of Amputation-of-Arm in the ontology Snomed-CT? [7]), but also more sophisticated logic problems such as axiom pinpointing are tractable. (E.g., Find a minimal set of axioms in Snomed-CT which are responsible of the fact that Amputation-of-Finger is a subconcept of Amputation-of-Arm? [7]) Importantly, the problem of axiom pinpointing in EL+ is of great interest for debugging complex bio-medical ontologies (see, e.g., [7]). To this extent, the problems of concept subsumption and axiom pinpointing in EL+ have been thoroughly investigated, and e cient algorithms for these two functionalities have been implemented and tested with success on large ontologies, including Snomed-CT (see e.g. [4,6,7]). The description logic community has spent a considerable e ort in the attempt of extending EL as much as possible, de ning a maximal subset of logical constructors expressive enough to cover the needs of the practical applications above mentioned, but whose inference problems remain tractable. Beside the logic EL+ [4], on which we focus in this work, many other extension of EL have been studied [1,2]. In this paper we build on previous work from the literature of EL+ reasoning [4,6,7] and of SAT and SMT [15,27,11,13,18], and propose a simple and novel approach for (concept subsumption and) axiom pinpointing in EL+ and hence in its sub-logics EL and ELH. In a nutshell, the idea is to generate polynomialsize Horn propositional formulas representing part or all the deduction steps performed by the classi cation algorithms of [4,6], and to manipulate them by exploiting the functionalities of modern con ict-driven SAT/SMT solvers like Boolean Contraint Propagation (BCP) [15], con ict analysis under assumptions [15,11], and all-SMT [13]. In particular, we show that from an ontology T it is possible to generate in polynomial time Horn propositional formulas φT , φ T and φ T (po) of increasing size s.t., for every pair of primitive concepts Ci, Di: (i) concept subsumption is performed by one run of BCP on φT or φ T ; (ii) one non-minimal set of axioms (nMinA) responsible for the derivation of Ci vT Di is computed by one run of BCP and con ict analysis on φ T or φ T (po); (iii) one minimal such set (MinA) is computed by iterating process (ii) on φ T (po) for an amount of times up-to-linear in the size of the rst nMinA found; (iv) the same task of (iii) can also be computed by iteratively applying process (ii) on an up-to-linear sequence of increasingly-smaller formulas φ T ,φone S1 ,...,φone Sk ; (v) all MinAs can be enumerated by means of all-SMT techniques on φ T (po), using step (iii) as a subroutine. It is worth noticing that (i) and (ii) are instantaneous even with huge φT , φ T and φ T (po), and that (v) requires building a polynomial-size formula φ T (po), in contrast to the exponential-size formula required by the all-MinAs process of [6]. We have implemented a prototype tool and performed a preliminary empirical evaluation on the available ontologies, whose results con rm the potential of our novel approach. Content. In 2 we provide the necessary background on EL+ reasoning and on con ict-driven SAT solving; in 3 we present our SAT-based procedures for concept subsumption, one-MinA extraction and all-MinAs enumeration; in 4 we discuss our techniques and compare them with those in [6]; in 5 we present our preliminary empirical evaluation, in 6 we draw some conclusions and outline directions for future research.	algorithm;automated reasoning;boolean satisfiability problem;british informatics olympiad;bulk copy program;ct scan;cobham's thesis;debugging;description logic;encode;emoticon;horn clause;horn-satisfiability;local consistency;maximal set;nc (complexity);naruto shippuden: clash of ninja revolution 3;natural deduction;ontology (information science);open road tolling;polynomial;prototype;relevance;software propagation;subroutine;subsumption architecture;systematized nomenclature of medicine;time complexity	Roberto Sebastiani;Michele Vescovi	2009		10.1007/978-3-642-02959-2_6	discrete mathematics;description logic;computer science;artificial intelligence;theoretical computer science;mathematics;automated reasoning;boolean satisfiability problem;programming language;algorithm	AI	-19.05666886390113	14.632778563072458	91528
4852ccfdbbbe2c778d64dded753665fa4ddb4e7f	implementing local intervals in casl	algebraic specification;algebraic specification languages;equational reasoning;formal method;specification of real numbers;interval arithmetics;interval arithmetic;error estimate;rio de janeiro	This paper defines the basis for the implementation in CASL (Common Algebraic Specification Language) of an interval library such that intervals behave as real numbers endowed with an error information. To achieve that, we redefine the notion of interval local set defined in [15] in such a way that it can be implemented in the underlying logic of CASL. With these results, it is possible to manipulate intervals in CASL, as if they were real numbers, with equational reasoning, and get an error estimation on the obtained results for free (from the width of the resulting interval). The paper describes the CASL definition of the interval library and presents a case study on a simple example requiring handling data with “tolerance” margin.	common algebraic specification language;interval arithmetic	Regivan H. N. Santiago;Anamaria Martins Moreira;Katiane R. Lopes	2007	Electr. Notes Theor. Comput. Sci.	10.1016/j.entcs.2007.03.019	discrete mathematics;formal methods;computer science;mathematics;interval arithmetic;programming language;algorithm	Logic	-14.399146629564385	18.043095212866344	91529
215d8d38581efdd598ffaef35518e05b34e62a7d	tactical diagrammatic reasoning	g400 computing	Although automated reasoning with diagrams has been possible for some years, tools for diagrammatic reasoning are generally much less sophisticated than their sentential cousins. The tasks of exploring levels of automation and abstraction in the construction of proofs and of providing explanations of solutions expressed in the proofs remain to be addressed. In this paper we take an interactive proof assistant for Euler diagrams, Speedith, and add tactics to its reasoning engine, providing a level of automation in the construction of proofs. By adding tactics to Speedith’s repertoire of inferences, we ease the interaction between the user and the system and capture a higher level explanation of the essence of the proof. We analysed the design options for tactics by using metrics which relate to human readability, such as the number of inferences and the amount of clutter present in diagrams. Thus, in contrast to the normal case with sentential tactics, our tactics are designed to not only prove the theorem, but also to support explanation.	algorithm;automated reasoning;backtracking;clutter;coherence (physics);combinatory logic;combining rules;diagram;euler;euler–lagrange equation;expect;experiment;final fantasy tactics;force-directed graph drawing;graphical user interface;interactive proof system;isabelle;problem solving;process calculus;proof assistant;reasoning system;semantic reasoner;semiconductor industry	Sven Linker;Jim Burton;Mateja Jamnik	2016		10.4204/EPTCS.239.3	computer science;artificial intelligence;theoretical computer science;mathematics;programming language;algorithm	AI	-18.3068816168363	17.719136425103933	91575
ae47095f18864f687bc7da86f63a2b231b28ad2f	blueprint for a dynamic deontic logic	philosophy ethics and religion;filosofi;forrester s paradox;humaniora och religionsvetenskap;deontic logic;humanities and religion;dynamic logic;humanities;events;deontic actions;philosophy;real actions;norms;chisholm s paradox;ross s paradox	Extending the idiom of dynamic logic we outline a deontic logic in which deontic operators operate on terms rather than on formulae. In a second step we distinguish between what we call real and ...	blueprint;deontic logic	Krister Segerberg	2009	J. Applied Logic	10.1016/j.jal.2009.04.001	dynamic logic;philosophy;epistemology;computer science;artificial intelligence;deontic logic;mathematics;algorithm;norm	AI	-12.905135928690399	5.845170023896378	91637
de504578af920256914e7673e7c56a8a9fd4761d	elementary elimination of prenex cuts in disjunction-free intuitionistic logic	004;cut elimination sequent calculus intuitionistic logic	The size of shortest cut-free proofs of first-order formulas in intuitionistic sequent calculus is known to be non-elementary in the worst case in terms of the size of given sequent proofs with cuts of the same formulas. In contrast to that fact, we provide an elementary bound for the size of cut-free proofs for disjunction-free intuitionistic logic for the case where the cut-formulas of the original proof are prenex. To emphasize the non-triviality of our result, we establish non-elementary lower bounds for classical disjunction-free proofs with prenex cut-formulas and intuitionistic disjunction-free proofs with non-prenex cut-formulas. 1998 ACM Subject Classification F.4.1 Mathematical Logic (Proof Theory)	best, worst and average case;first-order predicate;intuitionistic logic;prenex normal form;sequent calculus;well-formed formula	Matthias Baaz;Christian G. Fermüller	2015		10.4230/LIPIcs.CSL.2015.94	discrete mathematics;cut-elimination theorem;computer science;mathematics;proof calculus;curry–howard correspondence;natural deduction;algorithm;prenex normal form	Logic	-9.243855629359643	16.90351454227551	91668
375e527666520f4dd1ae203e6265295887960369	model evolution with equality modulo built-in theories	automated deduction;dpll procedure;integer arithmetic;automated reasoning;model evolution calculus;conference paper;automata t;formal logic;background theory;keywords active area;calculations;first order logic;model evolution;first order logic with equality;automation	Many applications of automated deduction require reasoning modulo background theories, in particular some form of integer arithmetic. Developing corresponding automated reasoning systems that are also able to deal with quantified formulas has recently been an active area of research. We contribute to this line of research and propose a novel instantiation-based method for a large fragment of first-order logic with equality modulo a given complete background theory, such as linear integer arithmetic. The new calculus is an extension of the Model Evolution Calculus with Equality, a first-order logic version of the propositional DPLL procedure, including its ordering-based redundancy criteria. We present a basic version of the calculus and prove it sound and (refutationally) complete under certain conditions.3	automated reasoning;automated theorem proving;dpll algorithm;first-order logic;first-order predicate;integer (computer science);modulo operation;natural deduction;reasoning system;universal instantiation	Peter Baumgartner;Cesare Tinelli	2011		10.1007/978-3-642-22438-6_9	zeroth-order logic;discrete mathematics;calculation;computer science;artificial intelligence;automation;first-order logic;mathematics;proof calculus;situation calculus;automated reasoning;satisfiability modulo theories;natural deduction;logic;algorithm	Logic	-13.479099705629311	14.549592370951368	91850
39f2f5731b7d4536131a55928ce6a67acda35cce	agent-based abstractions for verifying alternating-time temporal logic with imperfect information		We introduce a 3-valued abstraction technique for alternatingtime temporal logic (ATL) in contexts of imperfect information. We introduce underand over-approximations of an agent’s strategic abilities in terms of mustand maystrategies and provide a 3-valued semantics for ATL based on agents in interpreted systems (IS). We define a relation of simulation between the agents and prove that it preserves defined truth values of ATL formulas. Finally, we introduce a notion of abstraction on IS and show that it simulates the concrete interpreted system. Under this setting we present a procedure that enables the direct construction of a finite abstraction from an infinite-state system.	alternating-time temporal logic;ambiguous name resolution;approximation;expectation propagation;model checking;newton–cotes formulas;refinement (computing);simulation	Francesco Belardinelli;Alessio Lomuscio	2017			artificial intelligence;machine learning;computer science;alternating-time temporal logic;temporal logic;semantics;truth value;theoretical computer science;perfect information;formal verification;abstraction	AI	-17.47264136446717	5.108990211686002	91981
465cfe0445e08bd2f3b25470de3cf2eb59f394c9	no i-sums for nissim (and shalom)	noun;strong and weak readings;e type pronouns;choice function;donkey anaphora;i sums	Lappin and Francez (1994) present a theory of donkey anaphora which, they claim, captures both their existential and their universal readings, while maintaining a uniform representation of donkey pronouns. This paper shows that their analysis does not in fact assign the correct truth conditions to donkey sentences and so does not account correctly for the distribution of readings. An alternative analysis is proposed which retains LF’s uniform representation for donkey pronouns, but abandons their analysis in terms of i-sums and the corollary derivation of universal readings by means of a maximality constraint. On the proposed analysis, donkey pronouns are uniformly represented with free variables over (Skolemized) choice functions, as in Chierchia’s (1992) E-type analysis. The quantification associated with them is inferred quantification over choice functions. Universal readings arise as in Chierchia (1992) when all possible values for the free variable in the representation of a donkey pronoun are salient. For existential readings, a pragmatic account in the spirit of LF’s analysis in terms of a cardinality constraint is maintained.	anaphora (linguistics);cardinality (data modeling);free variables and bound variables;skolem normal form;theory	Itamar Francez	2009		10.1007/978-3-642-01748-3_7	arithmetic;mathematics;communication;algorithm	NLP	-12.476130573254425	7.14390213082258	92073
aaf6dbaf38a540f1a033dae3216fb3f12bff313d	a tree-sequent calculus for a natural predicate extension of visser's propositional logic	sequent calculus;propositional logic		propositional calculus;sequent calculus	Ryo Ishigaki;Kentaro Kikuchi	2007	Logic Journal of the IGPL	10.1093/jigpal/jzm004	propositional formula;dynamic logic;zeroth-order logic;modal μ-calculus;discrete mathematics;classical logic;many-valued logic;intuitionistic logic;computer science;intermediate logic;first-order logic;proof calculus;predicate variable;propositional variable;well-formed formula;noncommutative logic;propositional calculus;monadic predicate calculus;sequent;programming language;sequent calculus;natural deduction;algorithm;rule of inference;autoepistemic logic	Logic	-13.053545140182171	13.571679835501062	92079
3b0f527e93e82e42121c9ac31c9f60f2051ae6f6	secure estimation under causative attacks		This paper considers the problem of secure parameter estimation when the estimation algorithm is prone to causative attacks. Causative attacks, in principle, target decision-making algorithms to alter their decisions by making them oblivious to specific attacks. Such attacks influence inference algorithms by tampering with the mechanism through which the algorithm is provided with the statistical model of the population about which an inferential decision is made. Causative attacks are viable, for instance, by contaminating the historical or training data, or by compromising an expert who provides the model. In the presence of causative attacks, the inference algorithms operate under a distorted statistical model for the population from which they collect data samples. This paper introduces specific notions of secure estimation and provides a framework under which secure estimation under causative attacks can be formulated. A central premise underlying the secure estimation framework is that forming secure estimates introduces a new dimension to the estimation objective, which pertains to detecting attacks and isolating the true model. Since detection and isolation decisions are imperfect, their inclusion induces an inherent coupling between the desired secure estimation objective and the auxiliary detection and isolation decisions that need to be formed in conjunction with the estimates. This paper establishes the fundamental interplay among the decisions involved and characterizes the general decision rules in closed-form for any desired estimation cost function. Furthermore, to circumvent the computational complexity associated with growing parameter dimension or attack complexity, a scalable estimation algorithm and its attendant optimality guarantees are provided. The theory developed is applied to secure parameter estimation in a sensor network.		Saurabh Sihag;Ali Tajer	2018	CoRR			ML	-5.091956735767885	5.601329201281106	92192
74d77c0fe9e9ed5d4fe919f630c24d4183933b3d	belief models: an order-theoretic investigation	60a05;system of spheres;order theory;coherent lower prevision;06a06;03b48;possibility measure;03b05;03b22;imprecise probability;technology and engineering;belief revision;propositional logic;belief model;06a12;classical propositional logic	I show that there is a common order-theoretic structure underlying many of the models for representing beliefs in the literature. After identifying this structure, and studying it in some detail, I argue that it is useful. On the one hand, it can be used to study the relationships between several models for representing beliefs, and I show in particular that the model based on classical propositional logic can be embedded in that based on the theory of coherent lower previsions. On the other hand, it can be used to generalise the coherentist study of belief dynamics (belief expansion and revision) by using an abstract order-theoretic definition of the belief spaces where the dynamics of expansion and revision take place. Interestingly, many of the existing results for expansion and revision in the context of classical propositional logic can still be proven in this much more abstract setting, and therefore remain valid for many other belief models, such as those based on imprecise probabilities.	belief revision;coherence (physics);embedded system;propositional calculus;theory;whole earth 'lectronic link	Gert de Cooman	2005	Annals of Mathematics and Artificial Intelligence	10.1007/s10472-005-9006-x	discrete mathematics;imprecise probability;order theory;computer science;belief structure;artificial intelligence;mathematics;propositional calculus;belief revision;algorithm;statistics	AI	-14.76945976012998	5.919038767301883	92212
dafde0e9e9d0023a0aeb56976f1a986c690f9bf9	logic and semantic networks	resolution;logic;semantic network;semantic networks;path finding;theorem proving;inference rule;theorem prover;logic programming;indexing;indexation;logic programs;data structure;path following;deduction	An extended form of semantic network is defined, which can be regarded as a syntactic variant of the clausal form of logic. By virtue of its relationship with logic, the extended semantic network is provided with a precise semantics, inference rules, and a procedural interpretation. On the other hand, by regarding semantic networks as an abstract data structure for the representation of clauses, we provide a theorem-prover with a potentially useful indexing scheme and path-following strategy for guiding the search for a proof.	abstract data type;automated theorem proving;conjunctive normal form;data structure;procedural programming;semantic network	Amaryllis Deliyanni;Robert A. Kowalski	1979	Commun. ACM	10.1145/359080.359090	dynamic logic;semantic computing;discrete mathematics;resolution;description logic;semantic web rule language;higher-order logic;horn clause;data structure;computer science;semantic reasoner;theoretical computer science;bunched logic;first-order logic;computational logic;mathematics;proof calculus;automated theorem proving;semantic network;programming language;logic programming;probabilistic logic network;multimodal logic;second-order logic;algorithm;rule of inference;autoepistemic logic	AI	-17.11530739643963	14.000234287924354	92215
fec5f86861a917ba6e7c4c3348d21ddde7b7aed5	a reflective proof system for reasoning in contexts	learning model;operational semantics;natural deduction;concept learning;partial deduction;logic programs	We consider the problem of building an automated proof system for reasoning in contexts. Towards that goal, we first define a language of contextual implications, and give its operational semantics under the form of a natural deduction system using explicit context assertions. We show that this proof system has an equivalent straightforward logic program, which in turn can be reified, i.e. defined as an outer metalevel context, and thus applied to itself. More powerful reasoning models (e.g. those involving theory lifting) can be then implemented by applying the same logic program on extended meta-level contexts containing specialized axioms. As a theoretical application, we consider the task of concept learning. In order to achieve generality (i.e. abstracting solution classes from problem instances), we argue that concept learning goals should aim at the discovery of meta-level operators representing the sequence of inference steps leading to object-level moves or actions. We illustrate this idea with the definition of a learning model based on partial deduction with respect to theory lifting.	concept learning;depth-first search;disk mirroring;formal system;lambda lifting;logic programming;natural deduction;operational semantics;prolog;proof calculus;reasoning system;reification (computer science)	Pierre E. Bonzon	1997			judgment;concept learning;computer science;artificial intelligence;machine learning;natural deduction;operational semantics;algorithm	AI	-17.566286432858156	8.054463291365906	92227
18c1b9f65389b4cc70c3574bf0ba89e8e27899bb	the np-completeness of reflected fragments of justification logics	modal logic;hybrid logic;epistemic logic;lower bound	Justification Logic studies epistemic and provability phenomena by introducing justifications/proofs into the language in the form of justification terms. Pure justification logics serve as counterparts of traditional modal epistemic logics, and hybrid logics combine epistemic modalities with justification terms. The computational complexity of pure justification logics is typically lower than that of the corresponding modal logics. Moreover, the so-called reflected fragments, which still contain complete information about the respective justification logics, are known to be in NP for a wide range of justification logics, pure and hybrid alike. This paper shows that, under reasonable additional restrictions, these reflected fragments are NP-complete, thereby proving a matching lower bound.	computational complexity theory;modal logic;np-completeness	Samuel R. Buss;Roman Kuznets	2009		10.1007/978-3-540-92687-0_9	modal logic;monoidal t-norm logic;t-norm fuzzy logics;normal modal logic;discrete mathematics;epistemic modal logic;mathematics;upper and lower bounds;accessibility relation;algorithm	AI	-15.220321283688241	7.895584011274604	92312
5df0309e1bf890f3f3ec13dd358049eb859af38c	magic sets vs. sld-resolution	bottom up;top down	It is by now folklore that the bottom-up evaluation of a program after the “magic set” transformation is “as efficient as” top-down evaluation. There are a number of formalizations of this in the literature. However, the naive formalization is false: As shown by Ross, SLD-resolution can be much more efficient than bottom-up evaluation with magic sets on tail-recursive programs. We show that this happens only for tail-recursive programs, and that the only problem of magic sets is the materialization of “lemmas”. So magic sets are always “as goal-directed as” SLD-resolution. These results are not surprising, but we believe that the variants given here are especially useful for teaching purposes. We also give rather simple proofs. Furthermore, we demonstrate that SLD-resolution can be directly simulated by bottom-up evaluable programs if all recursions are tailrecursive. This is based on the meta-interpreter approach of Bry and seems to be very promising.	bottom-up parsing;recursion;sld resolution;tail call;top-down and bottom-up design	Stefan Brass	1995		10.1007/978-1-4471-1486-4_13	computer science;top-down and bottom-up design	DB	-18.17253891912121	17.49992281217038	92510
527d1c9c13ab16359ec793ca684ec1856fefddc1	on the complexity of propositional knowledge base revision, updates, and counterfactuals	horn clause;following problem;derive complexity result;formula q;knowledge base;propositional knowledge base revision;propositional knowledge base;problem amount;general case;update p;counterfactual p q	We study the complexity of several recently proposed methods for updating or revising propositional knowledge bases. In particular, we derive complexity results for the following problem: given a knowledge base <italic>T</italic>, an update <italic>p</italic>, and a formula <italic>q</italic>, decide whether <italic>q</italic> is derivable from <italic>Top</italic>, the updated (or revised) knowledge base. This problem amounts to evaluating the counterfactual <italic>p</italic> > <italic>q</italic> over <italic>T</italic>. Besides the general case, also subcases are considered, in particular where <italic>T</italic> is a conjunction of Horn clauses, or where the size of <italic>p</italic> is bounded by a constant.	belief revision;counterfactual conditional;horn clause;knowledge base	Thomas Eiter;Georg Gottlob	1992		10.1145/137097.137886	discrete mathematics;horn-satisfiability;mathematics;algorithm	DB	-18.37004390752376	8.90378071611881	92522
8ec5a45aa3d44cba8f3dc207b8a9a296f73de8fa	definability of recursively enumerable sets in abstract computational complexity theory	computational complexity	In this paper we discuss defiiiability of recursivily enumerable (r.e.) sets in a language L devised by BLUM and GILL [2] for abstract computational complexity theory. I n general, if an r.e. set is defined in L, it depends on the particular computational complexity measure chosen (though not, a t least up to recursive isomorphism, on the acceptable numbering chosen). If the r.e. set that has been defined is independent of the choice of computational complexity measure, then it can be defined in terms of the acceptable numbering alone. (See [I] for a proof of this, and see [3] and [4] for a discussion of the properties of such r.e. sets.) It is reasonable to ask whether the r.e. set being defined can be unique up to some recursion theoretic property, e.g. Turing degree. We answer this by constructing a computational complexity measure such that every r.e. set definable in L using this measure is either N, the empty sct, or 1-complete. This shows that there are only three (up to recursive isomorphism) r.e. sets t.hat can be uniquely defined in the given sense. The construction will have more a semantical than a syntactical flavor, so “definable ” in the prrcc.ding paragraphs can be interpreted to mean definable in some higher order or iilfinitary extension of L. It is often said that BLUM’S definition of abstract computational complexity measure is too general, 8s i t includes examples that are thought to be pathological. Indeed, one can argue that the computational complexity measure constructed in the proof of the main theowm of the present work is pathological to some degree. In the absence of a universally accepted definition of LLn.atural” computational complexity measure, the questions addressed in the present work still seem worth pursuing, however. It might be of intercst to characterize the r.e. setfi definable in the language L associated with various natural complexity measures. -4lthough this paper is more or less self contained, a knowledge of [3] and [4] will be h c-lpfu I .	admissible numbering;computation;computational complexity theory;empty string;recursion (computer science);recursively enumerable set;turing degree	Robert E. Byerly	1984	Math. Log. Q.	10.1002/malq.19840303202	maximal set;complete;parameterized complexity;combinatorics;discrete mathematics;complexity;average-case complexity;ph;decision tree model;recursively enumerable set;quantum complexity theory;structural complexity theory;decision problem;computational resource;mathematics;computational complexity theory;computational learning theory;asymptotic computational complexity;recursively enumerable language;algorithm;descriptive complexity theory	Theory	-4.600533312567698	14.307820760711468	92725
dfdcf9bf68232bbdab6dd7474395ae58d51ff676	order functional pure type systems	pure type systems;cut elimination	We study a class of Pure Type Systems that are weaker than functional ones, characterised by the possibility of assigning, in a non-trivial way, an integer number to any typable term a in a context : its order @ a. We describe some applications of the order function. An important one is the study of syntactic dependence in a class of systems that includes the left side of the -cube.	pure type system	Francisco Gutiérrez;Blas C. Ruiz	2002	Electr. Notes Theor. Comput. Sci.	10.1016/S1571-0661(04)80792-8	combinatorics;discrete mathematics;computer science;mathematics;algorithm	PL	-7.201140491513651	15.842158088656646	93008
e16a0c443dabd3436696cdc436ea3ff0edf86d53	cut-free systems for the modal logic s4.3 and s4.3grz	modal logic		modal logic	Tatsuya Shimura	1991	Reports on Mathematical Logic		multimodal logic;dynamic logic (modal logic);modal logic;discrete mathematics;axiom s5;accessibility relation;mathematics;modal μ-calculus;normal modal logic	Logic	-12.680471717822545	12.694718722124055	93024
69ddb601a5ada9993aa7f40b2ae9ee159d49b49a	the range of applicability of nonmonotonic logics for the inertia problem	nonmonotonic logic	"""We introduce and use a new methodology for the study of logics for action and change. The methodology allows one to define a taxonomy of reasoning problems, based in particular on the properties of the actions in those worlds where the actions take place, and on the au-toepistemic assumptions that are being made. For each of a number of previously proposed logics, we have identified a corresponding class in the taxonomy, and proved that for reasoning problems within that class, the logic is guaranteed to obtain exactly the intended set of conclusions. 1 Logics of action and change: a problem of verification There has been much research in recent years on methods for reasoning about actions and change, and on finding solutions to the so-called """"frame problems"""". New variants of nonmonotonic logics for common-sense reasoning have been proposed, only to be quickly refuted by counterexamples. Unfortunately the results that have been obtained in this fashion are notoriously unreliable. According to the standard research methodology in the area, the evidence in favor of a proposed logic should consist of intuitive plausibility arguments and a small number of scenario examples for which the logic is proven (or claimed) to give the intended conclusions and no others. Clearly there is a need for more systematic results, where a proposed logic is verified for a whole class of reasoning problems and not only for single examples. Recently, Lin and Shoham[LS9l], Lifschitz[Lif9l], and Reiter[Rei9l] have reported such correctness results for several nonmonotonic logics which are based on the situation calculus. Their approach has been to relate a non-monotonic theory over a certain set of """"common-sense"""" axioms, to a monotonic theory over a larger set of axioms. In this paper I present another approach which differs from these previous authors in three ways. It addresses logics with explicit time, such as the integers, and not only the situation calculus. This allows one to deal with actions with extended duration, and to analyze plans where the order of the actions is indetermined. Also it is based on an underlying semantics which captures basic notions of intelligent agents. This is hoped to facilitate the use of these results for the design of practical autonomous agents. Finally, rather than starting with a fixed class of reasoning problems and analyzing whether a single, proposed logic is correct or not for that class, I start by defining a taxonomy of reasoning …"""	automated reasoning;autonomous agent;autonomous robot;commonsense reasoning;correctness (computer science);frame problem;intelligent agent;local interconnect network;non-monotonic logic;plausibility structure;ramification problem;situation calculus;taxonomy (general)	Erik Sandewall	1993			computer science;artificial intelligence;non-monotonic logic	AI	-16.21588483400365	6.235165512303248	93299
17304b678b24006a5dc2f459175061090b8a613a	quasi-metric spaces as domains for abstract interpretation	metric space	Metrics and more generally quasi-metrics are well krwwn in literature on domain theory and the semantics of programming languages. In this paper, we consider the role of quasi-metrics in defining abstract interpretations. ln fact these allow bot h to represent a notion of approximation together witll the error introduced, and to apply, under suitable conditions, Danach's contraction principle.	abstract interpretation;approximation;domain theory;end-to-end principle;programming language;quasi-quotation;semantics (computer science);spaces	Federico Crazzolara	1997			discrete mathematics;abstract interpretation;mathematics;metric space;semantics;domain theory;contraction principle	Logic	-12.7913821970774	17.01615613566119	93451
870abeaabba679c99e6717f8787638e314eb66fa	new foundations for automation of default reasoning	default logik		default logic;new foundations	Thomas Linke	2000			default logic	AI	-13.386129018156174	11.095795097453115	93556
38e44d7298809a70df21412303a99037085280b9	a methodological view of constraint solving	regle inference;programmation logique avec contrainte;resolution contrainte;rule based solving;rule based;coaccion;resolution math;contrainte;programacion logica con restriccion;resolution basee regle;operations research;satisfiability;constraint satisfaction;theorem proving;methode syntaxique;inference rule;methode hybride;unification;satisfaction contrainte;finite domain;constraint;hybrid method;methode semantique;constraint satisfiability;resolucion matematica;constraint solving;constraint system;constraint logic programming;satisfaccion restriccion;solving;unificacion;regla inferencia	Constraints are an effective tool to define sets of data by means of logical formulae. Our goal here is to survey the notion of constraint system and to give examples of constraint systems operating on various domains, such as natural, rational or real numbers, finite domains, and term domains. We classify the different methods used for solving constraints, syntactic methods based on transformations, semantic methods based on adequate representations of constraints, hybrid methods combining transformations and enumerations. The concepts and methods are illustrated via examples. We also discuss applications of constraints to various fields, such as programming, operations research, and theorem proving.	automated theorem proving;constraint satisfaction problem;operations research;syntactic methods	Hubert Comon-Lundh;Mehmet Dincbas;Jean-Pierre Jouannaud;Claude Kirchner	1999	Constraints	10.1023/A:1009868906501	rule-based system;constraint logic programming;mathematical optimization;constraint programming;constraint satisfaction;computer science;unification;mathematics;automated theorem proving;constraint;programming language;algorithm;rule of inference;satisfiability	AI	-16.26696717056867	15.338792334895157	93801
0d08ae872507cdb718ce61dc25e1231dd87970c8	possibilistic logic, preferential models, non-monotonicity and related issues	fuzzy set;possibility measure;probabilistic model;belief revision;possibilistic logic;possibility theory;conditional probability	The links between Shoham's preference logic and possibilistic logic, a numerical logic of uncertainty based on Zadeh's possibility measures, are investigated. Starting from a fuzzy set of preferential interpretations of a propositional theory, we prove that the notion of preferential entailment is closely related to a previously introduced notion of conditional possibility. Conditional possibility is then shown to possess all properties (originally stated by Gabbay) of a well-behaved non-monotonic consequence relation. We obtain the possibilistic counterpart of Adams' e-semantics of conditional probabilities which is the basis of the probabilistic model of non-monotonic logic proposed by Geffner and Pearl. Lastly we prove that our notion of possibilistic entailment is the one at work in possibilistic logic, a logic that handles uncertain propositional formulas, where uncertainty is modelled by degrees of necessity, and where partial inconsistency is allowed. Considering the formerly established close links between Gardenfors'epistemic entrenchment and necessity measures, what this paper proposes is a new way of relating belief revision and non-monotonic inference, namely via possibility theory.	belief revision;fuzzy set;logic programming;non-monotonic logic;numerical analysis;possibility theory;preferential entailment;statistical model	Didier Dubois;Henri Prade	1991			fuzzy logic;statistical model;possibility theory;discrete mathematics;conditional probability;computer science;artificial intelligence;machine learning;mathematics;fuzzy set;probabilistic logic;belief revision	AI	-15.461604078265045	6.523853885919219	93910
4dc0430a4a2c285ec9ec152345e9008c0ef97b88	extending and completing probabilistic knowledge and beliefs without bias		Combining logic with probability theory provides a solid ground for the representation of and the reasoning with uncertain knowledge. Given a set of probabilistic conditionals like “If A then B with probability x”, a crucial question is how to extend this explicit knowledge, thereby avoiding any unnecessary bias. The connection between such probabilistic reasoning and commonsense reasoning has been elaborated especially by Jeff Paris, advocating the principle of Maximum Entropy (MaxEnt). In this paper, we address the general concepts and ideas underlying MaxEnt and leading to it, illustrate the use of MaxEnt by reporting on an example application from the medical domain, and give a brief survey on recent approaches to extending the MaxEnt principle to first-order logic.	commonsense reasoning;computation;first-order logic;first-order predicate;first-order reduction;maximum entropy spectral estimation;principle of maximum entropy;question answering	Christoph Beierle;Gabriele Kern-Isberner;Marc Finthammer;Nico Potyka	2015	KI - Künstliche Intelligenz	10.1007/s13218-015-0380-1	computer science;artificial intelligence;data mining;algorithm	AI	-15.724823663551451	5.671283257601841	93936
27a69c4ffb49d0b5a0675457bcef7ae7f742c0c2	a constructive model of uniform continuity		We construct a continuous model of Gödel’s system T and its logic HA in which all functions from the Cantor space 2 to the natural numbers are uniformly continuous. Our development is constructive, and has been carried out in intensional type theory in Agda notation, so that, in particular, we can compute moduli of uniform continuity of T-definable functions 2 → N. Moreover, the model has a continuous Fan functional of type (2 → N) → N that calculates moduli of uniform continuity. We work with sheaves, and with a full subcategory of concrete sheaves that can be presented as sets with structure, which can be regarded as spaces, and whose natural transformations can be regarded as continuous maps.	agda;cantor;gödel;intuitionistic type theory;map;scott continuity	Chuangjie Xu;Martín Hötzel Escardó	2013		10.1007/978-3-642-38946-7_18	uniform limit theorem;modulus of continuity	Logic	-8.485835246374576	13.747954075506113	93950
ed536870a97d1478577c5d5106734148cf8d0f75	categorial semantics of a solution to distributed dining philosophers problem	distributed dining philosophers problem;system configuration;resource allocation;formal semantics;category theory;directed graph;universal constructions;categorial semantics;state transition	Distributed dining philosophers is regarded as one of the most representative resource allocation problems. Many strategies are employed for avoiding deadlock and starvation, the two well-known problems in Distributed Dining Philosophers Problem(DDPP). In this paper, the formal semantics of DDPP are originally proposed by using category theory based on the Chandy-Mirsa's acyclic directed graph strategy. The goal is to demonstrate how category theory is used in precisely defining categorical semantics and diagrammatically describing philosophers' priority, states-transition, and composition of processes, rather than to design a new algorithm to solve the DDPP. Compared with other formal techniques, category theory not only provides a good mathematical structure for formalizing different relationships and interactions at different abstract levels, but also its diagrammatical representation strengthens the traceability and understandability of philosophers' priority and states-transformation; additionally, its universal constructions (like colimit) offer the ability to manipulate and reason about system configuration.	dining philosophers problem	Zhen You;Jinyun Xue;Shi Ying	2010		10.1007/978-3-642-14553-7_18	discrete mathematics;mathematics;dining philosophers problem;algorithm	PL	-17.83332641349356	6.601769277714315	94270
2421b63406a793e463264f20bfe53f03239d15d5	representing non-deterministic actions within the situation calculus for autonomous characters	pragmatics;linguistic variable;fuzzy set;nondeterministic action representation;sensors;autonomous characters;non deterministic actions;virtual reality;semantics;epistemic fluent;fuzzy set semantics;virtual reality computer games formal logic knowledge representation specification languages;quake 2 game nondeterministic action representation situation calculus epistemic fluent fuzzy set semantics autonomous characters;specification languages;calculus;games;formal logic;mathematical model;artificial intelligence;quake 2 game;knowledge representation;computer games;possible worlds;situation calculus;epistemic fluent non deterministic actions situation calculus linguistic variable;calculus logic information technology information security informatics educational institutions fuzzy sets specification languages instruments ontologies	An alternative approach is proposed to represent non-deterministic actions in the situation calculus based on epistemic fluent K. A new epistemic fluent based on fuzzy set semantics is defined to solve uncountable number of possible worlds due to the introduction of epistemic fluent K. Meanwhile autonomous characters can come to the real world from the possible worlds by incorporating sensing into the framework. Finally the new approach was applied to create autonomous characters which can counteract with player characters in game Quake 2.	apply;autonomous robot;fuzzy set;possible world;situation calculus	Xiangyang Huang;Xiao Xin;Wenjun Wu	2010	2010 Third International Symposium on Intelligent Information Technology and Security Informatics	10.1109/IITSI.2010.66	natural language processing;fluent calculus;theoretical computer science;mathematics;algorithm	AI	-18.602998129243534	4.690669176662522	94368
267268ee1ac06f9e0da68599b0d2f4920a174e3d	homotopy-theoretic models of type theory	dependent product;logical model category;homotopy-theoretic model;additional condition;intensional interpretation;type theory;quillen model category;wide class;expressive power;identity type	We introduce the notion of a logical model category which is a Quillen model category satisfying some additional conditions. Those conditions provide enough expressive power that one can soundly interpret dependent products and sums in it while also having a purely intensional interpretation of the identity types. On the other hand, those conditions are easy to check and provide a wide class of models that are examined in the paper.	expressive power (computer science);intensional logic;type theory	Peter Arndt;Krzysztof Kapulkin	2011		10.1007/978-3-642-21691-6_7	combinatorics;discrete mathematics;topology;mathematics;algebra	Logic	-8.724300221952696	15.196028957289963	94395
1217cb1195aeb06d9e1b7e6c2db2ceabb5c2d8fc	a translation from the modal logic of provability into k4	modal logic		modal logic	Philippe Balbiani;Andreas Herzig	1994	Journal of Applied Non-Classical Logics	10.1080/11663081.1994.10510818	modal logic;predicate logic;dynamic logic;normal modal logic;modal μ-calculus;linear temporal logic;higher-order logic;provability logic;epistemology;intuitionistic logic;computer science;intermediate logic;axiom s5;accessibility relation;multimodal logic	Logic	-12.831020682966217	12.327985940738824	94413
474e8503c20370640856c7df39ff52e6802c6d07	effective cut-elimination for a fragment of modal mu-calculus	modal mu calculus;cut elimination	A non-effective cut-elimination proof for modal mu-calculus has been given by G. Jager, M. Kretz and T. Studer. Later an effective proof has been given for a subsystem M 1 with non-iterated fixpoints and positive endsequents. Using a new device we give an effective cut-elimination proof for M 1 without restriction to positive sequents.	modal μ-calculus	Grigori Mints	2012	Studia Logica	10.1007/s11225-012-9378-y	philosophy;calculus;mathematics;algorithm	Logic	-11.668990177037454	13.961900518001078	94433
ced99ad5a6117c919311a65974ada33bd5df1f98	representation of interlaced trilattices	representation;generalized truth values;multilattices;bilattices;trilattices	Trilattices are algebraic structures introduced ten years ago into logic with the aim to provide a uniform framework for the notions of constructive truth and constructive falsity. In more recent years, trilattices have been used to introduce a number of many-valued systems that generalize the BelnapDunn logic of first-degree entailment, proposed as logics of how several computers connected together in a network should think in order to deal with incomplete and possibly contradictory information. The aim of the present work is to develop a first purely algebraic study of trilattices, focusing in particular on the problem of representing certain subclasses of trilattices as special products of bilattices. This approach allows to extend the known representation results for interlaced bilattices to the setting of trilattices and to reduce many algebraic problems concerning these new structures to the better-known framework of lattice theory.	computer;interlaced video;linear algebra	Umberto Rivieccio	2013	J. Applied Logic	10.1016/j.jal.2013.03.001	discrete mathematics;computer science;artificial intelligence;mathematics;representation;algorithm	AI	-7.373895674799999	11.371398899662715	94519
9c4d757f4372d35937a4d4b2effb535b4c3c41c8	modal logics with belnapian truth values	topological boolean algebras;connexive logic;nelson s logics;twiststructures;modal algebras;boolean algebra;tableaux;modal logic;intuitionistic logic;propositional logic;relational model;many valued modal logics;strong negation;faithful embeddings;first degree entailment	Various fourand three-valuedmodal propositional logics are studied. The basic systemsare modal extensionsBK and BS4 of Belnapand Dunn’s four-valuedlogic of firstdegree entailment. Three-valuedextensionsof BK and BS4 are consider ed as well. These logics are introducedsemanticallyby meansof relational modelswith two distinct evaluation relations,onefor verification(supportof truth)andtheotherfor falsification(supportof falsity). Axiomsystemsare definedand shownto be soundand completewith respectto the relational semanticsandwith respecto twiststructuresovermodalalgebras.Soundandcompletetableau calculi arepresentedaswell. Moreover, a numberof constructivenon-modallogicswith strong negation are faithfully embeddedinto BS4, into its three-valuedextensionB3S4, or into temporal BS4, BtS4. Theselogics includeDavid Nelson’ s three-valuedlogic N3, the four-valued logic N4, the connexive logic C, and several extensionsof bi-intuitionistic logic by strong negation.	four-valued logic;intuitionistic logic;modal logic;stable model semantics	Sergei P. Odintsov;Heinrich Wansing	2010	Journal of Applied Non-Classical Logics	10.3166/jancl.20.279-301	modal logic;dynamic logic;monoidal t-norm logic;s5;t-norm fuzzy logics;normal modal logic;modal μ-calculus;boolean algebra;discrete mathematics;classical logic;relational model;higher-order logic;relevance logic;principle of bivalence;epistemology;many-valued logic;intuitionistic logic;computer science;intermediate logic;axiom s5;łukasiewicz logic;mathematics;propositional calculus;kripke semantics;method of analytic tableaux;accessibility relation;multimodal logic;algorithm	AI	-11.682962938482342	12.365355113111038	94677
298783c7a2be16ea736a59f0ad1a0c06eb3ce320	a concurrent logical framework: the propositional fragment	logique lineaire;preuve programme;program proof;theorie type;logical framework;red petri;logica monadica;logical programming;logica lineal;computer logic;computer programming;programmation logique;intuitionistic logic;type theory;logique monadique;logique intuitionniste;prueba programa;linear programming;monadic logic;point of view;petri net;programacion logica;linear logic;logica intuicionista;reseau petri;programming languages	We present the propositional fragment CLF0 of the Concurrent Logical Framework (CLF). CLF extends the Linear Logical Framework to allow the natural representation of concurrent computations in an object language. The underlying type theory uses monadic types to segregate values from computations. This separation leads to a tractable notion of definitional equality that identifies computations differing only in the order of execution of independent steps. From a logical point of view our type theory can be seen as a novel combination of lax logic and dual intuitionistic linear logic. An encoding of a small Petri net exemplifies the representation methodology, which can be summarized as “concurrent computations as monadic expressions”.	bisimulation;cobham's thesis;common look and feel;computation;concurrency (computer science);definition;electronic signature;judgment (mathematical logic);linear logic;liveness;logical framework;monad (functional programming);object language;operational semantics;parallel computing;petri net;programming language;relevance;type family;type theory	Kevin Watkins;Iliano Cervesato;Frank Pfenning;David Walker	2003		10.1007/978-3-540-24849-1_23	linear logic;logical framework;intuitionistic logic;computer science;linear programming;computer programming;programming language;petri net;type theory;algorithm	PL	-13.953430828688322	16.798773708213794	94833
48c595ddfb6e482dba74c3116e20aa5a4256a2f3	truth versus information in logic programming		The semantics of logic programs was originally described in terms of two-valued logic. Soon, however, it was realised that three-valued logic had some natural advantages, as it provides distinct values not only for truth and falsehood, but also for “undefined”. The three-valued semantics proposed by Fitting and by Kunen are closely related to what is computed by a logic program, the third truth value being associated with non-termination. A different three-valued semantics, proposed by Naish, shared much with those of Fitting and Kunen but incorporated allowances for programmer intent, the third truth value being associated with underspecification. Naish used an (apparently) novel “arrow” operator to relate the intended meaning of left and right sides of predicate definitions. In this paper we suggest that the additional truth values of Fitting/Kunen and Naish are best viewed as duals. We use Belnap’s four-valued logic, also used elsewhere by Fitting, to unify the two three-valued approaches. The truth values are arranged in a bilattice which supports the classical ordering on truth values as well as the “information ordering”. We note that the “arrow” operator of Naish (and our four-valued extension) is essentially the information ordering, whereas the classical arrow denotes the truth ordering. This allows us to shed new light on many aspects of logic programming, including program analysis, type and mode systems, declarative debugging and the relationships between specifications and programs, and successive executions states of a program. This paper is to appear in Theory and Practice of Logic Programming (TPLP).	algorithmic program debugging;association for logic programming;curve fitting;divergence (computer science);four-valued logic;program analysis;programmer;three-valued logic;undefined behavior	Lee Naish;Harald Søndergaard	2014	TPLP	10.1017/S1471068413000069	fuzzy logic;many-valued logic;intuitionistic logic;computer science;artificial intelligence;game semantics;truth function;logical connective;programming language;truth value;algorithm	PL	-12.375309517510523	8.333964604815487	95068
200a41ebf1ae5956c5fda457beca03849c747a45	grounded fixpoints and their applications in knowledge representation	autoepistemic logic;approximation fixpoint theory;abstract dialectical frameworks;well founded semantics;logic programming;abstract argumentation;stable semantics;lattice operator;groundedness	In various domains of logic, researchers have made use of a similar intuition: that facts (or models) can be derived from the ground up. They typically phrase this intuition by saying, e.g., that the facts should be grounded, or that they should not be unfounded, or that they should be supported by cycle-free arguments, et cetera. In this paper, we formalise this intuition in the context of algebraical fixpoint theory. We define when a lattice element x ? L is grounded for lattice operator O : L ? L . On the algebraical level, we investigate the relationship between grounded fixpoints and the various classes of fixpoints of approximation fixpoint theory, including supported, minimal, Kripke-Kleene, stable and well-founded fixpoints. On the logical level, we investigate groundedness in the context of logic programming, autoepistemic logic, default logic and argumentation frameworks. We explain what grounded points and fixpoints mean in these logics and show that this concept indeed formalises intuitions that existed in these fields. We investigate which existing semantics are grounded. We study the novel semantics for these logics that is induced by grounded fixpoints, which has some very appealing properties, not in the least its mathematical simplicity and generality. Our results unveil a remarkable uniformity in intuitions and mathematics in these fields.	approximation algorithm;argumentation framework;autoepistemic logic;default logic;fixed point (mathematics);knaster–tarski theorem;knowledge representation and reasoning;logic programming;national fund for scientific research;stiff equation;well-founded semantics	Bart Bogaerts;Joost Vennekens;Marc Denecker	2015	Artif. Intell.	10.1016/j.artint.2015.03.006	discrete mathematics;computer science;artificial intelligence;mathematics;logic programming;algorithm;autoepistemic logic	AI	-14.488908686297053	9.193500382000162	95115
93a7479282655285d5fb039da17bd81d66cb6829	magic inference rules for probabilistic deduction under taxonomic knowledge	inference rule;knowledge base	We present locally complete inference rules for probabilistic deduction from taxonomic and probabilistic knowledge-bases over conjunctive events. Crucially, in contrast to similar infer­ ence rules in the literature, our inference rules are locally complete for conjunctive events and under additional taxonomic knowledge. We dis­ cover that our inference rules are extremely com­ plex and that it is at first glance not clear at all where the deduced tightest bounds come from. Moreover, analyzing the global completeness of our inference rules, we find examples of glob­ ally very incomplete probabilistic deductions. More generally, we even show that all systems of inference rules for taxonomic and probabilis­ tic knowledge-bases over conjunctive events are globally incomplete. We conclude that proba­ bilistic deduction by the iterative application of inference rules on interval restrictions for condi­ tional probabilities, even though considered very promising in the literature so far, seems very lim­ ited in its field of application.	iterative method;method of conditional probabilities;natural deduction	Thomas Lukasiewicz	1998			knowledge base;fiducial inference;frequentist inference;computer science;semantic reasoner;artificial intelligence;machine learning;pattern recognition;data mining;mathematics;proof calculus;inference engine;rule of inference	ML	-18.53107225692015	8.741873462419317	95166
1c356a4b138aba07a84e4ec592e70ec713ee3af6	the relative consistency of the class axioms of abstraction and extensionality and the axioms of nbg in a three-valued logic			three-valued logic	Ross T. Brady	1972	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093894712	axiom of extensionality;discrete mathematics;extensionality;armstrong's axioms;pure mathematics;mathematics;peano axioms	Logic	-11.459577595518201	12.91461569258207	95168
5475182813d1ededf3da66088250daf8b81c86de	extensions to the estimation calculus	preuve programme;program proof;intelligence artificielle;logical programming;functional programming;termination analysis;programmation logique;prueba programa;programme recursif;artificial intelligence;programmation fonctionnelle;inteligencia artificial;programa recursivo;recursive program;analisis semantico;analyse semantique;programacion logica;programacion funcional;large classes;semantic analysis	Walther’s estimation calculus was designed to prove the termination of functional programs, and can also be used to solve the similar problem of proving the well-foundedness of induction rules. However, there are certain features of the goal formulae which are more common to the problem of induction rule well-foundedness than the problem of termination, and which the calculus cannot handle. We present a sound extension of the calculus that is capable of dealing with these features. The extension develops Walther’s concept of an argument bounded function in two ways: firstly, so that the function may be bounded below by its argument, and secondly, so that a bound may exist between two arguments of a predicate. Our calculus enables automatic proofs of the well-foundedness of a large class of induction rules not captured by the original calculus.	ap computer science;automated theorem proving;curry;display resolution;inductive reasoning;mathematical induction;precondition;sequent calculus;social inequality;walther recursion;whole earth 'lectronic link	Jeremy Gow;Alan Bundy;Ian Green	1999		10.1007/3-540-48242-3_16	fluent calculus;functional calculus;differentiation rules;computer science;artificial intelligence;termination analysis;time-scale calculus;mathematics;proof calculus;situation calculus;programming language;functional programming;lambda cube;natural deduction;calculus of communicating systems;multivariable calculus;algorithm;tuple relational calculus;epsilon calculus	Logic	-14.408587737909727	16.4784586280074	95274
81cfb5122ffe0376b1a5ae10cd8d4b40fff5d178	towards a more general concept of inference		The main objective of this paper is to sketch unifying conceptual and formal framework for inference that is able to explain various proof techniques without implicitly changing the underlying notion of inference rules. We base this framework upon the so-called two-dimensional, i.e., deduction to deduction, account of inference introduced by Tichý in his seminal work The Foundation’s of Frege’s Logic (1988). Consequently, it will be argued that sequent calculus provides suitable basis for such general concept of inference and therefore should not be seen just as technical tool, but philosophically well-founded system that can rival natural deduction in terms of its “naturalness”.		Ivo Pezlar	2014	Logica Universalis	10.1007/s11787-014-0095-3	formal proof;judgment;artificial intelligence;mathematics;proof calculus;sequent calculus;algorithm;rule of inference	Vision	-15.378011372299452	6.806440448208466	95322
35b45442fbf152d194e55d71cb0d96df36639722	two results in term rewriting theorem proving	theorem proving;first order;term rewriting	Two results are presented in this paper. (1) We extend the term rewriting approach to first order theorem proving, as described in [HsD83], to the theory of first order predicate calculus with equality. Consequently, we have showed that the term rewriting method can be as powerful as paramodulation and resolution combined. Possible improvements of efficiency are also discussed.	rewriting	Jieh Hsiang	1985		10.1007/3-540-15976-2_15	discrete mathematics;computer science;first-order logic;fundamental theorem;mathematics;automated theorem proving;programming language;confluence;algorithm;algebra	Logic	-14.388207320302183	16.886929068348238	95384
62635d25627eae5076602ac157bb1eef5df5bff8	reasoning about knowledge and strategies: epistemic strategy logic		In this paper we introduce Epistemic Strategy Logic (ESL), an extension of Strategy Logic with modal operators for individual knowledge. This enhanced framework allows us to represent explicitly and to reason about the knowledge agents have of their own and other agents’ strategies. We provide a semantics to ESL in terms of epistemic concurrent game models, and consider the corresponding model checking problem. We show that the complexity of model checking ESL is not worse than (non-epistemic) Strategy Logic.	modal logic;model checking	Francesco Belardinelli	2014		10.4204/EPTCS.146.4	knowledge management;artificial intelligence;mathematics;epistemic possibility;multimodal logic;algorithm	AI	-17.548908159533973	5.2083651237541835	95404
a1868902a244e9f4d3be958056b3fd0c1bcd4ca4	labeled sequent calculi for modal logics and implicit contractions	03f03;03b45;contraction rule;kripke semantics;modal logics;labeled sequent calculi	The paper settles an open question concerning Negri-style labeled sequent calculi for modal logics and also, indirectly, other proof systems which make (more or less) explicit use of semantic parameters in the syntax and are thus subsumed by labeled calculi, like Brunnler's deep sequent calculi, Poggiolesi's tree-hypersequent calculi and Fitting's prefixed tableau systems. Specifically, the main result we prove (through a semantic argument) is that labeled calculi for the modal logics K and D remain complete w.r.t. valid sequents whose relational part encodes a tree-like structure, when the unique rule which contains an harmful implicit contraction--by which the condition that the premises be less complex than the conclusion is violated--is modified into a contraction-free one respecting the latter condition, thus making the proof-search space finite.	modal logic;sequent calculus	Pierluigi Minari	2013	Arch. Math. Log.	10.1007/s00153-013-0350-y	discrete mathematics;mathematics;linguistics;kripke semantics;algorithm	Logic	-10.477251128906966	13.492288620187685	95468
f158b1be515a5dd391faa5c85ef21a8fd6545aff	defeasible reasoning in sroel: from rational entailment to rational closure		In this work we study a rational extension SROEL(⊓,×) T of the low complexity description logic SROEL(⊓,×), which underlies the OWL EL ontology language. The extension involves a typicality operator T, whose semantics is based on Lehmann and Magidor’s ranked models and allows for the definition of defeasible inclusions. We consider both rational entailment and minimal entailment. We show that deciding instance checking under minimal entailment is in general Π 2 -hard, while, under rational entailment, instance checking can be computed in polynomial time. We develop a Datalog calculus for instance checking under rational entailment and exploit it, with stratified negation, for computing the rational closure of simple KBs in polynomial time.		Laura Giordano;Daniele Theseider Dupré	2018	Fundam. Inform.	10.3233/FI-2018-1698	operator (computer programming);time complexity;discrete mathematics;combinatorics;description logic;datalog;mathematics;negation;logical consequence;defeasible estate;ontology language	AI	-13.639806127883036	15.105858056406996	95517
0c824785c72b54aadc87c8a58b784dec11a63030	some remarks on boolean constraint propagation	boolean constraint propagation;arc consistency;universiteitsbibliotheek;artificial intelligent;propositional logic;difference set	We study here the well-known propagation rules for Boolean constraints. First we propose a simple notion of completeness for sets of such rules and establish a completeness result. Then we show an equivalence in an appropriate sense between Boolean constraint propagation and unit propagation, a form of resolution for propositional logic. Subsequently we characterize one set of such rules by means of the notion of hyper-arc consistency introduced in Mohr & Masini (1988). Also, we clarify the status of a similar, though different, set of rules introduced in Simonis (1989) and more fully in Codognet & Diaz (1996).	complete (complexity);conjunctive normal form;local consistency;propositional calculus;recursive internetwork architecture (rina);software propagation;time complexity;turing completeness;unit propagation;whole earth 'lectronic link	Krzysztof R. Apt	1999		10.1007/3-540-44654-0_5	constraint logic programming;boolean circuit;combinatorics;discrete mathematics;boolean domain;boolean expression;product term;computer science;artificial intelligence;mathematics;propositional calculus;boolean function;constraint satisfaction problem;algorithm;local consistency;difference set	AI	-13.824340024831002	15.377193625032099	95541
e59ef0bc860eabc334c47f7ab964cb0a4c6240dd	yablifying the rosser sentence	humanidades;filosofia etica	In a recent paper (Cieśliński and Urbaniak 2012), Urbaniak and Cieśliński describe an analogue of the Yablo Paradox, in the domain of formal provability. Just as the infinite sequence of Yablo sentences inherit the paradoxical behavior of the liar sentence, an infinite sequence of sentences can be constructed that inherit the distinctive behavior of the Gödel sentence. This phenomenon—the transfer of the properties of self-referential sentences of formal mathematics to their “unwindings” into infinite sequences of sentences—suggests a number of interesting logical questions. The purpose of this paper is to give a precise statement of a conjecture from Cieśliński and Urbaniak (2012) regarding the unwinding of the Rosser sentence, and to demonstrate that this precise statement is false. We begin with some preliminary motivation, introduce the conjecture against the background of some related results, and finally, in the last section, move on to the proof, which adapts a method used by Solovay and Guaspari.	formal proof;gödel numbering;loop unrolling;moravec's paradox;self-reference	Graham Leach-Krouse	2014	J. Philosophical Logic	10.1007/s10992-013-9291-5	philosophy;epistemology;computer science;artificial intelligence;mathematics;linguistics;algorithm	AI	-11.312647926142283	7.392717776352796	95566
09eea6df5fcf660695499dd4378c39e9fd5f567a	a unifying framework for structural properties of csps: definitions, complexity, tractability	constraint satisfaction;constraint solving;structural properties	Literature on Constraint Satisfaction exhibits the definition of several “structural” properties that can be possessed by CSPs, like (in)consistency, substitutability or interchangeability. Current tools for constraint solving typically detect such properties efficiently by means of incomplete yet effective algorithms, and use them to reduce the search space and boost search. In this paper, we provide a unifying framework encompassing most of the properties known so far, both in CSP and other fields’ literature, and shed light on the semantical relationships among them. This gives a unified and comprehensive view of the topic, allows new, unknown, properties to emerge, and clarifies the computational complexity of the various detection problems. In particular, among the others, two new concepts, fixability and removability emerge, that come out to be the ideal characterisations of values that may be safely assigned or removed from a variable’s domain, while preserving problem satisfiability. These two notions subsume a large number of known properties, including inconsistency, substitutability and others. Because of the computational intractability of all the property-detection problems, by following the CSP approach we then determine a number of relaxations which provide sufficient conditions for their tractability. In particular, we exploit forms of language restrictions and local reasoning.	algorithm;approximation;co-np;cobham's thesis;communicating sequential processes;computational complexity theory;constraint satisfaction problem;cryptographic service provider;emergentism;feasible region;functional dependency;literal (mathematical logic);mind;np-completeness;sensor;statistical classification	Lucas Bordeaux;Marco Cadoli;Toni Mancini	2008	J. Artif. Intell. Res.	10.1613/jair.2538	combinatorics;discrete mathematics;constraint satisfaction;computer science;mathematics;constraint satisfaction problem;algorithm	AI	-15.838677033290175	8.185428625648232	95728
707af29fe003b5979ff87536720c95189cbe7837	the well-founded semantics is the principle of inductive definition, revisited	representacion conocimientos;constructive mathematics;formal specification;inductive definition;logic;semantics;punto fijo;intelligence artificielle;ingenieria logiciel;logical programming;semantica;semantique;software engineering;specification formelle;especificacion formal;induccion;well founded semantics;induction;programmation logique;point fixe;logique ordre 1;genie logiciel;artificial intelligence;inteligencia artificial;knowledge representation;representation connaissances;programacion logica;lenguaje formal;fix point;first order logic;formal language;logica orden 1;langage formel	In the past, there have been several attempts to explain logic programming under the well-founded semantics as a logic of inductive definitions. A weakness in all is the absence of an obvious connection between how we understand various types of informal inductive definitions in mathematical text and the complex mathematics of the well-founded semantics. In this paper, we close this gap. We formalize the induction process in the most common principles and prove that the well-founded model construction generalizes them all.	inductive reasoning;logic programming;recursive definition;well-founded semantics;whole earth 'lectronic link	Marc Denecker;Joost Vennekens	1998		10.1007/3-540-49545-2_1	formal language;computer science;artificial intelligence;formal specification;mathematics;semantics;logic;algorithm	PL	-14.619300406368254	15.940031782954627	95828
4a9c0aa600586eac1d630ab705ca8e0d022a403b	a theorem prover for lukaszewicz' open default theory	computational method;theorem prover;default logic	We present here a correct and complete theorem prover for a certain class of formulas in Lukaszewicz' default logic. Whereas many papers are concerned by calculus of extensions for some default logic, we have developed a theorem prover, that means a computation method to check whether a given formula belongs to some extension of a default theory. This theorem prover works in Lukaszewicz' default logic, which ensures that an extension always exists. More precisely, we define a class of formulas called range-restricted Horn default logic. The restriction to Horn logic enables to use SLD-resolution to build proofs. Moreover range restriction, the constraint on variables occurring in the formulas, enables to deal with open defaults by using the unification mechanism. This point is quite original since open defaults are usually replaced by a set of instanciated defaults. Another point is the fact that computing a proof (in a backward chaining way), instead of building an extension (in a forward chaining way or by eliminating conflicts between defaults), allows us to hope a better efficiency in presence of open defaults.	automated theorem proving;default logic	Pascal Nicolas;Béatrice Duval	1995		10.1007/3-540-60112-0_36	discrete mathematics;computer science;artificial intelligence;mathematics;automated theorem proving;skolem normal form;default logic;algorithm	Logic	-13.948695099713092	15.657227371710023	95965
c8cac21a33f55bc00c6e8b92515bd253dfa0bc07	kueker's conjecture for superstable theories		We prove that if every uncountable model of a first-order theory T is co-saturated and T is superstable then T is categorical in some infinite power. Some years ago David Kueker circulated the conjecture that a theory with only (o-saturated uncountable models must be categorical in some infinite power. Throughout this paper a first-order theory T will be called a K-theory if every uncountable model of T is w-saturated. Lachlan proved this with the additional assumption that the theory is w-stable (unpublished). Recently, more progress was made by C. Steinhorn, who proved the conjecture for superstable theories with Skolem functions [St]; and by J. Knight, who proved it for linear orders with unary predicates. We wish to thank David Kueker for his patience in our discussion of this material. We are indebted to Charles Steinhorn and John Baldwin for their many comments, and to the referee for suggesting a simplification in our proof. ?1. Notation and preliminaries. Most of what we utilize from first-order logic is standard and can be found in [CK]. We will always deal with a countable language. The script letters X and X will be reserved for models, M and N their universes. The letters A, B, C,... will designate arbitrary sets; a, b, c,... denote elements. Finite sequences of elements are written as aand finite sequences of variables as xi. Since the distinction between sequences, elements and sets is notationally cumbersome we adopt the following conventions. If d = we write d E A rather than ai e A for all i u003c n. Also, we write B u d instead of B u {ai: i u003c n}. We will use L to denote not only a language but also the set of first-order formulas with symbols from L. We will frequently want to separate the free variables in a formula into two sequences, (p(x, yj) for example. We will do this when we want to replace the sequence V by parameters from some set. A type is a consistent set of formulas with finitely many free variables and possibly parameters. Types will be denoted p, q, r,...; dom(p) is the set from which the parameters in p are taken. By p P A we mean {qp(v, a): cp(v, a-) E p and a E A}. A k-type is a type with k free variables. By Sk(A) we mean the set of all complete k-types whose formulas have parameters in A. Let S(A) = Uku003c 0,Sk(A). The complete type of an Received September 9, 1982; revised March 23, 1983. C) 1984, Association for Symbolic Logic 0022-4812/84/4903-0020/$01 .50		Steven Buechler	1984	J. Symb. Log.		combinatorics;first-order logic;mathematics;collatz conjecture;algebra	Theory	-5.331624307108226	13.58308505789243	96090
8bfa020e2df52f16d2034ee02a98a43b8a0bce85	extensional higher-order resolution	description systeme;system description;automatic proving;complexite calcul;semantics;demostracion automatica;semantica;semantique;higher order;theorem proving;inference rule;demonstration automatique;demonstration theoreme;complejidad computacion;computational complexity;descripcion sistema;demostracion teorema	In this paper we present an extensional higher-order resolution calculus that is complete relative to Henkin model semantics. The treatment of the extensionality principles – necessary for the completeness result – by specialized (goal-directed) inference rules is of practical applicability, as an implentation of the calculus in the Leo-System shows. Furthermore, we prove the long-standing conjecture, that it is sufficient to restrict the order of primitive substitutions to the order of input for-	leo (computer)	Christoph Benzmüller;Michael Kohlhase	1998		10.1007/BFb0054248	higher-order logic;computer science;calculus;mathematics;semantics;automated theorem proving;programming language;computational complexity theory;algorithm;rule of inference	Logic	-14.127774204656214	15.290874028908313	96196
2324bcbfbaad85d6716747e9a602f744c1dcb8f8	a gentzen- or beth-type system, a practical decision procedure and a constructive completeness proof for the counterfactual logics vc and vcs			counterfactual conditional;decision problem;evert willem beth;type system;veritas cluster server	Harrie C. M. de Swart	1983	J. Symb. Log.		discrete mathematics;type system;mathematics;algorithm	PL	-12.6788927802122	14.201121046838324	96272
d363defceaba8c122c02b6932c4d72f4bd9a587d	priestley duality for some algebras with a negation operator		In \cite{Celani} it was introduced the variety of $\lnot$-lattices as bounded#R##N##N#distributive lattice $\boldsymbol{A}$ endowed with a unary operation $\lnot$,#R##N##N#satisfying the axioms $\lnot0\approx1$ and $\lnot\left(  a\vee b\right)#R##N##N#\approx\lnot a\wedge\lnot b$. In this paper we shall apply the Priestley#R##N##N#duality developed in \cite{Celani} to give a unified, short and self-contained#R##N##N#Priestley duality for semi-De Morgan algebras, demi-$p$-lattices, almost#R##N##N#$p$-lattices, and weak Stone algebras.	fenchel's duality theorem	Sergio A. Celani	2007	Contributions to Discrete Mathematics		combinatorics;discrete mathematics;mathematics;geometry;algebra	DB	-8.957852029904947	12.214095021275888	96279
a65e65679985b6776bf65bcd0d832346c2be2f3c	probabilistic description logic programs	modelizacion;canonical model;programacion conjunto respuesta;representacion conocimientos;answer sets;query processing;incertidumbre;answer set programming;uncertainty;traitement requete;probabilistic uncertainty;web semantique;circonscription;interrogation base donnee;normal program;logica descripcion;interrogacion base datos;semantics;intelligence artificielle;logical programming;probabilistic approach;semantica;semantique;circumscription;program optimization;resolucion problema;modelisation;refinement method;programacion lineal;well founded semantics;programmation logique;answer set semantics;mathematical programming;programmation par ensemble reponse;enfoque probabilista;approche probabiliste;web semantica;representation connaissance;linear programming;semantic web;stratified program;programmation lineaire;linear optimization;artificial intelligence;optimisation programme;incertitude;tratamiento pregunta;inteligencia artificial;description logic;probabilistic logic;independent choice logic;methode raffinement;knowledge representation;logique probabiliste;programacion logica;modeling;programmation mathematique;metodo afinamiento;programacion matematica;database query;problem solving;resolution probleme;circonscripcion;logique description;optimizacion programa	Towards sophisticated representation and reasoning techniques that allow for probabilistic uncertainty in the Rules, Logic, and Proof layers of the Semantic Web, we present probabilistic description logic programs (or pdl-programs), which are a combination of description logic programs (or dl-programs) under the answer set semantics and the well-founded semantics with Poole's independent choice logic. We show that query processing in such pdl-programs can be reduced to computing all answer sets of dl-programs and solving linear optimization problems, and to computing the well-founded model of dl-programs, respectively. Moreover, we show that the answer set semantics of pdl-programs is a refinement of the well-founded semantics of pdl-programs. Furthermore, we also present an algorithm for query processing in the special case of stratified pdl-programs, which is based on a reduction to computing the canonical model of stratified dl-programs.	description logic	Thomas Lukasiewicz	2007	Int. J. Approx. Reasoning	10.1016/j.ijar.2006.06.012	dynamic logic;description logic;probabilistic ctl;systems modeling;higher-order logic;uncertainty;stable model semantics;computer science;linear programming;artificial intelligence;theoretical computer science;bunched logic;answer set programming;semantic web;program optimization;formal semantics;canonical model;mathematics;probabilistic logic;axiomatic semantics;well-founded semantics;probabilistic argumentation;probabilistic logic network;multimodal logic;circumscription;algorithm;autoepistemic logic	AI	-18.604476850288293	11.947432821367597	96293
3cf9ffe0fa5d24e94b8e1a4870842d1d9dada5c9	detecting loops during proof search in propositional affine logic	loop detection;affine logic;sequent calculus;proof search;information and computing sciences not elsewhere classified	It is well-known that proof search, in general, does not terminate. In some decidable logics (e.g. intuitionistic propositional logic) it is possible to give a terminating sequent calculus, i.e. one in which a naive backward proof search will always terminate. However, such calculi are not always available, even for decidable logics. In this paper we investigate the incorporation of a loop detection mechanism into an inference system for propositional affine logic (i.e. propositional linear logic with arbitrary weakening). This logic is decidable, but no terminating sequent calculus for it is known. We adapt the history techniques used for intuitionistic and modal logics, but in this case we cannot assume that the context will always be non-decreasing. We show how to overcome this problem, and hence to provide a loop detection mechanism for propositional affine logic.	automated theorem proving	Tatjana Lutovac;James Harland	2006	J. Log. Comput.	10.1093/logcom/exi072	zeroth-order logic;decidability;t-norm fuzzy logics;discrete mathematics;classical logic;resolution;description logic;cut-elimination theorem;many-valued logic;intuitionistic logic;computer science;intermediate logic;mathematics;proof calculus;propositional variable;well-formed formula;noncommutative logic;sequent;programming language;sequent calculus;natural deduction;proof complexity;algorithm;rule of inference;autoepistemic logic;satisfiability	Logic	-12.970396889187942	14.092147795440523	96355
505948c7c6452f07b43bbb631bda765141c0c87b	argumentation schemes and enthymemes	argumentation;philosophy of language;aristotle;logic;langage naturel;aristote;schema;generalisation;dialectique;attribution;dialectic;natural language;philosophy;defeasible argumentation;epistemology;metaphysics;enthymeme;scheme;generalization;deduction	The aim of this investigation is to explore the role of argumentation schemes in enthymeme reconstruction. This aim is pursued by studying selected cases of incomplete arguments in natural language discourse to see what the requirements are for filling in the unstated premises and conclusions in some systematic and useful way. Some of these cases are best handled using deductive tools, while others respond best to an analysis based on defeasible argumentations schemes. The approach is also shown to work reasonably well for weak arguments, a class of arguments that has always been difficult to analyze without the principle of charity producing a straw man.	defeasible reasoning;natural language;requirement	Douglas Walton;Chris Reed	2005	Synthese	10.1007/s11229-005-6198-x	generalization;philosophy;epistemology;mathematics;algorithm	NLP	-14.786790838848393	4.660860236617979	96376
5fca953b34311bfee3dc0e48515e6a75ab3f7ce5	a higher-order logic programming language with constraints	lenguaje programacion;programmation logique avec contrainte;high order logic;semantica operacional;representacion conocimientos;constraint logic programs;programming language;operational semantics;programacion logica con restriccion;logical programming;higher order;sequent calculus;semantique operationnelle;programmation logique;langage programmation;constraint system;constraint logic programming;logique ordre superieur;logic programs;knowledge representation;representation connaissances;programacion logica;higher order logic	We present a framework for the combination of Constraint Logic Programming (CLP) and higher-order Hereditary Harrop Formulas (hoHH). Our aim is to improve the expressiveness of traditional Logic Programming with the benefits of both fields: CLP and hoHH. The result is denoted higher-order Hereditary Harrop Formulas with Constraints (hoHH(C)). The syntax of hoHH is introduced using lambda-terms and is enriched with a basic constraint system. Then an intuitionistic sequent calculus is defined for this combined logic, that preserves the property of an abstract logic programming language. In addition, a sound and complete procedure for goal solving is presented as a transformation system that explains the operational semantics.	logic programming;programming language	Javier Leach Albert;Susana Nieva	2001		10.1007/3-540-44716-4_7	dynamic logic;constraint logic programming;zeroth-order logic;concurrent constraint logic programming;knowledge representation and reasoning;linear logic;constraint programming;discrete mathematics;description logic;higher-order logic;horn clause;constraint satisfaction;computer science;intermediate logic;functional logic programming;mathematics;programming paradigm;inductive programming;fifth-generation programming language;programming language;prolog;logic programming;algorithm	AI	-15.939105249217322	15.474264968066233	96484
dbe85018da84f92cc24288adbec028b8fa0f723d	"""reply to """"subtypes and quantification"""""""				F. Warren Burton	1991	ACM Trans. Program. Lang. Syst.		theoretical computer science;natural language processing;computer science;artificial intelligence	PL	-12.427872526359872	10.309608392668805	96499
bf6202f5789e93a322cefe69019ecde0b8dc918e	hilbert, logicism, and mathematical existence	logicism;set theory;mathematical logic;foundations of mathematics;mathematical existence;richard dedekind;paradoxes;real number system;georg cantor;axiomatics;consistency proofs;models;david hilbert	David Hilbert’s early foundational views, especially those corresponding to the 1890s, are analysed here. I consider strong evidence for the fact that Hilbert was a logicist at that time, following upon Dedekind’s footsteps in his understanding of pure mathematics. This insight makes it possible to throw new light on the evolution of Hilbert’s foundational ideas, including his early contributions to the foundations of geometry and the real number system. The context of Dedekind-style logicism makes it possible to offer a new analysis of the emergence of Hilbert’s famous ideas on mathematical existence, now seen as a revision of basic principles of the “naive logic” of sets. At the same time, careful scrutiny of his published and unpublished work around the turn of the century uncovers deep differences between his ideas about consistency proofs before and after 1904. Along the way, we cover topics such as the role of sets and of the dichotomic conception of set theory in Hilbert’s early axiomatics, and offer detailed analyses of Hilbert’s paradox and of his completeness axiom (Vollständigkeitsaxiom).	axiomatic system;binocular disparity;cantor;coherence (physics);consistency model;emergence;eventual consistency;existential quantification;frege;frege's propositional calculus;hilbert space;list comprehension;logical possibility;naivety;out there;proof of existence;set theory;speculative execution;subject matter expert turing test;system of measurement;van der pol oscillator;wilfried brauer	José Ferreirós	2008	Synthese	10.1007/s11229-008-9347-1	mathematical logic;philosophy;formalism;epistemology;logicism;calculus;pure mathematics;hilbert's second problem;mathematics;foundations of mathematics;real number;set theory	Theory	-11.591023528419832	4.928992092799186	96583
40ff72702751aae17f26795820755aa588f93690	algebraic proofs over noncommutative formulas	linear order;proof complexity;circuit complexity;lower bound;polynomial calculus	We study possible formulations of algebraic propositional proof systems operating with noncommutative formulas. We observe that a simple formulation gives rise to systems at least as strong as Frege, yielding a semantic way to define a Cook-Reckhow (i.e., polynomially verifiable) algebraic analog of Frege proofs, different from that given in Buss et al. (1997) and Grigoriev & Hirsch (2003). We then turn to an apparently weaker system, namely, polynomial calculus (PC) where polynomials are written as ordered formulas (PC over ordered formulas, for short). Given some fixed linear order on variables, an arithmetic formula is ordered if for each of its product gates the left subformula contains only variables that are less-than or equal, according to the linear order, than the variables in the right subformula of the gate. We show that PC over ordered formulas (when the base field is of zero characteristic) is strictly stronger than resolution, polynomial calculus and polynomial calculus with resolution (PCR), and admits polynomial-size refutations for the pigeonhole principle and the Tseitin’s formulas. We conclude by proposing an approach for establishing lower bounds on PC over ordered formulas proofs, and related systems, based on properties of lower bounds on noncommutative formulas (Nisan (1991)). The motivation behind this work is developing techniques incorporating rank arguments (similar to those used in arithmetic circuit complexity) for establishing lower bounds on propositional proofs.	arithmetic circuit complexity;differential algebraic equation;formal verification;frege system;linear algebra;peano axioms;pigeonhole sort;polynomial;propositional proof system;well-formed formula	Iddo Tzameret	2010		10.1007/978-3-642-13562-0_7	circuit complexity;combinatorics;discrete mathematics;noncommutative algebraic geometry;noncommutative geometry;mathematics;upper and lower bounds;proof complexity;total order;algorithm;algebra	Theory	-7.644298566976637	15.215556225696835	96719
a715ef038840aaf2c74a7e107da48492e6afb4a5	a note concerning the axiom of choice	axiom of choice			Boleslaw Sobocinski	1960	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093956555	urelement;zermelo–fraenkel set theory;kripke–platek set theory;axiom of extensionality;choice function;axiom independence;action axiom;axiom of projective determinacy;non-well-founded set theory;scott's trick;mathematics;axiom of choice;rank-into-rank;s;constructive set theory;algebra	Logic	-8.153992708598045	11.847445865734635	96726
c278147b7a68385836a90939a175a9959cabbf0b	self-verifying axiom systems, the incompleteness theorem and related reflection principles		We will study several weak axiom systems that use the Subtraction and Division primitives (rather than Addition and Multiplication) to formally encode the theorems of Arithmetic. Provided such axiom systems do not recognize Multiplication as a total function, we will show that it is feasible for them to verify their Semantic Tableaux, Herbrand, and Cut-Free consistencies. If our axiom systems additionally do not recognize Addition as a total function, they will be capable of recognizing the consistency of their Hilbert-style deductive proofs. Our axiom systems will not be strong enough to recognize their Canonical Reflection principle, but they will be capable of recognizing an approximation of it, called the “Tangibility Reflection Principle”. We will also prove some new versions of the Second Incompleteness Theorem stating essentially that it is not possible to extend our exceptions to the Incompleteness Theorem much further. NOTE TO THE READER: This article was published in the June 2001 of the Journal of Symbolic Logic, pp. 536-596. Subsequent to this paper, I published extensions of this article in the year 2002, 2005 and 2006 issues of the JSL, as well as in the year 2006 and 2007 issues of APAL and in an year-2009 article in Information and Computation. The text in this pdf file is identical to my JSL 2001 article, except that I have used a larger type faunt for the reader’s convenience. ∗Address: Dep of CS, SUNYA, Albany, NY 12222 or dew@cs.albany.edu. Tel. 518-452-0148. Supported by NSF Grant CCR 99-02726	approximation;encode;ibm notes;information and computation;method of analytic tableaux;portable document format	Dan E. Willard	2001	J. Symb. Log.		zermelo–fraenkel set theory;axiom schema;mathematical analysis;calculus;mathematics;reflection principle	Logic	-9.19882726346655	10.256615322499828	96765
6046ce4e905a8083ddba83fd920d0ac75a3e1d16	a temporal semantics for basic logic	many valued logics;basic logic;logic;temporal logics;theorem proving;fuzzy logic;mathematical logic and foundations;philosophy;computational linguistics;łukasiewicz logic;modal logics;many valued logic	In the context of truth-functional propositional many-valued logics, Hajek’s Basic Fuzzy Logic BL [14] plays a major role. The completeness theorem proved in [7] shows that BL is the logic of all continuous t-norms and their residua. This result, however, does not directly yield any meaningful interpretation of the truth values in BL per se. In an attempt to address this issue, in this paper we introduce a complete temporal semantics for BL. Specifically, we show that BL formulas can be interpreted as modal formulas over a flow of time, where the logic of each instant is Łukasiewicz, with a finite or infinite number of truth values. As a main result, we obtain validity with respect to all flows of times that are non-branching to the future, and completeness with respect to all finite linear flows of time, or to an appropriate single infinite linear flow of time. It may be argued that this reduces the problem of establishing a meaningful interpretation of the truth values in BL logic to the analogous problem for Łukasiewicz logic.		Stefano Aguzzoli;Matteo Bianchi;Vincenzo Marra	2009	Studia Logica	10.1007/s11225-009-9192-3	fuzzy logic;dynamic logic;monoidal t-norm logic;zeroth-order logic;t-norm fuzzy logics;mv-algebra;discrete mathematics;linear temporal logic;description logic;higher-order logic;principle of bivalence;philosophy;epistemology;many-valued logic;intuitionistic logic;computer science;intermediate logic;computational linguistics;łukasiewicz logic;computational logic;mathematics;logic;substructural logic;multimodal logic;second-order logic;algorithm;philosophy of logic	Logic	-14.525419411600264	9.806810498499614	96838
24beb0a6c77a5d672c87b273e98cd3661fbafefb	computational semantics of mass terms	computational semantics	Although the formalisms normally used for describing the semantics of natural languages are far from computationally tractable, it is possible to isolate particular semantic phenomena and interpret them within simpler formal systems. Quantified mass noun phrases is one such part. We describe a simple formal system suitable for the interpretation of quantified mass noun phrases. The main issue of this paper is to develop an algorithm for deciding the validity of sentences in the formal system and hence for deciding the validity of natural language inferences where all the involved noun phrases are quantified mass noun phrases. The decision procedure is based on a tableau calculus. I N T R O D U C T I O N A formal semantics for a part of a natural language attempts to describe the truth conditions for sentences, or propositions expressed by sentences, in model theoretic terms, and thereby also the relation of valid inferences between sentences. From the point of view of computational linguistics and natural language understanding, it is important whether this relation of entailment can be made computational. In general, the question must be answered in the negative. All proposed formal semantics of, say, English are at least as complex as first order logic and hence at best semi-decidable, which means that if a sentence 13 is a logical consequence of a set of sentences Y., then there exists a proof for [3 from ~, but no effective way to find such a proof. Several proposals use even more complex logics, like the higher order intensional logic used in Montague grammar, which has no deductive theory at all. We will not oppose to the view that English incorporates at least the power of first order logic and that even more complex formalisms may be needed to represent the meaning of all aspects of English. But we believe there are two different possible strategies when one is to study one particular semantic phenomenon in natural languages. The first one is to try to interpret the particular phenomenon into a system that attempts to capture all semantic aspects of the natural language. The other slrategy is to try to isolate the particular semantic phenomenon one wants to study and to build a semantic interpretation suited for this particular phenomenon. By following the latter strategy it might be possible to find systems simpler than even first order logic that reflect interesting semantic phenomena, and in particular to come up with systems that are computationally tractable. Quantified mass noun phrases is one such phenomenon that can be easily isolated. The properties particular for the semantics of quantified mass terms have been difficult to capture in extensions of systems already developed for count terms, like first order logic. However, if one isolate the mass terms and tries to interpret only them, it is possible to build a model where their typical properties fall out naturally. We have earlier proposed such a system and shown it to have a decidable logic (L0nning, 1987). We repeat the key points in the two following sections. The main point of this paper is a description of an algorithm for deciding validity of sentences and inferences involving quantified mass terms. The strategy of isolating parts of a natural language and giving it a semantics that can be computational is of course the strategy underlying all computational uses of semantics. For example, in queries towards data bases one disregards all truly quantified sentences, and use only atomic sentences and pseudo quantified sentences where e.g. for all means for all individuals represented in the data base. The system we present here contains genuine quantifiers like all water and much water, but contain other restrictions compared to full first order logic. In particular the mass quantifiers behave simpler with respect to scope phenomena than count quantifiers. R E P R E S E N T I N G Q U A N T I F I E D	algorithm;cobham's thesis;computation;computational linguistics;computational semantics;database;decision problem;first-order logic;formal system;intensional logic;mass effect trilogy;method of analytic tableaux;montague grammar;natural language understanding;quantifier (logic);semantic interpretation;semantics (computer science);semiconductor industry;theory (mathematical logic);undecidable problem	Jan Tore Lønning	1989			computational resource;formal semantics;operational semantics;asymptotic computational complexity;denotational semantics;computational semantics	NLP	-12.70510713458633	8.021159732188146	96861
eda14f573a7e86be2f702c23ddee02d30c0f74e3	a framework for computer-aided design of educational domain models		Many educational applications, from tutoring to problem generation, are built on a formal model of the operational knowledge for a given domain. These domain models consist of rewrite rules that experts apply to solve problems in the domain; e.g., factoring, ax+bx→ (a+b)x, is one such rule for K-12 algebra. Domain models currently take hundreds of hours to create, and they differ widely in how well they meet educational objectives such as maximizing problem-solving efficiency. Rapid, objective-driven creation of domain models is a key challenge in the development of personalized educational tools. This paper presents RuleSy, a new framework for computer-aided authoring of domain models for educational applications. RuleSy takes as input a set of example problems (e.g., x+1 = 2), a set of basic axiom rules for solving these problems (e.g., factoring), and a function expressing the desired educational objective. Given these inputs, it first synthesizes a set of sound tactic rules (e.g., combining like terms) that integrate multiple axioms into advanced problem-solving strategies. The axioms and tactics are then searched for a domain model that optimizes the objective. RuleSy is based on new algorithms for mining tactic specifications from examples and axioms, synthesizing tactic rules from these specifications, and selecting an optimal domain model from the axioms and tactics. We evaluate RuleSy on the domain of K-12 algebra, finding that it recovers textbook tactics and domain models, discovers new tactics and models, and outperforms a prior tool for this domain by orders of magnitude. But RuleSy generalizes beyond K-12 algebra: we also use it to (re)discover proof tactics for propositional logic, demonstrating its potential to aid in designing models for a variety of educational domains.	algorithm;computer-aided design;domain model;ibm notes;integer factorization;mathematical model;personalization;problem solving;propositional calculus;rewrite (programming);rewriting	Eric Butler;Emina Torlak;Zoran Popovic	2018		10.1007/978-3-319-73721-8_7	domain model;theoretical computer science;factoring;computer science;computer aided design	AI	-18.595515863705025	16.057372012758545	96920
1f349556fda1898ecf4fa3d66c4a7d0bac09e26c	two-level hybrid: a system for reasoning using higher-order abstract syntax	logical framework;variable binding;isabelle hol;theorem proving;induction;hybrid system;higher order abstract syntax;interactive theorem proving	Logical frameworks supporting higher-order abstract syntax (HOAS) allow a direct and concise specification of a wide variety of languages and deductive systems. Reasoning about such systems within the same framework is well-known to be problematic. We describe the new version of the Hybrid system, implemented on top of Isabelle/HOL (as well as Coq), in which a de Bruijn representation of λ-terms provides a definitional layer that allows the user to represent object languages in HOAS style, while offering tools for reasoning about them at the higher level. We briefly describe how to carry out two-level reasoning in the style of frameworks such as Linc, and briefly discuss our system’s capabilities for reasoning using tactical theorem proving and principles of induction and coinduction.	automated theorem proving;coinduction;coq (software);de bruijn graph;definition;hol (proof assistant);higher-order abstract syntax;hybrid system;isabelle;linc;logical framework	Alberto Momigliano;Alan J. Martin;Amy P. Felty	2008	Electr. Notes Theor. Comput. Sci.	10.1016/j.entcs.2007.09.019	logical framework;computer science;theoretical computer science;mathematics;automated theorem proving;reasoning system;programming language;deductive reasoning;algorithm;hybrid system	PL	-17.76833463883384	16.787470773880624	97020
8f734ff1939402750aae6bf6ce5bf842d5a05d46	negative-existentially complete structures and definability in free extensions		Let R be a commutative ring with 1 and R [ X 1 , …, X n ] the polynomial ring in n variables over R . Then for any relation f ( X ) = 0 in R [ X ] there exists a conjunction of equations φ f such that f ( X ) = 0 holds in R [ X ] iff φ f holds in R ; φ f is of course the formula saying that all the coefficients of f ( X ) vanish. Moreover, φ f is independent of R and formed uniformly for all polynomials f up to a given formal degree. In this paper we investigate first order theories T for which a similar phenomenon holds. More precisely, we let T AH be the universal Horn part of a theory T and look at free extensions of models of T in the class of models of T AH . We ask whether an atomic relation t 1 ( X, a ) = t 2 ( X, a ) or R ( t 1 ( X, a ), …, t n ( X, a )) in can be equivalently expressed by a finite or infinitary formula φ( a ) in , such that φ( y ) depends only on t i { X, y ) and not on or a 1 , …, a m ∈ A . We will show that for a wide class of theories T “defining formulas” φ( y ) in this sense exist and can be taken as infinite disjunctions of positive existential formulas.		Volker Weispfenning	1976	J. Symb. Log.		algorithm	Logic	-6.593433977039252	13.716121356398862	97108
4b4ee5224c8f7678f5afaf5036f39f1e8583a76c	parallelism and cubes in c2?c-geometries (errata)		Because of a mistake inherited from [2], some statements of [1] are wrong. Indeed, in Lemma 1 of [2] it is claimed that, for a certain class of diagrams, including Cn, quotients of truncations are truncations of quotients; but this is false (as pointed out to me by C. Huybrechts). That mistake has no important consequence in [2], but Lemma 1 of [2] is exploited in [1], thus causing a number of mistakes. The necessary corrections in [1] are listed below. In the following, when a correction amounts to inserting (cancelling) a few words, the words to insert (cancel) are in italic (boldface), respectively. PAGE 183: Abstract, first line:quotients oftruncations of almost-thin . . .. Same correction on page 184, line−10. PAGE 186: Remove lines−8 and−7 and cancel the words all its quotients and from the statements of Lemma 2.4 and Proposition 2.5. Accordingly, the first half of the proof of Proposition 2.5 (page 187) should be dropped. PAGE 188: Theorem 2.7: ‘Theuniversal cover of thegeometry0 . . .’. Accordingly, cancel the last sentence of the proof of this theorem ( By Proposition 2.5, the same . . .). PAGE 190: Cancel line 15 and Proposition 3.6 and rewrite Corollary 3.7 as follows: A subgroup. . . defines a quotient of H(A) admitting the natural parallelismonly if . . .’. Accordingly, cancel the words contrary to Proposition 3.6at the end of the proof of Corollary 3.7. Still on page 190, the initial sentence of paragraph 3.2 should be cancelled. ( A l quotients of Hamming geometries admit the natural parallelism (Proposition 3.6). ) PAGE 194: Cancel the words and only if from the statement of Corollary 3.11. Accordingly, cancel the first sentence of the proof of that corollary. PAGE 196: Theorem 5.2 holds for the universal 2-cover of 1 but it might be false for1. PAGE 199: Proposition 6.6: ‘LetH be. . .. Nonaffine quotients of H admitting the natural parallelism exist except when. . .’. Accordingly, at the second line of the proof of that proposition: ‘every quotient of H admitting the natural parallelismis . . .’. PAGE 202: Drop the comment before Proposition 6.16. PAGE 203: Lemma 6.18 remains valid, but it should be proved by a generalization of the argument used for Lemma 6.17.	carrier-to-noise ratio;cubes;diagram;difference quotient;parallel computing;rewrite (programming);truncation;window function	Antonio Pasini	1998	Eur. J. Comb.	10.1006/eujc.1998.0253	theoretical computer science;algorithm	Theory	-4.693648313964467	14.140393675932753	97143
e887a8c9b201b9c0fe88e505d9cbda1c3501356d	default theory for well founded semantics with explicit negation	well founded semantics;logic programs	1 I n t r o d u c t i o n A relat ionship between logic p rograms and default theories was first proposed in [3] and [4]. The idea is to t rans la te every p rogram rule into a default one and then compare extensions of the default theory with the semantics of the cor responding program. In [4], s table model semantics [5] was shown equivalent to a special case of default theories in the sense of Reiter [15]. This result was generalized in [6] to p rograms with explicit negat ion and answer-set semantics, where they claim tha t explicit negat ion corresponds in fact to classical negat ion used in default theories.	default logic;linear algebra;stable model semantics;theory	Luís Moniz Pereira;José Júlio Alferes;Joaquim Nunes Aparício	1992		10.1007/BFb0023437	discrete mathematics;stable model semantics;action semantics;game semantics;formal semantics;mathematics;programming language;well-founded semantics;operational semantics;algorithm	NLP	-14.442804936770683	9.789094815671033	97561
77cb44ac27fd76cc0cd520d3f9a4b42670346a3e	information dynamics and uniform substitution	information update;public announcement logic;schematic validity;uniform substitution;dynamic epistemic logic;decidability;substitution core	The picture of information acquisition as the elimination of possibilities has proven fruitful in many domains, serving as a foundation for formal models in philosophy, linguistics, computer science, and economics. While the picture appears simple, its formalization in dynamic epistemic logic reveals subtleties: given a valid principle of information dynamics in the language of dynamic epistemic logic, substituting complex epistemic sentences for its atomic sentences may result in an invalid principle. In this article, we explore such failures of uniform substitution. First, we give epistemic examples inspired by Moore, Fitch, and Williamson. Second, we answer affirmatively a question posed by van Benthem: can we effectively decide when every substitution instance of a given dynamic epistemic principle is valid? In technical terms, we prove the decidability of this schematic validity problem for public announcement logic (PAL and PAL-RC) over models for finitely many fully introspective agents, as well as models for infinitely many arbitrary agents. The proof of this result illuminates the reasons for the failure of uniform substitution.	computer science;dynamic epistemic logic;epistemic modal logic;fitch notation;pal;schematic;substitution (logic);substitution matrix	Wesley H. Holliday;Tomohiro Hoshi;Thomas F. Icard	2013	Synthese	10.1007/s11229-013-0278-0	decidability;epistemic modal logic;epistemology;theoretical computer science;mathematics;algorithm	AI	-14.082494339819764	4.566691647869704	97589
bd5b9a071f31f675944b3ae160d8126b9fbbc826	semantic foundation for preferential description logics	description logics;semantics;presentation;artificial intelligence	Description logics are a well-established family of knowledge representation formalisms in Artificial Intelligence. Enriching description logics with non-monotonic reasoning capabilities, especially preferential reasoning as developed by Lehmann and colleagues in the 90’s, would therefore constitute a natural extension of such KR formalisms. Nevertheless, there is at present no generally accepted semantics, with corresponding syntactic characterization, for preferential consequence in description logics. In this paper we fill this gap by providing a natural and intuitive semantics for defeasible subsumption in the description logic ALC. Our semantics replaces the propositional valuations used in the models of Lehmann et al. with structures we refer to as concept models. We present representation results for the description logic ALC for both preferential and rational consequence relations. We argue that our semantics paves the way for extending preferential and rational consequence, and therefore also rational closure, to a whole class of logics that have a semantics defined in terms of first-order relational structures.	artificial intelligence;defeasible reasoning;description logic;first-order predicate;knowledge representation and reasoning;lambda lifting;non-monotonic logic;preferential entailment;semantics (computer science);subsumption architecture	Katarina Britz;Thomas Andreas Meyer;Ivan José Varzinczak	2011		10.1007/978-3-642-25832-9_50	natural language processing;t-norm fuzzy logics;artificial intelligence;mathematics;algorithm	AI	-15.22275264774297	8.860931407491627	97666
1fcd2d5a77fa7375d43b32cc1db3864deca346d5	embedding deduction modulo into a prover		Deduction modulo consists in presenting a theory through rewrite rules to support automatic and interactive proof search. It induces proof search methods based on narrowing, such as the polarized resolution modulo. We show how to combine this method with more traditional ordering restrictions. Interestingly, no compatibility between the rewriting and the ordering is requested to ensure completeness. We also show that some simplification rules, such as strict subsumption eliminations and demodulations, preserve completeness. For this purpose, we use a new framework based on a proof ordering. These results show that polarized resolution modulo can be integrated into existing provers, where these restrictions and simplifications are present. We also discuss how this integration can actually be done by diverting the main algorithm of state-of-the-art provers. Whatever their applications, proofs are rarely searched for without context: mathematical proofs rely on set theory, or Euclidean geometry, or arithmetic, etc.; proofs of program correctness are done using e.g. pointer arithmetic and/or theories defining data structures (chained lists, trees, . . . ); concerning security, theories are used for instance to model properties of encryption algorithms. It is therefore essential to have theoretical foundations and practical methods that handle theories conveniently and efficiently. For this purpose, there are two directions: to develop methods that are really specific to a particular theory; or to develop a generic framework that can handle all theories. The first option is appealing for efficiency reasons: for instance, combining a SAT solver with the Simplex method leads to very powerful SMT solvers for linear arithmetic. However, developing methods for new theories is hard. Even the combination of such specific methods is not trivial, although there have been a lot of interesting results in that direction in the recent years. In this paper, we are more interested in the second option: having a generic way to handle theories efficiently. A naive way to do so would be to use an axiomatization of the theory, but in general, this approach would be really inefficient for automated proving. Somehow, we need to present the theory so as to take advantage of its properties. A first idea is to use the consistency of the theory. When proving a goal in a consistent theory by refutation, resolving the clauses of the theory is useless, since it will not bring out a contradiction. This idea defines the set-of-support	automated theorem proving;axiomatic system;boolean satisfiability problem;correctness (computer science);data structure;decision problem;denotational semantics;embedded system;encryption;first-order logic;first-order predicate;interactive proof system;level of detail;modulo operation;natural deduction;one-way function;peano axioms;pointer (computer programming);quantum superposition;rewrite (programming);rewriting;set theory;simplex algorithm;solver;subsumption architecture;superposition calculus	Guillaume Burel	2010		10.1007/978-3-642-15205-4_15	first-generation programming language;very high-level programming language;language primitive;object language;specification language;theoretical computer science;mathematics;programming language;programming language specification;algorithm	Logic	-14.476058809895301	16.626206486249878	97886
ab4abbb3c859a7af264f4815e701d3111af356cd	a topological interpretation of a philosophical polarity in structural validation of discrete event system models	discrete event system			Jurgen Martens;Ferdi Put	2000			mathematics;topology	Logic	-12.0919555350676	10.44451689486877	98022
c1657efc7bae7d181d5caf4c20f3e2bdd1831f1c	on the computability power of membrane systems with controlled mobility	computational completeness;controlled mobility;restricted division operation;inhibitive exocytosis;restricted division;restricted exocytosis;forced endocytosis;turing completeness;computability power;membrane system;enriched model;inhibitive endocytosis	computational completeness;controlled mobility;restricted division operation;inhibitive exocytosis;restricted division;restricted exocytosis;forced endocytosis;turing completeness;computability power;membrane system;enriched model;inhibitive endocytosis	computability	Shankara Narayanan Krishna;Bogdan Aman;Gabriel Ciobanu	2012		10.1007/978-3-642-30870-3_63	discrete mathematics;calculus;mathematics;algorithm	EDA	-11.805881884323396	16.244291361383105	98173
3d144835dc3b3ff1056218151fda877660151d10	on sequentially compact subspaces of ℝ without the axiom of choice	ordered set;axiom of choice;weak forms of the axiom of choice;tychonoff product;sequential compactness;compactness	We show that the property of sequential compactness for subspaces of R is countably productive in ZF. Also, in the language of weak choice principles, we give a list of characterizations of the topological statement ‘sequentially compact subspaces of R are compact’. Furthermore, we show that forms 152 (= every non-well-orderable set is the union of a pairwise disjoint well-orderable family of denumerable sets) and 214 (= for every family A of infinite sets there is a function f such that for all y ∈ A, f (y) is a nonempty subset of y and | f (y)| = א0) of Howard and Rubin are equivalent.	zermelo–fraenkel set theory	Kyriakos Keremedis;Eleftherios Tachtsis	2003	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1091030855	urelement;zermelo–fraenkel set theory;axiom schema;kripke–platek set theory;axiom of extensionality;mathematical analysis;discrete mathematics;choice function;topology;morse–kelley set theory;axiom of projective determinacy;general set theory;scott's trick;mathematics;axiom of choice;equinumerosity;compact space;s;constructive set theory	Theory	-7.574364646325851	12.076247025973752	98199
1a90799ebb4c64b9e01a61bd78f0e92a4c15f45b	the complexity of circumscription in dls	liverpool;repository;exact computation;university;description logic;default logic	As fragments of first-order logic, Description logics (DLs) do not provide nonmonotonic features such as defeasible inheritance and default rules. Since many applications would benefit from the availability of such features, several families of nonmonotonic DLs have been developed that are mostly based on default logic and autoepistemic logic. In this paper, we consider circumscription as an interesting alternative approach to nonmonotonic DLs that, in particular, supports defeasible inheritance in a natural way. We study DLs extended with circumscription under different language restrictions and under different constraints on the sets of minimized, fixed, and varying predicates, and pinpoint the exact computational complexity of reasoning for DLs ranging from ALC to ALCIO and ALCQO. When the minimized and fixed predicates include only concept names but no role names, then reasoning is complete for NExp. It becomes complete for NP when the number of minimized and fixed predicates is bounded by a constant. If roles can be minimized or fixed, then complexity ranges from NExp to undecidability.	autoepistemic logic;circumscription (logic);computational complexity theory;default logic;defeasible reasoning;description logic;first-order logic;first-order reduction;nexptime;np (complexity);undecidable problem	Piero A. Bonatti;Carsten Lutz;Frank Wolter	2009	J. Artif. Intell. Res.	10.1613/jair.2763	discrete mathematics;description logic;computer science;artificial intelligence;theoretical computer science;non-monotonic logic;mathematics;default logic;algorithm	AI	-17.302363311474632	12.061064630427127	98229
4dfe9d1399d3d145243476b09e3c8a13908d58e6	combined topological and directional relations based motion event predictions	spatio temporal relations;motion events;spatial predicates;spatiotemporal predictions	Spatial changes plays a fundamental role in modeling the spatio-temporal relations and spatio-temporal or motion event predictions. These predictions can be made through the conceptual neighborhood graph using the common sense continuity. This paper investigates that the extension in the temporal interval can effect the whole spatiotemporal relation and motion events. Spatio-temporal predicates form a unit of a motion event. We use the point temporal logic to extend the spatial predicates into the spatio-temporal or motion event predicates.		Nadeem Salamat;El-hadi Zahzah	2011		10.1007/978-3-642-21786-9_31	computer vision;discrete mathematics;pure mathematics;mathematics	Robotics	-15.492279476889525	10.465124051010257	98262
91836eb73df9d3ac02de78b48e3862ab5ed01529	the epistemic structure of de finetti's betting problem		De Finetti’s conception of events is one of the most distinctive aspects of his theory of probability, yet it appears to be somewhat elusive. The purpose of this note is to set up a formal framework in which a rigorous characterisation of this notion, and its cognate modelling assumptions, gives rise to a detailed formalisation of the betting problem which underlies the celebrated Dutch Book Argument. As our main result shows, this refinement captures an intuitive condition which de Finetti imposed on the betting problem, namely that it is irrational to bet on an event which may be true, but whose truth will never be ascertained by the players.	de-identification;refinement (computing)	Tommaso Flaminio;Hykel Hosni	2012			calculus;mathematical economics;cognate;irrational number;dutch book;mathematics	Logic	-12.669769101384505	4.450706560326075	98268
a83c4fda5e875e3bf8a032513b94412df67843b8	a galois-connection between myers-briggs' type indicators and szondi's personality profiles		We propose a computable Galois-connection between Myers-Briggs’ Type Indicators (MBTIs), the most widely-used personality measure for non-psychiatric populations (based on C.G. Jung’s personality types), and Szondi’s personality profiles (SPPs), a less well-known but, as we show, finer personality measure for psychiatric as well as non-psychiatric populations (conceived as a unification of the depth psychology of S. Freud, C.G. Jung, and A. Adler). The practical significance of our result is that our Galois-connection provides a pair of computable, interpreting translations between the two personality spaces of MBTIs and SPPs: one concrete from MBTI-space to SPP-space (because SPPs are finer) and one abstract from SPP-space to MBTI-space (because MBTIs are coarser). Thus Myers-Briggs’ and Szondi’s personality-test results are mutually interpretable and inter-translatable, even automatically by computers.	"""computable function;computer;graph drawing;latex;pgf/tikz (""""pgf and tikz"""");population;self-propelled particles;unification (computer science)"""	Simon Kramer	2014	CoRR		artificial intelligence;mathematics	NLP	-8.232265909613156	9.445893226066662	98298
62088333a202267619ec0fea93647a1068ab5f61	scalable temporal reasoning	temporal reasoning	We introduce two mechanisms for scaling computations in the framework of temporal reasoning. The first one addresses abstraction at the methodological level. Operators are defined that engender flexible switching between different granularities of temporal representation structures. The second one accounts for abstractions at the interface level of a temporal reasoning engine. Various generalizations of temporal relations are introduced that approximate more fine-grained representations by abstracting away irrelevant details.	approximation algorithm;color gradient;computation;local consistency;natural language;relevance;scalability;semantic interpretation;semantic reasoner;smoothing;software propagation;viz: the computer game	Steffen Staab;Udo Hahn	1999			natural language processing;computer science;theoretical computer science;algorithm	AI	-17.909179083070512	8.905763453006678	98335
ee77de18497bf52710dc8c82014268bc921bc9cc	on regular paths with counting and data tests		Regular path expressions represent the navigation core of the XPath query language for semi-structured data (XML), and it has been characterized as the First Order Logic with Two Variables (FO2). Data tests refers to (dis)equality comparisons on data tree models, which are unranked trees with two kinds of labels, propositions from a finite alphabet, and data values from a possibly infinite alphabet. Node occurrences on tree models can be constrained by counting/arithmetic constructors. In this paper, we identify an EXPTIME extension of regular paths with data tests and counting operators. This extension is characterized in terms of a closed under negation Presburger tree logic. As a consequence, the EXPTIME bound also applies for standard query reasoning (emptiness, containment and equivalence).		Everardo Bárcenas;Edgard Benítez-Guerrero;José de Jesús Lavalle-Martínez	2016	Electr. Notes Theor. Comput. Sci.	10.1016/j.entcs.2016.11.002	combinatorics;discrete mathematics;mathematics;algorithm	Theory	-7.225139638131033	17.62427086198806	98351
27411af1050417bfd59fd0ff2e76bed2d3853e29	gentzen-type systems and resolution rules. part i. propositional logic	propositional logic;type system	Without Abstract	propositional calculus;type system	Grigori Mints	1988		10.1007/3-540-52335-9_55	modal logic;propositional formula;dynamic logic;zeroth-order logic;t-norm fuzzy logics;modal μ-calculus;discrete mathematics;classical logic;resolution;description logic;horn-satisfiability;tautology;many-valued logic;interval temporal logic;intuitionistic logic;intermediate logic;first-order logic;propositional variable;well-formed formula;atomic formula;algorithm;autoepistemic logic	AI	-13.065686771151462	13.199587405664738	98401
7b4d364c7428db8cf7718346259ec73e3690ff41	using last fixed points to characterize formal computations of non-deterministic equations	fixed point	We extend the least fixed point techniques to the case of non-deterministic equations. Commutative idempotent semigroups in the category of ω-complete posets are used as non-deterministic domains.	computation;non-deterministic turing machine	Axel Poigné	1981		10.1007/3-540-10699-5_118	fixed-point iteration;mathematical optimization;mathematical analysis;discrete mathematics;mathematics;fixed point;least fixed point	Logic	-5.913235503858469	17.41289503202191	98468
42a4ecd224bf869d738f6fbe1e0c37b29935416e	sequent calculus system for rough sets based on rough stone algebras	set theoretic operation;approximation set;algebraic semantics sequent calculus system rough set theory rough stone algebra approximation set boolean algebra set theoretic operation proposition logic;sequent calculus system;lattices;rough set theory;logic;rough stone algebras algebraic semantics logic rough set theory;algebraic semantics;set theory;boolean algebra;sequent calculus;fuzzy logic;approximation theory;propositional logic;calculus;logic functions;proposition logic;rough stone algebras;extraterrestrial phenomena;calculus rough sets logic functions set theory boolean algebra lattices fuzzy logic artificial intelligence extraterrestrial phenomena;rough sets;artificial intelligence;rough stone algebra;rough set;process algebra;process algebra rough set theory approximation theory boolean algebra	Many researchers study rough sets from the point of description of the rough set pairs (a rough set pair is also called a rough set), i.e., . An important result is that the collection of rough sets of an approximation space can be made into a Stone algebra. The collection of all subsets of a set forms a Boolean algebra under the usual set theoretic operations, a model for classical proposition logic are Boolean algebras. So, it is reasonable to assume that rough Stone algebras form a class of algebras appropriate for a logic of rough sets. In this paper, a sequent calculus system corresponding to rough Stone algebra, is proposed. The syntax and semantics are defined. The soundless and completeness are proved.	approximation;boolean algebra;rough set;sequent calculus;set theory	Jianhua Dai;Weidong Chen;Yunhe Pan	2005	2005 IEEE International Conference on Granular Computing	10.1109/GRC.2005.1547326	combinatorics;discrete mathematics;rough set;computer science;machine learning;stone's representation theorem for boolean algebras;mathematics;interior algebra;field of sets	DB	-10.834711764249546	10.529978687532669	98504
12924b15948509b1d6567b6d0f1fd7855be1536b	npi licensing, strawson entailment, and context dependency	implication logique;contraintes;negatif;analyse fonctionnelle;conditional;legitimation;semantics;negative;superlative;semantique;conditionnel;adversatif;anglais;functional analysis;superlatif;context dependent;item de polarite;construction syntaxique;fauconnier ladusaw;adversative	The Fauconnier-Ladusaw analysis of negative polarity licensing (that NPIs are licensed in the scope of downward entailing operators) continues to be the benchmark theory of negative polarity. In this paper, I consider some of the moves that are needed to maintain its basic intuition in some recalcitrant arenas: negative polarity licensing by only, adversatives, superlatives, and conditionals. We will see that one has to (i) use a notion of entailment that I call Strawson Entailment, which deals with presuppositions in a particular way, and (ii) prohibit (even natural) context change during an inference. The purpose of this paper is to investigate how to justify these constraints and to see in detail how the semantics of the problematic constructions has to work in order for these moves to successfully rescue the Fauconnier-Ladusaw analysis. I will first show the two assumptions at work in the analysis of NPI licensing by only and adversatives (building on proposals by Kadmon & Landman). I then turn to NPI licensing in the antecedent of conditionals. The standard Stalnaker-Lewis semantics for conditionals— ifp, q is true iff q is true in the closest p-woild(s)—might make one suspect that once one has an explanation for NPI licensing by superlatives, that would immediately deliver an explanation for NPI licensing in conditionals. But it turns out that the particular analysis that seems appropriate for NPI licensing by superlatives cannot plausibly carry over to conditionals. Instead, one does better by appealing to an alternative analysis of conditionals, one that I have elsewhere argued for on independent grounds.	benchmark (computing);lambda calculus;multi-licensing;new product development;preferential entailment;process (computing);uzi landman	Kai von Fintel	1999	J. Semantics	10.1093/jos/16.2.97	functional analysis;philosophy;context-dependent memory;semantics;linguistics;negative	NLP	-13.739619553285332	4.614509293687018	98563
f3b2230bf35fe62a0d13b2bb845be54f00178501	probabilistic negation: fine-grained preservation and distortion of truth in affirmative and negated statements			distortion	Stephanie Huette;Sarah E. Anderson;Michael J. Spivey	2013			probabilistic logic;negation;distortion;artificial intelligence;mathematics	NLP	-12.20931144579622	11.964079014527305	98747
194cd6ffbd53f6fc320eabd2b94595218236db0e	a complexity question in justification logic	satisfiability;upper bound;computational complexity;justification logic;lower bound	Bounds for the computational complexity of major justification logics were found in papers by Buss, N. Krupski, Kuznets, and Milnikel: logics J, J4, JT, LP and JD, were established to be Σ 2 -complete. A corresponding lower bound is also known for JD4, the system that includes the consistency axiom and positive introspection. However, no upper bound has been established so far for this logic. Here, the missing upper bound for the complexity of JD4 is established through an alternating algorithm. It is shown that using Fitting models of only two worlds is adequate to describe JD4; this helps to produce an effective tableau procedure and essentially is what distinguishes the new algorithm from existing ones.	algorithm;computational complexity theory;curve fitting;introspection;jd - java decompiler;jt (visualization format);long division	Antonis Achilleos	2011		10.1007/978-3-642-20920-8_7	discrete mathematics;mathematics;linguistics;upper and lower bounds;algorithm	AI	-10.261325183526031	13.777105033860328	98751
44e8921fe1e82925023570869c5077487de8b35c	intricate axioms as interaction axioms	modal logic;epistemic logic;definability of modalities;interaction axiom	In epistemic logic, some axioms dealing with the notion of knowledge are rather convoluted and difficult to interpret intuitively, even though some of them, such as the axioms .2 and .3, are considered to be key axioms by some epistemic logicians. We show that they can be characterized in terms of understandable interaction axioms relating knowledge and belief or knowledge and conditional belief. In order to show it, we first sketch a theory dealing with the characterization of axioms in terms of interaction axioms in modal logic. We then apply the main results and methods of this theory to obtain specific results related to epistemic and doxastic logics.	description logic;doxastic logic;epistemic modal logic;peano axioms	Guillaume Aucher	2015	Studia Logica	10.1007/s11225-015-9609-0	modal logic;discrete mathematics;internal set theory;frame problem;separation axiom;epistemic modal logic;armstrong's axioms;philosophy;epistemology;reverse mathematics;mathematics;peano axioms;theory;algorithm	AI	-15.07717167490628	6.4266579289178445	98932
beeb02a436bfdbae8c34091db248053da95795e0	finding the description of structure by counting method: a case study	satisfiability;sat;integer sequence;family of propositional formulae;superpositional graph	"""This paper presents a method to generate characterizing definitions for finite and parameterized structures. In particular, the method is applied to generate a conjecture for the properties characterizing a special class of graphs, called superpositional graphs.#R##N##R##N#The method can be used if the exact set of properties that describes a given finite structure cannot be found by pure thought but we can find the number of objects for small values of the parameter.#R##N##R##N#The next step is to codify the objects as assignments to a set of propositional variables, and the candidate properties as propositional formulae, in such a way that an object satisfies the property if and only if the assignment satisfies the formula. The main idea of this method is to find models that do not fit with the current approximation of the description of the structure and stepwise refine the logical description.#R##N##R##N#Finally, we """"translate"""" the logical description into a mathematical one and prove it."""		Ahti Peder;Mati Tombak	2011		10.1007/978-3-642-18381-2_38	combinatorics;discrete mathematics;mathematics;propositional variable;integer sequence;algorithm;satisfiability	NLP	-7.403635316245267	14.629376800732262	99064
c4bc2f7e04e02107aa6eaa0c811c3c046efbbc14	hardness results for learning first-order representations and programming by demonstration	inductive logic programming;programming by demonstration;input output;first order;deterministic finite automata;learning problems;description logic;computational learning theory;learning deterministic finite automata	Learning from “structured examples” is necessary in a number of settings, including inductive logic programming. Here we analyze a simple learning problem in which examples have non-trivial structure: specifically, a learning problem in which concepts are strings over a fixed alphabet, examples are deterministic finite automata (DFAs), and a string represents the set of all DFAs that accept it. We show that solving this “dual” DFA learning problem is hard, under cryptographic assumptions. This result implies the hardness of several other more natural learning problems, including learning the description logic CLASSSIC from subconcepts, and learning arity-two “determinate” function-free Prolog clauses from ground clauses. The result also implies the hardness of two formal problems related to the area of “programming by demonstration”: learning straightline programs over a fixed operator set from input-output pairs, and learning straightline programs from input-output pairs and “partial traces”.	automata theory;automated theorem proving;cryptography;description logic;deterministic finite automaton;finite-state machine;inductive logic programming;programming by demonstration;prolog;property (philosophy);tracing (software)	William W. Cohen	1998	Machine Learning	10.1023/A:1007406511732	input/output;multi-task learning;instance-based learning;algorithmic learning theory;description logic;computer science;artificial intelligence;theoretical computer science;deterministic finite automaton;machine learning;first-order logic;inductive transfer;mathematics;inductive programming;stability;computational learning theory;logic programming;active learning;algorithm	AI	-7.238627365989322	17.68988836985339	99106
cd4ad4d635ca395de9de7d894630af5aeb2cd5e5	automated reasoning in normative detachment structures with ideal conditions		Systems of deontic logic suffer either from being too expressive and therefore hard to mechanize, or from being too simple to capture relevant aspects of normative reasoning. In this article we look for a suitable way in between: the automation of a simple logic of normative ideality and sub-ideality that is not affected by many deontic paradoxes and that is expressive enough to capture contrary-to-duty reasoning. We show that this logic is very useful to reason on normative scenarios from which one can extract a certain kind of argumentative structure, called a Normative Detachment Structure with Ideal Conditions. The theoretical analysis of the logic is accompanied by examples of automated reasoning on a concrete legal text.	automated reasoning;deontic logic	Tomer Libal;Matteo Pascucci	2018	CoRR		computer science;argumentative;natural language processing;machine learning;automation;normative;automated reasoning;artificial intelligence;deontic logic	AI	-15.385038331368253	5.450984690143155	99136
b2105485dd23b6a677a6f99926ad9725af2355d0	on the difficulty of really considering a radical novelty	programming paradigm;program derivation;science teaching;formal logic;network programming	The fundamental assumptions in Dijkstra's influential article on computing science teaching are challenged. Dijkstra's paper presents the radical novelties of computing, and the consequent problems that we must tackle through a formal, logic-based approach to program derivation. Dijkstra's main premise is that the algorithmic programming paradigm is the only one, in fact, the only possible one. It is argued that there is at least one other, the network-programming paradigm, which itself is a radical novelty with respect to the implementation of problems on computers. And, as one might expect of a radical alternative, it shows much of the conventional wisdom concerning computing science, which Dijkstra variously attacks and dispenses, to be special pleading; not universals of computing at all. Finally, we explore what is known of this new paradigm in order to see what light it sheds on the fundamental problems that computing really does present to us. Not surprisingly, some become less problematic, some disappear altogether and others take their place, but, in general, it must be of benefit to modern computer technology to gain a wider perspective on the possibilities instead of seeing everything through the traditional tunnel of programming as formula derivation, and computers as the requisite, special type of symbol manipulation device.	computer science;program derivation;programming paradigm	Derek Partridge	1995	Minds and Machines	10.1007/BF00974752	psychology;on the cruelty of really teaching computer science;epistemology;computer science;artificial intelligence;programming paradigm;programming language;computer network programming;logic;program derivation;algorithm;cognitive science	Theory	-10.960948366567425	4.664742647880075	99220
4a5e3c7c9cd826773dd86df25ed2166e934762be	acceptability semantics for weighted argumentation frameworks		The paper studies semantics that evaluate arguments in argumentation graphs, where each argument has a basic strength, and may be attacked by other arguments. It starts by defining a set of principles, each of which is a property that a semantics could satisfy. It provides the first formal analysis and comparison of existing semantics. Finally, it defines three novel semantics that satisfy more principles than existing ones.	argumentation framework;emoticon;word lists by frequency	Leila Amgoud;Jonathan Ben-Naim;Dragan Doder;Srdjan Vesic	2017		10.24963/ijcai.2017/9	argumentation theory;artificial intelligence;machine learning;semantics;computer science	AI	-16.183555076228156	5.387944694497152	99224
f2b6c69288c487295d933d85ec6409e6818cc42e	from interior algebras to unital ℓ-groups: a unifying treatment of modal residuated lattices	conucleus;l groups;godel mckinsey tarski translation;nucleus;interior algebras	Much work has been done on specific instances of residuated lattices with modal operators (either nuclei or conuclei). In this paper, we develop a general framework that subsumes three important classes of modal residuated lattices: interior algebras, Abelian l-groups with conuclei, and negative cones of l-groups with nuclei. We then use this framework to obtain results about these three cases simultaneously. In particular, we show that a categorical equivalence exists in each of these cases. The approach used here emphasizes the role played by reducts in the proofs of these categorical equivalences. Lastly, we develop a connection between translations of logics and images of modal operators.	modal logic;residuated lattice	William Young	2015	Studia Logica	10.1007/s11225-014-9558-z	discrete mathematics;topology;atomic nucleus;pure mathematics;mathematics;algebra	Logic	-5.88985855555019	11.290139444407599	99225
a08d6e4128974e56400223c82cdc01dfc127ffe7	models of arithmetic and categories with finiteness conditions	logique mathematique;logica matematica;theorie modeles;mathematical logic;arithmetique;interpretacion;category theory;aritmetica;theorie categorie;arithmetic;interpretation;teoria categoria;teoria modelos;model theory	In this paper we contend that there is a natural interpretation of fragments of arithmetic in terms of category theory which parallels the familiar correspondence between finite numbers and finite sets. The fragments of arithmetic we shall be concerned with are IA0 and IAo + EXP, subsystems of the first-order Peano axioms (PA) which have been the object of some recent attention. To a model of such a theory we associate a category consisting of the bounded, A0-definable sets and functions of the model. This forms a 'set theory' whose salient feature is that every object is (internally) finite. Much of the work of the present paper is involved in isolating and studying suitable ways to express in a category the appropriate notion of 'finite' object. Theorem 30 will give a precise correspondence between models of IA0 + EXP and toposes with extra properties (Axiom of Choice, 1 is a generator) and a finiteness condition. Without EXP we give a similar (less definitive) result (Theorem 25). In this correspondence, the arithmetical operations of sum, product and exponentiation are expressed by the categorical ones with the same names, so, in a sense, we are extending to a new context the connection between the fundamental operations of arithmetic and of category theory which is implicitly acknowledged by the punning use of the same words. Of course the use of finiteness to characterize arithmetic is not new. In particular we should mention the folklore result that PA and ZF + ~Infinity are mutually interpretable.	category theory;exptime;first-order predicate;parallels desktop for mac;peano axioms;rough set;zermelo–fraenkel set theory	R. Diaconescu;L. A. S. Kirby	1987	Ann. Pure Appl. Logic	10.1016/0168-0072(87)90059-5	mathematical logic;interpretation;calculus;mathematics;algorithm;model theory;category theory;algebra	Logic	-7.751181583027274	13.125960524765341	99234
e24fb04582624ba389bd0920aff0c835b7a8c8ef	verification of results that logically related noninteractive literatures are potential sources of new knowledge	logical relation			Don R. Swanson	1989	JASIS	10.1002/(SICI)1097-4571(198905)40:3<152::AID-ASI2>3.0.CO;2-N	natural language processing;computer science;theoretical computer science;algorithm	ML	-13.34180921161961	9.470938105259444	99256
3d670fafb01e5581b3c73ae10fef9dc1a57d24df	certain formulas equivalent to the axiom of choice	axiom of choice			Boleslaw Sobocinski	1961	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093956974	urelement;zermelo–fraenkel set theory;axiom schema;kripke–platek set theory;axiom of extensionality;choice function;morse–kelley set theory;axiom independence;action axiom;axiom of projective determinacy;general set theory;non-well-founded set theory;scott's trick;reverse mathematics;well-ordering theorem;continuum hypothesis;mathematics;axiom of choice;s;constructive set theory;algebra	Logic	-8.058301443559287	12.04485721299154	99284
a95a7c05cdd4912e0ec50e11e99bcb2e29714cc6	on decidability of a logic for order of magnitude qualitative reasoning with bidirectional negligibility	order of magnitude reasoning;multi modal logic;qualitative reasoning;bidirectional negligibility;knowledge representation;decidability	Qualitative Reasoning (QR) is an area of research within Artificial Intelligence that automates reasoning and problem solving about the physical world. QR research aims to deal with representation and reasoning about continuous aspects of entities without the kind of precise quantitative information needed by conventional numerical analysis techniques. Order-of-magnitude Reasoning (OMR) is an approach in QR concerned with the analysis of physical systems in terms of relative magnitudes. In this paper we consider the logic OMRN for order-of-magnitude reasoning with the bidirectional negligibility relation. It is a multi-modal logic given by a Hilbert-style axiomatization that reflects properties and interactions of two basic accessibility relations (strict linear order and bidirectional negligibility). Although the logic was studied in many papers, nothing was known about its decidability. In the paper we prove decidability of OMRN by showing that the logic has the strong finite model property.	bidirectional transformation	Joanna Golinska-Pilarek	2012		10.1007/978-3-642-33353-8_20	discrete mathematics;qualitative reasoning;non-monotonic logic;mathematics;reasoning system;automated reasoning;deductive reasoning;algorithm	AI	-15.373750995266487	10.464435616937005	99452
e30b95ca1a6d45a7e788c4f790dd73f8982186e2	displaying updates in logic	display calculus;substructural logics;update;bi intuitionistic logic	We generalize the language of substructural logics interpreted over the ternary relational semantics. This is motivated by our intention to capture within the logical framework of substructural logics various logic-based formalisms dealing with common sense reasoning and logical dynamics. This initiative is based on the key observation that an update can be represented abstractly by the ternary relation of the substructural framework: the first argument of the ternary relation represents an initial situation, the second an informative event and the third the resulting situation after the occurrence of the informative event. Refining the language of substructural logics may allow us to account for the fine-grained reasoning present in common sense reasoning. Thus, we introduce three triples of connectives that are interconnected by means of cyclic permutations. The usual fusion, implication and co-implication connectives form one of these triples. We define a cut-free display calculus for our language that generalizes the display calculus for modal logic. We do not resort to structural connectives for truth constants and we show how we can obtain our display rules using Gaggle Theory. We prove the soundness and strong completeness of our display calculus via a Henkin-style construction. Using correspondence results from substructural logics, we also obtain sound and complete display calculi for a wide variety of classical and substructural logics. Then, we define dual substructural connectives and we provide a display calculus for our language extended with these dual connectives. Finally, we focus on the specific case of bi-intuitionistic logic for which we provide a novel sound and strongly complete display calculus. In a companion article (Aucher, 2016, J. Logic Comput.), we provide a sequent calculus for update logic that generalizes the non-associative Lambek calculus and a sequent calculus for dynamic epistemic logic that extends this sequent calculus for update logic.	categorial grammar;commonsense reasoning;cyclic permutation;description logic;dynamic epistemic logic;epistemic modal logic;information;intuitionistic logic;kripke semantics;logical connective;logical framework;sequent calculus;soundness (interactive proof);structural induction	Guillaume Aucher	2016	J. Log. Comput.	10.1093/logcom/exw001	monoidal t-norm logic;t-norm fuzzy logics;linear logic;structural rule;discrete mathematics;relevance logic;many-valued logic;łukasiewicz logic;mathematics;proof calculus;noncommutative logic;propositional calculus;situation calculus;sequent;sequent calculus;natural deduction;substructural logic;algorithm	PL	-13.045919020514194	12.873661215039453	99590
64ce5585ee2d1493cbe240d091c0bfb545872f08	higher-order logic programming languages with constraints: a semantics	programming language;equational reasoning;higher order;lenguajes de programacion;intuitionistic logic;constraint system;typed lambda calculus;higher order logic;model theory	A Kripke Semantics is defined for a higher-order logic programming language with constraints, based on Church’s Theory of Types and a generic constraint formalism. Our syntactic formal system, hoHH(C) (higher-order hereditary Harrop formulas with constraints), which extends λProlog’s logic, is shown sound and complete. A Kripke semantics for equational reasoning in the simply typed lambda-calculus (Kripke Lambda Models) was introduced by Mitchell and Moggi in 1990. Our model theory extends this semantics to include full impredicative higher-order intuitionistic logic, as well as the executable hoHH fragment with typed lambdaabstraction, implication and universal quantification in goals and constraints. This provides a Kripke semantics for the full higher-order hereditarily Harrop logic of λProlog as a special case (with the constraint system chosen to be β,η-conversion).	abstract interpretation;abstract syntax;constraint logic programming;executable;first-order predicate;formal system;frank pfenning;impredicativity;intuitionistic logic;kripke semantics;linear logic;logic programming;metaprogramming;mitchell corporation;observational equivalence;parametric polymorphism;programming language;simply typed lambda calculus;turing completeness;type theory;universal quantification;λprolog	James Lipton;Susana Nieva	2007		10.1007/978-3-540-73228-0_20	modal logic;montague grammar;typed lambda calculus;higher-order logic;stable model semantics;intuitionistic logic;computer science;intermediate logic;axiom s5;formal semantics;minimal logic;curry–howard correspondence;programming language;kripke semantics;well-founded semantics;logic programming;operational semantics;multimodal logic;algorithm	PL	-13.791586040382507	16.301049197616415	99770
d2577730a652e25522725f1e50a126dbbfa954cc	affine functions and series with co-inductive real numbers	engine performance;expressive power;exact computation;proof search;logic in computer science	We extend the work of A. Ciaffaglione and P. Di Gianantonio on mechanical verification of algorithms for exact computation on real numbers, using infinite streams of digits implemented as co-inductive types. Four aspects are studied: the first aspect concerns the proof that digit streams can be related to the axiomatized real numbers that are already axiomatized in the proof system (axiomatized, but with no fixed representation). The second aspect re-visits the definition of an addition function, looking at techniques to let the proof search mechanism perform the effective construction of an algorithm that is correct by construction. The third aspect concerns the definition of a function to compute affine formulas with positive rational coefficients. This should be understood as a testbed to describe a technique to combine co-recursion and recursion to obtain a model for an algorithm that appears at first sight to be outside the expressive power allowed by the proof system. The fourth aspect concerns the definition of a function to compute series, with an application on the series that is used to compute Euler’s number e. All these experiments should be reproducible in any proof system that supports co-inductive types, co-recursion and general forms of terminating recursion, but we performed with the Coq system [12, 3, 14].	algorithm;approximation;automated theorem proving;coefficient;computation;coq (software);corecursion;correctness (computer science);cylinder-head-sector;decision problem;euler;experiment;intuitionistic type theory;newman's lemma;power of two;proof calculus;recursion;redundancy (engineering);testbed	Yves Bertot	2007	Mathematical Structures in Computer Science	10.1017/S0960129506005809	discrete mathematics;computer science;mathematics;programming language;expressive power;algorithm	Logic	-9.637268417689693	17.163010817043357	100112
c2849ddb2843a49ccd772a95a4912af8191d01fa	a canonical model construction for intuitionistic distributed knowledge		Intuitionistic epistemic logic is an active research field. However, so far no consensus has been reached what the correct form of intuitionistic epistemic logic is and more technical and conceptual work is needed to obtain a better understanding. This article tries to make a small technical contribution to this enterprise. Roughly speaking, a proposition is distributed knowledge among a group of agents if it follows from their combined knowledge. We are interested in formalizing intuitionistic distributed knowledge. Our focus is on two theories IDK and IDT, presented as Hilbert-style systems, and the proof of the completeness of these theories; their correctness is obvious. Intuitionistic distributed knowledge is semantically treated following the standard lines of intuitionistic modal logic. Motivated by an approach due to Fagin, Halpern, and Vardi, though significantly simplified for the treatment of IDK and IDT, we show completeness of these systems via a canonical model construction.	canonical model;correctness (computer science);epistemic modal logic;hilbert space;interrupt descriptor table;intuitionistic logic;theory	Gerhard Jäger;Michel Marti	2016			completeness (statistics);algorithm;modal logic;discrete mathematics;correctness;proposition;canonical model;distributed knowledge;epistemic modal logic;mathematics	AI	-13.602923302014686	6.627223181165454	100179
2125eaee16dc2f96a0160fa8e19ed918bb82aad1	abstract machines for dialogue games	game semantics;semantique des jeux;abstract machine;dialogue games;logic in computer science;lambda calcul	The notion of abstract Boehm tree has arisen as an operationally-oriented distillation of works on game semantics, and has been investigated in two papers. This paper revisits the notion, providing more syntactic support and more examples (like call-by-value evaluation) illustrating the generality of the underlying computing device. Precise correspondences between various formulations of the evaluation mechanism of abstract Boehm trees are established.		Pierre-Louis Curien;Hugo Herbelin	2005	CoRR		computer science;artificial intelligence;game semantics;mathematics;abstract machine;programming language;algorithm	NLP	-15.097228787649414	14.913970521530233	100261
088f3a05a761f8d79e9316857c64b4a4ea93b4f7	the continuous algebra of monadic languages		With a program one can associate a language, namely the set of its computations in standard form [2], such that questions about control structures of programming languages can be answered by investigating these languages, called monadic languages with conditions. In [4] and [5] ,we presented an algebraic analysis of the class ~ (A,B) of monadic languages w.r.t, the set A of actions and the set B of conditions. As an application we gave a syntactic proof of the non-translatability of Ianov schemes to while schemes. This was achieved by inductive characterizations of their corresponding classes of monadic languages. However, for regular monadic languages this was unsatisfactory insofar as a partial operation, namely program iteration, was used without specifying the permissible arguments.	computation;control flow;inductive reasoning;iteration;linear algebra;programming language	Klaus Indermark	1975		10.1007/3-540-07389-2_206	discrete mathematics;pure mathematics;abstract family of languages;monadic predicate calculus;algebra	PL	-11.192732963352952	17.99922142347132	100337
0071d65dc1329b68b791127a3f485cfa9f5b8882	the complexity of regularity in grammar logics and related modal logics	modal logic	A portable electrically illuminated book. The book comprises a housing adapted to receive an imprinted or inscribed roll of paper and a take-up spool on which the paper is unwound. The paper passes over a window in the housing, illuminated by electric lamps in the housing. A lens is mounted in the window, above the passing paper, for enlarging the printed matter. A motor for driving the take-up spool is mounted in the housing and a speed control for the motor is provided. A dry cell battery serves as a power source. A folding cover for the lens serves as a book support.	modal logic	Stéphane Demri	2001	J. Log. Comput.	10.1093/logcom/11.6.933	modal logic;dynamic logic;monoidal t-norm logic;natural language processing;s5;t-norm fuzzy logics;normal modal logic;modal μ-calculus;discrete mathematics;relevance logic;principle of bivalence;computer science;axiom s5;łukasiewicz logic;mathematics;kripke semantics;accessibility relation;multimodal logic;algorithm;modal operator	Logic	-13.62319500265441	11.490476910557769	100554
69224e34f0b1fe56e3fcfc722c4f1954bdce289d	interpreting abduction in clp	constraint logic programs;integrity constraints;abductive logic programming	Constraint Logic Programming (CLP) and Abductive Logic Programming (ALP) share the important concept of conditional answer. We exploit their deep similarities to implement an efficient abductive solver where abducibles are treated as constraints. We propose two possible implementations, in which integrity constraints are exploited either (i) as the definition of a CLP solver on an abductive domain, or (ii) as constraints à la CLP. Both the solvers are implemented on top of CLP(Bool), that typically have impressively efficient propagation engines.	abductive logic programming;abductive reasoning;constraint (mathematics);constraint logic programming;data integrity;linear algebra;smoothing;software propagation;solver;universal quantification	Marco Gavanelli;Evelina Lamma;Paola Mello;Michela Milano;Paolo Torroni	2003			computer science;theoretical computer science;programming language;algorithm;abductive logic programming	AI	-17.90501929688102	12.02709019803765	100856
5625fff5345e7e49a6d66a1283b6116aa0c8e76f	a simple semantics for aristotelian apodeictic syllogistics	universiteitsbibliotheek	We give a simple definition of validity for syllogisms involving necessary and assertoric premises which validates all and only the Aristotelian apodeictic syllogisms.	apodicticity;assertoric;axiomatic system;epistemic modal logic;hoc (programming language);linear algebra	Sara L. Uckelman;Spencer Johnston	2010			philosophy;epistemology;mathematics;algorithm	Logic	-13.293163393947427	9.362561523281949	100859
b764aa7f83084c7b29e62b0ed64f8278c36ecbc9	generalised proof-theory for multi-agent autoepistemic reasoning	proof theory	Over the past few years, several different approaches have been proposed to deal with multiagent autoepistemic reasoning. Despite some limitations, each approach is important in its own right. While Pafikh’s approach allows an agent to reason uonmonotonically about other agents’ knowledge, it cannot reason about other agents’ nonmonotonic reasoning. Morgensteru’s logic provides a limited way to deal with the problem but unfortunately it is not constructive. Although Halperu introduces an alsorithmic definition of multi-agent nonmonotonic reasoning, his approach cannot deal with defaa]t reasoning even for the single-agent case. The purpose of this paper is to propose an integrated theory that deals with these problems. Using examples from speech acts theory, we demonstrate some unintnitive results against existing approaches. We then develop a simple and yet generalised proof-theoretic framework with constructive interpretation for multi-agent autoepistemic reasoning. We show that this framework retains the advantages of existing approaches but does not have their peculiar results. Surprisingly, the new proof-theoretic framework can be obtained by a simple modification of Parikh’s approach. Furthermore, the results show that our framework generalises Morgenstern’s approach.	agent-based model;multi-agent system;non-monotonic logic;theory	Yongyuth Permpoontanalarp;John Yuejun Jiang	1995			epistemology;artificial intelligence;non-monotonic logic;mathematics;deductive reasoning;algorithm;autoepistemic logic	AI	-16.6885080865609	5.895672681487562	100956
23fb76237e70aadbb81274e167223a954b44be33	default reasoning for forensic visual surveillance based on subjective logic and its comparison with l-fuzzy set based approaches	default reasoning;intuitionistic fuzzy logic;fuzzy set;fuzzy belnap logic;subjective logic;visual surveillance;fuzzy four valued logic;forensic visual surveillance;bilattice;l fuzzy sets;interval valued fuzzy logic	Default reasoning can provide a means of deriving plausible semantic conclusion under imprecise and contradictory information in forensic visual surveillance. In such reasoning under uncertainty, proper uncertainty handling formalism is required. A discrete species of Bilattice for multivalued default logic demonstrated default reasoning in visual surveillance. In this article, the authors present an approach to default reasoning using subjective logic that acts in a continuous space. As an uncertainty representation and handling formalism, subjective logic bridges Dempster Shafer belief theory and second order Bayesian, thereby making it attractive tool for artificial reasoning. For the verification of the proposed approach, the authors extend the inference scheme on the bilattice for multivalued default logic to L-fuzzy set based logics that can be modeled with continuous species of bilattice structures. The authors present some illustrative case studies in visual surveillance scenarios to contrast the proposed approach with L-fuzzy set based approaches.	default logic;fuzzy set;semantics (computer science)	Seunghan Han;Walter Stechele	2011	IJMDEM	10.4018/jmdem.2011010103	fuzzy logic;dynamic logic;description logic;computer science;artificial intelligence;fuzzy number;non-monotonic logic;machine learning;data mining;fuzzy set;automated reasoning;deductive reasoning;default logic;subjective logic	AI	-15.582288296943881	6.342090110423929	100961
eb119e767f804d381b825fb69a6905a6fb400c4d	rewrite systems with constraints	concurrent constraint programming;expressive power;rewrite systems	Abstract   We extend a widely used concept of rewrite systems with a unit holding a kind of global information which can influence and can be influenced by rewriting. The unit is similar to the  store  used in concurrent constraint programming, and can be also seen as a special (weak) state unit. We present how this extension changes the expressive power of rewrite systems classes which are included in Mayr's PRS hierarchy [8]. The new classes (fcBPA, fcBPP, fcPA, fcPAD, fcPAN, fcPRS) are described and inserted into the hierarchy.		Jan Strejcek	2001	Electr. Notes Theor. Comput. Sci.	10.1016/S1571-0661(04)00216-6	discrete mathematics;computer science;mathematics;programming language;expressive power;algorithm	Logic	-6.674119330701935	16.637106443344013	101070
d51b340a833a45a899934deec7a4e12ef5593e53	modal logic based theory for non-monotonic reasoning	modal logic;non monotonic reasoning;default logic	"""This paper defines a new modal logic based theory for non-monotonic reasoning. This logic expresses notions about hypotheses and known information. These notions are defined in the framework of the modal system 1"""". A translation of default logic in terms of hypothesis theory is given with which it is possible to fully characterize default logic by giving a necessary and sufficient criterion for the existence and the non-existence of extensions. Moreover several problems relating to non-monotonic reasoning are discussed (and solutions are presented), such as case analysis, multiple extensions and contraposition."""	default logic;modal logic;non-monotonic logic	Pierre Siegel;Camilla Schwind	1993	Journal of Applied Non-Classical Logics	10.1080/11663081.1993.10510796	modal logic;predicate logic;dynamic logic;s5;normal modal logic;modal μ-calculus;discrete mathematics;linear temporal logic;description logic;higher-order logic;epistemic modal logic;epistemology;computer science;intermediate logic;artificial intelligence;non-monotonic logic;axiom s5;mathematics;deductive reasoning;default logic;accessibility relation;multimodal logic;algorithm;philosophy of logic	AI	-15.088335132902525	8.448364568816134	101119
6c0aadb6381bad42479b2959e4a2566bdb374dd4	coherent banach spaces: a continuous denotational semantics	logique lineaire;standards;semantica denotacional;unit ball;espacio banach;logic;vector space;connector;banach space;coherent space;negation;connecteur;espace coherent;denotational semantic;grafo;intuitionistic logic;conector;denotational semantics;graph;graphe;norma;logique intuitionniste;coherent banach space;cbs;coherence;scott domain;negacion;espace vectoriel;coherencia;linear logic;espacio vectorial;norme;logica intuicionista;semantique denotationnelle;espace banach;logique;logica;domaine scott;analytic function	We present a denotational semantics based on Banach spaces ; it is inspired from the familiar coherent semantics of linear logic, the role of coherence being played by the norm : coherence is rendered by a supremum, whereas incoherence is rendered by a sum, and cliques are rendered by vectors of norm at most 1. The basic constructs of linear (and therefore intuitionistic) logic are implemented in this framework : positive connectives yield `-like norms and negative connectives yield `∞-like norms. The problem of non-reflexivity of Banach spaces is handled by specifying the dual in advance , whereas the exponential connectives (i.e. intuitionistic implication) are handled by means of analytical functions on the open unit ball. The fact that this ball is open (and not closed) explains the absence of a simple solution to the question of a topological cartesian closed category : our analytical maps send an open ball into a closed one and therefore do not compose. However a slight modification of the logical system allowing to multiply a function by a scalar of modulus < 1 is enough to cope with this problem. The logical status of the new system should be clarified.	cartesian closed category;coherent;denotational semantics;formal system;intuitionistic logic;linear logic;logical connective;modulus of continuity;time complexity	Jean-Yves Girard	1999	Theor. Comput. Sci.	10.1016/S0304-3975(99)00056-0	linear logic;scott domain;combinatorics;discrete mathematics;coherence;vector space;intuitionistic logic;computer science;analytic function;negation;pure mathematics;mathematics;graph;programming language;logic;banach space;denotational semantics;algorithm;algebra	Logic	-10.665172573581996	12.617573324463999	101136
3c0590822764cb1fd67877e17d0633350bbb8df4	more on empirical negation	intuitionistic logic empirical negation completeness;incollection;empirical negation;intuitionism	Intuitionism can be seen as a verificationism restricted to mathematical discourse. An attempt to generalize intuitionism to empirical discourse presents various challenges. One of those concerns the logical and semantical behavior of what has been called ‘empirical negation’. An extension of intuitionistic logic with empirical negation was given by Michael De and a labelled tableaux system was there shown sound and complete. However, a Hilbert-style axiom system that is sound and complete was missing. In this paper we provide the missing axiom system which is shown sound and complete with respect to its intended semantics. Along the way we consider some further applications of empirical negation.	axiomatic system;intuitionistic logic	Michael De;Hitoshi Omori	2014			discrete mathematics;philosophy;epistemology;negation as failure;negation;negation introduction;negation normal form;intuitionism	AI	-13.122616099773674	8.321416011508312	101186
46a87a6820dc209f7e239c3297a49b98d4275adb	some spatial and spatio-temporal operators derived from the topological view of knowledge		In this paper, we extend Moss and Parikh’s approach to reasoning about topological properties of knowledge. We turn that system in a spatio-temporal direction by successively adding various modalities having on the one hand an epistemic interpretation and facilitating on the other hand spatial or spatio-temporal specifications up to a certain degree. The first of these operators is related to disjointness regarding space and ignorance regarding knowledge, and the second one to overlapping and, respectively, quantifying across all possible agents. The third one turns up along with increase of sets and no learning of agents, respectively. A fourth operator is already present in the basic system. Apart from the first case we establish the soundness, completeness and decidability of the accompanying logics. In the first case, however, we up to now could only prove that a certain naturally arising sublogic is decidable.	decision problem;soundness (interactive proof)	Bernhard Heinemann	2007			operator (computer programming);zero-dimensional space;topological entropy in physics;topological space;topological vector space;topology;computer science;decidability;soundness;topological tensor product	AI	-15.001787931100736	10.869112873148485	101223
192d15b49552cb724089511d101ec474861b9f2f	properties of saturation in monotonic neighbourhood models and some applications	monotonic modal logic;06d16;06d05;03g10;m saturated models;kripke m saturated models;monotonic neighbourhood frames and models;maximal hennessy milner classes of monotonic models	In this paper we shall discuss properties of saturation in monotonic neighbourhood models and study some applications, like a characterization of compact and modally saturated monotonic models and a characterization of the maximal Hennessy-Milner classes. We shall also show that our notion of modal saturation for monotonic models naturally extends the notion of modal saturation for Kripke models.		Sergio A. Celani	2015	Studia Logica	10.1007/s11225-014-9590-z	discrete mathematics;mathematics;algorithm	ML	-9.348878529951328	13.598025560522878	101329
504b5ed5ae570ab5d661ccc32d632f3a7b2b8399	locally finite ω-languages and effective analytic sets have the same topological complexity	locally finite languages;topological complexity;formal languages;ω languages;models of set theory;infinite words;local sentences;borel hierarchy;logic in computer science;wadge hierarchy;decision problems	Local sentences and the formal languages they define were introduced by Ressayre in [Res88]. We prove that locally finite ω-languages and effective analytic sets have the same topological complexity: the Borel and Wadge hierarchies of the class of locally finite ω-languages are equal to the Borel and Wadge hierarchies of the class of effective analytic sets. In particular, for each non-null recursive ordinal α < ω 1 there exist some Σ 0 α-complete and some Π 0 αcomplete locally finite ω-languages, and the supremum of the set of Borel ranks of locally finite ω-languages is the ordinal γ 2 , which is strictly greater than the first non-recursive ordinal ω 1 . This gives an answer to the question of the topological complexity of locally finite ωlanguages, which was asked by Simonnet [Sim92] and also by Duparc, Finkel, and Ressayre in [DFR01]. Moreover we show that the topological complexity of a locally finite ω-language defined by a local sentence φ may depend on the models of the Zermelo-Fraenkel axiomatic system ZFC. Using similar constructions as in the proof of the above results we also show that the equivalence, the inclusion, and the universality problems for locally finite ω-languages are Π2-complete, hence highly undecidable.	axiomatic system;existential quantification;formal language;omega language;ordinal data;recursion;recursive ordinal;turing completeness;undecidable problem;universality probability;zermelo–fraenkel set theory	Olivier Finkel	2016	Math. Log. Q.	10.1002/malq.201400113	combinatorics;formal language;mathematical analysis;discrete mathematics;topology;radon measure;decision problem;borel hierarchy;mathematics;wadge hierarchy;locally finite collection;algorithm;algebra	Theory	-6.447390811263695	15.76937832953181	101678
1b80f37d48bb28d6e0d7e73d66ca773e07424cf1	towards resource handling in logic programming: the ppl framework and its semantics	operational semantics;object database;fixed point theory;classical logic;logic programs	The PPL framework is proposed as a simple extension to logic programming aiming at handling resources. It is argued that the separation between logical treatments and resource handling is desirable and, to that end, resources are proposed to be manipulated by means of pre-and post-conditions associated with usual Horn clauses. The expressiveness of the resulting framework is evidenced through the coding of several applications involving objects, databases, actions and changes. Operational and declarative semantics are presented as well. The operational semantics rests on a derivation relation stating how goals and conditions are evaluated. The declarative semantics extends the classical model and xed-point theories to take into account the evaluation of pre-and post-conditions, and in particular the non-monotonic behavior of the world of resources they induce in general. As suggested, an eeort has been made to keep the work close to the classical logic programming setting. In particular, the semantics are in the main streams of logic programming semantics. However, the PPL framework raises new problems for which fresh solutions are proposed.	database;formal grammar;horn clause;logic programming;operational semantics;resource description framework;theory	Jean-Marie Jacquet;Luís Monteiro	1994		10.1007/BFb0021986	dynamic logic;classical logic;description logic;higher-order logic;horn clause;stable model semantics;computer science;theoretical computer science;bunched logic;formal semantics;computational logic;programming language;axiomatic semantics;well-founded semantics;logic programming;operational semantics;multimodal logic;algorithm;autoepistemic logic	AI	-17.326818854345973	8.700534619967657	101801
4187eb5bd91980984047d88d673b37ba6c7263cb	a systematic classification of argumentation frameworks where semantics agree	argumentation frameworks;argumentation semantics	The issue of characterizing classes of argumentation frameworks where different semantics agree has been considered in the literature with main focus on the relationships between agreement and topological properties. This paper contributes to this kind of investigation from a complementary perspective, by introducing a systematic classification of agreement classes concerning a comprehensive set of argumentation semantics on the basis of properties of their sets of extensions only. In particular, it is shown that 14 distinct classes out of 120 nominal ones exist, and a complete analysis of their set-theoretical relationships is carried out.	argumentation framework	Pietro Baroni;Massimiliano Giacomin	2008			computer science;data mining;algorithm	AI	-15.602079077171771	4.443534873944467	101805
667b81b85ba339d563e1f8524db7d138ccee07a0	non-deterministic multi-valued matrices for first-order logics of formal inconsistency	databases;multivalued logic logic design cost accounting databases computer science information systems;information systems;logic design;first order logics;formal inconsistency;cost accounting;first order;finite valued semantics;nondeterministic multivalued matrices;computer science;multivalued logic;finite valued semantics nondeterministic multivalued matrices first order logics formal inconsistency paraconsistent logic;first order logic;paraconsistent logic	Paraconsistent logic is the study of contradictory yet non-trivial theories. One of the best-known approaches to designing useful paraconsistent logics is da Costa's approach, which has led to the family of logics of formal inconsistency (LFIs), where the notion of inconsistency is expressed at the object level. In this paper we use non- deterministic matrices, a generalization of standard multivalued matrices, to provide simple and modular finite-valued semantics for a large family of first-order LFIs. The modular approach provides new insights into the semantic role of each of the studied axioms and the dependencies between them. For instance, four of the axioms of LFII*, a first-order system designed in [8] for treating inconsistent databases, are shown to be derivable from the rest of its axioms. We also prove the effectiveness of our semantics, a crucial property for constructing counterexamples, and apply it to show a non-trivial proof-theoretical property of the studied LFIs.	database;first-order predicate;holographic principle;idempotence;logical connective;non-deterministic turing machine;paraconsistent logic;semantic interpretation;theory	Arnon Avron;Anna Zamansky	2007	37th International Symposium on Multiple-Valued Logic (ISMVL'07)	10.1109/ISMVL.2007.38	t-norm fuzzy logics;principle of explosion;discrete mathematics;classical logic;paraconsistent logic;computer science;artificial intelligence;non-monotonic logic;first-order logic;mathematics;algorithm;philosophy of logic	PL	-15.169273813410884	10.032971536366743	101855
dd9f37af952de6e5baf904062f391d3aa7b6ec5c	a semantically justified approach to nonmonotonic reasoning in logic programming: extended abstract.	nonmonotonic reasoning;logic programs			James P. Delgrande	1990			dynamic logic;computer science;artificial intelligence;theoretical computer science;non-monotonic logic;machine learning;computational logic;reasoning system;automated reasoning;deductive reasoning;algorithm;philosophy of logic	Logic	-18.23591229799348	10.86770727811467	101966
76e88c5ffdbb68b72273756a251a819acc36a434	topological semantics and bisimulations for intuitionistic modal logics and their classical companion logics	canonical model;natural extension;kripke model;modal logic;semantic mapping;topology preservation;partial order	We take the well-known intuitionistic modal logic of Fischer Servi with semantics in bi-relational Kripke frames, and give the natural extension to topological Kripke frames. Fischer Servi’s two interaction conditions relating the intuitionistic pre-order (or partial-order) with the modal accessibility relation generalise to the requirement that the relation and its inverse be lower semi-continuous with respect to the topology. We then investigate the notion of topological bisimulation relations between topological Kripke frames, as introduced by Aiello and van Benthem, and show that their topology-preserving conditions are equivalent to the properties that the inverse-relation and the relation are lower semicontinuous with respect to the topologies on the two models. Our first main result is that this notion of topological bisimulation yields semantic preservation w.r.t. topological Kripke models for both intuitionistic tense logics, and for their classical companion multi-modal logics in the setting of the Gödel translation. After giving canonical topological Kripke models for the Hilbert-style axiomatizations of the Fischer Servi logic and its classical multi-modal companion logic, we show that the syntactic Gödel translation induces a natural semantic map from the intuitionistic canonical model into the canonical model of the classical companion logic, and this map is itself a topological bisimulation.	accessibility relation;bisimulation;canonical model;gödel;intuitionistic logic;kripke semantics;michael j. fischer;modal companion;modal logic;semi-continuity;semiconductor industry;whole earth 'lectronic link	Jennifer M. Davoren	2007		10.1007/978-3-540-72734-7_12	modal logic;partially ordered set;normal modal logic;discrete mathematics;kripke structure;intuitionistic logic;computer science;intermediate logic;axiom s5;canonical model;mathematics;kripke semantics;algorithm	Logic	-11.419156538285675	14.009139068448762	101990
c849457db0a8e6dc6c307a96b30457bec38ab69d	from sazonov's non-dcpo natural domains to closed directed-lub partial orders		Normann proved that the domains of the game model of PCF (the domains of sequential functionals) need not be dcpos. Sazonov has defined natural domains for a theory of such incomplete domains. This paper further develops that theory. It defines lub-rules that infer natural lubs from existing natural lubs, and lub-rule classes that describe axiom systems like that of natural domains. There is a canonical proper subcategory of the natural domains, the closed directed lub partial orders (cdlubpo), that corresponds to the complete lub-rule class of all valid lub-rules. Cdlubpos can be completed to restricted dcpos, which are dcpos that retain the data of the incomplete cdlubpo as a subset.		Fritz Müller	2016	CoRR		combinatorics;mathematical analysis;discrete mathematics;mathematics	ML	-8.843159082581796	14.715105613159588	102167
be8e505c3bb8d0ad7a570b5e5e1c42213a029521	handling qualitative preferences using normal form functions	normal form;propositional logic	Reasoning about preferences is a major issue in many decision making problems. Recently, a new logic for handling preferences, called Qualitative Choice Logic (QCL), was presented. This logic adds to classical propositional logic a new connective, called ordered disjunction symbolized by ×. That new connective is used to express preferences between alternatives. QCL was not designed to handle conditional preferences, even if it is possible to express an implication with a preference on the left hand side, for instance “(Air France × Virgin) ⇒ Hotel Package”. However, using QCL semantics, there is no difference between such material implication “(Virgin × Air France) ⇒ Hotel Package” and the purely propositional formula “(Air France ∨ Virgin) ⇒ Hotel Package ”. Indeed, the negation in QCL gets rid of nested ordered disjunctions. Furthermore, the negation in QCL misses some desirable properties from propositional calculus. In this paper, we present a new semantics for the QCL language that addresses those problems. We describe a general framework for handling qualitative preferences. That framework is based on normal form functions that transform general QCL formulas into basic choice formulas, which are simple formulas (ordered disjunction of propositional formulas). We formulate the properties of our normal form function that overcome current QCL limitations.	list of minor characters in the matrix series;logical connective;propositional calculus	Salem Benferhat;Daniel Le Berre;Karima Sedki	2007			material implication;propositional formula;algorithm;propositional calculus;computer science;negation;semantics	AI	-12.571388408715864	9.42591943624841	102219
bcd0e2181a9d187b8752e6c23fdb181c7ec12812	dialectical rough sets, parthood and figures of opposition		In one perspective, the central problem pursued in this research is that of the inverse problem in the context of general rough sets. The problem is about the existence of rough basis for given approximations in a context. Granular operator spaces were recently introduced by the present author as an optimal framework for anti-chain based algebraic semantics of general rough sets and the inverse problem. In the framework, various subtypes of crisp and non crisp objects are identifiable that may be missed in more restrictive formalism. This is also because in the latter cases the concept of complementation and negation are taken for granted. This opens the door for a general approach to dialectical rough sets building on previous work of the present author and figures of opposition. In this paper dialectical rough logics are developed from a semantic perspective, concept of dialectical predicates is formalized, connection with dialethias and glutty negation established, parthood analyzed and studied from the point of view of classical and dialectical figures of opposition. Potential semantics through dialectical counting based on these figures are proposed building on earlier work by the present author. Her methods become more geometrical and encompass parthood as a primary relation (as opposed to roughly equivalent objects) for algebraic semantics. Dialectical counting strategies over antichains (a specific form of dialectical structure) for semantics are also proposed. [This paper is scheduled to appear as two separate papers (because of length) with some overlap and enhancements.]	algebraic semantics (computer science);approximation;mereology;negation as failure;rough set	Adel Mani	2017	CoRR		artificial intelligence;machine learning;calculus;operator (computer programming);computer science;inverse problem;predicate (grammar);dialectic;rough set;formalism (philosophy);algebraic semantics;negation	AI	-12.489225686195566	7.909986772809508	102252
9f6cecd31eb810267a46d09b15fd4ea224a05958	constructive logic with strong negation as a substructural logic	substructural logic	Spinks and Veroff have shown that constructive logic with strong negation (CLSN for short), can be considered as a substructural logic. We use algebraic tools developed to study substructural logics to investigate some axiomatic extensions of CLSN. For instance, we prove that Nilpotent minimum logic is the extension of CLSN by the prelinearity axiom. This generalizes the well-known result by Monteiro and Vakarelov that three-valued Łukasiewicz logic is an extension of CLSN. A Glivenko-like theorem relating CLSN and three-valued Łukasiewicz logic is proved.	intuitionistic logic;stable model semantics	Manuela Busaniche;Roberto Cignoli	2010	J. Log. Comput.	10.1093/logcom/exn081	mv-algebra;linear logic;discrete mathematics;relevance logic;many-valued logic;computer science;bunched logic;łukasiewicz logic;mathematics;programming language;logic;substructural logic;algorithm	Logic	-10.820432704401052	12.967931124845617	102285
600480e590657191bc08e65bcf73be8952834103	the insensitivity theorem for nonreducing reflexive types	langage applicatif;programming language;lambda calculus;formal semantics;semantique formelle;type reflexif;langage programmation;lambda calcul	A neat line of separation between useful and useless types in applicative languages with primitive functions of finite type is established. With reference to the concept of reducing type introduced by the authors in a previous paper, a basic syntactic result is proved (the insensitivity theorem), which implies, in particular, that all nonreducing types are useless, whenever the semantics of a well-formed piece of language is defined by its behaviour as a part of programs.	applicative programming language;well-formed formula	Egidio Astesiano;Gerardo Costa	1983	J. Comput. Syst. Sci.	10.1016/0022-0000(83)90049-1	computer science;calculus;lambda calculus;formal semantics;mathematics;programming language;algorithm	Theory	-13.089272987760456	17.769216267255956	102455
1230953bc2f82ae9095cb9fd2e68b51c387e610a	exploiting monotonicity in interval constraint propagation	constraint propagation;intervals;monotonicity	We propose in this paper a new interval constraint propagation algorithm, called MOnotonic Hull Consistency (Mohc), that exploits monotonicity of functions. The propagation is standard, but the Mohc-Revise procedure, used to filter/contract the variable domains w.r.t. an individual constraint, uses monotonic versions of the classical HC4-Revise and BoxNarrow procedures. Mohc-Revise appears to be the first adaptive revise procedure ever proposed in (interval) constraint programming. Also, when a function is monotonic w.r.t. every variable, Mohc-Revise is proven to compute the optimal/sharpest box enclosing all the solutions of the corresponding constraint (hull consistency). Very promising experimental results suggest that Mohc has the potential to become an alternative to the state-of-the-art HC4 and Box algorithms.	algorithm;combinatorial search;constraint logic programming;constraint programming;experiment;interval arithmetic;local consistency;non-monotonic logic;software propagation	Ignacio Araya;Gilles Trombettoni;Bertrand Neveu	2010			constraint logic programming;interval;mathematical optimization;binary constraint;constraint satisfaction;monotonic function;computer science;constraint graph;hybrid algorithm;local consistency	AI	-14.795578106299564	14.790888697015397	102892
7b190a20cb16c8be47c2280b9efe6d0716f9535d	reasoning with the finitely many-valued lukasiewicz fuzzy description logic sroiq	fuzzy description logic;fuzzy logic;logic for the semantic web;semantic web;fuzzy ontologies;fuzzy description logics	Article history: Received 15 May 2009 Received in revised form 6 October 2009 Accepted 14 October 2010	description logic;fuzzy logic	Fernando Bobillo;Umberto Straccia	2011	Inf. Sci.	10.1016/j.ins.2010.10.020	fuzzy logic;monoidal t-norm logic;t-norm fuzzy logics;discrete mathematics;description logic;membership function;defuzzification;type-2 fuzzy sets and systems;fuzzy mathematics;many-valued logic;fuzzy classification;computer science;artificial intelligence;fuzzy subalgebra;fuzzy number;theoretical computer science;neuro-fuzzy;semantic web;łukasiewicz logic;mathematics;fuzzy associative matrix;fuzzy set operations;fuzzy control language;algorithm;fuzzy control system;philosophy of logic	AI	-13.595673617667561	10.833273981117413	103137
c0bb9d1139d8e98f355ff1700d93148fd8b79861	transfer and a supremum principle for erna		Elementary Recursive Nonstandard Analysis, in short ERNA, is a constructive system of nonstandard analysis proposed around 1995 by Patrick Suppes and Richard Sommer, who also proved its consistency inside PRA. It is based on an earlier system developed by Rolando Chuaqui and Patrick Suppes, of which Michal Rössler and Emil Jeřábek have recently proposed a weakened version. We add a Π1-transfer principle to ERNA and prove the consistency of the extended theory inside PRA. In this extension of ERNA a Σ1-supremum principle ‘up-to-infinitesimals’, and some well-known calculus results for sequences are deduced. Finally, we prove that transfer is ‘too strong’ for finitism by reconsidering Rössler and Jeřábek’s conclusions. §	elementary;physical review a;rössler attractor	Chris Impens;Sam Sanders	2008	J. Symb. Log.		topology;computer science;calculus;mathematics;non-standard analysis;algorithm;algebra	AI	-9.249988900652399	10.597414325517208	103257
42075729a9bdbfcb4e13d085a161d346053a6789	translating logics for coalgebras	modal logic	This paper shows, that three di erent types of logics for coalgebras are institutions. The logics di er regarding the presentation of their syntax. In the rst framework, abstract behavioural logic, one has a syntax-free representation of behavioural properties. We then turn to coalgebraic logic, the syntax of which is given as an initial algebra. The last framework, which we consider, is coalgebraic modal logic, the syntax of which is concretely given.	expressive power (computer science);initial algebra;modal logic;network abstraction layer;one-to-one (data model);parse tree;polynomial;signature;subsumption architecture	Dirk Pattinson	2002		10.1007/978-3-540-40020-2_23	modal logic;dynamic logic;monoidal t-norm logic;t-norm fuzzy logics;normal modal logic;modal μ-calculus;computer science;intermediate logic;axiom s5;kripke semantics;accessibility relation;multimodal logic;algorithm	Logic	-14.59559143699125	15.238820190494762	103278
2ce5b867a51e878969740a2224a65143f9e98a13	conjunctive queries on probabilistic graphs: combined complexity	probabilistic database;probabilistic graph;combined complexity;conjunctive query	Query evaluation over probabilistic databases is known to be intractable in many cases, even in data complexity, i.e., when the query is fixed. Although some restrictions of the queries and instances[4] have been proposed to lower the complexity, these known tractable cases usually do not apply to combined complexity, i.e., when the query is not fixed. This leaves open the question of which query and instance languages ensure the tractability of probabilistic query evaluation in combined complexity.  This paper proposes the first general study of the combined complexity of conjunctive query evaluation on probabilistic instances over binary signatures, which we can alternatively phrase as a probabilistic version of the graph homomorphism problem, or of a constraint satisfaction problem (CSP) variant. We study the complexity of this problem depending on whether instances and queries can use features such as edge labels, disconnectedness, branching, and edges in both directions. We show that the complexity landscape is surprisingly rich, using a variety of technical tools: automata-based compilation to d-DNNF lineages [4], ß-acyclic lineages, the X-property for tractable CSP[25], graded DAGs[28] and various coding techniques for hardness proofs.	automata theory;cobham's thesis;compiler;conjunctive query;constraint satisfaction problem;data compression;directed acyclic graph;electronic signature;graph homomorphism;hardness of approximation;probabilistic database;query language;type signature	Antoine Amarilli;Mikaël Monet;Pierre Senellart	2017		10.1145/3034786.3056121	query optimization;probabilistic analysis of algorithms;boolean conjunctive query;computer science;probabilistic database;theoretical computer science;database;complexity of constraint satisfaction;conjunctive query	DB	-6.528512218418232	18.088501042364427	103296
2c84524baf3590d986a2d8839caf94f96dabe83f	hybrid programs: symmetrically combining natively discrete and continuous truth-values		The iterates TP (I) of the one-step consequence operator TP of a finite or infinite propositional normal logic program P applied to Herbrand interpretation I constitute a function t 7→ TP (I) from natural numbers to Herbrand interpretations. Without loss of generality, altering clause p← q1, . . . qm,¬r1, . . . ¬rn	logic programming	Howard A. Blair;David W. Jakel;Robert J. Irwin;A. J. Rivera	2008			discrete mathematics;without loss of generality;truth value;operator (computer programming);iterated function;natural number;herbrand interpretation;mathematics	AI	-11.40924952676592	14.154829393475039	103306
16aecf240f29a5df099cf7fb7c2803c5daf2b639	solution to the problem of zantema on a persistent property of term rewriting systems	normalisation;language theory;reduction;calcul formel;forma normal;ingenieria logiciel;teoria lenguaje;software engineering;term rewrite system;calculo formal;reecriture;normalizacion;genie logiciel;normal form;reduccion;forme normale;rewriting;term rewriting;computer algebra;lenguaje formal;standardization;theorie langage;formal language;reescritura;langage formel	A property P of term rewriting systems is persistent if for any many-sorted term rewriting system R, R has the property P i its underlying term rewriting system (R), which results from R by omitting its sort information, has the property P . It is shown that termination is a persistent property of many-sorted term rewriting systems that contain only variables of the same sort. This is the positive solution to a problem of Zantema, which has been appeared as Rewriting Open Problem 60 in literature.	ibm system r;persistent data structure;rewriting	Takahito Aoto	1998		10.1007/BFb0056618	formal language;discrete mathematics;symbolic computation;reduction;rewriting;computer science;philosophy of language;mathematics;semi-thue system;confluence;standardization;algorithm	Logic	-12.294418617870987	18.112517418553576	103344
32e7ccb0d86e0e3135c50270f772da938d239b4f	efficient hierarchical reasoning about functions over numerical domains	automated reasoning;hybrid system;satisabilit y	We show that many properties studied in mathematical analysis (monotonicity, boundedness, inverse, Lipschitz properties possibly combined with continuity, derivability) are expressible by formulae in a class for which sound and complete hierarchical proof methods for testing satisfiability of sets of ground clauses exist. The results are useful for automated reasoning in analysis and in the verification of hybrid systems.		Viorica Sofronie-Stokkermans	2008		10.1007/978-3-540-85845-4_17	combinatorics;discrete mathematics;mathematics;algorithm	AI	-11.31129993232889	15.665682337321234	103437
5e4a18ada1f815ddba83f85e7824f0045665570a	logical inference of horn clauses in petri net models	pure literal;high level petri net;resolution;splitting clauses;expert systems;red petri;first order predicate logic;helium;horn clause;logic;horn clauses;inference mechanisms;logical inconsistency check;splitting clauses logical inference horn clauses petri net models propositional logic first order predicate logic net model logical inconsistency check t invariants resolution one literal pure literal;first order;petri nets horn clauses inference mechanisms;petri net models;logic programming;t invariants;propositional logic;information management;decision support systems;reseau petri haut niveau;influence logique;management information systems;artificial intelligence;clause horn;inference algorithms;petri nets inference algorithms logic programming artificial intelligence information management management information systems deductive databases expert systems decision support systems;petri nets;logical inference;petri net;net model;reseau petri;logique;logica;deductive databases;one literal	This paper studies Petri net models for the Horn clause form of propositional logic and of first order predicate logic. A net model for logical inconsistency check is proposed. Algorithms for computing T·invariants of Petri net models of logical inference systems are investigated. The algorithms are ba8ed on the idea of resolution and exploit the presence of one-literal, pure-literal and splitting clauses to lead to faster computation. Algorithms for computing T-invariants of High Level Petri net models of predicate logic are presented.	algorithm;computation;first-order logic;horn clause;literal (mathematical logic);petri net;propositional calculus	Chuang Lin;Abhijit Chaudhary;Andrew B. Whinston;Dan C. Marinescu	1993	IEEE Trans. Knowl. Data Eng.	10.1109/69.224194	non-classical logic;horn-satisfiability;stochastic petri net;horn clause;computer science;artificial intelligence;theoretical computer science;first-order logic;information management;petri net;expert system;algorithm	AI	-18.19065710120517	10.988028739671263	103474
91e4c339b6193203289c62bf9a1dcdc7a023e4ff	missionaries and cannibals in the causal calculator	knowledge representation	"""A knowledge representation formalism is \elaboration tolerant"""" to the extent that it is convenient to modify a set of facts expressed in the formalism to take into account new phenomena or changed circumstances. John McCarthy illustrated this idea by deening 19 elaborations of the Missionaries and Cannibals Problem. We argue that, to a certain degree, the goal of elaboration tolerance is met by the input language of Norman Mc-Cain's Causal Calculator. We present formal descriptions of the basic Missionaries and Cannibals Problem and of ten of McCarthy's enhancements as input les accepted by the Causal Calculator. Each enhancement is obtained from the basic formulation by the simplest kind of elaboration|adding postulates."""	causal filter;causality;concurrency (computer science);knowledge representation and reasoning;semantics (computer science)	Vladimir Lifschitz	2000			theoretical computer science;algorithm;knowledge representation and reasoning;calculator;computer science	AI	-14.69630358854225	6.227235673433349	103488
a6f029743f42a1750f79f19947522298f5fcae63	cancellative abelian monoids and related structures in refutational theorem proving (part ii)		Cancellative superposition is a refutationally complete calculus for first-order equational theorem proving in the presence of the axioms of cancellative Abelian monoids, and, optionally, the torsion-freeness axioms. Thanks to strengthened ordering restrictions, cancellative superposition avoids some of the inefficiencies of classical AC-superposition calculi. We show how the efficiency of cancellative superposition can be further improved by using variable elimination techniques, leading to a significant reduction of the number of variable overlaps. In particular, we demonstrate that in divisible torsion-free Abelian groups, variable overlaps, AC-unification and AC-orderings can be avoided completely.		Uwe Waldmann	2002	J. Symb. Comput.	10.1006/jsco.2002.0537	variable elimination;combinatorics;discrete mathematics;cancellative semigroup;first-order logic;mathematics;abelian group;automated theorem proving;algebra	Logic	-10.02547016090208	17.59288288355843	103532
5a69c5540488da8eab5220c014efcbc5d227e419	on the relationship between logic programs and specifications	satisfiability	The fundamental relation between a program P and its speciication S is cor-rectness: P satisses S if and only if P is correct with respect to S. In logic programming, this relationship can be particularly close, since logic can be used to express both speciications and programs. Indeed logic programs are often regarded and used as (executable) speciications themselves. In this paper, we argue that the relation between S and P should be rmly set in the context of the underlying problem domain, which we call a framework F, and we give a model-theoretic view of the correctness relation between speciications and programs in F. We show that the correctness relation between S and P is always well-deened. It thus provides a basis for properly distinguishing between S and P. We use the subset example throughout, to illustrate our model-theoretic approach.	correctness (computer science);ercim cor baayen award;executable;logic programming;problem domain;theory	Kung-Kiu Lau;Mario Ornaghi	1997			axiomatic semantics;logic synthesis;programming language;horn clause;description logic;satisfiability;algorithm;computer science	PL	-15.606503783496507	17.452608198918835	103589
2552a3b9a0a8b6f7f742c206df41fe81a7a415e9	steps toward formalizing context	lenguaje natural;pragmatics;representacion conocimientos;systeme intelligent;procesamiento informacion;philosophy of language;cognitive psychology;formalization;information retrieval;sistema inteligente;logic;langage naturel;semantics;tratamiento lenguaje;intelligence artificielle;raisonnement;language processing;recherche information;natural language;contexto;information processing;traitement langage;intelligent system;razonamiento;contexte;formalizacion;artificial intelligence;computational linguistics;inteligencia artificial;recuperacion informacion;language;reasoning;knowledge representation;formalisation;traitement information;representation connaissances;context;contextual reasoning	The issue of context arises in various areas of AI, including knowledge representation, natural language processing, and intelligent information retrieval. Although the word context is frequently used in descriptions, explanations, and analyses of computer programs in these areas, its meaning is frequently left to the reader’s understanding; that is, it is used in an implicit and intuitive manner.1 An example of how contexts may help in AI is found in McCarthy’s (constructive) criticism (McCarthy 1984) of MYCIN (Shortliffe 1976), a program for advising physicians on treating bacterial infections of the blood and meningitis. When MYCIN is told that the patient has Chlorae Vibrio in his intestines, it would immediately recommend two weeks of tetracycline treatment and nothing else. While this would indeed do away with the bacteria, the patient would perish long before that due to diarrhea. A “contextual” version of mycin should know about the context of a treatment and would realize that any prescription must be made in the light of the fact that there is alarming dehydration. Thus, in the contextual MYCIN, the circumstances surrounding a patient would have to be made explicit using a formal approach and would be used as such by the program. The main motivation for studying formal contexts is to resolve the problem of generality in AI, as introduced by McCarthy (1987). McCarthy believes that AI programs suffer from a lack of generality. A seemingly minor addition (as in the MYCIN example) to the particular, predetermined possibilities that a program is required to handle often necessitates a partial redesign and rewrite of the program. Explicitly represented contexts would help because a program would then make its assertion about a certain context. A more general objection to the implicit representation of context—unless the representation is part of a program that is not mission critical (in a broad sense of the term)—can be given as follows: Assume that we write longer (more involved in terms of complexity) or shorter (simpler in terms of complexity) axioms depending on which implicit context we are in. The problem is that long axioms are often longer than is convenient in daily situations. Thus, we find it handy to utter “this is clever,” leaving any explanation about whether we are talking about a horse or a mathematical argument to the context of talk. However, shorter axioms might invite just the opposite of a principle of charity from an adversary. To quote McCarthy (1987, p. 1034):	adversary (cryptography);assertion (software development);computer program;handy board;information retrieval;knowledge representation and reasoning;mission critical;mycin;natural language processing;rewrite (programming)	Varol Akman;Mehmet Surav	1996	AI Magazine		natural language processing;information processing;computer science;artificial intelligence;philosophy of language;computational linguistics;semantics;language;natural language;logic;pragmatics	AI	-9.687459812819572	5.6686337775506	103938
4ccedd60d4d6e94468201744bc76f7846b3c6143	the galvin-prikry theorem and set existence axioms	logique mathematique;axiomatic;logica matematica;recursividad;mathematical logic;theorem proving;demonstration theoreme;axiomatico;recursivite;particion;partition;demostracion teorema;axiomatique;recursivity	H. Friedman observed the following phenomenon (or the ‘theme’ of Reverse Mathe in many branches of ordinary mathematics: When the theorem is proved from the right ; the axioms can be proved from the theorem. In this paper, we give an instance that the of Reverse Mathematics does not apply to the lightface statements, by demonstrating I statement that ah C: partitions are Ramsey is deducible over the system m the of Xi monotone inductive definition, but the reversal is not deducible	ccir system m;recursive definition;reverse mathematics;monotone	Kazuyuki Tanaki	1989	Ann. Pure Appl. Logic	10.1016/0168-0072(89)90066-3	partition;recursion;mathematical logic;mathematical analysis;discrete mathematics;topology;mathematics;automated theorem proving;axiom;programming language;algorithm;algebra	Theory	-8.366579576402255	12.202164473467265	103960
1af8a98c6fb9dbea02a5dbb3f98f23323f42bd3b	three variables are enough for real-time specification		A natural framework for real-time specification is monadic first-order logic over the structure (R, <,+1)—the ordered real line with unary +1 function. Our main result is that (R, <,+1) has the 3-variable property: every monadic first-order formula with at most 3 free variables is equivalent over this structure to one that uses 3 variables in total. As a corollary we obtain also the 3-variable property for certain unary arithmetic functions on the reals in place of +1. Finally we exhibit a bijection f : R → R such that (R,<, f) does not have the k-variable property for any k.	first-order logic;first-order predicate;flexos;free variables and bound variables;like button;monadic predicate calculus;polynomial;real-time clock;real-time transcription;theory;unary operation;unified model;monotone;z/vm	Timos Antonopoulos;Paul Hunter;Shahab Raza;James Worrell	2014	CoRR			Logic	-9.044020717241146	17.892367139477116	104201
ef59ba88db90ebee2357f83e485fca7bead8a2ba	significance, necessity, and verification			formal verification	Leonard Goddard	1980	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093883040	applied mathematics;algorithm;mathematics	Logic	-7.909033239232245	8.738602449577671	104208
d276747af8c26e79228b6cc770ae09afde985d9b	recognizable subsets of a group: finite extensions and the abelian case	abelian group	 It is proved that for rational free abelian group languages recognizability is decidable and the corresponding syntactic congruences are also decidable. Other results focus the problem of relating closure results and decidability problems involving rational/recognizable languages in a (finitely generated) group H and a finite extension G of H . As a consequence of these results, generalizations to rational languages of any finitely generated abelian group are obtained, as well as alternative... 		Pedro V. Silva	2002	Bulletin of the EATCS		discrete mathematics;mathematics;g-module;abelian group;ca-group;rank of an abelian group;elementary abelian group;arithmetic of abelian varieties;omega and agemo subgroup;solvable group	NLP	-4.806871465468982	17.30250001745302	104284
9537b8f0d853ad5f0fb7909f2179a2d748555bf9	déduction automatique avec contraintes symboliques dans les théories équationnelles. (automated deduction with symbolic constraints in equational theories)			automated theorem proving;natural deduction;theory	Laurent Vigneron	1994				SE	-16.113631531100562	15.456746871475577	104584
1e6e47dfb7ad1545408c70bb4c2636282ed60bf6	argumentative approaches to reasoning with maximal consistency		Reasoning with the maximally consistent subsets (MCS) of the premises is a well-known approach for handling contradictory information. We introduce two argumentation-based methods for doing so: a declarative approach that is related to Dung-style semantics for abstract argumentation, and a computational approach that is based on extensions of Gentzentype proofs systems. This brings about a new perspective on reasoning with MCS which shows a strong link between the latter and argumentation systems, and which can be extended to related formalisms. A by-product of this is the introduction of a dynamic proof system for classical logic and rebuttal attacks, which is sound and complete with respect to Dung’s stable semantics for the associated argumentation framework.	argumentation framework;maximal set;proof calculus	Ofer Arieli;Christian Straßer	2016			argumentation framework;argumentation theory;theoretical computer science;algorithm;mathematical proof;argumentative;classical logic;rebuttal;computer science;semantics;probabilistic argumentation	AI	-15.819644864885095	7.476017528460724	104619
abc09639ffd545e862d6cb10da2eca6203d694b1	specifications, models, and implementations of data abstractions	data abstraction	We consider the specification and verification of modules in hierarchically structured programs, as proposed by Parnas and Hoare. We argue that a specification for such a module is a set of sentences in some logical language in ?which the names to be exported by the module appe*lr as nonlogical symbols. We further argue <that an implementation of one module in terms of another module is a translation of the nonlogical symbols of the first specification into the language of the second. Equality must also be interpreted. We propose necessary conditions which any such notion of ‘correct implementation’ ought to satisfy. These criteria provide a basis for judging the logical adequacy of any proplosed specification language and definition of implementation. We then study DL,P, a specification language obtained by adding uninterpreted procedure symbols to Pratt’s first order dynamic logic. We present a definition of ‘ilmplementation’ for DLP, and we show it satisfies these conditions. The main theorem, called the Fm*plementation Theorem, extends the Interpretation Theorem from first-order logic to DLP. The proof of this theorem is complicated by tht= necessity of deaEing with modalities, parzmeters tu procedures, interpretations of equality, and interpretations of sorts as tuples.	digital light processing;dynamic logic (modal logic);first-order logic;first-order predicate;hoare logic;knuth–morris–pratt algorithm;p (complexity);specification language	Mitchell Wand	1982	Theor. Comput. Sci.	10.1016/0304-3975(82)90097-4	computer architecture;computer science;theoretical computer science;mathematics;programming language	Logic	-16.570264054349405	16.72429462519127	104664
91d2be33fd1f564f4f1d9959a0ff09f85d07ea41	towards a geometry of recursion	traced categories;fixed point operators;geometry of interaction;linear functionals;fixed point;hilbert space;unique decomposition categories;theory of computing;recursion	Any mathematical theory of algorithms striving to offer a foundation for programming needs to provide a rigorous definition for an abstract algorithm. The works reported by Girard (1988) in 10 and by Moschovakis (1989, 1995) in 29?31 are among the best examples of such attempts. They both try to offer a mathematically precise and rigorous formulation of an abstract algorithm, intend to keep the algorithmic flavour present and take the notion of recursion as primary and central. The present work is motivated by Girard?s GoI 2 paper (Girard (1988) 10, which offers a treatment of recursion in terms of fixed points of linear functions. It is situated in the context of the geometry of interaction (GoI) program and is carried out in the concrete setting of the space of bounded linear maps on a Hilbert space. In this paper, we extend the work in Girard (1988) 10 to the context of traced unique decomposition categories, once again emphasizing the role of abstract trace in the theory of computing. We show that traced unique decomposition categories enriched over partially additive monoids or their variations suffice to axiomatize and hence extend the work in Girard?s GoI 2 paper. The theory developed here allows us to formulate an abstract notion of an algorithm as a pair of morphisms in a traced unique decomposition category, an abstract notion of computation as the execution formula (defined using the trace operator) applied to an algorithm, and finally a notion of deadlock-freeness for algorithms. In addition, we can treat recursive definitions, fixed points and fixed point operators in a uniform way in terms of traced unique decomposition categories.	recursion	Esfandiar Haghverdi	2011	Theor. Comput. Sci.	10.1016/j.tcs.2010.12.024	recursion;combinatorics;discrete mathematics;geometry of interaction;computer science;mathematics;fixed point;programming language;algorithm;algebra;hilbert space	Theory	-7.498097994745438	14.280999029034971	104806
e44e86bf477e42846244d87ed297e099cdba9664	intelligent instantiation and supersafe rules		In the input languages of most answer set solvers, a rule with variables has, conceptually, infinitely many instances. The primary role of the process of intelligent instillation is to identify a finite set of ground instances of rules of the given program that are “essential” for generating its stable models. This process can be launched only when all rules of the program are safe. If a program contains arithmetic operations or comparisons then its rules are expected to satisfy conditions that are even stronger than safety. This paper is an attempt to make the idea of an essential instance and the need for “supersafety” in the process of intelligent instantiation mathematically precise. 1998 ACM Subject Classification D.3.1 Formal Definitions and Theory	answer set programming;international conference on logic programming;local variable;stable model semantics;type safety;universal instantiation;variable (computer science)	Vladimir Lifschitz	2016		10.4230/OASIcs.ICLP.2016.7	theoretical computer science;answer set programming;finite set;computer science	AI	-18.501103100521537	13.530956925892003	104826
76e6238c44c7be7f8d8923ae5fb7c1fa03ff44ff	from the subformula property to cut-admissibility in propositional sequent calculi		While the subformula property is usually a trivial consequence of cut-admissibility in sequent calculi, it is unclear in which cases the subformula property implies cut-admissibility. In this paper, we identify two wide families of propositional sequent calculi for which this is the case: the (generalized) subformula property is equivalent to cutadmissibility. For this purpose, we employ a semantic criterion for cut-admissibility, which allows us to uniformly handle a wide variety of calculi. Our results shed light on the relation between these two fundamental properties of sequent calculi, and can be useful to simplify cut-admissibility proofs in various calculi for non-classical logics, where the subformula property (equivalently, the property known as “analytic cut-admissibility”) is easier to show than cut-admissibility.1 Keywords— Sequent Calculus, Subformula Property, Cut-elimination, Analyticity	sequent calculus;well-formed formula	Ori Lahav;Yoni Zohar	2018	J. Log. Comput.	10.1093/logcom/exy018	algorithm;mathematics;discrete mathematics;sequent	Logic	-9.167433746896094	14.566828158637943	104997
63281fb30d6f82562a8ea8b77ac6455289d1e000	analytic tableau systems and interpolation for the modal logics kb, kdb, k5, kd5	modal logic;decision procedure	We give complete sequent-like tableau systems for the modal logics KB , KDB , K5, and KD5. Analytic cut rules are used to obtain the completeness. Our systems have the analytic superformula property and can thus give a decision procedure. Using the systems, we prove the Craig interpolation lemma for the mentioned logics.	amd k5;computer science;conjunctive normal form;curve fitting;decision problem;farkas' lemma;interpolation;kilobyte;long division;method of analytic tableaux;modal logic	Linh Anh Nguyen	2001	Studia Logica	10.1023/A:1013834410884	modal logic;normal modal logic;discrete mathematics;philosophy;epistemology;mathematics;algorithm	Logic	-12.329624117583242	12.520189303607879	105038
03459cd1a85909b60e1b3050b725a8773630fc56	abductive inference in defeasible reasoning: a model for research programmes	abduction;theoretical framework;artifical intelligence;scientific reasoning;logic programs;defeasible reasoning;scientific research	Abduction is regarded as the inference process that goes from observations to explanations within a more general context or theoretical framework. There are good characterizations of abduction of surprising observations in monotonic theories. Also, in normal logic programs there are a tight relation among SLDNF and the abduction of negative literals. However, a problem that faces abduction is the explanation of  anomalous  observations, i.e., observations that are contradictory with respect to the current theory. For this reason, in this work we will consider the problem of embedding abduction of surprising and anomalous observations in defeasible (nonmonotonic) theories. We discuss some issues arising the pragmatic acceptance of abductive inferences in defeasible theories, and how to accommodate anomalous observations and characterize all the possible outcomes that a defeasible theory may face when confronted with new evidence. We explore the use of  partial structures  approach as a semantic foundation for our system. Finally, we discuss an application of our system as a formal device for representing the methodology of scientific research programmes. In this representation, a programme is regarded as a defeasible theory that draws predictions. When confronted with surprising or anomalous observations, the programme protects itself by means of  heuristic  procedures, which are represented in our system as abductive inference procedures.	abductive reasoning;defeasible reasoning	Claudio Delrieux	2004	J. Applied Logic	10.1016/j.jal.2004.07.003	scientific method;epistemology;artificial intelligence;mathematics;defeasible reasoning;algorithm	Logic	-13.969736631406628	4.285591734479107	105073
f2b2ad1580ecb128086273945a7f8994ec34dc86	event structures and non-orthogonal term graph rewriting	standardisation;graph rewriting;lambda calculus	"""Received 1. Abstract We show that for every term graph in a left-linear but non-orthogonal term graph rewrite system, one can construct an event structure which represents all the possible reductions which can occur in reduction sequences starting from that term graph. Every nite reduction sequence from that graph corresponds to a connguration of the event structure, and L evy-equivalent sequences correspond to the same connguration. Garbage collection is modelled in the event structure by an \erases"""" relation. The asymmetric connicts which arise in non-orthogonal rewrite systems are modelled by introducing a \prevents"""" relation. The conngurations of the event structure then form the state space of an event automaton. Taking the directed completion of this space yields a prime algebraic domain. 2. Introduction By term graph rewriting we have in mind the operational style of rewriting described in (BvEG + 87). A more elegant, algebraic approach to the semantics may be found in (Ken91). Since the arguments in the proofs in this paper are almost exclusively operational in nature we have assumed the semantics in the former. We will occasionally use notation that assumes redexes and sequences are morphisms in the category described in (KKSdV93) (as they are). This done as anotational convenience and does not assume any category theory on the part of the reader. Following the approach of the work on event structures for orthogonal term graph rewriting systems in (KKSdV93) we assume that garbage collection is not delayed and is implicit in a rewrite step. We require the left-hand sides of rules in the rewriting systems to be representations of left-linear terms and do not allow them to contain cycles; crucially we allow non-orthogonal rules. This class of term graph rewriting systems is quite general, suuciently general to be able to describe not only the functional language Clean but also languages without a functional strategy, including the abstract reduction used to do strictness analysis in Clean (see (ENP91), (Noc94)), and non-deterministic term graph rewriting. In point of fact the class we consider is more general than necessary to describe any of these since none of"""	abstract interpretation;abstract semantic graph;automaton;category theory;clean;functional programming;garbage collection (computer science);graph rewriting;linear algebra;rewrite (programming);state space;strictness analysis	David J Clark;Richard Kennaway	1996	Mathematical Structures in Computer Science		combinatorics;discrete mathematics;mathematics;confluence;lambda calculus;graph rewriting;abstract semantic graph;rewriting	Logic	-4.606208473375601	15.837681096154608	105108
60f810fb56ee46b02f061437d36bfac3021d5174	cut-free indexed calculi for modal logics containing the barcan axiom.				Aida Pliuskeviciene	1996			discrete mathematics;axiom;modal;computer science	Logic	-12.148193055417542	12.85759838604466	105180
29fa95f64e324335c67adee295f697389cb59f96	canonical horn representations and query learning	learning theory;canonical representation	We describe an alternative construction of an existing canonical representation for definite Horn theories, the Guigues-Duquenne basis (or GD basis), which minimizes a natural notion of implicational size. We extend the canonical representation to general Horn, by providing a reduction from definite to general Horn CNF. We show how this representation relates to two topics in query learning theory: first, we show that a well-known algorithm by Angluin, Frazier and Pitt that learns Horn CNF always outputs the GD basis independently of the counterexamples it receives; second, we build strong polynomial certificates for Horn CNF directly from the GD basis.	algorithm;conjunctive normal form;horn clause;polynomial;theory	Marta Arias;José L. Balcázar	2009		10.1007/978-3-642-04414-4_16	canonical form;combinatorics;computer science;machine learning;learning theory;mathematics;algorithm	ML	-7.43079425821638	17.221190371314865	105233
67c746131c9e13eecaba83d4dcddc6c5df1c3c93	on first-order theories with provability operator	first-order theory;provability operator	In this paper the modal operator “ x is provable in Peano Arithmetic” is incorporated into first-order theories. A provability extension of a theory is defined. Presburger Arithmetic of addition, Skolem Arithmetic of multiplication, and some first order theories of partial consistency statements are shown to remain decidable after natural provability extensions. It is also shown that natural provability extensions of a decidable theory may be undecidable.	first-order predicate	Sergei N. Artëmov;Franco Montagna	1994	J. Symb. Log.		arithmetic;discrete mathematics;robinson arithmetic;provability logic;presburger arithmetic;first-order logic;second-order arithmetic;hilbert's second problem;true arithmetic;mathematics;programming language;non-standard model of arithmetic;peano axioms;primitive recursive arithmetic;algebra	Theory	-11.458505929561218	15.02383826010239	105315
a2fabd9a0c4b762604f20e050e3520992dfdc031	gradual classical logic for attributed objects - extended in re-presentation		Our understanding about things is conceptual. By stating that we reason about objects, it is in fact not the objects but concepts referring to them that we manipulate. Now, so long just as we acknowledge infinitely extending notions such as space, time, size, colour, etc,-in short, any reasonable quality-into which an object is subjected, it becomes infeasible to affirm atomicity in the concept referring to the object. However, formal/symbolic logics typically presume atomic entities upon which other expressions are built. Can we reflect our intuition about the concept onto formal/symbolic logics at all? I assure that we can, but the usual perspective about the atomicity needs inspected. In this work, I present gradual logic which materialises the observation that we cannot tell apart whether a so-regarded atomic entity is atomic or is just atomic enough not to be considered non-atomic. The motivation is to capture certain phenomena that naturally occur around concepts with attributes, including presupposition and contraries. I present logical particulars of the logic, which is then mapped onto formal semantics. Two linguistically interesting semantics will be considered. Decidability is shown. §1. Introduction. I present a logic that expresses gradual shifts in domain of discourse. The motivation is to capture certain peculiar phenomena about concepts/objects and other concepts/objects 1 as their attributes. The first such phenomenon is that extension of a concept alters when it becomes an attribute to other concepts. Also a concept that is specified another concept as its attribute 1 These two terms will not be strongly distinguished in this work. An object may exist by itself, but to reason about relation between objects or just to speak about them, it is, as we presume, concepts referring to the objects that we reason/speak about.	atomicity (database systems);circular shift;decision problem;domain of discourse;entity;relation (database);semantics (computer science)	Ryuta Arisaka	2015	CoRR		artificial intelligence;mathematics;algorithm	AI	-13.273723206784902	6.33230198882885	105326
63b9d22e6f678cfc509a3fe9e07eab321b391927	a note on shortest developments	logic in computer science	De Vrijer has presented a proof of the finite developments theorem which, in addition to showing that all developments are finite, gives an effective reduction strategy computing longest developments as well as a simple formula computing their length. We show that by applying a rather simple and intuitive principle of duality to de Vrijer’s approach one arrives at a proof that some developments are finite which in addition yields an effective reduction strategy computing shortest developments as well as a simple formula computing their length. The duality fails for general β-reduction. Our results simplify previous work by Khasidashvili.	reduction strategy (lambda calculus)	Morten Heine Sørensen	2007	Logical Methods in Computer Science	10.2168/LMCS-3(4:2)2007	combinatorics;computer science;mathematics;algorithm	Theory	-5.652814566096821	17.9338403211301	105454
ff45350591d9d45b17bc6784d278013f4135abfe	strong normalization of second order symmetric lambda-calculus	second order;calcul ordre 2;normalisation;reduction;lambda calculus;reducibility;reductibilidad;interpretation calcul;first order;intuitionistic logic;strong normalization;normalizacion;lambda calculo;reduccion;classical logic;lambda calcul;standardization;reductibilite	Typed symmetric λ-calculus is a simple computational interpretation of classical logic with an involutive negation. Its main distinguishing feature is to be a true non-confluent computational interpretation of classical logic. Its non-confluence reflects the computational freedom of classical logic (as compared to intuitionistic logic).#R##N##R##N#Barbanera and Berardi proved in [1,2] that first order typed symmetric λ-calculus enjoys the strong normalization property and showed in [3] that it can be used to derive symmetric programs.#R##N##R##N#In this paper we prove strong normalization for second order typed symmetric λ-calculus.	lambda calculus;normalization property (abstract rewriting)	Michel Parigot	2000		10.1007/3-540-44450-5_36	discrete mathematics;classical logic;reduction;intuitionistic logic;computer science;lambda calculus;first-order logic;mathematics;programming language;second-order logic;standardization;algorithm	Logic	-12.58751269107742	16.2034264807581	105593
2259f30c359fd127c7f550d1a232f33b92a44a3a	nominal lambda calculus: an internal language for fm-cartesian closed categories	semantics;internal language;conference paper;category theory;nominal logic;fm sets;type theory;dependent types	Reasoning about atoms (names) is difficult. The last decade has seen the development of numerous novel techniques. For equational reasoning, Clouston and Pitts introduced Nominal Equational Logic (NEL), which provides judgements of equality and freshness of atoms. Just as Equational Logic (EL) can be enriched with function types to yield the lambda-calculus (LC), we introduce NLC by enriching NEL with (atom-dependent) function types and abstraction types. We establish meta-theoretic properties of NLC; define NFM-cartesian closed categories, hence a categorical semantics for NLC; and prove soundness & completeness by way of NLC-classifying categories. A corollary of these results is that NLC is an internal language for NFM-cccs. A key feature of NLC is that it provides a novel way of encoding freshness via dependent types, and a new vehicle for studying the interaction of freshness and higher order types.	atom;cartesian closed category;categorical logic;dependent type;fm broadcasting;function type;lambda calculus;natural language processing;replay attack;theory;walter pitts	Roy L. Crole;Frank Nebel	2013	Electr. Notes Theor. Comput. Sci.	10.1016/j.entcs.2013.09.009	discrete mathematics;dependent type;computer science;mathematics;semantics;programming language;type theory;algorithm;category theory	PL	-11.597794385392817	16.983472315859125	105656
37d2c2a1735fa867d32a9f9f8edc572b071ca4a6	rational equivalence relations	monoid;hierarchy;relation equivalence;automata estado acabado;relacion orden;language theory;ordering;operateur booleen;automate etat fini;teoria lenguaje;boolean operator;monoide;decision problem;relation ordre;equivalence relation;jerarquia;decidibilidad;finite automaton;transductor;transducer;decidabilite;hierarchie;relacion equivalencia;transducteur;theorie langage;decidability;operador de boole	First let’s look at (look for?) the integers. What is “missing” from the natural numbers? The answer is “additive inverses.” For example, what should one add to 7 to get the additive identity 0? If you said “negative seven,” you’re getting ahead of the game since all we have for the moment is the natural numbers, and −7 is not one of those. In fact, addition in N is the whole raison d’etre for Z, (and similarly multiplication in Z points to the need for Q.) Specifically, we want Z (i.e., negative numbers) so that everything has an additive inverse.	turing completeness;utility functions on indivisible goods	J. Howard Johnson	1986	Theor. Comput. Sci.	10.1016/0304-3975(86)90132-5	decidability;logical equivalence;equivalence;combinatorics;discrete mathematics;adequate equivalence relation;transducer;order theory;computer science;philosophy of language;decision problem;mathematics;monoid;finite-state machine;transitive relation;equivalence relation;transductor;matrix equivalence;algorithm;hierarchy;algebra	Theory	-6.394159703186771	14.86962862534686	105720
b254ff48da5c08ed3b01a3777366249ebdaca3d2	linear versus polynomial constraint databases		DEFINITION The framework of constraint databases provides a rather general model for spatial databases [14]. In the constraint model, a spatial database contains a finite number of relations, that, although conceptually viewed as possibly infinite sets of points in the real space, are represented as a finite union of systems of polynomial equations and inequalities. More specifically, in the polynomial constraint database model, a relation is defined as a boolean combination (union, intersection, complement) of subsets of some real space R (in applications, typically n = 2 or 3) that are definable by polynomial constraints of the form p(x1, ..., xn) ≥ 0, where p is a polynomial in the real variables x1, ..., xn with integer coefficients. For example, the spatial relation consisting of the set of points on the upper half of the unit disk in R can be represented by the formula x + y ≤ 1 ∧ y ≥ 0. In mathematical terminology, these spatial relations are known as semi-algebraic sets [4]. A basic query language for constraint databases is obtained by extending the relational calculus with polynomial inequalities [14]. This language is usually referred to as FO + poly. The query deciding whether the twodimensional spatial relation S is a straight line, for instance, can be expressed in this language by the sentence	algebraic equation;coefficient;database model;linear algebra;query language;relational calculus;semiconductor industry;spatial database;system of polynomial equations	Bart Kuijpers	2008		10.1007/978-0-387-35973-1_696	binary constraint;polynomial regression;degree of a polynomial;matrix polynomial;underdetermined system;reciprocal polynomial;square-free polynomial;hybrid algorithm;polynomial	DB	-4.632464946088193	16.646585062362444	105725
36defe4de786333d40b875104418a64b3dbfc570	reasoning from incomplete knowledge in a procedural deduction system	procedural deduction system;incomplete knowledge		natural deduction	Robert C. Moore	1975			model-based reasoning;procedural knowledge;reasoning system;deductive reasoning	AI	-19.030697956094038	10.324251884646664	106023
22e141057499741ffb8da472dcc31c6978b9e24e	transfinite corecursion	example semantics;transfinite semantics;program slicing;corecursion;semantic anomaly;programming language;corecursion theorem;stream-valued function;certain condition;usual corecurrent equation;transfinite corecursion	"""This paper presents theorems which enable to define transfinite semantics for programming languages easily. We call these theorems """"corecursion theorems"""" because they state the existence of a function satisfying certain conditions analogous to the usual corecurrent equations for defining stream-valued functions.Transfinite semantics have been proposed for overcoming the """"semantic anomaly"""" of program slicing. In this paper, we define two example semantics which justify this approach, relying on our corecursion theorems."""	corecursion;transfinite induction	Härmel Nestra	2005	Nord. J. Comput.		corecursion;discrete mathematics;mathematics;algorithm	Theory	-13.008448357594952	17.378452214440223	106081
6da6389d014647a31d6c25cc3f26a337413f434c	complexity of logic-based argumentation in post's framework	enumeration;post s lattice;logic based argumentation;computer and information science;boolean function;complexity;decision problem;propositional logic;counting;data och informationsvetenskap;knowledge base	Complexity of logic-based argumentation in Post's framework Nadia Creignou a , Johannes Schmidt a , Michael Thomas b & Stefan Woltran c a LIF, UMR CNRS 6166, Aix-Marseille Université, 163 Avenue de Luminy, 13288, Marseille Cedex 9, France b TWT GmbH, Bernhäuser Straße 40–42, 73765, Neuhausen a.d.F., Germany c Institut für Informationssysteme E184/2, Technische Universität Wien, Favoritenstr. 9–11, 1040, Wien, Austria Version of record first published: 13 Dec 2011.	algorithm;ambiguous name resolution;analysis of algorithms;baudot code;cobham's thesis;complexity;computation;computational complexity theory;conjunctive normal form;expect;literal (mathematical logic);logical connective;low insertion force;nl (complexity);pspace-complete;rel;relevance;schmidt decomposition;turing completeness	Nadia Creignou;Johannes Schmidt;Michael Thomas;Stefan Woltran	2011	Argument & Computation	10.1080/19462166.2011.629736	argument;boolean circuit;knowledge base;discrete mathematics;complexity;intuitionistic logic;computer science;artificial intelligence;machine learning;decision problem;mathematics;propositional calculus;boolean function;enumeration;counting;algorithm	AI	-14.53145081031911	12.648462884467802	106084
6ba1094ecad7cbd980578279bb2b6866720a2585	verification of knowledge-based programs over description logic actions		A knowledge-based program defines the behavior of an agent by combining primitive actions, programming constructs and test conditions that make explicit reference to the agent’s knowledge. In this paper we consider a setting where an agent is equipped with a Description Logic (DL) knowledge base providing general domain knowledge and an incomplete description of the initial situation. We introduce a corresponding new DLbased action language that allows for representing both physical and sensing actions, and that we then use to build knowledge-based programs with test conditions expressed in the epistemic DL. After proving undecidability for the general case, we then discuss a restricted fragment where verification becomes decidable. The provided proof is constructive and comes with an upper bound on the procedure’s complexity. ∗Supported by DFG Research Unit FOR 1513, project A1, http://www.hybrid-reasoning.org †This is an extended version of an article in Proceedings of IJCAI-15 [ZC15]	action language;complexity;description logic;knowledge base;knowledge-based systems;pick operating system;recursive set;undecidable problem;verification and validation	Benjamin Zarrieß;Jens Claßen	2015			discrete mathematics;artificial intelligence;theoretical computer science;mathematics;programming language;algorithm	AI	-18.442935857387187	13.540777350594889	106130
0ec4d4f8b02bde4e94cea715d2e23ce06125a8a1	using types to parse natural language	universal grammar;natural language;type inference	We describe a natural language parser that uses type information to determine the grammatical structure of simple sentences and phrases. This stands in contrast to studies of type inference where types and grammatical structure play opposite roles, the former being determined by the latter. Our parser is implemented in Haskell and is based on a linguistic theory called applicative universal grammar (AUG). Our results should be interesting to computer scientists in the way in which AUG relates to types and combinatory calculus, and to linguists in the way in which a very simple, brute force parsing strategy performs surprisingly well in both performance and accuracy.	applicative programming language;applicative universal grammar;brute-force search;computer scientist;haskell;natural language;parsing;type inference	Mark P. Jones;Paul Hudak;Sebastian Shaumyan	1995			natural language processing;parser combinator;computer science;type inference;parsing;natural language;programming language;top-down parsing	NLP	-11.414751364829598	8.899598326420634	106154
a00b87b03805340ba420701316a844e0c05083eb	some remarks on relational database schemes having few minimal keys	logical implication;superprime attribute;implicational closure;minimal key;np completeness;relational database;object normal form;third normal form;functional dependency;extremal attribute;boyce codd normal form;computational complexity;semantic modeling;functional relationship;relation scheme;sperner system;prime attribute;minimal key equivalence	"""Relational database schemes comprise semantic constraints to formally capture at least part of the """"real-world"""" semantics of an application. Functional dependencies constitute a basic and widely studied class of such constraints. Accordingly, many properties of this class are known, including the insight that the number of minimal keys --- as determined by a declared set of functional dependencies --- might vary extensively, from just one to exponentially many (in the number of the underlying attributes). The case of just one minimal key is known to be characterized by the set of extremal attributes forming a minimal key. Starting from this result, the present work studies schemes having only a few minimal keys. In particular, we consider the cases of schemes having two and three minimal keys, and then suggest some research for dealing with the more general case of n minimal keys. Furthermore we study the impact of additionally requiring the schemes to be in Boyce-Codd normal form or Third normal form."""	relational database	Joachim Biskup	2012		10.1007/978-3-642-28279-9_3	combinatorics;discrete mathematics;mathematics;algorithm	DB	-5.482421920222652	12.056811041467403	106166
34e1979327a9f0c0689b9db6599543f8008df728	labelling classes by sets	mathematics;axiom of choice;set theory;equivalence relation;algebra;mathematical logic and foundations;mathematics general	Let Q be an equivalence relation whose equivalence classes, denoted Q[x], may be proper classes. A function L defined on Field(Q) is a labelling for Q if and only if for all x, L(x) is a set and ∀x∀y(L(x) = L(y)↔ xQy). L is a labelling by subsets for Q if and only if ∀x ∈ Field(Q)(L(x)is a set ∧ ∅ = L(x) ⊂ Q[x]). BG denotes Bernays-Gödel class-set theory with neither the axiom of foundation, AF, nor the class axiom of choice, E. The following are relatively consistent with BG. (1) E is true but there is an equivalence relation with no labelling. (2) E is true and every equivalence relation has a labelling, but there is an equivalence relation with no labelling by subsets. 1. Discussion of the labelling problem The labelling of possibly proper equivalence classes is an important theme in set theory. Examples include the Von Neumann ordinals and the Scott cardinals, discussed in more detail below. The discussion initially takes place in the class-set theory BG of Bernays and Gödel with neither the axiom of foundation, AF, nor the set axiom of choice, AC. The customary reference to Von Neumann in ‘NBG’ is omitted both for brevity and to remind the reader that one of his axioms, AF, is not assumed. The following notational conventions are established. Upper case X, Y, . . . range over classes. Lower case x, y, . . . range over sets. Greek lower case α, β, γ, . . . range over ordinals. Q, Q1, Q2, . . . range over possibly proper equivalence relations, and the Q-equivalence class of x is denoted Q[x]. Definition 1. A function L defined on Field (Q) is a labelling for Q if and only if ∀x, y ∈ Field(Q)(L(x) = L(y)↔ xQy). L is a labelling by subsets for Q if and only if L is a labelling and ∀x ∈ Field(Q)(∅ = L(x) ⊆ Q[x]). M.V. Marshall, M.G. Schwarze: Facultad de Matemáticas, Pontificia Universidad Católica de Chile. Casilla 306, Correo 22, Santiago, Chile. e-mail: {vmarshal@mat.puc.cl, gschwarz@mat.puc.cl} This research was partially supported by Fondecyt 1980855 and by Fondecyt 1040846 220 M.V. Marshall, M.G. Schwarze L is a labelling by representatives for Q if and only if L is a labelling and ∀x ∈ Field(Q)(L(x) ∈ Q[x]). In terms of this definition, the Von Neumann ordinals were specifically introduced to be a labelling by representatives for the well-order types. In the presence of AC a subclass of the Von Neumann ordinals becomes the range of a labelling by representatives for the cardinal numbers, i.e. the equivalence classes under the relation C of cardinal equivalence. In the absence of AC it was unclear how to label the cardinal numbers until Scott [7] used AF as follows. For given α, Rα denotes the set of sets with rank less than α as perVon Neumann. For given x, α(x) denotes the least α with C[x] ∩ Rα = ∅. The Scott cardinal |x| is defined by |x| = C[x] ∩ Rα(x). This function is a labelling by subsets for C. Information about other possible labellings for C is summarized in next page (a), (b) and (c). Scott’s labelling method is not confined to cardinal numbers. In the presence of AF, for X = ∅ define α(X) to be the least α with X ∩ Rα = ∅. We can define L(X), the distinguished set of X, as L(X) = X ∩ Rα(X), and for any Q = ∅ and x ∈ Field(Q) define the function LQ via (∗) LQ(x) = L(Q[x]). LQ is a labelling by subsets for Q. The operation L defined from non-empty classes to sets should be thought of as a universal labelling, meaning that for any Q = ∅ the operation LQ defined by (∗) above is a labelling. Such operations from non-empty classes to sets are higher-order objects and, as such, they are not objects of BG. This kind of object can be introduced as unary operation symbols. (Meta-)Definition 2. The unary operation L defined from non-empty classes to sets is a universal labelling if and only if (∗∗) ∀X = ∅∀Y = ∅(X ∩ Y = ∅ → L(X) = L(Y )). L is a universal labelling by subsets if and only if (†) ∀X = ∅(∅ = L(X) ⊆ X). L is a universal labelling by representatives if and only if (††) ∀X = ∅(L(X) ∈ X). Labelling classes by sets 221 Note that either (†) or (††) implies (∗∗) so that universal labellings by subsets or representatives are automatically universal labellings. Also, note that L is a universal labelling if and only if each LQ defined by (∗) is a labeling for Q. ‘UL’ (respectively ‘ULS’ and ‘ULR’) denotes the metastatement of BG that there exists a universal labelling (respectively a universal labelling by subsets, and by representatives). In an informal approach to high-order objects these are indeed metastatements, calling for a definable function on classes. This does not prevent them from being provable in extensions of BG; for example, BG + AF proves ‘ULS’. In this paper, ‘UL’ or ‘ULS’ will be refuted in certain models of BG by exhibiting a Q which does not have a labelling of the required type. Each of the following statements concerning labellings for the relation C of cardinal equivalence has been proved to be relatively consistent with BG. (a) C has no labelling. (b) ‘ULS’ is true, but C has no labelling by representatives. (c) AF is true and C has a labelling by representatives, but AC is false. Part (a) is due to Levy [4] and independently to Gauntt (unpublished). Parts (b) and (c) are from Pincus [6]. We now consider the effects of AC on labellings. ‘ULR’ is clearly a very strong choice principle which implies not only AC but also Gödel’s Axiom E. Axiom E states that there is a function F defined on nonempty sets satisfying	af-heap;anisotropic filtering;artificial consciousness;email;emoticon;graph labeling;gödel numbering;job control (unix);lambda calculus;letter-quality printer;marshalling (computer science);provable security;set theory;turing completeness;unary operation;von neumann architecture;whole earth 'lectronic link	M. Victoria Marshall;M. Gloria Schwarze	2005	Arch. Math. Log.	10.1007/s00153-004-0261-z	equivalence class;logical equivalence;quotient algebra;combinatorics;discrete mathematics;adequate equivalence relation;borel equivalence relation;congruence relation;binary relation;mathematics;axiom of choice;equinumerosity;equivalence relation;symmetric relation;set theory;algebra	Theory	-7.510951324969752	11.485499030613006	106184
08fb9395d9d396f8f24beea88620bb8a89af5a44	logical inference of clauses based on petri net models	petri net	This paper extends the logical inference of Horn clauses in Petri net models to cover a large class of non-Horn clauses. Based on four-valued logic and the conflict transition concept, we show how the Petri net model for this class of non-Horn clauses can be constructed. The clause inference is solved by the T-invariant method or the fixpoint of markings. Both forward and backward inference can be used in our model. It is further shown that these techniques are efficient for the common classes of monotonic reasoning. Q 1998 John Wiley & Sons, Inc.	algorithm;first-order predicate;fixed point (mathematics);four-valued logic;high-level programming language;horn clause;item unique identification;john d. wiley;petri net;reachability	Chuang Lin;Samuel T. Chanson	1998	Int. J. Intell. Syst.	10.1002/(SICI)1098-111X(199809)13:9%3C821::AID-INT3%3E3.0.CO;2-K	horn-satisfiability;unit propagation;computer science;artificial intelligence;sld resolution;machine learning;invariant;petri net;algorithm;rule of inference	AI	-14.648073024678634	13.713769327305739	106204
7995714def681b06e67974844e66760fec8c2c9e	on the relationship between non-horn magic sets and relevancy testing	automatic proving;search space;model generation;demostracion automatica;logical programming;raisonnement;theorem proving;demonstration automatique;demonstration theoreme;theorem prover;programmation logique;razonamiento;information system;reasoning;demostracion teorema;programacion logica;systeme information;sistema informacion	Model-generation based theorem provers such as SATCHMO and MGTP suffer from a combinatorial explosion of the search space caused by clauses irrelevant to the goal (negative clause) to be solved. To avoid this, two typical methods have been proposed. One is relevancy testing implemented in SATCHMORE by Loveland et al., and the other is non-Horn magic sets that are the extension of Horn magic sets and used for MGTP. In this paper, we define the concept of weak relevancy testing, which somewhat relaxes the relevancy testing constraint. Then, we analyze the relationship between non-Horn magic sets and weak relevancy testing in detail, and prove that the total number of interpretations generated by MGTP employing non-Horn magic sets is always the same as that by SATCHMORE using weak relevancy testing. Thus, we find that non-Horn magic sets and weak relevancy testing, although they are completely different approaches, have the same power in pruning redundant branches of a proof tree.	abductive reasoning;algorithm;artificial intelligence;automated reasoning;automated theorem proving;computation;kl1;lecture notes in computer science;logic programming;model elimination;natural deduction;prolog;reed–solomon error correction;relevance;springer (tank);top-down and bottom-up design	Yoshihiko Ohta;Katsumi Inoue;Ryuzo Hasegawa	1998		10.1007/BFb0054270	computer science;artificial intelligence;pure mathematics;mathematics;automated theorem proving;programming language;algorithm	AI	-16.27012641963708	15.523788402863861	106286
c98aa6d51bc80be06b304f1b7c4513825e4fd1ad	measurement of fairness in process models using entropy and stochastic petri nets	analytical models;uncertainty;mathematical model;entropy;markov processes;petri nets	Measurements of various properties of the process models in the last few years become relatively widely explored area. These are properties such as uncertainty, complexity, readability or cohesion of process models. Quantification of these properties can provide better insight in term of, for instance, user-friendliness, predictability, clarity, etc. of the process model. The aim of this work is to design a method for quantification of fairness in the process models which are modelled using stochastic Petri nets. The method is based on mapping the set of all reachable markings of Petri net into Markov chain and then quantification of entropy from stationary probabilities of the individual places (all places or a specific subset). The resulting value of fairness is from the interval <0, 1>.	bottleneck (engineering);cohesion (computer science);coloured petri net;complexity;diversification (finance);entity;entropy (information theory);fairness measure;markov chain;process modeling;process state;state (computer science);stationary process;steady state;stochastic petri net;usability	Martin Ibl	2014	2014 9th International Conference on Software Paradigm Trends (ICSOFT-PT)	10.5220/0005098301150120	discrete mathematics;stochastic petri net;artificial intelligence;machine learning;mathematics;petri net	SE	-6.311964522379197	5.449390522620269	106360
31b993cb30a3f19b2e6b12bb65557ebd25259176	guarded horn clauses and experience with parallel logic programming			horn clause;logic programming	Jiro Tanaka;Kazunori Ueda;Tashihiko Miyazaki;Akikazu Takeuchi;Yuji Matsumoto;Koichi Furukawa	1986				AI	-15.602560155098546	13.90689367441127	106368
939e4ec19512b6c8ad826d2fc9b06d95588fd5a1	rationality and context in defeasible subsumption		Description logics have been extended in a number of ways to support defeasible reasoning in the KLM tradition. Such features include preferential or rational defeasible concept subsumption, and defeasible roles in complex concept descriptions. Semantically, defeasible subsumption is obtained by means of a preference order on objects, while defeasible roles are obtained by adding a preference order to role interpretations. In this paper, we address an important limitation in defeasible extensions of description logics, namely the restriction in the semantics of defeasible concept subsumption to a single preference order on objects. We do this by inducing a modular preference order on objects from each preference order on roles, and use these to relativise defeasible subsumption. This yields a notion of contextualised rational defeasible subsumption, with contexts described by roles. We also provide a semantic construction for and a method for the computation of contextual rational closure, and present a correspondence result between the two.	defeasible reasoning;rationality;subsumption architecture	Katarina Britz;Ivan José Varzinczak	2018		10.1007/978-3-319-90050-6_7	theoretical computer science;natural language processing;rationality;computation;defeasible reasoning;semantics;defeasible estate;computer science;description logic;artificial intelligence	AI	-19.11471839320764	6.102640944645732	106381
363b92978c3b1352861f7e5eebedcb6e6baf75fb	completeness and decidability results for first-order clauses with indices	inductive type;inductive reasoning;clause set;limited form;decidability result;mathematical induction;function symbol;proposed procedure;proof procedure;loop detection rule;particular form;first-order clause	We de ne a proof procedure that allows for a limited form of inductive reasoning. The rst argument of a function symbol is allowed to belong to an inductive type. We will call such an argument an index. We enhance the standard superposition calculus with a loop detection rule, in order to encode a particular form of mathematical induction. The satis ability problem is not semi-decidable, but some classes of clause sets are identi ed for which the proposed procedure is complete and/or terminating.	cycle detection;encode;first-order predicate;inductive reasoning;inductive type;mathematical induction;newman's lemma;semiconductor industry;superposition calculus;undecidable problem	Abdelkader Kersani;Nicolas Peltier	2013		10.1007/978-3-642-38574-2_4	discrete mathematics;mathematics;algorithm	AI	-8.094272177260788	16.629139197962804	106540
d213ecda45ef425d1c85b1e5799d86050eb26138	quantum logic as motivated by quantum computing		Our understanding of Nature comes in layers, so should the development of logic. Classic logic is an indispensable part of our knowledge, and its interactions with computer science have recently dramatically changed our life. A new layer of logic has been developing ever since the discovery of quantum mechanics. G. D. Birkhoff and von Neumann introduced quantum logic in a seminal paper in 1936 [BV]. But the definition of quantum logic varies among authors (see [CG]). How to capture the logic structure inherent in quantum mechanics is very interesting and challenging. Given the close connection between classical logic and theoretical computer science as exemplified by the coincidence of computable functions through Turing machines, recursive function theory, and λ-calculus, we are interested in how to gain some insights about quantum logic from quantum computing. In this note we make some observations about quantum logic as motivated by quantum computing (see [NC]) and hope more people will explore this connection. The quantum logic as envisioned by Birkhoff and von Neumann is based on the lattice of closed subspaces of a Hilbert space, usually an infinite dimensional one. The quantum logic of a fixed Hilbert space H in this note is the variety of all the true equations with finitely many variables using the connectives meet, join and negation. Quantum computing is theoretically based on quantum systems with finite dimensional Hilbert spaces, especially the states space of a qubit C. (Actually the qubit is merely a convenience. If C is replaced by any other C, n ≥ 3, then the same quantum computing theory will be obtained.) The n-qubit states space is C n . It is interesting to understand where the power of quantum computers could come from. One possible source is the exponential	birkhoff interpolation;computability theory;computable function;hilbert space;interaction;lambda calculus;logical connective;quantum computing;quantum logic;quantum mechanics;quantum system;qubit;theoretical computer science;time complexity;turing machine	J. Michael Dunn;Tobias J. Hagge;Lawrence S. Moss;Zhenghan Wang	2005	J. Symb. Log.		quantum simulator;quantum operation;quantum nanoscience;quantum logic;quantum information;quantum probability;quantum information science;quantum network;quantum capacity;quantum technology;open quantum system;mathematics;quantum dissipation;quantum sensor;quantum computer;quantum process;quantum dynamics;quantum algorithm;quantum error correction	Theory	-10.842606162552238	5.219827601465662	106547
fc992951ba536645da55c97df1491996f764dc6d	special purpose, but domain independent, inference mechanisms		vie describe a number of special purpose, but domain independent, inferencemechanisms. While these rl1echanisms are limited to certain kinds of inference and illference rules, they do not rely on special properties of the domain, but on logical properties of predicates and rules, ~Ihich make them equally applicable to other domains. These logical properties include: transitivity, functionality and unarit.y. The union of the~e mechanisms handles nearly all the inference required in the Mecho project for solving 11echanics problems stated in English. Key\%rds In fel~ence .Mechanics. Combinatorial explosion, Meta-Level	backtracking;syntactic predicate;turing completeness;unary operation;universal instantiation;vertex-transitive graph	Alan Bundy;Lawrence Byrd;Chris Mellish	1982			computer science;artificial intelligence;machine learning;theoretical computer science;inference	AI	-13.234230768766285	8.870593781977272	106723
f5b3e781b39791993297c941e4e2c1af1f9c3f7a	components of the fundamental category ii	topological space;satisfiability;mutual exclusion;ciencias basicas y experimentales;matematicas;grupo a;partial order	In this article we carry on the study of the fundamental category (Goubault and Raussen, 2002; Goubault, 2003) of a partially ordered topological space (Nachbin, 1965; Johnstone, 1982), as arising in e.g. concurrency theory (Fajstrup et al., 2006), initiated in (Fajstrup et al., 2004). The “algebra” of dipaths modulo dihomotopy (the fundamental category) of such a po-space is essentially finite in a number of situations. We give new definitions of the component category that are more tractable than the one of (Fajstrup et al., 2004), as well as give definitions of future and past component categories, related to the past and future models of (Grandis, 2005). The component category is defined as a category of fractions, but it can be shown to be equivalent to a quotient category, much easier to portray. A van Kampen theorem is known to be available on fundamental categories (Grandis, 2003; Goubault, 2003), we show in this paper a similar theorem for component categories (conjectured in (Fajstrup et al., 2004)). This proves useful for inductively computing the component category in some circumstances, for instance, in the case of simple PV mutual exclusion models (Goubault and Haucourt, 2005), corresponding to partially ordered subspaces of IR minus isothetic hyperrectangles. In this last case again, we conjecture (and give some hints) that component categories enjoy some nice adjunction relations directly with the fundamental category.	cobham's thesis;computation;concurrency (computer science);definition;marco dorigo;modulo operation;mutual exclusion;performance;static program analysis;turing completeness;word lists by frequency	Eric Goubault;Emmanuel Haucourt	2007	Applied Categorical Structures	10.1007/s10485-007-9082-7	partially ordered set;topology;mutual exclusion;calculus;pure mathematics;mathematics;topological space;algebra;satisfiability	Logic	-5.824834577497715	12.730973768458899	107075
29238cdc6f5be8644a78b8400812a5b62b26c2ca	towards a more efficient computation of weighted conditional impacts for relational probabilistic knowledge bases under maximum entropy semantics		While the complexity of the optimization problem to be solved when computing the Maximum Entropy distribution (P^{*}_{mathcal {R}}) of a knowledge base (mathcal {R}) grows dramatically when moving to the relational case, it has been shown that having the weighted conditional impacts (WCI) of (mathcal {R}) available, (P^{*}_{mathcal {R}}) can be computed much faster. Computing WCI in a straightforward manner readily gets infeasible due to the size of the set (varOmega ) of possible worlds. In this paper, we propose a new approach for computing the WCI without considering the worlds in (varOmega ) at all. We introduce the notion of sat-pairs and show how to determine the set (mathcal {CSP}) of all possible combinations of sat-pairs by employing combinatorial means. Using (mathcal {CSP}) instead of (varOmega ) for computing the WCI is a significant performance gain since (mathcal {CSP}) is typically much smaller than (varOmega ). For a start, we focus on simple knowledge bases consisting of a single conditional. First evaluation results of an implemented algorithm illustrate the benefits of our approach.	computation	Marc Finthammer;Christoph Beierle	2015		10.1007/978-3-319-24489-1_6	theoretical computer science;machine learning;pattern recognition;mathematics	AI	-18.855791796615954	8.764907264408372	107245
5e512d1d3eaf9bae338a84f4637b68a396015a50	qualitative and quantitative time interval constraint networks	software testing;interval algebra;time dependent;constraint propagation;rule based systems;software engineering;artificial intelligent;temporal constraints;artificial intelligence;constraint satisfaction problem;temporal reasoning	"""Constraint propagation algorithms are often used in Artificial Intelligence systems to perform inference about quantities [5]. On the other hand, many temporal reasoning systems, e.g. Allen's interval algebra [1] and Vilain and Kautz's point algebra [20], deal only with qualitative relations between time intervals or between time points. In this paper we propose a general framework for representing and reasoning about both qualitative and quantitative temporal constraints over time dependent events. Information about (possibly disjunctions of) qualitative relations between time intervals, e.g. during, meet, start, finish, . . . , as in Allen's interval algebra [1], or relations between time points, e.g. before, after, and equal, as in Vilain and Kautz's point algebra [20], can be expressed. At the same time, quantitative information, in particular, durations of events, references to absolute time, and metric information, can be represented and propagated in this unified framework. The framework called Time Interval Constraint Satisfaction Problem (TICSP) is proposed. TICSP consists of a set of time intervals, and a set of four-ary constraints expressing relationships between any two time intervals (four time points). These constraints are labeled by a set of vectors of open/closed metric bounds. The problem is to make the tightiest possible assertions about the relationships among all time intervals. A strong 3consistency algorithm is derived for the propagation of these temporal constraints. *Supported by the Fulbright scholarship. lSupported in part by t h e US Army research office grant DAAL03-90-G-0217. Permission to copy without fee all or part of this material is granted provided that the copies are not made or distributed for direct commercial advantage, the ACM copyright notice and the title of the publication and its date appear, and notice is given that copying is by permission of the Association for Computing Machinery. To copy otherwise, or to republish, requires a fee and/or specific permission. © 1991 ACM 089791-382-5/91/0003/0239 $1.50 239 1 Introduct ion Representing and reasoning about temporal knowledge is essential for applications in various areas of computer science. Many recent research investigations, especially in artificial intellligence, deal more and more about temporal aspects of problems, e.g. in natural language processing [2], planning or scheduling [4, 17], common-sense reasoning [10, 18], and qualitative reasoning [21]. Research work involving temporal knowledge representation and temporal reasoning can be divided into two categories: qualitative and quantitative systems. Qualitative systems put the emphasis on the description of qualitative relations between time intervals or between time points, as in Allen's interval algebra [1], and Vilain and Kautz's point algebra [20]. For example, we may represent some instances like interval A occurred during interval B, or time point C occurred before or after time point D. These systems deal only with qualitative symbols, so numerical data, e.g. durations of events, references to absolute time, and metric information, are not representable, or they are handled in separated modules. For example, the duration reasoner reported by Allen [1, 3] represents and manipulates the information about relative durations and about topological relations between time intervals in different networks. Interfacing between two different networks is needed, making it inefficient (some of the difficulties were discussed by Ladkin [12]). Even in his duration reasoner, Allen did not consider how to represent quantitative information which is essential and often given in many applications, e.g. durations of tasks in scheduling problems. On the other hand, quantitative systems put the emphasis on quantitative relations between time points or between time intervals. The beginning and the ending time points can represent an interval of occurrence, and they are associated with absolute time values. Dean and McDermott [6] and Davis [5] proposed constraint networks of time points where quantities are labeled with distance intervals, however, they did not allow the repre.,~entation nor the propagation of disconnected metric bounds. Davis used the convex hull of the disconnected sets of intervals; which is the smallest single interval containing all the disconnected intervals. His simplified system of using a single interval contains less restricted censtraints which may include some values that are inccnsistent with the initial constraints. Dechter et al. [16] proposed constraint networks, in which time points are represented as variables, and the temporal information is given by a set of unary and binary constraints ort these time points. A disjunction of metric bounds are representable, however, they did not mention about the representation of open metric bounds. Furthermore, they did not consider some of the problems raised by Allen [1] and Vilain and Kautz [20], in which qualitative relations between events are represented and reasoned. Rit [17] proposed a general framework for propagating temporal constraints over events, in which Allen's symbolic relations as well as durations can be represented in the same framework. He manipulated these constraints ir terms of sets of possible occurrences (SOPOs), which are expressed by a 2-D graphical representation of occurrences. The picture representation and manipulation a::e the main complicated procedures, since the shape o::~ the SOPOs might be very complicated (for example with a lot of holes). A constraint propagation algorithm defined by Rit [17] achieves only arc consistency. In this paper we extend the representation proposed by Dechter et al. [16] in such a way that we can represent and manipulate both qualitative and quantitative information among time points, as well as, among time intervals in a unified framework. The expressibility of the proposed language subsumes all the languages ment ~oned above, both qualitative and quantitative systems. We envision a temporal reasoning system (similar to [i[6]) that can represent different kinds of temporal information, and has a capability of reasoning or discoverillg new information. Therefore, this temporal reasoni:ag system basically consists of a temporal knowledge base, a routine to check its consistency, a query answertag mechanism, and an inference mechanism. The basic entities in our temporal knowledge base are events to ~hieh we assign temporal intervals, e.g. """"I have a meeting"""" or """"the switch is on"""". Each interval represents the time during which the corresponding event occurs. 'The temporal information might be relative, e.g. """"El occurred after E2"""", or metric, e.g. """"El had finished at least 4 minutes before E2 starts"""". Disjunctive sentences may be needed to express less specific or indefinite intormation, e.g. """"E~ occurred during or before E2"""". Besides, we also allow references to absolute time, such as :[1:30 a.m., and durations of events, e.g. """"El lasted at most three hours"""". Given these different kinds of temporal information, we want to answer queries such as: Is it possible that event Ex occurs at time t? What is the temporal relations between events E1 and E2? In this paper, we will address only the issues about the representation and the reasoning mechanism. This paper introduces a framework based on constraint satisfaction formalism for representing and reasoning about time dependents events. Temporal constraint networks are used to express relations among time points which are labeled by open/closed metric bounds. Four-ary constraints are defined to represent relations between time intervals. Section 2 proposes a formalization of time interval constraint satisfaction problems (TICSPs). Time interval constraint networks are presented in Section 3. Section 4 defines binary operations on temporal constraints, then a strong 3consistency algorithm is derived in Section 5. Section 6 provides concluding remarks. 2 A Formalizat ion of Temporal Constraint N e t w o r k s The basic entities in our temporal knowledge base are events. Each event is associated with a time interval, it occurs over. Each time interval is associated with its corresponding beginning and ending time points. Being able to specify durations of intervals in our model, we may have an interval with zero duration, this is corresponding to a time instant, i.e. the beginning and ending of this interval is at the same time point. This aspect of our time model is opposed to Allen's determination [1, 2] which based his theory only on non-zero duration intervals rather on time instants. However, many recent research investigations, e.g. Shoham [18], and Galton [9], have argued in the flavor of the necessity in representing both intervals and points on an equal footing, especially for reasoning correctly about continuous change. In this article, we will show its advantages, particularly in its expressibility. The definitions of our temporal constraint satisfaction model are based on similar definitions for the general Constraint Satisfaction Problem (CSP) proposed by Montanari [15]. Given a set of time intervals, and knowledge about temporal constraints on these intervals, the problem is to make explicit the tightiest possible assertions about the relationships among all the time intervals. We now make this somewhat more formal. A Time Interval Constraint Satisfaction Problem (TICSP) involves a set of time intervals, X1, . . . ,X,~. Each interval, Xi, is associated with its beginning time point, X_.L, and its ending time point, Xi, which are treated as variables, whose domains are the real numbers, ~. Allen [!] defined 13 primitive relations between any pair of intervals, e.g. during, meet, and start. Dis-"""	algorithm;allen's interval algebra;artificial intelligence;c date and time functions;commonsense reasoning;computer science;constraint logic programming;constraint satisfaction problem;convex hull;disjunctive normal form;drew mcdermott;entity;knowledge base;knowledge representation and reasoning;level of measurement;local consistency;natural language processing;numerical analysis;open road tolling;reasoning system;scheduling (computing);semantic reasoner;semantics (computer science);software propagation;temporal logic;unary operation;unified framework	Somnuk Keretho;Rasiah Loganantharaj	1991		10.1145/327164.327268	rule-based system;constraint logic programming;constraint programming;qualitative reasoning;constraint satisfaction;interval temporal logic;constraint learning;computer science;constraint graph;artificial intelligence;theoretical computer science;machine learning;software testing;reasoning system;constraint satisfaction problem;algorithm;hybrid algorithm;local consistency	AI	-18.71501204376973	8.235773258434577	107246
615b928999ee57d657ed79dc364cbcd4d0a50775	presuppositions and default reasoning: a study in lexical pragmatics	default reasoning;lexical semantics;formal method;artificial intelligent;functional unit;knowledge representation;default logic	Explaining how the meaning of words relate to the meaning of the utterance in which they are used is of utmost importance. The most common approaches view the meaning of an utterance as a composition of the meanings of it parts, which of course include the words used to construct the utterance. This approach is successful for entailments. However, similar approaches to explain the presuppositionai behaviour of utterances have for the most part failed. In this paper we describe the application of Default Logic to the representation and the generation of natural language presuppositions. The view is taken that the presuppositions of an utterance are conjectures made by the hearer based upon the assumption that the speaker is following Grice's maxims of cooperative conversation. These conjectures represent information implicitly contained in the utterance which cannot be generated by classicM techniques. The compositional framework is maintained. The difference is that functional units rather than predetermined semantic units axe inherited by the meaning structure. The function's meaning changes depending on the contents of the meaning structure. Hence, we view the study of these functional units as iexicai pragmatics rather than lexical semantics. Default Logic is one formal method for performing default reasoning in the area of Artificial Intelligence called Knowledge Representation. Default reasoning attempts to fill with conjectures the gaps left by classical forms of reasoning. We suggest that the use of non-classical inferencing techniques such as default reasoning will prove fruitful in the realm of lexical reasoning.	artificial intelligence;default logic;formal methods;knowledge representation and reasoning;natural language	Robert E. Mercer	1991		10.1007/3-540-55801-2_44	natural language processing;knowledge representation and reasoning;lexical semantics;formal methods;computer science;artificial intelligence;non-monotonic logic;linguistics;default logic	AI	-13.99747992619994	6.079771632021361	107273
af1bc96e287e3746cabcf5d020d1ce39ff91cd87	causality and networks		Causality is omnipresent in scientists’ verbalisations of their understanding, even though we have no formal consensual scientific definition for it. In Automata Networks, it suffices to say that automata “influence” one another to introduce a notion of causality. One might argue that this merely is an incidental side effect of preferring statements expressed in natural languages to mathematical formulae. The discussion of this paper shows that if this is the case, then it is worth considering the effects of those preferences on the contents of the statements we make and the formulae we derive. And if it is not the case, then causality must be worth some scientific attention per se. In any case, the paper illustrates how the innate sense of causality we have may be made deliberate and formal use of without having to pin down the elusive notion of causality to anything fixed and formal that wouldn’t do justice to the wide range of ways it is involved in science-making.	automata theory;automaton;causality;natural language;social network	Mathilde Noual	2016	CoRR		computer science;artificial intelligence;mathematics;algorithm	PL	-13.037205542400148	4.438662953593432	107305
6f7410deed9d403e8466e8035cecacb28a653cce	checking the coherence and redundancy of fuzzy knowledge bases	fuzzy sets coherence fuzzy logic fuzzy systems real time systems engines input variables process design uncertainty;redundancy checking;parallel fuzzy rules;fuzzy knowledge bases;redundancy knowledge based systems fuzzy logic fuzzy set theory;potential inconsistency;uncertainty;input variables;fuzzy rules;logical inconsistency;indexing terms;satisfiability;fuzzy set theory;fuzzy sets;process design;fuzzy logic;redundancy;engines;conjunctive combination;integrity constraints;coherence;fuzzy rule representations;conjunction based representations coherence checking redundancy checking fuzzy knowledge bases knowledge base validation fuzzy systems integrity constraints logical inconsistency potential inconsistency incoherence parallel fuzzy rules conjunctive combination fuzzy rule representations implication based representations;implication based representations;conjunction based representations;incoherence;coherence checking;knowledge base validation;fuzzy systems;knowledge based systems;fuzzy system;possibility distribution;real time systems;knowledge base	Checking the coherence of a set of rules is an important step in the validation process of a knowledge base. The need for coherence also exists in the field of fuzzy systems. Indeed, rules are often used regardless of their semantics, and it sometimes leads to sets of rules that make no sense. Avoiding redundancy is also of interest in real-time systems for which the inference engine is time consuming. Roughly speaking, a knowledge base ispotentially inconsistentor incoherent if there exists a piece of input data that respects integrity constraints and that leads to logical inconsistency when added to the knowledge base. We more particularly consider the case of such bases composed of parallel fuzzy rules. Then, coherence means that the projection on the input variables of the conjunctive combination of the possibility distributions representing the fuzzy rules leaves these variables completely unrestricted (i.e., any value for these variables are completely possible, none is somewhat impossible) or is, at least, not more restrictive than integrity constraints. Fuzzy rule representations can be implication-based or conjunction-based. Among these two types of rules, we show that only implication-based models (which themselves encompass two kinds of rules, namely certainty rules and gradual rules) may lead to coherence problems. However, unlike conjunctionbased models (which include possibility rules and anti-gradual rules), they allow to design coherence checking processes. Some conditions that a set of parallel rules has to satisfy in order to avoid inconsistency problems (in the presence of any input fact) are given for certainty or gradual rules. The problem of redundancy, which is also of interest for fuzzy knowledge bases validation, is addressed for these two kinds of rules.	data integrity;fuzzy control system;fuzzy rule;inference engine;knowledge base;real-time computing;real-time locating system;redundancy (engineering)	Didier Dubois;Henri Prade;Laurent Ughetto	1997	IEEE Trans. Fuzzy Systems	10.1109/91.618276	discrete mathematics;defuzzification;computer science;artificial intelligence;knowledge-based systems;machine learning;mathematics;fuzzy set;fuzzy associative matrix;algorithm;fuzzy control system	AI	-18.212465328380265	7.0056611232688475	107325
c77c8004ae23ae4119f083f6628ab87713a35e32	srass - a semantic relevance axiom selection system	automated reasoning	This paper describes the design, implementation, and testing of a system for selecting necessary axioms from a large set also containing superfluous axioms, to obtain a proof of a conjecture. The selection is determined by semantics of the axioms and conjecture, ordered heuristically by a syntactic relevance measure. The system is able to solve many problems that cannot be solved alone by the underlying conventional automated reasoning system.	automated reasoning;axiomatic system;heuristic;reasoning system;relevance	Geoff Sutcliffe;Yury Puzis	2007		10.1007/978-3-540-73595-3_20	discrete mathematics;armstrong's axioms;computer science;artificial intelligence;mathematics;automated reasoning;algorithm	AI	-17.698169237194225	10.08997819741632	107389
89d1532211f902288c66d3c44cadc1a965905251	probabilistic, truth-value, and standard semantics and the primacy of predicate logic		"""Hartry Field maintained the thesis that reference and conceptual role together could account for all facts about the notion of meaning: """"Truththeoretic [Tarskian] semantics and conceptual-role semantics must supplement each other: truth-theoretic semantics cannot account for certain differences in sense unaccompanied by differences in reference; and conceptual-role semantics, though it deals nicely with questions of intra-speaker synonymy, cannot properly answer questions about inter-speaker synonymy or about relations between language and the world"""" ([2], p. 380). In the course of developing this thesis he provided a probabilistic semantics for the predicate calculus. This semantics, unlike the standard Tarski approach, dispenses with the notions of truth and reference and uses only the epistemic notion of subjective conditional probability. In this paper we give a proof of the equivalence of these two semantic approaches which also demonstrates their equivalence to another nonreferential semantics, the truth-value (or substitution-theoretic) semantics of Leblanc [4], Dunn and Belnap [1], and others. Indeed Field's probabilistic semantics, it will be seen, is most naturally viewed as a generalization of truthvalue semantics, the conditional probability of a sentence (pair) being determined in much the same nonreferential way as the truth value of a sentence. We close by discussing the possibility (and impossibility) of developing a probabilistic semantics for extensions of predicate logic and the implications this has for its primacy among logics. Let L be a countable first-order language and let Pr be a (conditional probability) function from pairs of sentences of L to the interval [0,1]. """"Pr(A \B)"""" is to be read """"the probability of A given B"""". Following Field we say. Pr is a reasonable conditional probability function if there is some countable"""	first-order logic;first-order predicate;game semantics;primacy of mind;probabilistic semantics;theory;turing completeness	John A. Paulos	1981	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093883335	predicate logic;functional predicate;discrete mathematics;description logic;higher-order logic;predicate;game semantics;theoretical computer science;predicate functor logic;formal semantics;mathematics;predicate variable;predicate transformer semantics;predicate;probabilistic logic;well-founded semantics;probabilistic argumentation;probabilistic logic network;algorithm	AI	-13.115440931939684	6.555978553803979	107563
6a7be4d3e0d6af3fcec3cd16e4e6127fbeafa6d7	on the notion of expressiveness and the rule of adaption	preuve programme;program proof;logique hoare	In this note two issues concerning completeness of Hoare-like proof systems which seem unrelated at first sight are brought together: Expressiveness of the assertion la,rguage and the Rule of Adaptation. These different issues are connected by investigating soundness and relative completeness of four published versions of the Rule of Adaptation with help of some general technique; for reasoning about expressiveness.	assertion (software development);expressive power (computer science);hoare logic;linear algebra	Ernst-Rüdiger Olderog	1983	Theor. Comput. Sci.	10.1016/0304-3975(83)90009-9	artificial intelligence;mathematics;programming language;algorithm	PL	-10.854998214799489	16.28603790275036	107612
f7d34fa37236d106dce7d42c6598dd933df26c77	a geo-logical solution to the lottery paradox, with applications to conditional logic	conditional logic;framing effects;ramsey test;lottery paradox;belief revision;uncertain acceptance	We defend a set of acceptance rules that avoids the lottery paradox, that is closed under classical entailment, and that accepts uncertain propositions without ad hoc restrictions. We show that the rules we recommend provide a semantics that validates exactly Adams’ conditional logic and are exactly the rules that preserve a natural, logical structure over probabilistic credal states that we call probalogic. To motivate probalogic, we first expand classical logic to geo-logic, which fills the entire unit cube, and then we project the upper surfaces of the geo-logical cube onto the plane of probabilistic credal states by means of standard, linear perspective, which may be interpreted as an extension of the classical principle of indifference. Finally, we apply the geometrical/logical methods developed in the paper to prove a series of trivialization theorems against question-invariance as a constraint on acceptance rules and against rational monotonicity as an axiom of conditional logic in situations of uncertainty.	epr paradox;hoc (programming language);moravec's paradox	Hanti Lin;Kevin T. Kelly	2011	Synthese	10.1007/s11229-011-9998-1	ramsey reset test;discrete mathematics;epistemology;mathematics;framing effect;belief revision;algorithm	AI	-12.503866704881526	6.3906235068602975	107636
337a8685f42059915dc1b3410da25222ba935391	abstraction and set theory	philosophy of mathematics;definiteness;set theory;sortal concept;abstraction principle;limitation of size;set	ION AND SET THEORY	set theory	Bob Hale	2000	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1038336882	set;universal set;discrete mathematics;philosophy of mathematics;epistemology;mathematics;abstraction principle;algorithm;set theory	Theory	-11.5139769141615	11.554533007862158	107698
c4c1db3c95d956350e9107689cfc68c8caa8d51f	game semantics for non-monotonic intensional logic programming	68q55;game semantics;91a05;68n17;non monotonicity;intensional logic programming;68n15	Intensional logic programming  is an extension of logic programming based on intensional logic, which includes as special cases both  temporal  and  modal  logic programming. In    [13]  , M. Orgun and W.W. Wadge provided a general framework for capturing the semantics of intensional logic programming languages. They demonstrated that if the intensional operators of a language obey some simple semantic properties, then the programs of the language are guaranteed to have a  minimum model  semantics. One key property involved in the construction of    [13]   is the  monotonicity  of intensional operators. In this paper we consider intensional logic programming from a game-theoretic perspective. In particular we define a two-person game and demonstrate that it can be used in order to define a model for any given intensional program of the class introduced in    [13]  . Moreover, this model is shown to be identical to the minimum model constructed in   [13]  . More importantly, we demonstrate that the game is even applicable to intensional languages with  non-monotonic  operators. In this way we provide the first (to our knowledge) general framework for capturing the semantics of non-monotonic intensional logic programming.	game semantics;intensional logic;logic programming;non-monotonic logic	Chrysida Galanaki;Christos Nomikos;Panos Rondogiannis	2017	Ann. Pure Appl. Logic	10.1016/j.apal.2016.10.005	montague grammar;discrete mathematics;game semantics;functional logic programming;mathematics;programming language;genus–differentia definition;well-founded semantics;intensional logic;logic programming;algorithm	Logic	-14.035959913570453	16.489159322615013	107886
a14965193be84b9a5213486c6b300fa2a8040ba5	rules versus theorems		Contemporary critics of two-valued logic concentrate on the reasons for accepting the tertium non datur A v -I A as a valid propositional schema. Brouwer explicitly states1 that only by unjustified extrapolation of logical principles from those which correctly describe the general relations among propositions on finite domains to those that allegedly regulate propositions on infinite domains, it could happen that A v 1 A is accepted as valid. He was the first to observe that value-definite (decidably true or false) propositions do not generahy transfer value-definiteness to their logical compounds. No better support could be found for the claim that the classical characterization of propositions as entities that are either true or false is inadequate. The union of the class of all true propositions and the class of all false propositions does not contain all logical compounds out of either true or false propositions; it does not contain, for example, certain as yet neither proven nor disproven universal propositions of elementary arithmetic. But nobody has seriously advanced the thesis that such propositions should not count as propositions at all.2 In fact, it is generally conceded that the usual way to form mute and infinite logical compounds makes sense even if nothing can be said about their truth-value. It is obligatory, then, to look for a better introduction of the term ‘proposition’ than the classical one and, of course, not only a syntactical introduction, which is trivial, but a semantical one. The validity concept of two-valued logic being dependent on the value-definiteness of propositions will consequently have to be given up and replaced by a concept of validity that works without recourse to the truth-value of the propositions in question. It follows that the classical introduction of logical particles by the (finite or infinite) truth table method has to be given up as well, or rather it has to be amended in such a way that the general definition of logical particles restricted to valuedefinite propositions yield the well-known classical ones.	brouwer fixed-point theorem;entity;extrapolation;mute;value (ethics);whole earth 'lectronic link	Kuno Lorenz	1973	J. Philosophical Logic	10.1007/BF00129608	discrete mathematics;intuitionistic logic;intermediate logic;mathematics;minimal logic;algorithm	AI	-12.377759516854072	4.798699395935369	107926
41a1bc2d3f354f7f04e69a02569580c69e656cec	on dependent pronouns and dynamic semantics	quantified anaphora;natural language semantics;logique philosophique;plurality;dynamic semantics;distributivity;philosophical logic;dependent pronoun	Within natural language semantics, pronouns are often thought to correspond to variables whose values are contributed by contextual assignment functions. This paper concerns the application of this idea to cases where the antecedent of a pronoun is a plural quantifiers. The paper discusses the modelling of accessibility patterns of quantifier antecedents in a dynamic theory of interpretation. The goal is to reach a semantics of quantificational dependency which yields a fully semantic notion of pronominal accessibility. I argue that certain dependency phenomena that arise in quantificationally created contexts require a representation of context wherein the labelling of antecedents is not rigid but rather dynamic itself. I propose a stack-based alternative to classic assignment functions, along the lines of Vermeulen (1993) and van Eijck (2001), and give a dynamic semantics of quantification which correctly accommodates the problematic anaphoric phenomena.	accessibility;anaphora (linguistics);natural language;quantifier (logic);stack-oriented programming language	Rick Nouwen	2007	J. Philosophical Logic	10.1007/s10992-006-9029-8	natural language processing;distributivity;philosophy;epistemology;philosophical logic;formal semantics;mathematics;linguistics;operational semantics;computational semantics	PL	-13.394766000698933	6.038530861709755	107965
25dcb3cedb28d132c2a6980364d5398a5e2168bf	epsilon substitution for transfinite induction	cut elimination;satisfiability;or phrases	We apply Mints’ technique for proving the termination of the epsilon substitution method via cut-elimination to the system of Peano Arithmetic with Transfinite Induction given by Arai.	peano axioms;substitution matrix;substitution method;transfinite induction	Henry Towsner	2005	Arch. Math. Log.	10.1007/s00153-004-0241-3	combinatorics;discrete mathematics;mathematics;algorithm;satisfiability	Logic	-9.509197762589038	14.514765873886443	108001
83e97ae247ca9e7a78d6e17b539f7a10f030049a	many-valued hybrid logic	filosofi;modal logic hybrid logic many valued logic intuitionistic hybrid logic tableau systems	In this paper we define a many-valued semantics for hybrid logic and we give a sound and complete tableau system which is prooftheoretically well-behaved, in particular, it gives rise to a decision procedure for the logic. This shows that many-valued hybrid logics is a natural enterprise and opens up the way for future applications.	decision problem;hybrid logic;method of analytic tableaux	Jens Hansen;Thomas Bolander;Torben Braüner	2008		10.1093/logcom/exv040	predicate logic;dynamic logic;zeroth-order logic;t-norm fuzzy logics;normal modal logic;discrete mathematics;classical logic;description logic;higher-order logic;principle of bivalence;many-valued logic;intuitionistic logic;computer science;intermediate logic;predicate functor logic;computational logic;mathematics;kripke semantics;logic;substructural logic;multimodal logic;algorithm;philosophy of logic	AI	-12.879984791869633	12.699337609865506	108108
3e8bb24701e2daa385588b9600972d69c13d28ac	a sequent calculus for bilattice-based logic and its many-sorted representation	sequent calculus	We introduce a sequent calculus for bilattice-based annotated logic (BAL). We show that this logic can be syntactically and semantically translated into a fragment MSL∗ of conventional many-sorted logic MSL. We show deductive equivalence of sequent calculus for BAL and sequent calculus for MSL∗.	fuzzy logic;ibm basic assembly language and successors;sequent calculus;turing completeness	Ekaterina Komendantskaya	2007		10.1007/978-3-540-73099-6_14	linear logic;discrete mathematics;cut-elimination theorem;geometry of interaction;computer science;mathematics;proof calculus;noncommutative logic;situation calculus;curry–howard correspondence;sequent;programming language;sequent calculus;natural deduction;algorithm	Logic	-14.560297572350027	13.550560497219937	108121
b7df2e42d70d0a6c83dd63b813afe737d1aba45d	the modal logic of reverse mathematics	mathematics;03b45;automated reasoning;modal logic;03b30;strict implication	"""The implication relationship between subsystems in Reverse Mathematics has an underlying logic, which can be used to deduce certain new Reverse Mathematics results from existing ones in a routine way. We use techniques of modal logic to formalize the logic of Reverse Mathematics into a system that we name s-logic. We argue that s-logic captures precisely the """" logical """" content of the implication and nonimplication relations between subsystems in Reverse Mathematics. We present a sound, complete, decidable, and compact tableau-style deductive system for s-logic, and explore in detail two fragments that are particularly relevant to Reverse Mathematics practice and automated theorem proving of Reverse Mathematics results."""	automated theorem proving;formal system;method of analytic tableaux;modal logic;reverse mathematics	Carl Mummert;Alaeddine Saadaoui;Sean Sovine	2015	Arch. Math. Log.	10.1007/s00153-015-0417-z	modal logic;dynamic logic;normal modal logic;discrete mathematics;higher-order logic;computational logic;mathematics;automated reasoning;logic;multimodal logic;algorithm;abstract structure	Security	-14.711726461938316	11.051887989598766	108234
2e48d0cd781bfb5d728d25326eea51132c362fb8	a programming language for the inductive sets, and applications	lenguaje de programacion;machine turing;programming language;langage ind;turing machine;dynamic logic;theory of computing;langage programmation;langage non deterministe	 Structures,&quot; North-Holland, Amsterdam, 1974), r.e. dynamic logic is moreexpressive than finite-test dynamic logic. This refines a separation result of Meyerand Parikh (&quot;Proc. 12th ACM Sympos. on Theory of Computing,&quot; 1979, pp. 	apl;programming language	David Harel;Dexter Kozen	1984	Information and Control	10.1016/S0019-9958(84)80045-5	dynamic logic;natural language processing;turing tarpit;computer science;turing machine;programming language;algorithm	PL	-16.816033421006292	15.84358779774425	108318
3fecfc2feee6c989c47291436a04bdb66e828baa	nominal tense logic	lenguaje natural;logique prior;langage naturel;puissance expressive;natural language;decidibilidad;nominal;decidabilite;symbole atomaire;logique temporelle;decidability		fuzzy logic;temporal logic	Patrick Blackburn	1993	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093634564	decidability;natural language processing;level of measurement;mathematics;linguistics;natural language;algorithm	Logic	-13.86925059871543	11.439782703313064	108339
e89eed0fbced8a4c039aee248b1ea47f926e41a4	populational announcement logic (ppal)		Populational Announcement Logic (PPAL), is a variant of the standard Public Announcement Logic (PAL) with a fuzzy semantics, where instead of specific agents we have populations and groups. The semantics and the announcement logic are defined, and an example is provided. We briefly talk about decidability and model checking. We conclude that the main advantage of PPAL over DEL and PAL is the flexibility to work with non-priorly defined agents.	decision problem;model checking;pal;population	Vitor Machado;Mario R. F. Benevides	2017			mathematics	Logic	-14.383224496429776	9.112924572403363	108351
2207b58877c5d314e063210cb5d6d434dc2f3f43	bottom-up rewriting for words and terms	accessibility problem;bottom up;68q42;term rewriting systems;linear system;term rewrite system;03d40;semi thue systems;regularity preservation;03d03	For the whole class of linear term rewriting systems, we define bottom-up rewriting which is a restriction of the usual notion of rewriting. We show that bottom-up rewriting effectively inverse-preserves recognizability and analyze the complexity of the underlying construction. The Bottom-Up class (BU) is, by definition, the set of linear systems for which every derivation can be replaced by a bottom-up derivation. Membership to BU turns out to be undecidable, we are thus lead to define more restricted classes: the classes SBU(k), k ∈ N of Strongly Bottom-Up(k) systems for which we show that membership is decidable. We define the class of Strongly Bottom-Up systems by SBU = S k∈N SBU(k). We give a polynomial sufficient condition for a system to be in SBU. The class SBU contains (strictly) several classes of systems which were already known to inverse preserve recognizability: the inverse left-basic semi-Thue systems (viewed as unary term rewriting systems), the linear growing term rewriting systems, the inverse Linear-Finite-Path-Ordering systems.	bottom-up parsing;linear system;polynomial;rewriting;semi-thue system;semiconductor industry;term (logic);top-down and bottom-up design;unary operation;undecidable problem	Irène Durand;Géraud Sénizergues	2015	J. Symb. Comput.	10.1016/j.jsc.2014.06.001	discrete mathematics;top-down and bottom-up design;mathematics;linear system;confluence;algorithm;algebra	Logic	-5.060317632530872	16.411392126243918	108560
6a702d6bf2e0252bd8c53e12e500ee34d36273fa	a ranking-theoretic approach to conditionals	journal_article;counterfactuals;probability;semantics;beliefs;truth conditions for conditionals;ethics;conditional belief;ramsey test;ranking theory;attribution theory;language usage;theories;relevance;form classes languages;conditionals;expressivism	Conditionals somehow express conditional beliefs. However, conditional belief is a bi-propositional attitude that is generally not truth-evaluable, in contrast to unconditional belief. Therefore, this article opts for an expressivistic semantics for conditionals, grounds this semantics in the arguably most adequate account of conditional belief, that is, ranking theory, and dismisses probability theory for that purpose, because probabilities cannot represent belief. Various expressive options are then explained in terms of ranking theory, with the intention to set out a general interpretive scheme that is able to account for the most variegated usage of conditionals. The Ramsey test is only the first option. Relevance is another, familiar, but little understood item, which comes in several versions. This article adds a further family of expressive options, which is able to subsume also counterfactuals and causal conditionals, and indicates at the end how this family allows for partial recovery of truth conditions for conditionals.	causal filter;counterfactual conditional;evaluable disease;expressive power (computer science);relevance;theory;version	Wolfgang Spohn	2013	Cognitive science	10.1111/cogs.12057	ramsey reset test;ethics;relevance;counterfactual conditional;attribution;belief;probability;mathematics;semantics;social psychology;theory;algorithm;strict conditional	AI	-13.965627954670808	4.199127390570793	108579
65bcebc3301c341a54e39486b62080e6b537d68a	principles and examples of plausible reasoning and propositional plausible logic		Plausible reasoning concerns situations whose inherent lack of precision is not quantified; that is, there are no degrees or levels of precision, and hence no use of numbers like probabilities. A hopefully comprehensive set of principles that clarifies what it means for a formal logic to do plausible reasoning is presented. A new propositional logic, called Propositional Plausible Logic (PPL), is defined and applied to some important examples. PPL is the only non-numeric non-monotonic logic we know of that satisfies all the principles and correctly reasons with all the examples. Some important results about PPL are proved.	first-order logic;non-monotonic logic;propositional calculus;quantifier (logic)	David Billington	2017	CoRR		zeroth-order logic;classical logic;many-valued logic;artificial intelligence;mathematics;propositional variable;well-formed formula;deductive reasoning;algorithm;autoepistemic logic	AI	-15.259379054157073	6.338494772144215	108756
5eb09e4a096b0e2a65bd0ca95b82c65126389676	classification from a computable viewpoint	model theory;descriptive set theory	Classification is an important goal in many branches of mathematics. The idea is to describe the members of some class of mathematical objects, up to isomorphism or other important equivalence in terms of relatively simple invariants. Where this is impossible, it is useful to have concrete results saying so. In model theory and descriptive set theory, there is a large body of work, showing that certain classes of mathematical structures admit classification, while others do not. In the present paper, we describe some recent work on classification in computable structure theory.	computable function;viewpoint	Wesley Calvert;Julia F. Knight	2006	Bulletin of Symbolic Logic		effective descriptive set theory;descriptive set theory;combinatorics;mathematical analysis;discrete mathematics;topology;c-minimal theory;biological classification;inner model theory;mathematics;computable model theory;computable function;algorithm;computable analysis;model theory;algebra	Logic	-6.379567529177582	13.081966842483363	108851
fd05605ce44e9f50f92b5c1e03dab7501fb88cf4	towards a verification framework for communicating rational agents	programming language;rational agent;modal logic;communicative action;computational semantics	We present an abstract framework for verifying communicative actions for rational agent programming languages. Firstly, a multiagent verification logic based on the computational semantics is introduced; and subsequently, this multi-agent logic is embedded into a more expressive modal logic over a standard run-based semantics. We formally relate both logics, prove expressivity results, and argue why it is useful to have a (more expressive) standard modal logic and semantics at hand.	agent-based model;computational semantics;embedded system;modal logic;multi-agent system;programming language;rational agent;verification and validation	Nils Bulling;Koen V. Hindriks	2009		10.1007/978-3-642-04143-3_16	modal logic;dynamic logic;natural language processing;modal μ-calculus;rational agent;classical logic;description logic;higher-order logic;horn clause;stable model semantics;computer science;game semantics;formal semantics;computational logic;programming language;axiomatic semantics;well-founded semantics;logic programming;operational semantics;accessibility relation;multimodal logic;algorithm;philosophy of logic;computational semantics	AI	-16.25377332246972	12.632188153166735	108898
5ae9e0bca774a93c84299042aba569f9aba21746	on logics and semantics of indeterminate causation	nonmonotonic semantics;completion;causation	We will explore the use of disjunctive causal rules for representing indeterminate causation. We provide first a logical formalization of such rules in the form of a disjunctive inference relation, and describe its logical semantics. Then we consider a nonmonotonic semantics for such rules, described in (Turner 1999). It will be shown, however, that, under this semantics, disjunctive causal rules admit a stronger logic in which these rules are reducible to ordinary, singular causal rules. This semantics also tends to give an exclusive interpretation of disjunctive causal effects, and so excludes some reasonable models in particular cases. To overcome these shortcomings, we will introduce an alternative nonmonotonic semantics for disjunctive causal rules, called a covering semantics, that permits an inclusive interpretation of indeterminate causal information. Still, it will be shown that even in this case there exists a systematic procedure, that we will call a normalization, that allows us to capture precisely the covering semantics using only singular causal rules. This normalization procedure can be viewed as a kind of nonmonotonic completion, and it generalizes established ways of representing indeterminate effects in current theories of action.		Alexander Bochman	2016			completion;causation;stable model semantics;well-founded semantics;operational semantics;algorithm	AI	-15.926245910637597	7.532915693720786	108920
b55dc0aa1550653c2ce64414c53157005a4a7a93	the virtues of eta-expansion	normal form	"""Interpreting-conversion as an expansion rule in the simply-typed-calculus maintains the connuence of reduction in a richer type structure. This use of expansions is supported by categorical models of reduction, where-contraction, as the local counit, and-expansion, as the local unit, are linked by local triangle laws. The latter form reduction loops, but strong normalisation (to the long-normal forms) can be recovered by \cutting"""" the loops."""	database normalization;lambda calculus;normalization property (abstract rewriting)	C. Barry Jay;Neil Ghani	1995	J. Funct. Program.	10.1017/S0956796800001301	computer science;normal-form game	PL	-8.883048894163045	14.338691599208474	109076
39e57a93db352d103ce482831f304c2a1a8b24bd	embedding defeasible logic into logic programming		Defeasible reasoning is a simple but efficient approach to nonmonotonic reasoning that has recently attracted considerable interest and that has found various applications. Defeasible logic and its variants are an important family of defeasible reasoning methods. So far no relationship has been established between defeasible logic and mainstream nonmonotonic reasoning approaches. In this paper we establish close links to known semantics of logic programs. In particular, we give a translation of a defeasible theory D into a meta-program P (D). We show that under a condition of decisiveness, the defeasible consequences of D correspond exactly to the sceptical conclusions of P (D) under the stable model semantics. Without decisiveness, the result holds only in one direction (all defeasible consequences of D are included in all stable models of P (D)). If we wish a complete embedding for the general case, we need to use the Kunen semantics of P (D), instead.	defeasible logic;defeasible reasoning;logic programming;non-monotonic logic;stable model semantics;unintended consequences	Grigoris Antoniou;David Billington;Guido Governatori;Michael J. Maher	2002	CoRR	10.1017/S147106840600277	natural language processing;computer science;artificial intelligence;non-monotonic logic;semantics;programming language;algorithm	AI	-15.246143781257274	7.8163113780869	109153
cbfc66814c3c442dea10939abc6ce83a9006fa94	existential second-order logic and modal logic with quantified accessibility relations	existential second order logic;modal logic;finite model theory	This article investigates the role of arity of second-order quantifiers in existential second-order logic, also known as Σ1. We identify fragments L of Σ1 where second-order quantification of relations of arity k > 1 is (nontrivially) vacuous in the sense that each formula of L can be translated to a formula of (a fragment of) monadic Σ1. Let polyadic Boolean modal logic with identity (PBML) be the logic obtained by extending standard polyadic multimodal logic with built-in identity modalities and with constructors that allow for the Boolean combination of accessibility relations. Let Σ1(PBML ) be the extension of PBML with existential prenex quantification of accessibility relations and proposition symbols. The principal result of the article is that Σ1(PBML ) translates into monadic Σ1. As a corollary, we obtain a variety of decidability results for multimodal logic. The translation can also be seen as a step towards establishing whether every property of finite directed graphs expressible in Σ1(FO ) is also expressible in monadic Σ1. This question was left open by Grädel and Rosen (1999).	accessibility;canonical account;directed graph;existential quantification;first-order logic;first-order predicate;modal logic;monadic predicate calculus;multimodal interaction;multimodal logic;prenex normal form;stepping level	Lauri Hella;Antti Kuusisto	2016	Inf. Comput.	10.1016/j.ic.2016.01.003	modal logic;predicate logic;dynamic logic;normal modal logic;discrete mathematics;linear temporal logic;higher-order logic;finite model theory;computer science;mathematics;monadic predicate calculus;accessibility relation;multimodal logic;algorithm;algebra	Logic	-12.260832770839787	13.315647345573181	109206
3bdfea7657d39dfef2927ae2a1d505662af31f35	many-valued first-order logics with probabilistic semantics	complexite calcul;logical programming;complejidad computacion;programmation logique;computational complexity;informatique theorique;logique ordre 1;analisis semantico;analyse semantique;programacion logica;first order logic;semantic analysis;computer theory;logica orden 1;informatica teorica	We present n-valued rst-order logics with a purely proba-bilistic semantics. We then introduce a new probabilistic semantics of n-valued rst-order logics that lies between the purely probabilistic semantics and the truth-functional semantics of the n-valued Lukasiewicz logics Ln. Within this semantics, closed formulas of classical rst-order logics that are logically equivalent in the classical sense also have the same truth value under all n-valued interpretations. Moreover, this semantics is shown to have interesting computational properties. More precisely, n-valued logical consequence in disjunctive logic programs with n-valued disjunctive facts can be reduced to classical logical consequence in n ?1 layers of classical disjunctive logic programs. Moreover, we show that n-valued logic programs have a model and a xpoint semantics that are very similar to those of classical logic programs. Finally, we show that some important deduction problems in n-valued logic programs have the same computational complexity like their classical counterparts.	3d xpoint;computation;computational complexity theory;convolutional code;denotational semantics;disjunctive normal form;first-order predicate;fuzzy logic;logic programming;microsoft outlook for mac;n-body problem;natural deduction;possible world;probabilistic semantics	Thomas Lukasiewicz	1998		10.1007/10703163_28	monoidal t-norm logic;t-norm fuzzy logics;non-classical logic;discrete mathematics;classical logic;higher-order logic;principle of bivalence;stable model semantics;many-valued logic;computer science;intermediate logic;game semantics;proof-theoretic semantics;formal semantics;first-order logic;mathematics;probabilistic logic;axiomatic semantics;kripke semantics;computational complexity theory;well-founded semantics;operational semantics;algorithm	AI	-15.283005329184034	13.165068417470271	109252
a09e490e8efce3451a608952bebec07fffbf8c05	dealing with satisfiability and n-ary csps in a logical framework	resolution method;sat csp encoding;proof system	We investigate in this work a generalization of the known CNF representation that we call General Normal Form (GNF) and extend the resolution rule of Robinson to design a new sound and complete resolution proof system for the GNF. We show that by using a cardinality operator in the GNF we obtain the new representation CGNF that allows a natural and efficient Boolean encoding for n-ary finite discrete extensional CSPs. We prove that the space complexity of a CSP encoded in the CGNF is identical to its space complexity when it is expressed in the classical CSP representation. We prove that the generalized resolution rule applies for the CGNF encoding and introduce a new inference rule whose application until saturation achieves arc-consistency in a linear time complexity for n-ary CSP expressed in the CGNF encoding. Two enumerative methods for solving CSP instances encoded in this Boolean framework are studied: the first one (equivalent to MAC in CSPs) maintains full arc-consistency at each node of the search tree while the second (equivalent to FC in CSPs) performs partial arc-consistency on each node. Both methods are experimented and compared on some instances of the Ramsey problem, randomly generated 3/4-ary CSPs and promising results are obtained. We also adapted the notion of clause learning defined in SAT for the CGNF encoding. Finally, we show how the proposed inference rule can be used to achieve Path-consistency in the case of binary CSPs encoded in CGNF, and how it can be used to enforce strong path consistency when it is combined with the generalized resolution rule.	chaff algorithm;cobham's thesis;conjunctive normal form;constraint learning;cryptographic service provider;dspace;expr;feedback;greibach normal form;heuristic (computer science);local consistency;logical framework;mathematical optimization;pc bruno;procedural generation;program optimization;proof calculus;resolution (logic);search tree;sensor;time complexity	Belaid Benhamou;Lionel Paris;Pierre Siegel	2010	Journal of Automated Reasoning	10.1007/s10817-010-9204-z	combinatorics;discrete mathematics;mathematics;algorithm	AI	-6.892240091224688	17.90302659535631	109358
91afe00c895021f0515d7b298fe181a9139fa8e8	semigraphoids and structures of probabilistic conditional independence	conditional independence;artificial intelligent;inference rule;probability distribution;probabilistic reasoning	The concept of conditional independence (CI) has an important role in probabilistic reasoning, that is a branch of artificial intelligence where knowledge is modeled by means of a multidimensional finite-valued probability distribution. The structures of probabilistic CI are described by means of semigraphoids, that is lists of CI-statements closed under four concrete inference rules, which have at most two antecedents. It is known that every CI-model is a semigraphoid, but the converse is not true. In this paper, the semigraphoid closure of every couple of CI-statements is proved to be a CI-model. The substantial step to it is to show that every probabilistically sound inference rule for axiomatic characterization of CI properties (= axiom), having at most two antecedents, is a consequence of the semigraphoid inference rules. Moreover, all potential dominant triplets of the mentioned semigraphoid closure are found.	artificial intelligence	Milan Studený	1997	Annals of Mathematics and Artificial Intelligence	10.1023/A:1018905100242	probability distribution;conditional independence;computer science;artificial intelligence;machine learning;mathematics;probabilistic logic;algorithm;statistics;rule of inference	AI	-14.586140590666066	7.052635128732777	109482
6351b593633a6f8376cc6bf02980e763996ace1d	using design axioms and topology to model database semantics	design axioms;model database semantics			Arno Siebes;Martin L. Kersten	1987			discrete mathematics;armstrong's axioms;data mining;mathematics	DB	-11.964748514224649	12.360067080467227	109729
538d90b1c18145ac14ae19b5a0ab4b53ed1879dd	logic of many-sorted theories		Certain axiomatic systems involve more than one category of fundamental objects; for example, points, lines, and planes in geometry; individuals, classes of individuals, etc. in the theory of types or in predicate calculi of orders higher than one. It is natural to use variables of different kinds with their ranges respectively restricted to different categories of objects, and to assume as substructure the usual quantification theory (the restricted predicate calculus) for each of the various kinds of variables together with the usual theory of truth functions for the formulas of the system. An axiomatic theory set up in this manner will be called many-sorted. We shall refer to the theory of truth functions and quantifiers in it as its (many-sorted) elementary logic, and call the primitive symbols and axioms (including axiom schemata) the proper primitive symbols and proper axioms of the system. Our purpose in this paper is to investigate the many-sorted systems and their elementary logics. Among the proper primitive symbols of a many-sorted system T n ( n = 2, …, ω ) there may be included symbols of some or all of the following kinds: (1) predicates denoting the properties and relations treated in the system; (2) functors denoting the functions treated in the system; (3) constant names for certain objects of the system. We may either take as primitive or define a predicate denoting the identity relation in T n .	theory (mathematical logic)	Hao Wang	1952	J. Symb. Log.		predicate logic;dynamic logic;zeroth-order logic;higher-order logic;paraconsistent logic;computational logic;logic;multimodal logic;philosophy of logic;autoepistemic logic	Logic	-6.993898608448149	13.692157857678465	109757
34b436f585f77eff76e8467124ac05f3f4046d24	dependent types with subtyping and late-bound overloading	soustype;subtype;sobrecarga;module system;dependence;dependance;abstract data type;generic functor;generic function;program specialization;algorithme;algorithm;foncteur generique;subtipo;fonction generique;object oriented;formule atomique;strong normalization;type abstrait;overloading;tipo abstracto;dependent types;atomic formula;specialisation programme;sursollicitation;dependencia;type system;algoritmo	We present a calculus with dependent types, subtyping and la te-bound overloading. Besides its theoretical interest this work is motivated by several practical needs t hat range from the definition of logic encodings, to proof specialization and reuse, and to object-oriented ext ension of the SML module system. The theoretical study of this calculus is not straightforwa rd. While confluence is relatively easy to prove, subject reduction is much harder. We were not able to add over loading to any existing system with dependent types and subtyping, and prove subject reduction. This is wh y e also define here as by-product a new subtyping system for dependent types that improves previous sy stems and enjoys several properties (notably the transitivity elimination property). The calculus with ove rloading is then obtained as a conservative extension of this new system. Another difficult point is strong normali z tion, which is a necessary condition to the decidability of subtyping and typing relations. The calcul us with overloading is not strongly normalizing. However, we show that a reasonably useful fragment of the cal culus enjoys this property, and that its strong normalization implies the decidability of its subtyping an d typing relations. The article is divided into two parts: the first three section s provide a general overview of the systems and its motivations, and can be read separately; the remaining s ections develop the formal study.	confluence;dependent type;ext js javascript framework;linear algebra;logic programming;modular programming;name binding;normalization property (abstract rewriting);operator overloading;partial template specialization;subject reduction;vertex-transitive graph	Giuseppe Castagna;Gang Chen	2001	Inf. Comput.	10.1006/inco.2001.3128	discrete mathematics;dependent type;type system;subtyping;computer science;mathematics;atomic formula;programming language;object-oriented programming;abstract data type;algorithm	Logic	-12.884476063029892	17.74815505986209	109785
2a9d1ee317810475c0b359551ef9c4b73fae5e99	on a high-level approach to implementing exact real arithmetic in the functional logic programming language curry		While many functions on the real numbers are not exactly computable, the theory of exact real arithmetic investigates the computation of such functions with respect to any given precision. In this paper, we present an approach to implementing exact real arithmetic based on Type-2 Theory of Effectivity in the functional logic language Curry. It is demonstrated how the specific features of Curry can be used to obtain a high-level realisation that is close to the underlying theoretical concepts. The new Curry data type Real and its corresponding functions can easily be used in other function definitions.	curry;functional logic programming;programming language	Christoph Beierle;Udo Lelitko	2013		10.1007/978-3-319-08909-6_4	arithmetic;combinatory logic;functional logic programming;programming paradigm;programming language;logic programming;algorithm	PL	-14.660197013753788	18.03289092016077	109847
cc6b7ad9500708294426e2ad024694ba814758bf	a real-time semantics of temporal logic of actions	real time;temporal logic of actions		real-time transcription;temporal logic of actions	Michael Kaminski;Yael Yariv	2003	J. Log. Comput.	10.1093/logcom/13.6.921	linear temporal logic;description logic;interval temporal logic;computation tree logic;computer science;multimodal logic;temporal logic of actions	Logic	-15.353866952538816	13.911672252908962	109883
fad6c7980f68f50f24d9eeda56d7ea5a4f217879	complete independence of an axiom system for central translations		A recently proposed axiom system for André’s central translation structures is improved upon. First, one of its axioms turns out to be dependent (derivable from the other axioms). Without this axiom, the axiom system is indeed independent. Second, whereas most of the original independence models were infinite, finite independence models are available. Moreover, the independence proof for one of the axioms employed proof-theoretic techniques rather than independence models; for this axiom, too, a finite independence model exists. For every axiom, then, there is a finite independence model. Finally, the axiom system (without its single dependent axiom) is not only independent, but completely independent.	axiomatic system;theory	Jesse Alama	2013	CoRR		urelement;zermelo–fraenkel set theory;axiom schema;kripke–platek set theory;axiom of extensionality;decision model;combinatorics;discrete mathematics;morse–kelley set theory;axiom independence;action axiom;axiom of projective determinacy;general set theory;non-well-founded set theory;scott's trick;reverse mathematics;continuum hypothesis;mathematics;axiom of choice;theory;s;constructive set theory	Logic	-7.896572895818239	12.123340391685614	109962
5b9d4f983e4745e7a8d4b523e0f0d4db0f8eabd4	proof of the independence of the primitive symbols of heyting's calculus of propositions		In this paper I shall show that no one of the four primitive symbols of Heytingu0027s calculus of propositions is definable in terms of the other three. So as to make the paper self-contained, I begin by stating the rules and primitive sentences given by Heyting. The primitive symbols of the calculus are “⅂”, “∨”, “∧”, and “⊃”, which may be read, respectively, as “not,” “either…or,” “and,” and “if…then.” The symbol “⊃⊂”, which may be read “if and only if,” is defined in terms of these as follows: The rule of substitution is assumed, and the rule that S 2 follows from S 1 and S 1 ⊃ S 2 ; in addition it is assumed that S 1 ∧ S 2 follows from S 1 and S 2 . The primitive sentences are as follows:		J. C. C. McKinsey	1939	J. Symb. Log.		heyting arithmetic;discrete mathematics;pure mathematics;mathematics	Theory	-6.1718145625023135	14.071098739660894	109995
07ffb0c53408a1469ff155ab86db0d6621140d4b	on bourbaki’s axiomatic system for set theory	humanidades;set theory;bourbaki;category theory;filosofia etica;axiomatic system;grothendieck	In this paper we study the axiomatic system proposed by Bourbaki for the Theory of Sets in the Éléments de Mathématique. We begin by examining the role played by the sign $$\uptau $$ τ in the framework of its formal logical theory and then we show that the system of axioms for set theory is equivalent to Zermelo–Fraenkel system with the axiom of choice but without the axiom of foundation. Moreover, we study Grothendieck’s proposal of adding to Bourbaki’s system the axiom of universes for the purpose of considering the theory of categories. In this regard, we make some historical and epistemological remarks that could explain the conservative attitude of the Group.	axiomatic system;zermelo–fraenkel set theory	Maribel Anacona;Luis Carlos Arboleda;F. Javier Pérez-Fernández	2014	Synthese	10.1007/s11229-014-0515-1	urelement;zermelo–fraenkel set theory;axiomatic system;kripke–platek set theory;axiom of extensionality;discrete mathematics;morse–kelley set theory;general set theory;universe;non-well-founded set theory;scott's trick;naive set theory;pure mathematics;mathematics;axiom of choice;axiom;s;extension by definitions;empty set;constructive set theory;category theory;set theory	AI	-8.719632353644752	11.414157777083236	110016
8ef3b11b11c38d663a1543b497fa50fba00219ec	on denying presuppositions	presupposition;presupposition triggers;denial;correction;binding theory;segmented discourse representation theory	Strawson (in Mind 59:320–344, 1950; Theoria 30(2):96–118, 1964) argued that definite NPs trigger presuppositions as an aspect of their conventional meanings, and this semantic conception of presupposition triggers is incorporated into the binding theory of presuppositions (van der Sandt, in J Semant 9:333–377, 1992 and Geurts, in Presupposition and pronouns, 1999). The phenomenon of presupposition denials, however, presents a problem for the semantic conception of presupposition triggers, for in such denials the alleged semantic presuppositions seem to be “cancelled” by a negation operator. Geurts (in Language 74(2):274–307, 1998; Presupposition and pronouns, 1999) attempts to solve this problem by utilizing the binding theory’s allowance for local accommodation. Geurts’ proposal, however, is inadequate, primarily because Geurts formulates the binding theory within discourse representation theory (DRT), which makes no allowance for the illocutionary force of denial. Asher and Lascarides’ (in J Semant 15:239–299, 1998a; J Semant 15:83–113, 1998b; The logics of conversation, 2003) segmented discourse representation theory (SDRT), however, has the resources to account for the illocutionary force of denial. Utilizing a version of SDRT I demonstrate that the “cancelling” of a presupposition by echoic negation in presupposition denials crucially depends upon the denial of information that is pragmatically communicated by accommodation.	assertion (software development);automatic sounding;continuation;correctness (computer science);dylan;emoticon;gene ontology term enrichment;gloss (annotation);interpretation (logic);modulation;negation as failure;norm (social);per håkan sundell;port triggering;relevance;semantic analysis (compilers);theory	Lenny Clapp	2016	Synthese	10.1007/s11229-016-1026-z	presupposition;mathematics;linguistics;algorithm	NLP	-11.153799623532057	5.7231284224842485	110064
3d214121963ff581f631558b112b2fd9f3a1e9b9	the common order-theoretic structure of version spaces and atms's	admissibility;learning algorithm;label update algorithms;assumption based truth maintenance system;satisfiability;version spaces;atms;partially ordered set;anti chains;concept learning;partial orders;truth maintenance;concept space;partial order	We demonstrate how order-theoretic abstractions can be useful in identifying, formalizing, and exploiting relationships between seemingly dissimilar AI algorithms that perform computations on partially-ordered sets. In particular, we show how the order-theoretic concept of an anti-chain can be used to provide an e cient representation for such sets when they satisfy certain special properties. We use anti-chains to identify and analyze the basic operations and representation optimizations in the version space learning algorithm [10] and the assumption-based truth maintenance system (ATMS) [2, 3]. Our analysis allows us to (1) extend the known theory [7, 10, 8] of admissibility of concept spaces for incremental version space merging, and (2) develop new, simpler label-update algorithms for ATMS's with DNF assumption formulas.	algorithm;computation;reason maintenance;spaces;theory;version space learning	Carl A. Gunter;Teow-Hin Ngair;Prakash Panangaden;Devika Subramanian	1991		10.1016/S0004-3702(97)00033-7	partially ordered set;discrete mathematics;concept learning;mathematics;algorithm	AI	-17.450681553643406	8.44956439141934	110140
34b344d9d60e92b7d31066738393646425ff46e9	pedagogical second-order propositional calculi	second order;typed λ calculus;constructive mathematics;negationless mathematics;mathematical logic;natural deduction	The present work introduces the notion of pedagogical natural deduction systems, which are natural deduction systems with the following additional constraint: all hypotheses made in a proof must be motivated by an example. Technically speaking, we replace the rule (Hyp):#R##N##R##N#F ∈ Γ Γ ⊢ F (Hyp) #R##N##R##N#with the rule (PHyp):#R##N##R##N#F ∈ Γ   ⊢ σ · Γ Γ ⊢ F ( P - Hyp ) #R##N##R##N#with σ denoting a substitution replacing all variables of Γ with an example. This substitution is called the motivation of Γ. These systems are in essence negationless. In the present article, we study the second-order propositional calculus, since it is the simplest non-trivial natural deduction system in which the negation is definable. Some pedagogical versions of the second-order propositional calculus are proposed. We argue that these pedagogical calculi are negationless and we study their expressive power.	propositional calculus	Loïc Colson;David Michel	2008	J. Log. Comput.	10.1093/logcom/exn001	mathematical logic;constructivism;pure mathematics;mathematics;programming language;natural deduction;second-order logic;algorithm	Logic	-9.386885342990306	13.450020500299406	110157
1a1807e447b85b4a9c6eed7f37ea91a7cb8f8142	on canonicity and strong completeness conditions in intermediate propositional logics	logic;propositional logic;mathematical logic and foundations;philosophy;computational linguistics	By using algebraic-categorical tools, we establish four criteria in order to disprove canonicity, strong completeness, w-canonicity and strong w-completeness, respectively, of an intermediate propositional logic. We then apply the second criterion in order to get the following result: all the logics defined by extra-intuitionistic one-variable schemata, except four of them, are not strongly complete. We also apply the fourth criterion in order to prove that the Gabbay-de Jongh logic D1 is not strongly w-complete.		Silvio Ghilardi;Pierangelo Miglioli	1999	Studia Logica	10.1023/A:1005203020752	dynamic logic;monoidal t-norm logic;zeroth-order logic;decidability;complete theory;t-norm fuzzy logics;discrete mathematics;classical logic;resolution;description logic;higher-order logic;philosophy;epistemology;many-valued logic;intuitionistic logic;intermediate logic;computational linguistics;łukasiewicz logic;first-order logic;mathematics;linguistics;propositional variable;well-formed formula;logic;second-order logic;algorithm;philosophy of logic;autoepistemic logic	Theory	-11.089159458893805	12.726042314934206	110218
2f11d13c68e8c502fc2f9c1176450b10ee5d98d9	determinacy and the sharp functions on the reals	game theory;modele interieur;unification ordre 2;teoria conjunto;theorie ensemble;teoria juego;ordinal recursif;theorie jeu;numero real;set theory;cardinal mesurable;jeu 2 personnes;element indiscernable;sharp function;ordinal number;nombre ordinal;juego 2 personas;two person game;determination;real number;determinacy;nombre reel	Abstract   DuBose, D.A., Determinacy and the sharp function on the reals, Annals of Pure and Applied Logic 55 (1992) 237–263.  We characterize in terms of determinacy, the existence of the least inner model of “every real has a sharp”. We let ♯ 1  be the (partial) sharp function on the reals and define two classes of sets, ( Π  0  1 ) ∗  and ( Π  0  1 ) ∗  + , which lie strictly between ∪  β  2  ( β-Π  1  1 ) an d  Δ ( ω  2 - Π  1  1 ). We show that the determinacy of ( Π  0  1 ) ∗  follows from  L [# 1 ] ⊗xvR; “every real has a sharp”; and we show that the existence of indiscernibles for  L [# 1 ] is equivalent to a slightly determinacy hypothesis, the determinacy of ( Π  0  1 ) ∗  + .	indeterminacy in concurrent computation	Derrick Albert DuBose	1991	Ann. Pure Appl. Logic	10.1016/0168-0072(91)90009-B	game theory;ordinal number;mathematical analysis;topology;calculus;mathematics;determinacy;algorithm;real number;set theory	Logic	-8.26940365564162	12.106488252501652	110220
f595f627c706a91e70f852d026ddf563bf3fee21	remarks on quantum ontology	identite;objet;ontologie;mathematics;logique paraconsistante;object;individu;property;individual;quantum logic;quantum theory;propriete;identity;ontology;logique quantique;mathematiques;paraconsistent logic	Despite the discrepancies between quantum objects and `classical' ones, mainly with regard to the fact that the latter may be thought of as `individuals', contrary to the former, we still regard the quanta as `things' in our ordinary discourse as well as in the logico-mathematical basis of quantum theories. This paper considers some possibilities for accomodating the logico-mathematical framework of the theories which deal with such a strange ontology where the inhabitants are things devoid of identity and both having and not having certain properties. ``All right'', said the Cat; and this time it vanished quite slowly, beginning with the end of the tail, and ending with the grin, which remained some time after the rest of it had gone. ``Well! I've often seen a cat without a grin'', thought Alice, ``but a grin without a cat! It's the most curious thing I ever saw in all my life!'' Lewis Carroll	carroll morgan (computer scientist);interpretations of quantum mechanics;quanta computer;theory	Décio Krause	2000	Synthese	10.1023/A:1005235125284	quantum logic;paraconsistent logic;philosophy;epistemology;object;pure mathematics;ontology;mathematics;property;algorithm;quantum mechanics	PL	-11.878552986121411	4.612034673110859	110301
c68415e779dae3b7be87ed6b68994641aea4392b	qualitative spatio-temporal continuity	transitions;topology;continuity;continuous function;spatial reasoning;hierarchized structure;topologie;transition;structure hierarchisee;fonction continue;theorie temporospatiale;space time;espacio tiempo;conceptual neighbourhoods;topologia;transicion;funcion continua;raisonnement temporel;raisonnement spatial;information system;systeme information;estructura jerarquizada;espace temps;topological relation;temporal reasoning;spatio temporal reasoning;sistema informacion	We explore differentintuitive notions of spatio-temporal continuity and give a formal characterization of continuity for spacetime histories. We investigate the types of transitions possible for the RCC-8 topological relations under each distinct notion of spatio-temporal continuity a nd provide a hierarchy of conceptual neighbourhood diagrams.	correctness (computer science);diagram;formal proof;scott continuity	Shyamanta M. Hazarika;Anthony G. Cohn	2001		10.1007/3-540-45424-1_7	continuous function;topology;transition;calculus;space time;mathematics;spatial intelligence;information system	Theory	-15.355921586316194	10.604318482429735	110457
7bf4c419749e652df8e645381916346395294ffd	the constraint operator of medlan: its efficient implementation and use	efficient implementation	A declarative mediator language, based upon operations among logic theories is introduced. In particular we concentrate on the constraint operator. The denotational semantics of the language is introduced together with the definition of a bottom-up efficient implementation. The use of the constraint operator for security within a mediator architecture for database integration is suggested and presented by means of a simple example.		Patrizia Asirelli;Chiara Renso;Franco Turini	1998		10.1007/978-0-387-35396-8_3	operator (computer programming);architecture;denotational semantics;theoretical computer science;data integration;multilevel security;computer science	EDA	-16.723468399540188	17.976444750763033	110458
05f2e55a104362051d903984b75d0b8cc42d0dcc	admissible rules of modal logics	kripke models;modal logic;admissible rules;projective formulas	We construct explicit bases of admissible rules for a representative class of normal modal logics (including the systems K4, GL, S4, Grz, and GL.3), by extending the methods of S. Ghilardi and R. Iemhoff. We also investigate the notion of admissible multiple conclusion rules.	modal logic	Emil Jerábek	2005	J. Log. Comput.	10.1093/logcom/exi029	modal logic;normal modal logic;combinatorics;discrete mathematics;epistemology;axiom s5;mathematics	Logic	-10.686974603245206	13.042439671556394	110465
452076570ce65a4c890317663fcdcb69f863ed98	inessential features, ineliminable features, and modal logics for model theoretic syntax	bepress selected works;model theoretic syntax;modal logic;monadic second order logic;tree automata;propositional dynamic logic;model theoretic syntax modal logic tree automata	While monadic second-order logic (MSO) has played a prominent role in model theoretic syntax, modal logics have been used in this context since its inception. When comparing propositional dynamic logic (PDL) to MSO over trees, Kracht (1997) noted that there are tree languages that can be defined in MSO that can only be defined in PDL by adding new features whose distribution is predictable. He named such features “inessential features”. We show that Kracht’s observation can be extended to other modal logics of trees in two ways. First, we demonstrate that for each stronger modal logic, there exists a tree language that can only be defined in a weaker modal logic with inessential features. Second, we show that any tree language that can be defined in a stronger modal logic, but not in some weaker modal logic, can be defined with inessential features. Additionally, we consider Kracht’s definition of inessential features more closely. It turns out that there are features whose distribution can be predicted, but who fail to be inessential in Kracht’s sense. We will look at ways to modify his definition.	dynamic logic (modal logic);modal logic;theory;tree automaton	Hans-Jörg Tiede	2008	Journal of Logic, Language and Information	10.1007/s10849-007-9052-3	modal logic;dynamic logic;zeroth-order logic;s5;normal modal logic;discrete mathematics;linear temporal logic;description logic;higher-order logic;philosophy;epistemology;many-valued logic;intermediate logic;theoretical computer science;mathematics;accessibility relation;multimodal logic;algorithm;philosophy of logic	Logic	-10.479725069897027	14.56291612169503	110603
41612a6bf0c4382ff81c369a06ce9b2e1a2a807c	explanation-based generalization for negation as failure and multiple examples		We report on a combined approach to solve two known problems of traditional Explanation-Based Generalization (EBG) concerning utility and expressiveness. (1) Usually, for each training example a new rule is derived and added separately. Therefore, the overall performance of the associated inference system may degrade if the presented instances are numerous and not representative for the class of applications. (2) Traditional EBG cannot be used for normal domain theories in which negations appear in clause bodies. This lack of expressiveness excludes otherwise interesting applications, e.g. in the area of game playing. As a possible solution for the utility problem (1), it has been proposed earlier [?, ?, ?, ?, ?] to consider multiple examples at the same time and to find a common generalization, thereby compensating for the influence of misleading ones. (2) An extension of EBG for Negation as Failure was described in [?]. However, it is based on Explanation-Based Generalization of Failure (EBGF) [?] which can suffer from an inefficient, redundant representation of rules. This weakness is closely related to a similar one in EBG (1) which is caused by considering training examples independently of each other. The new approach presented here overcomes this drawback by using more than one example also for EBGF. Moreover, we propose a unifying framework for EBG which is able to deal as well with multiple training instances simultaneously as with negation in domain theories.	inference engine;negation as failure;theory	Stefan Schrödl	1996			machine learning;computer science;artificial intelligence;guitar;universal generalization;negation as failure;mutually exclusive events	AI	-16.236958691281874	6.807664835653445	110693
8c9e46bc549692cad7feb06a7294c7ab88718b29	on the duality of proofs and countermodels in labelled sequent calculi		The duality of proofs and counterexamples, or more generally, refutations, is ubiquitous in science, but involves distinctions often blurred by the rethoric of argumentation. More crisp distinctions between proofs and refutations are found in mathematics, especially in well defined formalized fragments.	sequent calculus	Sara Negri	2013		10.1007/978-3-642-40537-2_2	discrete mathematics	Logic	-13.325750810195315	6.1714230785965905	110926
bc56002edf47e9533482af8e878744972bcd1606	a compact representation of proofs	theorem prover;first order;compact representation;classical logic	A structure which generalizes formulas by including substitution terms is used to represent proofs in classical logic. These structures, called expansion trees, can be most easily understood as describing a tautologous substitution instance of a theorem. They also provide a computationally useful representation of classical proofs as first-class values. As values they are compact and can easily be manipulated and transformed. For example, we present an explicit transformations between expansion tree proofs and cut-free sequential proofs. A theorem prover which represents proofs using expansion trees can use this transformation to present its proofs in more human-readable form. Also a very simple computation on expansion trees can transform them into Craig-style linear reasoning and into interpolants when they exist. We have chosen a sublogic of the Simple Theory of Types for our classical logic because it elegantly represents substitutions at all finite types through the use of the typed λ-calculus. Since all the proof-theoretic results we shall study depend heavily on properties of substitutions, using this logic has allowed us to strengthen and extend prior results: we are able to prove a strengthen form of the firstorder interpolation theorem as well as provide a correct description of Skolem functions and the Herbrand Universe. The latter are not straightforward generalization of their first-order definitions.		Dale A. Miller	1987	Studia Logica	10.1007/BF00370646	discrete mathematics;classical logic;topology;philosophy;computer science;pure mathematics;first-order logic;mathematics;automated theorem proving;programming language;algebra	NLP	-12.405013743541558	16.03481356668062	111057
6010d37360b50219aae0df02764a104963c10f15	computing temporal defeasible logic	computing temporal defeasible logic;normative retroactivity;temporal defeasible logic;efficient algorithm	We investigate the complexity of temporal defeasible logic, and propose an efficient algorithm to compute the extension of any theory. The logic and algorithm are discussed in regard to modeling deadlines and normative retroactivity.	algorithm;defeasible logic;normative social influence	Guido Governatori;Antonino Rotolo	2013		10.1007/978-3-642-39617-5_13	dynamic logic;linear temporal logic;description logic;interval temporal logic;multimodal logic;temporal logic of actions	Logic	-14.657018133619227	13.546162201645764	111071
1cb5e6f6ee57a77fdc785d0ad9bba5533c6e9651	linguistic logics with hedges		Human knowledge is commonly expressed linguistically, i.e., truth of vague sentences is given in linguistic terms, and many hedges are often used simultaneously to state different levels of emphasis. In this paper, we propose an axiomatization of mathematical fuzzy logic with many hedges where each hedge does not have any dual one. Then, we present linguistic logics built based on the proposed axiomatization and the one in a previous work in order to make it easier to represent and reason with linguistically-expressed human knowledge.	approximation;axiomatic system;cybernetics;first-order predicate;fuzzy concept;fuzzy logic;set theory;vagueness	Van-Hung Le;Dinh-Khang Tran	2015			fuzzy logic;hedge (finance);linguistics;mathematics	AI	-14.794662737254104	7.330874344595005	111296
898aab1e757ca13573f35b51550856cefa004f42	uniform interpolation for coalgebraic fixpoint logic	mu calculus uniform interpolation coalgebra automata;004;universiteitsbibliotheek	We use the connection between automata and logic to prove that a wide class of coalgebraic fixpoint logics enjoys uniform interpolation. To this aim, first we generalize one of the central results in coalgebraic automata theory, namely closure under projection, which is known to hold for weak-pullback preserving functors, to a more general class of functors, i.e., functors with quasifunctorial lax extensions. Then we will show that closure under projection implies definability of the bisimulation quantifier in the language of coalgebraic fixpoint logic, and finally we prove the uniform interpolation theorem. 1998 ACM Subject Classification F.4.1 Mathematical Logic	automata theory;bisimulation;first-order logic;fixed point (mathematics);interpolation;lambda lifting;modality (human–computer interaction);quantifier (logic)	Johannes Marti;Fatemeh Seifan;Yde Venema	2015		10.4230/LIPIcs.CALCO.2015.238	discrete mathematics;pure mathematics;mathematics;algebra	Logic	-9.433607613742923	14.934571210158586	111354
edd478cb91f436df043ae3cf628cf84cbfb462dd	a generalization of stability and its application to circumscription of positive introspective knowledge	positive introspective knowledge	Without Abstract	circumscription (logic);introspection	Jan Jaspars	1990		10.1007/3-540-54487-9_65	artificial intelligence;mathematics;algorithm	AI	-13.494573736545847	11.825355726981044	111447
00fff531e67d18736d97236c513dd4997775d69c	the space within fisherman's folly: playing with a puzzle in mereotopology	commonsense reasoning;qualitative spatial reasoning;data structure	In this paper we propose a spatial ontology for reasoning abo ut h les, rigid objects and a string, taking a classical puzzle as a motivati ng example. In this ontology the domain is composed of spatial regions wher eby a theory about holes is defined over a mereotopological basis. Within this theory we define a data structure, named chain, that facilitates a cl ear and efficient representation of the puzzle states and its solution.	adaptive binary optimization;data structure;mereotopology	Paulo E. Santos;Pedro Cabalar	2008	Spatial Cognition & Computation	10.1080/13875860801944804	commonsense reasoning;data structure;computer science;artificial intelligence;mathematics;algorithm	AI	-15.40305338632058	11.67083142277133	111592
f0b965ee5b78d83b0dc0e1c8448fcec4b526613f	generalising the fan theorem		The binary tree is the set of all finite binary sequences, that is, finite sequences of 0 and 1. For instance 001 or 1011 are such sequences. We use σ , τ , ... as variables for such sequences and denote by nil the empty sequence. Moreover, we write σi to indicate the i th element in the sequence σ for any i ≤ |σ |, where |σ | denotes the length of σ . We can generalise finite sequences to infinite ones by considering infinite sequences α of 0s and 1s and also in this case we write αi to mean the i th element of the infinite sequence α. We say that a finite sequence σ is an initial segment of the finite sequence τ , and we write σ τ , if |σ | ≤ |τ | and, for all i ≤ |σ |, σi = τi . In particular we say that σ is a proper initial segment of τ , notation σ τ , if σ is an initial segment of τ and |σ | < |τ |. In a similar way, we say that a finite sequence σ is an initial segment of the infinite sequence α, and we write σ α, if, for all i ≤ |σ |, we have that σi = αi . We are now ready to introduce the definition of generalised bar. Definition 1.1 (Generalised bar) Suppose that C is a collection of infinite sequences and V is a set of finite sequences. We say that V bars C if, for every infinite sequence α ∈ C, there is some element τ ∈ V such that τ α. The intended meaning of this definition is stating that V bars C when all the infinite sequences in C meet V sooner or later. It is immediate to see that the standard notion of bar, stating that a set V of finite sequences bars the collection of all the infinite sequences (cf. [2] for an enjoyable presentation of the fan theorem) just means that V bars AS, where AS denotes the complete collection containing all the infinite sequences. Let us consider now the following property. Definition 1.2 (Fan property) Let C be a collection of infinite sequences. Then we say that C enjoys the fan property if, for any set V of finite sequences that bars C, there is a finite subset V0 of V which also bars C.	binary tree	Silvio Valentini	2017	Math. Log. Q.	10.1002/malq.201500016	combinatorics;discrete mathematics;mathematics;algorithm	Logic	-5.082151809639489	13.701954260849273	112009
44ebf3836c301ef684cfcf653f9ba2bae9a0715e	on gödel's way in: the influence of rudolf carnap			gödel	Warren D. Goldfarb	2005	Bulletin of Symbolic Logic			Logic	-12.571863413203307	11.174579565157021	112273
5a5104d42fca3af365ad3c75ca264eba818985ea	a more compact translation of pseudo-boolean constraints into cnf such that generalized arc consistency is maintained		In this paper we answer the open question for the existence of a more compact encoding from Pseudo-Boolean constraints into CNF that maintains generalized arc consistency by unit propagation, formal- ized by Bailleux et al. in (21). In contrast to other encodings our approach is defined in an abstract way and we present a concrete instantiation, resulting in a space complexity of O(n 2 log 2 (n )l og(wmax)) clauses in con- trast to O(n 3 log(n )l og(wmax)) clauses generated by the previously best known encoding that maintains generalized arc consistency.	conjunctive normal form;local consistency	Norbert Manthey;Tobias Philipp;Peter Steinke	2014		10.1007/978-3-319-11206-0_13	combinatorics;discrete mathematics;mathematics;algorithm	AI	-6.881144962954559	17.585941497792124	112416
37715a2f6833274e5f25d7b3757e156cb61cabe8	erratum to 'a logic for reasoning about ambiguity' [artificial intelligence 209 (2014) 1-10]			artificial intelligence	Joseph Y. Halpern;Willemien Kets	2014	Artif. Intell.	10.1016/j.artint.2014.04.002	computer science;artificial intelligence;machine learning;algorithm	AI	-13.663922952640409	10.438974766818726	112450
7b335c9f36ab21bc37d0d8493b510e7bee47319e	formalizing basic first order model theory	preuve programme;program proof;automatic proving;semantica formal;ingenieria logiciel;demostracion automatica;logical programming;formal semantics;satisfiability;software engineering;semantique formelle;demonstration automatique;analyse syntaxique;first order;programmation logique;analisis sintaxico;syntactic analysis;prueba programa;genie logiciel;programacion logica;first order logic;model theory	We define the syntax of unsorted first order logic as a HOL datatype and define the semantics of terms and formulas, and hence notions such as validity and satisfiability. We prove formally in HOL some elementary metatheorems such as Compactness, Lowenheim-Skolem and Uniformity, via canonical term models. The proofs are based on those in Kreisel and Krivine's book on model theory, but the HOL formalization raises several interesting issues. Because of the limited nature of type quantification in HOL, many of the theorems are awkward to state or prove in their standard form. Moreover, simple and elegant though the proofs seem, there are surprising difficulties formalizing Skolemization, one of the more intuitively obvious parts. On the other hand, we significantly improve on the original textbook versions of the arguments, proving two of the main theorems together rather than by separate arguments.	dos;hol (proof assistant);propositional calculus	John Harrison	1998		10.1007/BFb0055135	discrete mathematics;hol;computer science;artificial intelligence;first-order logic;mathematics;programming language;algorithm	Crypto	-14.555414023994086	17.842587599045892	112514
7e268c71917a54751ceccfb7c76c4bf80306e147	step by step - building representations in algebraic logic		We consider the problem of nding and classifying representations in algebraic logic. This is approached by letting two players build a representation using a game. Homogeneous and universal representations are characterised according to the outcome of certain games. The Lyndon conditions deening representable relation algebras (for the nite case) and a similar schema for cylindric algebras are derived. Countable relation algebras with homogeneous representations are characterised by rst order formulas. Equivalence games are deened, and are used to establish whether an algebra is !-categorical. We have a simple proof that the perfect extension of a representable relation algebra is completely representable. An important open problem from algebraic logic is addressed by devising another two-player game, and using it to derive equational axiomatisations for the classes of all repre-sentable relation algebras and representable cylindric algebras. Other instances of this approach are looked at, and include the step by step method.	cylindric numbering;linear algebra;newton's method;turing completeness	Robin Hirsch;Ian M. Hodkinson	1997	J. Symb. Log.			Logic	-7.102020318771949	13.760979229679947	112520
1090eb823034bba83b61c63ab796f08407a1cb13	"""degrees of """"in"""", """"out"""" and """"undecided"""" in argumentation networks"""		The traditional 3-valued semantics of an argumentation framework 〈A ,R〉 identifies arguments that are “in”, “out” and “undecided”. Yet, it has long been recognised by the community that some elements can be at different degrees in each of these categories [1,2,3]. For example, Dung’s semantics can only classify some elements as “out”, but cannot reflect how much “out” they really are or if elements are “in” are they as much “in” as elements which are not attacked at all? In this paper we shall use a numerical approach to give a measure of “in”, “out” and “undecided” to the nodes of a network. We shall devise equations which allow for solutions that reflect these distinctions.	argumentation framework;numerical analysis	Dov M. Gabbay;Odinaldo Rodrigues	2016		10.3233/978-1-61499-686-6-319	argumentation theory;knowledge management;natural language processing;artificial intelligence;computer science	AI	-15.473270776038486	4.464504856520235	112546
113b66a1e4a36864cf0589dde00107fcd6f0bad6	a simple and tractable extension of situation calculus to epistemic logic	representacion conocimientos;cognitive robotics;logical framework;axiomatic;epistemologie;robotics;formal semantics;axiomatico;frame problem;logique ordre 1;epistemology;robotica;epistemic logic;robotique;knowledge representation;epistemologia;axiomatique;representation connaissances;situation calculus;first order logic;logica orden 1	The frame problem and the representation of knowledge change have deserved a lot of works. In particular, at the Cognitive Robotics Group, at Toronto, several researchers in the last ten years have produced quite interesting papers in a uni- form logical framework based on Situation Calulus [Rei91, SL93, LR94, LL98]. In [Rei91] Reiter has proposed a simple solution to the frame problem. Scherl and Levesque in [SL93] have defined an extension to Epistemic Logic to represent knowledge dynamics in contexts where some actions may produce knowledge, like, for instance, sensing actions for a robot. This approach has been extended by Lakemeyer and Levesque in [LL98] to modal operators of the kind “I know and only know”. Also, they have given a formal semantics and axiomatics, and they proved soundness and completeness of the axiomatics.	cobham's thesis;epistemic modal logic;situation calculus	Robert Demolombe;Maria del Pilar Pozos Parra	2000		10.1007/3-540-39963-1_54	knowledge representation and reasoning;fluent calculus;logical framework;frame problem;epistemic modal logic;many-valued logic;computer science;artificial intelligence;formal semantics;first-order logic;mathematics;proof calculus;axiom;situation calculus;robotics;natural deduction;multimodal logic;algorithm;cognitive robotics	AI	-17.134426709551235	10.378853955852973	112636
89682d708c7d82fb2380752ec358b3d5766661ce	characterizing certain topological specifications		We prove a characterization theorem à la van Benthem for a particular modal system called topologic, which is, among other things, suitable for specifying the interrelation between knowledge and topology. The comparison language arising naturally from the relevant semantics is well-known from the beginnings of topological model theory, and subset space bisimulations provide for the proper notion of invariance of		Bernhard Heinemann	2012		10.1007/978-3-642-30642-6_18	invariant (physics);computer science;discrete mathematics;combinatorics;modal logic;semantics;model theory;topology	Logic	-8.809102052145457	13.45208528767869	112772
70ad3d00620f7db9124dc59789f3707ecf773648	operational and axiomatic semantics of pcf	rewrite rule;observational equivalence;operational semantics;data type;fixed point;normal form;typed lambda calculus	PCF, as considered in this paper, is a lazy typed lambda calculus with functions, pairing, fixed-point operators and arbitrary algebraic data types. The natural equational axioms for PCF include <italic>&eegr;</italic>-equivalence and the so-called “surjective pairing” axiom for pairs. However, the reduction system <italic>pcf<subscrpt>&eegr;,sp</subscrpt></italic> defined by directing each equational axiom is not confluent, for virtually any choice of algebraic data types. Moreover, neither <italic>&eegr;</italic>-reduction nor surjective pairing seems to have a counterpart in ordinary execution. Therefore, we consider a smaller reduction system <italic>pcf</italic> without <italic>&eegr;</italic>-reduction or surjective pairing. The system <italic>pcf</italic> is confluent when combined with any linear, confluent algebraic rewrite rules. The system is also computationally adequate, in the sense that whenever a closed term of “observable” type has a <italic>pcf<subscrpt>&eegr;,sp</subscrpt></italic> normal form, this is also the unique <italic>pcf</italic> normal form. Moreover, the equational axioms for PCF, including (<italic>&eegr;</italic>) and surjective pairing, are sound for <italic>pcf</italic> observational equivalence. These results suggest that if we take the equational axioms as defining the language, the smaller reduction system gives an appropriate operational semantics.	algebraic data type;axiomatic semantics;beta normal form;confluence (abstract rewriting);denotational semantics;fixed-point arithmetic;higher-order function;introduction to algorithms;lazy evaluation;linear algebra;observable;observational equivalence;operational semantics;product type;programming computable functions;proof calculus;rewrite (programming);rewriting;streams;turing completeness;type constructor;typed lambda calculus;zeller's congruence	Brian T. Howard;John C. Mitchell	1990		10.1145/91556.91677	typed lambda calculus;data type;computer science;fixed point;programming language;operational semantics;algorithm	PL	-12.125265672601328	17.924304308901693	112899
1614788c165e519f824dda61fa1d81261de6e894	efficient model checking using tabled resolution	computability;fixed point;model checking;specification and verification;informatique theorique;calculabilite;systeme concurrent;logic programs;calculabilidad;computer theory;experience design;informatica teorica	We demonstrate the feasibility of using the XSB tabled logic programming system as a programmable fixed-point engine for implementing efficient local model checkers. In particular, we present XMC, an XSBbased local model checker for a CCS-like value-passing language and the alternation-free fragment of the modal mu-calculus. XMC is written in under 200 lines of XSB code, which constitute a declarative specification of CCS and the modal mu-calculus at the level of semantic equations. In order to gauge the performance of XMC as an algorithmic model checker, we conducted a series of benchmarking experiments designed to compare the performance of XMC with the local model checkers implemented in C/C++ in the Concurrency Factory and SPIN specification and verification environments. After applying certain newly developed logic-programmingbased optimizations (along with some standard ones), XMC’s performance became extremely competitive with that of the Factory and shows promise in its comparison with SPIN.	admissible numbering;algorithm;alternating turing machine;c++;computation;experiment;fixed point (mathematics);infineon xmc;lazy evaluation;logic programming;modal logic;modal μ-calculus;model checking;spin;unification (computer science);value (ethics);xsb	Y. S. Ramakrishna;C. R. Ramakrishnan;I. V. Ramakrishnan;Scott A. Smolka;Theresa Swift;David Scott Warren	1997		10.1007/3-540-63166-6_16	model checking;experience design;computer science;artificial intelligence;theoretical computer science;operating system;database;mathematics;distributed computing;fixed point;computability;programming language;algorithm	Logic	-15.424499004891084	15.025241502605661	112946
30f27479166cfed4aa7e63ff3bcc89f7aa4077e9	logic, probability theory, and artificial intelligence - part i: the probabilistic foundations of logic	probability;probabilitye;formalization;logic;semantics;intelligence artificielle;semantica;semantique;artificial intelligent;informatique theorique;probability theory;formalizacion;theorie probabilite;artificial intelligence;teoria probabilidad;inteligencia artificial;formalisation;logique;logica;computer theory;informatica teorica	Many A1 researchers have come to be dissatisfied with approaches to their discipline based on formal logic. Various alternatives are often suggested, including probability theory. This paper investigates the intimate connection between probability theory and various logics. We show that prcbability theory, broadly conceived, may be used as a formal semantics for virtually any monotonic logic. Thus, rather than being seen as competing, it is more appropriate to view formal logics as very special cases of probability theory, usually special cases that are computationally more tractable than the more general theory. Thus, probability theory and logic should be seen as complementary. Viewing probability theory in this abstract way may help to shed light on various recalcitrant problems in AI.		Charles G. Morgan	1991	Computational Intelligence	10.1111/j.1467-8640.1991.tb00385.x	probability theory;artificial intelligence;probability;semantics;logic;algorithm;statistics	AI	-14.692669079291711	6.898128047565196	113145
37c7ea530a5410a54f1ade353ffd259e2244bff1	some remarks on finitary and iterative monads	ciencias basicas y experimentales;matematicas;grupo a	There are many presentations of finitary varieties of algebras: as models of algebraic theories, or as equational classes of -algebras, or as finitary monads in Set, etc. We are going to add another one, using finitary Kleisli triples. Recall that a Kleisli triple on a category A is a triple of functions (T , η, ( _ )∗) where to every object X of A an object TX and a morphism ηX : X → TX are assigned, and to every morphism s : X → T Y a morphism s∗ : TX → T Y of A is assigned so that the following axioms (UNIT) η∗ X = idTX, (EXT) s∗ · ηX = s,		Jirí Adámek;Stefan Milius;Jiri Velebil	2003	Applied Categorical Structures	10.1023/A:1026153529959	discrete mathematics;topology;distributive law between monads;mathematics;algebra	Logic	-6.948008471183613	14.713387121831284	113280
db8f417661434e8cd23d8856f7e5197db1a0517a	proof theory of many-valued logic--linear optimization--logic design: connections and interactions	logic design;proof theory;mixed integer program;linear optimization;many valued logic	In this paper proof theory of many-valued logic is connected with areas outside of logic, namely, linear optimization and computer aided logic design. By stating these not widely-known connections explicitly, I want to encourage interaction between the mentioned disciplines. Once familiar with the others’ terminology, I believe that the respective communities can greatly benefit from each other.	interaction;linear programming;logic synthesis;mathematical optimization	Reiner Hähnle	1997	Soft Comput.	10.1007/s005000050012	predicate logic;dynamic logic;zeroth-order logic;direct proof;mathematical optimization;discrete mathematics;logic synthesis;higher-order logic;geometry of interaction;many-valued logic;computer science;linear programming;bunched logic;proof theory;computational logic;mathematics;proof calculus;multimodal logic;second-order logic;algorithm;philosophy of logic	ECom	-10.053769541017344	11.231700866977784	113348
1727a80b1c1478b30dbe3f8b87b5e8283f6dfc75	towards a fuzzy-logic programming system: a 1st-order fuzzy logic	fuzzy logic programming;fuzzy logic	Abstract   Traditional logic and logic programming languages cannot handle uncertainty. Fuzzy logic can, but nobody has yet devised a readily computable form. One possible way to achieve this is to define a propositional fuzzy logic, extend this to a 1st-order form, convert it to Horn-clause form, and, finally, to devise a theorem prover to manipulate the Horn clauses. The authors of the paper have already achieved the first step. The paper formally develops the second step, namely a type of 1st-order fuzzy logic that incorporates a complete set of quantifiers, qualifiers and modifiers. The fuzzy entities that represent the language are described, and a 1st-order theory is introduced that consists of an alphabet, a syntax and a set of semantics for the language.	admissible numbering;fuzzy logic;logic programming	Paul C. Rhodes;Sabah Merad Menani	1992	Knowl.-Based Syst.	10.1016/0950-7051(92)90001-V	fuzzy logic;dynamic logic;zeroth-order logic;t-norm fuzzy logics;fuzzy electronics;description logic;higher-order logic;horn clause;fuzzy mathematics;many-valued logic;fuzzy classification;computer science;intermediate logic;artificial intelligence;fuzzy number;machine learning;computational logic;fuzzy associative matrix;logic programming;fuzzy set operations;fuzzy control language;algorithm;philosophy of logic;autoepistemic logic	EDA	-16.2773586251184	11.805488267161136	113431
6478deb43b002901cc0e038f0e94dc8f8c143eec	towards a clean amalgamation of logic programs with external procedures	clean amalgamation;external procedures;logic programs	1 I n t r o d u c t i o n This paper presents a systematic approach to the problem of amalgamating logic programs with external procedures. The motivation for this is twofold: • To allow for re-using of existing (possibly imperative) software while still preserving the declarative nature or the top-level logic programs. • To allow for use of functions in logic programming whenever it is more natural than expressing a function as a relation. In recent years there have been a number of suggestions concerning combination of functional and logic programming in a single framework (see e.g. [6] or [3] for a survey). The approaches can be classified as: • Integrating existing programming languages and logic programs (well-known examples of this type are LOGLISP [21], QLOG [14], POPLOG [18] and APPLOG [5]). • Construction of new languages which allow one to define functions and relations and to combine functional and relational definitions. (well-known examples are EQLOG [8], LEAF [2] and FUNLOG [22]). 1This paper was originally published in the ICLP proceedings, copyright 1988 by the MIT Press	imperative programming;international conference on logic programming;poplog;programming language	Staffan Bonnier;Jan Maluszynski	1988		10.1007/3-540-50820-1_38	algorithm	PL	-16.907552861199115	17.622452983181077	113557
16c25b47a55f6d8140185e6687f06a98cff1abbf	complexity results for checking equivalence of stratified logic programs	nonmonotonic logic;knowledge representation and reasoning;answer set semantics;logic programs;lower bound	Recent research in nonmonotonic logic programming under the answer-set semantics focuses on different notions of program equivalence. However, previous results do not address the important classes of stratified programs and its subclass of acyclic (i.e., recursion-free) programs, although they are recognized as important tools for knowledge representation and reasoning. In this paper, we consider such programs, possibly augmented with constraints. Our results show that in the propositional setting, where reasoning is wellknown to be polynomial, deciding strong and uniform equivalence is as hard as for arbitrary normal logic programs (and thus coNP-complete), but is polynomial in some restricted cases. Non-ground programs behave similarly. However, exponential lower bounds already hold for small programs (i.e., with constantly many rules). In particular, uniform equivalence is undecidable even for small Horn programs plus a single negative constraint.	algorithm;co-np;constraint (mathematics);directed acyclic graph;knowledge representation and reasoning;lambda calculus;logic programming;mathematical optimization;non-monotonic logic;polynomial;program optimization;recursion;stable model semantics;time complexity;turing completeness;undecidable problem	Thomas Eiter;Michael Fink;Hans Tompits;Stefan Woltran	2007			knowledge representation and reasoning;discrete mathematics;stable model semantics;computer science;artificial intelligence;non-monotonic logic;mathematics;upper and lower bounds;algorithm	AI	-7.493722805036711	18.106601439869777	113680
2c075ca406385fa47d579cc10c031858da948ae5	a comprehensive theory of trichotomous evaluative linguistic expressions	engineering;canonical model;fuzzy set;procesamiento informacion;logique ordre eleve;logique floue;semantics;conjunto difuso;logica difusa;ensemble flou;03b52;semantica;semantique;higher order;ingenierie;fuzzy logic;evaluative trichotomy;natural language;type theory;information processing;intension;formal logic;ingenieria;sistema difuso;systeme flou;extension;evaluative linguistic expression;traitement information;linguistic hedge;higher order logic;context;03b15;fuzzy system;fuzzy type theory	In this paper, a logical theory of the, so called, trichotomous evaluative linguistic expressions (TEv-expressions) is presented. These are frequent expressions of natural language, such as “small, very small, roughly medium, extremely big”, etc. The theory is developed using the formal system of higher-order fuzzy logic, namely the fuzzy type theory (generalization of classical type theory). First, we discuss informally what are properties of the meaning of TEv-expressions. Then we construct step by step axioms of a formal logical theory T of TEv-expressions and prove various properties of T. All the proofs are syntactical and so, our theory is very general. We also outline construction of a canonical model of T. The main elegancy of our theory consists in the fact that semantics of all kinds of evaluative expressions is modeled in a unified way. We also prove theorems demonstrating that essential properties of the vagueness phenomenon can be captured within our theory.	canonical model;essence;formal system;fuzzy logic;modifier key;natural language;type theory;vagueness	Vilém Novák	2008	Fuzzy Sets and Systems	10.1016/j.fss.2008.02.023	higher-order logic;information processing;computer science;artificial intelligence;mathematics;semantics;extension by definitions;algorithm;fuzzy control system	Logic	-13.368106646170789	7.508791730877209	113792
d28e40dd2fe4477a219c430300b992fa3675881c	on formalizing aristotle's theory of modal syllogisms			modal logic	R. Zane Parks	1972	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093890627	artificial intelligence;mathematics;algorithm	Logic	-13.11880351054569	11.324780723029672	113795
14f260fd99a0d62e85e4dcfe616f62796323663b	intrinsicality and counterpart theory	humanidades;filosofia etica	It is shown that counterpart theory and the duplication account of intrinsicality—two key pieces of the Lewisian package—are incompatible. In particular, the duplication account yields the result that certain intuitively extrinsic modal properties are intrinsic. Along the way I consider a potentially more general worry concerning certain existential closures of internal relations. One conclusion is that, unless the Lewisian provides an adequate alternative to the duplication account, the reductive nature of their total theory is in jeopardy.	closure (computer programming);modal logic	Michael De	2015	Synthese	10.1007/s11229-015-0847-5	philosophy;epistemology;mathematics	Theory	-13.05383292585145	4.99743553212635	113848
0383011321c1264013387769c4e56dbd0b026a25	decidability and essential undecidability		There are a number of open problems involving the concepts of decidability and essential undecidability . This paper will present solutions to some of these problems. Specifically: (1) Can a decidable theory have an essentially undecidable, axiomatizable extension (with the same constants)? (2) Are all the complete extensions of an undecidable theory ever decidable? We shall show that the answer to both questions is in the affirmative. In answering question (1), the decidable theory for which an essentially undecidable axiomatizable extension will be constructed is the theory of the successor function and a single one-place predicate. It will also be shown that the decidability of this theory is a “best possible” result in the following direction: the theory of either of the common diadic arithmetic functions and a one-place predicate; i.e., of addition and a one-place predicate, or of multiplication and a one-place predicate, is undecidable. Before establishing the main result, it is convenient to give a simple proof that a decidable theory can have an axiomatizable (simply) undecidable extension. This is, of course, an immediate consequence of the main result; but the proof is simple and illustrates the methods that we are going to use in this paper.	decision problem;undecidable problem	Hilary Putnam	1957	J. Symb. Log.		predicate (grammar);undecidable problem;discrete mathematics;arithmetic function;mathematics;decidability;multiplication;successor function	Logic	-7.225874650189813	15.057951387831759	113853
7d4693fdfbd170e4ec8f033995ab66390a5770be	an axiomatization of partial n-place operations	fundamental manipulation;internal operation;partial n-place operation;operation description language;primitive notion;weakly extensional model;partial n-ary;general theory	fundamental manipulation;internal operation;partial n-place operation;operation description language;primitive notion;weakly extensional model;partial n-ary;general theory	axiomatic system	Marco Forti;Furio Honsell;Marina Lenisa	1997	Mathematical Structures in Computer Science	10.1017/S0960129597002272	discrete mathematics;mathematics;algorithm	Theory	-14.35016448320515	12.712076953116389	113875
79c8ad4c841b0e27323ee61b26a2146889354e60	assumption-based planning: generating plans and explanations under incomplete knowledge		Many practical planning problems necessitate the generation of a plan under incomplete information about the state of the world. In this paper we propose the notion of AssumptionBased Planning. Unlike conformant planning, which attempts to find a plan under all possible completions of the initial state, an assumption-based plan supports the assertion of additional assumptions about the state of the world, often resulting in high quality plans where no conformant plan exists. We are interested in this paradigm of planning for two reasons: 1) it captures a compelling form of commonsense planning, and 2) it is of great utility in the generation of explanations, diagnoses, and counter-examples – tasks which share a computational core with planning. We formalize the notion of assumption-based planning, establishing a relationship between assumption-based and conformant planning, and prove properties of such plans. We further provide for the scenario where some assumptions are more preferred than others. Exploiting the correspondence with conformant planning, we propose a means of computing assumption-based plans via a translation to classical planning. Our translation is an extension of the popular approach proposed by Palacios and Geffner and realized in their T0 planner. We have implemented our planner, A0, as a variant of T0 and tested it on a number of expository domains drawn from the International Planning Competition. Our results illustrate the utility of this new planning paradigm.	assertion (software development);automated planning and scheduling;computation;display resolution;dynamical system;experiment;planner;programming paradigm;soundness (interactive proof)	Sammy Davis-Mendelow;Jorge A. Baier;Sheila A. McIlraith	2013			computer science;artificial intelligence	AI	-19.06461654197154	13.755821023208933	113879
0c16cc886fdb08baabd9f9413cf493b9eb49c5aa	levels of implication and type free theories of classifications with approximation operator	type free theory of operations;untyped comprehension principle;partial classifications;frege structures;myhill flagg hierarchy;levels of implication	Abstract#R##N##R##N#We investigate a theory of Frege structures extended by the Myhill-Flagg hierarchy of implications. We study its relation to a property theory with an approximation operator and we give a proof theoretical analysis of the basic system involved. MSC: 03F35, 03D60.	approximation	Andrea Cantini	1992	Math. Log. Q.	10.1002/malq.19920380109	mathematical analysis;discrete mathematics;mathematics;algorithm;algebra	Theory	-8.447342952186105	11.770465182720988	113977
60280adf988b69cdb8390fbd6f6facbc8679b108	induction-recursion and initial algebras	mathematics;publikationer;inductive definition;konferensbidrag;set theory;natural sciences;dependent type theory;ovrig matematik;type theory;artiklar;rapporter;data structure;other mathematics	Induction-recursion is a powerful definition method in intuitionistic type theory. It extends (generalized) inductive definitions and allows us to define all standard sets of Martin-Löf type theory as well as a large collection of commonly occurring inductive data structures. It also includes a variety of universes which are constructive analogues of inaccessibles and other large cardinals below the first Mahlo cardinal. In this article we give a new compact formalization of inductive-recursive definitions by modeling them as initial algebras in slice categories. We give generic formation, introduction, elimination, and equality rules generalizing the usual rules of type theory. Moreover, we prove that the elimination and equality rules are equivalent to the principle of the existence of initial algebras for certain endofunctors. We also show the equivalence of the current formulation with the formulation of induction-recursion as a reflection principle given in [12]. Finally, we discuss two type-theoretic analogues of Mahlo cardinals in set theory: an external Mahlo universe which is defined by induction-recursion and captured by our formalization, and an internal Mahlo universe, which goes beyond inductionrecursion. We show that the external Mahlo universe, and therefore also the theory of inductive-recursive definitions, have proof-theoretical strength of at least Rathjen’s theory KPM.	data structure;induction-recursion;initial algebra;intuitionistic type theory;mathematical induction;recursion;set theory;turing completeness	Peter Dybjer;Anton Setzer	2003	Ann. Pure Appl. Logic	10.1016/S0168-0072(02)00096-9	mathematical analysis;discrete mathematics;topology;data structure;computer science;pure mathematics;mathematics;programming language;type theory;algorithm;set theory;algebra	Logic	-8.381371955202814	13.925505924651855	114016
9ee494bc8cb7cc563b5dbfd4d302a3d0f7740783	der informationsbegriff der alltagssprache - ein wittgensteinsches familienähnlichkeitskonzept	004 informatik;process model;ddc 004	The concept of information in ordinary language is being analysed in detail. It will be shown that information is a family resemblance concept which is not definable in a unified way. As a consequence, an integrated semiotic information processing model is postulated instead of a unified information concept.	information processing;semiotic information theory;semiotics	Jürgen Reischer	2004			process modeling	DB	-12.752247918763679	9.74444107780097	114139
17d8fdf5882acd94ec6a6daa689bbe390dd397bb	on propositional qbf expansions and q-resolution	dominating technique;dpll-based qbf solvers;boolean formula;competitive approach;sat solver;propositional resolution;propositional qbf expansion;theoretical analysis;proof system;propositional satisfiability;phase proof system	Over the years, proof systems for propositional satisfiability (SAT) have been extensively studied. Recently, proof systems for quantified Boolean formulas (QBFs) have also been gaining attention. Q-resolution is a calculus enabling producing proofs from DPLL-based QBF solvers. While DPLL has become a dominating technique for SAT, QBF has been tackled by other complementary and competitive approaches. One of these approaches is based on expanding variables until the formula contains only one type of quantifier; upon which a SAT solver is invoked. This approach motivates the theoretical analysis carried out in this paper. We focus on a two phase proof system, which expands the formula in the first phase and applies propositional resolution in the second. Fragments of this proof system are defined and compared to Q-resolution. This paper follows the line of research on proof systems for propositional and quantified Boolean formulas (QBFs). This research is motivated by complexity theory and more recently by the objective to develop and certify QBF solvers [11,18,8,14]. Proof systems for QBF come in different styles and flavors. Krajı́ček and Pudlák propose a Genzen-style calculus KP for QBF [18]. Büning et al. propose a refutation calculus Q-resolution [8], an extension of propositional resolution. Giunchiglia et al. extend the work of Büning et al. into term resolution for proofs of true formulas [14] . Certain separation results were shown between KP and Q-resolution recently by Egly [12]. While many QBF solvers are based on the DPLL procedure [21,9,23,20,13], other solvers tackle the given formula by expanding out quantifiers until a single quantifier type is left. At that point, this formula is handed to a SAT solver [1,4,19,15]. Experimental results show that expansion-based QBF solvers can outperform DPLL-based solvers on a number of families of practical instances. Also, expansion can be used in QBF preprocessing [6,5]. This practical importance of expansion motivates the study carried out in this paper. We define a proof system ∀Exp+Res, which eliminates universal quantification from the given false formula and then applies propositional resolution to refute the remainder. We show that ∀Exp+Res can p-simulate tree Q-resolution refutations. Conversely, we show that Q-resolution can p-simulate ∀Exp+Res refutations under certain restrictions on the propositional resolution part of the proofs.	boolean satisfiability problem;computational complexity theory;dpll algorithm;newton–cotes formulas;pixel;preprocessor;proof calculus;propositional calculus;quantifier (logic);resolution (logic);simulation;skolem normal form;solver;time complexity;true quantified boolean formula;universal quantification	Mikolás Janota;Joao Marques-Silva	2013	Electronic Colloquium on Computational Complexity (ECCC)	10.1007/978-3-642-39071-5_7	discrete mathematics;mathematics;propositional variable;proof complexity;algorithm	AI	-9.521039320241274	17.23542509573257	114141
53df4ee31b56b4a4adeb9718c9ade7406fe93c78	solving planning problems by partial deduction	calcul propositionnel;sistema complejo;resolucion problema;theorie equationnelle;systeme complexe;complex system;propositional calculus;partial deduction;calculo proposicional;deduccion;equational theory;problem solving;resolution probleme;teoria ecuacional;deduction	"""We develop an abstract partial deduction method capable of solving planning problems in the Fluent Calculus. To this end, we extend \classical"""" partial deduction to accommodate both, equational theories and regular type information. We show that our new method is actually complete for conjunctive planning problems in the propositional Fluent Calculus. Furthermore, we believe that our approach can also be used for more complex systems, e.g., in cases where completeness can not be guaranteed due to general undecidability."""	complex systems;fluent calculus;natural deduction;theory;undecidable problem	Helko Lehmann;Michael Leuschel	2000		10.1007/3-540-44404-1_29	complex systems;computer science;calculus;mathematics;linguistics;propositional calculus;sequent calculus;algorithm	AI	-16.152746319177965	15.255802477336568	114162
e78662ec5e2f515a23bf2a10a46cb96cfe367284	ontological realism and sentential form		The standard argument for the existence of distinctively mathematical objects like numbers has two main premises: (i) some mathematical claims are true, and (ii) the truth of those claims requires the existence of distinctively mathematical objects. Most nominalists deny (i). Those who deny (ii) typically reject Quine’s criterion of ontological commitment. I target a different assumption in a standard type of semantic argument for (ii). Benacerraf’s semantic argument, for example, relies on the claim that two sentences, one about numbers and the other about cities, have the same grammatical form. He makes this claim on the grounds that the two sentences are superficially similar. I argue that these grounds are not sufficient. Other sentences with the same superficial form appear to have different grammatical forms. I offer two plausible interpretations of Benacerraf’s number sentence that make use of plural quantification. These interpretations appear not to incur ontological commitments to distinctively mathematical objects, even assuming Quine’s criterion. Such interpretations open a new, plural strategy for the mathematical nominalist.	commitment scheme;formal grammar;graham scan;low-energy adaptive clustering hierarchy;quine (computing);salvatore j. stolfo;the superficial	Eileen S. Nutting	2017	Synthese	10.1007/s11229-017-1446-4	artificial intelligence;epistemology;plural;nominalism;mathematics;ontology;plural quantification;ontological commitment;quine;formal grammar;sentence	AI	-12.071169676070244	5.905071218457957	114312
7b04a20cfcda7c7b17cabb901dd222311cc0b60a	methodology for the elaboration of quizzes using propositional logic calculus in an e-learning environment		This paper introduces the use of propositional logic calculus in the elaboration of educational quizzes to assess the level understanding of students in a specific theme of their courses. The technique introduced in this paper goes beyond multiple-choice quizzes. The technique requires several steps like a) to give a phrase, b) to re-order words of the given phrase in order to form a propositional logic formula, c) to make use of background knowledge for performing substitutions, d) to answer questions from one of the person in the team, e) to change synonyms/antonyms (if this is feasible), f) to perform actions in order to give value to both or at least one operand of the logic formula and g) to conclude the final answer of the logic formula (true or false) depending of the logic values of the operands in the logic formula. As a working example, the author shows a quiz for universal history, however, the same technique could be used to assess students in different courses.	propositional calculus	Maria Vargas-Vera	2016	IJKSR	10.4018/IJKSR.2016100106	predicate logic;zeroth-order logic;resolution;description logic;tautology;intuitionistic logic;computer science;artificial intelligence;predicate functor logic;propositional variable;well-formed formula;algorithm;rule of inference;autoepistemic logic;satisfiability	AI	-14.266692288473669	11.672285683876245	114581
6dc09e280282110c080fcbd8e89f89acbc70eeeb	ray on tarski on logical consequence	rey g;truth;necessity;logics;interpretation of;necessite;langage;inconsistance;verite;contre exemple;satisfiability;etchemendy j;property;coleccione;collection;preuve;definition;consequence;quantificateur;criticism;critere;appropriateness;propriete;intuition;modal;adequation;language;tarski a;proof;critique;relation;inconsistency;counter example;constante;interpretation de;logique;criteria;procedure;absence de contre exemple;constant	"""In “Logical consequence: A defense of Tarski” (Journal of Philosophical Logic, vol. 25, 1996, pp. 617–677), Greg Ray defends Tarski""""s account of logical consequence against the criticisms of John Etchemendy. While Ray""""s defense of Tarski is largely successful, his attempt to give a general proof that Tarskian consequence preserves truth fails. Analysis of this failure shows that de facto truth preservation is a very weak criterion of adequacy for a theory of logical consequence and should be replaced by a stronger absence-of-counterexamples criterion. It is argued that the latter criterion reflects the modal character of our intuitive concept of logical consequence, and it is shown that Tarskian consequence can be proved to satisfy this criterion for certain choices of logical constants. Finally, an apparent inconsistency in Ray""""s interpretation of Tarski""""s position on the modal status of the consequence relation is noted."""		William H. Hanson	1999	J. Philosophical Logic	10.1023/A:1004649130370	criticism;non-classical logic;procedure;modal;collection;logical consequence;definition;philosophy;epistemology;relation;counterexample;intuition;proof;mathematics;linguistics;language;property;algorithm;satisfiability	Logic	-12.496360316983026	4.900963446818868	114607
553cd59d1532543916123ec7f7c3c8da89a66dca	computing dialectical trees efficiently in possibilistic defeasible logic programming	argumentacion;argumentation;incertidumbre;uncertainty;search space;logique floue;circonscription;interrogation base donnee;interrogacion base datos;logica difusa;logical programming;circumscription;fuzzy logic;programming theory;logic programming;defeasible logic programming;programmation logique;langage programmation logique;inferencia;defeasible argumentation;possibility theory;theorie programmation;incertitude;logic programs;logic programming languages;programacion logica;database query;teoria posibilidad;inference;circonscripcion;theorie possibilite;dialectical reasoning	Possibilistic Defeasible Logic Programming (P-DeLP) is a logic programming language which combines features from argumentation theory and logic programming, incorporating as well the treatment of possibilistic uncertainty and fuzzy knowledge at object-language level. Solving a P-DeLP query Q accounts for performing an exhaustive analysis of arguments and defeaters for Q, resulting in a so-called dialectical tree, usually computed in a depth-first fashion. Computing dialectical trees efficiently in P-DeLP is an important issue, as some dialectical trees may be computationally more expensive than others which lead to equivalent results. In this paper we explore different aspects concerning how to speed up dialectical inference in P-DeLP. We introduce definitions which allow to characterize dialectical trees constructively rather than declaratively, identifying relevant features for pruning the associated search space. The resulting approach can be easily generalized to be applied in other argumentation frameworks based in logic programming.	argumentation framework;declarative programming;defeasible logic;defeasible reasoning;depth-first search;logic programming;object language;programming language;search algorithm	Carlos Iván Chesñevar;Guillermo Ricardo Simari;Lluis Godo	2005		10.1007/11546207_13	computer science;artificial intelligence;machine learning;mathematics;programming language;logic programming;algorithm	AI	-18.265637612354272	11.25949590230926	114679
725948aeb99bb35f2103f27cfe5f5f78ecc9980a	decision problems for term rewriting systems and recognizable tree languages	satisfiability;term rewrite system;decision problem;decision procedure;rewrite systems;normal form	We study the connections between recognizable tree languages and rewrite systems. We investigate some decision problems. Particularly, let us consider the property (P): a rewrite system S is such that, for every recognizable tree language F, the set of S-normal forms of terms in F is recognizable too. We prove that the property (P) is undecidable. We prove that the existential fragment of the theory of ground term algebras modulo a congruence $$\mathop \leftrightarrow \limits^* E$$ generated by a set E of equations such that there exists a finite, noetherian, confluent rewrite system S satisfying (P) with $$\mathop \leftrightarrow \limits^* S = \mathop \leftrightarrow \limits^* E$$ is undecidable. Nevertheless, we develop a decision procedure for the validity of linear formulas in a fragment of such a theory.	rewriting	Rémi Gilleron	1991		10.1007/BFb0020795	combinatorics;discrete mathematics;computer science;decision problem;mathematics;algorithm;satisfiability	Logic	-8.42609509048826	17.00605064858283	114871
9b61d9decd75aa6ca654c955f16f6cb9d51aab4c	distinguishable entities: definitions and properties		Many studies in natural language processing are concerned with how to generate definite descriptions that evoke a discourse entity already introduced in the context. A solution to this problem has been initially proposed by Dale (1989) in terms of distinguishing descriptions and distinguishable entities. In this paper, we give a formal definition of the terms “distinguishable entity” in non trivial cases and we show that its properties lead us to the definition of a distance between entities. Then, we give a polynomial algorithm to compute distinguishing descriptions.	algorithm;entity;phylogenetics;polynomial;studies in natural language processing	Monique Rolbert;Pascal Préa	2009			algorithm	AI	-8.523164366997436	7.23672742832048	114967
6d11c4b64888b7bdfd699824c0a16d6df0b1c58f	categorical abstract algebraic logic: leibniz equality and homomorphism theorems	abstract algebraic logic;first order;ciencias basicas y experimentales;matematicas;grupo a;universal algebra;first order logic	The study of structure systems, an abstraction of the concept of firstorder structures, is continued. Structure systems have algebraic systems rather than universal algebras as their algebraic reducts. Moreover, their relational component consists of a collection of relation systems on the underlying functors rather than simply a system of relations on a single set. Congruence systems of structure systems are introduced and the Leibniz congruence system of a structure system is defined. Analogs of the Homomorphism, the Second Isomorphism and the Correspondence Theorems of Universal Algebra are provided in this more abstract context. These results generalize corresponding results of Elgueta for equality-free first-order logic. Finally, a version of Gödel’s Completeness Theorem is provided with reference to structure systems.	algebraic equation;congruence of squares;first-order logic;first-order predicate;gödel;linear algebra;zeller's congruence	George Voutsadakis	2006	Applied Categorical Structures	10.1007/s10485-006-9030-y	homomorphism;algebraic logic;discrete mathematics;topology;algebraic sentence;congruence relation;first-order logic;dimension of an algebraic variety;mathematics;signature;isomorphism theorem;abstract algebraic logic;algebra	Logic	-8.344537942835288	13.620730712688152	115196
97f3235a170f05c9f2c8941819d5f6fe3c90a676	syntactic characterizations of closure under pullbacks and of locally polypresentable categories	domain theory;abstract data type	Abstract   We give syntactic characterizations of   1.   (1) the (finitary) theories whose categories of models are closed under the formation of pullbacks, and of   2.   (2) (its categorical counterpart) the locally ω-polypresentable categories.   #N# A somewhat typical example is the category of algebraically closed fields. Case (1) is proved by classical model-theoretic methods; it solves a problem raised by H. Volger (with motivations from the theory of abstract data types). The solution of case (2) is in the spirit of the ones for the locally ω-presentable and ω-multipresentable cases found by M. Coste and P.T. Johnstone respectively. The problem (2) was raised in the context of Domain Theory by F. Lamarche.		Michel Hébert	1997	Ann. Pure Appl. Logic	10.1016/S0168-0072(96)00044-9	combinatorics;mathematical analysis;discrete mathematics;topology;domain theory;mathematics;programming language;abstract data type;algorithm;algebra	Logic	-7.169561848122697	14.204753410074645	115300
94d2698cff3fdfa08b49d02ed14121842805a889	a sahlqvist theorem for relevant modal logics	modal logic	Kripke-completeness of every classical modal logic with Sahlqvist formulas is one of the basic general results on completeness of classical modal logics. This paper shows a Sahlqvist theorem for modal logic over the relevant logic Bin terms of Routley-Meyer semantics. It is shown that usual Sahlqvist theorem for classical modal logics can be obtained as a special case of our theorem.	modal logic	Takahiro Seki	2003	Studia Logica	10.1023/A:1023335229747	modal logic;dynamic logic;s5;normal modal logic;modal μ-calculus;discrete mathematics;philosophy;epistemology;computer science;axiom s5;mathematics;kripke semantics;accessibility relation;multimodal logic;algorithm	Logic	-11.818849636269032	12.600411501713902	115307
138966dad8adce9200e8fcb323fe805d3c11a479	borel structures and borel theories		We show that there is a complete, consistent Borel theory which has no “Borel model” in the following strong sense: There is no structure satisfying the theory for which the elements of the structure are equivalence classes under some Borel equivalence relation and the interpretations of the relations and function symbols are Borel in the natural sense. We also investigate Borel isomorphisms between Borel structures.	graph isomorphism;theory;turing completeness	Greg Hjorth;André Nies	2011	J. Symb. Log.		riesz–markov–kakutani representation theorem;borel set;combinatorics;discrete mathematics;borel's lemma;borel equivalence relation;baire measure;borel measure;borel hierarchy;mathematics;determinacy;algebra;satisfiability	Logic	-7.470561778086853	13.539961880186157	115401
9e2e138fed558013292d0478ed112f0fe5f6e2af	simpler and faster algorithm for checking the dynamic consistency of conditional simple temporal networks		Recent work on Conditional Simple Temporal Networks (CSTNs) has focused on checking the dynamic consistency (DC) property assuming that execution strategies can react instantaneously to observations. Three alternative semantics—IR-DC, 0-DC, and π-DC—have been presented. The most practical DC-checking algorithm for CSTNs has only been analyzed with respect to the IR-DC semantics, while the 0-DC semantics was shown to have a serious flaw that the π-DC semantics fixed. Whether the IR-DC semantics had the same flaw and, if so, what the consequences would be for the DC-checking algorithm remained open questions. This paper (1) shows that the IR-DC semantics is also flawed; (2) shows that one of the constraintpropagation rules from the IR-DC-checking algorithm is not sound with respect to the IR-DC semantics; (3) presents a simpler algorithm, called the π-DC-checking algorithm; (4) proves that it is sound and complete with respect to the π-DC semantics; and (5) empirically evaluates the new algorithm.		Luke Hunsberger;Roberto Posenato	2018		10.24963/ijcai.2018/184	knowledge representation and reasoning;artificial intelligence;machine learning;computer science;constraint satisfaction	PL	-17.786060007411667	8.243628397685722	115510
2c456279f8b719e50ce4984ee4b906057ce60c7c	a new constructive logic: classical logic	cambridge university press;classical logic		intuitionistic logic	Jean-Yves Girard	1991	Mathematical Structures in Computer Science	10.1017/S0960129500001328	dynamic logic;classical logic;paraconsistent logic;law of thought;computer science;artificial intelligence;computational logic;logic;term logic;algorithm;cognitive science;philosophy of logic	Logic	-12.896314647954213	10.425411794149229	115622
262bae868393709d38ece11d529547a15b0b32a9	two views of the logic of plurals and a reduction of one to the other	the is one of relation;classes as many;the among relation;plurals;pluralities	There are different views of the logic of plurals that are now in circulation, two of which we will compare in this paper. One of these is based on a two-place relation of being among, as in ‘Peter is among the juveniles arrested’. This approach seems to be the one that is discussed the most in philosophical journals today. The other is based on Bertrand Russell’s early notion of a class as many, by which is meant not a class as one, i.e., as a single entity, but merely a plurality of things. It was this notion that Russell used to explain plurals in his 1903 Principles of Mathematics; and it was this notion that I was able to develop as a consistent system that contains not only a logic of plurals but also a logic of mass nouns as well. We compare these two logics here and then show that the logic of the Among relation is reducible to the logic of classes as many.	bertrand (programming language)	Nino B. Cocchiarella	2015	Studia Logica	10.1007/s11225-014-9591-y	arithmetic;mathematics;linguistics;algorithm	Logic	-11.29664952075043	6.707481406206897	115687
08120119a5cdb3e334e18644790d1ee169341db5	partially commutative linear logic and lambek caculus with product: natural deduction, normalisation, subformula property	intuitionistic noncommutative logic;normalisation;logic;lambek calculus	This article defines and studies a natural deduction system for partially commutative intuitionistic multiplicative linear logic, that is a combination of intuitionistic commutative linear logic with the Lambek calculus, which is noncommutative, and was first introduced as a sequent calculus by de Groote. In this logic, the hypotheses are endowed with a series-parallel partial order: the parallel composition corresponds to the commutative product, while the series composition corresponds to the noncommutative product. The relation between the two products is that a rule, called entropy, allows us to replace a series-parallel order with a sub series-parallel order — this rule (already studied by Retoré) strictly extends the entropy rule initially introduced by de Groote. A particular subsystem emerges when hypotheses are totally ordered: this is Lambek calculus with product, and when orders are empty it is is multiplicative linear logic. So far only the sequent calculus and cut-elimination have been properly studied. In this article, we define natural deduction with product elimination rules as Abramsky proposed long ago. We then give a brief illustration of its application to computational linguistics and prove normalisation, firstly for the Lambek calculus with product and then for the full partially ordered calculus. We show that normal proofs enjoy the subformula property, thus yielding another proof of decidability of these calculi. The authors wish thank Jiří Maršík (LORIA, Nancy) for his prompt and efficient rereading. Vol. 1 No. 1 2014 IFCoLog Journal of Logics and their Applications	categorial grammar;computational linguistics;entropy (information theory);formal system;linear logic;natural deduction;parallel coordinates;rule 184;sequent calculus;series-parallel graph;well-formed formula	Maxime Amblard;Christian Retoré	2014	FLAP		discrete mathematics;cut-elimination theorem;many-valued logic;mathematics;proof calculus;minimal logic;noncommutative logic;curry–howard correspondence;natural deduction;algorithm;rule of inference	Logic	-9.530878082384936	12.149085322063392	115702
d51965d5ba4c6d143bb78ae13062ef033d3a5f1e	computable kripke models and intermediate logics	modele kripke;complexite calcul;logique mathematique;logica matematica;mathematical logic;kripke model;intuitionistic logic;computational complexity;logique intuitionniste;classical logic;technical report;modelo kripke;logica intuicionista;model theory	The development of computable (equivalently, recursive) function theory made it possible to investigate the computational aspects of many mathematical notions and constructions within the context of classical mathematics. In the 1930s Kleene and Church investigated computability on the integers and in well ordered sets and invented the notion of recursive ordinal. In the 1950s Fro elich and Shepherdson [9] investigated computability in fields. In the 1960s Rabin [18] and Malcev[12] initiated the study of computable algebra and computable model theory. In the 1970s, Ershov's school in Russia and Nerode's school in the United States began the systematic use of the priority methods from computability theory to determine under what conditions classical constructions in model theory or algebra can be made computable. Since then, theories of computable algebraic systems and Article No. IC982704	complete (complexity);computability theory;computable function;database schema;intuitionistic logic;kripke semantics;linear algebra;linear logic;ordinal data;recursion;recursive ordinal	Hajime Ishihara;Bakhadyr Khoussainov;Anil Nerode	1998	Inf. Comput.	10.1006/inco.1998.2704	modal logic;predicate logic;dynamic logic;normal modal logic;mathematical logic;discrete mathematics;classical logic;kripke structure;higher-order logic;paraconsistent logic;many-valued logic;intuitionistic logic;computer science;computability logic;intermediate logic;technical report;axiom s5;mathematics;minimal logic;kripke semantics;computational complexity theory;logic;substructural logic;multimodal logic;second-order logic;algorithm;model theory;algebra	Theory	-10.22293043715751	9.869509990001943	115798
0a4c22c06a6218a5243c2ec12938f6b2aa2717d8	generalized modus tollens with linguistic modifiers for inverse approximate reasoning	linguistic truth value domain;inverse approximate reasoning;hedge algebra;generalized modus tollens inference rules;linguistic many valued logic	Based on our previous researchs about generalized modus ponens (GMP) with linguistic modifiers for If ... Then rules, this paper proposes new generalized modus tollens (GMT) inference rules with linguistic modifiers in linguistic many–valued logic framework with using hedge moving rules for inverse approximate reasoning.	approximation algorithm;gnu multiple precision arithmetic library;natural deduction	Le Anh Phuong;Tran Dinh Khang	2014	Int. J. Comput. Intell. Syst.	10.1080/18756891.2013.870766	discrete mathematics;modus tollens;modus ponendo tollens;machine learning;mathematics;psychology of reasoning;algorithm	AI	-13.218390854429156	11.188017101121897	115805
aa5bde404baa2d0f593492b83832034644bdc5b5	static bilog: a unifying language for spatial structures	separation logic;spatial structure;bigraphs;separation;tensor product;spatial logics;context logic;monoidal category;spatial logic;meta model	Aiming at a unified view of the logics describing spatial structures, we introduce a general framework, BiLog, whose formulae characterise monoidal categories. As a first instance of the framework we consider bigraphs, which are emerging as a an interesting (meta-)model for spatial structures and distributed calculi. Since bigraphs are built orthogonally on two structures, a hierarchical place graph for locations and a link (hyper-)graph for connections, we obtain a logic that is a natural composition of other two instances of BiLog: a Place Graph Logic and a Link Graph Logic. We prove that these instances generalise the spatial logics for trees, for graphs and for tree contexts. We also explore the concepts of separation and sharing in these logics. We note that both the operator ∗ of Separation Logic and the operator | of spatial logics do not completely separate the underlying structures. These two different forms of separation can be naturally derived as instances of BiLog by using the complete separation induced by the tensor product of monoidal categories along with some form of sharing.	bigraph;separation logic	Giovanni Conforti;Damiano Macedonio;Vladimiro Sassone	2007	Fundam. Inform.		monoidal t-norm logic;tensor product;t-norm fuzzy logics;metamodeling;combinatorics;discrete mathematics;separation logic;computer science;mathematics;programming language;algorithm	PL	-15.9817425998725	10.659984999085069	115836
8993df966b5b05c1e56aad8ca80f322eb7a987f3	open mapping theorem		The notation and terminology used here are introduced in the following papers: [13], [14], [3], [9], [2], [7], [1], [4], [5], [10], [6], [12], [11], and [15]. The following proposition is true (1) For all real numbers x, y such that 0 ≤ x < y there exists a real number s0 such that 0 < s0 and x < y 1+s0 < y. The scheme RecExD3 deals with a non empty set A, an element B of A, an element C of A, and a 4-ary predicate P, and states that: There exists a function f from N into A such that f(0) = B and f(1) = C and for every element n of N holds P[n, f(n), f(n + 1), f(n+ 2)] provided the parameters meet the following requirement: • For every element n of N and for all elements x, y of A there exists an element z of A such that P[n, x, y, z]. In the sequel X, Y denote real normed spaces. The following propositions are true: (2) For every point y1 of X and for every real number r holds Ball(y1, r) = y1 +Ball(0X , r). (3) For every real number r and for every real number a such that 0 < a holds Ball(0X , a · r) = a · Ball(0X , r).		Hideki Sakurai;Hisayoshi Kunimune;Yasunari Shidama	2008	Formalized Mathematics	10.2478/v10037-008-0048-5	open mapping theorem;closed graph theorem;brouwer fixed-point theorem;open mapping theorem;bounded inverse theorem	Theory	-6.449153951716913	13.232963982127025	115948
8cae7ce1697b52e808cde7011020dfe1c35ea408	on the mathematical properties of linguistic theories	context-free grammar;mathematical property;tree adjunct;recognition complexity;metatheoretical finding;meta-theoretical result;stratificational grammar;linguistic theory;tree adjunct grammar;generalized phrase structure;lexical functional grammar;generative capacity;syntactic theory;generalized phrase structure grammar;transformational grammar;context free grammar	The development of new formalisms im which to express linguistic theories has been accompanied, at [east s ince Chomsky and Miller 's ear ly work on con tex t free languages , by the s tudy of t h e i r n e t s t h e o r y . In part ioular, n u m e r o u s results on the decidabtt i ty, generative capaci ty, and more r ecen t ly the co~aplexity of recognit ion of these fo rmal i sms have been pub l i shed (and rumoured!). Strangely enough, much less attention seems to have been devoted to a discussion of the significance of these mathematical results. As a prelimtnary to the panel on formal properties which will address the s ignif icance issUe, i t s e e m e d appropriate to survey the existing results. Such is the modest gee[ of this paper.	emoticon;naruto shippuden: clash of ninja revolution 3;theory	C. Raymond Perrault	1983	Computational Linguistics		natural language processing;subcategorization;context-sensitive grammar;id/lp grammar;tree-adjoining grammar;generative grammar;indexed grammar;l-attributed grammar;link grammar;phrase structure grammar;computer science;phrase structure rules;extended affix grammar;linguistics;definite clause grammar;context-free grammar;programming language;generalized phrase structure grammar;stochastic context-free grammar;lexical functional grammar;mildly context-sensitive grammar formalism;combinatory categorial grammar;immediate constituent analysis;c-command	Vision	-9.508395433852392	8.283829780782195	116024
55ce6c666f6817fd07090b02509b4ef57374e2d7	acceptable contradictions: pragmatics or semantics? a reply to cobreros et al	pragmatics;contradiction;filosofi;conjunction;fuzzy logic;vagueness;natural language;philosophy	Naive speakers find some logical contradictions acceptable, specifically borderline contradictions involving vague predicates such as Joe is and isn’t tall. In a recent paper, Cobreros et al. (J Philos Logic, 2012) suggest a pragmatic account of the acceptability of borderline contradictions. We show, however, that the pragmatic account predicts the wrong truth conditions for some examples with disjunction. As a remedy, we propose a semantic analysis instead. The analysis is close to a variant of fuzzy logic, but conjunction and disjunction are interpreted as intensional operators.	fuzzy logic;intensional logic;joe's own editor;natural language;project xanadu;semantic analysis (compilers);vagueness	Sam Alxatib;Peter Pagin;Uli Sauerland	2013	J. Philosophical Logic	10.1007/s10992-012-9241-7	fuzzy logic;conjunction;philosophy;epistemology;artificial intelligence;mathematics;linguistics;natural language;algorithm;pragmatics	AI	-13.953262138388263	5.263035294657745	116027
d7b214437d8034d487584de73efa7399d783c5ee	on the relation between concurrent separation logic and concurrent kleene algebra	separation logic;concurrency;compositionality;kleene algebra	Abstract We investigate the connection between a general form of Concurrent Separation Logic (CSL), a logic for modular reasoning about concurrent programs, and Concurrent Kleene Algebra (CKA), which provides an axiomatic approach to models of concurrency. We show how the proof theory of a general form of CSL can be embedded in a variation on the notion of CKA. Our embedding, however, induces models of a particular form based on predicate transformers. We also investigate the relation between concrete models of CSL based on interleaving of traces and CKA. We find, curiously, that the validity of CSLu0027s Concurrency proof rule in these models does not follow from or otherwise utilize CKA structure, but that a CKA structure exists nonetheless which can give a different model of the CSL proof rules. Our results can be read as providing a completeness theorem showing a sense in which nothing is missing as far as proof power goes in (a variant on) the notion of CKA, while at the same time showing that CKAs impose constraints that rule out some natural CSL models.	academy;boolean algebra;bunched logic;cartesian closed category;concurrency (computer science);diagram;expectation propagation;hoare logic;kleene algebra;logical connective;microsoft research;propositional calculus;residuated lattice;separation logic;set theory;simply typed lambda calculus;tracing (software)	Peter W. O'Hearn;Rasmus Lerchedahl Petersen;Jules Villard;Akbar Hussain	2015	J. Log. Algebr. Meth. Program.	10.1016/j.jlamp.2014.08.002	combinatorics;discrete mathematics;separation logic;concurrency;computer science;kleene algebra;mathematics;programming language;algorithm;principle of compositionality	Logic	-11.966110536378354	16.884065914191684	116388
b644b2d4a847e94422082607fb6cca05a90deb25	propositional dynamic logic with program quantifiers	second order;qpdl;μpdl;context free;expressive power;propositional dynamic logic with program quantification;propositional dynamic logic	We consider an extension QPDL of Segerberg-Pratt’s Propositional Dynamic Logic PDL, with program quantification, and study its expressive power and complexity. A mild form of program quantification is obtained in the calculus μPDL, extending PDL with recursive procedures (i.e. context free programs), which is known to be Π 1 -complete. The unrestricted program quantification we consider leads to complexity equivalent to that of second-order logic (and second-order arithmetic), i.e. outside the analytical hierarchy. However, the deterministic variant of QPDL has complexity Π 1 .	analytical hierarchy;dynamic logic (modal logic);knuth–morris–pratt algorithm;perl data language (pdl);recursion	Daniel Leivant	2008	Electr. Notes Theor. Comput. Sci.	10.1016/j.entcs.2008.10.014	dynamic logic;zeroth-order logic;modal μ-calculus;discrete mathematics;classical logic;resolution;description logic;many-valued logic;universal quantification;intuitionistic logic;computer science;intermediate logic;theoretical computer science;first-order logic;mathematics;predicate variable;propositional variable;well-formed formula;programming language;expressive power;second-order logic;algorithm;rule of inference;autoepistemic logic	Logic	-11.768821146330776	14.694731015539816	116426
d47eb179aa1bca14b67a740f0978647959a3b8f4	first-order spectra with one binary predicate	spectrum;satisfiability;first order	The spectrum, Sp(ϕ), of a sentence ϕ is the set of cardinalities of finite structures which satisfy ϕ. We prove that any set of integers which is in Func 1 ∞ i.e. in the class of spectra of first-order sentences of type containing only unary function symbols is also in BIN1 i.e. in the class of spectra of first-order sentences of type involving only a single binary relation.	first-order predicate;rca spectra 70	Arnaud Durand;Solomampionona Ranaivoson	1994		10.1007/BFb0022255	spectrum;combinatorics;discrete mathematics;computer science;first-order logic;mathematics;programming language;algorithm;satisfiability	Crypto	-7.114496128404547	15.41562067093071	116499
fdedfb9639faff6cd3d41d7d23c8e6797ad0219d	generalising bayes' theorem in subjective logic	uncertainty;bayes methods;calculus;probability distribution;cognition;probabilistic logic	Bayes' theorem provides a method of inverting conditional probabilities in probability calculus and statistics. Subjective logic generalises probability calculus whereby arguments are represented as opinions that can contain degrees of uncertainty. This paper presents Bayes' theorem in the formalism of subjective logic.	semantics (computer science)	Audun Jøsang	2016	2016 IEEE International Conference on Multisensor Fusion and Integration for Intelligent Systems (MFI)	10.1109/MFI.2016.7849531	discrete mathematics;bayes' rule;naive bayes classifier;bayesian programming;inductive probability;mathematics;proof calculus;situation calculus;bayes' theorem;bayesian inference;second-order logic;statistics;subjective logic	Robotics	-14.243036871618946	6.8031751735288015	116810
6d8325e949a4dfb14b56c4ddbbd80aeb7de033c2	proof by computation in the coq system	teoria demonstracion;theorie type;theorie preuve;proof theory;logic;coq;bruijn criterion;critere bruijn;type theory;article in monograph or in proceedings;correctness proof;logique;logica	This paper presents a method to automati ally prove statements from primitive re ursive arithmeti . The method repla es logi al formulas by boolean expressions. A orre tness proof is onstru ted, whi h states that the original formula is derivable, if and only if the boolean expression equals true. Be ause the boolean expression redu es to true, the onversion rule yields a trivial proof of the equality. By ombining this proof with the orre tness proof, we get a proof for the original statement.	boolean expression;computation;coq (software)	Martijn Oostdijk;Herman Geuvers	2002	Theor. Comput. Sci.	10.1016/S0304-3975(00)00354-6	correctness;direct proof;proof by contradiction;combinatorics;combinatorial proof;discrete mathematics;computer-assisted proof;probabilistically checkable proof;computer science;analytic proof;proof theory;mathematics;constructive proof;furstenberg's proof of the infinitude of primes;mathematical proof;programming language;structural proof theory;logic;type theory;proof complexity;algorithm;zero-knowledge proof;statistical proof;algebra	Logic	-9.938626961230135	15.95537207798382	116863
bd02b4d49c6a1c0d165a65b6d5eb175df9adc1c5	the effects of modalities in separation logics (extended abstract)		Like modal logic, temporal logic, or description logic, separation logic has become a popular class of logical formalisms in computer science, conceived as assertion languages for Hoare-style proof systems with the goal to perform automatic program analysis. We present similarities with modal and temporal logics, and we present landmark results about decidability, complexity and expressive power.	assertion (software development);computer science;description logic;hoare logic;modal logic;program analysis;separation logic;temporal logic	Stéphane Demri;Morgan Deters	2014			modalities;discrete mathematics;theoretical computer science;computer science	Logic	-15.303449535564404	13.986480941979854	116942
8ca22f2167a2b82535d4ea4d84cfe45929844751	typed normal form bisimulation	recursive types;game semantics;continuation passing style;higher order;fixed point;normal form	Normal form bisimulation is a powerful theory of program equivalence, originally developed to characterize Lévy-Longo tree equivalence and Boehm tree equivalence. It has been adapted to a range of untyped, higher-order calculi, but types have presented a difficulty. In this paper, we present an account of normal form bisimulation for types, including recursive types. We develop our theory for a continuation-passing style calculus, Jump-With-Argument (JWA), where normal form bisimilarity takes a very simple form. We give a novel congruence proof, based on insights from game semantics. A notable feature is the seamless treatment of eta-expansion. We demonstrate the normal form bisimulation proof principle by using it to establish a syntactic minimal invariance result and the uniqueness of the fixed point operator at each type.	beta normal form;bisimulation;continuation;continuation-passing style;fixed point (mathematics);fixed-point combinator;game semantics;lambda calculus;recursion;seamless3d;turing completeness;zeller's congruence	Søren B. Lassen;Paul Blain Levy	2007		10.1007/978-3-540-74915-8_23	conjunctive normal form;combinatorics;discrete mathematics;higher-order logic;computer science;game semantics;continuation-passing style;mathematics;fixed point;programming language;algorithm	PL	-12.358811567533962	17.877570302449477	117010
4fc637c0958b48c8bd0578a02569e9ad327348f0	many-valued logics 2 - automated reasoning and practical applications	automated reasoning;many valued logic	Following your need to always fulfil the inspiration to obtain everybody is now simple. Connecting to the internet is one of the short cuts to do. There are so many sources that offer and connect us to other world condition. As one of the products to see in internet, this website becomes a very available place to look for countless many valued logics 2 automated reasoning and practical applications 1st edition sources. Yeah, sources about the books from countries in the world are provided.	automated reasoning;book;internet	Leonard Bolc;Piotr Borowik	2003			knowledge representation and reasoning;opportunistic reasoning;discrete mathematics;theoretical computer science;non-monotonic logic;automated proof checking;model-based reasoning;reasoning system;automated reasoning;deductive reasoning;algorithm	Theory	-11.950746842529828	9.663363202810752	117149
8f46524b783f91cac1a0719a40e742a2dc89199f	the ultimate undecidability result for the halpern-shoham logic	undecidable logic interval temporal logic;radiation detectors automata labeling computer science time measurement pathology reactive power;computability;interval temporal logic;satisfiability;satisfiability problem halpern shoham logic modal logic decidability;modal logic;undecidable logic;decidability computability;decidability	The Halpern-Shoham logic is a modal logic of time intervals. Some effort has been put in last ten years to classify fragments of this beautiful logic with respect to decidability of its satisfiability problem. We complete this classification by showing - what we believe is quite an unexpected result - that the logic of subintervals, the fragment of the Halpern -- Shoham logic where only the operator ``during'', or D, is allowed, is undecidable over discrete structures. This is surprising as this, apparently very simple, logic is decidable over dense orders and its reflexive variant is known to be decidable over discrete structures. Our result subsumes a lot of previous negative results for the discrete case, like the undecidability for ABE, BD, ADB, and so on [2], [5].	apple desktop bus;blu-ray;boolean satisfiability problem;discrete mathematics;fuzzy logic;modal logic;undecidable problem	Jerzy Marcinkowski;Jakub Michaliszyn	2011	2011 IEEE 26th Annual Symposium on Logic in Computer Science	10.1109/LICS.2011.21	modal logic;predicate logic;dynamic logic;zeroth-order logic;decidability;modal μ-calculus;discrete mathematics;linear temporal logic;description logic;higher-order logic;many-valued logic;interval temporal logic;computer science;computability logic;intermediate logic;predicate functor logic;mathematics;computability;substructural logic;multimodal logic;algorithm;satisfiability	Logic	-12.483944990830743	14.2694527634652	117335
33be7fa6349e1b6f4f6a6bbb93c359704382c649	intuitionistic ancestral logic as a dependently typed abstract programming language		It is well-known that concepts and methods of logic (more specifically constructive logic) occupy a central place in computer science. While it is quite common to identify ‘logic’ with ‘first-order logic’ (FOL), a careful examination of the various applications of logic in computer science reveals that FOL is insufficient for most of them, and that its most crucial shortcoming is its inability to provide inductive definitions in general, and the notion of the transitive closure in particular. The minimal logic that can serve for this goal is ancestral logic (AL). In this paper we define a constructive version of AL, pure intuitionistic ancestral logic (iAL), extending pure intuitionistic first-order logic (iFOL). This logic is a dependently typed abstract programming language with computational functionality beyond iFOL, given by its realizer for the transitive closure operator TC, which corresponds to recursive programs. We derive this operator from the natural type theoretic definition of TC using intersection type. We show that provable formulas in iAL are uniformly realizable, thus iAL is sound with respect to constructive type theory. We further outline how iAL can serve as a natural framework for reasoning about programs.	ca-realizer;dependent type;first-order logic;first-order predicate;intuitionistic logic;intuitionistic type theory;logic in computer science;programming language;provable security;recursion;transitive closure;type system	Liron Cohen;Robert L. Constable	2015		10.1007/978-3-662-47709-0_2	predicate logic;dynamic logic;zeroth-order logic;linear logic;discrete mathematics;description logic;higher-order logic;horn clause;many-valued logic;intuitionistic logic;computer science;intermediate logic;bunched logic;predicate functor logic;mathematics;minimal logic;programming language;substructural logic;multimodal logic;algorithm;autoepistemic logic	Logic	-15.094143944956242	18.070927538251496	117397
12a38326f0ec62418e1bba1080204576726b0b60	meager and replete failures of relative completeness	lenguaje programacion;complexite;programming language;plenitud;logique hoare;logique mathematique;complejidad;lambda calculus;logica matematica;complexity;recursividad;mathematical logic;recursivite;control structure;polymorphism;langage programmation;lambda calculo;completeness;completude;lambda calcul;recursivity	The nature of programming languages that fail to have a relatively complete proof formalism is discussed. First, it is shown that such failures may be due to the meagerness of the programming language, rather than to the presence of complex control structures as in the cases studied so far. The failure of relative completeness is then derived for two languages with a rich control structure, using simple simulations of general recursive functions by procedure call mechanisms.	control flow;programming language;recursion;semantics (computer science);simulation;subroutine;μ-recursive function	Daniel Leivant;Tim Fernando	1988	J. ACM	10.1145/48014.63139	polymorphism;recursion;mathematical logic;discrete mathematics;complexity;completeness;computer science;lambda calculus;mathematics;programming language;control flow;algorithm	PL	-13.534953829689577	17.812550246776116	117412
3ad04657eb3da0e73cfea81ce72f7d3b7c24c3e9	two-variable logic over countable linear orderings	004;circ monoids countable linear orderings fo 2	We study the class of languages of finitely-labelled countable linear orderings definable in twovariable first-order logic. We give a number of characterisations, in particular an algebraic one in terms of circle monoids, using equations. This generalises the corresponding characterisation, namely variety DA, over finite words to the countable case. A corollary is that the membership in this class is decidable: for instance given an MSO formula it is possible to check if there is an equivalent two-variable logic formula over countable linear orderings. In addition, we prove that the satisfiability problems for two-variable logic over arbitrary, countable, and scattered linear orderings are Nexptime-complete. 1998 ACM Subject Classification F.4.3 Formal Languages	first-order logic;first-order predicate;linear algebra;two-variable logic	Amaldev Manuel;A. V. Sreejith	2016		10.4230/LIPIcs.MFCS.2016.66	combinatorics;discrete mathematics;computer science;mathematics;algebra	Logic	-6.267513150739289	16.720508285043387	117426
4b6a300e0614a199e1411a0e1ea3d0210b6fcfde	reasoning about time-dependent multi-agents: foundations of theorem proving and model checking	time dependent multi agent;agents indexed computation tree logic;sequent calculus;model checking;completeness theorem;agents indexed linear time temporal logic	Firstly, an extension of linear-time temporal logic (LTL), called an agents-indexed linear-time temporal logic (ALTL), is introduced as a Gentzen-type sequent calculus. ALTL is intended to appropriately express reasoning about time-dependent multi-agents within a proof system. The cut-elimination and completeness theorems for ALTL are shown. Secondly, an extension of computation tree logic (CTL), called an agents-indexed computation tree logic (ACTL), is introduced as a Kripke-type semantics. ACTL is intended to appropriately formalize reasoning about time-dependent multi-agents within an executable temporal logic by model checking. The model-checking, validity and satisfiability problems for ACTL are shown to be decidable.	automated theorem proving;model checking	Norihiro Kamide	2012	Trans. Computational Collective Intelligence	10.1007/978-3-642-29356-6_9	dynamic logic;discrete mathematics;linear temporal logic;description logic;interval temporal logic;computation tree logic;mathematics;algorithm;temporal logic of actions	Logic	-16.247035786108583	12.813797754168382	117471
83ad98f75fcfebda32beb46c227690d0fae1be79	indicative conditionals, restricted quantification, and naive truth		This paper extends Kripkeu0027s theory of truth to a language with a variably strict conditional operator, of the kind that Stalnaker and others have used to represent ordinary indicative conditionals of English. It then shows how to combine this with a di erent and independently motivated conditional operator, to get a substantial logic of restricted quanti cation within naive		Hartry Field	2016	Rew. Symb. Logic	10.1017/S1755020315000301	artificial intelligence;mathematics;algorithm	Logic	-12.887335514799533	7.595601643450971	117517
f8914575fd582f9aff60069ca96cda45896553ae	a too-clever ranking method		behind it, see Anderson and Perlis (2005). 3. In the case of logic-based domains, an anomaly often takes the form of a direct contradiction, E and ¬E. This is the case, for instance, not only in the nonmonotonic reasoning domain, but also in the natural language domain discussed in this article. For these, we employ active logic (Elgot-Drapkin and Perlis 2006), a time-sensitive inference engine specifically designed to allow an automated agent to reason in real time about its own ongoing reasoning, noting direct contradictions rather than inadvertently using them to derive all sentences.	anomaly detection;inference engine;natural language;non-monotonic logic;web crawler	Tim Oates	2008	AI Magazine		ranking svm	AI	-15.897222965811013	5.317006591742309	117546
77a16610eb92b02e4137f5a7ff5e5f1f8d468265	efficient solving of quantified inequality constraints over the real numbers	inequality constraint;numerical constraints;numerical analysis;first order;decision procedure;constraint programming;constraint solving;logic in computer science;decision procedures	Let a quantified inequality constraint over the reals be a formula in the first-order predicate language over the structure of the real numbers, where the allowed predicate symbols are ≤ and <. Solving such constraints is an undecidable problem when allowing function symbols such sin or cos. In this article, we give an algorithm that terminates with a solution for all, except for very special, pathological inputs. We ensure the practical efficiency of this algorithm by employing constraint programming techniques.	algorithm;constraint programming;first-order predicate;social inequality;undecidable problem	Stefan Ratschan	2006	ACM Trans. Comput. Log.	10.1145/1183278.1183282	constraint logic programming;concurrent constraint logic programming;mathematical optimization;constraint programming;discrete mathematics;constraint satisfaction;numerical analysis;computer science;constraint graph;first-order logic;mathematics;constraint;programming language;algorithm;hybrid algorithm	Logic	-14.935803209844622	15.68134760475369	117623
9e57c71ecc73279f85fd78c9d43ae65c676f3dfa	boolean equations and boolean inequations?				Dragic Bankovic	2010	Multiple-Valued Logic and Soft Computing			EDA	-11.428181097094326	11.475671223576594	117663
f3451ff5bbe3885ff33cc55252d7508c1a239995	a tableau calculus for integrating first-order and elementary set theory reasoning	deduction automatique;logical programming;set theory;raisonnement;analyse syntaxique;first order;decision procedure;programmation logique;mathematical programming;analisis sintaxico;syntactic analysis;logique ordre 1;razonamiento;reasoning;analisis semantico;analyse semantique;programacion logica;programmation mathematique;automatic deduction;programacion matematica;first order logic;semantic analysis;logica orden 1	In this paper we describe an approach to integrate first-order reasoning with stratified set theory reasoning, resulting into a technique which allows to lift decision procedures for ground theories to ∃∀ sentences and combine them also with elementary set constructs, such as union, intersection, finite enumerations, membership, inclusion, equality, and monotonicity predicates over function maps. A tableau calculus, both sound and complete, is provided. The calculus is proven complete also in presence of suitable restrictions which enforce termination, thus yielding decision procedures in certain cases.	first-order predicate;method of analytic tableaux;set theory	Domenico Cantone;Calogero G. Zarba	2000		10.1007/10722086_14	computer science;artificial intelligence;first-order logic;mathematics;programming language;algorithm	Logic	-14.908539151702058	16.23165797648193	117678
f776349886db89ac72c5660c8df6c79996e2e931	a characterization of companionable, universal theories		A first-order theory is companionable if it is mutually model-consistent with a model-complete theory. The latter theory is then called a model-companion for the former theory. For example, the theory of formally real fields is a companionable theory; its model-companion is tte theory of real closed fields. If a companionable, inductive theory has the amalgamation property, then its model-companion is actually a model-completion. For example, the theory of fields is a companionable, inductive theory with the amalgamation property; its model-completion is the theory of algebraically closed fields. The goal of this paper is the characterization, by algebraic or properties, of the companionable, universal theories which satisfy a certain finiteness condition. A theory is companionable precisely when the theory consisting of its universal consequences is companionable. Both theories have the same model-companion if either has one. Accordingly, nought is lost by the restriction to universal theories. The finiteness condition, finite presentation decompositions, is an analogue for an arbitrary theory of the decomposition of a radical ideal in a Noetherian, commutative ring into a finite intersection of prime ideals for the theory of integral domains. The companionable theories with finite presentation decompositions are characterized by two properties: a coherence property for finitely generated submodels of finitely presented models and a homomorphism lifting property for homomorphisms from submodels of finitely presented models. This structural characterization, Theorem 1, generalizes and subsumes previous results and leads to new results. Theorem 1 generalizes Theorem 5 of [18], which characterized the companionable, universal Horn theories with the amalgamation property, and extends that theorem to include the theory of integral domains. Theorem 1 accounts for the existence of model-companions for the theory of formally real fields and the theory of semiprime commutative rings; it accounts also for the absence of a model-companion for the theory of commutative rings. Moreover, this structural characterization leads to the new result that the class of 2-colorable graphs is axiomatized by a universal Horn theory, without the amalgamation property, which has a model-companion. This paper is divided into seven sections. Preliminary definitions and conventions are presented in ?1. Definitions of the structural properties for the characterization are set forth in ?2. The main theorem, the characterization of		William H. Wheeler	1978	J. Symb. Log.		radical of an ideal;homomorphism;noetherian;algebraic number;discrete mathematics;commutative ring;semiprime;algebraically closed field;amalgamation property;mathematics	Theory	-7.829125963624352	15.434277546312275	117713
d982c4773bcdbfe2076e9da556dcb6e94857bc77	observing the truth: diagrams, sets and free rides		There are many different notations that can define relationships between sets, some of which are diagrammatic and others symbolic. Even when a notation is selected, there are choices to be made between semantically equivalent, yet syntactically different, statements. Syntactic choices include variations in both abstract syntax and concrete syntax where graphical and topological properties can differ. Whilst it is clearly important to understand the relative benefits of choices in all senses, the focus here is on the choice of notation and, within that, abstract syntax choices.	abstract syntax;diagram;parse tree;statement (computer science);while	Gem Stapleton	2016			abstract syntax tree;notation;semantic equivalence;syntax;natural language processing;diagrammatic reasoning;artificial intelligence;abstract syntax;computer science	PL	-10.739563641401872	8.453713077287304	117798
133e32f192cf15134417948b0804a0a9419c672d	the decision problem for the probabilities of higher-order properties	second order;satisfiability;higher order;decision problem;expressive power;first order;first order logic	The probability of a property on the class of all finite relational structures is the limit as <italic>n</italic> → ∞ of the fraction of structures with <italic>n</italic> elements satisfying the property, provided the limit exists. It is known that <italic>0-1 laws</italic> hold for any property expressible in first-order logic or in fixpoint logic, i.e. the probability of any such property exists and is either 0 or 1. It is also known that the associated decision problem for the probabilities is PSPACE-complete and EXPTIME-complete for first-order logic and fixpoint logic respectively. The 0-1 law fails, however, in general for second-order properties and the decision problem becomes unsolvable. We investigate here logics which on the one hand go beyond fixpoint in terms of expressive power and on the other possess the 0-1 law. We consider first <italic>iterative logic</italic> which is obtained from first order logic by adding while looping as a construct. We show that the 0-1 law holds for this logic and determine the complexity of the associated decision problem. After this we study a fragment of second order logic called <italic>strict</italic> &Sgr;<supscrpt>1</supscrpt><subscrpt>1</subscrpt>. This class of properties is obtained by restricting appropriately the first-order part of existential second-order sentences. Every strict &Sgr;<supscrpt>1</supscrpt><subscrpt>1</subscrpt> property is NP-computable and there are strict &Sgr;<supscrpt>1</supscrpt><subscrpt>1</subscrpt> properties that are NP-complete, such as 3-colorability. We show that the 0-1 law holds for strict &Sgr;<supscrpt>1</supscrpt><subscrpt>1</subscrpt> properties and establish that the associated decision problem is NEXPTIME-complete. The proofs of the decidability and complexity results require certain combinatorial machinery, namely generalizations of Ramsey's Theorem.	computable function;decision problem;exptime;expressive power (computer science);first-order logic;first-order predicate;fixed point (mathematics);graph coloring;iterative method;karp's 21 np-complete problems;nexptime;norm (social);pspace;pspace-complete;ramsey's theorem	Phokion G. Kolaitis;Moshe Y. Vardi	1987		10.1145/28395.28441	predicate logic;modal μ-calculus;combinatorics;discrete mathematics;higher-order logic;many-valued logic;computer science;intermediate logic;first-order logic;mathematics;programming language;substructural logic;second-order logic;algorithm	Theory	-7.8910350218593255	16.60256477269438	118147
11eb0b902a3ba2528552d75ccdeab275bf9977b3	modal logics for reasoning about multiagent systems	modal logic	It becomes evident in recent years a surge of interest to applications of modal logics for specification and validation of complex systems. It holds in particular for combined logics of knowledge, time and actions for reasoning about multiagent systems (Dixon, Nalon & Fisher, 2004; Fagin, Halpern, Moses & Vardi, 1995; Halpern & Vardi, 1986; Halpern, van der Meyden & Vardi, 2004; van der Hoek & Wooldridge, 2002; Lomuscio, & Penczek, W., 2003; van der Meyden & Shilov, 1999; Shilov, Garanina & Choe, 2006; Wooldridge, 2002). In the next paragraph we explain what are logics of knowledge, time and actions from a viewpoint of mathematicians and philosophers. It provides us a historic perspective and a scientific context for these logics. For mathematicians and philosophers logics of actions, time, and knowledge can be introduced in few sentences. A logic of actions (ex., Elementary Propositional Dynamic Logic (Harel, Kozen & Tiuryn, 2000)) is a polymodal variant of a basic modal logic K (Bull & Segerberg, 2001) to be interpreted over arbitrary Kripke models. A logic of time (ex., Linear Temporal Logic (Emerson, 1990)) is a modal logic with a number of modalities that correspond to “next time”, “always”, “sometimes”, and “until” to be interpreted in Kripke models over partial orders (discrete linear orders for LTL in particular). Finally, a logic of knowledge or epistemic logic (ex., Propositional Logic of Knowledge (Fagin, Halpern, Moses & Vardi, 1995; Rescher, 2005)) is a polymodal variant of another basic modal logic S5 (Bull & Segerberg, 2001) to be interpreted over Kripke models where all binary relations are equivalences. BACKGROUND: mODAL LOGICS	agent-based model;complex systems;dirac delta function;dixon's factorization method;dynamic logic (modal logic);epistemic modal logic;kripke semantics;linear temporal logic;moses;multi-agent system;propositional calculus;s5 (modal logic)	Nikolay V. Shilov;Natalya Olegovna Garanina	2009			multimodal logic;modal logic;modal;dynamic logic (modal logic);theoretical computer science;temporal logic;multi-agent system;computer science	AI	-15.00905032788992	8.158887413655536	118188
bec371c384404737c6ddd00a68116e6cb09c61ec	a knowledge level account of forgetting		Forgetting is an operation on knowledge bases that has been addressed in different areas of Knowledge Representation and with respect to different formalisms, including classical propositional and first-order logic, modal logics, logic programming, and description logics. Definitions of forgetting have been expressed in terms of manipulation of formulas, sets of postulates, isomorphisms between models, bisimulations, second-order quantification, elementary equivalence, and others. In this paper, forgetting is regarded as an abstract belief change operator, independent of the underlying logic. The central thesis is that forgetting amounts to a reduction in the language, specifically the signature, of a logic. The main definition is simple: the result of forgetting a portion of a signature in a theory is given by the set of logical consequences of this theory over the reduced language. This definition offers several advantages. Foremost, it provides a uniform approach to forgetting, with a definition that is applicable to any logic with a well-defined consequence relation. Hence it generalises a disparate set of logic-specific definitions with a general, high-level definition. Results obtained in this approach are thus applicable to all subsumed formal systems, and many results are obtained much more straightforwardly. This view also leads to insights with respect to specific logics: for example, forgetting in first-order logic is somewhat different from the accepted approach. Moreover, the approach clarifies the relation between forgetting and related operations, including belief contraction.	belief revision;description logic;digital signature;first-order logic;first-order predicate;foremost;formal system;graph isomorphism;high- and low-level;knowledge base;knowledge level;knowledge representation and reasoning;logic programming;modal logic;turing completeness	James P. Delgrande	2017	J. Artif. Intell. Res.	10.1613/jair.5530	knowledge level;artificial intelligence;machine learning;mathematics;forgetting	AI	-15.646327983919072	6.692314975928096	118263
1006995ff75dcde5151049c279b189cb6f1cb328	a consistency-based model for belief change: preliminary report	artificial intelligent;integrity constraints;belief change;knowledge base	We present a general, consistency-based framework for belief change. Informally, in revising K by α, we begin with α and incorporate as much of K as consistently possible. Formally, a knowledge base K and sentence α are expressed, via renaming propositions in K, in separate alphabets, but such that there is an isomorphism between the original and new alphabets. Using a maximization process, we assume that corresponding atoms in each language are equivalent insofar as is consistently possible. Lastly, we express the resultant knowledge base using just the original alphabet. There may be more than one way in which α can be so extended by K: in choice revision, one such “extension” represents the revised state; alternately revision consists of the intersection of all such extensions. The overall framework is flexible enough to express other approaches to revision and update, and the incorporation of static and dynamic integrity constraints. Our framework differs from work based on ordinal conditional functions, notably with respect to iterated revision. We argue that the approach is well-suited for implementation: choice revision gives better complexity results than general revision; the approach can be expressed in terms of a finite knowledge base; and the scope of a revision can be restricted to just those propositions mentioned in the sentence for revision α.	belief revision;data integrity;default logic;expectation–maximization algorithm;ink (operating system);iteration;knowledge base;ordinal data;resultant	James P. Delgrande;Torsten Schaub	2000			knowledge base;computer science;artificial intelligence;machine learning;data integrity;data mining;mathematics;belief revision;algorithm	AI	-16.69378752648594	7.6311592119326805	118425
6f237c2beba4ed3157b8337805f2e3cabd66ca0e	typing aberrance in signal transduction	theorie type;biological model;signal transduction;pi calculus;modelo biologico;expressive power;tipificacion;algebra proceso;modele biologique;typing;pi calculo;pi calcul;type theory;typage;algebre processus;process algebra;type system	We have developed a calculus, called Ipi, for describing the aberrance in biological models. Our approach extends the traditional pi calculus to handle aberrant process in the signal transduction. In this paper we propose a typing system that replaces the tag system of Ipi calculus. It is shown that the typing system is equal to the tag system in terms of the expressive power.	expressive power (computer science);tag system;transducer;transduction (machine learning);typing;π-calculus	Min Zhang;Guoqiang Li;Yuxi Fu;Zhizhou Zhang;Lin He	2005		10.1007/11539902_82	process calculus;type system;π-calculus;computer science;models of abnormality;calculus;mathematics;programming language;type theory;expressive power;algorithm;signal transduction	Logic	-15.808021513970804	16.23232498450994	118450
bc0c14f9566b67c45a0c33f27c844c07ec44cdcb	a unifying logical framework for reason maintenance	logical framework;labelled deductive systems;first order	"""We present a way to describe Reason Maintenance Systems using the sameformalism for justification based as well as for assumption based approaches.This formalism uses labelled formulae and thus is a special case of Gabbay'slabelled deductive systems. Since our approach is logic based, we are able toget a semantics oriented description of the systems in question.Instead of restricting ourselves to e.g. propositional Horn formulae, as wasdone in the past, we admit arbitrary logics. This enables us to characterizesystems as a whole, including both the reason maintenance component and theproblem solver, nevertheless maintaining a separation between the basic logicand the part that describes the label propagation. The possibility to freely varythe basic logic enables us to not only describe various existing systems, but canhelp in the design of completely new ones.We also show, that it is possible to implement systems based directly on ourlabelled logic and plead for """"incremental calculi"""" crafted to attack undecidablelogics.Furthermore it is shown that the same approach can be used to handledefault reasoning, if the propositional labels are upgraded to first order."""	logical framework;reason maintenance	Detlef Fehrer	1993		10.1007/BFb0028190	discrete mathematics;logical framework;computer science;artificial intelligence;first-order logic;mathematics;algorithm	NLP	-17.649498729691302	16.76178829219074	118704
4d6c4aea9a002caabbde74383412fed6a46be7ca	on an approximate-inclusion-based difference operator - application to the division of fuzzy relations	database domain approximate inclusion based difference operator fuzzy relations algebraic rewriting fuzzy sets;algebraic rewriting;approximate inclusion based difference operator;difference operator;rewriting systems database theory fuzzy set theory mathematical operators;fuzzy relation;decision support systems fuzzy systems virtual reality;fuzzy set theory;fuzzy sets;database domain;mathematical operators;rewriting systems;fuzzy relations;database theory	"""This paper is devoted to the definition of a difference operator founded on a relaxation of the inclusion. The regular inclusion of A in B entails that any element of A is also a member of B. The concept of an approximate inclusion is based on the softening of the universal quantifier (all) into """"almost all"""". We show that such a weakened inclusion induces a drastic difference, whose main characteristics is to be non-deterministic. Despite this, it can be used in practice, which is illustrated in the area of databases, with the question of the algebraic rewriting of the (approximate) division of relations."""	approximation algorithm;database;finite difference;linear programming relaxation;nondeterministic algorithm;quantifier (logic);rewriting;softening;universal quantification	Patrick Bosc;Olivier Pivert	2006	2006 IEEE International Conference on Fuzzy Systems	10.1109/FUZZY.2006.1681976	fuzzy logic;discrete mathematics;defuzzification;type-2 fuzzy sets and systems;fuzzy mathematics;fuzzy classification;computer science;artificial intelligence;fuzzy subalgebra;fuzzy number;mathematics;fuzzy set;fuzzy set operations;algorithm	DB	-7.849727678103169	8.793409565203168	118713
cd8a70c7c69d1108a6da8413683c8f949ca9a657	the inapplicability of (selected) paraconsistent logics	non classical logic;paraconsistency;philosophy and religion	In some cases one is provided with inconsistent information and has to reason about various consistent scenarios contained within that information. Our goal is to argue that filtered paraconsistent logics are not the right tool to handle such cases and that the problems generalise to a large class of paraconsistent logics. A wide class of paraconsistent (inconsistency-tolerant) logics is obtained by filtration: adding conditions to the classical consequence operation (for instance, is a weak Rescher–Manor consequence of just in case follows classically from at least one maximally consistent subset of ). We start by surveying the most promising candidates and comparing their strengths. Then we discuss the mainstream views on how non-classical logics should be chosen for an application and argue that none of these allows us to choose any of the filtered logics for action-guiding reasoning with inconsistent information, because such reasoning has to start with the selection of possible scenarios – and such a...	paraconsistent logic	Rafal Urbaniak;Pawel Sinilo	2014	Journal of Applied Non-Classical Logics	10.1080/11663081.2014.980203	t-norm fuzzy logics;non-classical logic;principle of explosion;paraconsistent logic;epistemology;computer science;artificial intelligence;non-monotonic logic;mathematics;algorithm	Logic	-15.681663174834785	7.044269482550755	119054
3a24fe9c2724bea10c8820f52660d25c898dada5	achieving completeness in bounded model checking of action theories in asp	answer set programming;temporal logic;bounded model checking;action theory verification	Temporal logics are well suited for reasoning about actions, as they allow for the specification of domain descriptions including temporal constraints as well as for the verification of temporal properties of the domain. In this paper, we exploit bounded model checking (BMC) techniques in the verification of dynamic linear time temporal logic (DLTL) properties of an action theory, which is formulated in a temporal extension of answer set programming (ASP). To achieve completeness, in this paper, we propose an approach to BMC which exploits the Büchi automaton construction while searching for a counterexample. The paper provides an encoding in ASP of the temporal action domain and of bounded model checking of DLTL formulas.	action algebra;action language;action theory (philosophy);actor-based concurrent language;admissible numbering;answer set programming;automated planning and scheduling;boolean satisfiability problem;business process;büchi automaton;ctl*;causal filter;causality;computation;correlation does not imply causation;dlv;description logic;disjunctive normal form;divergence (computer science);intelligent platform management interface;linear temporal logic;logic programming;model checking;on the fly;persistence (computer science);regular expression;semantics (computer science);solver;stable model semantics;time complexity;undecidable problem;verification and validation	Laura Giordano;Alberto Martelli;Daniele Theseider Dupré	2012			temporal logic;computer science;artificial intelligence;theoretical computer science;answer set programming;algorithm	AI	-16.06495307513698	13.413909840590856	119149
b8ac27cfb1445eced4f3ef076f70333980335799	toplog: ilp using a logic program declarative bias		This paper introduces a new Inductive Logic Programming (ILP) framework called Top Directed Hypothesis Derivation (TDHD). In this framework each hypothesised clause must be derivable from a given logic program called top theory (>). The top theory can be viewed as a declarative bias which defines the hypothesis space. This replaces the metalogical mode statements which are used in many ILP systems. Firstly we present a theoretical framework for TDHD and show that a standard SLD derivation can be used to eciently derive hypotheses from >. Secondly, we present a prototype implementation of TDHD within a new ILP system called TopLog. Thirdly, we show that the accuracy and eciency of TopLog, on several benchmark datasets, is comparable with the accuracy and eciency of a state of the art ILP system like Aleph.	declarative programming;logic programming	Jose Santos	2008		10.1007/978-3-540-89982-2_88	theoretical computer science;machine learning;programming language;algorithm	SE	-16.784834962017005	16.87129874660043	119294
cd7f61884d8ffcca39eb97c12564a284c4f9f910	categorical generalization of a universal domain	scott domain;scott complete category;universal domain	J. Adamek defined SC categories as a categorical generalization of Scott domains. Namely, an SC category is finitely accessible, has an initial object and is boundedly cocomplete (each diagram with a compatible cocone has a colimit). SC categories are proved to serve well as a basis for the computer language semantics.		Jiri Velebil	1999	Applied Categorical Structures	10.1023/A:1008608823476	combinatorics;discrete mathematics;mathematics	Logic	-7.551599283711354	14.58661774519477	119327
b4baee8d8d930b88ade69ac9b161d7f8a0d9a631	the world, the facts, and primary logic				Fred Sommers	1993	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093634650	philosophy of logic	Logic	-12.871744879659333	11.03359876915389	119334
4b21c42a522a0e50bf1e58a822a343c15455d837	simple example of weak modal logic based on intuitionistic core		In this paper we present simple example of propositional logic which has one modal operator and is based on intuitionistic core. This system is very weak in modal sense e.g. rules of regularity or monotonicity do not hold. It has complete semantics composed of possible worlds equipped with neighborhoods and pre-order relation. We discuss certain restrictions imposed on those structures. Also, we present characterization of axiom 4 known from logic S4 .	fuzzy logic;intuitionistic logic;modal logic;modal operator;possible world;propositional calculus	Tomasz Witczak	2018	CoRR		discrete mathematics;modal;semantics;monotonic function;axiom;modal operator;propositional calculus;modal logic;possible world;mathematics	Logic	-11.016876647419295	12.49686769700867	119339
12ab4ca1f7c675b51f10c1ab3744fbc27169f2b1	fuzzy linguistic logic programming and its applications	databases;fuzzy logic programming;computing with words;querying;fuzzy control;linguistic value;hedge algebra;natural language;threshold computation;logic in computer science;logic programs;linguistic hedge;lower bound	The paper introduces fuzzy linguistic logic programming, which is a combination of fuzzy logic programming, introduced by P. Vojtáš, and hedge algebras in order to facilitate the representation and reasoning on human knowledge expressed in natural languages. In fuzzy linguistic logic programming, truth values are linguistic ones, e.g., VeryTrue, VeryProbablyTrue and LittleFalse, taken from a hedge algebra of a linguistic truth variable, and linguistic hedges (modifiers) can be used as unary connectives in formulae. This is motivated by the fact that humans reason mostly in terms of linguistic terms rather than in terms of numbers, and linguistic hedges are often used in natural languages to express different levels of emphasis. The paper presents: (a) the language of fuzzy linguistic logic programming; (b) a declarative semantics in terms of Herbrand interpretations and models; (c) a procedural semantics which directly manipulates linguistic terms to compute a lower bound to the truth value of a query, and proves its soundness; (d) a fixpoint semantics of logic programs, and based on it, proves the completeness of the procedural semantics; (e) several applications of fuzzy linguistic logic programming; and (f) an idea of implementing a system to execute fuzzy linguistic logic programs.	emoticon;fixed point (mathematics);fuzzy logic;logic programming;logical connective;natural language;unary operation	Van Huynh Le;Fei Liu;Dinh Khang Tran	2009	TPLP	10.1017/S1471068409003779	fuzzy logic;dynamic logic;natural language processing;t-norm fuzzy logics;description logic;higher-order logic;horn clause;deep linguistic processing;many-valued logic;fuzzy classification;computer science;fuzzy number;functional logic programming;computational logic;natural language;upper and lower bounds;programming language;logic programming;multimodal logic;fuzzy control language;algorithm;fuzzy control system;philosophy of logic	AI	-16.222696338260004	11.792556762477115	119531
c7696ffe80f91282411bde57689126c683490912	computabilities of validity and satisfiability in probability logics over finite and countable models		The ǫ-logic (which is called ǫE-logic in this paper) of Kuyper and Terwijn is a variant of first order logic with the same syntax, in which the models are equipped with probability measures and in which the ∀x quantifier is interpreted as “there exists a set A of measure ≥ 1 − ǫ such that for each x ∈ A, . . . .” Previously, Kuyper and Terwijn proved that the general satisfiability and validity problems for this logic are, i) for rational ǫ ∈ (0, 1), respectively Σ11-complete and Π11-hard, and ii) for ǫ = 0, respectively decidable and Σ 0 1-complete. The adjective “general” here means “uniformly over all languages.” We extend these results in the scenario of finite models. In particular, we show that the problems of satisfiability by and validity over finite models in ǫE-logic are, i) for rational ǫ ∈ (0, 1), respectively Σ01and Π 0 1-complete, and ii) for ǫ = 0, respectively decidable and Π 0 1-complete. Although partial results toward the countable case are also achieved, the computability of ǫE-logic over countable models still remains largely unsolved. In addition, most of the results, of this paper and of Kuyper and Terwijn, do not apply to individual languages with a finite number of unary predicates. Reducing this requirement continues to be a major point of research. On the positive side, we derive the decidability of the corresponding problems for monadic relational languages — equalityand function-free languages with finitely many unary and zero other predicates. This result holds for all three of the unrestricted, the countable, and the finite model cases. Applications in computational learning theory (CLT), weighted graphs, and artificial neural networks (ANN) are discussed in the context of these decidability and undecidability results.	artificial neural network;computability;computational learning theory;first-order logic;quantifier (logic);unary operation	Greg Yang	2015	Journal of Applied Non-Classical Logics	10.1080/11663081.2016.1139967	combinatorics;discrete mathematics;mathematics;algorithm	Logic	-8.6593202518039	15.07043165570432	119549
e0062c35682015a3a105742d4533a5244152f05c	how many times do we need an assumption to prove a tautology in minimal logic: an example on the compression power of classical reasoning		In this article we present a class of formulas φn, n ∈ Nat, that need at least 2 assumption occurrences to be proved in a normal proof in Natural Deduction for purely implicational minimal propositional logic. In purely implicational classical propositional logic, with Peirce’s rule, each φn is proved with only one assumption occurrence in Natural Deduction in a normal proof. Besides that, the formulas φn have exponentially sized proofs in cut-free Sequent Calculus. In fact 2 is the lower-bound for normal proofs in ND and cut-free Sequent proofs. We briefly discuss the consequences of the existence of this class of formulas for designing automatic proof-procedures based on these deductive systems.	automated proof checking;natural deduction;network address translation;norsk data;propositional calculus;sequent calculus	Edward Hermann Haeusler	2014				Theory	-10.755869523469354	13.649556886542655	119855
cfd3b3146874304a7a1bff1b67b1124b47ab3cb9	parameterized complexity and fixed-parameter tractability of description logic reasoning	basic dl alci;coarse measure;knowledge base;alci constructor;alci knowledge base;individual knowledge base;reasoning problem;fixed-parameter tractability;parameterized complexity;reasoning complexity;worst-case complexity result;worst-case complexity;description logic reasoning	basic dl alci;coarse measure;knowledge base;alci constructor;alci knowledge base;individual knowledge base;reasoning problem;fixed-parameter tractability;parameterized complexity;reasoning complexity;worst-case complexity result;worst-case complexity;description logic reasoning	description logic;parameterized complexity	Boris Motik	2012		10.1007/978-3-642-28717-6_3	knowledge representation and reasoning;qualitative reasoning;non-monotonic logic;reasoning system;deductive reasoning;algorithm	AI	-19.07863541493229	9.810932466478812	119856
079cb16a40076066d0f26a0d9365171b976649b1	two-valued logic is not sufficient to model human reasoning, but three-valued logic is: a formal analysis		There is an ongoing debate in the psychology of reasoning whether and how logic can be used to describe the human inference process. Many psychological findings indicate that humans deviate from classical logic inferences. Some researchers have proposed to use ternary logics instead to model human reasoning processes. In this article we re-analyze the famous Wason Selection Task that has been researched in more than 100 publications and can be regarded as one of the most important reasoning experiment in the psychology of reasoning. It investigates how participants check if a given conditional statement holds. Most cognitive modeling approaches have focused on explaining the general response pattern. Instead, we focus on the pattern generated by each participant. In particular, we conduct a meta-analysis to identify these patterns. Thereafter, we analyze these patterns. If there is a two-valued model of human reasoning processes, then there must be two-valued truth-tables that can generate the patterns. Finally, we show by a search through the space of all two-valued truth tables that there are patterns that cannot be explained by two-valued logics. However, these patterns can be explained, when extending the representation to three-valued logics.	cognitive model;conditional (computer programming);psychology of reasoning;semantic reasoner;t-norm fuzzy logics;three-valued logic;truth-table reduction	Marco Ragni;Emmanuelle-Anna Dietz;Ilir Kola;Steffen Hölldobler	2016			predicate logic;computational logic;many-valued logic;dynamic logic (modal logic);machine learning;philosophy of logic;artificial intelligence;discrete mathematics;computer science;signature (logic);automated reasoning;autoepistemic logic	AI	-15.229793252365258	5.259660223169819	119889
32f5bbc50db1820c873f6cddbc37b4cbf843e237	existential graphs as an instrument of logical analysis: part i. alpha			existential graph	Francesco Bellucci;Ahti-Veikko Pietarinen	2016	Rew. Symb. Logic	10.1017/S1755020315000362	existential quantification;cognitive science	Logic	-11.6435794369025	11.220791407869415	119918
4378b74c901484f7041c1884919b3482acce6d16	the algebras of lukasiewicz many-valued logic: a historical overview	many valued logic	An outline of the history of the algebras corresponding to Łukasiewicz many-valued logic from the pioneering work by G. Moisil in 1940 until D. Mundici's work in 1986.		Roberto Cignoli	2006		10.1007/978-3-540-75939-3_5	mv-algebra;discrete mathematics;many-valued logic;łukasiewicz logic;pure mathematics;mathematics;logic;philosophy of logic	Logic	-11.557210167813102	11.122395691808784	120189
23dc97606aa6c5942bb01e8078a72ffe03373204	logic of refinement types	algebraic logic;type system	"""Abst rac t . Refinement types are subsets of ordinary types, which are intended to be specifications of programs. Ordinary types correspond to constructive propositions by Curry-Howard isomorphism. Refinement types correspond to """"classical"""" propositions by a semantics resembling interpretations of logics in categorical/algebraic logic. In this paper, we will study the logic of refinement types in the type system ATTT which was introduced in [9] as a framework for an """"optimized"""" Curry-Howard isomorphism."""	curry;curry–howard correspondence;oracle rac;refinement (computing);type system	Susumu Hayashi	1993		10.1007/3-540-58085-9_74	dynamic logic;zeroth-order logic;algebraic logic;description logic;logic optimization;higher-order logic;type system;algebraic sentence;computer science;intermediate logic;predicate functor logic;signature;programming language;substructural logic;multimodal logic;second-order logic;algorithm;autoepistemic logic	PL	-16.036068853965865	17.059555672002507	120324
ea1a838cc508f63f83ab36db060b7b4367058f18	from observability to manipulability: extending the inductive arguments for realism	realism;projectibility;vraisemblance;case history;convergence;profoundness;constructive induction;projectibilite;truthlikeness;property;convergencia;induction;theory;realisme;propriete;evidence;profondeur;scientific;argument;politique;politics;scientifique;theorie	In recent years there have been several attempts to construct inductive arguments for some version of scientific realism. Neither the characteristics of what would count as inductive evidence nor the conclusion to be inferred have been specified in ways that escape sceptical criticism. By introducing the pragmatic criterion of manipulative efficacy for a good theory and by sharpening the specification of the necessary inductive principle, the viability of a mutually supporting pair of argument forms are defended. It is shown that by the use of these forms, taken together, a sequence of inductive arguments could be constructed, given suitable cases histories to serve as evidence. It also shown that the best inductive argument for the most daring realist claim is the weakest when compared with similarly structured arguments for less daring claims.	inductive reasoning	Rom Harré	1996	Synthese	10.1007/BF00413494	argument;politics;convergence;philosophy;epistemology;mathematics;property;realism;theory;algorithm	NLP	-12.19151940438577	4.730682565040999	120450
f1691c48b7ea834ffabe137a4e9a28f4377f4428	undecidability of consequence relation in full non-associative lambek calculus		We prove that the consequence relation in the Full Non-associative Lambek Calculus is undecidable. An encoding of the halting problem for 2-tag systems using finitely many sequents in the language {·,∨} is presented. Therefore already the consequence relation in this fragment is undecidable. Moreover, the construction works even when the structural rules of exchange and contraction are added.	categorial grammar;halting problem;undecidable problem	Karel Chvalovský	2015	J. Symb. Log.	10.1017/jsl.2014.39	discrete mathematics;mathematics;noncommutative logic;algorithm;algebra	Logic	-11.309967516366125	14.150995191148802	120461
ed04ce528df4ed3841ee21087c8b9e0e9dd47824	on the relation between representations and computability		One of the fundamental results in computability is the existence of well-defined functions that cannot be computed. In this paper we study the effects of data representation on computability; we show that, while for each possible way of representing data there exist incomputable functions, the computability of a specific abstract function is never an absolute property, but depends on the representation used for the function domain. We examine the scope of this dependency and provide mathematical criteria to favour some representations over others. As we shall show, there are strong reasons to suggest that computational enumerability should be an additional axiom for computation models. We analyze the link between the techniques and effects of representation changes and those of oracle machines, showing an important connection between their hierarchies. Finally, these notions enable us to gain a new insight on the Church-Turing thesis: its interpretation as the underlying algebraic structure to which computation is invariant.	church–turing thesis;computability;computation;data (computing);existential quantification;linear algebra;oracle machine;recursively enumerable set;turing	Jaun Casanova;Simone Santini	2017	CoRR		discrete mathematics;computability;mathematics	ML	-13.582218057471488	7.662316963894218	120527
5b8d83a3d5635131acfb0c9989e098e2cc2f04ec	a lazy smt-solver for a non-linear subset of real algebra	004;smt solving real algebra hybrid systems verification synthesis	SAT-solving is a highly relevant research area with plenty of industrial applications. SMT-solving over the reals, extending SAT with theories, has its main focus on linear arithmetic. However, there are only few solvers being capable of more expressive but still decidable logics like the first-order theory of the reals with addition and multiplication – real algebra. One of the main requests on theory solvers that must be fulfilled for their efficient embedding into a lazy DPLL-based SMT-solver is incrementality, which is not supported by currently available theory solvers for real algebra. In this paper we address the extension of an existing theory-solving algorithm, the virtual substitution method, to support incrementality.	boolean satisfiability problem;computer-aided design;dpll algorithm;depth-first search;first-order logic;first-order predicate;lazy evaluation;prototype;satisfiability modulo theories;simultaneous multithreading;solver;substitution method;theory	Erika Ábrahám;Florian Corzilius;Ulrich Loup;Thomas Sturm	2010			combinatorics;discrete mathematics;mathematics;algorithm	Logic	-17.62049268577215	16.01793712695754	120721
a192b81bf9bb2c85c8654526d87e07eb1716779f	weak inclusion systems: part two		 New properties and implications of inclusion systems are investigated in thepresent paper. Many properties of lattices, factorization systems and special practicalcases can be abstracted and adapted to our framework, making the various versions ofinclusion systems useful tools for computer scientists and mathematicians. 		Virgil Emil Cazanescu;Grigore Rosu	2000	J. UCS	10.3217/jucs-006-01-0005	higher category theory;data mining;allegory;categorical logic;computer science;category theory	NLP	-9.346257018851222	11.331358442379038	120801
28c69646078c8cdb52592a0d2c45b94e4632e4fc	canonical models for fragments of the axiom of choice		We develop a technology for investigation of natural forcing extensions of the model L(R) which satisfy such statements as “there is an ultrafilter” or “there is a total selector for the Vitali equivalence relation”. The technology reduces many questions about ZF implications between consequences of the axiom of choice to natural ZFC forcing problems.	turing completeness;zermelo–fraenkel set theory	Per-Åke Larson;Jindrich Zapletal	2017	J. Symb. Log.	10.1017/jsl.2017.29	discrete mathematics;axiom of choice;zermelo–fraenkel set theory;urelement;mathematics;canonical model;s;morse–kelley set theory;scott's trick	PL	-7.82124488187238	12.592741207501705	120905
0315d2683aad2da9e111ec359bfc52974cb03684	a semantical and operational account of call-by-value solvability		In Plotkin’s call-by-value lambda-calculus, solvable terms are characterized syntactically by means of call-by-name reductions and there is no neat semantical characterization of such terms. Preserving confluence, we extend Plotkin’s original reduction without adding extra syntactical constructors, and we get a call-by-value operational characterization of solvable terms. Moreover, we give a semantical characterization of solvable terms in a relational model, based on Linear Logic, satisfying the Taylor expansion formula. As a technical tool, we also use a resource-sensitive calculus in which the elements of the model are definable.	attack tree;böhm tree;confluence;decision problem;denotational semantics;lambda calculus;linear logic;linear separability;observational equivalence;plotkin bound;programming computable functions;relational model;turing completeness;type system	Alberto Carraro;Giulio Guerrieri	2014		10.1007/978-3-642-54830-7_7	combinatorics;relational model;discrete mathematics;kripke semantics;evaluation strategy;taylor series;confluence;mathematics;linear logic	Logic	-11.086837589889594	17.483645541471436	121571
1cb936721f02860e5ee560f316d182f6a6f335f7	atl with strategy contexts and bounded memory		We extend the alternating-time temporal logics ATL and ATL with strategy contexts and memory constraints: the first extension makes strategy quantifiers to not “forget” the strategies being executed by the other players. The second extension allows strategy quantifiers to restrict to memoryless or bounded-memory strategies. We first consider expressiveness issues. We show that our logics can express important properties such as equilibria, and we formally compare them with other similar formalisms (ATL, ATL , Game Logic, Strategy Logic, ...). We then address the problem of model-checking for our logics, especially we provide a PSPACE algorithm for the sublogics involving only memoryless strategies and an EXPSPACE algorithm for the boundedmemory case.	atlas transformation language;alan dix;algorithm;automaton;concurrency (computer science);expspace;edmund m. clarke;electronic notes in theoretical computer science;information and computation;jean;lecture notes in computer science;model checking;orna berry;pspace;pierre wolper;stacs;springer (tank);symposium on foundations of computer science;temporal logic	Thomas Brihaye;Arnaud Da Costa Lopes;François Laroussinie;Nicolas Markey	2009		10.1007/978-3-540-92687-0_7	discrete mathematics;artificial intelligence;mathematics;algorithm	Logic	-15.79749765817301	13.885728750912468	121585
3f18fb3699b477113fe6b6d7c0a2795b41a1e0d4	on a rule-based interpretation of default conditionals	conditional logic;proof theory;rule based;knowledge representation and reasoning;nonmonotonic reasoning;classical conditioning;68t30;defeasible reasoning	In nonmonotonic reasoning, a default conditional α→β has most often been informally interpreted as a defeasible version of a classical conditional, usually the material conditional. There is however an alternative interpretation, in which a default is regarded essentially as a rule, leading from premises to conclusion. In this paper, we present a family of logics, based on this alternative interpretation. A general semantic framework under this rule-based interpretation is developed, and associated proof theories for a family of weak conditional logics is specified. Nonmonotonic inference is easily defined in these logics. Interestingly, the logics presented here are weaker than the commonly-accepted base conditional approach for defeasible reasoning. However, this approach resolves problems that have been associated with previous approaches.	defeasible reasoning;logic programming;non-monotonic logic;theory	James P. Delgrande	2006	Annals of Mathematics and Artificial Intelligence	10.1007/s10472-007-9044-7	knowledge representation and reasoning;classical conditioning;discrete mathematics;computer science;artificial intelligence;non-monotonic logic;proof theory;mathematics;deductive reasoning;defeasible reasoning;algorithm	AI	-15.91393980359461	6.927012809230602	121648
31cb64bc628938167b328309b7567b3f70d81f83	a tableau method for public announcement logics	agent communication;satisfiability;inference rule;epistemic logic;dynamic epistemic logic	Public announcement logic is an extension of multi-agent epistemic logic with dynamic operators to model the informational consequences of announcements to the entire group of agents. We propose a labelled tableau-calculus for this logic. We also present an extension of the calculus for a logic of arbitrary announcements.	artificial intelligence;cognition;computer science;curve fitting;epistemic modal logic;first-order logic;first-order predicate;fitch notation;handbook;introspection;intuitionistic logic;method of analytic tableaux;moses;multi-agent system;p (complexity);pal;proof calculus;runge–kutta methods;sequent calculus;springer (tank)	Philippe Balbiani;Hans van Ditmarsch;Andreas Herzig;Tiago De Lima	2007		10.1007/978-3-540-73099-6_6	predicate logic;dynamic logic;zeroth-order logic;discrete mathematics;description logic;higher-order logic;paraconsistent logic;epistemic modal logic;many-valued logic;intermediate logic;predicate functor logic;mathematics;proof calculus;linguistics;substructural logic;multimodal logic;algorithm;philosophy of logic;rule of inference;autoepistemic logic;satisfiability	AI	-13.274015963984558	11.911335504977995	121685
4680387b9bca99a167710452468a6d45704ab78a	hume's inductive logic	inductive logic;non pertinence;personalism;cause;probability;positive;carnap r;subjective;principe;contrainte;logique inductive;hume probabilita logica induttiva induzione;symetrie;symmetry;invariance;constraint;bayesianism;projection;predictibilite;system;pertinence;consistance;positif;probabilite;subjectif;hume inductive probability induction inductive logic;evidence;echangeabilite;systeme;relevance;m fil 02 logica e filosofia della scienza;principle;consistency;personnalisme;semi regularite;gower b;hume d;bayesianisme	This paper presents a new account of Hume’s “probability of causes”. There are two main results attained in this investigation. The first, and perhaps the most significant, is that Hume developed – albeit informally – an essentially sound system of probabilistic inductive logic that turns out to be a powerful forerunner of Carnap’s systems. The Humean set of principles include, along with rules that turn out to be new for us, well known Carnapian principles, such as the axioms of semiregularity, symmetry with respect to individuals (exchangeability), predictive irrelevance and positive instantial relevance. The second result is that Hume developed an original conception of probability, which is subjective in character, although it differs from contemporary personalistic views because it includes constraints that are additional to simple consistency and do not vary between different persons. The final section is a response to Gower’s thesis, by which Hume’s probability of causes is essentially non-Bayesian in character. It is argued that, on closer examination, Gower’s reading of the relevant passages is untenable and that, on the contrary, they are in accordance with the Bayesian reconstruction presented in this paper.	hume (programming language);inductive reasoning;reconstruction filter;relevance	Alberto Mura	1998	Synthese	10.1023/A:1005041012179	relevance;philosophy;epistemology;projection;bayesian probability;invariant;principle;probability;system;mathematics;symmetry;constraint;consistency;algorithm	AI	-13.578961098817267	4.316928058549384	121694
85384ff3049a22cf97a07f506e041b182285ece2	complete theories with only universal and existential axioms			peano axioms	Alistair H. Lachlan	1987	J. Symb. Log.		mathematical logic;formal language;pure mathematics;first-order logic;mathematics;axiom;algorithm;model theory;algebra	Logic	-11.598841401784865	12.969067709448247	121765
229ddcfc7df45d90fd4d588517a337a5bb36dc00	reasoning about justified belief	complete axiomatization;justified belief;epistemic logic;rationality	Halpern and Pass [8] introduce a logic of justified belief and go on to prove that strong rationalizability is characterized in this logic in terms of common justified belief of rationality (CJBR). Their paper provides semantics for this logic but no axiomatization. We correct this deficiency by reformulating the definition of justified belief and providing a complete axiomatization of this new system. We then prove a result analogous to the characterization of strong rationalizability in terms of CJBR, and analyze the additional assumptions needed to do so.	angular defect;axiomatic system;rationality	Adam Bjorndahl;Joseph Y. Halpern;Rafael Pass	2011		10.1145/2000378.2000405	epistemic modal logic;philosophy;rationality;epistemology;mathematics;algorithm	AI	-15.258462716334272	6.388029114761721	121877
0ad07883e31069d16220fbad5c0d5d3b11aeaf7d	genetic reasoning: evolutionary induction of mathematical proofs	developpement logiciel;genetic program;automatic proving;algoritmo busqueda;algorithme recherche;search algorithm;ingenieria logiciel;demostracion automatica;general techniques;automated reasoning;algoritmo genetico;software engineering;genetics;theorem proving;demonstration automatique;demonstration theoreme;desarrollo logicial;software development;algorithme genetique;genie logiciel;power generation;genetic algorithm;demostracion teorema	Most automated reasoning systems rely on human knowledge or heuristics to guide the reasoning or search for proofs. We have evaluated the use of a powerful general search algorithm to search in the space of mathematical proofs. In our approach, automated reasoning is seen as an instance of automated programming where the proof is seen as a program (of functions corresponding to rules of inference) which transforms a statement into an axiom. We use genetic programming as the general technique for automated programming. We show that such a system can be used to evolve mathematical proofs in complex domains, i.e. arithmetics. We extend our previous research by the implementation of an efficient and stable C-language system in contrast to earlier work in Prolog.	automated planning and scheduling;automated reasoning;genetic algorithm;genetic programming;heuristic (computer science);machine learning;maxima and minima;prolog;reasoning system;search algorithm	Peter Nordin;Anders Eriksson;Mats G. Nordahl	1999		10.1007/3-540-48885-5_19	electricity generation;genetic algorithm;computer science;artificial intelligence;software development;automated proof checking;mathematics;automated theorem proving;reasoning system;automated reasoning;deductive reasoning;algorithm;search algorithm	AI	-18.648430616627024	16.450314315848445	121913
937f05d8edce72921adaada9f1e86144bfffcd6b	a sheaf-theoretic approach to pattern matching and related problems	compilacion;analisis escena;analyse scene;gramatica cf;grammaire cf;analyse syntaxique;analisis sintaxico;context free grammar;pattern matching;syntactic analysis;estructura datos;compilation;structure donnee;concordance forme;data structure;scene analysis	We present a general theory of pattern matching by adopting an extensional, geometric view of patterns. Representing the geometry of the pattern via a Grothendieck topology, the extension of the matching relation for a constant target and varying pattern forms a sheaf. We derive a generalized version of the Knuth-Morris-Pratt string-matching algorithm by gradually converting this extensional description into an intensional description, i.e., an algorithm. The generality of this approach is illustrated by briefly considering other applications: Earley’s algorithm for parsing, Waltz filtering for scene analysis, matching modulo commutativity, and the n-queens problem.	intensional logic;knuth–morris–pratt algorithm;modulo operation;parsing;pattern matching;string searching algorithm;theory	Yellamraju V. Srinivas	1993	Theor. Comput. Sci.	10.1016/0304-3975(93)90239-P	combinatorics;discrete mathematics;data structure;computer science;3-dimensional matching;parsing;pattern matching;mathematics;context-free grammar;programming language;algorithm	Theory	-12.843530872524674	18.134511365714044	122026
eef32fc6a9cb09d7be790841f7aa376c98f83831	towards a theory of recursive structures	query language;structural model;zero one law;optimization problem;computational complexity	In computer science, one is interested mainly in nite objects. Insofar as innnite objects are of interest, they must be computable, i.e., recursive, thus admitting an eeective nite representation. This leads to the notion of a recursive graph, or, more generally, a recursive structure , model or data base. In this paper we summarize our recent work on recursive structures and data bases, including (i) the high undecidability of many problems on recursive graphs and structures, (ii) a method for deducing results on the descriptive complexity of nitary NP optimization problems from results on the computational complexity (i.e., the degree of undecidability) of their innnitary analogues, (iii) completeness results for query languages on recursive data bases, (iv) correspondences between descriptive and computational complexity over recursive structures , and (v) zero-one laws for recursive structures.	computable function;computational complexity theory;computer science;database;descriptive complexity theory;emoticon;mathematical optimization;query language;recursion (computer science);undecidable problem	David Harel	1994		10.1007/3-540-57785-8_177	circuit complexity;optimization problem;combinatorics;discrete mathematics;computer science;recursive data type;primitive recursive function;recursive language;mathematics;computational complexity theory;μ operator;algorithm;query language	Theory	-6.693342836406836	17.565015251381908	122249
5f6b6a3a7bb19c58e81f91c092e0c8c84cf36cdc	formes de langages et de grammaires	context free language;point of view	This paper is devoted to the study of context-free languages over infinite alphabets. This work can be viewed as a new attempt to study families of grammars, replacing the usual “grammar forms” and giving a new point of view on these questions. A language over an infinite alphabet or I-language appears as being a model for a family of usual languages; an interpretation is an homomorphism from the infinite alphabet to any finite alphabet. Using this notion of interpretation we can associate to each family of I-languages an image, called its shadow, which is a family of usual languages. The closure properties of families, generalizing to infinite alphabets the family of context-free languages, lead to define rational transductions between infinite alphabets or I-transductions, and then, families of I-languages closed under I-transductions, or I-cones. We study here relations between the closure properties of a family of I-languages and these of its shadow. As a result, we obtain that any union closed rational cone of context-free languages, principal or not, is the shadow of a principal I-cone. This work leads to new results about the classical theory of context-free languages. For instance, we prove that any principal rational cone of context-free languages can be generated by a context-free language, whose grammar has only 6 variables. This work also leads to more general considerations about the adequacy of some generating devices to the generated languages. It appears that the context-free grammars are fair, in a sense that we define, for generating context-free languages but that non-expansive context-free grammars are not for generating non-expansive context-free languages. This point of view raises a number of questions.	cone (formal languages);context-free grammar;context-free language	Jean-Michel Autebert;Joffroy Beauquier;Luc Boasson	1982	Acta Informatica	10.1007/BF00288970	combinatorics;formal language;discrete mathematics;computer science;mathematics;context-free language;cone;abstract family of languages;programming language;algorithm	Theory	-5.821620979820835	14.157762398948432	122266
6b9ccd1310c6d85ab4fd9be68cccbd3a5199ec2c	synonymy in sentential languages: a pragmatic view	mathematical logic;strong sense;computational linguistic;pragmatic view;referential semantic	In this note two notions of meaning are considered and accordingly two versions of synonymy are defined, weaker and stronger ones. A new semantic device is introduced: a matrix is said to be pragmatic iff its algebra is in fact an algebra of meanings in the stronger sense. The new semantics is proved to be “universal enough” (Theorem 1), and it turns out to be in some sense a generalization of Wojcicki's referential semantics (Theorem 3).		Marek Tokarz	1988	Studia Logica	10.1007/BF00370284	natural language processing;mathematics;linguistics;algorithm	NLP	-11.412861344799834	7.382539159824422	122323
aab20019aeede8b3f5befa1a4d58393e6ff5c1a7	external and internal syntax of the lambda-calculus	programming language;formal proof;lambda calculus;formal reasoning;usual care;binding	It is well known that formally defining and reasoning about languages with binding (such as logics and @l-calculii) is problematic. There are many approaches to deal with the problem, with much work over recent years stimulated by the desire to formally reason about programming languages and program logics. The various approaches have their own strengths and drawbacks, but no fully satisfactory approach has appeared. We present an approach based on two levels of syntax: an internal syntax which is convenient for machine manipulation, and an external syntax which is the usual informal syntax used in many articles and textbooks. Throughout the paper we use pure @l-calculus as an example, but the technique extends to many languages with binding. Our internal syntax is canonical: one representative of every @a-equivalence class. It is formalized in Isabelle/HOL, and its properties are mechanically proved. It is also proved to be isomorphic with a nominal representation of @l-calculus in Isabelle/HOL. Our conventional, human friendly external syntax is naturally related to the internal syntax by a semantic function. We do not define notions directly on the external syntax, since that would require the usual care about @a-renaming, but introduce them indirectly from the canonical internal syntax via the semantic function.	lambda calculus	Masahiko Sato;Randy Pollack	2010	J. Symb. Comput.	10.1016/j.jsc.2010.01.010	formal proof;abstract syntax;lambda calculus;syntax;abstract semantic graph;mathematics;homoiconicity;algorithm;abstract syntax tree;syntax error	Logic	-16.358126666545363	17.747375908424377	122337
b3f2c98d0fc841da22e85e015e6b7e5fc21c0b7b	complexity of deep inference via atomic flows	bounded-depth frege;deep inference;atomic flow;compression mechanism;dag-like cut-free;proof complexity	We consider the fragment of deep inference free of compressi on mechanisms and compare its proof complexity to other systems, ut ili ing ‘atomic flows’ to examine size of proofs. Results include a simulation of Re solution and dag-like cut-free Gentzen, as well as a separation from bounded-dept h Frege.	directed acyclic graph;frege;proof complexity;simulation;ut-vpn	Anupam Das	2012		10.1007/978-3-642-30870-3_15	theoretical computer science;mathematics;algorithm	Logic	-11.175990087328307	15.685628245983654	122705
c09732fe3a9e4e78701cf9c279a3b5f306797aad	the logic of epistemic justification		Theories of epistemic justification are commonly assessed by exploring their predictions about particular hypothetical cases—predictions as to whether justification is present or absent in this or that case. With a few exceptions, it is much less common for theories of epistemic justification to be assessed by exploring their predictions about logical principles. The exceptions are a handful of ‘closure’ principles, which have received a lot of attention, and which certain theories of justification are well known to invalidate. But these closure principles are only a small sample of the logical principles that we might consider. In this paper, I will outline four further logical principles that plausibly hold for justification and two which plausibly do not. While my primary aim is just to put these principles forward, I will use them to evaluate some different approaches to justification and (tentatively) conclude that a ‘normic’ theory of justification best captures its logic.	hypothetical protein;theory	Martin M Smith	2017	Synthese	10.1007/s11229-017-1422-z	epistemic modal logic;many-valued logic;epistemic possibility;logic;term logic;multimodal logic;philosophy of logic	AI	-14.876982211670137	5.284549619836646	122810
b9560db1118fb487956b7145d2add2e5fca020c2	lambek grammars are context free	context free languages;context free grammars;context free;category theory;context free languages category theory context free grammars;chomsky conjecture lambek grammars context free grammars context free languages categorial grammars syntactic calculus lambek calculus weakly unidirectional types;calculus logic mathematics text recognition mars bismuth	In this paper the Chomsky Conjecture is proved: all languages recognized by the Lambek calculus are context free. Introduction The notion of a basic categorial grammar was introduced in [1]. In the same paper it was proved that basic categorial grammars are precisely the contextfree ones. Another kind of categorial grammars was introduced by J. Lambek [8]. These grammars are based on a syntactic calculus, presently known as the Lambek calculus (cf. [2] for its semantic interpretations). Chomsky [6] conjectured that these grammars are also equivalent to context-free ones. In [7] Cohen proved that every basic categorial grammar (and, thus, every context-free grammar) is equivalent to a Lambek grammar. He also proposed a proof of the converse. However, as pointed out in [3], this proof contains an error. Buszkowski proved that some special kinds of Lambek grammars are context-free [3, 4, 5]. These grammars use weakly unidirectional types or types of order at most two. The main result of this paper (Theorem 2) says that Lambek grammars generate only context-free languages. Thus they are equivalent to context-free grammars and also to basic categorial grammars. 1 Preliminaries 1.1 Lambek calculus We consider the syntactic calculus introduced in [8]. The types of the Lambek calculus are built of primitive types p1, p2, . . ., and three binary connectives •, \, /. We shall denote the set of all types by Tp. Capital letters A,B,. . . range over types. Capital Greek letters range over finite (possibly empty) sequences of types. Sequents of the Lambek calculus are of the form Γ→A, where Γ is a nonempty sequence of types. Axioms: pi→pi Rules: Γ→A ∆→B (→•) Γ ∆→A•B Γ A B ∆→C (•→) Γ A•B ∆→C A Π→B (→\) where Π is not empty Π→A\B Π A→B (→/) where Π is not empty Π→B/A Φ→A Γ B ∆→C (\→) Γ Φ A\B ∆→C Φ→A Γ B ∆→C (/→) Γ B/A Φ ∆→C Φ→B Γ B ∆→A (CUT) Γ Φ ∆→A The cut-elimination theorem for this calculus is proved in [8]. We write L Γ→A if the sequent Γ→A is derivable in the Lambek calculus. Definition. The length of a type is defined as the total number of primitive type occurrences in the type. ||pi||⇀↽ 1 ||A•B|| = ||A\B|| = ||A/B||⇀↽ ||A||+||B|| 1.2 Lambek grammars and context-free grammars Definition. We assume that a finite alphabet T and a distinguished type D are given. A Lambek grammar is a mapping f such that, for all t ∈ T , f(t) ⊂ Tp and f(t) is finite. The language generated by the Lambek grammar is defined as the set of all expressions t1 . . . tn over the alphabet T for which there exists a derivable sequent B1 . . . Bn→D such that Bi ∈ f(ti) for all i ≤ n. We shall denote this language by L(T , D, f). Definition. We assume that two disjoint alphabets T and W are given. The elements of T are called terminal symbols and those of W are auxiliary symbols. A context-free rewrite rule is of the form X ⇒ e, where X is an auxiliary symbol and e is a word in the alphabet T ∪W. A context-free grammar is a finite set R of contextfree rewrite rules, with one auxiliary symbol S designated as its start symbol. By Ḡ(T ,W , S,R) we denote the set of all expressions over the alphabet T ∪W that arise through some finite sequence of rewritings of the start symbol S via the rules of R. The language generated by the context-free grammar is defined as G(T ,W , S,R) ⇀↽ Ḡ(T ,W , S,R) ∩ T , where T + denotes the set of all nonempty expressions over the alphabet T . 2 Main result In this section we show that every language recognized by a Lambek grammar can also be generated by a context-free grammar. The crucial point is that every sequent B1 . . . Bn→D derivable in the Lambek calculus follows immediately (i.e., by means of the cut rule only) from some short derivable sequents containing at most three types each, where none of the types is longer than the longest type in B1 . . . Bn→D (cf. Theorem 1). The proof of Theorem 1 will be carried out later in Section 3. In order to formalize the notion of immediate consequence, we introduce for each natural number m two calculi Lcutm and Lcutm. Definition. A sequent A1 . . . An→B is an axiom of Lcutm iff (1) n ≤ 2; (2) the sequent A1 . . . An→B is derivable in the Lambek calculus; (3) ||B|| ≤ m and ||Ai|| ≤ m for all i ≤ n. The only rule of Lcutm is (CUT). Definition. The calculus Lcutm has the same axioms as Lcutm. The only rule of Lcutm is (CUT) with the restriction that the left premise Φ→B must be an axiom of Lcutm. Theorem 1 Lcutm B1 . . . Bn→D if and only if ||Bi|| ≤ m for all i ≤ n, ||D|| ≤ m, and L B1 . . . Bn→D. The theorem will be proved in Section 3. Lemma 1 Lcutm Φ→A if and only if Lcutm Φ→A. Proof. The ‘only if’ part is obvious. The ‘if’ part is proved by induction on the length of the Lcutm-derivation of the left premise of a cut. A derivation of the form Φ→B Γ B ∆→A (CUT) Γ Φ ∆→A Θ A Π→C (CUT) Θ Γ Φ ∆ Π→C will be rearranged in the following way. Φ→B Γ B ∆→A Θ A Π→C (CUT) Θ Γ B ∆ Π→C (CUT) Θ Γ Φ ∆ Π→C Theorem 2 For any Lambek grammar there exists a context-free grammar such that the languages generated by these grammars coincide. Proof. If a fixed alphabet T , a designated type D, and a mapping f are given, then the set of types relevant in the definition of L(T , D, f) is finite. Let m be the maximum of the lengths of these types. Then ||D|| ≤ m and, for any t ∈ T , for any B ∈ f(t), ||B|| ≤ m. The set of primitive types involved in the grammar is also finite. Below we shall consider only types consisting of these primitive types. We take as the alphabet of auxiliary symbols W the set of all types not longer than m (and containing only relevant primitive types). W ⇀↽ {A ∈ Tp | ||A|| ≤ m} We take the distinguished type D as the start symbol of the context-free grammar. The set R consists of obvious rules describing the mapping f and of Lcutm-axioms with the sequent arrows reversed. R⇀↽ {B ⇒ t | t ∈ T and B ∈ f(t)}∪ ∪{A⇒ BC | A,B,C ∈ W and L B C→A}∪ ∪{A⇒ B | A,B ∈ W and L B→A} First, we prove that L(T , D, f) ⊂ G(T ,W , D,R). Suppose that t1 . . . tn ∈ L(T , D, f). According to the definition of L(T , D, f) there are types B1, . . . , Bn such that L B1 . . . Bn→D and Bi ∈ f(ti) for all i ≤ n. By construction, Bi ⇒ ti ∈ R for all i ≤ n. Thus it suffices to prove that B1 . . . Bn ∈ Ḡ(T ,W , D,R). In view of Theorem 1 and Lemma 1, Lcutm B1 . . . Bn→D. Straightforward induction on the length of a Lcutmderivation shows that if Lcutm B1 . . . Bn→D then B1 . . . Bn ∈ Ḡ(T ,W , D,R). Now we prove that G(T ,W , D,R) ⊂ L(T , D, f). We extend the mapping f to the set T ∪W stipulating f(B) = {B} for all B ∈ W . Easy induction on the number of rewritings establishes that if an expression X1 . . . Xn over the alphabet T ∪W belongs to Ḡ(T ,W , D,R) then there are auxiliary symbols B1, . . . , Bn such that Bi ∈ f(Xi) for all i ≤ n, and Lcutm B1 . . . Bn→D. In particular, if t1, . . . , tn are terminal symbols and t1 . . . tn belongs to Ḡ(T ,W , D,R) then t1 . . . tn ∈ L(T , D, f). 3 Proof of Theorem 1 Let FG stand for the free group generated by all primitive types {pi | i ∈ N}. The identity element will be denoted by . For any element u ∈ FG, we write |u| for the length of u written as a reduced word, i.e., a word that does not contain any fragments of the form pip −1 i or p −1 i pi. Definition. The free group interpretation of types (written as [[ ]]) is the following mapping of types into FG. [[pi]] ⇀↽ pi [[A•B]] ⇀↽ [[A]] ◦ [[B]] [[A\B]] ⇀↽ [[A]]−1 ◦ [[B]] [[A/B]] ⇀↽ [[A]] ◦ [[B]]−1 [[A1 . . . An]] ⇀↽ [[A1]] ◦ . . . ◦ [[An]] Lemma 2 If a sequent Γ→C is derivable in the Lambek calculus, then [[Γ]] = [[C]]. D. Roorda obtained this result in terms of atomic markings. The lemma has also an immediate proof in the free group environment [9]. Definition. For each natural number i we define the counter of occurrences of the primitive type pi as follows. σipi ⇀↽ 1 σipj ⇀↽ 0, if i = j σi(A•B) = σi(A\B) = σi(A/B) ⇀↽ σiA+ σiB We extend this definition to finite sequences of types. σi(A1 . . . An) ⇀↽ σiA1 + . . .+ σiAn Remark. If a sequent Γ→A is derivable in the Lambek calculus, then for any i, σi(ΓA) is an even number. Remark. ||A|| = ∑	categorial grammar;context-free grammar;context-free language;cut rule;formal grammar;job control (unix);logical connective;mathematical induction;microsoft word for mac;peano axioms;r (complexity);rewrite (programming);rewriting;sequent calculus;trusted computer system evaluation criteria	Mati Pentus	1993		10.1109/LICS.1993.287565	natural language processing;indexed language;context-sensitive grammar;tree-adjoining grammar;indexed grammar;categorial grammar;l-attributed grammar;deterministic context-free grammar;phrase structure grammar;computer science;extended affix grammar;mathematics;context-free language;noncommutative logic;definite clause grammar;context-free grammar;programming language;ambiguous grammar;stochastic context-free grammar;embedded pushdown automaton;combinatory categorial grammar;immediate constituent analysis;algorithm;category theory;c-command	Logic	-4.92023234740732	15.180929165223288	122827
ead49428b89fe8cfe5b3d04f7df4b05cebc6c011	l-pre-separation axioms in (2, l)-topologies based on complete residuated lattice-valued logic	complete residuated lattice;pre open set;2 l topology;pre separation axioms	In the present paper we introduce and study L-pre-T0-, L-pre-T1-, L-pre-T2 (L-pre-Hausdorff)-, L-pre-T3 (L-preregularity)-, L-pre-T4 (L-pre-normality)-, L-pre-strong-T3-, L-pre-strong-T4-, L-pre-R0-, L-pre-R1-separation axioms in (2, L)-topologies where L is a complete residuated lattice. Sometimes we need more conditions on L such as the completely distributive law or that the ”∧” is distributive over arbitrary joins or the double negation law as we illustrate through this paper. As applications of our work the corresponding results (see [1, 2]) are generalized and new consequences are obtained.	residuated lattice	Fathei M. Zeyada;M. Azab Abd-Allah;A. K. Mousa	2009	Int. J. Fuzzy Logic and Intelligent Systems	10.5391/IJFIS.2009.9.2.115	discrete mathematics;pure mathematics;mathematics	AI	-7.881033419949746	13.14807466665773	122910
3ebbf6980048fe0efe65ff308928b99ccc764c97	unifying logic, topology and learning in parametric logic	inductive logic;inference inductive;hierarchie difference;learning;weak forms of compactness;compacite;logique inductive;aprendizaje;apprentissage;hierarchie borel;difference hierarchy;informatique theorique;logique ordre 1;borel and difference hierarchies;inductive inference;compactness;early development;learning theory;first order logic;theorie apprentissage;computer theory;logica orden 1;compacidad;informatica teorica	Many connections have been established between learning and logic, or learning and topology, or logic and topology. Still, the connections are not at the heart of these fields. Each of them is fairly independent of the others when attention is restricted to basic notions and main results. We show that connections can actually be made at a fundamental level, and result in a logic with parameters that needs topological notions for its early developments, and notions from learning theory for interpretation and applicability. One of the key properties of first-order logic is that the classical notion of logical consequence is compact. We generalize the notion of logical consequence, and we generalize compactness to β-weak compactness where β is an ordinal. The effect is to stratify the set of generalized logical consequences of a theory into levels, and levels into layers. Deduction corresponds to the lower layer of the first level above the underlying theory, learning with less than β mind changes to layer β of the first level, and learning in the limit to the first layer of the second level. Refinements of Borel-like hierarchies provide the topological tools needed to develop	apl;artificial intelligence;computable function;declarative programming;first-order logic;first-order predicate;interpretation (logic);language identification in the limit;natural deduction;ordinal data;palais–smale compactness condition;programming language;prototype;statistical learning theory	Eric Martin;Arun Sharma;Frank Stephan	2006	Theor. Comput. Sci.	10.1016/j.tcs.2005.10.018	non-classical logic;combinatorics;discrete mathematics;computer science;inductive reasoning;learning theory;first-order logic;mathematics;compact space;algorithm	AI	-9.972554350135388	15.19407989093208	122953
8b4c59bfce6322dd20d171d27202fcc2672341e4	compilation and approximation of conjunctive queries by concept descriptions	conjunctive queries	In this paper, we characterize the logical correspondence between conjunctive queries and concept descriptions. We exhibit a necessary and sufficient condition for the compilation of a conjunctive query into an equivalent ALE concept description. We provide a necessary and sufficient condition for the approximation of conjunctive queries by maximally subsumed ALN concept descriptions.	approximation;compiler;conjunctive query	François Goasdoué;Marie-Christine Rousset	2002			boolean conjunctive query;theoretical computer science;conjunctive query;algorithm	AI	-14.418206623128524	15.035941036239523	123078
45fae73bc0716a3e15bafb2429169fcc3bf02269	a tableau system for right propositional neighborhood logic over finite linear orders: an implementation		Interval temporal logics are quite expressive temporal logics, which turn out to be difficult to deal with in many respects. Even finite satisfiability of simple interval temporal logics presents non-trivial technical issues when it comes to the implementation of efficient tableaubased decision procedures. We focus our attention on the logic of Allen’s relation meets, a.k.a. Right Propositional Neighborhood Logic (RPNL), interpreted over finite linear orders. Starting from a high-level description of a tableau system, we developed a first working implementation of a decision procedure for RPNL, and we made it accessible from the web. We report and analyze the outcomes of some initial tests.	automated theorem proving;benchmark (computing);decision problem;expressive power (computer science);high- and low-level;interval temporal logic;method of analytic tableaux;undecidable problem	Davide Bresolin;Dario Della Monica;Angelo Montanari;Guido Sciavicco	2013		10.1007/978-3-642-40537-2_8	zeroth-order logic;intermediate logic;artificial intelligence;theoretical computer science;propositional variable;algorithm	Logic	-15.469454350655626	14.182729003260162	123503
e0634b65e65b88a503a4dc1740ab7548f86bf6cc	minimal model semantics for nonmonotonic modal logics	minimal model;nonmonotonic logic;nonmonotonic modal logics;logic;semantics;formal languages;semantics minimal model semantics nonmonotonic modal logics kripke style semantics;minimal model semantics;modal logic;logic knowledge representation formal languages;formal logic;kripke style semantics;knowledge representation	Intuitively clear Kripke-style semantics for nonmonotonic modal logic are provided. Minimal model semantics is defined, and soundness and completeness of the semantics for nonmonotonic modal logics are proved. It is shown how the semantics looks for some most popular or most interesting modal logics. Applications to finding expansions and comparing nonmonotonic logics based on different monotonic modal logics are presented. A few examples of using the semantics for obtaining intuitively clear proofs of some results of nonmonotonic modal logics are given. >	modal logic	Grigori Schwarz	1992		10.1109/LICS.1992.185517	modal logic;natural language processing;s5;t-norm fuzzy logics;normal modal logic;modal μ-calculus;discrete mathematics;classical logic;higher-order logic;formal semantics;principle of bivalence;stable model semantics;action semantics;epistemology;axiom s5;formal semantics;mathematics;semantics;kripke semantics;well-founded semantics;operational semantics;accessibility relation;logic;multimodal logic;denotational semantics;algorithm	AI	-13.923359828410632	9.650637435525425	123506
0855f4b3346296b4cc41286cd576dc399b90169b	checking proofs in the metamathematics of first order logic	theorems;syntax;set theory;mathematical logic;first order logic	"""First order theories not only can be used in proving properties of programs, but have also relevance in representation theory. The desire to represent first order theories in a computer in a feasible way requires the facility to discuss meta mathematical notions. Using metamathematics will-eventually allow to construct systems which can formally discuss how they reason. In this paper we present two different first order axiomatiza-tions of the metamathematics of the logic which POL (First Order Logic proof checker) checks and show several proofs using each one. The difference between the axiomatizations is that one defines the metamathematics in a many sorted logic and the other does not. Proofs are then compared and used to discuss the adequacy of some FOL features. Section 1 Introduction This paper represents a first attempt at axi-omatizing the metamathemat ics of a first order (First Order Logic). The logic whieh FOL checks is described in detail in the user manual for this program, Weyhrauch and Thomas 1974. It is based on a system of natural deduction described in Prawitz 1965, 1970. is an axiom of arithmetic."""" b. Theorem schemas. The following kind of """"theorem"""" is sometimes seen in set theory books It asserts the existence of some particular proje£ tion of n+1-tuples. In its usual formulation this is not a theorem of set theory at all, but a meta-theorem which states that, for each n, the above sentence is a theorem. We do not know of any machine implementation of first order logic capable of expressing the above notion in a straightforward way. c. Subsidiary deduction rules. Below we show how to prove that if there is a proof of Vx y. WFF then there is also a proof of Vy x. WFF, where WFF is any well formed formula. We chose this task because it seemed simple enough to do, and is a theorem which may actually be used. The use of metatheorems as rules of inference by means of a reflection principle will be discussed in a future memo by Richard Weyhrauch. Eventually we hope to check some more substantial metamathematical theorems. d. Interesting mathematical theorems. We pres ent two examples. The first is any theorem about finite groups. The notion of finite group cannot be defined in the usual first order language of group theory. Thus many """"theorems"""" are actually metatheorems, unless you axiomatize groups in set theory. The second theorem …"""	automated proof checking;book;first-order logic;logic programming;natural deduction;relevance;set theory;vyos;well-formed formula	Mario Aiello;Richard W. Weyhrauch	1975			mathematical logic;metamathematics;discrete mathematics;theorem;syntax;predicate functor logic;first-order logic;computational logic;mathematics;linguistics;logic;algorithm;philosophy of logic;set theory	Logic	-11.325515723764221	7.803073789133819	123516
8cec7c7f0e0c6d781d40850468941b255179a144	free semantics	relevant logic.normalized natural deduction.entailment logic. tableau system.reductiosystem	Free Semantics is based on normalized natural deduction for the weak relevant logic DW and its near neighbours. This is motivated by the fact that in the determination of validity in truth-functional semantics, natural deduction is normally used. Due to normalization, the logic is decidable and hence the semantics can also be used to construct counter-models for invalid formulae. The logic DW is motivated as an entailment logic just weaker than the logic MC of meaning containment. DW is the logic focussed upon, but the results extend to MC. The semantics is called ‘free semantics’ since it is disjunctively and existentially free in that no disjunctive or existential witnesses are produced, unlike in truth-functional semantics. Such ‘witnesses’ are only assumed in generality and are not necessarily actual. The paper sets up the free semantics in a truth-functional style and gives a natural deduction interpetation of the meta-logical connectives. We then set out a familiar tableau-style system, but based on natural deduction proof rather than truth-functional semantics. A proof of soundness and completeness is given for a reductio system, which is a transform of the tableau system. The reductio system has positive and negative rules in place of the elimination and introduction rules of Brady’s normalized natural deduction system for DW. The elimination-introduction turning points become closures of threads of proof, which are at the points of contradiction for the reductio system.	context-free grammar;denotational semantics;disjunctive normal form;dreamwidth;formal system;logical connective;method of analytic tableaux;natural deduction	Ross Thomas Brady	2010	J. Philosophical Logic	10.1007/s10992-010-9129-3		Logic	-10.33291770599901	13.897599648000048	123695
b5831feccc5f4b6f4fa19bbf1fe3b1fd9d69a27a	on an ackermann-type set theory		?0. Introduction. Ackermannu0027s set theory A* is usually formulated in the first order predicate calculus with identity, E for membership and V, an individual constant, for the class of all sets. We use small Greek letters to represent formulae which do not contain V and large Greek letters to represent any formulae. The axioms of A* are the universal closures of Al Vt(tex-tey)-u003ex = y, A2 3zVt(tez-te V A 0), A3 Xe V A (tex V Vu(u t-u003euex))t V, A4 (X, Y V A Vt (O(x, y, t) u003et c V)) u003e3ze c-Vt(t c-z (x, y, t)), A5 (xe V A 3u(uex))-u003e3uexVteu(t x), where all free variables are shown in A4 and z does not occur in the ? of A2. A + is a generalization of A* which Reinhardt introduced in [3] as an attempt to provide an elaboration of Ackermannu0027s idea of sharply delimited collections. The language of A + is that of A*u0027s augmented by a new constant Vu0027, and its axioms are Al-A3, A5, V c Vu0027 and the universal closure of A4+ x, y E V A Vt(b(V, x, y, t) A t e Ve +-(Vu0027, x, y, t) A t C Vu0027) 3ze VVt(tez +-~(V, x,y, t) A te V), where all free variables are shown. Using a schema of indescribability, Reinhardt states in [3] that if ZF + u0027there exists a measurable cardinalu0027 is consistent then so is A +, and using [4] this result can be improved to a weaker large cardinal axiom. It seemed plausible that A+ was stronger than ZF, but our main result, which is contained in Theorem 5, shows that if ZF is consistent then so is A +, giving an improvement on the above results. The main result of [3] shows that the converse of Theorem 5 is also true, and further, Corollary 6 shows that the set theoretic part of A + is exactly ZF.	ackermann function;set theory	John Lake	1973	J. Symb. Log.		urelement;zermelo–fraenkel set theory;effective descriptive set theory;universal set;class;inner model theory;general set theory;universe;internal set;scott–potter set theory;mathematics;equinumerosity;empty set;infinite set;set theory;algebra	Theory	-6.532290407872536	13.616934589546723	123714
573c95eec84e847834976c602bc5d40e1154dc0e	classifying semi-normal default logic on the basis of its expressive power	circonscription;logique propositionnelle;logical programming;satisfiability;circumscription;logica defecto;expressive power;programmation logique;propositional logic;logique defaut;logica proposicional;analisis semantico;analyse semantique;default logic;programacion logica;semantic analysis;circonscripcion	This paper reports on systematic research which aims to classify non-monotonic logics by their expressive power. The classification is based on translation functions that satisfy three important criteria: polynomiality, faithfulness and modularity (PFM for short). The basic method for classification is to prove that PFM translation functions exist (or do not exist) between certain logics. As a result, non-monotonic logics can be arranged to form a hierarchy. This paper gives an overview of the current expressive power hierarchy (EPH) and investigates seminormal default logic as well as prerequisite-free and semi-normal default logic in order to locate their exact positions in the hierarchy.	default logic	Tomi Janhunen	1999		10.1007/3-540-46767-X_2	discrete mathematics;computer science;artificial intelligence;mathematics;propositional calculus;default logic;expressive power;circumscription;algorithm;satisfiability	Logic	-17.332998819547278	11.097017114004798	123722
3adf21c9f6c150e28709846c737689fe8a842dff	a model-theoretic framework for theories of syntax	direct statement;model-theoretic approach;distinctive virtue;model-theoretic framework;p iff;syntactic theory;linguistically significant syntactic property;constraint-based grammar formalisms;grammar mechanism;disparate theory;clearer expression	A natural next step in the evolution of constraint-based grammar formalisms from rewriting formalisms is to abstract fully away from the details of the grammar mechanism--to express syntactic theories purely in terms of the properties of the class of structures they license. By focusing on the structural properties of languages rather than on mechanisms for generating or checking structures that exhibit those properties, this model-theoretic approach can offer simpler and significantly clearer expression of theories and can potentially provide a uniform formalization, allowing disparate theories to be compared on the basis of those properties. We discuss L2,p, a monadic second-order logical framework for such an approach to syntax that has the distinctive virtue of being superficially expressive--supporting direct statement of most linguistically significant syntactic properties--but having well-defined strong generative capacity-languages are definable in L2K,p iff they are strongly context-free. We draw examples from the realms of GPSG and GB. 1 I n t r o d u c t i o n Generative grammar and formal language theory share a common origin in a procedural notion of grammars: the grammar formalism provides a general mechanism for recognizing or generating languages while the grammar itself specializes that mechanism for a specific language. At least initially there was hope that this relationship would be informative for linguistics, that by characterizing the natural languages in terms of languagetheoretic complexity one would gain insight into the structural regularities of those languages. Moreover, the fact that language-theoretic complexity classes have dual automata-theoretic characterizations offered the prospect that such results might provide abstract models of the human language faculty, thereby not just identifying these regularities, but actually accounting for them. Over time, the two disciplines have gradually become estranged, principally due to a realization that the structural properties of languages that characterize natural languages may well not be those that can be distinguished by existing language-theoretic complexity classes. Thus the insights offered by formal language theory might actually be misleading in guiding theories of syntax. As a result, the emphasis in generative grammar has turned from formalisms with restricted generative capacity to those that support more natural expression of the observed regularities of languages. While a variety of distinct approaches have developed, most of them can be characterized as constrain~ based--the formalism (or formal framework) provides a class of structures and a means of precisely stating constraints on their form, the linguistic theory is then expressed as a system of constraints (or principles) that characterize the class of well-formed analyses of the strings in the language. 1 As the study of the formal properties of classes of structures defined in such a way falls within domain of Model Theory, it's not surprising that treatments of the meaning of these systems of constraints are typically couched in terms of formal logic (Kasper and Rounds, 1986; Moshier and Rounds, 1987; Kasper and Rounds, 1990; Gazdar et al., 1988; Johnson, 1988; Smolka, 1989; Dawar and Vijay-Shanker, 1990; Carpenter, 1992; Keller, 1993; Rogers and Vijay-Shanker, 1994). While this provides a model-theoretic interpretation of the systems of constraints produced by these formalisms, those systems are typically built by derivational processes that employ extra-logical mechanisms to combine constraints. More recently, it has become clear that in many cases these mechanisms can be replaced with ordinary logical operations. (See, for instance: 1This notion of constraint-based includes not only the obvious formalisms, but the formal framework of GB as well.	automata theory;complexity class;constraint-based grammar;context-free language;formal grammar;formal language;formal system;generalized phrase structure grammar;generative grammar;information;language module;logical connective;logical framework;monad (functional programming);natural language;procedural programming;realms;rewriting;semantics (computer science);well-formed formula	James Rogers	1996			natural language processing;theoretical computer science;algorithm	NLP	-10.532812804542631	8.061913552567802	123782
510eb3d5dac63bbec13371a3f9b0e38e2288d2a4	building the signature of set theory using the mathsem program		Knowledge representation is a popular research field in IT. As mathematical knowledge is most formalized, its representation is important and interesting. Mathematical knowledge consists of various mathematical theories. In this paper we consider a deductive system that derives mathematical notions, axioms and theorems. All these notions, axioms and theorems can be considered a small mathematical theory. This theory will be represented as a semantic net. We start with the signature <Set; > where Set is the support set, is the membership predicate. Using the MathSem program we build the signature <Set;  where is set intersection,  is set union, -is the Cartesian product of sets, and is the subset relation.	cartesian closed category;formal system;knowledge representation and reasoning;semantic network;set theory	Andrey Luxemburg	2014	CoRR		axiomatic system;discrete mathematics;reverse mathematics;pure mathematics;mathematics;theory;extension by definitions;algorithm	AI	-7.74932330375133	13.361045420083881	123936
9730c1fd80c6227b7aa9bb59bd290a823efb2670	faulty sets of boolean formulas and łukasiewicz logic			łukasiewicz logic	Daniele Mundici;Claudia Picardi	2017	J. Log. Comput.	10.1093/logcom/exu073	mv-algebra;boolean algebra;boolean circuit;boolean domain;boolean expression;product term;many-valued logic;łukasiewicz logic	Logic	-13.523768563701712	13.015096319508775	123997
0ace4d0a66d066be3d4089e88fd8d19114308c1c	deciding the logical difference problem for el with role inclusions		We consider the logical difference problem for terminologies that are formulated in the lightweight description logic EL with role inclusions for role hierarchies, transitivity, and right-identity. The main result is that deciding whether two terminologies are logically different wrt. a signature can be done in ExpTime, thus it is more difficult than the subsumption problem for this logic but not more difficult than deciding logical difference without role inclusions. This paper extends the result for EL by Lutz and Wolter [11].	algorithm;decision problem;description logic;exptime;jack lutz;role hierarchy;subsumption architecture;vertex-transitive graph	Daniel Pokrywczynski;Dirk Walther	2008			description logic;discrete mathematics;mathematics;transitive relation;exptime;hierarchy;social psychology	AI	-9.498901634055382	10.845481840950567	124006
81fe5fcee9e181e41bcffbf75b38a6fcc0b8b966	the calculus of individuals and its uses		An individual or whole we understand to be whatever is represented in any given discourse by signs belonging to the lowest logical type of which that discourse makes use. What is conceived as an individual and what as a class is thus relative to the discourse within which the conception occurs. One task of applied logic is to determine which entities are to be construed as individuals and which as classes when the purpose is the development of a comprehensive systematic discourse. The concept of an individual and that of a class may be regarded as different devices for distinguishing one segment of the total universe from all that remains. In both cases, the differentiated segment is potentially divisible, and may even be physically discontinuous. The difference in the concepts lies in this: that to conceive a segment as a whole or individual offers no suggestion as to what these subdivisions, if any, must be, whereas to conceive a segment as a class imposes a definite scheme of subdivision—into subclasses and members. The relations of segments of the universe are treated in traditional logistic at two places, first in its theorems concerning the identity and diversity of individuals, and second in its calculus of membership and class-inclusion. But further relations of segments and of classes frequently demand consideration. For example, what is the relation of the class of windows to the class of buildings? No member of either class is a member of the other, nor are any of the segments isolated by the one concept identical with segments isolated by the other. Yet the classes themselves have a very definite relation in that each window is a part of some building. We cannot express this fact in the language of a logistic which lacks a part-whole relation between individuals unless, by making use of some special physical theory, we raise the logical type of each window and each building to the level of a class—say a class of atoms—such that any class of atoms that is a window will be included (class-inclusion) in some class that is a building. Such an unfortunate dependence of logical formulation upon the discovery and adoption of a special physical theory, or even upon the presumption that such a suitable theory could in every case be discovered in the course of time, indicates serious deficiencies in the ordinary logistic. Furthermore, a raising of type like that illustrated above is often precluded in a constructional system by other considerations governing the choice of primitive ideas.		Henry S. Leonard;Nelson Goodman	1940	J. Symb. Log.		domain relational calculus;mathematics;language	Theory	-11.383666519339787	5.69252893016503	124009
c3ff27a5986415437b8eddd85497bb9f490ad44f	arguments and misunderstandings: fuzzy unification for negotiating agents	bottom up;top down;edit distance;open system;agent communication language;logic programs	In this paper, we develop the notion of fuzzy unification and incorporate it into a novel fuzzy argumentation framework for extended logic programming. We make the following contributions: The argumentation framework is defined by a declarative bottom-up fixpoint semantics and an equivalent goal-directed top-down proof-procedure for extended logic programming. Our framework allows one to represent positive and explicitly negative knowledge, as well as uncertainty. Both concepts are used in agent communication languages such as KQML and FIPA ACL. One source of uncertainty in open systems stems from mismatches in parameter and predicate names and missing parameters. To this end, we conservatively extend classical unification and develop fuzzy unification based on normalised edit distance over trees.	argumentation framework;edit distance;fixed point (mathematics);han unification;knowledge query and manipulation language;logic programming;top-down and bottom-up design;unification (computer science)	Michael Schroeder;Ralf Schweimeier	2002	Electr. Notes Theor. Comput. Sci.	10.1016/S1571-0661(04)80585-1	computer science;theoretical computer science;top-down and bottom-up design;mathematics;programming language;algorithm	AI	-17.50640006839175	7.945712977530935	124024
f61e3a969e1bf199210ac4d1bbde69ae4976730d	a suggested conditional modus ponens	fuzzy logic;generalized modus ponens;force implication;modus ponens;conditional formulae	In this paper, in view of some paradoxical situations encountered in applying the Modus Ponens to Inference procedures in rule-based systems, we propose a new approach to perform the generalized Modus Ponens of Zadeh. Specifically, truth evaluations of conditional fuzzy information will be defined and used in Modus Ponens, opening the way to a unified framework for the aggregation of rules.		Nicole Vincent;Christiane Dujet	1997	International Journal of Uncertainty, Fuzziness and Knowledge-Based Systems	10.1142/S0218488597000087	fuzzy logic;direct proof;constructive dilemma;discrete mathematics;modus ponens;deduction theorem;computer science;artificial intelligence;modus ponendo tollens;mathematics;algorithm	Robotics	-15.439200550703262	6.541047261147913	124062
8b2fff9349be3241ebdeb5ce3688644156a5847e	on-the-fly macros	artificial intelligent;domain knowledge;on the fly	We present a domain-independent algorithm for planning that computes macros in a novel way. Our algorithm computes macros “on-the-fly” for a given set of states and does not require previously learned or inferred information, nor prior domain knowledge. The algorithm is used to define new domainindependent tractable classes of classical planning that are proved to include Blocksworld-arm and Towers of Hanoi.	arm architecture;algorithm;blocksworld;cobham's thesis;tower of hanoi	Omer Giménez	2009		10.1007/978-3-642-02261-6_13	computer science;artificial intelligence;machine learning;domain knowledge;algorithm	AI	-18.790835403721804	13.499399804182593	124122
0e7fdb35edb58621ffae8cc9a0df48ec7a46fc1c	lambda-calculus, combinators and the comprehension scheme	combinators;comprehension scheme;lambda calculus;set theory;type theory	The presentations of type theory based on a comprehension scheme and on $\lambda$-calculus are equivalent, both in the sense that the latter is a conservative extension of the former and that it can be encoded into it preserving provability. A similar result holds for set theory. A short version of this paper appeared in the proceedings of the conference {\it Typed Lambda-calculi and Applications (1995)}.}	combinatory logic;lambda calculus;list comprehension	Gilles Dowek	1995		10.1007/BFb0014051	combinatory logic;computer science;lambda calculus;programming language;type theory;algorithm;set theory	NLP	-11.71557794972252	15.159608856419084	124123
bab463e98c832f68307b678acc8e6341d3e575d8	verifying epistemic properties of multi-agent systems via action-based temporal logic	silicon;multiagent systems logic cryptographic protocols cryptography electrostatic precipitators information science testing communication system security sections intelligent agent;formal specification;multi agent system;color;temporal logic;action computation tree logic with unless operator;cryptographic protocols;epistemic transition system;security communication protocol;inference mechanisms;data mining;secure communication;epistemic reasoning;epistemic properties verifying;multi agent systems;computation tree logic;epistemic synchronous product;formal verification;model checking;action based temporal logic;image color analysis;cryptography;cognition;dining cryptographer;transition systems;performance model;actlw;temporal logic cryptographic protocols formal specification formal verification inference mechanisms multi agent systems;epistemic properties verifying multi agent systems action based temporal logic epistemic transition system epistemic synchronous product actlw action computation tree logic with unless operator model checking dining cryptographer security communication protocol epistemic reasoning;multiagent systems	This paper provides a specifying and verifying framework of a multi-agent system, with the emphasis on their epistemic features. We use an epistemic transition system to specify the agents and an epistemic synchronous product to specify the multi-agent system.We verify the system by means of a special action-based temporal logic - ACTLW for epistemic reasoning (ACTLW stands for action computation tree logic with unless operator). Using temporal and epistemic operators we create the appropriate formulae to perform model checking for the system. We test our method by the example of security communication protocol called dining cryptographers.	color;communications protocol;computation tree logic;dining cryptographers problem;formal specification;list of cryptographers;model checking;multi-agent system;temporal logic;transition system;verification and validation	Marina Bagic Babac;Aleksandar Babac;Mojca Ciglaric	2008	2008 International Conference on Computational Intelligence for Modelling Control & Automation	10.1109/CIMCA.2008.221	model checking;secure communication;discrete mathematics;cognition;temporal logic;formal verification;computation tree logic;computer science;cryptography;artificial intelligence;theoretical computer science;multi-agent system;formal specification;silicon;multimodal logic;algorithm	AI	-18.77875493365049	4.706497940080993	124312
16767970dced1d8fd29c00fc393fa189d10b08df	reflections on boyce-codd normal form	boyce codd normal form	1. Introduction	algorithm;benchmark (computing);boyce–codd normal form;database normalization;exptime;functional dependency;many-one reduction;reflection (computer graphics);relation (database);time complexity	Carol Helfgott LeDoux;Douglas Stott Parker	1982			boyce–codd normal form;computer science;database	AI	-14.055817879938314	14.219260368445195	124340
4c30f110873830973c465d10eb31efbdc506649a	ungroundedness in classical languages		The intuitive notion of groundedness for sentences in an interpreted language has received several characterizations in recent years. (See, for example, Kripke (1973, Gupta (1982) and Herzberger (1982).) These explanations tend to connect the property of ungroundedness with semantic closure: the ability of a language L to phrase a predicate which is true in L of precisely the sentences true in L (or of the Code1 numbers of these senten&). However, in an aside to his ‘Outline of a Theory of Truth’, Saul Kripke has called into question that ungroundedness is connected to semantic closure in an essential way:	interpreted language	Timothy McCarthy	1988	J. Philosophical Logic	10.1007/BF00249675	discrete mathematics;mathematics	AI	-12.012332662052264	7.3090711416601115	124419
1da4200c92b8ee90ab7df0611a6e5b4da29cfb3a	birkhoff completeness in institutions	proof theory;birkhoff completeness;horn sentences;institutional model theory;model theory;abstract substitutions	We develop an abstract proof calculus for logics whose sentences are ’Horn sentences’ of the form: (∀X)H =⇒ c and prove an institutional generalization of Birkhoff completeness theorem. This result is then applied to the particular cases of Horn clauses logic, the ’Horn fragment’1 of preorder algebras, order-sorted algebras and partial algebras and their infinitary variants. Mathematics Subject Classification (2000). Primary 03B22; Secondary 03C95, 18A15, 03F03.	algebraic specification;atom;birkhoff interpolation;common object request broker architecture;daniel g. bobrow;first-order logic;german research centre for artificial intelligence;horn clause;mathematics subject classification;modal logic;np-completeness;natural deduction;proof calculus	Mihai Codescu;Daniel Gâinâ	2008	Logica Universalis	10.1007/s11787-008-0035-1	discrete mathematics;pure mathematics;proof theory;mathematics;institutional model theory;algorithm;model theory;algebra	Logic	-11.57690971311706	12.985897212825863	124469
41ded9fc214a02153ed5af1508f90e7f2945c473	tractable instances of some hard deduction problems	hard deduction problem;tractable instance		cobham's thesis;natural deduction;optimization problem	Mukesh Dalal	1992			machine learning;artificial intelligence;computer science	NLP	-18.766722714061544	12.409924404449661	124657
6c899e26d7342a4c7cd4ddde51cca7d11f9de326	the search for a reduction in combinatory logic equivalent to λβ-reduction, part ii			combinatory logic	Jonathan P. Seldin	2017	Theor. Comput. Sci.	10.1016/j.tcs.2016.12.016		Logic	-13.577708888088479	14.223803182905142	124685
7376434a971869873abcfddd7df52ea6f4c1cbc5	truth-value semantics for a logic of existence			value semantics	Hugues Leblanc	1971	Notre Dame Journal of Formal Logic	10.1305/ndjfl/1093894214	dynamic logic;discrete mathematics;classical logic;description logic;higher-order logic;formal semantics;principle of bivalence;intermediate logic;game semantics;predicate functor logic;proof-theoretic semantics;formal semantics;axiomatic semantics;well-founded semantics;operational semantics;logic;multimodal logic;denotational semantics;philosophy of logic;autoepistemic logic	Logic	-13.199590683006292	12.7654037969794	124745
712be5600dbaa646d96b09d3c4e1c0520c0f40b2	nonstandard definability		investigate the notion of definabiity with respect to a fuH satisfaction c Peauo arithmetic. It is s that the Zdefinable subsets of 911 alwa provides a satkfa~on definition for standard formulas. Such a proper, therefore there exist recursively saturated models with no NI Nonstandard extensions of overspill and recursive saturation are utilized in developing a criterion for nonstandard deiinability. Finally, these techniques yield some information coaceming the extendibiity of f&l satisfaction classes from one inodel to anot	existential quantification;recursion	Stuart T. Smith	1989	Ann. Pure Appl. Logic	10.1016/0168-0072(89)90064-X		Logic	-8.954730845104558	15.614298673594671	124773
c017e961952a0d6241a0a891f593ca9a00a6ce9f	predicate calculus and naive set theory in pure combinatory logic	set theory	"""In [-1] Goodman introduces a weak version of weak combinatory logic with equality and within it defines a truth functional implication (3 k), conjunction (~k), and disjunction (wk) between functions of k variables. He also defines (in a metasystem) the notion of a decidable predicate of k variables and then proves interesting introduction and elimination rules for his connectives where all the variables are restricted to being """"defined"""" (equal to themselves) and some to being decidable predicates of k variables. He then briefly applies this to basing a propositional calculus by considering ~1, c~1 and w I as """"three valued truth functions"""". In this paper we take a """"decidable predicate of 0 variables"""" to be a proposition and show that 3o, no, and u o are more appropriate logical connectives which range over propositions as well as, in a restricted way, over defined terms. If all variables are taken to range over propositions the system obtained is classical. Then we show that within this framework universal and existential quantification can be defined but not quite all the usual properties can be proved. An extra axiom ((~)) which extends the system to a weak form of strong combinatory logic with equality (and still satisfies Goodman 's interpretation of his system) allows us to develop the full predicate calculus. Just as the notion of proposition (or decidable predicate of 0 variables) is defined metatheoretically and hence theorems such as: If a is a proposition then [a v Fa and : If a is a proposition then Fa is a proposition are metatheorems, we can define the notion of set metatheoretically as a decidable predicate of one variable and also prove theorems of set theory in the metatheory. ~1 and ~1 become set theoretic union and intersection and other set theoretic operators can be defined so that we have metatheorems giving us as sets not only the union and intersection of sets, but also the complement, power set and union set of a set. Similarly the Axioms of Infinity and Replacement can be shown to hold."""	combinatory logic;existential quantification;first-order logic;logical connective;meta-system;monadic predicate calculus;propositional calculus;set theory;weak formulation	Martin W. Bunder	1981	Arch. Math. Log.	10.1007/BF02011642	universal set;discrete mathematics;higher-order logic;topology;combinatory logic;class;predicate functor logic;naive set theory;mathematics;predicate variable;predicate;curry–howard correspondence;monadic predicate calculus;natural deduction;algorithm;set theory;algebra	Theory	-10.390267992099622	13.194323840246305	124854
c455b245849724013e6538e987a230af658c691b	symmetry as a method of proof	analyse logique;generic model;formal;principe;informel;formel;raisonnement;validite;isomorphism;informal;symetrie;symmetry;logical analysis;validity;theorie des modeles;isomorphisme;elimination;reasoning;principle;deduction	This paper is a logical study of valid uses of symmetry in deductive reasoning, of what underlying principles make some appeals to symmetry legitimate but others illegitimate. The issue is first motivated informally. A framework is then given covering a fairly broad range of symmetry arguments, and the formulation of symmetry provided is shown to be a valid principle of reasoning, as is a slightly stronger principle of reasoning, one that is shown to be in some sense as strong as possible. The relationship between symmetry and isomorphism is discussed, and finally the framework is extended to a more general model-theoretic setting.		Eric Hammer	1996	J. Philosophical Logic	10.1007/BF00257384	philosophy;epistemology;pure mathematics;principle;mathematics;isomorphism;symmetry;reason;algorithm;validity;elimination	Logic	-12.567592885347487	4.852115000240758	124856
8783612fab3ea75570e3c050b60e9f7fe1ae8928	formalizations for the consequence relation of visser's propositional logic	propositional logic	Disclaimer/Complaints regulations If you believe that digital publication of certain material infringes any of your rights or (privacy) interests, please let the Library know, stating your reasons. In case of a legitimate complaint, the Library will make the material inaccessible and/or remove it from the website. Please Ask the Library: http://uba.uva.nl/en/contact, or a letter to: Library of the University of Amsterdam, Secretariat, Singel 425, 1012 WP Amsterdam, The Netherlands. You will be contacted as soon as possible.		Katsumi Sasaki	1999	Reports on Mathematical Logic		modal logic;propositional formula;dynamic logic;zeroth-order logic;decidability;t-norm fuzzy logics;modal μ-calculus;classical logic;resolution;horn-satisfiability;tautology;many-valued logic;intuitionistic logic;intermediate logic;first-order logic;mathematics;predicate variable;propositional variable;well-formed formula;propositional calculus;philosophy of logic;autoepistemic logic	Web+IR	-11.018710391143095	8.915111863240767	124888
6ea63c981b7e3a297a0ee7b51800cb07378f210e	an o(n log n)-space decision procedure for intuitionistic propositional logic	decision procedure;propositional logic	A belt-type false twisting unit of the false twisting apparatus. First and second endless belts are running in directions opposite to each other to nip a yarn therebetween in the portion of intersection so that the yarn is false-twisted. A pressing roller is arranged to press a back surface of one of the belts in the portion of intersection.	decision problem;intuitionistic logic;propositional calculus	Jörg Hudelmaier	1993	J. Log. Comput.	10.1093/logcom/3.1.63	propositional formula;zeroth-order logic;decidability;t-norm fuzzy logics;modal μ-calculus;discrete mathematics;resolution;tautology;intuitionistic logic;computer science;intermediate logic;mathematics;propositional variable;propositional calculus;boolean function;atomic formula;algorithm;rule of inference	Logic	-12.218383198857044	12.899473434836395	124961
a0e5ea6841fb712e9e21534aa6ac835ef1e3cd5a	linearity and recursion in a typed lambda-calculus	lambda calculus;recursion;linear lambda calculus;pcf;typed lambda calculus	We show that the full PCF language can be encoded in L_rec, a syntactically linear λ-calculus extended with numbers, pairs, and an unbounded recursor that preserves the syntactic linearity of the calculus. We give call-by-name and call-by-value evaluation strategies and discuss implementation techniques for L_rec, exploiting its linearity.	programming computable functions;recursion;typed lambda calculus	Sandra Alves;Maribel Fernández;Mário Florido;Ian Mackie	2011		10.1145/2003476.2003500	lambda lifting;system f;deductive lambda calculus;fixed-point combinator;calculus of constructions;recursion;typed lambda calculus;dependent type;binary lambda calculus;normalisation by evaluation;pure type system;computer science;lambda calculus;simply typed lambda calculus;curry–howard correspondence;programming language;church encoding;lambda cube;natural deduction;type inhabitation;algorithm	PL	-12.327654952309336	17.68493201884058	124962
9a42521c1899d9237c979ced3f47b78e876a0ffe	complex systems: errata and changes		"""The inequ ality in the sentence in the middle of page 534 should be reversed to read """"In t he single-out put version unit i was accepted as a candidate for flipping if the condition WiSiS > 0 was sa t isfied ."""" Sinc e our comput er codes did not contain these erro rs, no ne of our published results needs to be modified. We would also like t o acknowledge useful discussion s wit h S. Barkan and D. Saad , and the partial support of this resear ch by a grant from Minerva."""	code;complex systems;sinc function;yousef saad	Dimitry Nabutovsky;Tal Grossman;Eytan Domany	1991	Complex Systems		machine learning;mathematics;applied mathematics;artificial intelligence;complex system	DB	-7.118805548176333	7.422057540150056	125183
bce206520cefd8508be32bf9f293756bdb1b08fc	application of risk theory approach to fuzzy abduction		In this article, learning under the absence or incompleteness of some facts or premises about the problem domain is considered. This task does not fall under semi-supervised learning in the classical sense, because there it is assumed that the target signals are known and correct. The assumption of incompleteness is, however, natural for pattern recognition, e.g. for medical diagnostics.		V. N. Tsypyschev	2017		10.1007/978-3-319-57264-2_2	deductive reasoning;fuzzy logic;machine learning;mathematics;artificial intelligence;fuzzy control system;problem domain;premises	AI	-15.260864385510505	5.014854433473409	125322
28baa6195b8628f50e04b8ac7c8258db36113fad	la honte. quand émotion et raisonnement sont liés	intelligence artificielle;logique en informatique;apprentissage;informatique et langage	Some emotions, described as « basic » in the literature, are a lmost reflexes. Other emotions are triggeredvia pattern matchingmechanisms operating on specific mental states (most often epistemic and motivational) to determine the (i n)congruence of these states. Yet other emotions come from more or less complex cognitive mech anisms (and we thus call them complex emotions) such as counterfactual reasoning ( e. .for guilt or regret), normative judgement (e.g.shame, pride, etc.), probabilistic evaluations of the world ( e.g.surprise),etc.. In the following, we study and formalise the complex emotion of sha me by comparing it in particular with that of guilt. MOTS-CLÉS :émotions, honte, culpabilité, logique modale.	comefrom;counterfactual conditional;linear algebra;mental state;regret (decision theory)	Carole Adam;Dominique Longin	2014	Revue d'Intelligence Artificielle	10.3166/ria.28.43-66		AI	-15.184549524427576	4.812773201036892	125444
1b77583fcdedab560d33ba2179aefed01e73f9da	possible model semantics for disjunctive databases ii (extended abstract)			disjunctive normal form	Chiaki Sakama	1990			algorithm;theoretical computer science;programming language;semantics;database;computer science;stable model semantics	Theory	-15.838856775407224	13.688402011024763	125494
bd14fe7c7440655c6985f79d99a5d9e7299c3a3e	a generalization of the second incompleteness theorem and some exceptions to it	frege and hilbert style proofs;second incompleteness theorem	This paper will introduce the notion of a naming convention and use this paradigm to both develop a new version of the Second Incompleteness Theorem and to describe when an axiom system can partially evade the Second Incompleteness Theorem.	axiomatic system;programming paradigm	Dan E. Willard	2006	Ann. Pure Appl. Logic	10.1016/j.apal.2005.12.010	discrete mathematics;fundamental theorem;mathematics;algorithm;full employment theorem	Logic	-10.03072500855032	11.366929859156354	125520
d2877fecf873f423700002520a246fe243148e80	cut-elimination and interpolation for ω-logic	cut elimination;geometric structure	In 1978, Girard introducedβ-logic to generalizeω-logic. The basic category ofβ-logic is the categoryON of ordinals. For geometric structure reasons, Girard changed the basic categoryON into the more general categoryWF of well-founded orders (1983). The logic he obtained was calledΩ-logic. Here, we extend (unpublished) results ofβ-logic toΩ-logic.	interpolation	Jacqueline Vauzeilles	1988	Arch. Math. Log.	10.1007/BF01620764	discrete mathematics;geometry of interaction;mathematics;algorithm	Theory	-9.632380228946587	12.582066868388814	125522
1b4682ab0336e177625b4b0fe1ca82248d53af07	algebraization of hybrid logic with binders	logica algebraica;operator algebra;algebraic semantic;algebra relacional;algebraic logic;logica hibrida;algebre kleene;operateur booleen;boolean operator;boolean algebra;semantica algebraica;logique ordre 1;logique algebrique;algebra kleene;algebre boole;hybrid logic;algebre operateur;representation theorem;semantique algebrique;kleene algebra;algebre relationnelle;logique hybride;relational algebra;first order logic;algebra operador;algebra boole;logica orden 1;operador de boole	This paper introduces an algebraic semantics for hybrid logic with binders H(↓, @). It is known that this formalism is a modal counterpart of the bounded fragment of the first-order logic, studied by Feferman in the 1960’s. The algebraization process leads to an interesting class of boolean algebras with operators, called substitution-satisfaction algebras. We provide a representation theorem for these algebras and thus provide an algebraic proof of completeness of hybrid logic.	algebraic semantics (computer science);first-order logic;first-order predicate;formal system;hybrid logic;linear algebra;modal logic	Tadeusz Litak	2006		10.1007/11828563_19	algebraic logic;mv-algebra;boolean algebra;discrete mathematics;relational algebra;pure mathematics;kleene algebra;first-order logic;mathematics;operator algebra;interior algebra;abstract algebraic logic;algorithm;algebra	Logic	-13.678703323015743	15.313139244393492	125681
ff0296346c2b4304598f0dd9fb5f71faf48eaec1	deep probabilistic logic programming		Probabilistic logic programming under the distribution semantics has been very useful in machine learning. However, inference is expensive so machine learning algorithms may turn out to be slow. In this paper we consider a restriction of the language called hierarchical PLP in which clauses and predicates are hierarchically organized. In this case the language becomes truth-functional and inference reduces to the evaluation of formulas in the product fuzzy logic. Programs in this language can also be seen as arithmetic circuits or deep neural networks and inference can be reperformed quickly when the parameters change. Learning can then be performed by EM or backpropagation.	algorithm;arithmetic circuit complexity;artificial neural network;backpropagation;deep learning;dynamic programming;em (typography);fuzzy logic;gradient descent;integrated circuit;logic programming;machine learning;pl/p;t-norm fuzzy logics	Arnaud Nguembang Fadja;Evelina Lamma;Fabrizio Riguzzi	2017			inductive programming;theoretical computer science;probabilistic ctl;functional logic programming;probabilistic argumentation;horn clause;logic programming;concurrent constraint logic programming;prolog;computer science	AI	-19.061157177741386	12.103906396924806	125747
859d7bc51d4cc916d9fb97222427e082fefd245b	reasoning with imperfect context and preference information in multi-context systems	total order;argumentation;context information;logic;semantics;information flow;agents;incomplete preferences;intelligence;distributed algorithm;defeasible reasoning;partial order	Multi-Context Systems (MCS) are logical formalizations of distributed context theories connected through a set of mapping rules, which enable information flow between different contexts. Recent studies have proposed adding non-monotonic features to MCS to handle problems such as incomplete, uncertain or ambiguous context information. In previous work, we proposed a non-monotonic extension to MCS and an argument-based reasoning model that enable handling cases of imperfect context information based on defeasible reasoning. To deal with ambiguities that may arise from the interaction of context theories through mappings, we used a preference relation, which is represented as a total ordering on the system contexts. Here, we extend this approach to additionally deal with incomplete preference information. To enable this, we replace total preference ordering with partial ordering, and modify our argumentation framework and the distributed algorithms that we previously proposed to meet the new requirements.		Grigoris Antoniou;Antonis Bikakis;Constantinos Papatheodorou	2010		10.1007/978-3-642-15576-5_1	distributed algorithm;intelligence;information flow;computer science;artificial intelligence;data mining;semantics;logic;defeasible reasoning;total order;algorithm	HCI	-17.80535546521349	6.17108890811486	125751
404229fc0c0abef86f52d7cf6d6631cf2645321e	verification of branch-time property based on dynamic description logic	verification;action theory;temporal description logic;dynamic description logic	The dynamic description logic DDL provides formalism for describing dynamic system in the semantic Web environment Model checking is a formal verification method based on state transition system. In this paper, we bring dynamic description logic into model checking. Firstly, state transition systems considered in model checking are modeled as complex actions in dynamic description logic. Secondly, a kind of temporal description logic DL-CTL is introduced to specify temporal properties on state transition systems, where DL-CTL is a DL-based extension of propositional branch-time temporal logic CTL. Finally, verification algorithm is presented with the help of reasoning mechanisms provided by description logic.	description logic	Yaoguang Wang;Liang Chang;Fengying Li;Tianlong Gu	2014		10.1007/978-3-662-44980-6_18	dynamic logic;zeroth-order logic;model checking;discrete mathematics;linear temporal logic;description logic;interval temporal logic;computation tree logic;computer science;theoretical computer science;bunched logic;signature;substructural logic;multimodal logic;algorithm;temporal logic of actions;autoepistemic logic	EDA	-16.161967574063645	12.837686088714852	125806
d97d137003dac20f15dde26ac5292587a7cfd2f5	a decidable extension of sriq with disjunctions in complex role inclusion axioms		This paper establishes the decidability of SR⊔IQ which has composition-based role Inclusion axioms (RIAs) of the form R1 ◦ · · · ◦ Rn⊑̇T1 ⊔ · · · ⊔ Tm. Also the consistency of an Abox A of SR⊔IQ DL w.r.t. Rbox R is established. Motivation for this kind of RIAs comes from applications in the field of manufactured products as well as other conceptual modeling applications such as family relationships. The solution is based on a tableau algorithm.	abox;algorithm;long division;method of analytic tableaux;peano axioms;semantics (computer science)	Milenko Mosurovic;Henson Graves;Nenad Krdzavac	2012			conceptual model;abox;discrete mathematics;of the form;axiom;algorithm;decidability;mathematics	Web+IR	-11.699724176082864	12.456738427601177	126042
60286c71bab715dc7566aa20108b60da592975d7	dialogue game tree with nondeterministic additive consolidation	dialogue games	In this paper, we will show that theory-based legal argumentation can be formalized as a dialogue game tree. In [37], a variation of Olsson's additive consolidation [29] is used for the formalization, but this dialogue game was not treed, because, in each move on the dialogue, the consolidation must construct a unique coherent theory, but not several coherent theories. Therefore, we abandon the requirement that rational consolidation must be unique, and we allow the consolidation to generate plural outputs. Such an operator will be applied for a dialogue game tree with Bench-Capon and Sartor's example.		Yoshitaka Suzuki	2006		10.1007/978-3-540-69619-3_7	computer science;artificial intelligence;communication;algorithm	ECom	-16.24747464375442	4.325651798129149	126202
1b7ddddc9ef7c00928d4eb66741f02fed48c3fb6	biases and their effects in inductive logic programming	inductive logic programming;inductive learning;logic programs	In inductive learning, the shift of the representation language of the hypotheses from attribute-value languages to Horn clause logic used by Inductive Logic Programming systems accounts for a very complex hypothesis space. In order to reduce this complexity, most of these systems use biases. In this paper, we study the innuence of these biases on the size of the hypothesis space. For this comparison, we rst identify the basic constituents the biases are combined of. Then, we discuss the restrictions set on the distribution of terms in the clause by the constituents of the bias. The eeects of several constituents and of some combinations are shown by seven experiments.	experiment;horn clause;inductive logic programming;inductive reasoning	Birgit Tausend	1994		10.1007/3-540-57868-4_91	inductive bias;statistical relational learning;functional logic programming;inductive programming	AI	-13.150180755451016	8.321883828253522	126376
ea4a7f7001e7a043b85db49a71d74db7b6a804c6	ticker: a system for incremental asp-based stream reasoning		In complex reasoning tasks, as expressible by Answer Set Programming (ASP), problems often permit for multiple solutions. In dynamic environments, where knowledge is continuously changing, the question arises how a given model can be incrementally adjusted relative to new and outdated information. This paper introduces Ticker, a prototypical engine for well-defined logical reasoning over streaming data. Ticker builds on a practical fragment of the recent rule-based language LARS which extends Answer Set Programming for streams by providing flexible expiration control and temporal modalities. We discuss Ticker’s reasoning strategies: First, the repeated one-shot solving mode calls Clingo on an ASP encoding. We show how this translation can be incrementally updated when new data is streaming in or time passes by. Based on this, we build on Doyle’s classic justification-based truth maintenance system (TMS) to update models of non-stratified programs. Finally, we empirically compare the obtained evaluation mechanisms. This paper is under consideration for acceptance in TPLP.	answer set programming;reason maintenance;rule-based system;stable model semantics;streaming media	Harald Beck;Thomas Eiter;Christian Folie	2017	TPLP	10.1017/S1471068417000370	computer science;theoretical computer science;modalities;streams;logical reasoning;encoding (memory);streaming data;answer set programming;reason maintenance;expiration	AI	-18.321019907215263	8.10600569690472	126389
aea658803fbfc70e9f2893b6ee8d989e825153c1	tractable inquiry in information-rich environments		In the contemporary autonomous systems the role of complex interactions such as (possibly relaxed) dialogues is increasing significantly. In this paper we provide a paraconsistent and paracomplete implementation of inquiry dialogue under realistic assumptions regarding availability and quality of information. Various strategies for dealing with unsure and inconsistent information are analyzed. The corresponding dialogue outcomes are further evaluated against the (paraconsistent and paracomplete) distributed beliefs of the group. A specific 4-valued logic underpins the presented framework. Thanks to the qualities of the implementation tool: a rule-based query language 4QL, our solution is both expressive and tractable. 1 Paraconsistent Nonmonotonic Dialogues The synergistic effect of collaborating agents is achieved by their proper communication. However, in dynamic and unpredictable environments up-to-date, sure and complete information is hardly obtainable. This leads to conflicts, uncertainty and paracompleteness, particularly when handling information originating from multiple sources of diverse credibility, quality or significance. In this paper we introduce a new approach to logical modeling of conversing agents, which are prepared to handle inconsistency and ignorance. To this end, a paracomplete and paraconsistent (i.e., tolerating inconsistencies) logic is necessary, supported by two new truth values: unknown (u) and inconsistent (i). In line with other paraconsistent approaches to modeling dialogues [Takahashi and Sawamura, 2004; Prakken, 2010; Black and Hunter, 2009], inconsistency does not trivialize reasoning but is treated as first-class citizen alike true (t) and false (f). In our system the following choices have been made. • The four-valued logic of [Vitória et al., 2009] underpins the solution. • Unknown or inconsistent conclusions do not enforce termination of the reasoning process. ∗This research is partially supported by Warsaw Center of Mathematics and Computer Science. • Such conclusions can be handled via lightweight forms of nonmonotonic reasoning. Entailment in logic amounts to deriving conclusions from theories that can be seen as complex knowledge bases. However, instead of querying arbitrary theories, in order to reduce complexity we tailor them to their tractable versions like specific rule-based systems. Thus, instead of reasoning in logical systems of high complexity, we query paraconsistent knowledge bases. Only recently has a sufficiently expressive tool existed for creating and querying them in polynomial time: 4QL a DATALOG¬¬-like four-valued rule-based query language. Following this shift in methodology, the contribution of this paper is an implementation of a tractable, paraconsistent and paracomplete multi-party inquiry dialogue suitable for agents situated in information-rich environments. The overall goal of inquiry is to collectively solve a theoretic problem, resulting in the common knowledge about the solution. Consider a multi-agent system where each swarm agent is specialized in gathering different type of information via a polling system, and a supervisor agent which verifies certain information for the human user. Suppose the human user asks if it is safe to travel to place X (safe(X)?) and none of the agents knows the answer. Engaging in inquiry on the topic safe(X) allows agents to share only the relevant pieces of their (possibly vast) knowledge and collectively arrive at a final recommendation for the human user. Although conflicts may naturally appear on many different levels of such group activity [Dunin-Kȩplicz et al., 2014], it is not the goal of inquiry but rather persuasion to resolve them. Unlike the classical case [Walton and Krabbe, 1995], our approach to inquiry permits 4-valued statements. It turns out that the initial valuation of the topic separates Inquiry-What from Inquiry-That. In both cases, several strategies to handle missing and inconsistent information are presented and formally investigated. The final outcomes of such dialogues are compared against the (possibly inconsistent and incomplete) distributed knowledge of the conversing group [Fagin et al., 1995]. In this regard the soundness of a strategy means that whenever a dialogue terminates with a given conclusion, the same result would be obtained by an individual reasoning from the union of all the agents’ belief bases. Accordingly, if a solution is obtainable from the union of agents beliefs, an inquiry under a complete strategy will reach it. The main result of this research concerns soundness and completeness Proceedings of the Twenty-Fourth International Joint Conference on Artificial Intelligence (IJCAI 2015)	autonomous robot;autonomous system (internet);case-based reasoning;cobham's thesis;computer science;fagin's theorem;first-class citizen;four-valued logic;interaction;international joint conference on artificial intelligence;logic programming;multi-agent system;non-monotonic logic;paraconsistent logic;polynomial;query language;rule-based system;situated;swarm;synergy;theory;time complexity;tomotaka takahashi;value (ethics)	Barbara Dunin-Keplicz;Alina Strachocka	2015			computer science;artificial intelligence;machine learning;mathematics;programming language;algorithm	AI	-18.356798312227774	5.284617016764407	126426
30c528a6981d9fb99fa4a9847a6998f837ddd546	how to prove higher order theorems in first order logic	second order;soundness;higher order;second order logic;theorem prover;first order;translation;morphism;completeness;higher order logic;first order logic	In this paper we are interested in using a first order theorem prover to prove theorems that are formulated in some higher order logic. To this end we present translations of higher order logics into first order logic with flat sorts and equality and give a sufficient criterion for the soundness of these translations. In addition translations are introduced that are sound and complete with respect to L. Henkin's general model semantics. Our higher order logics are based on a restricted type structure in the sense of A. Church, they have typed function symbols and predicate symbols, but no sorts. Die Grenzen meiner Spache bedeuten die Grenzen meiner Welt. 1 Introduction First order logic is a powerful tool for expressing and proving mathematical facts. Nevertheless higher order expressions are often better suited for the representation of mathematics and in fact almost all mathematical text books rely on some higher order fragments for expres-siveness. In order to prove such theorems mechanically there are two options: either to have a theorem prover for higher order logic such as TPS [Andrews et al., 1990] or to translate the higher order constructs into corresponding first order expressions and to use a first order theorem prover. As important as the first development is-which may be the way of the future-we follow the second approach because strong first order theorem provers are available today. The Limitations of First Order Logic First order logic and the set theories of ZERMELO-FRAENKEL or VON NEUMANN-GODEL-BERNAYS have been developed for the formalization of mathematical concepts and for reasoning about them. Other approaches are RUSSEL'S ramified theory of types and CHURCH'S simple theory of types which formalize higher Why and How Translation Representing knowledge in an adequate way-adequate with respect to the naturalness of the representation of the object-is one thing, the other thing is to have an adequate and strong form of reasoning. If one uses higher Kerber 137	automated theorem proving;book;first-order logic;history of type theory	Manfred Kerber	1991			discrete mathematics;description logic;higher-order logic;computer science;first-order logic;mathematics;programming language;second-order logic;algorithm	Logic	-12.272828771010564	13.68601050446553	126693
4bd06d5f35b7ded4b6a3faf2db76ec9722bfb794	some generalized type functional dependencies formalized as equality set on matrices	functional dependency	Abstract   In this paper we deal with functional (f) dependencies and their generalizations, the dual, strong (d, s) and weak (w) dependencies. We give new axioms instead of Armstrong's and Czedli's and axiomatize the full w-families. Our axioms are based on a characterization of equality-sets of matrices. We demonstrate an essential difference between the weak dependency and the rest. We give an estimation for the number of rows which is needed for some antichain of an  n -element set to represent it as the set of candidate keys in a relation. Finally, we give a combinatorial characterization of the generating sets with minimal cardinality of full f-families.	functional dependency	János Demetrovics;Gy. Gyepesi	1983	Discrete Applied Mathematics	10.1016/0166-218X(83)90098-7	discrete mathematics;armstrong's axioms;dependency theory;mathematics;functional dependency;algorithm	PL	-6.115747470485807	11.705665130693756	126722
b9ebe1c85eb869c1f692044a7bca05671d45a437	general preferential entailments as circumscriptions	representacion conocimientos;circonscription;circumscription;preferencia;preference;cumulant;knowledge representation;representation connaissances;large classes;circonscripcion	A (general) preferential entailment is defined by a “preference relation” among “states”. States can be either interpretations or sets of interpretations, or “copies” of interpretations or of sets of interpretations, although it is known that the second kind and the fourth one produce the same notion. Circumscription is a special case of the simplest kind, where the states are interpretations. It is already known that a large class of preferential entailments where the states are copies of interpretations, namely the “cumulative” ones, can be expressed as circumscriptions in a greater vocabulary. We extend this result to the most general kind of general preferential entailment, the additional property requested here is “loop”, a strong kind of “cumulativity”. The greater vocabulary needed here is large, but only a very simple and small set of formulas in this large vocabulary is necessary, which should make the method practically useful.	circumscription (logic);preferential entailment;vocabulary	Yves Moinard	2001		10.1007/3-540-44652-4_47	knowledge representation and reasoning;discrete mathematics;computer science;artificial intelligence;mathematics;preferential entailment;circumscription;algorithm;cumulant	ML	-15.563015409513822	8.860506159512486	126750
c006ce87f2cf51ebb7f291ee66a197895905a4df	heterogeneous sld resolution		Due to a significant oversight in the definition of computation rules, the current theory of SLD resolution is not general enough to model the behavior of some PROLOG implementations with advanced control facilities. In this paper, Heterogeneous SLD resolution is defined. It is an extension of SLD resolution which increases the “don't care” nondeterminism of computation rules and can decrease the size of the search space. Soundness and completeness, for success and finite failure, are proved using similar results from SLD resolution. Though Heterogeneous SLD resolution was originally devised to model current systems, it can be exploited more fully than it is now. As an example, an interesting new computation rule is described. It can be seen as a simple form of intelligent backtracking with few overheads.	sld resolution	Lee Naish	1984	J. Log. Program.	10.1016/0743-1066(84)90027-X	algorithm;implementation;theoretical computer science;backtracking;computation;completeness (statistics);prolog;sld resolution;soundness;distributed computing;computer science	Logic	-17.69934443734957	11.452868685733169	127001
e7515642f973eb728a24a99317281f3278431c48	phase semantics and sequent calculus for pure noncommutative classical linear propositional logic	phase semantics;sequent calculus;noncommutative classical linear propositional	The linear logic introduced in [3] by J.-Y. Girard keeps one of the so-called structural rules of the sequent calculus: the exchange rule . In a one-sided sequent calculus this rule can be formulated as The exchange rule allows one to disregard the order of the assumptions and the order of the conclusions of a proof, and this means, when the proof corresponds to a logically correct program, to disregard the order in which the inputs and the outputs occur in a program. In the linear logic introduced in [3], the exchange rule allows one to prove the commutativity of the multiplicative connectives, conjunction (⊗) and disjunction (⅋). Due to the presence of the exchange rule in linear logic, in the phase semantics for linear logic one starts with a commutative monoid. So, the usual linear logic may be called commutative linear logic . The aim of the investigations underlying this paper was to see, first, what happens when we remove the exchange rule from the sequent calculus for the linear propositional logic at all, and then, how to recover the strength of the exchange rule by means of exponential connectives (in the same way as by means of the exponential connectives ! and ? we recover the strength of the weakening and contraction rules).	propositional calculus;sequent calculus	V. Michele Abrusci	1991	J. Symb. Log.		modal logic;zeroth-order logic;linear logic;discrete mathematics;classical logic;cut-elimination theorem;geometry of interaction;many-valued logic;intuitionistic logic;intermediate logic;phase space;formal semantics;mathematics;proof calculus;monoid;propositional variable;well-formed formula;noncommutative logic;propositional calculus;sequent;sequent calculus;natural deduction;tree;algorithm;rule of inference;algebra;autoepistemic logic;satisfiability	Logic	-10.840340828677302	13.670543180427716	127098
8b19a299730f8a5d383b329b334ae86149334601	orthomodular lattices as implication algebras	satisfiability;boolean algebra;quantum logic;partially ordered set;orthomodular lattice;partial order	Recent progress has been made in the study of implication connectives on orthomodular lattices (see [6] and [7]). Some of this research has been motivated by the delicate question of the appropriate form of the conditional sentence in a quantum logic. The purpose of this paper is to show that an orthomodular lattice can be axiomatized in terms of an “implication connective” on a set with a distinguished element. That such axiomatizations exist for Boolean algebras, a special family of orthomodular lattices, is well known to both logicians and mathematicians (see for example [l]). Finch in [3] began with an orthocomplemented partially ordered set with an implication connective and negation operator satisfying certain axioms, and proved the poset is actually an orthomodular lattice. We extend the work of Finch by beginning with a set P with an element 0 in P and with an abstractly given implication connective 3. The triple (P, 0, 3) is called a quantum implication algebra and is an algebra in the usual sense. No assumption is made about a partial order on P. Nevertheless, we prove that the theory of quantum implication algebras is co-extensive with the theory of orthomodular lattices. In all fairness, both Finch and I are using the original ideas of D. J. Foulis (see [4] and [5]) to accomplish the above mentioned results. I’m sure both of us are indebted to him for his insights.		Robert Piziak	1974	J. Philosophical Logic	10.1007/BF00257483	partially ordered set;combinatorics;discrete mathematics;mathematics;linguistics;map of lattices;complete boolean algebra;algebra	Logic	-6.868059896906409	12.178693493717626	127150
325ed735d1242e249def4b034ab445063b9eaa03	remarks on remarks on many-sorted equational logic	equational logic	"""data types may be challenged in at least three different ways: the need to accomodate empty carriers may be doubted; the correctness of our results on deduction may be questioned (see [Ehrig & Mahr 85], following [Loeckx & Mahr 85]); and, more fundamentally, the convenience of many-sorted algebra for applications to abstract data types may be doubted (e.g., [Goguen 78, Goguen & Meseguer 86]). We address each issue in a section below. 2 M u c h A d o a b o u t N o t h i n g We first address emptiness, following [Mesegner & Goguen 85b]. There are two basic approaches to avoiding the problems of empty carriers: (1) restricting the class of allowed signatures (for example, so that empty carriers are disallowed or restricted); or (2) directly restricting the class of models (e.g., requiring non-empty carriers, as in standard model theory}. However, neither approach is satisfactory. Restricting signatures so as to limit the possibility of algebras having empty carriers, unfortunately excludes much that is important for applications to parameterized abstract data types. Perhaps the least restrictive restriction is the """"sensible"""" signatures of [Huet & Oppen 80]: first, define a sort s to be s t r ic t in a signature ~E iff either there is a constant symbol of sort s in ~ or else there is a function symbol in ~ of target sort s with all its source sorts strict; then E is sensible iff every non-constant function symbol with strict target sort has only strict source sorts. Now let us consider the theory PREORDER of preordered ordered sets, with the ordering relation represented as a Boolean valued-function on the sort E l t of elements; this theory might be used, for example, used to specify the interface of a parameterized sorting algorithm, stating that it is guaranteed to work correctly only if the elements to be sorted have an ordering relation which actually satisfies the transitive and reflexive laws. The signature of PREORDER is not sensible, since the sort Bool is strict while the sort E l i is not. There are also many other important interface theories which are not sensible; thus, the restriction to sensible signatures is not sensible in the study of parameterized abstract data types. If, following the second approach, one restricts models to those algebras having no empty"""	abstract data type;antivirus software;constant function;correctness (computer science);electronic signature;fuzzy set;natural deduction;sorting algorithm;theory	Joseph A. Goguen;José Meseguer	1987	SIGPLAN Notices	10.1145/24714.24719	equational logic;computer science;programming language	Logic	-6.734699530613604	13.33904058470813	127234
cb0b9bbb2b6bafc0d07fe77474b9740f5738a0ff	on the cobham-semenov theorem	numeration system	We prove that under reasonable conditions, the Cobham-Semenov theorem remains true for two numeration systems, one of which is nonstandard.	automatic sequence	F. Point;Véronique Bruyère	1997	Theory of Computing Systems	10.1007/BF02679449	discrete mathematics;no-go theorem;computer science;pure mathematics;mathematics	Logic	-7.966882733596444	13.49682697508865	127324
e7f9bd44a2bebf594d91013c7bd3df876cbc1c19	inductive principles of the search for empirical dependences (methods based on weak convergence of probability measures)	probability measure;weak convergence	This chapter discusses the inductive principles of the search for empirical dependences. Problems of inductive type, when a general law has to be found on the basis of a finite number of observations, are one of the important trends of analysis. To begin investigations in the field of induction, one should first formulate the general model embracing as broad a class as possible of problems classified as inductive. This model will be the problem of expected risk minimization from empirical data. To obtain the conditions of consistency solely in terms of the characteristics of the set as a whole, a stronger concept of consistency is used. In the 1920s, a philosopher, K. Popper, working on induction theory suggested the principle of falsifiability. Popper thought that the necessary condition for the justification of the induction method is a possibility of falsifying the method—the existence of such a set of propositions for which a general rule cannot be found.		Vladimir Vapnik	1989			probability measure;computer science;artificial intelligence;calculus;mathematics;weak convergence;algorithm;statistics	ML	-11.725007281479337	4.249185875075499	127568
42cd65eab4ef90ec0c2df0c49f0a17d9f77131de	a uniform semantics for embedded interrogatives: an answer, not necessarily the answer	questions;humanidades;knowledge;exhaustivity;filosofia etica;factivity;embedded questions;veridicality;attitude predicates;interrogative semantics;presupposition	Our paper addresses the following question: Is there a general characterization, for all predicates P that take both declarative and interrogative complements (responsive predicates in the sense of Lahiri’s 2002 typology, see Lahiri, Questions and Answers in Embedded Contexts, OUP, 2002), of the meaning of the P-interrogative clause construction in terms of the meaning of the P-declarative clause construction? On our account, if P is a responsive predicate and Q a question embedded under P, then the meaning of ‘P + Q’ is, informally, “to be in the relation expressed by P to some potential complete answer to Q”. We show that this rule allows us to derive veridical and non-veridical readings of embedded questions, depending on whether the embedding verb is veridical or not, and provide novel empirical evidence supporting the generalization. We then enrich our basic proposal to account for the presuppositions induced by the embedding verbs, as well as for the generation of intermediate exhaustive readings of embedded questions (Klinedinst and Rothschild in Semant Pragmat 4:1–23, 2011).	biological anthropology;embedded system;google questions and answers;predicate (mathematical logic)	Benjamin Spector;Paul Égré	2015	Synthese	10.1007/s11229-015-0722-4	philosophy;presupposition;mathematics;linguistics;knowledge;algorithm	Logic	-12.627321612156306	6.30861863441435	127678
2608ae91c19f927f3ab40703081b36506fb1f261	algebraic specifications, higher-order types, and set-theoretic models	algebraic specification;theoretical model;preuve programme;program proof;formal specification;functional type;logical programming;specification programme;higher order;specification formelle;function space;especificacion formal;cartesian product;first order;programmation logique;informatique theorique;prueba programa;program specification;programacion logica;especificacion programa;computer theory;informatica teorica	In most algebraic specification frameworks, the type system is restricted to sorts, subsorts, and first-order function types. This is in marked contrast to the so-called model-oriented frameworks, which provide higher-order types, interpreted set-theoretically as Cartesian products, function spaces, and power-sets. This paper presents a simple framework for algebraic specifications with higher-order types and set-theoretic models. It may be regarded as the basis for a Horn-clause approximation to the Z framework, and has the advantage of being amenable to prototyping and automated reasoning. Standard set-theoretic models are considered, and conditions are given for the existence of initial reducts of such models. Algebraic specifications for various set-theoretic concepts are considered.	algebraic specification;approximation;automated reasoning;cartesian closed category;first-order reduction;function type;higher-order function;horn clause;linear algebra;set theory;type system	Hélène Kirchner;Peter D. Mosses	1998		10.1007/3-540-49253-4_27	discrete mathematics;higher-order logic;function space;computer science;first-order logic;formal specification;cartesian product;mathematics;programming language;algorithm	PL	-14.170851855782272	17.560986145447135	127701
47ff14480746e0c61a7026710c00b318a9844f64	s4 enriched multimodal categorial grammars are context-free: corrigendum	lambek grammar;context free language;context free;multimodal grammar;chomsky hierarchy;categorial grammar	"""Plummer [A.R. Plummer, S4 enriched multimodal categorial grammars are context-free, Theoretical Computer Science 388 (2007) 173-180] showed that categorial grammars based on NL""""S""""4, the non-associative multimodal Lambek calculus enriched with S4 axioms, weakly recognize context-free languages. However, the proof contains a gap. We correct the earlier proof, utilizing a technique given in Buszkowski [W. Buszkowski, Lambek calculus with nonlogical axioms, in: C. Casadio, P.J. Scott, R.A.G. Seely (Eds.), Language and Grammar: Studies in Mathematical Linguistics and Natural Language, in: Lecture Notes, vol. 168, Center for the Study of Language and Information, Stanford, 2005, pp. 77-93]. This technique immediately proves that NL""""S""""4 is decidable in polynomial time."""	categorial grammar;context-free language;multimodal interaction	Andrew R. Plummer	2008	Theor. Comput. Sci.	10.1016/j.tcs.2008.02.042	natural language processing;context-sensitive grammar;tree-adjoining grammar;generative grammar;indexed grammar;categorial grammar;link grammar;computer science;chomsky hierarchy;extended affix grammar;context-free language;programming language;mildly context-sensitive grammar formalism;combinatory categorial grammar;algorithm	NLP	-13.794473293743122	11.40721582055525	127829
e9f226ac5722e2377a5ced14b427a0d7bc774549	solving the $100 modal logic challenge	100 challenge;modal logic;design and implementation;subset relationship;theoretical foundation	We present the theoretical foundation, design, and implementation, of a system that automatically determines the subset relation between two given axiomatizations of propositional modal logics. This is an open problem for automated theorem proving. Our system solves all but six out of 121 instances formed from 11 common axiomatizations of seven modal logics. Thus, although the problem is undecidable in general, our approach is empirically successful in practically relevant situations. © 2007 Elsevier B.V. All rights reserved.	automated theorem proving;congruence of squares;correctness (computer science);experiment;failure;heuristic (computer science);kripke semantics;linear algebra;modal logic;preprocessor;race condition;turing completeness;undecidable problem;usability	Florian Rabe;Petr Pudlák;Geoff Sutcliffe;Weina Shen	2009	J. Applied Logic	10.1016/j.jal.2007.07.007	modal logic;dynamic logic;t-norm fuzzy logics;normal modal logic;modal μ-calculus;discrete mathematics;epistemology;axiom s5;mathematics;accessibility relation;multimodal logic;algorithm	AI	-14.862678989153522	14.170108257693046	127968
0aea2400e046b819e26fb897ef13b7c0e380cae0	the finite model property for various fragments of linear logic		To show that a formula A is not provable in propositional classical logic, it suuces to exhibit a nite boolean model which does not satisfy A. A similar property holds in the intuitionistic case, with Kripke models instead of boolean models (see for instance TvD88]). One says that the propositional classical logic and the propositional intuitionistic logic satisfy a nite model property. In particular, they are decidable: there is a semi-algorithm for provability (proof search) and a semi-algorithm for non provability (model search). For that reason, a logic which is undecidable, such as rst order logic, cannot satisfy a nite model property. The case of linear logic is more complicated. The full propositional fragment LL has a complete semantics in terms of phase spaces Gir87, Gir95], but it is undecidable LMSS92]. The multiplicative additive fragment MALL is decidable, in fact PSPACE-complete LMSS92], but the decidability of the multiplicative exponential fragment MELL is still an open problem. For aane logic, that is, linear logic with weakening, the situation is somewhat better: the full propositional fragment LLW is decidable Kop95a]. Here, we show that the nite phase semantics is complete for MALL and for LLW, but not for MELL. In particular, this gives a new proof of the decidability of LLW. The noncommutative case is mentioned, but not handled in detail. 1. Syntax of linear logic Roman capitals A, B stand for formulas. The connectives of propositional linear logic are: the multiplicatives A (?A) ? = !A ? : One writes A ? B for A ? & B. Greek capitals ?, stand for sequents, which are multisets of formulas, so that exchange is implicit. Identity and cut are written as follows:	algorithm;finite model property;first-order logic;intuitionistic logic;kripke semantics;ll parser;linear logic;logical connective;pspace;pspace-complete;provable security;re (complexity);semiconductor industry;time complexity;undecidable problem;utility functions on indivisible goods	Yves Lafont	1997	J. Symb. Log.		linear logic;discrete mathematics;linear temporal logic;intermediate logic;mathematics;substructural logic	Logic	-10.841652153100256	14.212496808256683	128033
0d69c005c7eea5198645f239b190a7ca9d400cab	a critical reexamination of default logic, autoepistemic logic, and only knowing	nonmonotonic logic;default logic	"""Fifteen years of work on nonmonotonic logic has certainly increased our understanding of the area. However, given a problem in which nonmonotonic reasoning is called for, it is far from clear how one should go about modeling the problem using the various approaches. We explore this issue in the context on two of the best-known approaches, Reiter's default logic 1980] and Moore's autoepistemic logic 1985], as well as two related notions of \only knowing"""", due to Halpern and Moses 1984] and Levesque 1990]. In particular, we return to the original technical deenitions given in these papers, and examine the extent to which they capture the intuitions they were designed to capture."""	autoepistemic logic;default logic;hector levesque;moses;non-monotonic logic	Joseph Y. Halpern	1993		10.1007/BFb0022551	predicate logic;zeroth-order logic;higher-order logic;many-valued logic;intermediate logic;non-monotonic logic;predicate functor logic;default logic;probabilistic logic network;substructural logic;multimodal logic;autoepistemic logic	AI	-15.327252997643498	8.319407979386206	128064
9a5933f3d1e690b0fc5f48422d39bcfb9c24a406	on the properties of atom definability and well-supportedness in logic programming		We analyse alternative extensions of stable models for non-disjunctive logic programs with arbitrary Boolean formulas in the body, and examine two semantic properties. The first property, we call atom definability, allows one to replace any expression in rule bodies by an auxiliary atom defined by a single rule. The second property, well-supportedness, was introduced by Fages and dictates that it must be possible to establish a derivation ordering for all true atoms in a stable model so that self-supportedness is not allowed. We start from a generic fixpoint definition for well-supportedness that deals with: (1) a monotonic basis, for which we consider the whole range of intermediate logics; and (2), an assumption function, that determines which type of negated formulas can be added as defaults. Assuming that we take the strongest underlying logic in such a case, we show that only Equilibrium Logic satisfies both atom definability and strict well-suportedness.	atom;logic programming	Pedro Cabalar;Jorge Fandinno;Luis Fariñas del Cerro;David Pearce;Agustín Valverde	2017		10.1007/978-3-319-65340-2_51	machine learning;semantic property;discrete mathematics;artificial intelligence;monotonic function;horn clause;computer science;derivation;logic programming;algorithm;atom;fixed point	Logic	-10.664574893599095	13.487768978712992	128189
044ee0d5fc82130ccc477cbbbd54d17b99f8249a	injectivity of composite functions	langage fonctionnel;algorithme rapide;injectivity;injectivite;deteccion;lenguaje funcional;detection;methode algebrique;composite function;funcion comquesta;funcion matematica;fast algorithm;algebraic method;inyectividad;mathematical function;completitud;fonction mathematique;metodo algebraico;completeness;functional language;completude;fonction composee;algoritmo rapido;axiome clause horn	The problem of deciding injectivity of functions is addressed. The functions under consideration are compositions of more basic functions for which information about injectivity properties is available. We present an algorithm which will often be able to prove that such a composite function is injective. This algorithm constructs a set of propositional Horn clause axioms from the function specification and the available information about the basic functions. The existence of a proof of injectivity is then reduced to the problem of propositional Horn clause deduction. Dowling and Gallier have designed several very fast algorithms for this problem, the efficiency of which our algorithm inherits. The proof of correctness of the algorithm amounts to showing soundness and completeness of the generated Horn clause axioms.	algorithm;correctness (computer science);declaration (computer programming);function prototype;horn clause;iteration;iterative method;natural deduction;programmer;recursion;relational database;semiconductor industry;time complexity;user-defined function	Kim S. Larsen;Michael I. Schwartzbach	1994	J. Symb. Comput.	10.1006/jsco.1994.1026	function composition;discrete mathematics;completeness;injective function;mathematics;functional programming;function;algorithm;algebra	DB	-14.575427578182609	17.02878359955296	128199
f513a14af34c01f50fb7495fba231fcdbe3e302c	exceptional subclasses in qualitative probability	exceptional subclasses;critical shortcoming;positive integer;defaults database;additional condition;sanction inheritance;default reasoning system;additional constraint;normality default;qualitative probability;system z	"""System z+ [Goldszmidt and Pearl, 1991, Goldszmidt, 1992] is a formalism for reason­ ing with normality defaults of the form """"typ­ ically if 'f' then 1/; (with strength .5)"""" where {j is a positive integer. The system has a critical shortcoming in that it does not sanction inheritance across exceptional sub­ classes. In this paper we propose an exten­ sion to System z+ that rectifies this short­ coming by extracting additional conditions between worlds from the defaults database. We show that the additional constraints do not change the notion of the consistency of a database. We also make comparisons with competing default reasoning systems."""	default logic;ibm system z;semantics (computer science);sion's minimax theorem	Sek-Wah Tan	1994			combinatorics;artificial intelligence;mathematics;algorithm	AI	-12.490697360244937	9.231413857069287	128231
83d4c225582fb093d7f72eede544efd468c22d96	co-induction in relational semantics	lenguaje programacion;programming language;semantics;semantica;semantique;recursive function;induccion;induction;informatique theorique;funcion recursiva;langage programmation;fonction recursive;computer theory;informatica teorica	Abstract   An application of the mathematical theory of maximum fixed points of monotonic set operators to relational semantics is presented. It is shown how an important proof method which we call  co-induction , a variant of Park's (1969) principle of fixpoint induction, can be used to prove the consistency of the static and the dynamic relational semantics of a small functional programming language with recursive functions.	coinduction;kripke semantics	Robin Milner;Mads Tofte	1991	Theor. Comput. Sci.	10.1016/0304-3975(91)90033-X	combinatorics;computer science;theoretical computer science;mathematics;semantics;programming language;operational semantics;algorithm	Logic	-12.00604833707289	17.87078606318173	128412
17ab326243c6817deda6d2c55914bf194e5cd3d2	automated reasoning with analytic tableaux and related methods		Linear logic can be used as a meta-logic for the specification of some sequent calculus proof systems. We explore in this paper properties of such linear logic specifications. We show that derivability of one proof system from another has a simple decision procedure that is implemented simply via bounded logic programming search. We also provide conditions to ensure that an encoded proof system has the cutelimination property and show that this can be decided again by simple, bounded proof search algorithms.	decision problem;international conference on automated reasoning with analytic tableaux and related methods;linear logic;logic programming;method of analytic tableaux;proof calculus;search algorithm;sequent calculus	Jan van Leeuwen;Uwe Egly;Christian G. Fermüller	2002		10.1007/3-540-45616-3	computer science;mathematics;algorithm	Logic	-14.788785089028613	14.639020489929303	128522
6e3d496e3f352e938345ddf5b4673b58e8fd9997	the defining power of stratified and hierarchical logic programs	logic programs;closed world assumption	We investigate the defining power of stratified and hierarchical logic programs. As an example for the treatment of negative information in the context of these structured programs we also introduce a stratified and hierarchical closed-world assumption. Our analysis tries to relate the defining power of stratified and hierarchical programs (with and without an appropriate closed-world assumption) very precisely to notions and hierarchies in classical definability theory. Stratified and hierarchical logic programs are two well-known and typical candidates of what one may more generally denote as structured programs. In both cases we have to deal with normal logic programs which satisfy certain syntactic conditions with respect to the occurrence of negative literals. Recently they have gained a lot of importance in connection with the search for nice declarative semantics for logic programs and the treatment of negative information in logic programming (e.g., Lloyd [10]). Stratified programs were introduced into logic programming by Apt, Blair, and Walker [2] and van Gelder [17] not long ago. In mathematical logic, however, theories of this kind have been studied for more than 20 years under the general theme of iterated inductive definability. Indeed, stratified programs can be understood as systems for (finitely) iterated inductive definitions where the definition clauses are of very low logical complexity. The notion of hierarchical program (e.g., Clark [6], Shepherdson [15]), on the other hand, is motivated by database theory and tries to reflect the idea of iterated explicit definability by simple principles. From a conceptual point of view we are interested in the relationship between logic programming, inductive definability and equational definability. By making use of these connections we obtain a uniform and perspicuous approach to a series of interesting questions in this area. Address correspondence to Gerhard Jäger or Robert F. Stärk, Institut für Informatik und angewandte Mathematik, Länggassstrasse 51, CH-3012 Bern, Switzerland. Email: 〈jaeger@iam.unibe.ch〉 or 〈staerk@iam.unibe.ch〉 Appeared in: J.of Logic Programming, 15 (1&2): 55–77, 1993. 2 GERHARD JÄGER AND ROBERT F. STÄRK The plan of this paper is as follows: Section 1 introduces some basic notions. Sections 2 and 3 present the relevant concepts from classical definability theory and are concerned with various forms of definability over Herbrand universes of first-order languages. In Section 4 we characterize the defining power of stratified programs. Among other things we prove that the arithmetically definable subsets of the nonnegative integers comprise the defining power of suitable stratified programs with the stratified closed-world assumption. Section 5 is then devoted to the study of hierarchical programs. It is shown that definite hierarchical programs pin down exactly the so-called term-definable relations. This is in sharp contrast to the defining power of arbitrary hierarchical logic programs which is shown to be equivalent to that of definite programs. Finally the hierarchical programs with the hierarchical closed-world assumption represent a class of intermediate strength. We will see that they exactly define the equationally definable relations.	amiga walker;arithmetical set;closed-world assumption;database theory;email;first-order logic;first-order predicate;gerhard ringel;inductive reasoning;iteration;logic programming;quantum information;switzerland	Gerhard Jäger;Robert F. Stärk	1993	J. Log. Program.	10.1016/0743-1066(93)90013-7	combinatorics;closed-world assumption;discrete mathematics;computer science;mathematics;algorithm	AI	-9.692535302456582	12.101047200233102	128867
9c49c2e5f12922d7a2a8a686718256e46d007322	taking levi identity seriously: a plea for iterated belief contraction	macquarie university institutional repository;belief;researchonline;digital repository;ingenierie connaissances;macquarie university;iterated belief contraction;croyance;belief revision;contraccion;information state change;creencia;belief change;contraction;knowledge engineering	Most work on iterated belief change has focused on iterated belief revision, namely how to compute (K∗ x)y. Historically however, belief revision can be defined in terms of belief expansion and belief contraction, where expansion and contraction are viewed as primary operators. Accordingly, our attention to iterated belief change should be focused on constructions like (K x )y , (K− x )y , (K x )y and (K− x )y . The first two of these are relatively straightforward, but the last two are more problematic. Here we consider these latter, and formulate iterated belief change by employing the Levi identity and the Harper Identity as the guiding principles.	belief revision;iterated function;iteration;lexicographical order;test case;type physicalism;uml state machine	Abhaya C. Nayak;Randy Goebel;Mehmet A. Orgun;Tam Pham	2006		10.1007/11811220_26	computer science;artificial intelligence;belief;knowledge engineering;contraction;belief revision	AI	-16.33970414311048	4.853864868835312	129064
8a7be44b40c6b50678ece7cfe3df30903b826df8	approximate bisimulation relations for fuzzy automata		In this paper, for an ultra-metric D on the unit interval and a small positive real number (epsilon ), we firstly define the concept of approximate bisimulation relations between two fuzzy automata and prove that the behavior of a fuzzy automaton (A_1) differs by (epsilon ) from the behavior of a fuzzy automaton (A_2) under an approximate bisimulation relation between them. Then we put forward the notion of surjective functional approximate bisimulation relations between two fuzzy automata. A connection between surjective functional approximate bisimulation relations between two fuzzy automata (A_1) and (A_2) and approximate bisimulation relations for (A_1) is also discussed. Finally, we give a method to construct the greatest approximate bisimulation relation for a fuzzy automaton and point out that bisimulation relations for a fuzzy automaton are also approximate bisimulation relations.	automata theory;automaton;bisimulation	Chao Yang;Yongming Li	2018	Soft Comput.	10.1007/s00500-017-2913-z	discrete mathematics;surjective function;fuzzy logic;combinatorics;real number;bisimulation;unit interval;mathematics	Logic	-5.755676965661275	16.914138221070438	129343
357104872c48b77b594df5006bdcd7c752c29ffb	the finite and the infinite in temporal logic	temporal logic;complete axiomatization	At the last TACAS in Barcelona, already almost a year ago, Alur, Etessami, and Madhusudan [2004] introduced CaRet, a temporal logic framework for reasoning about programs with nested procedure calls and returns. The details of the logic were themselves interesting (I will return to them later), but a thought struck me during the presentation, whether an axiomatization might help understand the new temporal operators present in CaRet. Thinking a bit more about this question quickly led to further questions about the notion of finiteness and infinity in temporal logic as it is used in Computer Science. This examination of the properties of temporal logic operators under finite and infinite interpretations is the topic that I would like to discuss here. I will relate the discussion back to CaRet towards the end of the article, and derive a sound and complete axiomatization for an important fragment of the logic.	axiomatic system;caret;computer science;european joint conferences on theory and practice of software;temporal logic	Riccardo Pucella	2005	SIGACT News	10.1145/1052796.1052810	predicate logic;dynamic logic;combinatorics;discrete mathematics;linear temporal logic;description logic;temporal logic;many-valued logic;interval temporal logic;computer science;mathematics;geometry;multimodal logic;algorithm;philosophy of logic	Logic	-10.185668925939378	14.744186694339097	129344
97845f12495f9477ca2bb30d5ccd911b40bdc5d0	programming language theory and its implementation - applicative and imperative paradigms	programming language	ions The description of the meaning of expressions just given above is vague and intuitive It took about years for logicians Dana Scott in fact to make it rigorous in a useful way We shall not be going into details of this Example x x denotes the identity function x x E E Example x f f x denotes the function which when applied to E yields f f x E x i e f f E This is the function which when applied to E yields f E E f i e E E Thus	applicative programming language;emoticon;imperative programming;programming language theory;vagueness	Michael J. C. Gordon	1988				Vision	-10.961718709276086	8.107703341774055	129377
5d23df31949eebbd1aca5fc08d56ec19b0d6bbbd	forcing and antifoundation	fixed point;standard model	It is proved that the forcing apparatus can be built and set to work in ZFCA (=ZFC minus foundation plus the antifoundation axiom AFA). The key tools for this construction are greatest fixed points of continuous operators (a method sometimes referred to as “corecursion”). As an application it is shown that the generic extensions of standard models of ZFCA are models of ZFCA again.	alternating finite automaton;corecursion;zermelo–fraenkel set theory	Athanassios Tzouvaras	2005	Arch. Math. Log.	10.1007/s00153-004-0268-5	standard model;combinatorics;mathematical analysis;discrete mathematics;topology;mathematics;fixed point	Logic	-7.668842813270288	12.534880957908754	129460
be529d5fa742327c9283a16cf645953fc4441e2a	a gap 1 cardinal transfer theorem	cardinal transfer theorem;two cardinal problem;coarse morass	Morasses have been developed by R. Jensen in order to solve some strong combinatorial problems, like the gap n transfer theorem of model theory. The proof that a full morass exists in L heavily relies on the fine structure of L. In [3] a full morass is described through seven axioms. If we only consider the first five of them, we get a so called coarse morass. The proof of that a full morass exists in L is, of course, a proof of the existence in L of a coarse morass. But a coarse morass exists in models of ZFE under weaker hypothesis than V = L. What seems to be more important is that with a coarse morass we are able to prove several combinatorial results (see [4]) and carry out complicated constructions like the one described in this paper. Coarse morasses share some of the most important features of full morasses but are easier to use. We shall describe in this paper the construction of a general structure of cardinality λ with a unary relation of cardinality λ, for λ a regular cardinal. The framework we develop is expected to handle other problems not necessarily of the same nature. For instance, let κ be a cardinal. AnR-moduleM over a ringR is called κ-torsionless if the cardinality ofR is less than κ and every submoduleN ofM of cardinality less than κ is torsionless (it can be embedded in a product of copies of R). We can prove (see [10]) that every κ-torsionless R-module M of cardinality κ, for κ a weakly compact cardinal, is torsionless. A fundamental question is: does there exist a κ-torsionless R-module which is not torsionless (R = Z)? We are able to answer positively this question (see [10]) by using a coarse morass and a combinatorial principle valid for non compact cardinals, following the construction described in this paper. We feel that coarse morasses in combination with the square principle are the most likely structures to find counterexamples of some cases of the selection theorem (see [11, Theorem 1.3, Corollary 1.4, p. 286]) in E-recursion for singular cardinals. We believe that a coarse morass and the construction described here provide tools which are potentially valuable to anyone who pretends to construct structures with particular subsets. Now we describe the problem in this paper. Let L be a language with at least one unary predicate symbol U . We say that an L-structure A has type (κ, μ) if A = 〈A,UA, . . .〉 and |A| = κ, |UA| = μ. An L-theory T admits (κ, μ) if it has a model A of type (κ, μ). We write	embedded system;existential quantification;jensen's inequality;monadic predicate calculus;predicate variable;recursion;unary operation;user agent	Luis Miguel Villegas-Silva	2006	Math. Log. Q.	10.1002/malq.200510038	successor cardinal;mathematical analysis;discrete mathematics;cardinal function;reinhardt cardinal;mathematics;regular cardinal;cardinality of the continuum;algorithm;algebra	Theory	-6.225128630577867	14.324152946219199	129527
ba3a27235d70569195482cae8d5c28da89c3e307	unfolding-based improvements on fuzzy logic programs	fuzzy logic programming;program transformation;fuzzy logic;logic programs	Unfolding is a semantics-preserving program transformation technique that consists in the expansion of subexpressions of a program using their own definitions. In this paper we define two unfolding-based transformation rules that extend the classical definition of the unfolding rule (for pure logic programs) to a fuzzy logic setting. We use a fuzzy variant of Prolog where each program clause can be interpreted under a different (fuzzy) logic. We adapt the concept of a computation rule, a mapping that selects the subexpression of a goal involved in a computation step, and we prove the independence of the computation rule. We also define a basic transformation system and we demonstrate its strong correctness, that is, original and transformed programs compute the same fuzzy computed answers. Finally, we prove that our transformation rules always produce an improvement in the efficiency of the residual program, by reducing the length of successful Fuzzy SLD-derivations.	fuzzy logic;logic programming;net (polyhedron)	Pascual Julián Iranzo;Ginés Moreno;Jaime Penabad	2005	Electr. Notes Theor. Comput. Sci.	10.1016/j.entcs.2005.01.040	fuzzy logic;t-norm fuzzy logics;combs method;discrete mathematics;fuzzy cognitive map;defuzzification;adaptive neuro fuzzy inference system;type-2 fuzzy sets and systems;fuzzy mathematics;fuzzy classification;computer science;fuzzy subalgebra;fuzzy number;neuro-fuzzy;mathematics;fuzzy associative matrix;fuzzy set operations;fuzzy control language;algorithm;fuzzy control system	ECom	-15.685523142010155	18.049945044364332	129797
8ca1bf9339f0795a1205f8b6e7bb82d4f3310246	argument strength computation based on satisfiability degree and agents' beliefs		This paper presents an agent-based argumentation framework. Different from probabilistic, fuzzy and weighted approaches, this framework considers the strength of arguments and attacks from two aspects: the inner structure of arguments and the beliefs of agents. A key concept in this framework is the notion of satisfiability degree, which is used to define the intrinsic strength of attacks and the extrinsic strength of arguments. These two kinds of strengths are combined into the degree of attack/support. Then, new semantics of this framework are defined and the relation with Dung’s approach is discussed.	agent-based model;argumentation framework;computation	Jian Luo;Fuan Pu;Guiming Luo	2015			cognitive psychology;discrete mathematics;applied mathematics;satisfiability;computation;mathematics	AI	-16.166416132385983	4.520068471312964	129827
cc82c18e25d835a17bdfbaf32ac4345e5358881b	the undecidability of simultaneous rigid e-unification with two variables	teoria demonstracion;theorie preuve;left hand side;complexite calcul;proof theory;complejidad computacion;intuitionistic logic;computational complexity;informatique theorique;logique intuitionniste;decidibilidad;decidabilite;logica intuicionista;decidability;computer theory;informatica teorica	Recently it was proved that the problem of simultaneous rigid E-unification, or SREU, is undecidable. Here we show that 4 rigid equations with ground left-hand sides and 2 variables already imply undecidability. As a corollary we improve the undecidability result of the 3*-fragment of intuitionistic logic with equality. Our proof shows undecidability of a very restricted subset of the 33-fragment. Together with other results, it contributes to a complete characterization of decidability of the prenex fragment of intuitionistic logic with equality, in terms of the quantifier prefix. 1 I n t r o d u c t i o n Recently it was proved that the problem of simultaneous rigid E-unification (SREU) is undecidable [11]. This (quite unexpected) undecidability result has lead to other new undecidability results, in particular that the 3*-fragment of intuitionistic logic with equality is undecidable [13,15]. Here we show that 4 rigid equations I with ground left-hand sides and 2 variables already imply undecidability. As a corollary we improve the undecidability result of the 3*-fragment of intuitionistic logic with equality. Namely that the 33-fragment is undecidable. In fact, our proof shows undecidability of a very restricted subset of the 33-fragment. Together with the result that the 3-fragment is decidable [6], it contr ibutes to a complete characterization of decidability of the prenex fragment of intuitionistic logic with equality, in terms of the quantifier prefix. 1.1 Background o f S R E U Simultaneous rigid E-unification was proposed by Ga~er , Raatz and Snyder [21] as a method for automated theorem proving in classical logics with equality. It can be used in automatic proof methods, like semantic tableaux [18], the connection method [3] or the mating method [1], model elimination [32], and others that are based on the Herbrand theorem, and use the property that a formula is valid (i.e., ~ is unsatisfiable) iff all paths through a matrix of ~ are inconsistent. This property was first recognized by Prawitz [38] (for first-order logic without equality) and later by Kanger [28] (for first-order logic with equality). 1 It has been noted by Gurevich and Veanes that 3 rigid equations suffices [25].	automated theorem proving;first-order logic;first-order predicate;horner's method;intuitionistic logic;method of analytic tableaux;model elimination;prenex normal form;quantifier (logic);undecidable problem;unification (computer science);yuri gurevich	Margus Veanes	1997		10.1007/3-540-63385-5_52	decidability;discrete mathematics;intuitionistic logic;computer science;proof theory;mathematics;computational complexity theory;algorithm	Logic	-8.972619059877683	17.290572348524535	129970
469873ea9eb6a1c83b8df243675a67198b657982	using the tptp language for writing derivations and finite interpretations	teoria demonstracion;language use;theorie preuve;automatic proving;proof theory;demostracion automatica;demonstration automatique	One of the keys to the success of the TPTP and related projects is their consistent use of the TPTP language. The ability of the TPTP language to express solutions as well as problems, in conjunction with the simplicity of the syntax, sets it apart from other languages used in ATP. This paper provides a complete definition of the TPTP language, and describes how the language should be used to write derivations and finite interpretations.	automated theorem proving;data compaction;decision problem;interoperability;reasoning system;relational database;test & performance tools platform;usability	Geoff Sutcliffe;Stephan Schulz;Koen Claessen;Allen Van Gelder	2006		10.1007/11814771_7	computer science;artificial intelligence;proof theory;mathematics;programming language;algorithm	NLP	-15.697077465013649	17.57042327003572	129976
555dd0b844e2d698dc93d30a5ec22f420146886c	pure patterns of order 2		We provide mutual elementary recursive order isomorphisms between classical ordinal notations based on Skolem hulling and notations based on pure elementary patterns of resemblance of order 2, introduced in Carlson 2001 and in modified form in Carlson 2009, thereby showing that the latter characterize the proof-theoretic ordinal of the fragment Pi-1-1-CA0 of second order number theory, or equivalently the set theory KPl0, which axiomatizes a limit of models of Kripke-Platek set theory with infinity, as the so-called core of R2. As a corollary we obtain that Carlson's result on the well-quasi orderedness of respecting forests of order 2 implies transfinite induction up to the ordinal of KPl0. We expect that our approach will naturally extend to the analysis of more powerful systems of patterns.		Gunnar Wilken	2018	Ann. Pure Appl. Logic	10.1016/j.apal.2017.09.001	combinatorics;topology;mathematics;algorithm;limit ordinal;algebra	Logic	-7.44336265670298	12.797536857919818	130071
b03ded07edacbfa685e69aa57b6e5ed0a55048bd	constraint satisfaction problems with order-sorted domains	arc consistency;constraint satisfaction problems;hierarchical domains;constraint satisfaction problem;partial orders	In order to improve constraint satisfaction techniques, a promising way is to use special features of constraints and variable domains. This paper examines a special class of CSPs (Constraint Satisfaction Problems) in which a partial order is deened on each domain and the constraints are compatible with these orders. A special arc-consistency algorithm for this case is presented and some questions about nding all solutions are discussed. The presented ideas can be used in constrait systems implemented in an object-oriented language, where inheritance hierarchy of objects is a natural support for the presented CSP type.	algorithm;constraint satisfaction;cryptographic service provider;local consistency	Tibor Kökény	1995	International Journal on Artificial Intelligence Tools	10.1142/S0218213095000048	constraint logic programming;concurrent constraint logic programming;mathematical optimization;constraint programming;binary constraint;decomposition method;ac-3 algorithm;constraint satisfaction;constraint learning;computer science;constraint graph;constraint satisfaction dual problem;complexity of constraint satisfaction;constraint;constraint satisfaction problem;hybrid algorithm;local consistency;backtracking	AI	-18.27588407116409	15.635269099002306	130225
6623721be4a3f02646d088d445e6cae6530314f5	predictors for flat membrane systems		Abstract In this paper we investigate dynamic causalities in membrane systems by proposing the concept of “predictor”, originally defined in the context of the reaction systems by Brijder, Ehrenfeucht and Rozenberg. The goal is to characterise sufficient and necessary conditions for the presence of a multiset of molecules of interest in the configuration of a P system at a given evolution step (independently from the non-deterministic choices taken). These conditions can be used to study causal relationships between molecules and, therefore, to predict some aspects of future development of multiset rewriting systems. To achieve this goal, we introduce the new concept of “multiset pattern” representing a logical formula on multisets. A sufficient predictor can be expressed as a pattern characterising initial multisets that will surely evolve , after the given number of evolution steps, into a multiset containing the molecules of interest. On the other hand, a necessary predictor models initial multisets that may evolve after the given number of evolution steps, into a multiset containing the molecules of interest. Necessary predictors can be used to characterise initial multisets that will surely not evolve (in the required number of steps) into a multiset that contains such molecules. We inductively define operators able to compute these predictors. The patterns obtained from our operators are sound (sufficient or necessary) predictors, but, in general, they are not complete.		Roberto Barbuti;Roberta Gori;Paolo Milazzo	2018	Theor. Comput. Sci.	10.1016/j.tcs.2018.04.007	discrete mathematics;combinatorics;multiset;operator (computer programming);p system;mathematics;rewriting	ECom	-5.288047231509377	17.925726065205275	130255
6fcba013c50a415b34400d9cbd9ae2f3bfb73d88	relational dual tableaux for interval temporal logics	dual tableau systems;relational logics;temporal logic;interval temporal logic;modal logic;interval logic;proof systems;rasiowa sikorski systems;relational logic;temporal reasoning;dual tableaux;interval temporal logics	Interval temporal logics provide both an insight into a nature of time and a framework for temporal reasoning in various areas of computer science. In this paper we present sound and complete relational proof systems in the style of dual tableaux for relational logics associated with modal logics of temporal intervals and we prove that the systems enable us to verify validity and entailment of these temporal logics. We show how to incorporate in the systems various relations between intervals and/or various time orderings.	computer science;interval temporal logic;modal logic	Davide Bresolin;Joanna Golinska-Pilarek;Ewa Orlowska	2006	Journal of Applied Non-Classical Logics	10.3166/jancl.16.251-277	monoidal t-norm logic;t-norm fuzzy logics;discrete mathematics;linear temporal logic;principle of bivalence;interval temporal logic;computation tree logic;computer science;artificial intelligence;mathematics;programming language;method of analytic tableaux;accessibility relation;algorithm;temporal logic of actions	Logic	-14.17793155602128	13.747576902078055	130283
7bb0ceb8c7b32cac2aa989b0102664a41afa0276	what is a model of the lambda calculus?	lambda calculus	An elementary, purely algebraic definition of model for the untyped lambda calculus is given. This definition is shown to be equivalent to the natural semantic definition based on environments. These definitions of model are consistent with, and yield a completeness theorem for, the standard axioms for lambda convertibility. A simple construction of models for lambda calculus is reviewed. The algebraic formulation clarifies the relation between combinators and lambda terms.	combinatory logic;elementary;lambda calculus;linear algebra	Albert R. Meyer	1982	Information and Control	10.1016/S0019-9958(82)80087-9	lambda lifting;system f;deductive lambda calculus;fixed-point combinator;calculus of constructions;typed lambda calculus;discrete mathematics;dependent type;binary lambda calculus;normalisation by evaluation;pure type system;computer science;reduction strategy;time-scale calculus;lambda calculus;simply typed lambda calculus;mathematics;church–rosser theorem;curry–howard correspondence;hindley–milner type system;programming language;church encoding;lambda cube;natural deduction;algorithm	PL	-12.137468123881671	17.081293398655443	130327
51cbab670865e4fb47f9162186c2eda90f81d120	answer set programming and s4	representacion conocimientos;multiagent system;multimodal logic;belief;sistema experto;answer sets;multi agent system;ucl;answer set programming;logica multimodal;circonscription;semantics;discovery;theses;conference proceedings;intelligence artificielle;logical programming;semantica;semantique;circumscription;modal logic;modelo logico;digital web resources;croyance;programmation logique;ucl discovery;logique modale;open access;inferencia;logica modal;artificial intelligence;ucl library;inteligencia artificial;book chapters;open access repository;logic model;systeme expert;creencia;knowledge representation;sistema multiagente;logique multimodale;representation connaissances;programacion logica;inference;modele logique;systeme multiagent;circonscripcion;expert system;ucl research	We present a proposal on how to develop nonmonotonic reasoning based on the modal logic S4. As a consequence of our results we show how to present the well known semantics of answer sets, under a restricted fragment of modal formulas, using this approach. Moreover, by considering the full set of modal formulas we obtain an interesting generalization of answer sets with modal connectives. We show, with several examples, possible applications of this proposed inference system and how the syntax of modal formulas can clearly describe notions such as negation as failure. It is also possible to replace the modal logic S4 with any other modal logic to obtain similar nonmonotonic systems. We even consider the use of multimodal logics in order to model a scenario where several agents can reason about the knowledge and beliefs of each other. Our results clearly state interesting links between answer set programming, modal logics and multi-agent systems which might bring research of these areas together.	additive schwarz method;answer set programming;inference engine;intuitionistic logic;journal of logic and computation;langrisser schwarz;logic programming;logical connective;multi-agent system;multimodal interaction;multimodal logic;negation as failure;newton–cotes formulas;non-monotonic logic;normal modal logic;stable model semantics;whole earth 'lectronic link	Mauricio Osorio;Juan Antonio Navarro Pérez	2004		10.1007/978-3-540-30498-2_36	modal logic;dynamic logic;normal modal logic;modal μ-calculus;stable model semantics;computer science;artificial intelligence;answer set programming;belief;machine learning;axiom s5;database;mathematics;semantics;kripke semantics;accessibility relation;expert system;multimodal logic;circumscription;algorithm;modal operator;strict conditional	AI	-17.41533186710214	10.980188025371865	130445
db7a8843dbe68ab6166577bc3b2455d606a977a8	towards automated proof strategy generalisation		The ability to automatically generalise (interactive) proofs and use such generalisations to discharge related conjectures is a very hard problem which remains unsolved; this paper shows how we hope to make a start on solving this problem. We develop a notion of goal types to capture key properties of goals, which enables abstractions over the specific order and number of sub-goals arising when composing tactics. We show that the goal types form a lattice, and utilise this property in the techniques we develop to automatically generalise proof strategies in order to reuse it for proofs of related conjectures. We illustrate our approach with an example.	crystal structure;discharger;dixon's factorization method;expectation propagation;goal programming;graph rewriting;heuristic (computer science);high- and low-level;interactivity;isabelle;separation logic;text corpus	Gudmund Grov;Ewen Maclean	2013	CoRR		discrete mathematics;computer science;artificial intelligence;mathematics;algorithm	Logic	-17.910900327932517	15.887708611552274	130446
66479b209445534b1902989e3af8c65b10a08b9c	syntactic composition of top-down tree transducers is short cut fusion	computacion informatica;top down;ciencias basicas y experimentales;matematicas;grupo a	We compare two deforestation techniques: short cut fusion formalized in category theory and the syntactic composition of tree transducers. The former strongly depends on types and uses the parametricity property or free theorem whereas the latter makes no use of types at all and allows more general compositions. We introduce the notion of a categorical transducer which is a generalization of a catamorphism and show a respective fusion result which is a generalization of the ‘acid rain theorem’. We prove the following main theorems: (i) The class of all categorical transducers builds a category where composition is fusion. (ii) The semantics of categorical transducers is a functor. (iii) The subclass of top-down categorical transducers is a subcategory. (iv) Syntactic composition of top-down tree transducers is equivalent to the fusion of top-down categorical transducers.	catamorphism;category theory;parametricity;top-down and bottom-up design;transducer	Claus Jürgensen;Heiko Vogler	2004	Mathematical Structures in Computer Science	10.1017/S0960129503004109	discrete mathematics;computer science;top-down and bottom-up design;mathematics;algorithm	Logic	-5.94969202582995	16.580483122631996	130548
3594b3aa9924b22b0162ff34767971df872571ad	a relationally parametric model of dependent type theory	initial algebras;data representations;relational parametricity;higher dimensional;dependent type theory;parametric models;reflexive graphs;electronic computers computer science;parametric modeling	Reynolds' theory of relational parametricity captures the invariance of polymorphically typed programs under change of data representation. Reynolds' original work exploited the typing discipline of the polymorphically typed lambda-calculus System F, but there is now considerable interest in extending relational parametricity to type systems that are richer and more expressive than that of System F.  This paper constructs parametric models of predicative and impredicative dependent type theory. The significance of our models is twofold. Firstly, in the impredicative variant we are able to deduce the existence of initial algebras for all indexed=functors. To our knowledge, ours is the first account of parametricity for dependent types that is able to lift the useful deduction of the existence of initial algebras in parametric models of System F to the dependently typed setting. Secondly, our models offer conceptual clarity by uniformly expressing relational parametricity for dependent types in terms of reflexive graphs, which allows us to unify the interpretations of types and kinds, instead of taking the relational interpretation of types as a primitive notion. Expressing our model in terms of reflexive graphs ensures that it has canonical choices for the interpretations of the standard type constructors of dependent type theory, except for the interpretation of the universe of small types, where we formulate a refined interpretation tailored for relational parametricity. Moreover, our reflexive graph model opens the door to generalisations of relational parametricity, for example to higher-dimensional relational parametricity.	data (computing);dependent type;homotopy type theory;impredicativity;initial algebra;natural deduction;parametric model;parametricity;random graph;relational quantum mechanics;residential gateway;system f;type constructor;type system;typed lambda calculus	Robert Atkey;Neil Ghani;Patricia Johann	2014		10.1145/2535838.2535852	parametric model;computer science;parametricity;algorithm	PL	-12.183499276341921	17.756971366274744	130667
a834c6de664baf8eb2af253c2397b173ce7791b5	a note on the interpolation property in tense logic	interpolation;tense logic;temporal logic;weak order;modal logic;logique modale;logique du temps;logique temporelle	It is proved that all bimodal tense logics which contain the logic of the weak orderings and have unbounded depth do not have the interpolation property.	interpolation;temporal logic	Frank Wolter	1997	J. Philosophical Logic	10.1023/A:1017956722866	modal logic;predicate logic;normal modal logic;discrete mathematics;linear temporal logic;higher-order logic;temporal logic;philosophy;epistemology;interpolation;many-valued logic;computer science;intermediate logic;mathematics;multimodal logic;algorithm	Logic	-12.599400045663494	12.992364413810268	130687
a575bb0cfa2592ff7cc6523e4e10c867880e1da3	e-learning by doing with computational logic	software application.;logic programming;interaction protocols;e-learning by doing;computational logic;software component	E-learning by doing is an important e-learning process, that provides several advantages but that requires a high interactivity degree, not always supported in e-learning contexts. In this paper, we propose to exploit a formal approach (based on Computational Logic) to define, verify and support the e-learning by doing paradigm. To this end, we introduce the SCIFF formal frameworks, its features, and two software components for e-learning of software applications.	component-based software engineering;computational logic;interactive media;interactivity;programming paradigm	Federico Chesani;Anna Ciampolini;Paola Mello	2008			component-based software engineering;interactivity;logic synthesis;multimodal logic;computational logic;logic optimization;theoretical computer science;description logic;machine learning;artificial intelligence;computational learning theory;computer science	SE	-17.378664660834435	12.87089972928977	130693
2b5683a328ed9bdc6f7474ed82e2a4e5d63760dc	planning with abduction: a logical framework to explore extensions to classical planning	abduction;teoria demonstracion;event calculus;theorie preuve;logical framework;algorithm analysis;proof theory;intelligence artificielle;logical programming;theorem proving;demonstration theoreme;planificacion;abduccion;programmation logique;abductive reasoning;artificial intelligence;planning;analyse algorithme;inteligencia artificial;planification;demostracion teorema;programacion logica;analisis algoritmo	In this work we show how a planner implemented as an abductive reasoning process can have the same performance and behavior as classical planning algorithms. We demonstrate this result by considering three different versions of an abductive event calculus planner on reproducing some important comparative analyses of planning algorithms found in the literature. We argue that a logic-based planner, defined as the application of general purpose theorem proving techniques to a general purpose action formalism, can be a very solid base for the research on extending the classical planning approach.	abductive reasoning;automated planning and scheduling;logical framework	Silvio do Lago Pereira;Leliane Nunes de Barros	2004		10.1007/978-3-540-28645-5_7	abductive reasoning;computer science;artificial intelligence;mathematics;algorithm;abductive logic programming	AI	-17.865006293981896	11.683795696004132	130846
7bf6d040294c45920d7f3d93c5fb435eafc9e8fe	reasoning from first principles in electronic troubleshooting	first principle;raisonnement;depistage erreur;system design;systeme expert;reasoning;conception systeme;expert system	"""ion, not an electrical reality. If, as sometimes happens (due to a bent pin, bad socket, etc.), a chip fails to get power, its inputs are no longer guaranteed to act unidirectionally as inputs. If the third multiplier were a chip that failed to get power, it might not only send out a 0 along wire z, but it might also pull down wire C to 0. Hence the symptoms result from a single point of failure (multiplier-3), but the error propagates along an """" input"""" line common to two devices. The immediate problem with this straightforward use of discrepancy detection lies in its implicit acceptance of unidirectional ports and the reflection of that acceptance in the basic dependency-unwinding machinery. We implicitly assumed that wires get information only from output por ts-when checking the inputs to multiplier-l , we assume that the inputs are """"primitive"""". We looked only at terminals A and C, never at the other end of the wire at multiplier-3. Bridges are a second common fault that illustrates an interesting shortcoming in the approach: the reasoning style used above can never hypothesize a bridging fault, again because of implicit assumptions about the model and their subtle reflection in the method. Bridges can be viewed as wires that don' t show up in the design. But the traditional approach makes an implicit closed world assumption--the structure description is assumed to be complete and anything not shown there """"doesn ' t exist"""". Clearly this is not always true. Bridges are only one manifestation; wiring errors during assembly are another possibility. Let 's review for a moment. The traditional test generation technology suffered from two problems: it is a technology for test generation, not diagnosis, and it uses a very limited fault model. The discrepancy detection approach improves on this substantially by providing a diagnostic ability and by defining a fault as anything that produces behavior different from that expected. This seems to be perfectly general, but, as we illustrated, it is in fact limited in some important ways. We believe it is instructive to examine the basic source and nature of those limitations. 4. Models of interaction One common claim about the discrepancy detection approach is that it makes no assumptions about the character of the fault. Yet our counterexamples show this not to be the case. What is the source of the problem? We believe that the issue is not in fact the character of the fault models, it is assumptions about models of causal interactions. In the port problem, for example, the assumption was that there was only one possible direction of causality at an input port. For the bridge problem, the"""	assembly language;bridging fault;causality;closed-world assumption;discrepancy function;fault model;interaction;loop unrolling;personal identification number;power-on reset;regular expression;reliability engineering;single point of failure;wiring	Randall Davis	1983	International Journal of Man-Machine Studies	10.1016/S0020-7373(83)80063-7	first principle;computer science;artificial intelligence;operations research;expert system;reason;algorithm;statistics;systems design	AI	-9.53269168953696	5.520939672412446	130938
bab1f421755711bd4834c90c64f6ea75533ddf20	atlsc with partial observation		Alternating-time temporal logic with strategy contexts (ATLsc) is a powerful formalism for expressing properties of multi-agent systems: it extends CTL with strategy quantifiers, offering a convenient way of expressing both collaboration and antagonism between several agents. Incomplete observation of the state space is a desirable feature in such a framework, but it quickly leads to undecidable verification problems. In this paper, we prove that uniform incomplete observation (where all players have the same observation) preserves decidability of the model checking problem, even for very expressive logics such as ATLsc.	algorithm;alternating-time temporal logic;artificial intelligence;circuit complexity;concurrency (computer science);electronic notes in theoretical computer science;françois lionet;informatics;lagrangian relaxation;lecture notes in computer science;model checking;multi-agent system;semantics (computer science);springer (tank);state space;undecidable problem	François Laroussinie;Nicolas Markey;Arnaud Sangnier	2015		10.4204/EPTCS.193.4	discrete mathematics;artificial intelligence;mathematics;algorithm	AI	-16.29794746781808	13.109938841373594	130940
7e1c856f1e8116076248b228d85989ecb860ca23	partially observable reinforcement learning for intelligent transportation systems.		Intelligent Transportation Systems (ITS) have attracted the attention of researchers and the general public alike as a means to alleviate traffic congestion. Recently, the maturity of wireless technology has enabled a cost-efficient way to achieve ITS by detecting vehicles using Vehicle to Infrastructure (V2I) communications. Traditional ITS algorithms, in most cases, assume that every vehicle is observed, such as by a camera or a loop detector, but a V2I implementation would detect only those vehicles with wireless communications capability. We examine a family of transportation systems, which we will refer to as ‘Partially Detected Intelligent Transportation Systems’. An algorithm that can act well under a small detection rate is highly desirable due to gradual penetration rates of the underlying wireless technologies such as Dedicated Short Range Communications (DSRC) technology. Artificial Intelligence (AI) techniques for Reinforcement Learning (RL) are suitable tools for finding such an algorithm due to utilizing varied inputs and not requiring explicit analytic understanding or modeling of the underlying system dynamics. In this paper, we report a RL algorithm for partially observable ITS based on DSRC. The performance of this system is studied under different car flows, detection rates, and topologies of the road network. Our system is able to efficiently reduce the average waiting time of vehicles at an intersection, even with a low detection rate.	algorithm;artificial intelligence;capability maturity model;collision detection;control system;cost efficiency;mathematical optimization;multi-agent system;network congestion;network topology;numerical analysis;partially observable system;q-learning;reinforcement learning;sensor;sparse matrix;system dynamics	Rusheng Zhang;Akihiro Ishikawa;Wenli Wang;Benjamin Striner;Ozan K. Tonguz	2018	CoRR		system dynamics;real-time computing;network topology;detector;traffic congestion;wireless;reinforcement learning;intelligent transportation system;computer science;dedicated short-range communications	Robotics	-4.8096058745042365	5.268827588618409	130969
a9f37872525e8e51a16f5d9a868bbebc3756fd64	black-box knowledge extraction revisited: universal approach with precise bounds				Emilia Käsper;Sven Laur;Helger Lipmaa	2006	IACR Cryptology ePrint Archive			Crypto	-8.276253142788786	8.6049954963151	130993
811c6e70332e046f301ab4c84bf9f5c02373005b	conceptual graph programs and their declarative semantics	non classical logic;conceptual structures;order sorted logic;declarative semantics;conceptual graphs;logic programming;artificial intelligence;knowledge representation		conceptual graph;declarative programming	Bikash Chandra Ghosh;Vilas Wuwongse	1995	IEICE Transactions		dynamic logic;natural language processing;conceptual graph;knowledge representation and reasoning;non-classical logic;classical logic;description logic;higher-order logic;horn clause;stable model semantics;computer science;artificial intelligence;game semantics;formal semantics;computational logic;ontology language;programming language;axiomatic semantics;well-founded semantics;logic programming;multimodal logic;algorithm;philosophy of logic;autoepistemic logic	DB	-18.408379210506354	10.728805713825066	131022
6726608394672906bdb6a6315f663a7e3d887548	causal default reasoning: principles and algorithms	default reasoning	The minimal model semantics is a natural interpretation of defaults yet it often yields a behavior that is too weak. This weakness has been traced to the inabiity of minimal models to reflect certain implicit preferences among defaults, in particular, preferences for defaults grounded on more ‘specific’ information and preferences arising in causal domains. Recently, ‘specificity’ preferences have been explained in terms of conditionals. Here we aim to explain causal preferences. We draw mainly from ideas known in Bayesian Networks to formulate and formalize two principles that explain the basic preferences that arise in causal default reasoning. We then define a semantics based on those principles and show how variations of the algorithms used for inheritance reasoning and temporal projection can be used to compute in the resulting formalism.	algorithm;bayesian network;causal filter;default logic;operational semantics;semantics (computer science)	Hector Geffner	1994			computer science;artificial intelligence;algorithm	AI	-15.131462697131012	6.133503354205553	131065
3f0498a9758cd45db9ba51f000daa9a8d64015a7	relational semantics and a relational proof system for full lambek calculus		In this paper we give relational semantics and an accompanying relational proof theory for full Lambek calculus (a sequent calculus which we denote by FL). We start with the Kripke semantics for FL as discussed in [11] and develop a second Kripke-style semantics, RelKripke semantics, as a bridge to relational semantics. The RelKripke semantics consists of a set with two distinguished elements, two ternary relations and a list of conditions on the relations. It is accompanied by a Kripke-style valuation system analogous to that in [11]. Soundness and completeness theorems with respect to FL hold for RelKripke models. Then, in the spirit of the work of Orlowska [14], [15], and Buszkowski and Orlowska [3], we develop relational logic RFL. The adjective relational is used to emphasize the fact that RFL has a semantics wherein formulas are interpreted as relations. We prove that a sequent Γ → α in FL is provable if and only if a translation, t (γ 1 ● … ● γ n ⊃ α)eυ u , has a cut-complete fundamental proof tree. This result is constructive : that is, if a cut-complete proof tree for t (γ 1 ● … ● γ n ⊃ α)eυ u is not fundamental, we can use the failed proof search to build a relational countermodel for t (γ 1 ● … ● γ n ⊃ α)eυ u and from this, build a RelKripke countermodel for γ 1 ● … ● γ n ⊃ α. These results allow us to add FL, the basic substructural logic, to the list of those logics of importance in computer science with a relational proof theory.	categorial grammar;kripke semantics;proof calculus	Wendy MacCaull	1998	J. Symb. Log.		domain relational calculus;discrete mathematics;codd's theorem;formal semantics;relational calculus;cut-elimination theorem;mathematics;proof calculus;noncommutative logic;programming language;kripke semantics;natural deduction;structural proof theory;algorithm;tuple relational calculus	Logic	-10.381827651342942	13.299735671735089	131095
1b3b39112874566fe0effa8407911f7a54720b2f	an abstract domain extending difference-bound matrices with disequality constraints	alias analysis;abstract domains;disequalities;difference bound matrices;normal form;convex set;static analysis;abstract interpretation	Knowing that two numerical variables always hold different values, at some point of a program, can be very useful, especially for analyzing aliases: if i 6= j, then A[i] and A[j] are not aliased, and this knowledge is of great help for many other program analyses. Surprisingly, disequalities are seldom considered in abstract interpretation, most of the proposed numerical domains being restricted to convex sets. In this paper, we propose to combine simple ordering properties with disequalities. “Difference-bounds matrices” (or DBMs) is a domain proposed by David Dill, for expressing relations of the form “x − y ≤ c” or “c1 ≤ x ≤ c2”. We define dDBMs (“disequalities DBM”) as conjunctions of DBMs with simple disequalities of the form “x 6= y” or “x 6= 0”. We give algorithms on dDBMs, for deciding the emptiness, computing a normal form, and performing the usual operations of an abstract domain. These algorithms have the same complexity (O(n), where n is the number of variables) than those for classical DBMs, if the variables are considered to be valued in a dense set (R or Q). In the arithmetic case, the emptiness decision is NP-complete, and other operations run in O(n).	a-normal form;abstract interpretation;algorithm;aliasing (computing);convex set;dbm;np-completeness;numerical analysis;time complexity	Mathias Péron;Nicolas Halbwachs	2007		10.1007/978-3-540-69738-1_20	alias analysis;computer science;convex set;programming language;static analysis;algorithm	AI	-9.405444363349075	17.792794914694145	131142
b8eef00373f4c236233434b2dd81b01bc7d46aa5	the inclusion-exclusion principle on the set of if-sets	inclusion exclusion principle;probability;if sets	P. Grzegorzewski [3] has worked the probability version of the inclusion-exclusion principle and made a generalization for IF-events. He had applied two versions of the generalized formula, corresponding to different t-conorms and so defined the union of IF-events. This paper contains the generalization of the Grzegorzewski theorem. We prove it for mappings from the set of IF sets to the unit interval([2], [1]). Similar generalizations are presented in [4] and [5].	bell's theorem	Jana Kelemenova	2011		10.2991/eusflat.2011.37	mathematical analysis;discrete mathematics;mathematics	ML	-8.547707271640489	12.703164434283888	131146
752908d5c0b82c7bde581e5b332c3e30dd615aac	on axiomatic characterization of information improvement due to n revisions	axiomatic;revision;theorie information;axiomatique;information theory	Abstract A characterization theorem is proved for the information improvement due to N revisions by assuming a set of five axioms.		Gur Dial	1983	Inf. Sci.	10.1016/0020-0255(83)90024-5	axiomatic system;information theory;pure mathematics;mathematics;axiom;algorithm;statistics	DB	-6.832416316320084	10.013160840142207	131175
5b88628bf9711f01e38366241044d9ccb951944a	the subtyping problem for second-order types is undecidable	second order;lenguaje programacion;soustype;subtype;programming language;desigualdad;inequality;subtyping;inegalite;mitchell system;orden 2;lambda calculus;machine pointer pile;type checking subtyping problem second order types containment relation second order polymorphic types polymorphic lambda calculus subsumption rule;ingenieria logiciel;systeme mitchell;software engineering;polymorphic lambda calculus;codificacion;stack register machine;subtipo;type checking;informatique theorique;polymorphism;type theory;coding;genie logiciel;langage programmation;lambda calculo;iron terminology;polymorphisme;polimorfismo;ordre 2;lambda calcul;subsumption;codage;computer theory;informatica teorica	Among various forms of subtyping, one that seems to be quite fundamental for the analysis of polymorphic languages is induced by the containment relation of Mitchell [6]. An expression of a universal type, say ∀ασ , can be understood as having all types that are polymorphic instances of ∀α σ . If we choose the second-order polymorphic lambda-calculus as the basic language, then (taking into account the possibility of polymorphic generalization) we may formalize the notion of containment as ∀α1 · · · ∀αn σ ∀β1 · · · ∀βm σ (ρ1/α1, . . . , ρn/αn), (1)	lambda calculus;system f;undecidable problem	Jerzy Tiuryn;Pawel Urzyczyn	2002	Inf. Comput.	10.1006/inco.2001.2950	subtyping;computer science;pure mathematics;lambda calculus;mathematics;word problem;programming language;algorithm	Logic	-13.24159000722577	17.633924974961936	131192
bc8f3a6961368f97b35fccf35d21e673b43ab98d	on the decidability of open logic	open logic;epistemic process;zhang wei 开放逻辑 可判定性 逻辑理论 证明 开放式 系统 文件 算法 on the decidability of open logic;decidability	Open logic (OL) is a noticeable logic theory dealing with the description of knowledge growth and updating, as well as the evolution of hypothesis. Up to now, however, many problems related to the proof theoretical approach of OL remain to be explored. In this paper, the typical proof theoretical problems for OL are described and the concept of open proof is defined. Two major conclusions are as follows: (i) For the consistent OL systems, the open proof problem is semi-decidable (a decision algorithm is presented). (ii) For general (normal, not necessarily consistent) OL systems, the open proof problem is not semi-decidable.	algorithm;semiconductor industry;theory (mathematical logic);undecidable problem	Wei Zhang	2009	Science in China Series F: Information Sciences	10.1007/s11432-009-0138-1	decidability;direct proof;discrete mathematics;computer science;mathematics;structural proof theory;algorithm	Theory	-10.669740656320698	14.778961024677734	131203
2de3e6d85b2e7cb41a6e87b3188b9101d147dd82	the revised report on the syntactic theories of sequential control and state	langage fonctionnel;lenguaje programacion;langage imperatif;desviacion tipica;semantica denotacional;programming language;standard deviation;reduction;equational reasoning;sistema informatico;lenguaje funcional;langage evolue;lambda calculus;computer system;raisonnement;equivalence relation;informatique theorique;denotational semantics;ecart type;razonamiento;langage programmation;lambda calculo;reduccion;lenguaje evolucionado;systeme informatique;reasoning;functional language;lambda calcul;high level language;semantique denotationnelle;computer theory;informatica teorica	The syntactic theories of control and state are conservative extensions of the λv-calculus for equational reasoning about imperative programming facilities in higher-order languages. Unlike the simple λv-calculus, the extended theories are mixtures of equivalence relations and compatible congruence relations on the term language, which significantly complicates the reasoning process. In this paper we develop fully compatible equational theories of the same imperative higher-order programming languages. The new theories subsume the original calculi of control and state and satisfy the usual Church-Rosser and Standardization Theorems. With the new calculi, equational reasoning about imperative programs becomes as simple as reasoning about functional programs. 1 The syntactic theories of control and state Most λ-calculus-based programming languages provide imperative programming facilities such as assignment statements, exceptions, and continuations. Typical examples are ML [16], Scheme [19], and Common Lisp [20]. While these additions add expressive power and increase the efficiency of programs, they also appear to invalidate the simple reduction rules and equational reasoning of the λ-calculus that make functional programming so appealing. In two previous papers [8, 9], we have shown that there are conservative extensions of Plotkin’s λv-calculus [18] for such programming languages, and that it is possible to reason about programs in extended functional languages in an equational style. The main difference between the simple lambda-calculi and its extended versions is a distinction between two classes of equations: equations for ordinary expressions and equations for whole programs. The reason for this distinction is the need to arrange the effects of assignments and jumps in the appropriate order. For example, a program like ∗Supported in part by NSF grants CCR 88-07520 and 89-17022, and DARPA/NSF grant CCR 87-20277. †Supported in part by NSF grant CCR 88-03432.	church–rosser theorem;common lisp;continuation;exception handling;expressive power (computer science);functional programming;higher-order function;higher-order programming;ibm notes;imperative programming;lambda calculus;plotkin bound;programming language;scheme;theory;turing completeness;zeller's congruence	Matthias Felleisen;Robert Hieb	1992	Theor. Comput. Sci.	10.1016/0304-3975(92)90014-7	reduction;computer science;pure mathematics;lambda calculus;mathematics;equivalence relation;programming language;standard deviation;high-level programming language;denotational semantics;reason;algorithm	PL	-13.742635357987563	17.869023723770603	131265
19dc84fe6ab5e7ce29f7a40e241701a0f8e55d51	a term of length 4 523 659 424 929	syntax;largura;theorie des ensembles;formalism;cardinal;theory of sets;syntaxe;length;arithmetique;bourbaki n;aritmetica;longueur;logical calculus;symbole;symbol;arithmetic;number;one;nombre;simbolo;un;formalisme;calcul logique;teoria de los conjuntos;numero	Bourbaki suggest that their definition of the number 1 runs to some tens of thousands of symbols. We show that that is a considerable under-estimate, the true number of symbols being that in the title, not counting 1 179 618 517 981 links between symbols that are needed to disambiguate the whole expression.		A. R. D. Mathias	2002	Synthese	10.1023/A:1020827725055	arithmetic;philosophy;mathematics;linguistics;symbol;algorithm	ML	-11.47655924126917	9.421146570097712	131320
ca2277fa36f8322cbae2f9f2a76d601b0b9290d1	capturing equilibrium models in modal logic	bimodal logic;answer set programming;intelligence artificielle;logique en informatique;apprentissage;informatique et langage;here and there models;equilibrium logic	Here-and-there models and equilibrium models were investigated as a semantical framework for answer-set programming by Pearce, Valverde, Cabalar, Lifschitz, Ferraris and others. The semantics of equilibrium logic is given in an indirect way: the notion of an equilibrium model is defined in terms of quantification over hereand-there models. We here give a direct semantics of equilibrium logic, stated for a modal language embedding the language of equilibrium logic.	answer set programming;autoepistemic logic;automated theorem proving;axiomatic system;hector levesque;kripke semantics;logic programming;method of analytic tableaux;modal logic;natural deduction;non-monotonic logic;parallels desktop for mac;polynomial;propositional variable;time complexity	Luis Fariñas del Cerro;Andreas Herzig;Ezgi Iraz Su	2014	J. Applied Logic	10.1016/j.jal.2013.12.003	modal logic;predicate logic;dynamic logic;zeroth-order logic;s5;normal modal logic;description logic;higher-order logic;horn clause;many-valued logic;intuitionistic logic;computer science;intermediate logic;artificial intelligence;answer set programming;predicate functor logic;computational logic;mathematics;logic programming;accessibility relation;logic;multimodal logic;algorithm;autoepistemic logic	AI	-14.536571452628236	12.848660421591298	131392
390c519bee11c8c42f95601fadedb1d889441ad9	"""""""everywhere"""" in predicate algebra and modal logic"""	lattice theory;logic;predicate calculus;logique propositionnelle;predicate algebra;specification language;calcul predicat;modal logic;specification languages;propositional logic;calculo predicado;logique modale;formal logic;logica modal;logica proposicional;logique formelle;everywhere operator	Abstract   The “everywhere” operator was introduced by E.W. Dijkstra and C.S. Scholten for use in reasoning about programs. The predicate calculus used by them is an algebra, rather than a logic and this appears to have caused some misunderstanding.  We present the predicate algebra of Dijkstra and Scholten in a way that we hope is comprehensible for those with a working knowledge of lattice theory. We also present propositional modal logic S5 in a way that should be comprehensible for those without a background in logic. We show that S5 is sound and complete for the propositional part of the predicate algebra with the everywhere operator. This is not new but apparently little known.	modal logic	Rutger M. Dijkstra	1996	Inf. Process. Lett.	10.1016/0020-0190(96)00055-5	modal logic;predicate logic;dynamic logic;zeroth-order logic;modal μ-calculus;discrete mathematics;higher-order logic;equational logic;term algebra;computer science;intermediate logic;predicate functor logic;first-order logic;mathematics;predicate variable;predicate transformer semantics;predicate;well-formed formula;logic;term logic;algorithm	DB	-14.382496938514716	15.789655108485128	131393
cab25fd30bc54b56cae61e863dcdaa59cd51216f	temporal obda with ltl and dl-lite	computer science and information systems	We investigate various types of query rewriting over ontologies given in the standard temporal logic LTL as well as combinations of LTL with DL-Lite logics. In particular, we consider FO(<)-rewritings that can use the temporal precedence relation, FO(<,+)-rewritings that can also employ the arithmetic predicate PLUS, and rewritings to finite automata with data given on the automaton tape.	adobe flash lite;automata theory;automaton;computation;computational logic;conjunctive normal form;dlt;description logic;descriptive complexity theory;dixon's factorization method;fo (complexity);finite-state machine;lecture notes in computer science;michael j. fischer;nondeterministic finite automaton;novena (computing platform);ontology (information science);rewriting;springer (tank);symposium on logic in computer science;temporal logic;unary operation	Alessandro Artale;Roman Kontchakov;Alisa Kovtunova;Vladislav Ryzhikov;Frank Wolter;Michael Zakharyaschev	2014			discrete mathematics;linear temporal logic;mathematics;programming language;algorithm	Logic	-14.767012120673312	14.027176189334213	131405
c328439227359222ca4ce4742d403ec10c7bf686	an explication of reasoning in multiple inheritance systems through non-monotonic horn clause logic	lenguaje programacion;representacion conocimientos;programming language;red semantica;hierarchized structure;heritage;sistema informatico;relation semantique;semantic network;relacion semantica;structure hierarchisee;computer system;intelligence artificielle;logical programming;raisonnement;reseau semantique;programmation logique;multiple inheritance;razonamiento;langage programmation;artificial intelligence;semantic relation;systeme informatique;inteligencia artificial;reasoning;knowledge representation;logique predicat;inheritance;representation connaissances;programacion logica;estructura jerarquizada	Abstract   In this paper we present a new approach to explicate the IS-A link and the inheritance of properties down through IS-A links. We introduce the syntactic category of common nouns intended to represent kinds (or prototypes) of objects. We describe two sentence-forming operations: the attribution of membership of kinds to objects or objects of a certain kind, and the attribution of properties to objects or objects of a certain kind. We then argue that the inferential behavior of sentences is different depending on how the sentence was formed. Although the attribution of membership in a kind will always hold true for any instance, the attribution of a property may be overridden. We explicate the inferential behavior of these sentences in non-monotonic logic and present the proof theory and semantics for this non-monotonic logic.	horn clause;multiple inheritance	Jeffrey J. P. Tsai;Thomas Weigert	1992	Inf. Sci.	10.1016/0020-0255(92)90073-H	natural language processing;knowledge representation and reasoning;multiple inheritance;computer science;artificial intelligence;machine learning;mathematics;semantic network;reason;algorithm	AI	-17.701966267735425	10.305726364682366	131406
afcef18f0cfdbdaf06f2eefdf7cd83da79da7a72	building a non-monotonic default theory in gcfl graph-version of rdf		The aim describes the idea of graph-based representation of clauses. This approach follows the Richards idea of graph-based clausal form knowledge representation. Moreover, it enabled to build up the graph-based formal system GCFL (Graph-based Clausal Form Logic) that cannot only illustrate knowledge bases graphically, but also allows us to obtain consequents of a knowledge base in a special graph-based way. The article continues the idea by creation of a graph-based formal system of generating revisable theories following the known Reiter’s default principle of building non-monotonic theories.		Alena Lukasová;Martin Zácek;Marek Vajgl	2014		10.1007/978-3-319-06740-7_38	rdf;discrete mathematics;knowledge representation and reasoning;monotonic function;knowledge base;mathematics;conjunctive normal form;formal system;graph	NLP	-11.935021417158096	10.05350028556257	131488
8adffdf6efc8557dd516d064a896f016b35c029f	temporal traveling salesman problem - in a logic- and graph theory-based depiction		In this paper, a new temporal extension of Traveling Salesman Problem (TSP) – as an old optimization problem – is proposed. This proposal stems from a need to elucidate TSP not only as an optimization problem, but also as a potentially paradigmatic problem for the subject specification of temporal planning. This new Temporal Traveling Salesman Problem is described in two ways – in the graph-based depiction and in terms of logic to be interpreted later by the so-called fibred semantics.	graph theory;travelling salesman problem	Krystian Jobczyk;Piotr Wisniewski;Antoni Ligeza	2018		10.1007/978-3-319-91262-2_48	discrete mathematics;computer science;artificial intelligence;machine learning;graph theory;depiction;travelling salesman problem;semantics;graph;optimization problem	EDA	-15.736479655409495	9.779710082717974	131494
22827521f5fb1ab64a84c8f68e43020f8f555f14	reasoning about conditions and exceptions to laws in regulatory conformance checking	selected works;linear temporal logic;bepress;default logic	This paper considers the problem of checking whether an organization conforms to a body of regulation. Conformance is cast as a trace checking question – the regulation is represented in a logic that is evaluated against an abstract trace or run representing the operations of an organization. We focus on a problem in designing a logic to represent regulation. A common phenomenon in regulatory texts is for sentences to refer to others for conditions or exceptions. We motivate the need for a formal representation of regulation to accommodate such references between statements. We then extend linear temporal logic to allow statements to refer to others. The semantics of the resulting logic is defined via a combination of techniques from Reiter's default logic and Kripke's theory of truth. Comments Postprint version. Presented at the Ninth International Conference on Deontic Logic in Computer Science, (DEON'08), July, 2008. This conference paper is available at ScholarlyCommons: http://repository.upenn.edu/cis_papers/371 Reasoning about Conditions and Exceptions to Laws in Regulatory Conformance Checking Nikhil Dinesh, Aravind Joshi, Insup Lee, and Oleg Sokolsky Department of Computer Science University of Pennsylvania Philadelphia, PA 19104-6389, USA {nikhild,joshi,lee,sokolsky}@seas.upenn.edu Abstract. This paper considers the problem of checking whether an orga nization conforms to a body of regulation. Conformance is cast as a trace checking question – the regulation is represented in a logic that is ev aluated against an abstract trace or run representing the operations of an organi zation. We focus on a problem in designing a logic to represent regulation. A common phenomenon in regulatory texts is for sentences to r efer to others for conditions or exceptions. We motivate the need for a formal r epresentation of regulation to accomodate such references between statemen ts. We then extend linear temporal logic to allow statements to refer to others . The semantics of the resulting logic is defined via a combination of techniques fr om Reiter’s default logic and Kripke’s theory of truth. This paper considers the problem of checking whether an orga nization conforms to a body of regulation. Conformance is cast as a trace checking question – the regulation is represented in a logic that is ev aluated against an abstract trace or run representing the operations of an organi zation. We focus on a problem in designing a logic to represent regulation. A common phenomenon in regulatory texts is for sentences to r efer to others for conditions or exceptions. We motivate the need for a formal r epresentation of regulation to accomodate such references between statemen ts. We then extend linear temporal logic to allow statements to refer to others . The semantics of the resulting logic is defined via a combination of techniques fr om Reiter’s default logic and Kripke’s theory of truth.	conformance testing;default logic;deontic logic;exception handling;linear temporal logic;logic in computer science	Nikhil Dinesh;Aravind K. Joshi;Insup Lee;Oleg Sokolsky	2008		10.1007/978-3-540-70525-3_10	predicate logic;dynamic logic;zeroth-order logic;linear temporal logic;description logic;higher-order logic;temporal logic;interval temporal logic;computer science;artificial intelligence;theoretical computer science;bunched logic;default logic;substructural logic;multimodal logic;algorithm;philosophy of logic;temporal logic of actions;autoepistemic logic	Logic	-18.69600704870451	15.52744366086165	131538
